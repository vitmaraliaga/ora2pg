-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = jairo,pkg_planning,public;




CREATE OR REPLACE PROCEDURE jairo.pkg_planning_sp_actividad_asiento (P_ID_ACTIVIDAD bigint,P_ID_DINAMICA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE


        L_ID_DEPTO_COMPRA varchar(20);
        L_ID_ASIENTO bigint;
        L_ID_RESTRICCION varchar(50);
        L_ID_CUENTAAASI varchar(10);
        L_ID_CTACTE varchar(20);
        L_DC varchar(1);
        L_DESTINO varchar(10);
        L_ORIGEN varchar(10);
        L_ID_INDICADOR varchar(35);
        L_UNICO varchar(1);
        L_UNICOCTACTE varchar(1);
        L_PORCENTAJE decimal(10,2);
        L_DESCRIPCION varchar(255);
        L_ID_CASIENTO varchar(50);
        L_ID_FONDO varchar(50);
        L_BASE decimal(10,2);
        L_IGV decimal(10,2);
        L_IMPORTE decimal(10,2);
        L_IMPORTE_ME decimal(10,2);
        P_IMPORTE decimal(10,2);
        P_IMPORTE_ME decimal(10,2);
        L_DEPTO varchar(10);
        L_CONT bigint;
        L_AGRUPA varchar(1) :='N';
        L_SERIE varchar(4);
        L_NUMERO varchar(12);
        L_CORRELATIVO varchar(20);
        l_EDITABLE varchar(1) :='N';
        L_NRO_ASIENTO bigint;
        l_ctas varchar(200);
        l_ctates varchar(200);
        --l_actas tablastring;
        --l_actates tablastring;
        l_buscar bigint;
        l_unicoctated varchar(1);
        L_CANT bigint :=0;

        casi CURSOR FOR
        SELECT
                a.ID_ASIENTO,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,round((a.PORCENTAJE*100)::numeric,2),a.NOMBRE,a.AGRUPA,a.ID_FONDO,a.NRO_ASIENTO
        FROM ELISEO.CONTA_DINAMICA_ASIENTO a, ELISEO.CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =P_ID_DINAMICA 
        ORDER BY a.NRO_ASIENTO,a.DC desc;

    
BEGIN
        P_ERROR :=0;
        IF P_ERROR = 0 THEN

            SELECT PRESUPUESTO INTO STRICT L_IMPORTE
            FROM SGE_ACTIVIDAD 
            WHERE ID_ACTIVIDAD = P_ID_ACTIVIDAD;

            DELETE FROM SGE_ASIENTO 
            WHERE ID_ACTIVIDAD = P_ID_ACTIVIDAD;

            OPEN casi;
                FETCH casi INTO L_ID_ASIENTO,L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC,L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA,L_ID_FONDO,L_NRO_ASIENTO;
                WHILE casi%FOUND LOOP
                    L_DEPTO:=null;
                    L_ID_CTACTE:=null;

                    if L_UNICO='U' then
                      SELECT ID_DEPTO into STRICT L_DEPTO FROM ELISEO.CONTA_DINAMICA_DEPTO WHERE id_asiento=L_ID_ASIENTO;
                    elsif (L_UNICO='X') then
                        IF L_DC = 'C' THEN
                            L_DEPTO := L_DESTINO;
                        ELSE
                            L_DEPTO := L_ORIGEN;
                        END IF;
                    elsif L_UNICO='S' THEN  -- Si es sesiÃ³n
                        L_DEPTO := L_ID_DEPTO_COMPRA;
                    elsif L_UNICO='E' THEN  -- Si es ESCUELA
                        SELECT B.ID_DEPTO INTO STRICT L_DEPTO
                        FROM SGE_MAPA A JOIN ELISEO.ORG_SEDE_AREA B ON A.ID_SEDEAREA = B.ID_SEDEAREA
                        WHERE A.ID_MAPA IN (
                            SELECT P.ID_MAPA FROM SGE_ACTIVIDAD X JOIN SGE_MAPA_INICIATIVA Y ON X.ID_MAPA_INICIATIVA = Y.ID_MAPA_INICIATIVA
                            JOIN SGE_MAPA_OBJETIVO Z ON Y.ID_MAPA_OBJETIVO = Z.ID_MAPA_OBJETIVO
                            JOIN SGE_MAPA_DETALLE P ON Z.ID_DETALLE = P.ID_DETALLE
                            WHERE X.ID_ACTIVIDAD = P_ID_ACTIVIDAD
                        );
                    end if;

                    if L_UNICOCTACTE='U' then
                        SELECT  count(1) into STRICT L_CONT FROM ELISEO.CONTA_DINAMICA_CTA_CTE WHERE id_asiento = L_ID_ASIENTO;
                        if L_CONT>0 then
                            SELECT ID_CTACTE into STRICT L_ID_CTACTE FROM ELISEO.CONTA_DINAMICA_CTA_CTE WHERE id_asiento = L_ID_ASIENTO;
                        end if;
                    elsif (l_unicoctated='M') then
                        SELECT position('|' in l_ctates) into STRICT l_buscar;
                        if l_buscar>0 then
                            /*select ELISEO.FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                            select ELISEO.FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                            select ELISEO.FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,L_ID_CUENTAAASI) into L_ID_CTACTE from dual;
                        else*/
                            L_ID_CTACTE:=l_ctates;
                        end if;
                    end if;

                    SELECT CASE L_ID_INDICADOR WHEN 'IMPORTE' then (L_IMPORTE)--*(L_PORCENTAJE/100)
                          WHEN 'BASE' then (L_BASE)--*(L_PORCENTAJE/100)
                          WHEN 'IGV' then (L_IGV)--*(L_PORCENTAJE/100)
                          ELSE
                          0
                          END INTO STRICT P_IMPORTE
;
                    SELECT CASE WHEN L_ID_INDICADOR = 'IMPORTE' AND L_DC = 'D' then
                            'S'
                          WHEN L_ID_INDICADOR = 'BASE' AND L_DC = 'D' then
                            'S'
                          WHEN L_ID_INDICADOR = 'IGV' then
                               'N'
                          ELSE
                          'N'
                          END INTO STRICT l_EDITABLE
;
                    IF L_DC='C' THEN
                        P_IMPORTE:=P_IMPORTE*(1);
                        P_IMPORTE_ME:=P_IMPORTE_ME*(1);
                    ELSE
                        P_IMPORTE := P_IMPORTE;
                        P_IMPORTE_ME := P_IMPORTE_ME;
                    END IF;

                    IF P_IMPORTE<>0 THEN
                        INSERT INTO SGE_ASIENTO( ID_ACTIVIDAD,ID_FONDO,ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_DEPTO,DC,IMPORTE
                        ) VALUES (P_ID_ACTIVIDAD,L_ID_FONDO,L_ID_CUENTAAASI,L_ID_RESTRICCION,L_ID_CTACTE,L_DEPTO,L_DC,P_IMPORTE);
                    END IF;

                FETCH casi INTO L_ID_ASIENTO,L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC,L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA,L_ID_FONDO,L_NRO_ASIENTO;

            END LOOP;
            CLOSE casi;

            P_ERROR :=0;
        END IF;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE jairo.pkg_planning_sp_actividad_asiento (P_ID_ACTIVIDAD bigint,P_ID_DINAMICA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
