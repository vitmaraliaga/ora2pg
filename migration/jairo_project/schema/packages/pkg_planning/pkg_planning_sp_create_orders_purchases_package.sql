-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = jairo,pkg_planning,public;




CREATE OR REPLACE PROCEDURE jairo.pkg_planning_sp_create_orders_purchases (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_AREAORIGEN bigint,P_ID_PBANCARIA bigint,P_MOTIVO text,P_COMENTARIO text, P_ID_MONEDA bigint,P_ID_PROVEEDOR bigint,P_ID_FUNCIONARIO bigint,P_ID_ACTIVIDAD bigint,P_TRAMITE_PAGO text,P_SERIE text,P_NUMERO text,P_IMPORTE bigint,P_IMPORTE_ME bigint,P_ID_VALE bigint, L_ID_PEDIDO OUT bigint,L_ID_PCOMPRA OUT bigint,L_ERROR OUT bigint,L_MSGERROR OUT text) AS $body$
DECLARE


            --L_ID_PEDIDO NUMBER;
            --L_ID_PCOMPRA NUMBER;
            L_ID_TIPOPEDIDO bigint := 7;
            L_NUMERO varchar(10);
            L_ESTADO varchar(1) := '0';
            L_ID_PROCESO bigint := 6;
            L_DETALLE varchar(50) := 'Proceso de Compras';
            L_ID_REGISTRO bigint;
            L_CODIGO varchar(1) := '7';
            L_IP varchar(50);
            --L_ERROR NUMBER :=0;
            --L_MSGERROR VARCHAR2(200);
            L_LLAVE varchar(10) :='FPP3';
            L_ID_PBANCARIA bigint;
            L_ID_FUNCIONARIO bigint;
            L_ID_VALE bigint;

            L_ID_DETALLE bigint;
            L_ID_PASO bigint;
            L_ID_PASO_NEXT bigint;
            L_CANT bigint :=1;

            C_PASOS CURSOR FOR
            SELECT A.ID_PASO,A.ID_PASO_NEXT 
            FROM ELISEO.PROCESS_FLUJO A JOIN ELISEO.PROCESS_PASO B ON A.ID_PROCESO = B.ID_PROCESO AND A.ID_PASO = B.ID_PASO
            WHERE A.ID_PROCESO = L_ID_PROCESO
            AND B.ID_TIPOPASO IN (3,1,2)
            AND B.NOMBRE IN ('Inicio','OPTIONS','Pre-Provision 3')
            AND A.TAG IN ('-','Comprobante','Autorizacion') 
            ORDER BY A.ID_PASO;

        
BEGIN
        
            SELECT LPAD(coalesce(MAX((NUMERO)::numeric ),0)+1,8,0) INTO STRICT L_NUMERO
            FROM ELISEO.PEDIDO_REGISTRO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_TIPOPEDIDO BETWEEN 7 AND 11;

            IF P_ID_PBANCARIA = 0 THEN
                L_ID_PBANCARIA := NULL;
            ELSE
                L_ID_PBANCARIA := P_ID_PBANCARIA;
            END IF;

            IF P_ID_FUNCIONARIO = 0 THEN
                L_ID_FUNCIONARIO := NULL;
            ELSE
                L_ID_FUNCIONARIO := P_ID_FUNCIONARIO;
            END IF;

            IF P_ID_VALE = 0 THEN
                L_ID_VALE := NULL;
            ELSE
                L_ID_VALE := P_ID_VALE;
            END IF;

            INSERT INTO ELISEO.PEDIDO_REGISTRO(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_TIPOPEDIDO,ID_AREAORIGEN,ID_PBANCARIA,NUMERO,FECHA,FECHA_PEDIDO,MOTIVO,COMENTARIO,ESTADO) 
            VALUES (P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,L_ID_TIPOPEDIDO,P_ID_AREAORIGEN,L_ID_PBANCARIA,L_NUMERO,clock_timestamp(),clock_timestamp(),P_MOTIVO,P_COMENTARIO,L_ESTADO) RETURNING ID_PEDIDO INTO L_ID_PEDIDO;

            SELECT MAX(ID_PCOMPRA)+1 INTO STRICT L_ID_PCOMPRA FROM ELISEO.PEDIDO_COMPRA;

            INSERT INTO ELISEO.PEDIDO_COMPRA(ID_PCOMPRA,ID_PEDIDO,ID_MONEDA,ID_PROVEEDOR,ID_PERSONA,ID_ACTIVIDAD,TRAMITE_PAGO,FECHA,SERIE,NUMERO,IMPORTE,IMPORTE_ME,ESTADO,ID_VALE) 
            VALUES (L_ID_PCOMPRA,L_ID_PEDIDO,P_ID_MONEDA,P_ID_PROVEEDOR,L_ID_FUNCIONARIO,P_ID_ACTIVIDAD,P_TRAMITE_PAGO,clock_timestamp(),P_SERIE,P_NUMERO,P_IMPORTE,P_IMPORTE_ME,L_ESTADO,L_ID_VALE) RETURNING ID_PCOMPRA INTO L_ID_PCOMPRA;

            --SELECT NVL(MAX(ID_REGISTRO),0)+1 INTO L_ID_REGISTRO FROM ELISEO.PROCESS_RUN;
            INSERT INTO ELISEO.PROCESS_RUN(ID_PROCESO,ID_OPERACION,FECHA,DETALLE,ESTADO) VALUES (L_ID_PROCESO,L_ID_PEDIDO,clock_timestamp(),L_DETALLE,L_ESTADO) RETURNING ID_REGISTRO INTO L_ID_REGISTRO;

            
            OPEN C_PASOS;
                FETCH C_PASOS INTO L_ID_PASO,L_ID_PASO_NEXT;
                WHILE C_PASOS%FOUND LOOP
                    L_ESTADO := '1';
                    IF L_CANT = 3 THEN
                        L_ESTADO := '0';
                    END IF;
                    --SELECT NVL(MAX(ID_DETALLE),0)+1 INTO L_ID_DETALLE FROM ELISEO.PROCESS_PASO_RUN;
                    INSERT INTO ELISEO.PROCESS_PASO_RUN(ID_REGISTRO,ID_PASO,ID_PERSONA,FECHA,DETALLE,NUMERO,REVISADO,IP,ESTADO,ID_PASO_NEXT) 
                    VALUES (L_ID_REGISTRO,L_ID_PASO,P_ID_PERSONA,clock_timestamp(),L_DETALLE,'','0','',L_ESTADO,L_ID_PASO_NEXT);
                    L_CANT := L_CANT+1;
                    FETCH C_PASOS INTO L_ID_PASO,L_ID_PASO_NEXT;
                END LOOP;
            CLOSE C_PASOS;

            UPDATE ELISEO.PROCESS_RUN SET ID_PASO_ACTUAL = L_ID_PASO WHERE ID_REGISTRO = L_ID_REGISTRO;

            ELISEO.PKG_PROCESS.SP_PROCESO_PASO_RUN_NEXT(L_CODIGO,L_ID_PEDIDO,P_ID_PERSONA,P_ID_ENTIDAD,L_DETALLE,L_IP,L_ERROR,L_MSGERROR,L_LLAVE);

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE jairo.pkg_planning_sp_create_orders_purchases (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_AREAORIGEN bigint,P_ID_PBANCARIA bigint,P_MOTIVO text,P_COMENTARIO text, P_ID_MONEDA bigint,P_ID_PROVEEDOR bigint,P_ID_FUNCIONARIO bigint,P_ID_ACTIVIDAD bigint,P_TRAMITE_PAGO text,P_SERIE text,P_NUMERO text,P_IMPORTE bigint,P_IMPORTE_ME bigint,P_ID_VALE bigint, L_ID_PEDIDO OUT bigint,L_ID_PCOMPRA OUT bigint,L_ERROR OUT bigint,L_MSGERROR OUT text) FROM PUBLIC;
