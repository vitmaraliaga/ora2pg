-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = moises,registro_persona,public;




CREATE OR REPLACE PROCEDURE moises.registro_persona_sp_registro_persona (P_ID_PERSONA bigint,P_NOMBRE text, P_PATERNO text, P_MATERNO text,P_SEXO text,P_FEC_NACIMIENTO timestamp(0),P_ID_TIPOPAIS bigint, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text,P_TELEFONO text, P_CELULAR text,P_CORREO text,P_ID_SITUACION_EDUCATIVO text,P_ID_TIPOESTADOCIVIL bigint,P_ES_DOCENTE CHAR, P_ERROR OUT bigint,P_MSGERROR out text,P_ID_PERSONA_NEW out bigint) AS $body$
DECLARE

    l_id_persona bigint;
    l_error bigint:=0;
    l_msgerror varchar(200):='';
    --,P_ERROR OUT numeric,P_MSGERROR out varchar
    l_contar bigint;
    l_id_telefono bigint;
    l_id_virtual bigint;

BEGIN
  
    

    if P_ID_PERSONA=0 then
    
      select count(*) into STRICT l_contar from persona_natural where ID_TIPODOCUMENTO= P_ID_TIPODOCUMENTO and NUM_DOCUMENTO= P_NUM_DOCUMENTO;

      if l_contar>0 then
       l_error:=1;
       l_msgerror:='El tipo de documento y n√∫mero ya esta registrado';
--        GOTO salida_final;
      end if;

      select coalesce(max(id_persona),0) +1 into STRICT l_id_persona from persona;

      --insert into persona(id_persona,nombre,paterno,materno) values(l_id_persona,P_NOMBRE,P_PATERNO,P_MATERNO);
        INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE,
                  PATERNO,
                  MATERNO
              )VALUES (
                  l_id_persona,
                  P_NOMBRE,
                  P_PATERNO,
                  P_MATERNO
          )returning ID_PERSONA INTO l_id_persona;

     else
      update persona set nombre=P_NOMBRE,paterno=P_PATERNO,materno=P_MATERNO where id_persona=P_ID_PERSONA;
      l_id_persona:=P_ID_PERSONA;
     end if;


     
     select count(*) into STRICT l_contar from persona_natural where id_persona=l_id_persona;

     if l_contar = 0 then
        insert into persona_natural(
            ID_PERSONA,
            SEXO,
            FEC_NACIMIENTO,
            ID_TIPOPAIS,
            ID_TIPODOCUMENTO,
            NUM_DOCUMENTO,
            TELEFONO,
            CELULAR,
            CORREO,
            ID_SITUACION_EDUCATIVO,
            ID_TIPOESTADOCIVIL,
            ES_DOCENTE
        )
        values (
            l_id_persona,
            P_SEXO,
            P_FEC_NACIMIENTO,
            P_ID_TIPOPAIS,
            P_ID_TIPODOCUMENTO,
            P_NUM_DOCUMENTO,
            P_TELEFONO,
            P_CELULAR,
            P_CORREO,
            P_ID_SITUACION_EDUCATIVO,
            P_ID_TIPOESTADOCIVIL,
            P_ES_DOCENTE
        );
     else
        update persona_natural set  SEXO = P_SEXO,
        FEC_NACIMIENTO=P_FEC_NACIMIENTO,
        ID_TIPOPAIS=P_ID_TIPOPAIS,
        ID_TIPODOCUMENTO=P_ID_TIPODOCUMENTO,
        NUM_DOCUMENTO=P_NUM_DOCUMENTO, 
        TELEFONO=P_TELEFONO, 
        CELULAR=P_CELULAR,
        CORREO=P_CORREO,
        ES_DOCENTE = P_ES_DOCENTE
       WHERE ID_PERSONA=l_id_persona;

     end if;

    
    
    --VERIFICAR TIPO DE DOCUMENTO
      select count(*) into STRICT l_contar from persona_documento where id_persona=l_id_persona and ID_TIPODOCUMENTO=P_ID_TIPODOCUMENTO and NUM_DOCUMENTO=P_NUM_DOCUMENTO;

      if l_contar=0 then
        insert into PERSONA_DOCUMENTO(
          ID_PERSONA ,
          ID_TIPODOCUMENTO,
          NUM_DOCUMENTO,
          ES_ACTIVO
        )values (
          l_id_persona,
          P_ID_TIPODOCUMENTO,
          P_NUM_DOCUMENTO,
          1
        );
      end if;

      if (P_ID_SITUACION_EDUCATIVO IS NOT NULL AND P_ID_SITUACION_EDUCATIVO::text <> '') then
        update persona_natural set
        ID_SITUACION_EDUCATIVO=P_ID_SITUACION_EDUCATIVO
       WHERE ID_PERSONA=l_id_persona;
      end if;

      if (P_ID_TIPOESTADOCIVIL IS NOT NULL AND P_ID_TIPOESTADOCIVIL::text <> '') then
        update persona_natural set  
        ID_TIPOESTADOCIVIL = P_ID_TIPOESTADOCIVIL
       WHERE ID_PERSONA=l_id_persona;
      end if;

      --verifica persona telefono
      if (P_CELULAR IS NOT NULL AND P_CELULAR::text <> '') then
        select count(*) into STRICT l_contar from PERSONA_TELEFONO where id_persona=l_id_persona and ID_TIPOTELEFONO=5 and NUM_TELEFONO=P_CELULAR;

        if l_contar=0 then
          select coalesce(max(id_telefono),0)+1 into STRICT l_id_telefono from  PERSONA_TELEFONO where id_persona=l_id_persona;
          insert into PERSONA_TELEFONO(
            ID_TELEFONO,
            ID_PERSONA,
            ID_TIPOTELEFONO,
            NUM_TELEFONO,
            ES_ACTIVO,
            ES_PRIVADO
          )values (
            l_id_telefono,
            l_id_persona,
            5,
            P_CELULAR,
            1,
            0
            );
        end if;
    end if;
    --verifica correo personal
    if (P_CORREO IS NOT NULL AND P_CORREO::text <> '') then
        select count(*) into STRICT l_contar from PERSONA_VIRTUAL where id_persona=l_id_persona and ID_TIPOVIRTUAL=1 and lower(DIRECCION)=lower(P_CORREO);

        if l_contar=0 then
          select coalesce(max(ID_VIRTUAL),0)+1 into STRICT l_id_virtual from  PERSONA_VIRTUAL where id_persona=l_id_persona;
          insert into PERSONA_VIRTUAL(
            ID_VIRTUAL,
            ID_PERSONA,
            ID_TIPOVIRTUAL,
            DIRECCION,
            ES_ACTIVO
          )values (
            l_id_virtual,
            l_id_persona,
            1,
            P_CORREO,
            1
          );
        end if;
    end if;

--     <<salida_final>>
     
     P_ID_PERSONA_NEW :=l_id_persona;

     P_ERROR:=l_error;
     P_MSGERROR:= l_msgerror;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE moises.registro_persona_sp_registro_persona (P_ID_PERSONA bigint,P_NOMBRE text, P_PATERNO text, P_MATERNO text,P_SEXO text,P_FEC_NACIMIENTO timestamp(0),P_ID_TIPOPAIS bigint, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text,P_TELEFONO text, P_CELULAR text,P_CORREO text,P_ID_SITUACION_EDUCATIVO text,P_ID_TIPOESTADOCIVIL bigint,P_ES_DOCENTE CHAR, P_ERROR OUT bigint,P_MSGERROR out text,P_ID_PERSONA_NEW out bigint) FROM PUBLIC;
