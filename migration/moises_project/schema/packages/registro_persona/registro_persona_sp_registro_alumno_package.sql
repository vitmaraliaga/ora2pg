-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = moises,registro_persona,public;




CREATE OR REPLACE PROCEDURE moises.registro_persona_sp_registro_alumno (P_ID_PERSONA bigint,P_NOMBRE text, P_PATERNO text, P_MATERNO text, P_TIPO text, P_CODIGO out text,P_EMAIL out text, P_REG_ALUMNO out bigint) AS $body$
DECLARE


    cod_acad varchar(100);
    cod_univ varchar(12);

    cont_exi bigint;
    reg_alumn bigint;
    has_cod bigint;
    has_uni bigint;
    has_dbl bigint;
    has_mail bigint;

    n_email varchar(200):='';

    
BEGIN
    
        select count(*) into STRICT has_cod from moises.persona where id_persona = P_ID_PERSONA and (codigo IS NOT NULL AND codigo::text <> '');

        if has_cod = 0 then
            -- select david.ft_new_codigo_acad(P_ID_PERSONA) into STRICT cod_acad;
            update moises.persona set codigo=cod_acad where id_persona=P_ID_PERSONA;
        else
            select codigo into STRICT cod_acad from moises.persona where id_persona = P_ID_PERSONA;
        end if;

        select count(*) into STRICT has_uni from moises.persona_natural_alumno where id_persona = P_ID_PERSONA and (codigo IS NOT NULL AND codigo::text <> '');

        if has_uni = 0 then
            if P_TIPO = '1' then
                -- select david.ft_max_codigo(1) into STRICT cod_univ;
            else
                -- select david.ft_max_codigo_noacad(1) into STRICT cod_univ;
            end if;
        else
            select codigo into STRICT cod_univ from moises.persona_natural_alumno where id_persona = P_ID_PERSONA;
        end if;

        select count(*) into STRICT cont_exi from moises.persona_natural_alumno where id_persona = P_ID_PERSONA;

        if cont_exi = 0 then
            insert into moises.persona_natural_alumno(
                id_persona,
                id_acad,
                codigo
            ) values (
                P_ID_PERSONA,
                cod_acad,
                cod_univ
            );
            reg_alumn := 1;
        else
            update moises.persona_natural_alumno set
                id_acad = cod_acad,
                codigo = cod_univ
            where id_persona = P_ID_PERSONA;
            reg_alumn := 0;
        end if;
        /*
        select count(*) into has_dbl from DATOS_PERSONALES@DBL_NOE where CODIGO_PERSONAL = cod_acad;
        
        if has_dbl = 0 then
            INSERT INTO DATOS_PERSONALES@DBL_NOE(
                CODIGO_PERSONAL,
                DATO_APELLIDO_PATERNO,
                DATO_APELLIDO_MATERNO,
                DATO_NOMBRES,
                DOCUMENTOS_NACIONALIDAD,
                DOMICILIO_DIRECCION,
                DOCUMENTOS_CODUNIV
            ) VALUES (
                cod_acad,
                P_PATERNO,
                P_MATERNO,
                P_NOMBRE,
                'PE',
                '.',
                cod_univ
            );
        else
            UPDATE DATOS_PERSONALES@DBL_NOE set
                DOCUMENTOS_CODUNIV = cod_univ,
                DATO_APELLIDO_PATERNO = P_PATERNO,
                DATO_APELLIDO_MATERNO = P_MATERNO,
                DATO_NOMBRES = P_NOMBRE
            where  CODIGO_PERSONAL = cod_acad;
        end if;
        */
        -- select count(*) into STRICT has_mail from eliseo.users where id=P_ID_PERSONA;
        if has_mail = 0 then
            n_email:='';
            -- select david.ft_newformat_users(P_ID_PERSONA) into STRICT n_email;
        else
            -- select email into STRICT n_email from eliseo.users where id=P_ID_PERSONA;
        end if;

        P_REG_ALUMNO:=reg_alumn;
        P_EMAIL :=n_email;
        P_CODIGO := cod_univ;


    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE moises.registro_persona_sp_registro_alumno (P_ID_PERSONA bigint,P_NOMBRE text, P_PATERNO text, P_MATERNO text, P_TIPO text, P_CODIGO out text,P_EMAIL out text, P_REG_ALUMNO out bigint) FROM PUBLIC;
