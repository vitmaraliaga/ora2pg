-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = moises,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE                                                                        PERSONA_TRABAJADOR AS 

      -- PROCEDIMIENTO ENCARGADOR DE DE REGISTRAR LAS TABLAS DE PERSOSNA, PERSONA_NATURAL Y PERSONA_NATURAL_TRABAJADOR
      PROCEDURE SP_DATOS_PERSONALES(P_ID_PERSONA NUMBER, P_NOMBRE VARCHAR2, P_PATERNO VARCHAR2, P_MATERNO VARCHAR2,P_SEXO VARCHAR2,P_FEC_NACIMIENTO DATE,P_ID_TIPOESTADOCIVIL NUMBER,
      P_ID_TIPOPAIS NUMBER,P_ID_UBIGEO NUMBER,P_ID_TIPODOCUMENTO NUMBER, P_NUM_DOCUMENTO VARCHAR2, P_FEC_CADUCIDAD DATE, P_ID_TIPOSANGRE NUMBER,
      P_TELEFONO VARCHAR2, P_CELULAR VARCHAR2,P_CORREO VARCHAR2,P_CORREO_INST VARCHAR2, P_IDTIPORELIGION IN NUMBER,
      P_ID_IGLESIA IN VARCHAR2, P_FECHA_BAUTIZO IN DATE, P_TIENE_CARGO IN VARCHAR2, P_CARGO_IGLESIA IN VARCHAR2, P_ID_TIPOAUTORIDADIGLESIA IN NUMBER, P_NOMBRE_AUTORIDAD IN VARCHAR2,
      P_TLF_AUTORIDAD IN VARCHAR2,P_UNAPELLIDO IN VARCHAR2,P_ID_TIPO_IDENTIDAD_ETNICA NUMBER,P_EMERGENCIA_PERSONA VARCHAR2,P_EMERGENCIA_TLF VARCHAR2,P_FECHA_INGRESO VARCHAR2,P_ERROR OUT number,
      P_MSGERROR out varchar2,P_ID_PERSONA_NEW out NUMBER
      );
    
        -- PROCEDIMIENTO ENCARGADOR DE ACUALIZAR LAS TABLAS DE PERSONA_NATURAL Y PERSONA_NATURAL_TRABAJADOR
      PROCEDURE SP_DATOS_ACADEMICO_SOCIAL(P_ID_PERSONA NUMBER,P_ID_SITUACION_EDUCATIVO IN VARCHAR2, P_EDUCACION_PERU IN VARCHAR2, P_ID_REGIMEN_INSTITUCION IN VARCHAR2, P_ID_TIPO_INSTITUCION IN NUMBER,
      P_ID_INSTITUICION IN NUMBER, P_ID_CARRERA_PROFESIONAL IN NUMBER, P_ANHO_EGRESO IN VARCHAR2, P_COD_UNIVERSITARIO IN VARCHAR2,
      P_ERROR OUT number,P_MSGERROR out varchar2);

END PERSONA_TRABAJADOR;


CREATE OR REPLACE PACKAGE BODY                                                                                                    PERSONA_TRABAJADOR AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  PROCEDURE SP_DATOS_PERSONALES(
  P_ID_PERSONA NUMBER, 
  P_NOMBRE VARCHAR2, 
  P_PATERNO VARCHAR2, 
  P_MATERNO VARCHAR2,
  P_SEXO VARCHAR2,
  P_FEC_NACIMIENTO DATE,
  P_ID_TIPOESTADOCIVIL NUMBER,
  P_ID_TIPOPAIS NUMBER,
  P_ID_UBIGEO NUMBER,
  P_ID_TIPODOCUMENTO NUMBER, 
  P_NUM_DOCUMENTO VARCHAR2, 
  P_FEC_CADUCIDAD DATE, 
  P_ID_TIPOSANGRE NUMBER,
  P_TELEFONO VARCHAR2, 
  P_CELULAR VARCHAR2,
  P_CORREO VARCHAR2,
  P_CORREO_INST VARCHAR2,
  P_IDTIPORELIGION NUMBER,
  P_ID_IGLESIA VARCHAR2, 
  P_FECHA_BAUTIZO DATE, 
  P_TIENE_CARGO VARCHAR2, 
  P_CARGO_IGLESIA VARCHAR2, 
  P_ID_TIPOAUTORIDADIGLESIA NUMBER, 
  P_NOMBRE_AUTORIDAD VARCHAR2,
  P_TLF_AUTORIDAD VARCHAR2,
  P_UNAPELLIDO VARCHAR2,
  P_ID_TIPO_IDENTIDAD_ETNICA NUMBER,
  P_EMERGENCIA_PERSONA VARCHAR2,
  P_EMERGENCIA_TLF VARCHAR2,
  P_FECHA_INGRESO VARCHAR2,
  P_ERROR OUT number,P_MSGERROR out varchar2,P_ID_PERSONA_NEW out NUMBER
  ) IS
  l_id_persona number;
  l_error number:=0;
  l_msgerror varchar2(200):='';
  l_contar number;
  l_id_telefono number;
  l_id_virtual number;
  
  BEGIN
     
        update persona set nombre=P_NOMBRE,paterno=P_PATERNO,materno=P_MATERNO,unapellido=P_UNAPELLIDO where id_persona=P_ID_PERSONA;
        l_id_persona:=P_ID_PERSONA;
     
        update persona_natural set
          SEXO                          =   P_SEXO,
          FEC_NACIMIENTO                =   P_FEC_NACIMIENTO,
          ID_TIPOESTADOCIVIL            =   P_ID_TIPOESTADOCIVIL,
          ID_TIPOPAIS                   =   P_ID_TIPOPAIS,
          ID_UBIGEO                     =   P_ID_UBIGEO,
          ID_TIPODOCUMENTO              =   P_ID_TIPODOCUMENTO, 
          NUM_DOCUMENTO                 =   P_NUM_DOCUMENTO, 
          FEC_CADUCIDAD                 =   P_FEC_CADUCIDAD, 
          TELEFONO                      =   P_TELEFONO, 
          CELULAR                       =   P_CELULAR,
          CORREO                        =   P_CORREO,
          CORREO_INST                   =   P_CORREO_INST,
          ID_TIPORELIGION               =   P_IDTIPORELIGION,
          ID_IGLESIA                    =   P_ID_IGLESIA,
          FECHA_BAUTIZO                 =   P_FECHA_BAUTIZO,
          TIENE_CARGO                   =   P_TIENE_CARGO,
          ID_TIPOSANGRE                 =   P_ID_TIPOSANGRE,
          CARGO_IGLESIA                 =   P_CARGO_IGLESIA,
          ID_TIPOAUTORIDADIGLESIA       =   P_ID_TIPOAUTORIDADIGLESIA,
          NOMBRE_AUTORIDAD              =   P_NOMBRE_AUTORIDAD,
          TLF_AUTORIDAD                 =   P_TLF_AUTORIDAD,
          ID_TIPO_IDENTIDAD_ETNICA      =   P_ID_TIPO_IDENTIDAD_ETNICA,
          EMERGENCIA_PERSONA            =   P_EMERGENCIA_PERSONA,
          EMERGENCIA_TLF                =   P_EMERGENCIA_TLF,
          FECHA_INGRESO                 =   P_FECHA_INGRESO
        WHERE ID_PERSONA=l_id_persona;
     
     --VERIFICAR TIPO DE DOCUMENTO
      select count(*) into l_contar from persona_documento where id_persona=l_id_persona and ID_TIPODOCUMENTO=P_ID_TIPODOCUMENTO and NUM_DOCUMENTO=P_NUM_DOCUMENTO;
      
      if l_contar=0 then
        insert into PERSONA_DOCUMENTO(
          ID_PERSONA ,
          ID_TIPODOCUMENTO,
          NUM_DOCUMENTO
        )values(
          l_id_persona,
          P_ID_TIPODOCUMENTO,
          P_NUM_DOCUMENTO
        );
      end if;
      --verifica persona telefono
      if P_CELULAR is not null then
        select count(*) into l_contar from PERSONA_TELEFONO where id_persona=l_id_persona and ID_TIPOTELEFONO=5 and NUM_TELEFONO=P_CELULAR;
        if l_contar=0 then
          select coalesce(max(id_telefono),0)+1 into l_id_telefono from  PERSONA_TELEFONO where id_persona=l_id_persona;
          insert into PERSONA_TELEFONO(
            ID_TELEFONO,
            ID_PERSONA,
            ID_TIPOTELEFONO,
            NUM_TELEFONO,
            ES_ACTIVO,
            ES_PRIVADO,
            GTH
          )values(
            l_id_telefono,
            l_id_persona,
            5,
            P_CELULAR,
            1,
            0,
            1
          );
        end if;
    end if;
    --verifica correo personal
    if P_CORREO is not null then
        select count(*) into l_contar from PERSONA_VIRTUAL where id_persona=l_id_persona and ID_TIPOVIRTUAL=1 and lower(DIRECCION)=lower(P_CORREO);
        
        if l_contar=0 then
          select coalesce(max(ID_VIRTUAL),0)+1 into l_id_virtual from  PERSONA_VIRTUAL where id_persona=l_id_persona;
          insert into PERSONA_VIRTUAL(
            ID_VIRTUAL,
            ID_PERSONA,
            ID_TIPOVIRTUAL,
            DIRECCION,
            GTH,
            ES_ACTIVO
          )values(
            l_id_virtual,
            l_id_persona,
            1,
            P_CORREO,
            1,
            1
          );
        end if;
    end if;
    
    --verifica correo institucional
    if P_CORREO_INST is not null then
        select count(*) into l_contar from PERSONA_VIRTUAL where id_persona=l_id_persona and ID_TIPOVIRTUAL=1 and lower(DIRECCION)=lower(P_CORREO_INST);
        
        if l_contar=0 then
          select coalesce(max(ID_VIRTUAL),0)+1 into l_id_virtual from  PERSONA_VIRTUAL where id_persona=l_id_persona;
          insert into PERSONA_VIRTUAL(
            ID_VIRTUAL,
            ID_PERSONA,
            ID_TIPOVIRTUAL,
            DIRECCION,
            GTH,
            ES_ACTIVO
          )values(
            l_id_virtual,
            l_id_persona,
            1,
            P_CORREO_INST,
            1,
            0
          );
        end if;
    end if;
    
     <<salida_final>>
     
     P_ID_PERSONA_NEW :=l_id_persona;
     
     P_ERROR:=l_error;
     P_MSGERROR:= l_msgerror;
  
  END SP_DATOS_PERSONALES;
  
  PROCEDURE SP_DATOS_ACADEMICO_SOCIAL(P_ID_PERSONA NUMBER,P_ID_SITUACION_EDUCATIVO IN VARCHAR2, P_EDUCACION_PERU IN VARCHAR2, P_ID_REGIMEN_INSTITUCION IN VARCHAR2, P_ID_TIPO_INSTITUCION IN NUMBER,
      P_ID_INSTITUICION IN NUMBER, P_ID_CARRERA_PROFESIONAL IN NUMBER, P_ANHO_EGRESO IN VARCHAR2, P_COD_UNIVERSITARIO IN VARCHAR2, P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
  BEGIN
    UPDATE PERSONA_NATURAL SET
      ID_SITUACION_EDUCATIVO=P_ID_SITUACION_EDUCATIVO
    WHERE ID_PERSONA=P_ID_PERSONA;
     
     P_ERROR:=l_error;
     P_MSGERROR:= l_msgerror;
  END  SP_DATOS_ACADEMICO_SOCIAL;

END PERSONA_TRABAJADOR;