-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

\set ON_ERROR_STOP ON

CREATE SCHEMA IF NOT EXISTS eliseo;
ALTER SCHEMA eliseo OWNER TO eliseo;

SET search_path = eliseo,public;


DROP TABLE IF EXISTS acad_curso_alumno_x;
CREATE TABLE acad_curso_alumno_x (
	id_curso_alumno bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_plan_programa bigint,
	id_carga_curso bigint,
	id_curso_detalle bigint,
	id_horario_practica bigint,
	id_tipo_tramite bigint NOT NULL,
	id_tipo_condicion bigint NOT NULL,
	id_plan_curso bigint,
	promedio bigint NOT NULL DEFAULT 0,
	logro varchar(4),
	alcanzado char(1) DEFAULT 'N',
	codigo varchar(20),
	estado char(1) NOT NULL DEFAULT '0',
	id_usuario_reg bigint,
	fecha_registro timestamp(0),
	id_usuario_act bigint,
	fecha_actualizacion timestamp(0)
) ;


DROP TABLE IF EXISTS alumno;
CREATE TABLE alumno (
	cod_modular varchar(50),
	id_persona bigint NOT NULL
) ;


DROP TABLE IF EXISTS api_firma;
CREATE TABLE api_firma (
	id_api_firma bigint NOT NULL,
	url_api varchar(600) NOT NULL,
	descripcion varchar(600),
	vigencia bigint
) ;


DROP TABLE IF EXISTS api_firma_user;
CREATE TABLE api_firma_user (
	id_api_firma bigint NOT NULL,
	user_id bigint NOT NULL
) ;


DROP TABLE IF EXISTS aps_asistencia;
CREATE TABLE aps_asistencia (
	id_persona bigint NOT NULL,
	fecha TIMESTAMP(6) NOT NULL,
	es_legal bigint NOT NULL,
	es_aprobado bigint,
	fec_entrada1 TIMESTAMP(6) NOT NULL,
	fec_salida1 TIMESTAMP(6) NOT NULL,
	fec_entrada2 TIMESTAMP(6) NOT NULL,
	fec_salida2 TIMESTAMP(6) NOT NULL,
	justify1 varchar(255) NOT NULL,
	justify2 varchar(255) NOT NULL,
	comentario varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS aps_asistencia_poligono;
CREATE TABLE aps_asistencia_poligono (
	id bigint NOT NULL,
	id_mapa bigint,
	id_userdevice bigint,
	id_persona bigint,
	id_marcacion bigint,
	fecha timestamp(0),
	tipo varchar(1),
	lat varchar(100),
	lng varchar(100),
	id_asistencia bigint
) ;


DROP TABLE IF EXISTS aps_asist_ausencias;
CREATE TABLE aps_asist_ausencias (
	id_persona bigint,
	fecha_inicio TIMESTAMP(6),
	fecha_fin TIMESTAMP(6),
	tipo bigint,
	justificado bigint,
	autorizado bigint,
	id_anho bigint,
	observacion varchar(400)
) ;


DROP TABLE IF EXISTS aps_asist_horario_entidad;
CREATE TABLE aps_asist_horario_entidad (
	id_entidad bigint NOT NULL,
	horarioentrada timestamp(0) NOT NULL,
	horariosalida timestamp(0) NOT NULL,
	iniciorefrigerio timestamp(0),
	finrefrigerio timestamp(0),
	fecha timestamp(0) NOT NULL,
	estado varchar(1) NOT NULL,
	tipo bigint,
	horariosalidaviernes timestamp(0)
) ;


DROP TABLE IF EXISTS aps_asist_horario_laboral_dias;
CREATE TABLE aps_asist_horario_laboral_dias (
	id_horario_laboral_dias bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS aps_asist_justificacion;
CREATE TABLE aps_asist_justificacion (
	id_persona bigint,
	id_entidad bigint,
	id_anho bigint,
	fecha_inicio TIMESTAMP(6),
	fecha_fin TIMESTAMP(6),
	justificado bigint,
	autorizado bigint,
	observacion varchar(255)
) ;


DROP TABLE IF EXISTS aps_asist_marcaciones;
CREATE TABLE aps_asist_marcaciones (
	iidmarcacion bigint NOT NULL,
	iidterminal bigint NOT NULL,
	icodusuario bigint NOT NULL,
	fechahora timestamp(0) NOT NULL
) ;


DROP TABLE IF EXISTS aps_asist_marcaciones_interno;
CREATE TABLE aps_asist_marcaciones_interno (
	id_persona bigint,
	id_entidad bigint,
	fecha TIMESTAMP(6),
	horarioentrada TIMESTAMP(6),
	horariosalida TIMESTAMP(6),
	iniciorefrigerio TIMESTAMP(6),
	finrefrigerio TIMESTAMP(6)
) ;


DROP TABLE IF EXISTS aps_asist_mintrab;
CREATE TABLE aps_asist_mintrab (
	id_persona bigint NOT NULL,
	id_entidad bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	horarioentrada TIMESTAMP(6),
	horariosalida TIMESTAMP(6),
	iniciorefrigerio TIMESTAMP(6),
	finrefrigerio TIMESTAMP(6),
	observaciones varchar(200)
) ;


DROP TABLE IF EXISTS aps_asist_mintrab_test;
CREATE TABLE aps_asist_mintrab_test (
	id_persona bigint NOT NULL,
	id_entidad bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	horarioentrada TIMESTAMP(6),
	horariosalida TIMESTAMP(6),
	iniciorefrigerio TIMESTAMP(6),
	finrefrigerio TIMESTAMP(6)
) ;


DROP TABLE IF EXISTS aps_asist_no_laboral;
CREATE TABLE aps_asist_no_laboral (
	id_entidad bigint,
	fecha TIMESTAMP(6),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS aps_asist_periodo_laboral;
CREATE TABLE aps_asist_periodo_laboral (
	id_persona bigint,
	id_entidad bigint,
	fecha_inicio TIMESTAMP(6),
	fecha_fin TIMESTAMP(6),
	tipo varchar(50),
	nro_doc bigint,
	newid bigint
) ;


DROP TABLE IF EXISTS aps_asist_registro;
CREATE TABLE aps_asist_registro (
	id_entidad bigint,
	fecha timestamp(0),
	actualizado bigint,
	fecha_registro TIMESTAMP(6)
) ;


DROP TABLE IF EXISTS aps_asist_vacaciones;
CREATE TABLE aps_asist_vacaciones (
	id_entidad bigint,
	id_persona bigint,
	id_anho bigint,
	fecha_inicio TIMESTAMP(6),
	fecha_fin TIMESTAMP(6)
) ;


DROP TABLE IF EXISTS aps_cargo;
CREATE TABLE aps_cargo (
	id_cargo bigint NOT NULL,
	nombre varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS aps_categoria;
CREATE TABLE aps_categoria (
	id_categoria bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS aps_categoria_ocupacional;
CREATE TABLE aps_categoria_ocupacional (
	id_categoriaocupacional bigint NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS aps_certificado;
CREATE TABLE aps_certificado (
	id_certificado bigint NOT NULL,
	descripcion varchar(50),
	nombre_archivo varchar(50),
	archivo bytea,
	clave varchar(500),
	desde timestamp(0),
	hasta timestamp(0),
	id_persona bigint,
	firma varchar(150),
	ubicacion varchar(100),
	estado varchar(1),
	fecha TIMESTAMP(6),
	numserie varchar(35),
	id_depto_padre varchar(8),
	id_entidad bigint,
	logo_boleta varchar(255),
	logo_firma varchar(255),
	mail_driver varchar(20),
	mail_host varchar(255),
	mail_port varchar(10),
	mail_username varchar(255),
	mail_password varchar(255),
	mail_encryption varchar(10),
	sms_username varchar(255),
	sms_password varchar(255),
	mail_from_name varchar(255),
	mail_body text,
	mail_footer text,
	boleta_title_background varchar(100),
	boleta_ds_remuneraciones varchar(255),
	firma_ubicacion varchar(255),
	firma_razon varchar(255)
) ;


DROP TABLE IF EXISTS aps_certificado_depto;
CREATE TABLE aps_certificado_depto (
	id_certificado bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	fecha TIMESTAMP(6)
) ;


DROP TABLE IF EXISTS aps_concepto_boleta;
CREATE TABLE aps_concepto_boleta (
	id_conceptoboleta bigint NOT NULL,
	id_tipogrupoboleta bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	aps_conceptos varchar(1000) NOT NULL,
	num_orden bigint NOT NULL
) ;


DROP TABLE IF EXISTS aps_concepto_planilla;
CREATE TABLE aps_concepto_planilla (
	id_conceptoaps bigint NOT NULL,
	id_tipoconceptoaps bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	cod_sunat varchar(10),
	tipo varchar(2),
	tipo1 varchar(2)
) ;
COMMENT ON COLUMN aps_concepto_planilla.tipo IS E'I:Ingreso D:Descuento A:Aportación R:Retención PR:Provision AY:Ayuda N:Neto';


DROP TABLE IF EXISTS aps_concepto_planilla_ctaficha;
CREATE TABLE aps_concepto_planilla_ctaficha (
	id_conceptoaps bigint NOT NULL,
	id_tipoplanilla bigint NOT NULL,
	id_tipocontrato bigint NOT NULL,
	es_debito varchar(1) NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(10) NOT NULL,
	id_fondo bigint NOT NULL
) ;


DROP TABLE IF EXISTS aps_concepto_planilla_cuenta;
CREATE TABLE aps_concepto_planilla_cuenta (
	id_conceptoaps bigint NOT NULL,
	id_tipoplanilla bigint NOT NULL,
	id_tipocontrato bigint NOT NULL,
	es_debito varchar(1) NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(10) NOT NULL,
	id_fondo bigint NOT NULL
) ;


DROP TABLE IF EXISTS aps_concepto_plani_cuentaficha;
CREATE TABLE aps_concepto_plani_cuentaficha (
	id_cuentaaasi varchar(10) NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_restriccion varchar(10) NOT NULL,
	id_fondo bigint NOT NULL,
	id_conceptoaps bigint,
	sistema varchar(50) NOT NULL,
	id_plan_fichafinanciera bigint NOT NULL,
	id_entidad bigint NOT NULL
) ;


DROP TABLE IF EXISTS aps_condicion_laboral;
CREATE TABLE aps_condicion_laboral (
	id_cond_lab varchar(5) NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS aps_config_planilla;
CREATE TABLE aps_config_planilla (
	id_config varchar(20) NOT NULL,
	valor varchar(100),
	valor1 varchar(100)
) ;


DROP TABLE IF EXISTS aps_control_culto;
CREATE TABLE aps_control_culto (
	id_control_culto bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(8),
	fec_fecha timestamp(0),
	letra varchar(2),
	numero bigint,
	asistencia bigint,
	asistencia_culto bigint,
	estado varchar(2),
	motivo varchar(100),
	accion varchar(2),
	fecregistrado TIMESTAMP(6),
	id_persona_reg bigint,
	fecha_marcacion timestamp(0)
) ;


DROP TABLE IF EXISTS aps_empleado;
CREATE TABLE aps_empleado (
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_contrato bigint NOT NULL,
	id_categoriaocupacional bigint NOT NULL,
	id_tipocontrato bigint NOT NULL,
	id_tipopago bigint NOT NULL,
	id_pagoperiodo bigint NOT NULL,
	id_tipojornada bigint NOT NULL,
	id_regimensalud bigint NOT NULL,
	id_ruc varchar(50),
	id_tipocese bigint,
	cod_aps varchar(20) NOT NULL,
	cod_asistencia bigint,
	fec_inicio timestamp(0) NOT NULL,
	fec_termino timestamp(0),
	fec_entidad timestamp(0),
	fec_misionero timestamp(0),
	id_depto varchar(10),
	estado varchar(1),
	licencia_activo_code varchar(25),
	fondo varchar(3)
) ;


DROP TABLE IF EXISTS aps_mapa_coordenada;
CREATE TABLE aps_mapa_coordenada (
	id_coordenada bigint NOT NULL,
	id_mapa bigint,
	lat varchar(30),
	lng varchar(30),
	orden bigint
) ;


DROP TABLE IF EXISTS aps_mapa_depto;
CREATE TABLE aps_mapa_depto (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_mapa bigint NOT NULL,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS aps_mapa_persona;
CREATE TABLE aps_mapa_persona (
	id_mapa bigint NOT NULL,
	id_persona bigint NOT NULL,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS aps_mapa_poligono;
CREATE TABLE aps_mapa_poligono (
	id_mapa bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	nombre varchar(60)
) ;


DROP TABLE IF EXISTS aps_mapa_poligono_enable_day;
CREATE TABLE aps_mapa_poligono_enable_day (
	id_mapa_poligono_enable_day bigint NOT NULL,
	id_mapa bigint,
	id_dia bigint,
	hora_inicio varchar(5),
	hora_fin varchar(5),
	restringe_hora bigint,
	registrado timestamp(0),
	estado bigint
) ;


DROP TABLE IF EXISTS aps_nivel_educativo;
CREATE TABLE aps_nivel_educativo (
	id_nivel_edu varchar(2) NOT NULL,
	nombre varchar(50),
	estado varchar(1),
	estado_psto varchar(1)
) ;


DROP TABLE IF EXISTS aps_pago_periodo;
CREATE TABLE aps_pago_periodo (
	id_pagoperiodo bigint NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS aps_peru_feriado;
CREATE TABLE aps_peru_feriado (
	fec_feriado TIMESTAMP(6) NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS aps_planilla;
CREATE TABLE aps_planilla (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_contrato bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_tipoestatus bigint,
	id_sistemapension bigint,
	es_misionero varchar(10) NOT NULL,
	es_confianza varchar(10) NOT NULL,
	num_dias bigint,
	num_horas double precision,
	num_horasextra double precision,
	num_diasvac bigint,
	nom_cargo varchar(255),
	fmr double precision,
	id_cargo bigint,
	ini_vacaciones timestamp(0),
	fin_vacaciones timestamp(0)
) ;


DROP TABLE IF EXISTS aps_planilla_boleta;
CREATE TABLE aps_planilla_boleta (
	id_gestion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_contrato bigint NOT NULL,
	id_proceso bigint NOT NULL,
	fecha timestamp(0),
	glosa varchar(50),
	clave varchar(2000),
	id_depto varchar(8),
	archivo varchar(100),
	correo varchar(100),
	celular varchar(15)
) ;


DROP TABLE IF EXISTS aps_planilla_boleta_log;
CREATE TABLE aps_planilla_boleta_log (
	id_log varchar(50) NOT NULL,
	id_persona bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	fecha TIMESTAMP(6),
	id_gestion bigint,
	estado_firma varchar(100),
	origen varchar(100),
	firma varchar(1000),
	nerror bigint,
	error varchar(2000),
	archivo varchar(100),
	tamano varchar(100),
	directorio varchar(1000),
	estado_proceso varchar(100),
	id_user bigint
) ;


DROP TABLE IF EXISTS aps_planilla_boleta_proceso;
CREATE TABLE aps_planilla_boleta_proceso (
	id_gestion bigint NOT NULL,
	id_proceso bigint NOT NULL,
	fecha TIMESTAMP(6)
) ;


DROP TABLE IF EXISTS aps_planilla_detalle;
CREATE TABLE aps_planilla_detalle (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_contrato bigint NOT NULL,
	id_planilladetalle bigint NOT NULL,
	id_tipoplanilla bigint NOT NULL,
	id_conceptoaps bigint NOT NULL,
	fec_pago timestamp(0) NOT NULL,
	fec_salida timestamp(0),
	fec_retorno timestamp(0),
	cos_valor decimal(10,2) NOT NULL,
	cos_referencia1 decimal(10,2),
	cos_referencia2 decimal(10,2),
	cos_referencia3 decimal(10,2),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS aps_plan_fichafinanciera;
CREATE TABLE aps_plan_fichafinanciera (
	id_plan_fichafinanciera bigint NOT NULL,
	descripcion varchar(100) NOT NULL,
	mes_inicio bigint NOT NULL,
	anho_inicio bigint NOT NULL,
	mes_fin bigint,
	anho_fin bigint,
	id_entidad bigint NOT NULL
) ;


DROP TABLE IF EXISTS aps_proceso_boleta;
CREATE TABLE aps_proceso_boleta (
	id_proceso bigint NOT NULL,
	nombre varchar(50),
	orden bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS aps_profesion;
CREATE TABLE aps_profesion (
	id_profesion bigint NOT NULL,
	nombre varchar(50),
	nombre_corto varchar(15),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS aps_regimen_laboral;
CREATE TABLE aps_regimen_laboral (
	id_regimenlaboral bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	cod_ley varchar(255) NOT NULL,
	es_privado varchar(1) NOT NULL
) ;


DROP TABLE IF EXISTS aps_regimen_salud;
CREATE TABLE aps_regimen_salud (
	id_regimensalud bigint NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS aps_sexo;
CREATE TABLE aps_sexo (
	id_sexo bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1),
	nombre_corto varchar(5)
) ;


DROP TABLE IF EXISTS aps_sistema_pension;
CREATE TABLE aps_sistema_pension (
	id_sistemapension bigint NOT NULL,
	id_ruc varchar(20) NOT NULL,
	cod_aps bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	tas_menor decimal(38,2) NOT NULL,
	tas_mayor decimal(38,2) NOT NULL
) ;


DROP TABLE IF EXISTS aps_sistema_pension_tasa;
CREATE TABLE aps_sistema_pension_tasa (
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_sistemapension bigint,
	id_conceptoaps bigint NOT NULL,
	tasa decimal(12,2) NOT NULL
) ;


DROP TABLE IF EXISTS aps_tiempo_trabajo;
CREATE TABLE aps_tiempo_trabajo (
	id_tiempotrabajo bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS aps_trabajador;
CREATE TABLE aps_trabajador (
	id_persona bigint NOT NULL,
	id_regimenlaboral bigint NOT NULL,
	es_discapacitado varchar(1) NOT NULL,
	fec_inicioafp timestamp(0),
	fec_inicioonp timestamp(0),
	id_cargo bigint,
	id_categoria bigint,
	letra varchar(2),
	numero bigint,
	id_entidad bigint,
	id_depto varchar(10),
	confianza varchar(1),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS aps_uit;
CREATE TABLE aps_uit (
	id_uit bigint NOT NULL,
	uit double precision NOT NULL,
	id_anho bigint
) ;


DROP TABLE IF EXISTS aps_user_device;
CREATE TABLE aps_user_device (
	id_userdevice bigint NOT NULL,
	id_persona bigint,
	model varchar(50),
	platform varchar(50),
	uuid varchar(100),
	version varchar(10),
	manufacturer varchar(50),
	isvirtual varchar(10),
	serial varchar(100),
	can_reset_touch_id varchar(1) DEFAULT '0',
	not_assit varchar(1) DEFAULT '0',
	state varchar(1) DEFAULT '0',
	re_asign varchar(1) DEFAULT '0',
	change_password_default varchar(1)
) ;


DROP TABLE IF EXISTS archivo_mensual;
CREATE TABLE archivo_mensual (
	id_archivo_mensual bigint NOT NULL,
	id_empresa bigint,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoarchivo bigint NOT NULL,
	fecha_limite timestamp(0) NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	tiene_puntaje varchar(1),
	activo varchar(1) DEFAULT '1'
) ;
COMMENT ON COLUMN archivo_mensual.activo IS E'1 = activo; 0 = inactivo';


DROP TABLE IF EXISTS archivo_mensual_detalle;
CREATE TABLE archivo_mensual_detalle (
	id_detalle bigint NOT NULL,
	id_archivo_mensual bigint NOT NULL,
	id_entidad bigint,
	fecha_creacion TIMESTAMP(0),
	fecha_modificacion TIMESTAMP(0),
	url varchar(300),
	nombre varchar(250),
	formato varchar(100),
	tamanho varchar(100),
	id_user bigint,
	id_depto varchar(20),
	url_old varchar(300)
) ;


DROP TABLE IF EXISTS archivo_mensual_detalle_tmp_bk;
CREATE TABLE archivo_mensual_detalle_tmp_bk (
	id_detalle bigint NOT NULL,
	id_archivo_mensual bigint NOT NULL,
	id_entidad bigint,
	fecha_creacion TIMESTAMP(0),
	fecha_modificacion TIMESTAMP(0),
	url varchar(300),
	nombre varchar(250),
	formato varchar(100),
	tamanho varchar(100),
	id_user bigint,
	id_depto varchar(20),
	url_old varchar(300)
) ;


DROP TABLE IF EXISTS archivo_mensual_tmp_bk;
CREATE TABLE archivo_mensual_tmp_bk (
	id_archivo_mensual bigint NOT NULL,
	id_empresa bigint,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoarchivo bigint NOT NULL,
	fecha_limite timestamp(0) NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	tiene_puntaje varchar(1),
	activo varchar(1) DEFAULT '1'
) ;


DROP TABLE IF EXISTS arreglo;
CREATE TABLE arreglo (
	id_arreglo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_tipoarreglo bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_modulo bigint NOT NULL,
	id_origen bigint,
	id_tipoorigen bigint,
	motivo varchar(200),
	fecha timestamp(0),
	info_backup varchar(500),
	estado varchar(1),
	id_persona_update bigint,
	fecha_update timestamp(0)
) ;


DROP TABLE IF EXISTS arreglo_detalle;
CREATE TABLE arreglo_detalle (
	id_darreglo bigint NOT NULL,
	id_arreglo bigint NOT NULL,
	campo varchar(100),
	dice varchar(255),
	debe_decir varchar(255),
	id_arreglo_entrada bigint,
	id_referencia bigint
) ;


DROP TABLE IF EXISTS arreglo_entrada;
CREATE TABLE arreglo_entrada (
	id_arreglo_entrada bigint NOT NULL,
	etiqueta varchar(100),
	identificador varchar(100),
	modulo varchar(60),
	codigo varchar(10)
) ;
COMMENT ON TABLE arreglo_entrada IS E'Entradas que deben actualizar';
COMMENT ON COLUMN arreglo_entrada.etiqueta IS E'nombre que muestra';
COMMENT ON COLUMN arreglo_entrada.identificador IS E'valor identificador de la entrada (propiedad)';
COMMENT ON COLUMN arreglo_entrada.modulo IS E'Modulo a quien pertenece: [ventas][compras][ventas-alumnos]';


DROP TABLE IF EXISTS asist_comedor;
CREATE TABLE asist_comedor (
	id_asist_comedor bigint NOT NULL,
	num_documento varchar(20),
	fecha timestamp(0),
	estado varchar(1),
	tipo varchar(1),
	id_persona bigint,
	id_asistencia bigint
) ;
COMMENT ON COLUMN asist_comedor.fecha IS E'Fecha y Hora de Marcacion';
COMMENT ON COLUMN asist_comedor.tipo IS E'1: Desayuno, 2: Almuerzo, 3: Cena';


DROP TABLE IF EXISTS atemp_cargos;
CREATE TABLE atemp_cargos (
	id_responsable bigint NOT NULL,
	id_nivel bigint NOT NULL,
	email varchar(50),
	name varchar(150),
	id_depto varchar(10) NOT NULL,
	nombre varchar(200),
	activo varchar(1),
	cargo varchar(255)
) ;


DROP TABLE IF EXISTS atemp_cargos_1;
CREATE TABLE atemp_cargos_1 (
	id_responsable bigint NOT NULL,
	id_nivel bigint NOT NULL,
	email varchar(50),
	name varchar(150),
	id_depto varchar(10) NOT NULL,
	nombre varchar(200),
	activo varchar(1),
	cargo varchar(255)
) ;


DROP TABLE IF EXISTS atemp_cargos_2;
CREATE TABLE atemp_cargos_2 (
	id_responsable bigint NOT NULL,
	id_nivel bigint NOT NULL,
	email varchar(50),
	name varchar(150),
	id_depto varchar(10) NOT NULL,
	nombre varchar(200),
	activo varchar(1),
	cargo varchar(255)
) ;


DROP TABLE IF EXISTS audit_log;
CREATE TABLE audit_log (
	id_log varchar(25) NOT NULL,
	logi varchar(20) NOT NULL,
	desc_id varchar(80) NOT NULL,
	tabla_id varchar(30) NOT NULL,
	tabla varchar(60) NOT NULL,
	columna varchar(35) NOT NULL,
	accion varchar(2) NOT NULL,
	id_persona bigint NOT NULL,
	ip varchar(20),
	fechahora TIMESTAMP(6),
	anterior varchar(255),
	actual varchar(255),
	usuario varchar(60),
	ip_bd varchar(20)
) ;


DROP TABLE IF EXISTS a_dep_ref;
CREATE TABLE a_dep_ref (
	rev_id varchar(100),
	id_venta varchar(20),
	ref_id varchar(100)
) ;


DROP TABLE IF EXISTS a_dev_conta_cta_empresarial;
CREATE TABLE a_dev_conta_cta_empresarial (
	id_cuentaempresarial varchar(50) NOT NULL,
	id_parent varchar(50),
	nombre varchar(1000)
) ;


DROP TABLE IF EXISTS a_dev_pla_emp;
CREATE TABLE a_dev_pla_emp (
	id_cuentaaasi varchar(100),
	id_tipoplan varchar(100),
	id_restriccion varchar(100),
	id_cuentaempresarial varchar(100)
) ;


DROP TABLE IF EXISTS a_trs_ref;
CREATE TABLE a_trs_ref (
	rev_id varchar(100),
	id_venta varchar(20),
	ref_id varchar(100)
) ;


DROP TABLE IF EXISTS a_ven;
CREATE TABLE a_ven (
	id_venta bigint,
	id_entidad bigint,
	id_depto bigint,
	id_comprobante varchar(20),
	id_persona bigint,
	orden bigint
) ;


DROP TABLE IF EXISTS a_venta_ref;
CREATE TABLE a_venta_ref (
	rev_id varchar(100),
	id_venta varchar(20)
) ;


DROP TABLE IF EXISTS bnk_formato_excel;
CREATE TABLE bnk_formato_excel (
	id_formato_excel bigint NOT NULL,
	id_banco varchar(3),
	nro_fila bigint,
	estado varchar(1),
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0)
) ;


DROP TABLE IF EXISTS bnk_formato_excel_det;
CREATE TABLE bnk_formato_excel_det (
	id_formato_excel_det bigint NOT NULL,
	id_formato_excel bigint,
	id_item bigint,
	nro_columna varchar(10),
	es_requerido varchar(1)
) ;


DROP TABLE IF EXISTS bnk_formato_item_excel;
CREATE TABLE bnk_formato_item_excel (
	id_item bigint NOT NULL,
	nombre varchar(100) NOT NULL,
	codigo varchar(100) NOT NULL,
	estado varchar(1) NOT NULL
) ;


DROP TABLE IF EXISTS caja_apertura;
CREATE TABLE caja_apertura (
	id_caja_apertura bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	estado varchar(1),
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0)
) ;


DROP TABLE IF EXISTS caja_arqueo;
CREATE TABLE caja_arqueo (
	id_arqueo bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	id_cajero bigint,
	id_moneda bigint,
	numero bigint,
	id_tipoarqueo bigint,
	fecha_arqueo_desde timestamp(0),
	fecha_arqueo_hasta timestamp(0),
	fecha timestamp(0),
	id_persona_aprob bigint,
	fecha_aprob varchar(100),
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	id_opcionarqueo bigint
) ;
COMMENT ON COLUMN caja_arqueo.id_opcionarqueo IS E'1 = Arqueo Efectivo; 2=Arqueo General';
COMMENT ON COLUMN caja_arqueo.id_tipoarqueo IS E'1= Diario, 2 = Sorpresivo';


DROP TABLE IF EXISTS caja_arqueo_comprobante;
CREATE TABLE caja_arqueo_comprobante (
	id_arqueo bigint NOT NULL,
	id_arqueo_gcomprobante bigint NOT NULL,
	total_ingreso decimal(38,2),
	total_egreso decimal(38,2)
) ;


DROP TABLE IF EXISTS caja_arqueo_dinero;
CREATE TABLE caja_arqueo_dinero (
	id_arqueo bigint NOT NULL,
	id_dinero bigint NOT NULL,
	cantidad bigint,
	total decimal(38,2)
) ;


DROP TABLE IF EXISTS caja_arqueo_gcomprobante;
CREATE TABLE caja_arqueo_gcomprobante (
	id_arqueo_gcomprobante bigint NOT NULL,
	codigo varchar(10),
	nombre varchar(200),
	query_efectivo varchar(2000),
	query_general varchar(2000),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_chequera;
CREATE TABLE caja_chequera (
	id_chequera bigint NOT NULL,
	id_ctabancaria bigint NOT NULL,
	id_anho bigint,
	id_mes bigint,
	numero numeric,
	importe decimal(10,2),
	fecha timestamp(0),
	detalle varchar(100),
	beneficiario varchar(100)
) ;


DROP TABLE IF EXISTS caja_chequera_persona;
CREATE TABLE caja_chequera_persona (
	id_cvoucher bigint NOT NULL,
	id_persona bigint NOT NULL,
	fecha timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_chequera_voucher;
CREATE TABLE caja_chequera_voucher (
	id_cvoucher bigint NOT NULL,
	id_chequera bigint NOT NULL,
	id_voucher bigint NOT NULL,
	activo varchar(1)
) ;


DROP TABLE IF EXISTS caja_cierre;
CREATE TABLE caja_cierre (
	id_cierre bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(8),
	id_anho bigint,
	id_mes bigint,
	id_voucher bigint,
	id_dinamica bigint,
	id_persona bigint,
	id_tipoorigen bigint DEFAULT 16,
	fecha timestamp(0),
	codigo varchar(20),
	glosa varchar(50),
	importe decimal(10,2),
	importe_me decimal(10,2),
	estado varchar(1),
	id_mediopago varchar(3) DEFAULT '008'
) ;
COMMENT ON COLUMN caja_cierre.id_mediopago IS E'Tipos de cierre; 008=Cierre efectivo;005=Cierre de POS/NIUBIZ';


DROP TABLE IF EXISTS caja_cierre_deposito;
CREATE TABLE caja_cierre_deposito (
	id_cierre bigint NOT NULL,
	id_deposito bigint NOT NULL
) ;


DROP TABLE IF EXISTS caja_codigo_pago;
CREATE TABLE caja_codigo_pago (
	id_caja_codigo_pago bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_dinamica bigint NOT NULL,
	codigo varchar(8) NOT NULL,
	estado varchar(1) NOT NULL,
	id_usuario_registrador bigint NOT NULL,
	fecha_registro timestamp(0) NOT NULL,
	id_usuario_actualizador bigint,
	fecha_actualizacion timestamp(0)
) ;


DROP TABLE IF EXISTS caja_concepto_deposito;
CREATE TABLE caja_concepto_deposito (
	id_conceptodeposito bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(20) NOT NULL,
	id_dinamica bigint NOT NULL,
	id_tipotransaccion bigint NOT NULL,
	nombre varchar(100),
	glosa varchar(100),
	titulo varchar(100),
	precio numeric,
	estado varchar(1) NOT NULL
) ;


DROP TABLE IF EXISTS caja_conciliacion;
CREATE TABLE caja_conciliacion (
	id_conciliacion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_ctabancaria bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	numero bigint NOT NULL,
	saldo_inicial numeric NOT NULL,
	saldo_final numeric NOT NULL,
	estado varchar(1) NOT NULL,
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_reviewed bigint,
	id_user_viewed bigint,
	reviewed_at timestamp(0),
	viewed_at timestamp(0)
) ;
COMMENT ON COLUMN caja_conciliacion.estado IS E'0=ANULADO;1=REGISTRADO;2=CONCILIADO';


DROP TABLE IF EXISTS caja_conciliacion_det;
CREATE TABLE caja_conciliacion_det (
	id_conciliacion_det bigint NOT NULL,
	id_conciliacion bigint NOT NULL,
	id_pago bigint,
	id_deposito bigint,
	id_deposito_banco bigint,
	concepto varchar(500),
	importe numeric NOT NULL,
	fecha timestamp(0) NOT NULL,
	nro_lote varchar(20),
	nro_operacion varchar(20),
	nro_voucher varchar(20)
) ;


DROP TABLE IF EXISTS caja_conciliacion_det_banco;
CREATE TABLE caja_conciliacion_det_banco (
	id_conciliacion_det_banco bigint NOT NULL,
	id_conciliacion bigint NOT NULL,
	id_conciliacion_det bigint,
	nro_operacion varchar(10) NOT NULL,
	concepto varchar(500),
	importe numeric NOT NULL,
	fecha timestamp(0) NOT NULL
) ;


DROP TABLE IF EXISTS caja_cuenta_bancaria;
CREATE TABLE caja_cuenta_bancaria (
	id_ctabancaria bigint NOT NULL,
	id_banco varchar(3) NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_moneda bigint,
	id_cuentaempresarial varchar(50),
	id_tipoplan bigint,
	id_cuentaaasi varchar(10),
	id_restriccion varchar(50),
	id_tipoctacte varchar(50),
	nombre varchar(100),
	cuenta_corriente varchar(50),
	estado varchar(1),
	orden bigint,
	id_depto_oper varchar(25),
	es_anonima varchar(1) DEFAULT 'N'
) ;


DROP TABLE IF EXISTS caja_deposito;
CREATE TABLE caja_deposito (
	id_deposito bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_voucher bigint,
	id_mediopago varchar(3) NOT NULL,
	id_persona bigint NOT NULL,
	id_cliente bigint NOT NULL,
	id_sucursal bigint,
	id_tipotransaccion bigint NOT NULL,
	id_moneda bigint NOT NULL,
	id_dinamica bigint NOT NULL,
	id_tipoorigen bigint DEFAULT 7,
	id_vale bigint,
	id_tipotarjeta bigint,
	id_ctabancaria bigint,
	fecha_operacion timestamp(0),
	nro_operacion varchar(100),
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	tipocambio decimal(10,3),
	glosa varchar(1000),
	nombre_dep varchar(100),
	documento_dep varchar(50),
	estado varchar(1),
	id_pago bigint,
	id_tipodeposito bigint DEFAULT 5,
	id_depto_ccosto char(20),
	id_canal bigint,
	id_origen bigint,
	fecha_asiento_regenerado timestamp(0)
) ;


DROP TABLE IF EXISTS caja_deposito_ajuste;
CREATE TABLE caja_deposito_ajuste (
	id_dajuste bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_deposito bigint,
	id_venta bigint,
	id_dinamica bigint NOT NULL,
	id_moneda bigint NOT NULL,
	id_voucher bigint NOT NULL,
	id_tipoorigen bigint NOT NULL DEFAULT 31,
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	dc varchar(1),
	estado varchar(1),
	id_user bigint
) ;


DROP TABLE IF EXISTS caja_deposito_banco;
CREATE TABLE caja_deposito_banco (
	id_depbanco bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_deposito bigint,
	id_dinamica bigint NOT NULL,
	id_moneda bigint NOT NULL,
	id_tipotarjeta bigint,
	id_persona bigint NOT NULL,
	id_ctabancaria bigint NOT NULL,
	id_mediopago varchar(3) NOT NULL,
	id_voucher bigint,
	id_tipoorigen bigint NOT NULL DEFAULT 10,
	id_vale bigint,
	id_cierre bigint,
	operacion varchar(12),
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	tipocambio decimal(10,3),
	glosa varchar(80),
	estado varchar(1),
	file_nombre varchar(500),
	file_url varchar(1500),
	importe_comision decimal(16,2),
	importe_comision_me decimal(16,2)
) ;


DROP TABLE IF EXISTS caja_deposito_comision;
CREATE TABLE caja_deposito_comision (
	id_deposito_comision bigint NOT NULL,
	id_voucher bigint,
	id_persona bigint NOT NULL,
	id_moneda bigint NOT NULL,
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	tipocambio decimal(10,3),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_deposito_comision_det;
CREATE TABLE caja_deposito_comision_det (
	id_deposito_comision bigint NOT NULL,
	id_deposito bigint NOT NULL,
	importe decimal(10,2),
	importe_me decimal(10,2),
	id_ddetalle bigint NOT NULL
) ;


DROP TABLE IF EXISTS caja_deposito_detalle;
CREATE TABLE caja_deposito_detalle (
	id_ddetalle bigint NOT NULL,
	id_deposito bigint NOT NULL,
	id_venta bigint,
	id_articulo bigint,
	importe decimal(10,2),
	importe_me decimal(10,2),
	id_saldo bigint,
	id_transferencia bigint,
	id_vdetalle bigint,
	id_articulo_2 bigint
) ;
COMMENT ON COLUMN caja_deposito_detalle.id_articulo IS E'ID DEL ARTICULO AL CUAL ESTÁ CANCELANDO ';


DROP TABLE IF EXISTS caja_deposito_file;
CREATE TABLE caja_deposito_file (
	id_dfile bigint NOT NULL,
	id_entidad bigint,
	id_depto bigint,
	id_anho bigint,
	id_cliente bigint,
	id_deposito bigint,
	id_mediopago varchar(3),
	id_banco varchar(3),
	id_ctabancaria bigint,
	fecha timestamp(0),
	nro_operacion varchar(100),
	fecha_operacion timestamp(0),
	importe decimal(10,2),
	nombre_file varchar(256),
	url varchar(256),
	estado varchar(1),
	es_ctapuente varchar(1) DEFAULT 'N'
) ;


DROP TABLE IF EXISTS caja_deposito_file_proceso;
CREATE TABLE caja_deposito_file_proceso (
	id_dproceso bigint NOT NULL,
	id_dfile bigint,
	id_persona bigint,
	fecha timestamp(0),
	comentario varchar(200),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_detraccion;
CREATE TABLE caja_detraccion (
	id_detraccion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_mediopago varchar(3) NOT NULL,
	id_voucher bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_proveedor bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_ctabancaria bigint,
	id_chequera bigint,
	id_operacion varchar(2) NOT NULL,
	id_tipobienservicio varchar(3) NOT NULL,
	id_moneda bigint NOT NULL,
	autodetraccion varchar(1),
	numero varchar(12),
	nro_constancia varchar(12),
	nro_operacion varchar(18),
	fecha_emision timestamp(0),
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	estado varchar(1),
	id_tipoorigen bigint DEFAULT 11,
	tipo_autodetraccion varchar(1)
) ;
COMMENT ON COLUMN caja_detraccion.tipo_autodetraccion IS E'''S=AUTODETRACCION UPEU; N=AUTODETRACCION PROVEEDOR''';


DROP TABLE IF EXISTS caja_detraccion_compra;
CREATE TABLE caja_detraccion_compra (
	id_detdetalle bigint NOT NULL,
	id_detraccion bigint NOT NULL,
	id_compra bigint,
	id_dinamica bigint,
	importe decimal(10,2),
	importe_me decimal(10,3),
	id_tipoorigen bigint DEFAULT 11,
	detalle varchar(255),
	id_saldo bigint
) ;


DROP TABLE IF EXISTS caja_detraccion_compra_asiento;
CREATE TABLE caja_detraccion_compra_asiento (
	id_dasiento bigint NOT NULL,
	id_detdetalle bigint NOT NULL,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe numeric,
	importe_me numeric,
	descripcion varchar(255),
	editable varchar(1),
	id_parent bigint,
	dc varchar(1),
	agrupa varchar(1) NOT NULL DEFAULT 'N',
	nro_asiento bigint,
	orden bigint,
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN caja_detraccion_compra_asiento.orden IS E'El orden que tendrá una partida en un asiento';


DROP TABLE IF EXISTS caja_detraccion_file;
CREATE TABLE caja_detraccion_file (
	id_dfile bigint NOT NULL,
	id_detraccion bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tamanho decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_detraccion_venta;
CREATE TABLE caja_detraccion_venta (
	id_detdetalle bigint NOT NULL,
	id_detraccion bigint NOT NULL,
	id_venta bigint NOT NULL,
	id_dinamica bigint,
	id_tipoorigen bigint NOT NULL DEFAULT 11,
	importe decimal(10,2),
	importe_me decimal(10,3),
	detalle varchar(255)
) ;


DROP TABLE IF EXISTS caja_dinero;
CREATE TABLE caja_dinero (
	id_dinero bigint NOT NULL,
	id_moneda bigint,
	tipo varchar(1),
	valor numeric,
	estado varchar(1) DEFAULT '1'
) ;
COMMENT ON COLUMN caja_dinero.tipo IS E'B=BILLETE;M=MONEDA';


DROP TABLE IF EXISTS caja_documento;
CREATE TABLE caja_documento (
	id_documento bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_user bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_moneda bigint NOT NULL,
	id_pgasto bigint,
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	motivo varchar(255),
	numero_doc varchar(12),
	tipo varchar(1),
	codigo varchar(10),
	estado varchar(1),
	tramite_pago varchar(1),
	id_pbancaria bigint,
	fecha_pago timestamp(0),
	id_actividad bigint,
	id_mes bigint
) ;
COMMENT ON COLUMN caja_documento.codigo IS E'CODIGO = EL PASO EN EL QUE SE ENCUENTRA';
COMMENT ON COLUMN caja_documento.numero_doc IS E'NUMERO CORRELATIVO DEL DOCUMENTO';
COMMENT ON COLUMN caja_documento.tipo IS E'1: INFORMES / VARIOS
2: PLANILLA / DIEZMOS';


DROP TABLE IF EXISTS caja_documento_asiento;
CREATE TABLE caja_documento_asiento (
	id_casiento bigint NOT NULL,
	id_documento bigint NOT NULL,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe decimal(10,2),
	importe_me decimal(10,2),
	dc varchar(1),
	editable varchar(1),
	agrupa varchar(1)
) ;


DROP TABLE IF EXISTS caja_documento_file;
CREATE TABLE caja_documento_file (
	id_dfile bigint NOT NULL,
	id_documento bigint NOT NULL,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tipo varchar(1),
	tamanho decimal(10,2),
	estado varchar(1),
	url_old varchar(255)
) ;


DROP TABLE IF EXISTS caja_documento_proceso;
CREATE TABLE caja_documento_proceso (
	id_docproceso bigint NOT NULL,
	id_documento bigint NOT NULL,
	id_dproceso bigint NOT NULL,
	id_user bigint NOT NULL,
	fecha timestamp(0),
	motivo varchar(255)
) ;


DROP TABLE IF EXISTS caja_entidad_financiera;
CREATE TABLE caja_entidad_financiera (
	id_banco varchar(3) NOT NULL,
	nombre varchar(50),
	sigla varchar(12),
	estado varchar(1),
	codigo varchar(4),
	gth varchar(2),
	cta_digito varchar(2),
	cci_digito varchar(2)
) ;


DROP TABLE IF EXISTS caja_pago;
CREATE TABLE caja_pago (
	id_pago bigint NOT NULL,
	id_mediopago varchar(3) NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_ctabancaria bigint,
	id_chequera bigint,
	id_voucher bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_user bigint NOT NULL,
	id_persona bigint,
	id_proveedor bigint,
	id_tipotransaccion bigint,
	id_moneda bigint,
	numero varchar(20),
	fecha timestamp(0),
	fecha_reg timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	estado varchar(1),
	id_vale bigint,
	id_pbancaria bigint,
	tipocambio decimal(10,3)
) ;
COMMENT ON COLUMN caja_pago.id_pbancaria IS E'Cuenta bancaria de beneficiario del pago. [deprecated]';
COMMENT ON COLUMN caja_pago.id_persona IS E'DEPRECATED';
COMMENT ON COLUMN caja_pago.id_proveedor IS E'DEPRECATED';
COMMENT ON COLUMN caja_pago.id_vale IS E'Cuando el pago se hace con un vale. [El concepto es rendir vale]';


DROP TABLE IF EXISTS caja_pago_asiento;
CREATE TABLE caja_pago_asiento (
	id_pasiento bigint NOT NULL,
	id_pago bigint NOT NULL,
	id_cuentaaasi varchar(20) NOT NULL,
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe numeric,
	importe_me numeric,
	descripcion varchar(255),
	editable varchar(1),
	dc varchar(1),
	agrupa varchar(1) NOT NULL,
	nro_asiento bigint,
	orden bigint,
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN caja_pago_asiento.orden IS E'El orden que tendrá una partida en un asiento';


DROP TABLE IF EXISTS caja_pago_compra;
CREATE TABLE caja_pago_compra (
	id_pcompra bigint NOT NULL,
	id_pago bigint NOT NULL,
	id_proveedor bigint NOT NULL,
	id_compra bigint,
	id_dinamica bigint NOT NULL,
	id_tipoorigen bigint DEFAULT 8,
	importe decimal(10,2),
	importe_me decimal(10,2),
	detalle varchar(80),
	id_saldo bigint,
	tipocambio decimal(10,3)
) ;
COMMENT ON COLUMN caja_pago_compra.id_proveedor IS E'ID del beneficiado, id_persona';


DROP TABLE IF EXISTS caja_pago_compra_asiento;
CREATE TABLE caja_pago_compra_asiento (
	id_casiento bigint NOT NULL,
	id_pcompra bigint NOT NULL,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe numeric,
	importe_me numeric,
	descripcion varchar(255),
	editable varchar(1),
	id_parent bigint,
	dc varchar(1),
	agrupa varchar(1) NOT NULL DEFAULT 'N',
	nro_asiento bigint,
	orden bigint,
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN caja_pago_compra_asiento.orden IS E'El orden que tendrá una partida en un asiento';


DROP TABLE IF EXISTS caja_pago_file;
CREATE TABLE caja_pago_file (
	id_cfile bigint NOT NULL,
	id_pago bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tipo varchar(2),
	tamanho decimal(10,2),
	estado varchar(1),
	url_old varchar(255),
	id_pventa bigint,
	url_s3 varchar(255)
) ;
COMMENT ON COLUMN caja_pago_file.tipo IS E'1 = Constancia de pagos';


DROP TABLE IF EXISTS caja_pago_gasto;
CREATE TABLE caja_pago_gasto (
	id_pgasto bigint NOT NULL,
	id_pago bigint NOT NULL,
	id_dinamica bigint,
	id_persona bigint,
	id_tipoorigen bigint DEFAULT 5,
	id_moneda bigint,
	detalle varchar(200),
	importe decimal(10,2),
	importe_me decimal(10,2),
	fecha timestamp(0),
	tipocambio numeric
) ;


DROP TABLE IF EXISTS caja_pago_gasto_asiento;
CREATE TABLE caja_pago_gasto_asiento (
	id_gasiento bigint NOT NULL,
	id_pgasto bigint NOT NULL,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe numeric,
	importe_me numeric,
	descripcion varchar(255),
	editable varchar(1),
	id_parent bigint,
	id_tiporegistro varchar(1),
	dc varchar(1),
	agrupa varchar(1) NOT NULL DEFAULT 'N',
	nro_asiento bigint,
	orden bigint,
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN caja_pago_gasto_asiento.orden IS E'El orden que tendrá una partida en un asiento';


DROP TABLE IF EXISTS caja_pago_proceso;
CREATE TABLE caja_pago_proceso (
	id_pagado bigint NOT NULL,
	id_compra bigint,
	id_persona bigint,
	id_ctabancaria bigint,
	numero varchar(20),
	fecha timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_pago_venta;
CREATE TABLE caja_pago_venta (
	id_pventa bigint NOT NULL,
	id_pago bigint NOT NULL,
	id_cliente bigint NOT NULL,
	id_venta bigint,
	id_dinamica bigint NOT NULL,
	id_tipoorigen bigint DEFAULT 9,
	importe decimal(10,2),
	importe_me decimal(10,2),
	id_articulo bigint,
	detalle varchar(80),
	id_depto_ccosto char(20)
) ;


DROP TABLE IF EXISTS caja_pago_venta_asiento;
CREATE TABLE caja_pago_venta_asiento (
	id_vasiento bigint NOT NULL,
	id_pventa bigint NOT NULL,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(20),
	importe numeric,
	importe_me numeric,
	descripcion varchar(255),
	editable varchar(1),
	id_parent bigint,
	id_tiporegistro varchar(1),
	dc varchar(1),
	agrupa varchar(1) NOT NULL DEFAULT 'N',
	nro_asiento bigint,
	orden bigint,
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN caja_pago_venta_asiento.orden IS E'El orden que tendrá una partida en un asiento.';


DROP TABLE IF EXISTS caja_persona_cta;
CREATE TABLE caja_persona_cta (
	id_cta bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_persona bigint NOT NULL,
	id_tipoplan bigint,
	id_cuentaaasi varchar(10),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_tipocate varchar(10),
	id_departamento varchar(10),
	id_tipovale bigint
) ;


DROP TABLE IF EXISTS caja_persona_dinero;
CREATE TABLE caja_persona_dinero (
	id_persona bigint,
	id_dinero bigint,
	cantidad numeric,
	total numeric
) ;


DROP TABLE IF EXISTS caja_reposicion;
CREATE TABLE caja_reposicion (
	id_creposicion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	glosa varchar(200),
	importe decimal(10,2) NOT NULL,
	importe_me decimal(10,2),
	nro_operacion varchar(9),
	id_ctabancaria bigint,
	estado varchar(1) NOT NULL,
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	id_voucher bigint,
	id_dinamica bigint,
	id_moneda bigint,
	id_tipoorigen bigint NOT NULL DEFAULT 26,
	tipo_reposicion varchar(2) NOT NULL,
	archivo_nombre varchar(500),
	archivo_url varchar(1000),
	numero bigint,
	archivo_extension varchar(10),
	id_caja_apertura bigint
) ;
COMMENT ON COLUMN caja_reposicion.tipo_reposicion IS E'RP=Reposicion de pagos;RA= Reposicion de apertura';


DROP TABLE IF EXISTS caja_reposicion_ajuste;
CREATE TABLE caja_reposicion_ajuste (
	id_crajuste bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_creposicion bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	id_dinamica bigint,
	id_moneda bigint,
	id_voucher bigint,
	id_tipoorigen bigint NOT NULL DEFAULT 27,
	importe numeric,
	importe_me numeric,
	tipo_ajuste varchar(10),
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0)
) ;
COMMENT ON COLUMN caja_reposicion_ajuste.tipo_ajuste IS E'C=CANCELACION O ANULACION; AR=AJUSTE POR REDONDEO';


DROP TABLE IF EXISTS caja_reposicion_detalle;
CREATE TABLE caja_reposicion_detalle (
	id_crdetalle bigint NOT NULL,
	id_creposicion bigint,
	id_pago bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_reposicion_dinero;
CREATE TABLE caja_reposicion_dinero (
	id_creposicion bigint,
	id_dinero bigint,
	cantidad numeric,
	total numeric
) ;


DROP TABLE IF EXISTS caja_retencion;
CREATE TABLE caja_retencion (
	id_retencion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_mediopago varchar(3) NOT NULL,
	id_voucher bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_proveedor bigint NOT NULL,
	id_ctabancaria bigint,
	id_chequera bigint,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_moneda bigint NOT NULL,
	numero varchar(10),
	fecha_emision timestamp(0),
	fecha timestamp(0),
	serie varchar(4),
	nro_retencion varchar(8),
	importe decimal(10,2),
	estado varchar(1),
	importe_me decimal(10,2)
) ;


DROP TABLE IF EXISTS caja_retencion_compra;
CREATE TABLE caja_retencion_compra (
	id_retdetalle bigint NOT NULL,
	id_retencion bigint NOT NULL,
	id_compra bigint,
	id_dinamica bigint,
	importe_total decimal(10,2),
	importe_ret decimal(10,2),
	importe_ret_me decimal(10,2),
	detalle varchar(100),
	estado varchar(1),
	id_tipoorigen bigint DEFAULT 12,
	id_saldo bigint
) ;


DROP TABLE IF EXISTS caja_retencion_compra_asiento;
CREATE TABLE caja_retencion_compra_asiento (
	id_rasiento bigint NOT NULL,
	id_retdetalle bigint NOT NULL,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe numeric,
	importe_me numeric,
	descripcion varchar(255),
	editable varchar(1),
	id_parent bigint,
	dc varchar(1),
	agrupa varchar(1) NOT NULL DEFAULT 'N',
	nro_asiento bigint,
	orden bigint,
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN caja_retencion_compra_asiento.orden IS E'El orden que tendrá una partida en un asiento';


DROP TABLE IF EXISTS caja_retencion_file;
CREATE TABLE caja_retencion_file (
	id_rfile bigint NOT NULL,
	id_retencion bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tamanho decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_servicio;
CREATE TABLE caja_servicio (
	id_servicio bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(20) NOT NULL,
	id_dinamica bigint NOT NULL,
	id_articulo bigint NOT NULL,
	id_tipoigv varchar(2) NOT NULL,
	id_tipotransaccion bigint NOT NULL,
	nombre varchar(255),
	glosa varchar(255),
	precio numeric,
	estado varchar(1),
	precio_editable varchar(1) DEFAULT '0'
) ;
COMMENT ON COLUMN caja_servicio.glosa IS E'GLOSA';
COMMENT ON COLUMN caja_servicio.nombre IS E'Nombre Comercial';
COMMENT ON COLUMN caja_servicio.precio IS E'VALOR DEL SERVICIO';
COMMENT ON COLUMN caja_servicio.precio_editable IS E'1 SI ES PRECIO ES EDITABLE y 0 si no es editable';


DROP TABLE IF EXISTS caja_servicio_proceso;
CREATE TABLE caja_servicio_proceso (
	id_sproceso bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	id_servicio bigint,
	nombre varchar(100),
	estado varchar(1),
	precondiciones varchar(250),
	pre_ejecucion varchar(250),
	post_ejecucion varchar(250),
	tipo varchar(100),
	id_nivel bigint
) ;


DROP TABLE IF EXISTS caja_servicio_proceso_cliente;
CREATE TABLE caja_servicio_proceso_cliente (
	id_sproceso bigint,
	id_anho bigint,
	id_cliente bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS caja_tipotarjeta;
CREATE TABLE caja_tipotarjeta (
	id_tipotarjeta bigint NOT NULL,
	nombre varchar(30),
	estado varchar(1),
	codigo varchar(5)
) ;


DROP TABLE IF EXISTS caja_tipovale;
CREATE TABLE caja_tipovale (
	id_tipovale bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1),
	require_file varchar(1),
	prefijo varchar(20)
) ;
COMMENT ON COLUMN caja_tipovale.prefijo IS E'No borrar se utiliza para la gestion de vales';


DROP TABLE IF EXISTS caja_vale;
CREATE TABLE caja_vale (
	id_vale bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipovale bigint NOT NULL,
	id_dinamica bigint,
	id_persona bigint NOT NULL,
	id_empleado bigint NOT NULL,
	id_mediopago varchar(3),
	id_ctabancaria bigint,
	id_chequera bigint,
	id_moneda bigint NOT NULL,
	id_voucher bigint,
	id_tipoorigen bigint DEFAULT 15,
	fecha timestamp(0),
	fecha_vencimiento timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,3),
	tipo_cambio decimal(10,3),
	detalle varchar(264),
	cta_bancaria varchar(50),
	celular bigint,
	email varchar(50),
	codigo_consejo varchar(20),
	termino_condicion varchar(1),
	estado varchar(1),
	numero varchar(50),
	id_persona_auto bigint,
	nro_vale varchar(50),
	fecha_reg timestamp(0),
	pagado varchar(1),
	motivo varchar(255),
	rendido varchar(1),
	id_cajero bigint,
	id_pbancaria bigint,
	term_cond_url varchar(150)
) ;
COMMENT ON COLUMN caja_vale.nro_vale IS E'NRO CORRELATIVO DEL VALE
';
COMMENT ON COLUMN caja_vale.numero IS E'NRO DE OPERACION BANCARIA O NUMERO DE CHEQUE';


DROP TABLE IF EXISTS caja_vale_asiento;
CREATE TABLE caja_vale_asiento (
	id_asiento bigint NOT NULL,
	id_vale bigint,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe decimal(10,2),
	importe_me decimal(10,2),
	descripcion varchar(255),
	dc varchar(1),
	agrupa varchar(1),
	nro_asiento bigint,
	orden bigint,
	primario varchar(1)
) ;
COMMENT ON COLUMN caja_vale_asiento.orden IS E'El orden que tendrá una partida en un asiento';
COMMENT ON COLUMN caja_vale_asiento.primario IS E'S = si ; N = no';


DROP TABLE IF EXISTS caja_vale_autoriza;
CREATE TABLE caja_vale_autoriza (
	id_persona bigint NOT NULL,
	id_ctacte varchar(50),
	es_activo varchar(1)
) ;


DROP TABLE IF EXISTS caja_vale_file;
CREATE TABLE caja_vale_file (
	id_vfile bigint NOT NULL,
	id_vale bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tipo varchar(2),
	tamanho decimal(10,2),
	estado varchar(1),
	id_pgasto bigint,
	id_deposito bigint,
	id_user bigint,
	origen varchar(1),
	url_old varchar(255)
) ;
COMMENT ON COLUMN caja_vale_file.tipo IS E'1:CONVENIO, 2:CONTANCIA DEPOSITO, 3:SUSTENTO GASTOS';


DROP TABLE IF EXISTS caja_vale_gasto;
CREATE TABLE caja_vale_gasto (
	id_vgasto bigint NOT NULL,
	id_vale bigint NOT NULL,
	id_vfile bigint,
	id_pgasto bigint,
	id_user bigint,
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2),
	detalle varchar(255),
	autorizado varchar(1),
	motivo varchar(255)
) ;
COMMENT ON COLUMN caja_vale_gasto.autorizado IS E'S = AUTORIZADO
N = PENDIENTE
R = RECHAZADO';


DROP TABLE IF EXISTS caja_vale_gasto_asiento;
CREATE TABLE caja_vale_gasto_asiento (
	id_vasiento bigint NOT NULL,
	id_vgasto bigint NOT NULL,
	id_fondo bigint,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_depto varchar(10),
	importe decimal(10,2),
	importe_me decimal(10,2),
	dc varchar(1),
	agrupa varchar(2)
) ;


DROP TABLE IF EXISTS caja_visa_temp;
CREATE TABLE caja_visa_temp (
	id_entidad bigint,
	id_depto varchar(10),
	id_persona bigint,
	id_dinamica bigint,
	tarjeta bigint,
	operacion varchar(20),
	fecha timestamp(0),
	importe decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS canal_pago;
CREATE TABLE canal_pago (
	id_canal bigint NOT NULL,
	codigo varchar(10),
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS categoria_almacen_articulo;
CREATE TABLE categoria_almacen_articulo (
	id_categoria_almacen_articulo bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS clasificador_categoria;
CREATE TABLE clasificador_categoria (
	id_categoria bigint NOT NULL,
	nombre varchar(200) NOT NULL,
	codigo varchar(10),
	es_activo varchar(1) NOT NULL
) ;


DROP TABLE IF EXISTS colp_asistente;
CREATE TABLE colp_asistente (
	id_asistente bigint NOT NULL,
	codigo varchar(30) NOT NULL
) ;


DROP TABLE IF EXISTS colp_asistente_campanha;
CREATE TABLE colp_asistente_campanha (
	id_asistente_campanha bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_campanha bigint NOT NULL,
	id_asistente bigint NOT NULL,
	id_rcategoria bigint NOT NULL,
	estado varchar(1),
	id_estado bigint,
	id_parent bigint,
	fecha_inicio timestamp(0) NOT NULL,
	fecha_termino timestamp(0)
) ;


DROP TABLE IF EXISTS colp_colportor;
CREATE TABLE colp_colportor (
	id_colportor bigint NOT NULL,
	codigo varchar(30) NOT NULL
) ;


DROP TABLE IF EXISTS colp_deposito_asist;
CREATE TABLE colp_deposito_asist (
	id_deposito_asist bigint NOT NULL,
	id_asistente_campanha bigint NOT NULL,
	nro_voucher varchar(30),
	fecha timestamp(0) NOT NULL,
	foto varchar(500),
	id_estado bigint NOT NULL,
	observacion varchar(200)
) ;


DROP TABLE IF EXISTS colp_deposito_colp;
CREATE TABLE colp_deposito_colp (
	id_deposito_colp bigint NOT NULL,
	id_asistente_campanha bigint NOT NULL,
	id_colportor bigint NOT NULL,
	id_tipopago bigint,
	monto decimal(20,10) NOT NULL,
	fecha timestamp(0) NOT NULL,
	nro_comprobante varchar(30),
	foto varchar(500)
) ;


DROP TABLE IF EXISTS colp_deposito_detalle;
CREATE TABLE colp_deposito_detalle (
	id_deposito_asist bigint NOT NULL,
	id_deposito_colp bigint NOT NULL
) ;


DROP TABLE IF EXISTS colp_estado_op;
CREATE TABLE colp_estado_op (
	id_estado bigint NOT NULL,
	nombre varchar(80) NOT NULL,
	nombre_corto varchar(10)
) ;


DROP TABLE IF EXISTS colp_inscripcion;
CREATE TABLE colp_inscripcion (
	id_asistente_campanha bigint NOT NULL,
	id_colportor bigint NOT NULL,
	id_rcategoria_ins bigint NOT NULL,
	id_estado bigint,
	estado varchar(1) NOT NULL,
	limite_credito decimal(20,10) NOT NULL,
	fecha timestamp(0) NOT NULL,
	id_asist_camp_dep bigint
) ;


DROP TABLE IF EXISTS colp_operacion;
CREATE TABLE colp_operacion (
	id_operacion bigint NOT NULL,
	id_asistente_campanha bigint NOT NULL,
	id_colportor bigint,
	id_tipooperacion bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	numero varchar(30),
	nro_factura varchar(30),
	estado varchar(1) NOT NULL,
	facturado varchar(1)
) ;


DROP TABLE IF EXISTS colp_operacion_detalle;
CREATE TABLE colp_operacion_detalle (
	id_operacion bigint NOT NULL,
	id_articulo bigint NOT NULL,
	cantidad bigint NOT NULL,
	precio decimal(20,10) NOT NULL
) ;


DROP TABLE IF EXISTS colp_pedido;
CREATE TABLE colp_pedido (
	id_pedido bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	id_persona bigint NOT NULL,
	id_campanha bigint NOT NULL,
	id_almacen_origen bigint NOT NULL,
	id_almacen_destino bigint NOT NULL,
	id_estado bigint NOT NULL,
	nro_guia varchar(30),
	id_asistente_campanha bigint NOT NULL
) ;


DROP TABLE IF EXISTS colp_pedido_detalle;
CREATE TABLE colp_pedido_detalle (
	id_pedido bigint NOT NULL,
	id_articulo bigint NOT NULL,
	cant_pedida bigint NOT NULL,
	precio decimal(22,10) NOT NULL,
	cant_enviada bigint,
	cant_recibida bigint,
	observacion varchar(200)
) ;


DROP TABLE IF EXISTS colp_pedido_estado;
CREATE TABLE colp_pedido_estado (
	id_pedido bigint NOT NULL,
	id_estado bigint NOT NULL,
	id_user bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	documento varchar(30),
	foto varchar(500)
) ;


DROP TABLE IF EXISTS colp_tipo_operacion;
CREATE TABLE colp_tipo_operacion (
	id_tipooperacion bigint NOT NULL,
	nombre varchar(150) NOT NULL,
	nombre_corto varchar(30),
	tipo varchar(2) NOT NULL
) ;


DROP TABLE IF EXISTS colp_tipo_pago;
CREATE TABLE colp_tipo_pago (
	id_tipopago bigint NOT NULL,
	nombre varchar(70)
) ;


DROP TABLE IF EXISTS colp_transferencia_asist;
CREATE TABLE colp_transferencia_asist (
	id_transferencia bigint NOT NULL,
	id_asistente_campanha bigint NOT NULL,
	id_almacen_nuevo bigint,
	id_asistente_nuevo bigint,
	fecha timestamp(0),
	id_estado bigint NOT NULL
) ;


DROP TABLE IF EXISTS colp_transferencia_colp;
CREATE TABLE colp_transferencia_colp (
	id_transferencia varchar(30) NOT NULL,
	id_colportor bigint NOT NULL,
	id_asistente_nuevo bigint,
	fecha timestamp(0) NOT NULL,
	id_asistente_campanha bigint NOT NULL,
	id_almacen_nuevo bigint,
	id_estado bigint NOT NULL
) ;


DROP TABLE IF EXISTS colp_transf_asist_estado;
CREATE TABLE colp_transf_asist_estado (
	id_transferencia bigint NOT NULL,
	id_estado bigint NOT NULL,
	id_user bigint NOT NULL,
	fecha timestamp(0) NOT NULL
) ;


DROP TABLE IF EXISTS colp_transf_colp_estado;
CREATE TABLE colp_transf_colp_estado (
	id_transferencia varchar(30) NOT NULL,
	id_estado bigint NOT NULL,
	id_user bigint NOT NULL,
	fecha timestamp(0) NOT NULL
) ;


DROP TABLE IF EXISTS colp_venta;
CREATE TABLE colp_venta (
	id_almacen bigint NOT NULL,
	id_venta bigint NOT NULL,
	id_campanha bigint NOT NULL
) ;


DROP TABLE IF EXISTS componente;
CREATE TABLE componente (
	id_componente bigint NOT NULL,
	id_tipocomponente bigint NOT NULL,
	nombre varchar(50),
	fec_insert timestamp(0),
	xml_send text,
	xml_array varchar(255),
	xml_item varchar(255),
	xml_multiple varchar(255),
	xml_query text,
	xml_subquery varchar(2000),
	pre_condition varchar(2000),
	pre_query varchar(2000),
	post_query varchar(2000),
	comentario varchar(255),
	xml_subitem varchar(255),
	xml_inline varchar(10),
	xml_send_aux text
) ;


DROP TABLE IF EXISTS componente2;
CREATE TABLE componente2 (
	id_componente bigint NOT NULL,
	id_tipocomponente bigint NOT NULL,
	nombre varchar(50),
	fec_insert timestamp(0),
	xml_send varchar(4000),
	xml_array varchar(255),
	xml_item varchar(255),
	xml_multiple varchar(255),
	xml_query varchar(4000),
	xml_subquery varchar(2000),
	pre_condition varchar(2000),
	pre_query varchar(2000),
	post_query varchar(2000),
	comentario varchar(255),
	xml_subitem varchar(255)
) ;


DROP TABLE IF EXISTS componente_before;
CREATE TABLE componente_before (
	id_componente bigint NOT NULL,
	id_tipocomponente bigint NOT NULL,
	nombre varchar(50),
	fec_insert timestamp(0),
	xml_send varchar(4000),
	xml_array varchar(255),
	xml_item varchar(255),
	xml_multiple varchar(255),
	xml_query varchar(4000),
	xml_subquery varchar(2000),
	pre_condition varchar(2000),
	pre_query varchar(2000),
	post_query varchar(2000),
	comentario varchar(255),
	xml_subitem varchar(255)
) ;


DROP TABLE IF EXISTS componente_configuracion;
CREATE TABLE componente_configuracion (
	id_config varchar(50) NOT NULL,
	valor varchar(255)
) ;


DROP TABLE IF EXISTS componente_frecuencia;
CREATE TABLE componente_frecuencia (
	id_frecuencia bigint NOT NULL,
	nombre varchar(50),
	nom_singular varchar(50),
	nom_plural varchar(50)
) ;


DROP TABLE IF EXISTS componente_tarea;
CREATE TABLE componente_tarea (
	id_tarea bigint NOT NULL,
	id_frecuencia bigint NOT NULL,
	id_componente bigint NOT NULL,
	nombre varchar(50),
	num_entidad bigint,
	fec_insert timestamp(0),
	fec_inicio timestamp(0),
	fec_termino timestamp(0),
	es_activa bigint,
	rep_cada bigint,
	dia_cada bigint,
	dia_hora timestamp(0),
	dia_inicio timestamp(0),
	dia_termino timestamp(0),
	tipo_alerta bigint,
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS componente_tarea_resultado;
CREATE TABLE componente_tarea_resultado (
	res_guid varchar(50) NOT NULL,
	id_tarea bigint NOT NULL,
	fec_inicio timestamp(0),
	fec_respuesta timestamp(0),
	fec_resultado timestamp(0),
	num_rows bigint,
	num_updates bigint,
	res_codigo bigint,
	res_request varchar(255),
	res_query varchar(255),
	res_mensaje varchar(255)
) ;


DROP TABLE IF EXISTS compra;
CREATE TABLE compra (
	id_compra bigint NOT NULL,
	id_parent bigint,
	id_entidad bigint,
	id_anho bigint,
	id_depto varchar(10),
	id_mes bigint,
	id_persona bigint,
	id_proveedor bigint,
	id_comprobante varchar(2),
	id_moneda bigint,
	id_voucher bigint,
	id_tiponota varchar(2),
	id_tipotransaccion bigint,
	tipocambio decimal(10,3),
	fecha_almacen timestamp(0),
	fecha_provision timestamp(0),
	fecha_doc timestamp(0),
	serie varchar(20),
	numero varchar(20),
	importe decimal(10,2),
	importe_me decimal(10,2),
	igv decimal(10,2),
	base_gravada decimal(10,2),
	base_nogravada decimal(10,2),
	base_mixta decimal(10,2),
	base_sincredito decimal(10,2),
	base_inafecta decimal(10,2),
	igv_gravado decimal(10,2),
	igv_nogravado decimal(10,2),
	igv_mixto decimal(10,2),
	igv_sincredito decimal(10,2),
	estado bigint,
	otros decimal(10,2),
	es_ret_det varchar(1),
	es_activo varchar(1),
	tiene_kardex varchar(1),
	es_electronica varchar(1),
	importe_renta decimal(10,2),
	tiene_suspencion varchar(1),
	base decimal(10,2),
	correlativo bigint,
	es_credito varchar(1),
	id_tipoorigen bigint DEFAULT 3,
	es_transporte_carga varchar(1),
	taxs decimal(10,2),
	fecha_vencimiento timestamp(0),
	id_dinamica bigint,
	id_informe bigint,
	es_aprobado varchar(1),
	doc_url varchar(200),
	doc_type_file varchar(100),
	doc_name varchar(200),
	id_icategoria bigint,
	desplazamiento varchar(300),
	base_me decimal(10,2),
	base_gravada_me decimal(10,2),
	base_nogravada_me decimal(10,2),
	base_mixta_me decimal(10,2),
	base_sincredito_me decimal(10,2),
	igv_me decimal(10,2),
	igv_gravado_me decimal(10,2),
	igv_nogravado_me decimal(10,2),
	igv_mixto_me decimal(10,2),
	importe_renta_me decimal(10,2),
	isc decimal(10,2),
	isc_me decimal(10,2),
	otros_me decimal(10,2),
	taxs_me decimal(10,2),
	id_igv decimal(10,2),
	es_servicio varchar(1),
	fecha_validado_sunat timestamp(0),
	icbp decimal(15,5),
	icbp_me decimal(15,5)
) ;
COMMENT ON COLUMN compra.base_gravada IS E'1: ADQUISICIONES GRAVADAS DESTINADAS A OPERACIONES GRAVADAS Y/O DE EXPORTACIÓN';
COMMENT ON COLUMN compra.base_inafecta IS E'DEPRECATED';
COMMENT ON COLUMN compra.base_mixta IS E'2: ADQUISICIONES GRAVADAS DESTINADAS A OPERACIONES GRAVADAS Y/O DE EXPORTACIÓN Y A OPERACIONES NO GRAVADAS';
COMMENT ON COLUMN compra.base_nogravada IS E'3: ADQUISICIONES GRAVADAS DESTINADAS A OPERACIONES NO GRAVADAS';
COMMENT ON COLUMN compra.base_sincredito IS E'4: VALOR DE LAS ADQUISICIONES NO GRAVADAS';
COMMENT ON COLUMN compra.correlativo IS E'Es autoincrementable por entidades';
COMMENT ON COLUMN compra.desplazamiento IS E'ES PARA INFORMES';
COMMENT ON COLUMN compra.doc_name IS E'ES PARA INFORMES';
COMMENT ON COLUMN compra.doc_type_file IS E'ES PARA INFORMES';
COMMENT ON COLUMN compra.doc_url IS E'ES PARA INFORMES';
COMMENT ON COLUMN compra.es_aprobado IS E'1=Aprobado en informe; 0=Rechazado en informe';
COMMENT ON COLUMN compra.id_icategoria IS E'ES PARA INFORMES';
COMMENT ON COLUMN compra.id_informe IS E'Este campos solo sera utilizado cuando la compra es de un informe de GTH';
COMMENT ON COLUMN compra.igv_gravado IS E'1';
COMMENT ON COLUMN compra.igv_mixto IS E'2';
COMMENT ON COLUMN compra.igv_nogravado IS E'3';
COMMENT ON COLUMN compra.igv_sincredito IS E'DEPRECATED';
COMMENT ON COLUMN compra.importe_renta_me IS E'Para RH';


DROP TABLE IF EXISTS compra_ajuste;
CREATE TABLE compra_ajuste (
	id_ajuste bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_compra bigint,
	id_persona bigint NOT NULL,
	id_proveedor bigint NOT NULL,
	id_dinamica bigint NOT NULL,
	id_moneda bigint NOT NULL,
	id_voucher bigint NOT NULL,
	id_tipoorigen bigint NOT NULL DEFAULT 4,
	fecha timestamp(0),
	numero varchar(8),
	importe decimal(10,2),
	importe_me decimal(10,2),
	dc varchar(1),
	estado varchar(1),
	id_saldo bigint,
	id_pcompra bigint,
	id_compra_destino bigint
) ;
COMMENT ON COLUMN compra_ajuste.id_compra_destino IS E'compra a donde se transfiere el saldo';


DROP TABLE IF EXISTS compra_ajuste_asiento;
CREATE TABLE compra_ajuste_asiento (
	id_cajuste bigint NOT NULL,
	id_ajuste bigint NOT NULL,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe numeric,
	importe_me numeric,
	descripcion varchar(255),
	editable varchar(1),
	id_parent bigint,
	dc varchar(1),
	agrupa varchar(1) NOT NULL DEFAULT 'N',
	nro_asiento bigint,
	orden bigint,
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN compra_ajuste_asiento.orden IS E'El orden que tendrá una partida en un asiento';


DROP TABLE IF EXISTS compra_asiento;
CREATE TABLE compra_asiento (
	id_casiento bigint NOT NULL,
	id_compra bigint NOT NULL,
	id_cuentaaasi varchar(10),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe decimal(10,2),
	descripcion varchar(255),
	editable varchar(1),
	id_parent bigint,
	id_tiporegistro varchar(1),
	dc varchar(1),
	importe_me decimal(10,2),
	fecha_actualizacion TIMESTAMP(6),
	agrupa varchar(1) NOT NULL DEFAULT 'N',
	nro_asiento numeric,
	orden decimal(10,2),
	primario varchar(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN compra_asiento.orden IS E'El orden que tendrá una partida en un asiento';


DROP TABLE IF EXISTS compra_detalle;
CREATE TABLE compra_detalle (
	id_detalle bigint NOT NULL,
	id_compra bigint NOT NULL,
	id_dinamica bigint,
	id_ctipoigv bigint,
	id_almacen bigint,
	id_articulo bigint,
	id_tipoigv varchar(2),
	detalle varchar(512),
	cantidad decimal(10,4),
	precio decimal(20,4),
	base decimal(10,2),
	igv decimal(10,2),
	importe decimal(10,2),
	orden bigint,
	estado varchar(1),
	es_costo_vinculado varchar(1),
	costo_vinculado decimal(10,2),
	fecha_vencimiento timestamp(0),
	incluye_igv varchar(1),
	precio_me numeric,
	base_me numeric,
	igv_me numeric,
	importe_me numeric
) ;
COMMENT ON COLUMN compra_detalle.incluye_igv IS E'Un dato para hacer referencia si el precio incluye igv o no';


DROP TABLE IF EXISTS compra_entidad_depto_plantilla;
CREATE TABLE compra_entidad_depto_plantilla (
	id_edplantilla bigint NOT NULL,
	id_plantilla bigint,
	id_entidad bigint,
	id_depto bigint
) ;


DROP TABLE IF EXISTS compra_importacion;
CREATE TABLE compra_importacion (
	id_compra bigint NOT NULL,
	valor_aduana numeric,
	fob numeric,
	flete numeric,
	flete_interno numeric,
	thc numeric,
	ajuste numeric,
	ad_valorem numeric,
	servicio_despacho numeric,
	igv numeric,
	ipm numeric,
	variacion numeric,
	id_tiporenta bigint,
	seguro numeric,
	igv_me numeric,
	ipm_me numeric,
	importe numeric,
	otros numeric,
	importe_me numeric,
	otros_me numeric,
	id_beneficiario bigint
) ;
COMMENT ON COLUMN compra_importacion.igv IS E'Igv_0 (16%)';


DROP TABLE IF EXISTS compra_movimiento;
CREATE TABLE compra_movimiento (
	id_cmovimiento bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	id_compra bigint,
	id_almacen bigint,
	id_tipooperacion varchar(2),
	id_tipotransaccion bigint,
	id_tipoorigen bigint DEFAULT 21,
	id_voucher bigint,
	id_documento bigint,
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	ip varchar(100),
	estado varchar(1),
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	tipo varchar(1),
	glosa varchar(150)
) ;


DROP TABLE IF EXISTS compra_movimiento_detalle;
CREATE TABLE compra_movimiento_detalle (
	id_cmdetalle bigint NOT NULL,
	id_cmovimiento bigint,
	id_cdetalle bigint,
	id_tipoorigen bigint DEFAULT 21,
	id_dinamica bigint,
	id_articulo bigint,
	detalle varchar(200),
	cantidad decimal(20,5),
	precio decimal(20,5),
	costo decimal(20,5),
	importe decimal(20,5),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS compra_orden;
CREATE TABLE compra_orden (
	id_orden bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_proveedor bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_sedearea bigint NOT NULL,
	id_mediopago varchar(3) NOT NULL,
	id_moneda bigint,
	numero varchar(8),
	fecha_pedido timestamp(0),
	fecha_entrega timestamp(0),
	lugar_entrega varchar(255),
	observaciones varchar(255),
	con_igv varchar(1),
	dias_credito bigint,
	es_credito varchar(1),
	cuotas bigint,
	estado varchar(1),
	area_solicitante varchar(255),
	personal_contacto varchar(200)
) ;


DROP TABLE IF EXISTS compra_orden_detalle;
CREATE TABLE compra_orden_detalle (
	id_odetalle bigint NOT NULL,
	id_orden bigint NOT NULL,
	id_almacen bigint,
	id_articulo bigint,
	detalle varchar(300),
	cantidad decimal(10,2),
	precio decimal(10,2),
	total decimal(10,2)
) ;


DROP TABLE IF EXISTS compra_plantilla;
CREATE TABLE compra_plantilla (
	id_plantilla bigint NOT NULL,
	id_tipoplantilla bigint,
	id_entidad bigint,
	id_depto bigint,
	fecha timestamp(0),
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS compra_plantilla_detalle;
CREATE TABLE compra_plantilla_detalle (
	id_pdetalle bigint NOT NULL,
	id_plantilla bigint,
	id_entidad bigint,
	id_depto varchar(10),
	id_tipoplan bigint,
	id_cuentaaasi bigint,
	id_restriccion varchar(20),
	id_ctacte varchar(50),
	detalle varchar(200),
	porcentaje bigint
) ;


DROP TABLE IF EXISTS compra_saldo;
CREATE TABLE compra_saldo (
	id_saldo bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_compra bigint,
	id_moneda bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_proveedor bigint NOT NULL,
	id_comprobante varchar(2) NOT NULL,
	serie varchar(7),
	numero varchar(20),
	fecha_provision timestamp(0),
	fecha_doc timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2)
) ;


DROP TABLE IF EXISTS compra_suspencion;
CREATE TABLE compra_suspencion (
	id_suspension bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint NOT NULL,
	id_proveedor bigint NOT NULL,
	fecha_emision timestamp(0),
	fecha_presentacion timestamp(0),
	nro_operacion varchar(20),
	id_empresa bigint,
	id_persona bigint,
	nombre varchar(256),
	formato varchar(100),
	url varchar(256),
	tamanho decimal(10,2)
) ;
COMMENT ON COLUMN compra_suspencion.id_depto IS E'YA ESTA OBSOLETO';
COMMENT ON COLUMN compra_suspencion.id_entidad IS E'YA ESTA OBSOLETOS';


DROP TABLE IF EXISTS compra_tipoigv;
CREATE TABLE compra_tipoigv (
	id_ctipoigv bigint NOT NULL,
	codigo varchar(4),
	nombre varchar(100),
	descripcion varchar(255),
	tiene_igv varchar(1)
) ;


DROP TABLE IF EXISTS compra_tramite_pago;
CREATE TABLE compra_tramite_pago (
	id_tramite_pago bigint NOT NULL,
	nombres varchar(50),
	codigo varchar(4),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS comp_7322;
CREATE TABLE comp_7322 (
	id_compra bigint,
	id_mes bigint,
	id_voucher bigint
) ;


DROP TABLE IF EXISTS concepto_config_variable;
CREATE TABLE concepto_config_variable (
	id_cvariable bigint NOT NULL,
	id_conceptoaps bigint,
	nombre varchar(100),
	valor bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS conta_actividad;
CREATE TABLE conta_actividad (
	id_actividad bigint NOT NULL,
	id_tipoperiodo bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	fec_inicio TIMESTAMP(6) NOT NULL,
	fec_termino TIMESTAMP(6),
	es_control bigint NOT NULL,
	es_entidad bigint NOT NULL,
	comentario varchar(800)
) ;


DROP TABLE IF EXISTS conta_actividad_concepto;
CREATE TABLE conta_actividad_concepto (
	id_actividadconcepto bigint NOT NULL,
	id_actividad bigint NOT NULL,
	id_tipoactividadconcepto bigint NOT NULL,
	id_tipodato bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	val_minimo bigint,
	val_maximo bigint,
	es_activo bigint NOT NULL,
	es_obligatorio bigint NOT NULL,
	es_editable bigint NOT NULL,
	es_comentario bigint NOT NULL,
	comentario varchar(1000)
) ;


DROP TABLE IF EXISTS conta_activo;
CREATE TABLE conta_activo (
	id_entidad bigint NOT NULL,
	id_activo bigint NOT NULL,
	id_depto varchar(10),
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_fondo bigint NOT NULL,
	id_tipoactivoestado bigint,
	nombre varchar(2000),
	cod_activo bigint,
	categoria varchar(1000),
	marca varchar(1000),
	modelo varchar(255),
	serie varchar(255),
	seccion varchar(50),
	fec_registro timestamp(0),
	fec_compra timestamp(0),
	fec_primeruso timestamp(0),
	tas_depreciacion bigint,
	tas_especial bigint,
	cos_valor bigint,
	cos_dolar bigint,
	cos_tipocambio bigint
) ;


DROP TABLE IF EXISTS conta_activo_movimiento;
CREATE TABLE conta_activo_movimiento (
	id_entidad bigint NOT NULL,
	id_activo bigint NOT NULL,
	id_tipoactivomovimiento bigint NOT NULL,
	fec_movimiento timestamp(0) NOT NULL,
	es_contabilizado bigint,
	num_lote varchar(255),
	cos_valor numeric NOT NULL
) ;


DROP TABLE IF EXISTS conta_anho;
CREATE TABLE conta_anho (
	id_anho bigint NOT NULL
) ;


DROP TABLE IF EXISTS conta_asiento;
CREATE TABLE conta_asiento (
	id_asiento bigint NOT NULL,
	id_tipoorigen bigint NOT NULL,
	id_origen bigint,
	fondo varchar(10),
	depto varchar(10),
	cuenta varchar(10),
	cuenta_cte varchar(50),
	restriccion varchar(10),
	importe decimal(10,2),
	descripcion varchar(255),
	memo varchar(100),
	voucher varchar(10),
	parent_id bigint,
	ref_id varchar(100),
	agrupa varchar(1) DEFAULT 'N',
	importe_me decimal(10,2),
	primario varchar(1),
	descripcion_02 varchar(4000)
) ;


DROP TABLE IF EXISTS conta_corporacion;
CREATE TABLE conta_corporacion (
	id_corporacion bigint NOT NULL,
	nombre varchar(100) NOT NULL,
	siglas varchar(20)
) ;


DROP TABLE IF EXISTS conta_credito;
CREATE TABLE conta_credito (
	id_credito bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS conta_cta_denominacional;
CREATE TABLE conta_cta_denominacional (
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_parent varchar(10),
	id_tipoctacte varchar(10),
	nombre varchar(255) NOT NULL,
	es_grupo varchar(10),
	es_activa varchar(10) NOT NULL,
	es_acreedora varchar(10) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_denominacional_70421;
CREATE TABLE conta_cta_denominacional_70421 (
	id_tipoplan bigint,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_parent varchar(10),
	id_tipoctacte varchar(10),
	nombre varchar(255) NOT NULL,
	es_grupo varchar(10),
	es_activa varchar(10) NOT NULL,
	es_acreedora varchar(10) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_denominacional_d7421;
CREATE TABLE conta_cta_denominacional_d7421 (
	id_tipoplan bigint,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_parent varchar(10),
	id_tipoctacte varchar(10),
	nombre varchar(255) NOT NULL,
	es_grupo varchar(10),
	es_activa varchar(10) NOT NULL,
	es_acreedora varchar(10) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_denominacional_temp;
CREATE TABLE conta_cta_denominacional_temp (
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_parent varchar(10),
	id_tipoctacte varchar(10),
	nombre varchar(255) NOT NULL,
	es_grupo varchar(10),
	es_activa varchar(10) NOT NULL,
	es_acreedora varchar(10) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_empresarial;
CREATE TABLE conta_cta_empresarial (
	id_cuentaempresarial varchar(50) NOT NULL,
	id_parent varchar(50),
	nombre varchar(1000) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_empresarial_bk;
CREATE TABLE conta_cta_empresarial_bk (
	id_cuentaempresarial varchar(50) NOT NULL,
	id_parent varchar(50),
	nombre varchar(100) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_empresarial_bk_70421;
CREATE TABLE conta_cta_empresarial_bk_70421 (
	id_cuentaempresarial varchar(50) NOT NULL,
	id_parent varchar(50),
	nombre varchar(1000) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_empresarial_d7421;
CREATE TABLE conta_cta_empresarial_d7421 (
	id_cuentaempresarial varchar(50) NOT NULL,
	id_parent varchar(50),
	nombre varchar(1000) NOT NULL
) ;


DROP TABLE IF EXISTS conta_cta_restriccion;
CREATE TABLE conta_cta_restriccion (
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(50) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	activo varchar(1)
) ;


DROP TABLE IF EXISTS conta_cta_resumen;
CREATE TABLE conta_cta_resumen (
	id_cuentaresumen bigint,
	id_tipoplan bigint,
	nombre varchar(255),
	formula varchar(4000)
) ;


DROP TABLE IF EXISTS conta_cuenta;
CREATE TABLE conta_cuenta (
	id_cuenta bigint NOT NULL,
	id_parent bigint,
	id_entidad bigint NOT NULL,
	id_tiporeporte bigint NOT NULL,
	nombre varchar(100),
	orden bigint,
	dc varchar(1),
	id_tipo_cuenta bigint,
	codigo varchar(10),
	grupo_cuenta varchar(10)
) ;


DROP TABLE IF EXISTS conta_cuenta_cte;
CREATE TABLE conta_cuenta_cte (
	id_ctacte bigint NOT NULL,
	id_cdetalle bigint NOT NULL,
	cta_cte varchar(50)
) ;


DROP TABLE IF EXISTS conta_cuenta_detalle;
CREATE TABLE conta_cuenta_detalle (
	id_cdetalle bigint NOT NULL,
	id_cuenta bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_cuentaaasi varchar(10)
) ;


DROP TABLE IF EXISTS conta_cuenta_grupo;
CREATE TABLE conta_cuenta_grupo (
	id_cuentagrupo bigint NOT NULL,
	id_tipogrupocuenta bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	cuentas varchar(1000) NOT NULL,
	num_orden bigint NOT NULL,
	es_empresa bigint NOT NULL
) ;


DROP TABLE IF EXISTS conta_dia;
CREATE TABLE conta_dia (
	id_dia bigint NOT NULL,
	nombre varchar(50),
	siglas varchar(30)
) ;


DROP TABLE IF EXISTS conta_diario;
CREATE TABLE conta_diario (
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoasiento varchar(10) NOT NULL,
	cod_aasi bigint,
	fec_asiento timestamp(0),
	fec_digitado timestamp(0),
	fec_contabilizado timestamp(0),
	nom_digitador varchar(255),
	nom_contador varchar(255),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS conta_diario_3;
CREATE TABLE conta_diario_3 (
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoasiento varchar(10) NOT NULL,
	cod_aasi bigint,
	fec_asiento timestamp(0),
	fec_digitado timestamp(0),
	fec_contabilizado timestamp(0),
	nom_digitador varchar(255),
	nom_contador varchar(255),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS conta_diario_cta_aviso;
CREATE TABLE conta_diario_cta_aviso (
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	cuenta varchar(100) NOT NULL,
	codigo varchar(100)
) ;


DROP TABLE IF EXISTS conta_diario_cuo_aux;
CREATE TABLE conta_diario_cuo_aux (
	id_origen bigint,
	id_tipoorigen bigint,
	cuo varchar(10),
	cuo_correlativo varchar(20),
	id_entidad bigint,
	id_anho bigint,
	id_mes bigint
) ;


DROP TABLE IF EXISTS conta_diario_detalle;
CREATE TABLE conta_diario_detalle (
	id_diario_detalle bigint NOT NULL,
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_fondo bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_ctacte varchar(50),
	id_restriccion varchar(50) NOT NULL,
	num_aasi varchar(20),
	cos_valor bigint,
	cos_dolar bigint,
	observacion varchar(1000),
	comentario varchar(1000)
) ;


DROP TABLE IF EXISTS conta_diario_detalle_3;
CREATE TABLE conta_diario_detalle_3 (
	id_diario_detalle bigint NOT NULL,
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_fondo bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_ctacte varchar(50),
	id_restriccion varchar(50) NOT NULL,
	num_aasi varchar(20),
	cos_valor numeric,
	cos_dolar numeric,
	observacion varchar(1000),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS conta_diario_detalle_temp;
CREATE TABLE conta_diario_detalle_temp (
	id_diario_detalle bigint NOT NULL,
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_fondo bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_ctacte varchar(50),
	id_restriccion varchar(50) NOT NULL,
	num_aasi varchar(20),
	cos_valor numeric,
	cos_dolar numeric,
	observacion varchar(1000),
	comentario varchar(300)
) ;


DROP TABLE IF EXISTS conta_diario_detalle_temp2;
CREATE TABLE conta_diario_detalle_temp2 (
	id_diario_detalle bigint NOT NULL,
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_fondo bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_ctacte varchar(50),
	id_restriccion varchar(50) NOT NULL,
	num_aasi varchar(20),
	cos_valor numeric,
	cos_dolar numeric,
	observacion varchar(1000),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS conta_diario_file;
CREATE TABLE conta_diario_file (
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	lote varchar(100),
	url varchar(300) NOT NULL,
	nombre varchar(250) NOT NULL,
	tamanho varchar(22),
	formato varchar(100),
	codigo varchar(100),
	fecha_descarga timestamp(0),
	id_user bigint,
	url_old varchar(300)
) ;


DROP TABLE IF EXISTS conta_diario_paginacion;
CREATE TABLE conta_diario_paginacion (
	id_empresa bigint,
	id_entidad bigint,
	id_anho bigint,
	id_mes bigint,
	fecha_lotes_actualizados timestamp(0),
	fecha_calculo_paginas timestamp(0),
	paginas bigint,
	pag_inicio bigint,
	pag_final bigint,
	d_total_mes numeric,
	c_total_mes numeric,
	d_total_mes_van numeric,
	c_total_mes_van numeric,
	d_total_acumulado bigint,
	c_total_acumulado bigint,
	d_total_acumulado_van bigint,
	c_total_acumulado_van bigint
) ;


DROP TABLE IF EXISTS conta_diario_temp;
CREATE TABLE conta_diario_temp (
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoasiento varchar(10) NOT NULL,
	cod_aasi bigint,
	fec_asiento timestamp(0),
	fec_digitado timestamp(0),
	fec_contabilizado timestamp(0),
	nom_digitador varchar(255),
	nom_contador varchar(255),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS conta_diario_temp2;
CREATE TABLE conta_diario_temp2 (
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoasiento varchar(10) NOT NULL,
	cod_aasi bigint,
	fec_asiento timestamp(0),
	fec_digitado timestamp(0),
	fec_contabilizado timestamp(0),
	nom_digitador varchar(255),
	nom_contador varchar(255),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS conta_diario_temp_union;
CREATE TABLE conta_diario_temp_union (
	id_diario bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoasiento varchar(10) NOT NULL,
	cod_aasi bigint,
	fec_asiento timestamp(0),
	fec_digitado timestamp(0),
	fec_contabilizado timestamp(0),
	nom_digitador varchar(255),
	nom_contador varchar(255),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS conta_dinamica;
CREATE TABLE conta_dinamica (
	id_dinamica bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_modulo bigint NOT NULL,
	id_tipoigv varchar(2),
	id_tipotransaccion bigint,
	id_persona bigint,
	id_parent bigint,
	id_ctabancaria bigint,
	id_almacen bigint,
	nombre varchar(150),
	importe decimal(10,2),
	fecha timestamp(0),
	comentario varchar(100),
	ip varchar(36),
	activo varchar(1),
	importe_me decimal(10,2),
	codigo varchar(10),
	id_tipoventa bigint
) ;


DROP TABLE IF EXISTS conta_dinamica_asiento;
CREATE TABLE conta_dinamica_asiento (
	id_asiento bigint NOT NULL,
	id_parent bigint,
	id_dinamica bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_cuentaempresarial varchar(50) NOT NULL,
	nombre varchar(200),
	dc varchar(1),
	porcentaje decimal(10,5),
	nro_asiento bigint,
	activo varchar(1),
	destino varchar(1),
	id_indicador varchar(35),
	unico varchar(1),
	unico_ctacte varchar(1),
	agrupa varchar(1),
	id_fondo bigint,
	primario varchar(1)
) ;
COMMENT ON COLUMN conta_dinamica_asiento.agrupa IS E'S:AGRUPA ASIENTO; N: NO AGRUPA';
COMMENT ON COLUMN conta_dinamica_asiento.destino IS E'S:ACEPTA DESTINO;N SIN ASIENTO DE DESTINO';
COMMENT ON COLUMN conta_dinamica_asiento.id_indicador IS E'TIPO IMPORTE, DONDE SE REGISTRA';
COMMENT ON COLUMN conta_dinamica_asiento.nro_asiento IS E'AGRUPA POR ASIENTOS';
COMMENT ON COLUMN conta_dinamica_asiento.unico IS E'S:VARIOS NIVELES; N:UN SOLO NIVEL';
COMMENT ON COLUMN conta_dinamica_asiento.unico_ctacte IS E'S:VARIAS CTAS CTES; N: SOLO UNA CTA CTE';


DROP TABLE IF EXISTS conta_dinamica_ctacteunico;
CREATE TABLE conta_dinamica_ctacteunico (
	unico_ctacte varchar(1) NOT NULL,
	comentario varchar(100)
) ;


DROP TABLE IF EXISTS conta_dinamica_cta_cte;
CREATE TABLE conta_dinamica_cta_cte (
	id_asiento bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_ctacte varchar(50) NOT NULL
) ;


DROP TABLE IF EXISTS conta_dinamica_depto;
CREATE TABLE conta_dinamica_depto (
	id_asiento bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL
) ;


DROP TABLE IF EXISTS conta_dinamica_deptounico;
CREATE TABLE conta_dinamica_deptounico (
	unico varchar(1) NOT NULL,
	comentario varchar(100)
) ;


DROP TABLE IF EXISTS conta_dinamica_indicador;
CREATE TABLE conta_dinamica_indicador (
	id_indicador varchar(35) NOT NULL,
	comentario varchar(50)
) ;


DROP TABLE IF EXISTS conta_documento;
CREATE TABLE conta_documento (
	id_documento bigint NOT NULL,
	id_comprobante varchar(3) NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	nombre varchar(50),
	puerto varchar(10),
	numline bigint,
	numcol bigint,
	serie varchar(5),
	contador bigint,
	activo varchar(1) DEFAULT '1',
	docid varchar(5),
	id_comprobante_afecto varchar(2)
) ;
COMMENT ON COLUMN conta_documento.id_comprobante_afecto IS E'SOLO SE UTILIZARA PARA LOS DOCS TIPO NOTAS C/D';


DROP TABLE IF EXISTS conta_documento_detalle;
CREATE TABLE conta_documento_detalle (
	id_docdetalle bigint NOT NULL,
	id_documento bigint NOT NULL,
	contenido varchar(300),
	modo varchar(1),
	tipo varchar(1),
	pos_x bigint,
	pos_y bigint
) ;


DROP TABLE IF EXISTS conta_documento_ip;
CREATE TABLE conta_documento_ip (
	id_docip bigint NOT NULL,
	id_documento bigint NOT NULL,
	id_tipotransaccion bigint,
	id_dinamica bigint,
	nombre varchar(50),
	ip varchar(40),
	estado varchar(1),
	imprimir varchar(1) DEFAULT 'S'
) ;
COMMENT ON COLUMN conta_documento_ip.imprimir IS E'S= Imprimir en Ticketera, N = No Imprimir';


DROP TABLE IF EXISTS conta_documento_ip_user;
CREATE TABLE conta_documento_ip_user (
	id_docip bigint NOT NULL,
	id bigint NOT NULL,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS conta_documento_print;
CREATE TABLE conta_documento_print (
	id_persona bigint NOT NULL,
	fila bigint,
	texto varchar(4000)
) ;


DROP TABLE IF EXISTS conta_documento_salida_depto;
CREATE TABLE conta_documento_salida_depto (
	id_salidadepto bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto bigint NOT NULL,
	id_documento bigint NOT NULL,
	id_tipodocumentosalida bigint NOT NULL,
	estado bigint NOT NULL,
	fecha_actualizacion timestamp(0),
	fecha_registro timestamp(0),
	id_usuario_act bigint,
	id_usuario_reg bigint
) ;
COMMENT ON COLUMN conta_documento_salida_depto.estado IS E'1=activo
0=inactivo';
COMMENT ON COLUMN conta_documento_salida_depto.fecha_actualizacion IS E'fecha actualizacion';


DROP TABLE IF EXISTS conta_documento_temporal;
CREATE TABLE conta_documento_temporal (
	id_persona bigint NOT NULL,
	fila bigint NOT NULL,
	texto varchar(400)
) ;


DROP TABLE IF EXISTS conta_documento_usuario_salida;
CREATE TABLE conta_documento_usuario_salida (
	id_usuariosalida bigint NOT NULL,
	id_salidadepto bigint NOT NULL,
	id_persona bigint NOT NULL,
	estado bigint NOT NULL,
	id_usuario_reg bigint,
	id_usuario_act bigint,
	fecha_actualizacion timestamp(0),
	fecha_registro timestamp(0)
) ;
COMMENT ON COLUMN conta_documento_usuario_salida.estado IS E'1 = activo
0 = inactivo';


DROP TABLE IF EXISTS conta_empresa;
CREATE TABLE conta_empresa (
	id_empresa bigint NOT NULL,
	id_corporacion bigint NOT NULL,
	id_tipoempresa bigint NOT NULL,
	id_ruc varchar(50) NOT NULL,
	nombre varchar(100) NOT NULL,
	es_activo bigint,
	id_tipoplan bigint,
	emisorid bigint,
	logo varchar(500),
	tipoemisorid varchar(20),
	es_agente_retencion varchar(1) DEFAULT 'N',
	id_tipopais bigint DEFAULT 176,
	razon_social varchar(1000)
) ;
COMMENT ON COLUMN conta_empresa.id_tipopais IS E'ID PAIS';


DROP TABLE IF EXISTS conta_empresa_credencial;
CREATE TABLE conta_empresa_credencial (
	id_empresa bigint NOT NULL,
	sunat_client_id varchar(300) NOT NULL,
	sunat_client_secret varchar(200) NOT NULL,
	sunat_validate varchar(1) DEFAULT '0',
	tipo varchar(10),
	sunat_empresa_ruc varchar(20),
	sunat_empresa_usuario varchar(50),
	sunat_empresa_clave varchar(1000),
	sunat_token varchar(4000)
) ;
COMMENT ON COLUMN conta_empresa_credencial.tipo IS E'01=Validacion comprobantes; 02=SIRE';


DROP TABLE IF EXISTS conta_empresa_cta;
CREATE TABLE conta_empresa_cta (
	id_anho bigint NOT NULL,
	id_empresa bigint NOT NULL,
	id_cuentaempresarial varchar(50) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_moneda bigint NOT NULL,
	id_tipoplan bigint
) ;


DROP TABLE IF EXISTS conta_empresa_cta_bk;
CREATE TABLE conta_empresa_cta_bk (
	id_anho bigint NOT NULL,
	id_empresa bigint NOT NULL,
	id_cuentaempresarial varchar(50) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_moneda bigint NOT NULL,
	id_tipoplan bigint
) ;


DROP TABLE IF EXISTS conta_empresa_cta_bk_23_3_21;
CREATE TABLE conta_empresa_cta_bk_23_3_21 (
	id_anho bigint NOT NULL,
	id_empresa bigint NOT NULL,
	id_cuentaempresarial varchar(50) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_moneda bigint NOT NULL,
	id_tipoplan bigint
) ;


DROP TABLE IF EXISTS conta_empresa_cta_bk_70421;
CREATE TABLE conta_empresa_cta_bk_70421 (
	id_anho bigint NOT NULL,
	id_empresa bigint NOT NULL,
	id_cuentaempresarial varchar(50) NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_moneda bigint NOT NULL,
	id_tipoplan bigint
) ;


DROP TABLE IF EXISTS conta_empresa_impuesto;
CREATE TABLE conta_empresa_impuesto (
	id bigint NOT NULL,
	id_empresa bigint,
	id_tipoimpuesto bigint,
	valor bigint,
	fecha_ini timestamp(0),
	fecha_fin timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS conta_empresa_sucursal;
CREATE TABLE conta_empresa_sucursal (
	id_sucursal bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_empresa bigint NOT NULL,
	cod_sunat varchar(50),
	es_principal bigint,
	es_activo bigint
) ;


DROP TABLE IF EXISTS conta_entidad;
CREATE TABLE conta_entidad (
	id_entidad bigint NOT NULL,
	id_empresa bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_tipoentidad bigint NOT NULL,
	nombre varchar(100) NOT NULL,
	es_activo bigint,
	color varchar(100),
	orden bigint
) ;


DROP TABLE IF EXISTS conta_entidad_anho;
CREATE TABLE conta_entidad_anho (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	fec_inicio timestamp(0),
	fec_termino timestamp(0),
	cos_vital bigint,
	cos_fmr bigint,
	cos_fmd bigint
) ;


DROP TABLE IF EXISTS conta_entidad_anho_config;
CREATE TABLE conta_entidad_anho_config (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	nombre varchar(50),
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	activo varchar(1),
	id_user_inicio bigint,
	id_user_fin bigint,
	id_moneda bigint DEFAULT 7
) ;


DROP TABLE IF EXISTS conta_entidad_balance;
CREATE TABLE conta_entidad_balance (
	id_entidad bigint,
	id_mes bigint,
	id_indicador varchar(100),
	valor decimal(10,2)
) ;


DROP TABLE IF EXISTS conta_entidad_configuracion;
CREATE TABLE conta_entidad_configuracion (
	id_entidad bigint NOT NULL,
	url_aasinet varchar(255),
	ip_server varchar(255),
	nom_server varchar(255),
	nom_astrisk varchar(255),
	es_activo bigint,
	ip_server_marcaciones varchar(255),
	token_shell_exec varchar(500),
	token_user varchar(100),
	token_password varchar(100),
	token_url varchar(500),
	token_file_exec varchar(500),
	rest_url_load varchar(500),
	rest_url_execute varchar(500),
	rest_certificado varchar(500),
	aasinet_legalentityid bigint,
	aasinet_roles varchar(3000),
	aasinet_livetoken varchar(4000)
) ;


DROP TABLE IF EXISTS conta_entidad_cta_cte;
CREATE TABLE conta_entidad_cta_cte (
	id_entidad bigint NOT NULL,
	id_ctacte varchar(50) NOT NULL,
	id_tipoctacte varchar(10) NOT NULL,
	id_tipocuentabanco bigint,
	id_moneda bigint NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS conta_entidad_cta_grupo;
CREATE TABLE conta_entidad_cta_grupo (
	id_cuentaaasi varchar(10) NOT NULL,
	id_entidad bigint NOT NULL,
	id_grupo bigint NOT NULL,
	id_parent varchar(20),
	tiene_ctacte varchar(1)
) ;


DROP TABLE IF EXISTS conta_entidad_depto;
CREATE TABLE conta_entidad_depto (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_parent varchar(10),
	nombre varchar(255),
	es_grupo varchar(10),
	es_activo varchar(3),
	es_empresa varchar(1) DEFAULT '0',
	sigla varchar(100)
) ;


DROP TABLE IF EXISTS conta_entidad_depto_cta_cte;
CREATE TABLE conta_entidad_depto_cta_cte (
	id_entideptoctacte bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_entidad_cliente bigint,
	id_ctacte varchar(50)
) ;


DROP TABLE IF EXISTS conta_entidad_depto_grupo;
CREATE TABLE conta_entidad_depto_grupo (
	id_depto varchar(10) NOT NULL,
	id_entidad bigint NOT NULL,
	id_grupo bigint NOT NULL
) ;


DROP TABLE IF EXISTS conta_entidad_depto_grupo_c;
CREATE TABLE conta_entidad_depto_grupo_c (
	id_depto varchar(20) NOT NULL,
	id_entidad bigint NOT NULL,
	id_grupo varchar(100) NOT NULL
) ;


DROP TABLE IF EXISTS conta_entidad_depto_legal;
CREATE TABLE conta_entidad_depto_legal (
	id_entideplegal bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_depto varchar(22),
	id_tiporedoc bigint,
	fec_inicio timestamp(0),
	fec_fin timestamp(0),
	es_activo varchar(3) NOT NULL,
	direccion_legal varchar(150) NOT NULL,
	nom_ciudad varchar(100),
	telephone varchar(50)
) ;
COMMENT ON TABLE conta_entidad_depto_legal IS E'Tabla para el registro de los representantes legales o encargados de firmar documentos';


DROP TABLE IF EXISTS conta_entidad_depto_resp;
CREATE TABLE conta_entidad_depto_resp (
	id_depto varchar(10) NOT NULL,
	id_entidad bigint NOT NULL,
	fec_termino timestamp(0),
	id_persona bigint NOT NULL,
	fec_inicio timestamp(0) NOT NULL
) ;


DROP TABLE IF EXISTS conta_entidad_email_config;
CREATE TABLE conta_entidad_email_config (
	id_entidad bigint,
	alias varchar(255),
	nombre varchar(255) NOT NULL,
	host varchar(255) NOT NULL,
	username varchar(255) NOT NULL,
	contrasenha varchar(255) NOT NULL,
	smtpsecure varchar(9),
	port varchar(5),
	estado varchar(1) NOT NULL,
	id_email bigint NOT NULL,
	encryption varchar(100)
) ;


DROP TABLE IF EXISTS conta_entidad_feriado;
CREATE TABLE conta_entidad_feriado (
	id_entidad bigint NOT NULL,
	nombre varchar(255),
	fec_feriado timestamp(0) NOT NULL,
	es_oficial varchar(10)
) ;


DROP TABLE IF EXISTS conta_entidad_grupo;
CREATE TABLE conta_entidad_grupo (
	id_grupo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	nombre varchar(255),
	id_parent bigint,
	tipo varchar(5),
	nivel varchar(1),
	orden varchar(2),
	insa varchar(1),
	opcion varchar(100),
	color varchar(100)
) ;
COMMENT ON COLUMN conta_entidad_grupo.tipo IS E'1 = Departamento, 2 = Cuentas';


DROP TABLE IF EXISTS conta_entidad_horario;
CREATE TABLE conta_entidad_horario (
	id_entidad bigint NOT NULL,
	id_horario bigint NOT NULL,
	fec_inicio TIMESTAMP(6),
	fec_termino TIMESTAMP(6) NOT NULL
) ;


DROP TABLE IF EXISTS conta_entidad_horario_det;
CREATE TABLE conta_entidad_horario_det (
	id_entidad bigint NOT NULL,
	id_dia bigint NOT NULL,
	fec_entrada1 timestamp(0),
	fec_salida1 timestamp(0),
	fec_entrada2 timestamp(0) NOT NULL,
	fec_salida2 timestamp(0) NOT NULL,
	id_horario bigint NOT NULL
) ;


DROP TABLE IF EXISTS conta_entidad_mapa;
CREATE TABLE conta_entidad_mapa (
	id_entidad bigint NOT NULL,
	map_latice bigint,
	map_longce double precision,
	map_latitud double precision,
	map_longitud double precision,
	zoom bigint,
	points varchar(255)
) ;


DROP TABLE IF EXISTS conta_entidad_mes_config;
CREATE TABLE conta_entidad_mes_config (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	estado varchar(1),
	id_user_inicio bigint,
	id_user_fin bigint,
	fecha_re_inicio timestamp(0),
	id_user_re_inicio bigint
) ;


DROP TABLE IF EXISTS conta_entidad_periodo;
CREATE TABLE conta_entidad_periodo (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	nom_cierre varchar(50),
	fec_cierre timestamp(0)
) ;


DROP TABLE IF EXISTS conta_entidad_peru_depto;
CREATE TABLE conta_entidad_peru_depto (
	id_entidad bigint NOT NULL,
	id_depto bigint NOT NULL,
	nombre varchar(255)
) ;


DROP TABLE IF EXISTS conta_entidad_transaccion;
CREATE TABLE conta_entidad_transaccion (
	id_entidad bigint NOT NULL,
	id_tipotransaccion bigint NOT NULL,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS conta_entidad_usuario;
CREATE TABLE conta_entidad_usuario (
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL,
	estado bigint
) ;


DROP TABLE IF EXISTS conta_entidad_wc;
CREATE TABLE conta_entidad_wc (
	id_tipoentidad bigint,
	valor bigint,
	id_anho bigint
) ;


DROP TABLE IF EXISTS conta_fecha;
CREATE TABLE conta_fecha (
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS conta_fondo;
CREATE TABLE conta_fondo (
	id_fondo bigint NOT NULL,
	id_parent bigint,
	nombre varchar(255),
	es_grupo varchar(10)
) ;


DROP TABLE IF EXISTS conta_idi;
CREATE TABLE conta_idi (
	id_idi bigint NOT NULL,
	cos_valor bigint,
	fecha timestamp(0),
	id_mes bigint,
	id_anho bigint,
	es_estado bigint,
	id_persona bigint
) ;


DROP TABLE IF EXISTS conta_igv;
CREATE TABLE conta_igv (
	id_igv decimal(10,2) NOT NULL,
	fecha_ini timestamp(0),
	fecha_fin timestamp(0),
	es_venta varchar(1)
) ;


DROP TABLE IF EXISTS conta_igv_entidad;
CREATE TABLE conta_igv_entidad (
	id_igv bigint NOT NULL,
	id_entidad bigint NOT NULL
) ;


DROP TABLE IF EXISTS conta_indicador;
CREATE TABLE conta_indicador (
	id_indicador bigint NOT NULL,
	id_actividad bigint NOT NULL,
	id_tipoindicador bigint NOT NULL,
	id_tipodato bigint NOT NULL,
	id_tipototal bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	subtitulo varchar(255),
	leyenda varchar(255),
	nom_style varchar(255),
	nom_color varchar(255),
	num_orden bigint NOT NULL DEFAULT 1,
	es_activo bigint NOT NULL,
	es_control bigint NOT NULL,
	fec_inicio TIMESTAMP(6) NOT NULL,
	fec_final TIMESTAMP(6),
	val_ideal bigint,
	formula varchar(2000),
	comentario varchar(2000)
) ;


DROP TABLE IF EXISTS conta_indicador_balance;
CREATE TABLE conta_indicador_balance (
	id_indicador bigint NOT NULL,
	simbolo varchar(100),
	ideal decimal(10,2),
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS conta_informe;
CREATE TABLE conta_informe (
	id_informe bigint NOT NULL,
	id_actividad bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_usuario bigint NOT NULL,
	id_tipoestado bigint NOT NULL,
	fec_registro timestamp(0) NOT NULL,
	fec_envio timestamp(0),
	comentario varchar(800)
) ;


DROP TABLE IF EXISTS conta_informe_concepto;
CREATE TABLE conta_informe_concepto (
	id_informe bigint NOT NULL,
	id_actividadconcepto bigint NOT NULL,
	id_persona bigint NOT NULL,
	valor bigint,
	comentario varchar(500)
) ;


DROP TABLE IF EXISTS conta_interfondo_config;
CREATE TABLE conta_interfondo_config (
	id_entidad bigint,
	id_fondo bigint,
	id_fondo_debito bigint,
	id_cuentaaasi_credito varchar(10),
	id_cuentaaasi_debito varchar(10),
	id_restriccion_credito varchar(50),
	id_restriccion_debito varchar(50),
	id_depto_credito varchar(10),
	id_depto_debito varchar(10)
) ;


DROP TABLE IF EXISTS conta_mes;
CREATE TABLE conta_mes (
	id_mes bigint NOT NULL,
	nombre varchar(50),
	siglas varchar(3),
	cod_trimestre bigint,
	cod_semestre bigint
) ;


DROP TABLE IF EXISTS conta_moneda;
CREATE TABLE conta_moneda (
	id_moneda bigint NOT NULL,
	simbolo varchar(50),
	siglas varchar(50),
	nombre varchar(50),
	cod_sunat varchar(50),
	cod_interno varchar(50),
	estado varchar(1) DEFAULT '0',
	nombre_plural varchar(50)
) ;


DROP TABLE IF EXISTS conta_nivel;
CREATE TABLE conta_nivel (
	id_nivel bigint NOT NULL,
	id_parent bigint,
	id_entidad bigint NOT NULL,
	id_tiporeporte bigint NOT NULL,
	nombre varchar(100),
	nivel bigint,
	es_ep varchar(1),
	id_programa_estudio bigint,
	codigo varchar(80)
) ;


DROP TABLE IF EXISTS conta_nivel_alumnos;
CREATE TABLE conta_nivel_alumnos (
	id_nivel bigint,
	id_anho bigint,
	semestre varchar(6),
	cantidad bigint
) ;


DROP TABLE IF EXISTS conta_nivel_detalle;
CREATE TABLE conta_nivel_detalle (
	id_ndetalle bigint NOT NULL,
	id_nivel bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL
) ;


DROP TABLE IF EXISTS conta_operacion;
CREATE TABLE conta_operacion (
	id_conta_operacion bigint NOT NULL,
	codigo varchar(25),
	ruta varchar(250),
	descripcion varchar(1500)
) ;


DROP TABLE IF EXISTS conta_operacion_dinamica;
CREATE TABLE conta_operacion_dinamica (
	id_conta_operacion_din bigint NOT NULL,
	id_conta_operacion bigint,
	id_dinamica bigint,
	id_entidad bigint,
	id_depto varchar(10),
	id_tipovoucher bigint
) ;


DROP TABLE IF EXISTS conta_peru_valor;
CREATE TABLE conta_peru_valor (
	id_anho bigint,
	uit bigint
) ;


DROP TABLE IF EXISTS conta_presupuesto;
CREATE TABLE conta_presupuesto (
	id_presupuesto bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_fondo bigint NOT NULL,
	cos_valor numeric,
	id_entidad bigint NOT NULL,
	id_ctacte varchar(50),
	id_depto varchar(10)
) ;


DROP TABLE IF EXISTS conta_restriccion;
CREATE TABLE conta_restriccion (
	id_restriccion varchar(50) NOT NULL,
	id_parent varchar(50),
	nombre varchar(50) NOT NULL,
	es_grupo bigint
) ;


DROP TABLE IF EXISTS conta_tiporeporte;
CREATE TABLE conta_tiporeporte (
	id_tiporeporte bigint NOT NULL,
	nombre varchar(20)
) ;


DROP TABLE IF EXISTS conta_tipo_cuenta;
CREATE TABLE conta_tipo_cuenta (
	id_tipo_cuenta bigint NOT NULL,
	nombre varchar(100),
	codigo varchar(10),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS conta_tipo_impuesto;
CREATE TABLE conta_tipo_impuesto (
	id_tipoimpuesto bigint NOT NULL,
	nombre varchar(100),
	siglas varchar(10),
	id_tipopais bigint,
	estado varchar(1),
	codigo varchar(25)
) ;


DROP TABLE IF EXISTS conta_voucher;
CREATE TABLE conta_voucher (
	id_voucher bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoasiento varchar(10) NOT NULL,
	id_tipovoucher bigint NOT NULL,
	numero bigint NOT NULL,
	lote varchar(8),
	fecha timestamp(0),
	activo char(1),
	id_voucher_parent bigint,
	id_persona bigint
) ;


DROP TABLE IF EXISTS conta_voucher_comision_visa;
CREATE TABLE conta_voucher_comision_visa (
	id_voucher bigint NOT NULL,
	importe decimal(38,2)
) ;


DROP TABLE IF EXISTS conta_voucher_config;
CREATE TABLE conta_voucher_config (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_tipoasiento varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_modulo bigint NOT NULL,
	fecha timestamp(0),
	automatico varchar(2),
	nombre varchar(55),
	id_tipovoucher bigint NOT NULL,
	id_sistemaexterno bigint,
	id_tipoasiento_parent varchar(10),
	id_tipovoucher_parent bigint
) ;


DROP TABLE IF EXISTS conta_voucher_persona;
CREATE TABLE conta_voucher_persona (
	id_voucher bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_cvoucher bigint,
	fecha timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS conta_voucher_reversion;
CREATE TABLE conta_voucher_reversion (
	id_voucher bigint,
	lote_anterior varchar(8),
	lote_nuevo varchar(8),
	lote_date varchar(10),
	id_persona bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS conta_voucher_user;
CREATE TABLE conta_voucher_user (
	id_voucher bigint NOT NULL,
	id bigint NOT NULL,
	crear varchar(1),
	editar varchar(1),
	eliminar varchar(1)
) ;


DROP TABLE IF EXISTS costo_vinculado;
CREATE TABLE costo_vinculado (
	id_costovinculado bigint NOT NULL,
	id_compra bigint,
	id_compra_vinculada bigint,
	costo_vinculado decimal(10,2),
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0)
) ;


DROP TABLE IF EXISTS coti_categoria;
CREATE TABLE coti_categoria (
	id_categoria bigint NOT NULL,
	nombre varchar(255),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS coti_componente;
CREATE TABLE coti_componente (
	id_componente bigint NOT NULL,
	nombre varchar(255),
	codigo varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS coti_cotizacion;
CREATE TABLE coti_cotizacion (
	id_cotizacion bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	id_tipopais bigint,
	id_cliente bigint,
	fecha timestamp(0),
	importe numeric,
	observacion varchar(1000),
	observacion_cliente varchar(1000),
	id_paso_actual bigint,
	id_tipopago bigint,
	serie varchar(10),
	numero varchar(20),
	validez bigint,
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	es_denominacional varchar(1) DEFAULT '1',
	id_entidad_cliente bigint,
	id_cliente_legal bigint,
	id_venta bigint,
	se_exporta varchar(1) DEFAULT '0',
	id_sedearea bigint,
	pago_a_credito varchar(1) DEFAULT '0',
	id_tipoigv varchar(2),
	id_almacen bigint,
	tipo_cotizacion varchar(1) DEFAULT 'C',
	estado varchar(1),
	es_aprobado varchar(1),
	fecha_aprove timestamp(0),
	id_motivotraslado bigint,
	punto_llegada varchar(255)
) ;
COMMENT ON COLUMN coti_cotizacion.es_aprobado IS E'S: aprobado, N: Rechazado';
COMMENT ON COLUMN coti_cotizacion.es_denominacional IS E'1: ES DENOMINACION EL CLIENTE ES UNA ENTIDAD; 0: EL CLIENTE ES PERSONA NATURAL O JURIDICO';
COMMENT ON COLUMN coti_cotizacion.estado IS E'0: creado 1: Cotización finalizado.';
COMMENT ON COLUMN coti_cotizacion.pago_a_credito IS E'1: EL PAGO ES AL CREDITO ; 2: EL PAGO ES AL CONTADO';
COMMENT ON COLUMN coti_cotizacion.se_exporta IS E'1: SE EXPORTARA LA COTIZACION ; 0: NO SE EXPORTARA';
COMMENT ON COLUMN coti_cotizacion.validez IS E'CANTIDAD DE DIAS QUE LA COTIZACION ES VALIDA';


DROP TABLE IF EXISTS coti_cotizacion_detalle;
CREATE TABLE coti_cotizacion_detalle (
	id_cdetalle bigint NOT NULL,
	id_cotizacion bigint,
	num_paginas bigint,
	cantidad bigint,
	es_disenho_propio varchar(1) DEFAULT '1',
	id_articulo bigint,
	titulo_producto varchar(255),
	es_producto varchar(1) DEFAULT '1',
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	esta_validado varchar(1) DEFAULT '0',
	id_unidadmedida bigint,
	costo_unitario decimal(14,2),
	costo_total decimal(14,2),
	utilidad_porcentaje decimal(5,4),
	importe_unitario decimal(16,2),
	importe decimal(16,2),
	descuento_importe decimal(16,2),
	descuento decimal(16,2)
) ;
COMMENT ON COLUMN coti_cotizacion_detalle.es_disenho_propio IS E'1 = ES DISEÑO PROPIO; 0 = ES DISEÑO ELABORADO';
COMMENT ON COLUMN coti_cotizacion_detalle.es_producto IS E'1 = ES PRODUCTO EXISTENTE; 0 = NO ES UN PRODUCTO';
COMMENT ON COLUMN coti_cotizacion_detalle.esta_validado IS E'1: ESTA VALIDADO TIENE IMPORTE DE PRODUCTO FINAL O EL NUEVO PRODUCTO ; 0: NO ESTA VALIDADO NO SE REGISTRO EL IMPORTE DEL PRODUCTO FINAL O NUEVO PRODUCTO';


DROP TABLE IF EXISTS coti_cotizacion_detalle_config;
CREATE TABLE coti_cotizacion_detalle_config (
	id_cdetalle_config bigint NOT NULL,
	id_modelo bigint,
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	es_distribucion varchar(1),
	es_cabeza varchar(1),
	id_modelo_combinacion bigint,
	id_formato bigint,
	id_ordentrabajo bigint,
	id_componente bigint
) ;
COMMENT ON COLUMN coti_cotizacion_detalle_config.es_cabeza IS E'1: ES CABEZA para el acabado ; 0: ES LOMO para el acabado';
COMMENT ON COLUMN coti_cotizacion_detalle_config.es_distribucion IS E'1: SI ES PARA DISTRICUION ; 2: NO ES PARA DISTRICUCION';


DROP TABLE IF EXISTS coti_cotizacion_detalle_file;
CREATE TABLE coti_cotizacion_detalle_file (
	id_cdetalle_file bigint NOT NULL,
	nombre varchar(255),
	url varchar(1000),
	formato varchar(50),
	tamanho bigint,
	estado varchar(1),
	id_user_created bigint,
	created_at timestamp(0)
) ;
COMMENT ON COLUMN coti_cotizacion_detalle_file.estado IS E'1: REGISTRO FINALIZADO ; 0: REGISTRO PENDIENTE';


DROP TABLE IF EXISTS coti_cotizacion_detalle_mp;
CREATE TABLE coti_cotizacion_detalle_mp (
	id_cotdetallemp bigint NOT NULL,
	id_cdetalle bigint,
	id_articulo bigint,
	cantidad bigint,
	estado varchar(20),
	id_user_created bigint,
	id_user_updated bigint,
	created_at timestamp(0),
	updated_at timestamp(0),
	id_almacen bigint,
	id_unidadmedida bigint,
	id_categoria bigint,
	id_componente bigint
) ;


DROP TABLE IF EXISTS coti_formato;
CREATE TABLE coti_formato (
	id_formato bigint NOT NULL,
	nombre varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS coti_modelo;
CREATE TABLE coti_modelo (
	id_modelo bigint NOT NULL,
	nombre varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS coti_modelo_combinacion;
CREATE TABLE coti_modelo_combinacion (
	id_modelo bigint NOT NULL,
	id_formato bigint NOT NULL,
	estado varchar(1) NOT NULL,
	id_modelo_combinacion bigint NOT NULL,
	id_articulo_pf bigint
) ;


DROP TABLE IF EXISTS coti_modelo_combinacion_det;
CREATE TABLE coti_modelo_combinacion_det (
	id_modelo_combinacion_det bigint NOT NULL,
	id_modelo_combinacion bigint,
	id_componente bigint,
	id_categoria bigint,
	id_articulo_mp bigint,
	es_servicio varchar(1),
	es_costo_fijo varchar(1),
	costo_unitario numeric,
	cantidad bigint,
	id_unidadmedida bigint,
	orden bigint,
	estado varchar(1)
) ;
COMMENT ON COLUMN coti_modelo_combinacion_det.es_costo_fijo IS E'1: ES COSTO FIJO ; 0: NO ES COSTO FIJO';
COMMENT ON COLUMN coti_modelo_combinacion_det.es_servicio IS E'1: SI ES SERVICIO ; 0: NO ES SERVICIO';


DROP TABLE IF EXISTS cw_migrar;
CREATE TABLE cw_migrar (
	codigo varchar(20),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS depto_child;
CREATE TABLE depto_child (
	id_parent varchar(10) NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_entidad bigint NOT NULL
) ;
COMMENT ON TABLE depto_child IS E'DEPARTAMENTOS HIJOS QUE SU GRUPO ES 0';


DROP TABLE IF EXISTS dep_cancha;
CREATE TABLE dep_cancha (
	id_cancha bigint NOT NULL,
	cancha varchar(100),
	codigo varchar(4)
) ;


DROP TABLE IF EXISTS dep_categoria;
CREATE TABLE dep_categoria (
	id_categoria bigint NOT NULL,
	categoria varchar(100)
) ;


DROP TABLE IF EXISTS dep_disciplina;
CREATE TABLE dep_disciplina (
	id_disciplina bigint NOT NULL,
	disciplina varchar(100)
) ;


DROP TABLE IF EXISTS dep_equipo;
CREATE TABLE dep_equipo (
	id_equipo bigint NOT NULL,
	id_torneo bigint NOT NULL,
	equipo varchar(100),
	divide numeric
) ;


DROP TABLE IF EXISTS dep_evaluacion;
CREATE TABLE dep_evaluacion (
	id_evaluacion bigint NOT NULL,
	id_item bigint NOT NULL,
	id_persona bigint,
	id_fixture bigint NOT NULL,
	id_equipo bigint,
	puntaje decimal(10,2),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS dep_evaluacion_item;
CREATE TABLE dep_evaluacion_item (
	id_item bigint NOT NULL,
	nombre varchar(264),
	puntaje decimal(10,2),
	codigo varchar(20)
) ;


DROP TABLE IF EXISTS dep_fase;
CREATE TABLE dep_fase (
	id_fase bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS dep_fixture;
CREATE TABLE dep_fixture (
	id_fixture bigint NOT NULL,
	id_torneo bigint NOT NULL,
	id_cancha bigint NOT NULL,
	id_grupo bigint NOT NULL,
	id_fase bigint,
	id_categoria bigint,
	id_disciplina bigint,
	id_equipo_local bigint NOT NULL,
	id_equipo_visita bigint NOT NULL,
	numero bigint,
	hora timestamp(0),
	resultado varchar(100)
) ;


DROP TABLE IF EXISTS dep_grupo;
CREATE TABLE dep_grupo (
	id_grupo bigint NOT NULL,
	id_categoria bigint NOT NULL,
	id_disciplina bigint NOT NULL,
	id_torneo bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS dep_grupo_equipo;
CREATE TABLE dep_grupo_equipo (
	id_gequipo bigint NOT NULL,
	id_grupo bigint NOT NULL,
	id_equipo bigint NOT NULL,
	orden bigint
) ;


DROP TABLE IF EXISTS dep_torneo;
CREATE TABLE dep_torneo (
	id_torneo bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS ef_balance_patrimonial;
CREATE TABLE ef_balance_patrimonial (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_nivel_parent bigint NOT NULL,
	id_nivel bigint NOT NULL,
	id_cuenta_parent bigint NOT NULL,
	id_cuenta bigint NOT NULL,
	nombre_nivel_parent varchar(100),
	nombre_nivel varchar(100),
	nombre_cuenta_parent varchar(100),
	nombre_cuenta varchar(100),
	importe decimal(12,2)
) ;


DROP TABLE IF EXISTS ef_estado_resultado;
CREATE TABLE ef_estado_resultado (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_nivel_parent bigint NOT NULL,
	id_nivel bigint NOT NULL,
	id_cuenta_parent bigint NOT NULL,
	id_cuenta bigint NOT NULL,
	nombre_nivel_parent varchar(100),
	nombre_nivel varchar(100),
	nombre_cuenta_parent varchar(100),
	nombre_cuenta varchar(100),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS ef_estado_resultado_depto;
CREATE TABLE ef_estado_resultado_depto (
	id_entidad bigint,
	id_anho bigint,
	id_mes bigint,
	id_nivel_uno bigint,
	id_nivel_dos bigint,
	id_nivel_tres bigint,
	id_nivel bigint,
	id_cuenta_padre bigint,
	id_cuenta_hijo bigint,
	id_cuenta bigint,
	nombre_nivel_uno varchar(100),
	nombre_nivel_dos varchar(100),
	nombre_nivel_tres varchar(100),
	nombre_nivel varchar(100),
	nombre_cuenta_padre varchar(100),
	nombre_cuenta_hijo varchar(100),
	nombre_cuenta varchar(100),
	importe decimal(10,2),
	debe decimal(10,2),
	haber decimal(10,2)
) ;


DROP TABLE IF EXISTS ef_resultado_depto;
CREATE TABLE ef_resultado_depto (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS ef_resultado_resumen;
CREATE TABLE ef_resultado_resumen (
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_nivel bigint NOT NULL,
	id_cuenta bigint NOT NULL,
	importe decimal(10,2),
	debe decimal(10,2),
	haber decimal(10,2)
) ;


DROP TABLE IF EXISTS ef_resumen;
CREATE TABLE ef_resumen (
	id_entidad bigint,
	id_anho bigint,
	id_mes bigint,
	id_nivel_sede bigint,
	id_nivel_facultad bigint,
	id_nivel_ep bigint,
	id_cuenta_padre bigint,
	id_cuenta_hijo bigint,
	id_cuenta bigint,
	importe decimal(10,2),
	debe decimal(10,2),
	haber decimal(10,2),
	nombre_sede varchar(100),
	nombre_facultad varchar(100),
	nombre_ep varchar(100),
	nombre_padre varchar(100),
	nombre_hijo varchar(100),
	nombre_cuenta varchar(100)
) ;


DROP TABLE IF EXISTS entidad_sede;
CREATE TABLE entidad_sede (
	id_sede bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(20) NOT NULL DEFAULT '0',
	nombre varchar(200) NOT NULL,
	codigo varchar(10),
	es_activo varchar(1) NOT NULL
) ;
COMMENT ON COLUMN entidad_sede.id_depto IS E'0=Todos los departamentos';


DROP TABLE IF EXISTS eval_categoria;
CREATE TABLE eval_categoria (
	id_categoria bigint NOT NULL,
	nombre varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS eval_depto_persona;
CREATE TABLE eval_depto_persona (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_persona bigint NOT NULL
) ;


DROP TABLE IF EXISTS eval_detalle;
CREATE TABLE eval_detalle (
	id_detalle bigint NOT NULL,
	id_indicador bigint NOT NULL,
	id_registro bigint NOT NULL,
	id_pdetalle bigint,
	respuesta varchar(10),
	ideal varchar(10),
	comentario varchar(255),
	fecha timestamp(0),
	valor decimal(10,2),
	semaforo varchar(1),
	fecha_entrega timestamp(0),
	valor1 decimal(10,2),
	total decimal(10,2),
	dia bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS eval_indicadores;
CREATE TABLE eval_indicadores (
	id_indicador bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_tipo bigint NOT NULL,
	id_periodo bigint NOT NULL,
	id_categoria bigint NOT NULL,
	nombre varchar(255),
	ideal varchar(20),
	formula varchar(255),
	comentario varchar(255),
	sustento varchar(1),
	fecha varchar(1),
	formula_fecha varchar(255) DEFAULT '0',
	estado varchar(1) DEFAULT '1'
) ;


DROP TABLE IF EXISTS eval_periodo;
CREATE TABLE eval_periodo (
	id_periodo bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS eval_periodo_detalle;
CREATE TABLE eval_periodo_detalle (
	id_pdetalle bigint NOT NULL,
	id_periodo bigint NOT NULL,
	codigo varchar(4),
	nombre varchar(30),
	activo varchar(1)
) ;


DROP TABLE IF EXISTS eval_registro;
CREATE TABLE eval_registro (
	id_registro bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_persona bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint,
	id_periodo bigint NOT NULL,
	detalle varchar(100),
	fecha timestamp(0),
	activo varchar(1),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS eval_registro_persona;
CREATE TABLE eval_registro_persona (
	id_persona bigint NOT NULL,
	id_registro bigint NOT NULL,
	fecha timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS eval_sustentos;
CREATE TABLE eval_sustentos (
	id_sustento bigint NOT NULL,
	id_indicador bigint,
	id_registro bigint,
	id_pdetalle bigint,
	fecha timestamp(0),
	valor decimal(10,2),
	name_file varchar(100),
	dia bigint
) ;


DROP TABLE IF EXISTS eval_tipo;
CREATE TABLE eval_tipo (
	id_tipo bigint NOT NULL,
	nombre varchar(50),
	minimo decimal(10,2),
	maximo decimal(20,2),
	valor decimal(10,1),
	estado varchar(1),
	tipo_campo varchar(20),
	simbolo varchar(1),
	ascendente varchar(1)
) ;


DROP TABLE IF EXISTS eval_tipo_detalle;
CREATE TABLE eval_tipo_detalle (
	id_tipodetalle bigint NOT NULL,
	id_tipo bigint,
	valor_min decimal(10,2),
	valor_max decimal(10,2),
	valor_default decimal(10,2),
	nombre varchar(30),
	glosa varchar(10),
	detalle varchar(50)
) ;


DROP TABLE IF EXISTS failed_jobs;
CREATE TABLE failed_jobs (
	id bigint NOT NULL,
	connection text NOT NULL,
	queue text NOT NULL,
	payload text NOT NULL,
	exception text NOT NULL,
	failed_at TIMESTAMP(6) NOT NULL
) ;


DROP TABLE IF EXISTS fin_alumno_descuento_vice;
CREATE TABLE fin_alumno_descuento_vice (
	id_alumno_descuento_vice bigint NOT NULL,
	id_persona bigint NOT NULL,
	descripcion varchar(200),
	tipo_ense varchar(1),
	ensenanza decimal(10,2),
	tipo_mat varchar(1),
	matricula decimal(10,2),
	estado varchar(1),
	id_usuario_reg bigint,
	fecha_registro timestamp(0),
	id_usuario_act bigint,
	fecha_actualizacion timestamp(0),
	tipo_dscto varchar(3),
	id_semestre bigint
) ;
COMMENT ON COLUMN fin_alumno_descuento_vice.ensenanza IS E'SI TIPO_ENSE=P INGRSAR 0-100';
COMMENT ON COLUMN fin_alumno_descuento_vice.matricula IS E'SI TIPO_MAT=P INGRSAR 0-100';
COMMENT ON COLUMN fin_alumno_descuento_vice.tipo_dscto IS E'V: VICERECTORADO,P: DESCUENTO HIJO PERSONAL';
COMMENT ON COLUMN fin_alumno_descuento_vice.tipo_ense IS E'I: Importe, P:porcentaje';
COMMENT ON COLUMN fin_alumno_descuento_vice.tipo_mat IS E'I: Importe, P:porcentaje';


DROP TABLE IF EXISTS fin_alumno_musica;
CREATE TABLE fin_alumno_musica (
	id_alumno_musica bigint NOT NULL,
	id_persona bigint,
	id_venta bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS fin_asignacion;
CREATE TABLE fin_asignacion (
	id_asignacion bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_escuela bigint,
	id_cliente bigint,
	id_financista bigint,
	id_user bigint,
	estado varchar(1),
	id_semestre bigint,
	fecha_create timestamp(0),
	id_plancobro_semestre bigint
) ;


DROP TABLE IF EXISTS fin_asignacion_docente;
CREATE TABLE fin_asignacion_docente (
	id_asign bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_semestre bigint,
	id_user bigint,
	id_docente bigint,
	id_cliente bigint,
	id_escuela bigint,
	fecha timestamp(0),
	estado varchar(1),
	id_programa_estudio bigint
) ;


DROP TABLE IF EXISTS fin_compromiso;
CREATE TABLE fin_compromiso (
	id_compromiso bigint NOT NULL,
	id_anho bigint,
	id_persona bigint,
	id_user bigint,
	detalle varchar(255),
	importe decimal(10,2),
	fecha timestamp(0),
	fecha_reg timestamp(0),
	estado varchar(1),
	name_file varchar(250),
	ext_file varchar(10),
	url_file varchar(250),
	tamanho_file varchar(50)
) ;


DROP TABLE IF EXISTS fin_config;
CREATE TABLE fin_config (
	id_config varchar(20) NOT NULL,
	valor varchar(100),
	valor1 varchar(100),
	comentario varchar(200)
) ;


DROP TABLE IF EXISTS fin_contador_depto;
CREATE TABLE fin_contador_depto (
	id_depto varchar(10) NOT NULL,
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL
) ;


DROP TABLE IF EXISTS fin_contrato_bk;
CREATE TABLE fin_contrato_bk (
	id_contrato_bk bigint NOT NULL,
	id_alumno_contrato bigint,
	id_persona bigint,
	id_user bigint,
	id_venta bigint,
	glosa varchar(155),
	importe decimal(10,2),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS fin_convenio;
CREATE TABLE fin_convenio (
	id_convenio bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_semestre bigint,
	id_persona bigint,
	id_cliente bigint,
	id_sedearea bigint,
	numero bigint,
	nro_cuotas bigint,
	total decimal(10,2),
	fecha timestamp(0),
	observaciones varchar(512),
	es_convenio varchar(1),
	estado varchar(1),
	id_empleado bigint,
	id_persona_update bigint,
	fecha_update timestamp(0)
) ;
COMMENT ON COLUMN fin_convenio.es_convenio IS E'S: ES CONVENIO DE TRABAJADOR, PARA SU DSCTO AUTOMATICO, N:REFINANCIACION';
COMMENT ON COLUMN fin_convenio.nro_cuotas IS E'NRO DE CUOTAS 1 A 12';
COMMENT ON COLUMN fin_convenio.numero IS E'NRO DE CONVENIO';
COMMENT ON COLUMN fin_convenio.total IS E'TOTAL DE LA DEUDA A REFINANNCIAR';


DROP TABLE IF EXISTS fin_convenio_detalle;
CREATE TABLE fin_convenio_detalle (
	id_cdetalle bigint NOT NULL,
	id_convenio bigint,
	cuota bigint,
	fecha timestamp(0),
	importe decimal(10,2),
	cumplio varchar(1),
	id_persona_update bigint,
	fecha_update timestamp(0)
) ;


DROP TABLE IF EXISTS fin_cuota_qa;
CREATE TABLE fin_cuota_qa (
	id bigint NOT NULL,
	id_user bigint,
	id_persona bigint,
	id_alumno_contrato bigint,
	id_entidad bigint,
	id_depto varchar(10),
	id_semestre bigint,
	id_nivel_ensenanza bigint,
	variacion varchar(1),
	nro_cuota bigint,
	error varchar(200),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS fin_cuota_test;
CREATE TABLE fin_cuota_test (
	id_persona bigint,
	glosa varchar(255),
	importe decimal(10,2),
	varr varchar(1),
	nro_cuota bigint,
	lamb varchar(1),
	covid_mat varchar(1),
	fecha timestamp(0),
	id_modalidad_estudio bigint
) ;


DROP TABLE IF EXISTS fin_documento_depto;
CREATE TABLE fin_documento_depto (
	id_depto varchar(10) NOT NULL,
	id_entidad bigint NOT NULL,
	id_documento bigint NOT NULL,
	id_comprobante varchar(4) NOT NULL,
	id_comprobante_ref varchar(4)
) ;


DROP TABLE IF EXISTS fin_estrategia;
CREATE TABLE fin_estrategia (
	id_estrategia bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	nombre varchar(200),
	codigo varchar(20),
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	estado varchar(2),
	id_anho bigint
) ;


DROP TABLE IF EXISTS fin_estrategia_alumno;
CREATE TABLE fin_estrategia_alumno (
	id_estrategia_alumno bigint NOT NULL,
	fecha timestamp(0),
	ganador varchar(100),
	id_financista bigint,
	id_persona bigint,
	id_estrategia bigint
) ;
COMMENT ON COLUMN fin_estrategia_alumno.ganador IS E'Es ganador = 1, No es ganador = 0';


DROP TABLE IF EXISTS fin_evidencia;
CREATE TABLE fin_evidencia (
	id_evidencia bigint NOT NULL,
	id_tipoevidencia bigint,
	id_user bigint,
	id_cliente bigint,
	detalle varchar(255),
	estado varchar(1),
	id_semestre bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS fin_financista;
CREATE TABLE fin_financista (
	id_financista bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	estado varchar(1),
	celular varchar(10)
) ;


DROP TABLE IF EXISTS fin_llave;
CREATE TABLE fin_llave (
	id_llave bigint NOT NULL,
	id_anho bigint NOT NULL,
	numdoc bigint NOT NULL,
	id_persona bigint NOT NULL,
	motivo varchar(200),
	fecha_ini timestamp(0),
	fecha_fin timestamp(0),
	estado varchar(1),
	id_user_reg bigint,
	fecha_reg timestamp(0)
) ;


DROP TABLE IF EXISTS fin_metas;
CREATE TABLE fin_metas (
	id_meta bigint NOT NULL,
	id_semestre bigint,
	id_sede bigint,
	id_semestre_programa bigint,
	id_facultad bigint,
	id_escuela bigint,
	cantidad_alumnos bigint,
	cantidad_creditos bigint,
	fecha timestamp(0),
	id_user bigint,
	estado varchar(1),
	id_programa_estudio bigint
) ;


DROP TABLE IF EXISTS fin_plancobro_semestre;
CREATE TABLE fin_plancobro_semestre (
	id_plancobro_semestre bigint NOT NULL,
	estado bigint DEFAULT 1,
	id_semestre bigint NOT NULL,
	created_at timestamp(0),
	updated_at timestamp(0),
	id_entidad bigint,
	id_depto varchar(10)
) ;


DROP TABLE IF EXISTS fin_plancobro_semestre_det;
CREATE TABLE fin_plancobro_semestre_det (
	id_plancobro_semestre_det bigint NOT NULL,
	nombre varchar(60),
	min_val bigint,
	max_val bigint,
	num_orden bigint,
	color varchar(20),
	id_plancobro_semestre bigint
) ;


DROP TABLE IF EXISTS fin_saldos;
CREATE TABLE fin_saldos (
	id_persona bigint NOT NULL,
	id_semestre varchar(6) NOT NULL,
	id_anho bigint,
	codigo varchar(12),
	saldo decimal(10,2)
) ;


DROP TABLE IF EXISTS fin_sin_dscto;
CREATE TABLE fin_sin_dscto (
	id_persona bigint,
	importe decimal(10,2),
	nro_cuota bigint,
	lamb varchar(1),
	covid_mat varchar(1),
	id_modalidad_estudio bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS fin_test_lab;
CREATE TABLE fin_test_lab (
	codigo varchar(20),
	importe decimal(10,2),
	procesado varchar(1)
) ;


DROP TABLE IF EXISTS fin_tipo_dscto;
CREATE TABLE fin_tipo_dscto (
	tipo_dscto varchar(3) NOT NULL,
	nombre varchar(150),
	consemestre varchar(1),
	estado varchar(1)
) ;
COMMENT ON COLUMN fin_tipo_dscto.consemestre IS E'S:SI, N:NO';


DROP TABLE IF EXISTS grupo_archivo;
CREATE TABLE grupo_archivo (
	id_grupoarchivo bigint NOT NULL,
	nombre varchar(100) NOT NULL
) ;


DROP TABLE IF EXISTS iglesia;
CREATE TABLE iglesia (
	id_iglesia bigint NOT NULL,
	id_distritomisionero bigint NOT NULL,
	cod_acms varchar(50),
	es_activo bigint,
	comentario varchar(50)
) ;


DROP TABLE IF EXISTS iglesia_distrito_misionero;
CREATE TABLE iglesia_distrito_misionero (
	id_distritomisionero bigint NOT NULL,
	id_entidad bigint NOT NULL,
	nombre varchar(255),
	nom_pastor varchar(255),
	cod_acms varchar(10),
	es_activo bigint
) ;


DROP TABLE IF EXISTS informe;
CREATE TABLE informe (
	id_informe bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	id_anho bigint,
	id_mes bigint,
	id_persona bigint,
	id_tipoinforme bigint,
	id_user bigint,
	id_tipopais bigint,
	numero bigint,
	importe_doc numeric,
	importe_ayuda numeric,
	importe_obrero numeric,
	estado_actual varchar(1),
	importe_doc_me numeric,
	viaje_ciudad varchar(150),
	viaje_motivo varchar(250),
	created_at timestamp(0),
	updated_at timestamp(0),
	viaje_fecha_desde timestamp(0),
	viaje_fecha_hasta timestamp(0),
	importe_doc_aprob decimal(10,2),
	importe_ayuda_aprob decimal(10,2),
	importe_obrero_aprob decimal(10,2),
	importe_doc_me_aprob decimal(10,2)
) ;
COMMENT ON COLUMN informe.id_tipopais IS E'Campo para informe de viaje';
COMMENT ON COLUMN informe.importe_ayuda_aprob IS E'Importe de documento solo aprobados y verificados';
COMMENT ON COLUMN informe.importe_doc_aprob IS E'Importe de documento solo aprobados y verificados';
COMMENT ON COLUMN informe.importe_doc_me_aprob IS E'Importe de documento solo aprobados y verificados';
COMMENT ON COLUMN informe.importe_obrero_aprob IS E'Importe de documento solo aprobados y verificados';
COMMENT ON COLUMN informe.viaje_ciudad IS E'Campo para informe de viaje';
COMMENT ON COLUMN informe.viaje_fecha_desde IS E'Campo para informe de viaje';
COMMENT ON COLUMN informe.viaje_fecha_hasta IS E'Campo para informe de viaje';
COMMENT ON COLUMN informe.viaje_motivo IS E'Campo para informe de viaje';


DROP TABLE IF EXISTS informe_ayuda;
CREATE TABLE informe_ayuda (
	id_iayuda bigint NOT NULL,
	id_informe bigint,
	id_conceptoaps bigint,
	id_cvariable bigint,
	doc_serie varchar(20),
	doc_numero varchar(20),
	doc_fecha timestamp(0),
	descripcion varchar(500),
	doc_url varchar(200),
	doc_name varchar(200),
	valor_conceptoaps bigint,
	importe_doc numeric,
	importe_ayuda numeric,
	importe_obrero numeric,
	es_aprobado varchar(1),
	doc_type_file varchar(100),
	created_at timestamp(0),
	updated_at timestamp(0),
	es_conceptoaps_persona varchar(1) NOT NULL DEFAULT '0'
) ;
COMMENT ON COLUMN informe_ayuda.doc_type_file IS E'image/jpg,application/pdf,etc.';
COMMENT ON COLUMN informe_ayuda.es_aprobado IS E'1=Aprobado en informe; 0=Rechazado en informe';
COMMENT ON COLUMN informe_ayuda.es_conceptoaps_persona IS E'Es para saber si se usara la nueva tabla ELISEO.INFORME_CONCEPTOAPS_PERSONA, los valores de un concepto. Se izo pensando para los jubilados';


DROP TABLE IF EXISTS informe_categoria;
CREATE TABLE informe_categoria (
	id_icategoria bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1),
	created_at timestamp(0),
	updated_at timestamp(0)
) ;


DROP TABLE IF EXISTS informe_categoria_config;
CREATE TABLE informe_categoria_config (
	id_entidad bigint NOT NULL,
	id_depto varchar(20) NOT NULL,
	id_icategoria bigint NOT NULL,
	id_tipotransaccion bigint,
	id_dinamica bigint,
	estado varchar(1),
	created_at timestamp(0),
	updated_at timestamp(0),
	tipo_doc varchar(20) NOT NULL
) ;


DROP TABLE IF EXISTS informe_compra;
CREATE TABLE informe_compra (
	id_icompra bigint NOT NULL,
	id_informe bigint NOT NULL,
	id_compra bigint,
	id_icategoria bigint NOT NULL,
	id_moneda bigint,
	id_proveedor bigint,
	id_comprobante varchar(3),
	id_igv bigint DEFAULT 18,
	fecha timestamp(0),
	serie varchar(20),
	numero varchar(20),
	importe decimal(38,2),
	importe_me decimal(38,2),
	igv decimal(38,2),
	igv_me decimal(38,2),
	tipo_cambio decimal(10,3),
	otros decimal(38,2),
	otros_me decimal(38,2),
	taxs decimal(38,2),
	taxs_me decimal(38,2),
	desplazamiento varchar(300),
	es_aprobado varchar(1),
	estado varchar(1),
	sincredito decimal(10,2),
	sincredito_me decimal(10,2),
	importe_contable decimal(14,2),
	importe_contable_me decimal(14,2)
) ;


DROP TABLE IF EXISTS informe_conceptoaps_config;
CREATE TABLE informe_conceptoaps_config (
	id_conceptoaps bigint NOT NULL,
	tiene_variable varchar(1),
	tipo_valor varchar(1),
	valor bigint,
	estado varchar(1),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_tipoperiodo bigint,
	tope_porcentaje bigint,
	tiene_tope varchar(1),
	es_config_funcion varchar(1) DEFAULT ('0'),
	funcion varchar(100),
	id_corporacion bigint
) ;
COMMENT ON COLUMN informe_conceptoaps_config.estado IS E'0 = no validado | 1 = validado';
COMMENT ON COLUMN informe_conceptoaps_config.id_corporacion IS E'TIENE EL FIN DE DIVIDIR A UNIONES, AUN NO ESTA EN USO';
COMMENT ON COLUMN informe_conceptoaps_config.id_tipoperiodo IS E'PARA TOPE DE FMR';
COMMENT ON COLUMN informe_conceptoaps_config.tiene_tope IS E'PARA TOPE DE FMR';
COMMENT ON COLUMN informe_conceptoaps_config.tiene_variable IS E'0 = NO | 1 = SI';
COMMENT ON COLUMN informe_conceptoaps_config.tipo_valor IS E'P = porcentaje | F = valor fijo';
COMMENT ON COLUMN informe_conceptoaps_config.tope_porcentaje IS E'PARA TOPE DE FMR';


DROP TABLE IF EXISTS informe_conceptoaps_persona;
CREATE TABLE informe_conceptoaps_persona (
	id_entidad bigint,
	id_persona bigint,
	id_anho bigint,
	id_mes bigint,
	id_conceptoaps bigint NOT NULL,
	tiene_variable varchar(1),
	tipo_valor varchar(1),
	valor numeric,
	estado varchar(1),
	tope_porcentaje decimal(38,4),
	id_tipoperiodo bigint,
	tiene_tope varchar(1)
) ;
COMMENT ON COLUMN informe_conceptoaps_persona.estado IS E'0 = no validado | 1 = validado';
COMMENT ON COLUMN informe_conceptoaps_persona.id_tipoperiodo IS E'PARA TOPE DE FMR';
COMMENT ON COLUMN informe_conceptoaps_persona.tiene_tope IS E'PARA TOPE DE FMR';
COMMENT ON COLUMN informe_conceptoaps_persona.tiene_variable IS E'0 = NO | 1 = SI';
COMMENT ON COLUMN informe_conceptoaps_persona.tipo_valor IS E'P = porcentaje | F = valor fijo';
COMMENT ON COLUMN informe_conceptoaps_persona.tope_porcentaje IS E'PARA TOPE DE FMR';


DROP TABLE IF EXISTS informe_config;
CREATE TABLE informe_config (
	id_iconfig bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	id_anho bigint,
	id_mes bigint,
	id_tipoinforme bigint,
	id_persona bigint,
	fecha_apertura timestamp(0),
	fecha_cierre timestamp(0),
	created_at timestamp(0),
	updated_at timestamp(0),
	tabla_tipo varchar(100)
) ;
COMMENT ON COLUMN informe_config.id_tipoinforme IS E'Esto el el id de la tabla nombre.';


DROP TABLE IF EXISTS informe_djurada;
CREATE TABLE informe_djurada (
	id_djurada bigint NOT NULL,
	id_informe bigint,
	motivo varchar(200),
	ciudad varchar(150),
	fecha_desde timestamp(0),
	fecha_hasta timestamp(0),
	voto varchar(20),
	es_aprobado varchar(1),
	numero varchar(20),
	created_at timestamp(0),
	updated_at timestamp(0)
) ;


DROP TABLE IF EXISTS informe_file;
CREATE TABLE informe_file (
	id_ifile bigint NOT NULL,
	origen varchar(50) NOT NULL,
	id_origen bigint NOT NULL,
	nombre varchar(250),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tamanho decimal(10,2),
	estado varchar(1),
	url_old varchar(250)
) ;


DROP TABLE IF EXISTS informe_gasto;
CREATE TABLE informe_gasto (
	id_igasto bigint NOT NULL,
	id_informe bigint,
	id_moneda bigint,
	id_tipotransaccion bigint,
	id_dinamica bigint,
	id_icategoria bigint,
	id_voucher bigint,
	id_tipoorigen bigint DEFAULT 18,
	fecha timestamp(0),
	detalle varchar(200),
	importe numeric,
	importe_me numeric,
	doc_type_file varchar(100),
	doc_url varchar(200),
	doc_name varchar(200),
	es_dj varchar(1),
	es_aprobado varchar(1),
	estado varchar(1),
	desplazamiento varchar(250),
	ciudad varchar(200),
	created_at timestamp(0),
	updated_at timestamp(0)
) ;
COMMENT ON COLUMN informe_gasto.es_aprobado IS E'1=SI; 0=NO';


DROP TABLE IF EXISTS informe_observacion;
CREATE TABLE informe_observacion (
	id_observacion bigint NOT NULL,
	origen varchar(50),
	id_origen bigint,
	id_ofrecuente bigint,
	id_persona bigint,
	observacion varchar(200),
	estado varchar(1),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_paso bigint,
	id_registro bigint
) ;
COMMENT ON COLUMN informe_observacion.estado IS E'R=Registrando; V=Verificando; A=Autorizando';
COMMENT ON COLUMN informe_observacion.id_origen IS E'id del registro de la tabla';
COMMENT ON COLUMN informe_observacion.origen IS E'Nombra de la tabla';


DROP TABLE IF EXISTS informe_seguimiento;
CREATE TABLE informe_seguimiento (
	id_iseguimiento bigint NOT NULL,
	id_informe bigint,
	id_persona bigint,
	estado varchar(1),
	created_at timestamp(0),
	updated_at timestamp(0)
) ;
COMMENT ON COLUMN informe_seguimiento.estado IS E'R=Registrando; V=Verificando; A=Autorizando; O=Autorizado';


DROP TABLE IF EXISTS inventario_almacen;
CREATE TABLE inventario_almacen (
	id_almacen bigint NOT NULL,
	id_parent bigint,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_sedearea bigint,
	nombre varchar(100),
	estado varchar(1),
	id_existencia bigint,
	codigo varchar(20),
	tipo_servicio varchar(1),
	venta_publico varchar(1) DEFAULT 'N',
	color varchar(20),
	icono varchar(20),
	id_dinamica bigint
) ;


DROP TABLE IF EXISTS inventario_almacen_articulo;
CREATE TABLE inventario_almacen_articulo (
	id_almacen bigint NOT NULL,
	id_articulo bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_tipoigv varchar(2),
	codigo varchar(50),
	stock_minimo decimal(16,4),
	stock_actual decimal(16,4) NOT NULL,
	costo decimal(16,4) NOT NULL,
	costo_total decimal(16,4) NOT NULL,
	es_servicio varchar(1),
	estado varchar(1),
	ubicacion varchar(6),
	abreviatura varchar(255),
	id_ctacte varchar(500),
	grupo varchar(50),
	afecto_detraccion varchar(1) DEFAULT '0',
	stock_maximo decimal(16,2),
	stock_reposicion decimal(16,2),
	id_categoria_almacen_articulo bigint,
	modelo varchar(150)
) ;


DROP TABLE IF EXISTS inventario_almacen_art_cod;
CREATE TABLE inventario_almacen_art_cod (
	id_almacen_articulo_cod bigint NOT NULL,
	id_articulo bigint,
	barcode varchar(250),
	fecha_lote timestamp(0),
	fecha_registro timestamp(0)
) ;


DROP TABLE IF EXISTS inventario_almacen_documento;
CREATE TABLE inventario_almacen_documento (
	id_doc bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_documento bigint NOT NULL,
	id_tipooperacion varchar(2) NOT NULL,
	estado varchar(1),
	id_comprobante varchar(3),
	es_virtual varchar(1) DEFAULT 'N'
) ;


DROP TABLE IF EXISTS inventario_almacen_rubro;
CREATE TABLE inventario_almacen_rubro (
	id_rubro bigint NOT NULL,
	id_almacen bigint NOT NULL,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_almacen_rubro_cat;
CREATE TABLE inventario_almacen_rubro_cat (
	id_rcategoria bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(25) NOT NULL,
	id_dinamica bigint,
	id_anho bigint,
	id_modulo bigint,
	change_depto varchar(1),
	new_depto varchar(25),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_almacen_tigv_ctacte;
CREATE TABLE inventario_almacen_tigv_ctacte (
	id_tipoigv_ctacte bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_tipoigv varchar(2) NOT NULL,
	id_ctacte varchar(50) NOT NULL
) ;
COMMENT ON TABLE inventario_almacen_tigv_ctacte IS E'INVENTARIO ALMACEN TIPO IGV CON CUENTA CORRIENTE, HECHO PARA IMPRENTA Y ACES, CLASIFICAR SUS VENTA';


DROP TABLE IF EXISTS inventario_almacen_users;
CREATE TABLE inventario_almacen_users (
	id_almacen bigint NOT NULL,
	id_persona bigint NOT NULL,
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	estado varchar(1),
	asignado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_almacen_vcanal;
CREATE TABLE inventario_almacen_vcanal (
	id_venta_canal bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto_ccosto varchar(25) NOT NULL
) ;
COMMENT ON TABLE inventario_almacen_vcanal IS E'INVENTARIO ALMACEN VENTA CANAL, HECHO PARA IMPRENTA Y ACES';


DROP TABLE IF EXISTS inventario_articulo;
CREATE TABLE inventario_articulo (
	id_articulo bigint NOT NULL,
	id_parent bigint,
	id_unidadmedida bigint,
	id_marca bigint,
	id_codcubso varchar(60),
	id_clase bigint,
	nombre varchar(255) NOT NULL,
	codigo varchar(20),
	imagen_url varchar(255),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_articulo_codigo;
CREATE TABLE inventario_articulo_codigo (
	id_codarticulo bigint NOT NULL,
	id_articulo bigint NOT NULL,
	codigo varchar(50)
) ;


DROP TABLE IF EXISTS inventario_articulo_pf;
CREATE TABLE inventario_articulo_pf (
	id_articulo bigint NOT NULL,
	id_tipofamilia bigint,
	codigo varchar(50)
) ;


DROP TABLE IF EXISTS inventario_campanha;
CREATE TABLE inventario_campanha (
	id_campanha bigint NOT NULL,
	id_entidad bigint,
	id_rubro bigint,
	id_persona bigint,
	id_anho bigint,
	nombre varchar(100),
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_campanha_estado;
CREATE TABLE inventario_campanha_estado (
	id_persona bigint NOT NULL,
	id_campanha bigint NOT NULL,
	estado varchar(1) NOT NULL,
	fecha TIMESTAMP(6) NOT NULL,
	id_estado bigint NOT NULL
) ;
COMMENT ON COLUMN inventario_campanha_estado.estado IS E'A=APERTURA,R=REAPERTURA,C=CIERRE';


DROP TABLE IF EXISTS inventario_catalogo_cubso;
CREATE TABLE inventario_catalogo_cubso (
	id_codcubso varchar(60) NOT NULL,
	id_parent varchar(60) NOT NULL,
	id_cubso bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS inventario_clase;
CREATE TABLE inventario_clase (
	id_clase bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS inventario_detalle;
CREATE TABLE inventario_detalle (
	id_movdetalle bigint NOT NULL,
	id_movimiento bigint NOT NULL,
	id_articulo bigint NOT NULL,
	id_dinamica bigint NOT NULL,
	cantidad decimal(15,4) NOT NULL,
	costo decimal(15,4) NOT NULL,
	importe decimal(15,4) NOT NULL,
	estado varchar(1),
	detalle varchar(200)
) ;


DROP TABLE IF EXISTS inventario_kardex;
CREATE TABLE inventario_kardex (
	id_kardex bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_articulo bigint NOT NULL,
	id_tipoorigen bigint NOT NULL,
	id_origen bigint NOT NULL,
	fecha timestamp(0),
	tipo varchar(1),
	cantidad decimal(16,4),
	costo_unitario decimal(16,4),
	costo_total decimal(16,4)
) ;
COMMENT ON COLUMN inventario_kardex.id_tipoorigen IS E'VENTA = ID_VDETALLE, COMPRA = ID_DETALLE, PEDIDO = ID_DESPACHO, INVENTARIO = ID_MOVDETALLE ';


DROP TABLE IF EXISTS inventario_marca;
CREATE TABLE inventario_marca (
	id_marca bigint NOT NULL,
	nombre varchar(50) NOT NULL
) ;


DROP TABLE IF EXISTS inventario_movimiento;
CREATE TABLE inventario_movimiento (
	id_movimiento bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_receta bigint,
	id_persona bigint NOT NULL,
	id_tipooperacion varchar(2) NOT NULL,
	id_voucher bigint,
	id_documento bigint,
	tipo varchar(1),
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	cantidad decimal(10,2),
	ip varchar(33),
	estado varchar(1),
	id_tipoorigen bigint DEFAULT 6,
	guia varchar(200),
	id_pedido bigint,
	id_movparent bigint,
	id_almacen_destino bigint,
	id_tipotransaccion bigint,
	id_dinamica bigint,
	id_venta_guia bigint
) ;
COMMENT ON COLUMN inventario_movimiento.id_movparent IS E'ID de movimiento asociado al mismo.';
COMMENT ON COLUMN inventario_movimiento.id_pedido IS E'Movimientos que se generan a partir de un pedido';


DROP TABLE IF EXISTS inventario_movimiento_asiento;
CREATE TABLE inventario_movimiento_asiento (
	id_masiento bigint NOT NULL,
	id_movimiento bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_fondo bigint NOT NULL,
	id_ctacte varchar(50),
	id_depto varchar(10),
	dc varchar(1),
	porcentaje decimal(10,2),
	importe decimal(10,2),
	glosa varchar(60),
	indicador varchar(200),
	agrupa varchar(1),
	nro_asiento bigint
) ;


DROP TABLE IF EXISTS inventario_receta;
CREATE TABLE inventario_receta (
	id_receta bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_recetatipo varchar(4),
	nombre varchar(100) NOT NULL,
	rendimiento bigint NOT NULL,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_receta_articulo;
CREATE TABLE inventario_receta_articulo (
	id_receta bigint NOT NULL,
	id_articulo bigint NOT NULL,
	cantidad decimal(10,2),
	precio_unitario_ref decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_receta_producto;
CREATE TABLE inventario_receta_producto (
	id_receta bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_articulo bigint NOT NULL,
	id_dinamica bigint,
	cantidad decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_receta_tipo;
CREATE TABLE inventario_receta_tipo (
	id_recetatipo bigint NOT NULL,
	nombre varchar(60)
) ;


DROP TABLE IF EXISTS inventario_rubro;
CREATE TABLE inventario_rubro (
	id_rubro bigint NOT NULL,
	id_entidad bigint,
	nombre varchar(60),
	alias varchar(30),
	codigo varchar(25),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_rubro_categoria;
CREATE TABLE inventario_rubro_categoria (
	id_rcategoria bigint NOT NULL,
	id_entidad bigint,
	id_rubro bigint,
	nombre varchar(100),
	alias varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inventario_unidad_medida;
CREATE TABLE inventario_unidad_medida (
	id_unidadmedida bigint NOT NULL,
	nombre varchar(50) NOT NULL,
	codigo_sunat varchar(3),
	es_decimal varchar(1),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS inven_test;
CREATE TABLE inven_test (
	codigo varchar(20),
	pu decimal(10,2),
	cantidad decimal(10,2)
) ;


DROP TABLE IF EXISTS inv_test;
CREATE TABLE inv_test (
	codigo varchar(50),
	cantidad decimal(10,2),
	costo decimal(10,2)
) ;


DROP TABLE IF EXISTS jobs_queues;
CREATE TABLE jobs_queues (
	id bigint,
	queue varchar(255) NOT NULL,
	payload text NOT NULL,
	attempts bigint NOT NULL,
	reserved_at bigint,
	available_at bigint NOT NULL,
	created_at bigint NOT NULL
) ;


DROP TABLE IF EXISTS lamb_acceso_nivel;
CREATE TABLE lamb_acceso_nivel (
	id_acceso_nivel bigint NOT NULL,
	id_tipo_nivel_vista bigint NOT NULL,
	id_trabajador bigint NOT NULL,
	id_modulo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_tipo_nivel_area bigint
) ;


DROP TABLE IF EXISTS lamb_acceso_nivel_det;
CREATE TABLE lamb_acceso_nivel_det (
	id_acceso_nivel_det bigint NOT NULL,
	id_acceso_nivel bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_entidad_depto bigint,
	id_depto varchar(10),
	id_area bigint,
	id_tipo_nivel_area bigint
) ;


DROP TABLE IF EXISTS lamb_accion;
CREATE TABLE lamb_accion (
	id_accion bigint NOT NULL,
	id_modulo bigint,
	nombre varchar(50),
	metodo varchar(20),
	clave varchar(150),
	valor varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_accion_x;
CREATE TABLE lamb_accion_x (
	id_accion bigint,
	codigo varchar(20),
	nombre varchar(50),
	metodo varchar(20),
	clave varchar(50),
	valor varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_appversion;
CREATE TABLE lamb_appversion (
	id bigint NOT NULL,
	code varchar(50) NOT NULL,
	name varchar(50),
	version varchar(50),
	update_app timestamp(0),
	url varchar(100),
	platform varchar(20),
	id_fcm_app bigint
) ;


DROP TABLE IF EXISTS lamb_entidad_depto_config;
CREATE TABLE lamb_entidad_depto_config (
	id bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_modulo bigint NOT NULL,
	id_tema bigint NOT NULL,
	fecha timestamp(0),
	sidebar varchar(10)
) ;


DROP TABLE IF EXISTS lamb_fcm_apps;
CREATE TABLE lamb_fcm_apps (
	fb_id varchar(100),
	name varchar(150),
	fb_server_key varchar(500),
	os_app_id varchar(100),
	os_api_key varchar(500),
	id_fcm_app bigint NOT NULL,
	code varchar(20)
) ;
COMMENT ON COLUMN lamb_fcm_apps.code IS E'Codigo de la aplicación';
COMMENT ON COLUMN lamb_fcm_apps.fb_id IS E'ID del proyecto en Firebase';
COMMENT ON COLUMN lamb_fcm_apps.fb_server_key IS E'Server Key del proyecto en Firebase';
COMMENT ON COLUMN lamb_fcm_apps.name IS E'Nombre de la aplicación';
COMMENT ON COLUMN lamb_fcm_apps.os_api_key IS E'Api Key del proyecto en One Signal';
COMMENT ON COLUMN lamb_fcm_apps.os_app_id IS E'ID del proyecto en One Signal';


DROP TABLE IF EXISTS lamb_fcm_device;
CREATE TABLE lamb_fcm_device (
	token varchar(500) NOT NULL,
	id_persona bigint NOT NULL,
	id_app bigint NOT NULL,
	platform varchar(50),
	model varchar(100),
	id_userdevice bigint,
	created_at timestamp(0),
	updated_at timestamp(0)
) ;


DROP TABLE IF EXISTS lamb_mensaje;
CREATE TABLE lamb_mensaje (
	id_mensaje bigint NOT NULL,
	id_tipoorigen bigint,
	id_origen bigint,
	id_remitente bigint,
	id_destinatario bigint,
	tipo varchar(1),
	fecha timestamp(0) DEFAULT statement_timestamp(),
	mensaje varchar(256),
	es_respuesta varchar(1),
	es_leido varchar(1)
) ;
COMMENT ON COLUMN lamb_mensaje.es_leido IS E'1 = LEIDO, 0 O NULL = SIN LEEER';


DROP TABLE IF EXISTS lamb_mensaje_file;
CREATE TABLE lamb_mensaje_file (
	id_mfile bigint NOT NULL,
	id_mensaje bigint NOT NULL,
	nombre varchar(100),
	descripcion varchar(100),
	url varchar(100),
	tipo varchar(2)
) ;
COMMENT ON COLUMN lamb_mensaje_file.tipo IS E'6: Registrar pedido
7: Autorizar pedido
8: Programación de viajes pedido
9: Entregar pedido';


DROP TABLE IF EXISTS lamb_metodo;
CREATE TABLE lamb_metodo (
	id_metodo bigint NOT NULL,
	nombre varchar(20)
) ;


DROP TABLE IF EXISTS lamb_modulo;
CREATE TABLE lamb_modulo (
	id_modulo bigint NOT NULL,
	id_padre bigint,
	id_privilegio bigint NOT NULL,
	nombre varchar(60),
	nivel varchar(1),
	url varchar(100),
	imagen varchar(100),
	tipo varchar(20) DEFAULT '0',
	orden bigint,
	estado varchar(1),
	es_activo varchar(1),
	token varchar(100),
	comentario varchar(1000),
	codigo varchar(8),
	tipo_modulo varchar(1),
	component varchar(100),
	icon varchar(50),
	home varchar(1),
	pathmach varchar(20),
	redirect char(1),
	accesoxnivel varchar(2),
	is_group varchar(1),
	badge_status varchar(10),
	badge_text varchar(50),
	badge_dotmode varchar(1),
	is_absolute varchar(1),
	target varchar(20),
	id_tipoplataforma bigint DEFAULT 1,
	background varchar(300),
	file_url varchar(200),
	svg varchar(4000)
) ;
COMMENT ON COLUMN lamb_modulo.accesoxnivel IS E'S: si N o null No';
COMMENT ON COLUMN lamb_modulo.badge_status IS E'primary,danger,warning,success';
COMMENT ON COLUMN lamb_modulo.is_group IS E'Si el elemento es solo un grupo (no se puede hacer clic)';


DROP TABLE IF EXISTS lamb_modulo_activo;
CREATE TABLE lamb_modulo_activo (
	id_activo bigint NOT NULL,
	id_modulo bigint,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	mensaje varchar(200),
	fecha_limite timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_perfil;
CREATE TABLE lamb_perfil (
	id_perfil bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS lamb_perfil_detalle;
CREATE TABLE lamb_perfil_detalle (
	id_detperfil bigint NOT NULL,
	id_perfil bigint NOT NULL,
	id_privilegio bigint NOT NULL,
	clave varchar(100),
	valor varchar(2000)
) ;


DROP TABLE IF EXISTS lamb_process;
CREATE TABLE lamb_process (
	id_proceso bigint NOT NULL,
	id_entidad bigint NOT NULL,
	nombre varchar(100),
	codigo varchar(10),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_process_activo;
CREATE TABLE lamb_process_activo (
	id_activo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_task bigint,
	id_modulo bigint NOT NULL,
	id_sedearea bigint NOT NULL,
	mensaje varchar(512),
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	hora_inicio varchar(6),
	hora_fin varchar(6),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_process_execute;
CREATE TABLE lamb_process_execute (
	id_execute bigint NOT NULL,
	id_proceso bigint NOT NULL,
	id_tipoorigen bigint,
	id_origen bigint,
	id_paso_actual bigint NOT NULL,
	id_task bigint,
	detalle varchar(512),
	fecha timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_process_exec_paso;
CREATE TABLE lamb_process_exec_paso (
	id_dexec bigint NOT NULL,
	id_execute bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_paso_actual bigint NOT NULL,
	id_paso_next bigint NOT NULL,
	detalle varchar(512),
	fecha timestamp(0),
	estado varchar(1),
	revisado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_process_flujo;
CREATE TABLE lamb_process_flujo (
	id_flujo bigint NOT NULL,
	id_task bigint NOT NULL,
	id_paso bigint NOT NULL,
	id_paso_next bigint NOT NULL,
	tag varchar(100),
	orden bigint,
	estado varchar(1),
	id_paso_next_alt bigint
) ;


DROP TABLE IF EXISTS lamb_process_paso;
CREATE TABLE lamb_process_paso (
	id_paso bigint NOT NULL,
	id_proceso bigint NOT NULL,
	nombre varchar(100),
	codigo varchar(40),
	glosa varchar(100)
) ;


DROP TABLE IF EXISTS lamb_process_task;
CREATE TABLE lamb_process_task (
	id_task bigint NOT NULL,
	id_proceso bigint NOT NULL,
	nombre varchar(100),
	estado varchar(1),
	orden bigint,
	codigo varchar(8),
	color varchar(50),
	descripcion varchar(100)
) ;


DROP TABLE IF EXISTS lamb_resource;
CREATE TABLE lamb_resource (
	id_resource bigint NOT NULL,
	nombre varchar(100),
	ruta varchar(100),
	detalle varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_resource_accion;
CREATE TABLE lamb_resource_accion (
	id_modulo bigint NOT NULL,
	id_resource bigint NOT NULL,
	id_metodo bigint NOT NULL,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS lamb_rol;
CREATE TABLE lamb_rol (
	id_rol bigint NOT NULL,
	nombre varchar(50) NOT NULL,
	estado varchar(1),
	id_modulo bigint,
	codigo varchar(20)
) ;


DROP TABLE IF EXISTS lamb_rol_beca;
CREATE TABLE lamb_rol_beca (
	id_rol bigint NOT NULL,
	id_tipo_requisito_beca bigint NOT NULL,
	fecha timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS lamb_rol_entidad_depto;
CREATE TABLE lamb_rol_entidad_depto (
	id_rol bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	importe decimal(10,2),
	descripcion varchar(100),
	fecha timestamp(0),
	estado varchar(1),
	codigo_rol varchar(50)
) ;


DROP TABLE IF EXISTS lamb_rol_modulo;
CREATE TABLE lamb_rol_modulo (
	id_rol bigint NOT NULL,
	id_modulo bigint NOT NULL,
	estado char(1) DEFAULT '1'
) ;


DROP TABLE IF EXISTS lamb_rol_modulo_accion;
CREATE TABLE lamb_rol_modulo_accion (
	id_rol bigint NOT NULL,
	id_modulo bigint NOT NULL,
	id_accion bigint NOT NULL,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS lamb_rol_modulo_accion_x;
CREATE TABLE lamb_rol_modulo_accion_x (
	id_rol bigint,
	codigo varchar(20),
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS lamb_tema;
CREATE TABLE lamb_tema (
	id_tema bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1),
	color_primary varchar(100),
	color_secondary varchar(100),
	tipo_modulo varchar(1) DEFAULT 'A'
) ;


DROP TABLE IF EXISTS lamb_users_depto;
CREATE TABLE lamb_users_depto (
	id bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	estado bigint DEFAULT 0,
	activo varchar(1) DEFAULT '1'
) ;
COMMENT ON COLUMN lamb_users_depto.estado IS E'1:Depto por Default, 0: Depto secundario';


DROP TABLE IF EXISTS lamb_usuarios;
CREATE TABLE lamb_usuarios (
	id_persona bigint NOT NULL,
	id_perfil bigint,
	login varchar(255),
	contrasenha varchar(255),
	remember_token varchar(200),
	id varchar(20)
) ;


DROP TABLE IF EXISTS lamb_usuario_rol;
CREATE TABLE lamb_usuario_rol (
	id_rol bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_user bigint
) ;


DROP TABLE IF EXISTS log_error;
CREATE TABLE log_error (
	id_log_error bigint NOT NULL,
	id_user bigint,
	mensaje varchar(4000),
	modulo varchar(200),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS matricula;
CREATE TABLE matricula (
	id_matricula bigint NOT NULL,
	id_persona bigint NOT NULL
) ;


DROP TABLE IF EXISTS matricula_responsable;
CREATE TABLE matricula_responsable (
	id_pariente bigint NOT NULL,
	id_matricula bigint NOT NULL,
	id_persona bigint NOT NULL,
	es_pagador varchar(10),
	es_vive varchar(10),
	es_viveconalumno varchar(10)
) ;


DROP TABLE IF EXISTS mat_alumno_colegio;
CREATE TABLE mat_alumno_colegio (
	id_mat_alumno_colegio bigint NOT NULL,
	id_institucion bigint NOT NULL,
	id_persona bigint,
	anho bigint NOT NULL,
	nivel varchar(50),
	grado varchar(50),
	num_documento varchar(20) NOT NULL,
	alumno varchar(200) NOT NULL,
	estado varchar(1) DEFAULT '1',
	fecha_reg timestamp(0) DEFAULT statement_timestamp(),
	fecha_act timestamp(0)
) ;
COMMENT ON COLUMN mat_alumno_colegio.alumno IS E'Nombres y Apellidos del alumno';
COMMENT ON COLUMN mat_alumno_colegio.estado IS E'1=Activo 0=Desactivo';
COMMENT ON COLUMN mat_alumno_colegio.id_persona IS E'Cuando se verifica al alumno actualizar el id_persona que esta en lamb';
COMMENT ON COLUMN mat_alumno_colegio.num_documento IS E'Doumento Unico del alumno';


DROP TABLE IF EXISTS mat_alumno_contrato_asiento;
CREATE TABLE mat_alumno_contrato_asiento (
	id_alumno_contrato_asiento bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_alumno_contrato_det bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_ctacte bigint,
	porcentaje decimal(10,2),
	importe decimal(10,2),
	glosa varchar(200),
	id_alumno_contrato bigint NOT NULL
) ;


DROP TABLE IF EXISTS mat_alumno_contrato_cuota;
CREATE TABLE mat_alumno_contrato_cuota (
	id_item bigint NOT NULL,
	id_alumno_contrato bigint NOT NULL,
	id_planpago_semestre_det bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	importe decimal(10,2) NOT NULL,
	ejecutado varchar(1) DEFAULT 'N',
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;


DROP TABLE IF EXISTS mat_alumno_contrato_det;
CREATE TABLE mat_alumno_contrato_det (
	id_alumno_contrato bigint NOT NULL,
	id_criterio_semestre bigint NOT NULL,
	id_alumno_contrato_det bigint NOT NULL,
	importe decimal(10,2),
	dc varchar(1),
	acumula decimal(10,2),
	id_semestre_programa bigint,
	id_parent bigint,
	descripcion varchar(500),
	imp_cal decimal(10,2),
	tipo_valor varchar(2),
	aplazado varchar(1),
	id_depto varchar(10),
	id_parent_mis bigint,
	importe_mis decimal(10,2),
	acum_mis decimal(10,2),
	importe_real decimal(10,2),
	creditos decimal(10,2),
	unitario decimal(10,2)
) ;
COMMENT ON COLUMN mat_alumno_contrato_det.aplazado IS E'S:SI';
COMMENT ON COLUMN mat_alumno_contrato_det.id_semestre_programa IS E'PARA EL ASIENTO';


DROP TABLE IF EXISTS mat_alumno_contrato_recal;
CREATE TABLE mat_alumno_contrato_recal (
	id_item bigint NOT NULL,
	id_alumno_contrato bigint NOT NULL,
	id_user_reg bigint,
	fecha_reg timestamp(0)
) ;


DROP TABLE IF EXISTS mat_ciclo_costo;
CREATE TABLE mat_ciclo_costo (
	id_ciclo_costo bigint NOT NULL,
	id_semestre_programa bigint NOT NULL,
	id_criterio bigint NOT NULL,
	ciclo bigint NOT NULL,
	importe decimal(10,2)
) ;
COMMENT ON COLUMN mat_ciclo_costo.ciclo IS E'CICLO DEL ALUMNO';
COMMENT ON COLUMN mat_ciclo_costo.id_semestre_programa IS E'Indica la escuela profesional';
COMMENT ON COLUMN mat_ciclo_costo.importe IS E'Costo total definido por la escuela academica';


DROP TABLE IF EXISTS mat_concepto_asign_alum;
CREATE TABLE mat_concepto_asign_alum (
	id_alumno_contrato bigint NOT NULL,
	id_criterio_semestre bigint NOT NULL,
	item bigint NOT NULL,
	id_semestre_programa bigint,
	descripcion varchar(500),
	id_plan varchar(20),
	cantidad decimal(10,2),
	unitario decimal(10,2),
	total decimal(10,2),
	dc varchar(1),
	tipo_valor varchar(2),
	aplazado varchar(1),
	creditos decimal(10,2),
	unitario_cred decimal(10,2)
) ;
COMMENT ON COLUMN mat_concepto_asign_alum.aplazado IS E'S:SI';
COMMENT ON COLUMN mat_concepto_asign_alum.tipo_valor IS E'I: Importe, P:porcentaje';


DROP TABLE IF EXISTS mat_config_pago;
CREATE TABLE mat_config_pago (
	id_config_pago bigint NOT NULL,
	id_sede bigint NOT NULL,
	tipo varchar(2) NOT NULL,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;
COMMENT ON COLUMN mat_config_pago.tipo IS E'C:COMPLETO, P:PARCIAL';


DROP TABLE IF EXISTS mat_config_parametro;
CREATE TABLE mat_config_parametro (
	id_config_parametro bigint NOT NULL,
	codigo varchar(15) NOT NULL,
	nombre varchar(50) NOT NULL,
	descripcion varchar(200),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS mat_criterio;
CREATE TABLE mat_criterio (
	id_criterio bigint NOT NULL,
	codigo varchar(15) NOT NULL,
	nombre varchar(150) NOT NULL,
	tipo_cobro varchar(1) NOT NULL,
	id_parent bigint,
	dc varchar(1),
	estado varchar(1),
	id_afecta bigint,
	tipo varchar(2),
	orden bigint,
	id_tipo_requisito_beca bigint,
	comentario varchar(150),
	tipo_alumno varchar(5),
	id_criterio_proc bigint,
	id_modo_contrato bigint,
	tipo_dscto varchar(3),
	ver_hijo varchar(2),
	resi_men bigint,
	proforma bigint,
	proforma_manual bigint,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	id_procedure_pro_cri bigint
) ;
COMMENT ON COLUMN mat_criterio.dc IS E'D: Debito C. Credito';
COMMENT ON COLUMN mat_criterio.id_procedure_pro_cri IS E'ES PARA ASIGNA PROCESO PARA TODOS, PARA HACER ESTO HACER ANALISIS';
COMMENT ON COLUMN mat_criterio.orden IS E'Ordena la prioridad del criterio';
COMMENT ON COLUMN mat_criterio.proforma IS E'1: PROFORMA, 0 O NULL NO ES';
COMMENT ON COLUMN mat_criterio.proforma_manual IS E'si es PARA VISUALIZAR EN PROFORMA 1: si, 0 O no';
COMMENT ON COLUMN mat_criterio.tipo IS E'M:MATRICULA, E:ENSEÑANZA, R:RESIDENCIA';
COMMENT ON COLUMN mat_criterio.tipo_alumno IS E'RE: Regular, B18: BECA 18';
COMMENT ON COLUMN mat_criterio.tipo_cobro IS E'U: Unico, M: Mensual';
COMMENT ON COLUMN mat_criterio.ver_hijo IS E'Para padre obligatorio va ser visible todos los hijos :S: si , null N: no';


DROP TABLE IF EXISTS mat_criterio_semestre;
CREATE TABLE mat_criterio_semestre (
	id_criterio_semestre bigint NOT NULL,
	id_semestre_programa bigint NOT NULL,
	id_criterio bigint NOT NULL,
	importe decimal(10,2),
	formula varchar(2000),
	tipo_proceso varchar(2),
	tipo_valor varchar(2),
	estado varchar(1),
	id_procedure bigint,
	id_procedure_pro bigint
) ;
COMMENT ON COLUMN mat_criterio_semestre.formula IS E'SOLO CUANDO TIPO_PROCESO P Y PF OBLIGATORIO';
COMMENT ON COLUMN mat_criterio_semestre.importe IS E'SI TIPO_PROCESO ES P NO ES OBLIGATORIO, SI TIPO_VALOR =P INGRESAR 0-100';
COMMENT ON COLUMN mat_criterio_semestre.tipo_proceso IS E'F: Fijo, P: Procedimiento,PF: PROCEDEMIENTO Y FIJO
';
COMMENT ON COLUMN mat_criterio_semestre.tipo_valor IS E'I: IMPORTE, P:PORCENTAJE. SI TIPO_PROCESO ES P NO ES OBLIGATORIO';


DROP TABLE IF EXISTS mat_criterio_semestre_asiento;
CREATE TABLE mat_criterio_semestre_asiento (
	id_criterio_semestre_asiento bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_criterio_semestre bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10),
	id_ctacte bigint,
	porcentaje decimal(10,2),
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	es_eap varchar(1),
	tipo_dc varchar(1)
) ;
COMMENT ON COLUMN mat_criterio_semestre_asiento.es_eap IS E'S: Es escuela y ID_DEPTO = NULL; N: No es ecuela  y ID_DEPTO no es vacio';
COMMENT ON COLUMN mat_criterio_semestre_asiento.tipo_dc IS E'D: Debito; C: Credito';


DROP TABLE IF EXISTS mat_planpago;
CREATE TABLE mat_planpago (
	id_planpago bigint NOT NULL,
	nombre varchar(50) NOT NULL,
	codigo varchar(10),
	descripcion varchar(200),
	cuotas bigint,
	estado varchar(1),
	cuota_cro bigint,
	conmat1cuota varchar(1)
) ;
COMMENT ON COLUMN mat_planpago.conmat1cuota IS E'S: Incluye 1 Cuota en matricula, N: No Incluye 1 Cuota en matricula';


DROP TABLE IF EXISTS mat_planpago_semestre;
CREATE TABLE mat_planpago_semestre (
	id_planpago_semestre bigint NOT NULL,
	id_planpago bigint NOT NULL,
	id_semestre_programa bigint NOT NULL,
	estado varchar(2) DEFAULT '1',
	valida_ciclo varchar(1) DEFAULT 'N'
) ;


DROP TABLE IF EXISTS mat_planpago_semestre_ciclo;
CREATE TABLE mat_planpago_semestre_ciclo (
	id_planpago_semestre_ciclo bigint NOT NULL,
	id_planpago_semestre bigint NOT NULL,
	ciclo varchar(2)
) ;


DROP TABLE IF EXISTS mat_planpago_semestre_det;
CREATE TABLE mat_planpago_semestre_det (
	id_planpago_semestre_det bigint NOT NULL,
	id_planpago_semestre bigint NOT NULL,
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	orden bigint,
	ejecutado varchar(1) DEFAULT 'N',
	ciclo bigint
) ;


DROP TABLE IF EXISTS mat_plan_costo;
CREATE TABLE mat_plan_costo (
	id_plan_costo bigint NOT NULL,
	id_semestre_programa bigint NOT NULL,
	id_criterio bigint NOT NULL,
	id_plan bigint NOT NULL,
	importe decimal(10,2)
) ;
COMMENT ON COLUMN mat_plan_costo.id_plan IS E'Plan academico';
COMMENT ON COLUMN mat_plan_costo.id_semestre_programa IS E'Indica la escuela profesional';
COMMENT ON COLUMN mat_plan_costo.importe IS E'Costo total definido por la escuela academica';


DROP TABLE IF EXISTS mat_procedure;
CREATE TABLE mat_procedure (
	nombre varchar(60) NOT NULL,
	descripcion varchar(120),
	estado varchar(1),
	id_procedure bigint NOT NULL,
	dc varchar(1),
	proforma bigint DEFAULT 0
) ;
COMMENT ON TABLE mat_procedure IS E'tabla que contiene los nombres de los procedimientos que existen en la base de datos';


DROP TABLE IF EXISTS mat_test;
CREATE TABLE mat_test (
	codigo varchar(20) NOT NULL,
	id_persona bigint
) ;


DROP TABLE IF EXISTS mat_test_anticipo;
CREATE TABLE mat_test_anticipo (
	id_persona bigint,
	id_venta bigint,
	importe decimal(10,2),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS mat_test_idec;
CREATE TABLE mat_test_idec (
	id_semestre bigint,
	id_persona bigint,
	idec varchar(1)
) ;


DROP TABLE IF EXISTS mat_test_sin_internado;
CREATE TABLE mat_test_sin_internado (
	id_semestre bigint NOT NULL,
	id_persona bigint NOT NULL,
	codigo varchar(20),
	interno varchar(1)
) ;


DROP TABLE IF EXISTS md_applicationfiles;
CREATE TABLE md_applicationfiles (
	id bigint NOT NULL,
	applications_id_fk bigint NOT NULL,
	name varchar(200) NOT NULL,
	uri varchar(4000) NOT NULL,
	type varchar(100) NOT NULL,
	state varchar(100) NOT NULL,
	language varchar(100),
	loc bigint,
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(4000),
	updated_on timestamp(0),
	updated_by varchar(4000)
) ;
COMMENT ON TABLE md_applicationfiles IS E'Holds a tuple for each file that is being processed whether it is changed or not.';
COMMENT ON COLUMN md_applicationfiles.created_by IS E'APEX';
COMMENT ON COLUMN md_applicationfiles.created_on IS E'APEX';
COMMENT ON COLUMN md_applicationfiles.language IS E'Language of the file that has been processed.';
COMMENT ON COLUMN md_applicationfiles.name IS E'file name  //OBJECTNAME';
COMMENT ON COLUMN md_applicationfiles.security_group_id IS E'APEX';
COMMENT ON COLUMN md_applicationfiles.state IS E'State will be how this file is operated on.  For example. it will be OPEN, NEW, FIXED, IGNORED, REVIEWED, COMPLETE';
COMMENT ON COLUMN md_applicationfiles.type IS E'This will denote the type of file we have, including DIR, FILE (text), BINARY, IGNORE (where we choose to ignore files)';
COMMENT ON COLUMN md_applicationfiles.updated_by IS E'APEX';
COMMENT ON COLUMN md_applicationfiles.updated_on IS E'APEX';
COMMENT ON COLUMN md_applicationfiles.uri IS E'The uri is the part of the file url after the base dir has been removed.  See MD_APPLICATION for base dir';


DROP TABLE IF EXISTS md_applications;
CREATE TABLE md_applications (
	id bigint NOT NULL,
	name varchar(4000),
	description varchar(4000),
	base_dir varchar(4000),
	output_dir varchar(4000),
	backup_dir varchar(4000),
	inplace bigint,
	project_id_fk bigint NOT NULL,
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(255),
	last_updated_on timestamp(0),
	last_updated_by varchar(255)
) ;
COMMENT ON TABLE md_applications IS E'This is the base table for application projects.  It holds the base information for applications associated with a database';
COMMENT ON COLUMN md_applications.backup_dir IS E'This is the directory in which the application files are backed up if a backp is chosen';
COMMENT ON COLUMN md_applications.base_dir IS E'This is the base src directory for the application.  It could be an svn checkout, a clearcase view or something similar';
COMMENT ON COLUMN md_applications.description IS E'Overview of what the application does.';
COMMENT ON COLUMN md_applications.id IS E'Primary Key';
COMMENT ON COLUMN md_applications.inplace IS E'Designates whether the changes have been made inplace, in the source directory or not';
COMMENT ON COLUMN md_applications.name IS E'Name of the application suite  //OBJECTNAME';
COMMENT ON COLUMN md_applications.output_dir IS E'This is the output directory where the scanner will present the converted files, if there are converted or modified.';
COMMENT ON COLUMN md_applications.project_id_fk IS E'project of the database(s) this application relates to';


DROP TABLE IF EXISTS md_catalogs;
CREATE TABLE md_catalogs (
	id bigint NOT NULL,
	connection_id_fk bigint NOT NULL,
	catalog_name varchar(4000),
	dummy_flag char(1) DEFAULT 'N',
	native_sql text,
	native_key varchar(4000),
	comments varchar(4000),
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(255),
	last_updated_on timestamp(0),
	last_updated_by varchar(255)
) ;
COMMENT ON TABLE md_catalogs IS E'Store catalogs in this table.';
COMMENT ON COLUMN md_catalogs.catalog_name IS E'Name of the catalog //OBJECTNAME';
COMMENT ON COLUMN md_catalogs.connection_id_fk IS E'Foreign key into the connections table - Shows what connection this catalog belongs to //PARENTFIELD';
COMMENT ON COLUMN md_catalogs.dummy_flag IS E'Flag to show if this catalog is a "dummy" catalog which is used as a placeholder for those platforms that do not support catalogs.  ''N'' signifies that this is NOT a dummy catalog, while ''Y'' signifies that it is.';
COMMENT ON COLUMN md_catalogs.native_key IS E'A unique identifier used to identify the catalog at source.';
COMMENT ON COLUMN md_catalogs.native_sql IS E'THe SQL used to create this catalog';


DROP TABLE IF EXISTS md_columns;
CREATE TABLE md_columns (
	id bigint NOT NULL,
	table_id_fk bigint NOT NULL,
	column_name varchar(4000) NOT NULL,
	column_order bigint NOT NULL,
	column_type varchar(4000),
	precision bigint,
	scale bigint,
	nullable char(1) NOT NULL,
	default_value varchar(4000),
	native_sql text,
	native_key varchar(4000),
	datatype_transformed_flag char(1),
	comments varchar(4000),
	security_group_id bigint NOT NULL DEFAULT 0,
	created_by varchar(255),
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	last_updated_by varchar(255),
	last_updated_on timestamp(0)
) ;
COMMENT ON TABLE md_columns IS E'Column information is stored in this table.';
COMMENT ON COLUMN md_columns.id IS E'Primary Key';


DROP TABLE IF EXISTS md_file_artifacts;
CREATE TABLE md_file_artifacts (
	id bigint NOT NULL,
	applicationfiles_id bigint NOT NULL,
	pattern varchar(4000),
	string_found varchar(4000),
	string_replaced varchar(4000),
	type varchar(200),
	status varchar(4000),
	line bigint,
	pattern_start bigint,
	pattern_end bigint,
	due_date timestamp(0),
	db_type varchar(100),
	code_type varchar(1000),
	description varchar(4000),
	priority bigint,
	security_group_id varchar(20) NOT NULL DEFAULT '0',
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(4000),
	last_updated timestamp(0),
	last_updated_by varchar(4000)
) ;
COMMENT ON TABLE md_file_artifacts IS E'Holds a tuple for each interesting thing the scanner finds in a file';
COMMENT ON COLUMN md_file_artifacts.code_type IS E'Source code db api, like dblib, jdbc';
COMMENT ON COLUMN md_file_artifacts.db_type IS E'Source database calls type';
COMMENT ON COLUMN md_file_artifacts.description IS E'This is a description of the artifact which will have a default generated by the scanner and then can be modified by the user to be more appropriate for their use';
COMMENT ON COLUMN md_file_artifacts.due_date IS E'Due timestamp is used by the TODO mechanism to manage the validation and work to complete this change';
COMMENT ON COLUMN md_file_artifacts.pattern IS E'Pattern used to search source file for interesting artifiacts';
COMMENT ON COLUMN md_file_artifacts.priority IS E'The priority is set for the TODOs so they can be managed by the user';
COMMENT ON COLUMN md_file_artifacts.status IS E'Pattern used to search source file for interesting artifiacts';
COMMENT ON COLUMN md_file_artifacts.string_found IS E'String found in source from the pattern supplied';
COMMENT ON COLUMN md_file_artifacts.string_replaced IS E'This is the string which replace the string found if it was replaced.';
COMMENT ON COLUMN md_file_artifacts.type IS E'This is the type of the replacement.  It could be a straight replace from a replacement pattern, or we could have passed the string to a translator which would change the string depending on the database.';


DROP TABLE IF EXISTS md_group_members;
CREATE TABLE md_group_members (
	id bigint NOT NULL,
	group_id_fk bigint NOT NULL,
	user_id_fk bigint,
	group_member_id_fk bigint,
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(255),
	last_updated_on timestamp(0),
	last_updated_by varchar(255)
) ;
COMMENT ON TABLE md_group_members IS E'This table is used to store the members of a group.';
COMMENT ON COLUMN md_group_members.group_member_id_fk IS E'groups can be members of groups';
COMMENT ON COLUMN md_group_members.id IS E'Primary Key';
COMMENT ON COLUMN md_group_members.user_id_fk IS E'Id of member';


DROP TABLE IF EXISTS md_repoversions;
CREATE TABLE md_repoversions (
	revision bigint NOT NULL
) ;
COMMENT ON TABLE md_repoversions IS E'This table is used to version this schema for future requirements.';


DROP TABLE IF EXISTS md_sequences;
CREATE TABLE md_sequences (
	id bigint NOT NULL,
	schema_id_fk bigint NOT NULL,
	name varchar(4000) NOT NULL,
	seq_start bigint NOT NULL,
	incr bigint NOT NULL DEFAULT 1,
	native_sql text,
	native_key varchar(4000),
	comments varchar(4000),
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(255) NOT NULL DEFAULT '0',
	last_updated_on timestamp(0),
	last_updated_by varchar(255)
) ;
COMMENT ON TABLE md_sequences IS E'For storing information on sequences.';
COMMENT ON COLUMN md_sequences.id IS E'Primary Key';
COMMENT ON COLUMN md_sequences.incr IS E'Increment value of the sequence';
COMMENT ON COLUMN md_sequences.name IS E'Name of this sequence //OBJECTNAME';
COMMENT ON COLUMN md_sequences.native_key IS E'Identifier for this object at source.';
COMMENT ON COLUMN md_sequences.native_sql IS E'SQL used to create this object at source';
COMMENT ON COLUMN md_sequences.schema_id_fk IS E'The schema to which this object belongs. //PARENTFIELD';
COMMENT ON COLUMN md_sequences.seq_start IS E'Starting point of the sequence';


DROP TABLE IF EXISTS md_tablespaces;
CREATE TABLE md_tablespaces (
	id bigint NOT NULL,
	schema_id_fk bigint NOT NULL,
	tablespace_name varchar(4000),
	native_sql text,
	native_key varchar(4000),
	comments varchar(4000),
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(255),
	last_updated_on timestamp(0),
	last_updated_by varchar(255)
) ;
COMMENT ON TABLE md_tablespaces IS E'For storing information about tablespaces.';
COMMENT ON COLUMN md_tablespaces.id IS E'Primary Key';
COMMENT ON COLUMN md_tablespaces.native_key IS E'A unique identifier for this object at source';
COMMENT ON COLUMN md_tablespaces.native_sql IS E'The SQL used to create this tablespace';
COMMENT ON COLUMN md_tablespaces.schema_id_fk IS E'Schema to which this tablespace belongs //PARENTFIELD';
COMMENT ON COLUMN md_tablespaces.tablespace_name IS E'Name of the table space //OBJECTNAME';


DROP TABLE IF EXISTS md_users;
CREATE TABLE md_users (
	id bigint NOT NULL,
	schema_id_fk bigint NOT NULL,
	username varchar(4000) NOT NULL,
	password varchar(4000),
	native_sql text,
	native_key varchar(4000),
	comments varchar(4000),
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(255),
	last_updated_on timestamp(0),
	last_updated_by varchar(255)
) ;
COMMENT ON TABLE md_users IS E'User information.';
COMMENT ON COLUMN md_users.id IS E'Primary Key';
COMMENT ON COLUMN md_users.native_key IS E'Unique identifier for this object at source.';
COMMENT ON COLUMN md_users.native_sql IS E'SQL Used to create this object at source';
COMMENT ON COLUMN md_users.password IS E'Password for login';
COMMENT ON COLUMN md_users.schema_id_fk IS E'Shema in which this object belongs //PARENTFIELD';
COMMENT ON COLUMN md_users.username IS E'Username for login //OBJECTNAME';


DROP TABLE IF EXISTS md_user_privileges;
CREATE TABLE md_user_privileges (
	id bigint NOT NULL,
	user_id_fk bigint NOT NULL,
	privilege_id_fk bigint,
	security_group_id bigint NOT NULL DEFAULT 0,
	created_on timestamp(0) NOT NULL DEFAULT statement_timestamp(),
	created_by varchar(255),
	last_updated_on timestamp(0),
	last_udpated_by varchar(255)
) ;
COMMENT ON TABLE md_user_privileges IS E'This table stores privileges granted to individual users';
COMMENT ON COLUMN md_user_privileges.id IS E'Primary Key';
COMMENT ON COLUMN md_user_privileges.privilege_id_fk IS E'Privilege';
COMMENT ON COLUMN md_user_privileges.user_id_fk IS E'User';


DROP TABLE IF EXISTS medio_pago;
CREATE TABLE medio_pago (
	id_mediopago varchar(3) NOT NULL,
	nombre varchar(100),
	activo varchar(1),
	codigo_modulo bigint
) ;


DROP TABLE IF EXISTS metodo_pago;
CREATE TABLE metodo_pago (
	id_metodopago bigint NOT NULL,
	nombre varchar(200),
	codigo varchar(20),
	es_activo varchar(1),
	dias bigint
) ;


DROP TABLE IF EXISTS migrations;
CREATE TABLE migrations (
	id bigint NOT NULL,
	migration varchar(255) NOT NULL,
	batch bigint NOT NULL
) ;


DROP TABLE IF EXISTS numeros;
CREATE TABLE numeros (
	numero bigint NOT NULL,
	numtxt varchar(60)
) ;


DROP TABLE IF EXISTS observacion_frecuente;
CREATE TABLE observacion_frecuente (
	id_ofrecuente bigint NOT NULL,
	nombre varchar(150),
	created_at timestamp(0),
	updated_at timestamp(0)
) ;
COMMENT ON TABLE observacion_frecuente IS E'Observaciones frecuentes para los informes de GTH';


DROP TABLE IF EXISTS org_area;
CREATE TABLE org_area (
	id_area bigint NOT NULL,
	id_parent bigint,
	id_entidad bigint,
	id_tipoarea bigint NOT NULL,
	nombre varchar(200),
	nivel bigint,
	izquierda bigint,
	derecha bigint,
	orden bigint,
	estado varchar(1),
	codigo varchar(20),
	nivelhijo bigint,
	tipo varchar(2),
	gth bigint,
	sigla varchar(20),
	codigo_reporte varchar(10),
	updated_at timestamp(0),
	codigo_xpress_educa varchar(4000),
	id_dependencia bigint,
	id_dependencia_mi bigint
) ;
COMMENT ON COLUMN org_area.id_dependencia_mi IS E'para minidu';


DROP TABLE IF EXISTS org_area_responsable;
CREATE TABLE org_area_responsable (
	id_responsable bigint NOT NULL,
	id_sedearea bigint NOT NULL,
	id_nivel bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_persona bigint NOT NULL,
	fecha timestamp(0),
	activo varchar(1)
) ;


DROP TABLE IF EXISTS org_dependencia;
CREATE TABLE org_dependencia (
	id_dependencia bigint NOT NULL,
	nombre varchar(200) NOT NULL,
	codigo varchar(20),
	tipo varchar(2),
	vigencia bigint
) ;
COMMENT ON COLUMN org_dependencia.tipo IS E'SU: SUNEDU, MI: MINEDU';


DROP TABLE IF EXISTS org_escuela_profesional;
CREATE TABLE org_escuela_profesional (
	id_ep bigint NOT NULL,
	id_area bigint NOT NULL,
	id_usuario_reg bigint NOT NULL,
	fecha_registro timestamp(0) NOT NULL,
	id_usuario_act bigint,
	fecha_actualizacion timestamp(0)
) ;


DROP TABLE IF EXISTS org_local;
CREATE TABLE org_local (
	id_local bigint NOT NULL,
	nombre varchar(200) NOT NULL,
	cod_local varchar(20),
	cod_sede_filial varchar(20),
	depto varchar(100),
	pvcia varchar(100),
	dtto varchar(100),
	direccion varchar(500),
	tipo_autorizacion varchar(200),
	vigencia bigint
) ;


DROP TABLE IF EXISTS org_local_depto;
CREATE TABLE org_local_depto (
	id_local_depto bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_local bigint NOT NULL
) ;


DROP TABLE IF EXISTS org_nivel_gestion;
CREATE TABLE org_nivel_gestion (
	id_nivel bigint NOT NULL,
	nombre varchar(65)
) ;


DROP TABLE IF EXISTS org_sede;
CREATE TABLE org_sede (
	id_sede bigint NOT NULL,
	nombre varchar(55),
	codigo varchar(20),
	id_depto varchar(1),
	schoolid varchar(200),
	sigla varchar(10),
	codigo_xpress_educa varchar(4000),
	codsunedu varchar(10)
) ;


DROP TABLE IF EXISTS org_sede_area;
CREATE TABLE org_sede_area (
	id_sedearea bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_sede bigint NOT NULL,
	id_area bigint NOT NULL,
	id_persona bigint NOT NULL,
	estado varchar(1),
	codigo varchar(20),
	id_depto_general varchar(10),
	codsunedu varchar(10)
) ;
COMMENT ON COLUMN org_sede_area.id_depto_general IS E'Depto general de escuela por sede';


DROP TABLE IF EXISTS payonline;
CREATE TABLE payonline (
	id_payonline bigint NOT NULL,
	tokens varchar(100) NOT NULL,
	tokens_proceso varchar(100) NOT NULL,
	url_visa varchar(100),
	url_mc varchar(100),
	url_visa_pr varchar(100),
	url_mc_pr varchar(100)
) ;


DROP TABLE IF EXISTS payonline_aplicacion;
CREATE TABLE payonline_aplicacion (
	id_aplicacion bigint NOT NULL,
	nombre varchar(150) NOT NULL,
	descripcion varchar(150),
	url_servicio varchar(300),
	url_respuesta varchar(300),
	url_verificacion varchar(300),
	conexion varchar(100),
	tabla_operacion varchar(60),
	tabla_main varchar(60),
	campos varchar(2000),
	campos_servicio varchar(2000)
) ;


DROP TABLE IF EXISTS payonline_visa;
CREATE TABLE payonline_visa (
	id_visa bigint NOT NULL,
	merchantid varchar(30) NOT NULL,
	accesskey varchar(100) NOT NULL,
	secretkey varchar(100) NOT NULL,
	prod varchar(1) NOT NULL,
	descripcion varchar(200),
	"user" varchar(100),
	pwd varchar(100),
	id_entidad bigint,
	id_depto varchar(100),
	correo varchar(100),
	dni varchar(20)
) ;
COMMENT ON COLUMN payonline_visa.id_entidad IS E'CAMPOS PARA LA NUEVA VERSIÓN DE PAGOS VISA';
COMMENT ON COLUMN payonline_visa.pwd IS E'CAMPOS PARA LA NUEVA VERSIÓN DE PAGOS VISA';
COMMENT ON COLUMN payonline_visa.user IS E'CAMPOS PARA LA NUEVA VERSIÓN DE PAGOS VISA';


DROP TABLE IF EXISTS payonline_visa_error;
CREATE TABLE payonline_visa_error (
	id_visa_error bigint NOT NULL,
	desapoyo varchar(250),
	descliente varchar(250)
) ;


DROP TABLE IF EXISTS payonline_visa_log;
CREATE TABLE payonline_visa_log (
	id_visa_log bigint NOT NULL,
	codigo_persona varchar(30),
	rpta_visa varchar(1500),
	id_visa_error bigint,
	mensaje varchar(500),
	rpta_servicio varchar(2000),
	nerror_servicio bigint,
	rpta_respuesta varchar(1500),
	nerror_respuesta bigint,
	ip varchar(150),
	fecha TIMESTAMP(6),
	id_visa bigint,
	id_aplicacion bigint,
	importe decimal(10,2),
	id_operacion varchar(20),
	transaction_id varchar(100),
	data_to_regenerate varchar(2000),
	fecha_regenerate timestamp(0)
) ;
COMMENT ON COLUMN payonline_visa_log.data_to_regenerate IS E'Data para reconstruir la operacion con el procedimiento';
COMMENT ON COLUMN payonline_visa_log.transaction_id IS E'ID único de la transacción del sistema VisaNet';


DROP TABLE IF EXISTS payonline_visa_orden;
CREATE TABLE payonline_visa_orden (
	id_visa_orden bigint NOT NULL,
	id_visa bigint NOT NULL,
	num_orden bigint,
	vigencia bigint
) ;


DROP TABLE IF EXISTS pay_aplicacion;
CREATE TABLE pay_aplicacion (
	id_aplicacion bigint NOT NULL,
	id_online bigint NOT NULL,
	nombre varchar(150) NOT NULL,
	descripcion varchar(300),
	sp_verificacion varchar(300),
	sp_servicio varchar(300),
	url_respuesta varchar(300),
	conexion varchar(100),
	campos_ver varchar(2000),
	campos_ser varchar(2000),
	sistema varchar(2),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	vigencia bigint
) ;
COMMENT ON COLUMN pay_aplicacion.sistema IS E'LB: LAMB, CW: CONTAWEB';


DROP TABLE IF EXISTS pay_config;
CREATE TABLE pay_config (
	id_config varchar(20) NOT NULL,
	valor varchar(100),
	valor1 varchar(100),
	comentario varchar(200)
) ;


DROP TABLE IF EXISTS pay_desc_error;
CREATE TABLE pay_desc_error (
	id_desc_error varchar(10) NOT NULL,
	respuesta varchar(500),
	desempresa varchar(500),
	descliente varchar(500)
) ;


DROP TABLE IF EXISTS pay_error;
CREATE TABLE pay_error (
	id_error bigint NOT NULL,
	mensaje varchar(4000),
	fecha timestamp(0),
	id_aplicacion bigint
) ;


DROP TABLE IF EXISTS pay_estado_orden;
CREATE TABLE pay_estado_orden (
	id_estado_orden varchar(2) NOT NULL,
	nombre varchar(100) NOT NULL,
	nombrecorto varchar(20),
	orden bigint,
	vigencia bigint
) ;


DROP TABLE IF EXISTS pay_log_trans;
CREATE TABLE pay_log_trans (
	id_pay_log_trans bigint NOT NULL,
	id_orden bigint NOT NULL,
	rpta varchar(10),
	rpta_desc varchar(2000),
	rpta_visa varchar(2000),
	id_desc_error varchar(10),
	mensaje varchar(500),
	rpta_serv bigint,
	rpta_serv_desc varchar(2000),
	rpta_pta bigint,
	rpta_pta_desc varchar(2000),
	ip varchar(150),
	fecha TIMESTAMP(6),
	importe decimal(10,2),
	importe_aut decimal(10,2),
	transaction_id varchar(100)
) ;


DROP TABLE IF EXISTS pay_num_orden;
CREATE TABLE pay_num_orden (
	id_num_orden bigint NOT NULL,
	id_visa bigint NOT NULL,
	num_orden bigint,
	num_orden_pe bigint
) ;


DROP TABLE IF EXISTS pay_online;
CREATE TABLE pay_online (
	id_online bigint NOT NULL,
	descripcion varchar(200),
	token_validar varchar(100),
	token_proceso varchar(100),
	token_origen varchar(100),
	url_prod varchar(200),
	url_prub varchar(200),
	url_prod_pe varchar(200),
	url_prub_pe varchar(200),
	url_token_seg varchar(300),
	url_token_ses varchar(300),
	url_boton_pago varchar(300),
	url_aut_trans varchar(300),
	url_token_seg_pr varchar(300),
	url_token_ses_pr varchar(300),
	url_boton_pago_pr varchar(300),
	url_aut_trans_pr varchar(300),
	url_pago_efectivo varchar(300),
	url_pago_efectivo_pr varchar(300)
) ;


DROP TABLE IF EXISTS pay_orden;
CREATE TABLE pay_orden (
	id_orden bigint NOT NULL,
	id_visa bigint NOT NULL,
	id_aplicacion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_moneda bigint NOT NULL,
	id_online bigint NOT NULL,
	id_persona bigint,
	id_origen varchar(500),
	id_operacion varchar(20),
	cod_tarjeta varchar(10),
	importe decimal(10,2),
	importe_autorizado decimal(10,2),
	glosa varchar(500),
	fecha timestamp(0),
	tipodocumento varchar(30),
	num_documento varchar(20),
	nombre varchar(100),
	paterno varchar(100),
	materno varchar(100),
	codigo varchar(50),
	eap varchar(2000),
	ruc varchar(25),
	razonsocial varchar(500),
	id_cliente bigint,
	id_comprobante varchar(20),
	id_tipoventa bigint,
	tokens varchar(500),
	id_estado_orden varchar(2),
	transaction_id varchar(100),
	id_user_proc bigint,
	fecha_proc timestamp(0),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	id_dinamica bigint,
	num_orden bigint,
	moneda varchar(50),
	moneda_cod varchar(10),
	id_alu varchar(25),
	importe_autorizado_pe decimal(10,2),
	transactiontoken varchar(200),
	customeremail varchar(100),
	urlpagoefec varchar(500),
	id_desc_error varchar(10),
	num_operacion varchar(50),
	desc_error varchar(500),
	tipo varchar(2),
	id_canal bigint
) ;
COMMENT ON COLUMN pay_orden.cod_tarjeta IS E'TABLA CAJA_TIPOTARJETA';
COMMENT ON COLUMN pay_orden.tipo IS E'TA: TARJETA, PE: PAGO EFECTIVO';


DROP TABLE IF EXISTS pay_orden_estado;
CREATE TABLE pay_orden_estado (
	id_orden_estado bigint NOT NULL,
	id_estado_orden varchar(2) NOT NULL,
	id_orden bigint NOT NULL,
	id_user bigint NOT NULL,
	fecha timestamp(0),
	observacion varchar(2000)
) ;


DROP TABLE IF EXISTS pay_orden_param;
CREATE TABLE pay_orden_param (
	id_orden_param bigint NOT NULL,
	id_orden bigint NOT NULL,
	parametro varchar(100),
	valor varchar(100),
	valor1 varchar(250),
	valor2 varchar(100),
	id_user_reg bigint,
	fecha_reg timestamp(0)
) ;


DROP TABLE IF EXISTS pay_sesion;
CREATE TABLE pay_sesion (
	id_sesion varchar(100) NOT NULL,
	id_visa bigint NOT NULL,
	id_aplicacion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_moneda bigint NOT NULL,
	id_online bigint NOT NULL,
	id_persona bigint,
	id_origen varchar(500),
	id_operacion varchar(20),
	num_orden bigint,
	importe decimal(10,2),
	glosa varchar(500),
	fecha timestamp(0),
	tipodocumento varchar(30),
	num_documento varchar(20),
	nombre varchar(100),
	paterno varchar(100),
	materno varchar(100),
	codigo varchar(50),
	eap varchar(2000),
	nombre_visa varchar(100),
	apellido_visa varchar(100),
	email_visa varchar(100),
	id_dinamica bigint,
	ruc varchar(25),
	razonsocial varchar(500),
	id_cliente bigint,
	id_comprobante varchar(20),
	id_tipoventa bigint,
	tokens varchar(500),
	moneda varchar(50),
	moneda_cod varchar(10),
	id_alu varchar(25),
	fecha_proc timestamp(0),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	parametros varchar(2500),
	id_canal bigint
) ;


DROP TABLE IF EXISTS pay_temp;
CREATE TABLE pay_temp (
	ce bigint,
	num_orden varchar(20),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS pay_visa;
CREATE TABLE pay_visa (
	id_visa bigint NOT NULL,
	id_moneda bigint NOT NULL,
	merchantid varchar(30) NOT NULL,
	nombre varchar(200) NOT NULL,
	usuario varchar(100),
	clave varchar(100),
	correo varchar(100),
	dni varchar(20),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	codigo varchar(10)
) ;


DROP TABLE IF EXISTS pay_visa_aplicacion;
CREATE TABLE pay_visa_aplicacion (
	id_visa_aplicacion bigint NOT NULL,
	id_aplicacion bigint NOT NULL,
	id_visa bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_dinamica bigint,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;


DROP TABLE IF EXISTS pedido_accesorio;
CREATE TABLE pedido_accesorio (
	id_accesorio bigint NOT NULL,
	id_sedearea bigint,
	nombre varchar(100),
	estado varchar(1),
	precio decimal(10,2),
	id_articulo bigint
) ;


DROP TABLE IF EXISTS pedido_area;
CREATE TABLE pedido_area (
	id_sedearea bigint NOT NULL,
	id_formulario bigint,
	fecha timestamp(0),
	activo varchar(1)
) ;


DROP TABLE IF EXISTS pedido_area_tipo;
CREATE TABLE pedido_area_tipo (
	id_sedearea bigint NOT NULL,
	id_tipopedido bigint NOT NULL,
	id_formulario bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS pedido_asiento;
CREATE TABLE pedido_asiento (
	id_pasiento bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_fondo bigint NOT NULL,
	id_ctacte varchar(50),
	id_depto varchar(10),
	dc varchar(1),
	porcentaje decimal(10,2),
	importe decimal(10,2),
	glosa varchar(528),
	indicador varchar(50),
	agrupa varchar(1) DEFAULT 'N',
	nro_asiento bigint,
	editable varchar(1) DEFAULT 'S'
) ;


DROP TABLE IF EXISTS pedido_asiento_tipo;
CREATE TABLE pedido_asiento_tipo (
	id_asientotipo bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	id_origen varchar(10),
	id_destino varchar(10),
	cuenta varchar(20),
	restriccion varchar(20),
	cuenta_cte varchar(20),
	depto varchar(10),
	dc varchar(1),
	glosa varchar(50)
) ;


DROP TABLE IF EXISTS pedido_autoriza_area;
CREATE TABLE pedido_autoriza_area (
	id_pautoriza bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_persona bigint,
	id_sedearea bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS pedido_compra;
CREATE TABLE pedido_compra (
	id_pcompra bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_compra bigint,
	id_moneda bigint NOT NULL,
	id_proveedor bigint,
	importe decimal(10,2),
	fecha timestamp(0),
	numero varchar(20),
	serie varchar(20),
	es_contrato varchar(1),
	estado varchar(1),
	tramite_pago varchar(1),
	id_persona bigint,
	id_vale bigint,
	importe_me numeric,
	id_actividad bigint,
	igv numeric,
	igv_me numeric,
	tipo_cambio numeric,
	id_comprobante varchar(2),
	id_mediopago varchar(22),
	id_pbancaria bigint,
	finalizado varchar(1),
	id_pedido_origen varchar(150),
	car_sunat varchar(50),
	es_aprobado varchar(1)
) ;
COMMENT ON COLUMN pedido_compra.finalizado IS E'S = SE PROVISIONO LA COMPRA FINALIZADO';
COMMENT ON COLUMN pedido_compra.id_mediopago IS E'Medio de pago.';
COMMENT ON COLUMN pedido_compra.id_pedido_origen IS E'SE REGISTRAN LOS PEDIDOS ORIGEN, SI ES MAS DE UNO SE CONCATENA POR UNA COMA: '''' , ''''';
COMMENT ON COLUMN pedido_compra.id_persona IS E'Funcioario o trabajador a quien reemolsar';
COMMENT ON COLUMN pedido_compra.tramite_pago IS E'1. Pago al Proveedor,2.Reembolso al Funcionario y 3. Rendicion';


DROP TABLE IF EXISTS pedido_compra_detalle;
CREATE TABLE pedido_compra_detalle (
	id_cdetalle bigint NOT NULL,
	id_pcompra bigint,
	id_almacen bigint,
	id_articulo bigint,
	id_tipoigv varchar(2),
	cantidad decimal(10,2),
	precio_ant decimal(10,2),
	base decimal(10,2),
	igv decimal(10,2),
	importe decimal(10,2),
	precio decimal(10,3)
) ;


DROP TABLE IF EXISTS pedido_compra_item;
CREATE TABLE pedido_compra_item (
	id_item bigint NOT NULL,
	id_pcompra bigint,
	id_detalle bigint,
	cantidad decimal(10,2)
) ;


DROP TABLE IF EXISTS pedido_cotizacion;
CREATE TABLE pedido_cotizacion (
	id_cotizacion bigint NOT NULL,
	id_pedido bigint,
	id_proveedor bigint,
	id_pfile bigint,
	id_moneda bigint,
	importe decimal(10,2),
	importe_me decimal(10,2),
	es_elegido varchar(1),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS pedido_despacho;
CREATE TABLE pedido_despacho (
	id_despacho bigint NOT NULL,
	id_detalle bigint,
	id_persona bigint NOT NULL,
	id_movilidad bigint,
	id_almacen bigint,
	id_articulo bigint,
	id_vehiculo bigint,
	id_voucher bigint,
	detalle varchar(255),
	cantidad decimal(10,2),
	precio_bk decimal(10,2),
	importe decimal(10,2),
	estado varchar(1),
	id_pedido bigint,
	precio decimal(10,3)
) ;


DROP TABLE IF EXISTS pedido_detalle;
CREATE TABLE pedido_detalle (
	id_detalle bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_almacen bigint,
	id_articulo bigint,
	detalle varchar(255),
	cantidad decimal(10,2),
	precio_ant decimal(10,2),
	importe decimal(10,2),
	fecha_inicio timestamp(0),
	fecha_fin timestamp(0),
	hora_inicio varchar(6),
	hora_fin varchar(6),
	cantidad_reg decimal(10,2),
	objetivo varchar(255),
	publico varchar(255),
	tema varchar(255),
	id_persona bigint,
	ponente varchar(255),
	celular bigint,
	plataforma varchar(255),
	formato varchar(1),
	descripcion varchar(255),
	links varchar(500),
	es_compra varchar(1) DEFAULT 'N',
	entregado varchar(1) DEFAULT 'N',
	precio decimal(10,3)
) ;


DROP TABLE IF EXISTS pedido_detalle_accesorio;
CREATE TABLE pedido_detalle_accesorio (
	id_detalle_accesorio bigint NOT NULL,
	id_detalle bigint NOT NULL,
	id_accesorio bigint NOT NULL,
	fecha_reg timestamp(0),
	precio numeric DEFAULT 0,
	cantidad bigint DEFAULT 0,
	id_almacen bigint,
	id_articulo bigint,
	tipo varchar(20)
) ;


DROP TABLE IF EXISTS pedido_detalle_recepcion;
CREATE TABLE pedido_detalle_recepcion (
	id_detalle_recepcion bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_detalle bigint NOT NULL,
	id_user bigint,
	cantidad decimal(10,2) DEFAULT 0,
	comentario varchar(250),
	fecha_registro timestamp(0)
) ;
COMMENT ON COLUMN pedido_detalle_recepcion.id_user IS E'Quien esta registrando, de session';


DROP TABLE IF EXISTS pedido_dist_gasto;
CREATE TABLE pedido_dist_gasto (
	id_pdist bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	porcentaje numeric DEFAULT 1,
	descripcion varchar(300),
	id_pcompra bigint
) ;
COMMENT ON TABLE pedido_dist_gasto IS E'Distribución en porcentaje del gasto entre departamentos';


DROP TABLE IF EXISTS pedido_file;
CREATE TABLE pedido_file (
	id_pfile bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_pcompra bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tipo varchar(2),
	seleccionado varchar(1),
	tamanho decimal(10,2),
	estado varchar(1),
	id_detalle bigint,
	name_file varchar(255),
	url_old varchar(255),
	url_minio varchar(256),
	url_s3 varchar(225)
) ;
COMMENT ON COLUMN pedido_file.tipo IS E'TIPO: 1:REQUERIMIENTO; 2:PROFORMA; 3:COMPROBANTE-PDF/XML/JPG; 4:TRANSCRIPCION DE CONSEJO; 5:COTIZACION; 6:FOTO PEDIDO SIM; 7: RxH; 8: Constancia 4ta; 9: Sustento del RxH; 10: Contrato de Locacion; 11: Acta de Conformidad; 12: Constancia de Pago; 13: Retencion; 14: Detraccio';


DROP TABLE IF EXISTS pedido_file_pb;
CREATE TABLE pedido_file_pb (
	id_pfile bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_pcompra bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tipo varchar(2),
	seleccionado varchar(1),
	tamanho decimal(10,2),
	estado varchar(1),
	id_detalle bigint,
	name_file varchar(255),
	url_old varchar(255),
	url_minio varchar(256)
) ;


DROP TABLE IF EXISTS pedido_form;
CREATE TABLE pedido_form (
	id_formulario bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1),
	codigo varchar(10)
) ;


DROP TABLE IF EXISTS pedido_gasto;
CREATE TABLE pedido_gasto (
	id_cgasto bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS pedido_gasto_paso;
CREATE TABLE pedido_gasto_paso (
	id_gasto bigint NOT NULL,
	id_cgasto bigint,
	id_entidad bigint,
	id_tipogasto bigint,
	id_paso bigint
) ;


DROP TABLE IF EXISTS pedido_hora;
CREATE TABLE pedido_hora (
	id_hora bigint NOT NULL,
	de varchar(5),
	a varchar(5),
	estado bigint,
	turno varchar(1)
) ;


DROP TABLE IF EXISTS pedido_movilidad;
CREATE TABLE pedido_movilidad (
	id_movilidad bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_vehiculo bigint,
	id_conductor bigint,
	detalle varchar(255),
	tipo_viaje varchar(1),
	origen varchar(255),
	destino varchar(255),
	fecha_p timestamp(0),
	hora_p varchar(10),
	cantidad bigint,
	km_inicio decimal(10,2),
	km_fin decimal(10,2),
	hora_salida varchar(8),
	hora_llegada varchar(8),
	observacion varchar(100),
	estado varchar(1),
	id_tipovehiculo bigint,
	id_persona bigint,
	responsable varchar(100)
) ;


DROP TABLE IF EXISTS pedido_plantilla_compra;
CREATE TABLE pedido_plantilla_compra (
	id_ppcompra bigint NOT NULL,
	id_pedido bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_fondo bigint NOT NULL,
	id_tipoplan bigint NOT NULL,
	id_cuentaaasi varchar(10) NOT NULL,
	id_restriccion varchar(50) NOT NULL,
	id_ctacte varchar(50) NOT NULL,
	detalle varchar(100),
	porcentaje decimal(10,2),
	cantidad decimal(10,2),
	precio decimal(10,2),
	importe decimal(10,2),
	importe_me decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS pedido_registro;
CREATE TABLE pedido_registro (
	id_pedido bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_tipopedido bigint,
	id_gasto bigint,
	id_tipotransaccion bigint,
	id_actividad bigint,
	id_areaorigen bigint,
	id_areadestino bigint,
	id_areagasto bigint,
	id_pbancaria bigint,
	id_tipoactividadeconomica bigint,
	numero varchar(8),
	acuerdo varchar(10),
	fecha timestamp(0),
	fecha_pedido timestamp(0),
	fecha_entrega timestamp(0),
	fecha_pago timestamp(0),
	motivo varchar(512),
	estado varchar(1),
	comentario varchar(512),
	id_almacen_origen bigint,
	id_almacen_destino bigint,
	id_dexec bigint,
	id_task bigint,
	id_formulario bigint,
	id_mapa_iniciativa bigint,
	id_iniciativa_detalle bigint,
	celular varchar(12),
	pendiente varchar(1),
	id_moneda bigint,
	id_proceso bigint,
	id_mediopago varchar(3),
	tramite_pago varchar(1),
	cta_bancaria_numero varchar(50)
) ;
COMMENT ON COLUMN pedido_registro.id_almacen_destino IS E'Campos agregados por la UPN, no todo es por areas xD';
COMMENT ON COLUMN pedido_registro.id_almacen_origen IS E'Campos agregados por la UPN, no todo es por areas xD';


DROP TABLE IF EXISTS pedido_requerimiento;
CREATE TABLE pedido_requerimiento (
	id_pedido_requerimiento bigint NOT NULL,
	id_requerimiento bigint,
	id_pedido bigint,
	id_detalle bigint,
	fecha timestamp(0),
	cantidad decimal(10,2),
	id_detalle_origen bigint
) ;


DROP TABLE IF EXISTS pedido_reserva;
CREATE TABLE pedido_reserva (
	id_reserva bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	id_persona bigint,
	id_cliente bigint,
	id_almacen bigint,
	id_articulo bigint,
	cliente varchar(100),
	detalle varchar(100),
	cantidad decimal(10,2),
	precio decimal(10,2),
	importe decimal(10,2),
	fecha timestamp(0),
	hora_inicio varchar(5),
	hora_fin varchar(5),
	estado varchar(1),
	pagado varchar(1) DEFAULT 'N'
) ;


DROP TABLE IF EXISTS pedido_task_depto;
CREATE TABLE pedido_task_depto (
	id_pedido_task bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_task bigint,
	id_sedearea bigint,
	dias_bloqueo bigint DEFAULT 0
) ;


DROP TABLE IF EXISTS pedido_vehiculo;
CREATE TABLE pedido_vehiculo (
	id_vehiculo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	placa varchar(20),
	marca varchar(20),
	modelo varchar(29),
	soat timestamp(0),
	revision timestamp(0),
	asientos bigint,
	km_precio decimal(10,2),
	estado varchar(1),
	id_tipovehiculo bigint
) ;


DROP TABLE IF EXISTS pedido_voto;
CREATE TABLE pedido_voto (
	id_pvoto bigint NOT NULL,
	id_pedido bigint,
	id_pfile bigint,
	n_acuerdo varchar(255),
	detalle varchar(255)
) ;


DROP TABLE IF EXISTS persona;
CREATE TABLE persona (
	id_persona bigint NOT NULL,
	nombre varchar(255),
	paterno varchar(255),
	materno varchar(255)
) ;


DROP TABLE IF EXISTS persona_conductor;
CREATE TABLE persona_conductor (
	id_persona bigint NOT NULL,
	licencia varchar(20),
	categoria varchar(10)
) ;


DROP TABLE IF EXISTS persona_cuenta_bancaria;
CREATE TABLE persona_cuenta_bancaria (
	id_pbancaria bigint NOT NULL,
	id_persona bigint,
	id_banco varchar(3),
	id_tipoctabanco bigint,
	cuenta varchar(30),
	cci varchar(30),
	activo varchar(1)
) ;


DROP TABLE IF EXISTS persona_direccion;
CREATE TABLE persona_direccion (
	id_direccion bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_tipodireccion bigint NOT NULL,
	id_ubigueo bigint,
	direccion varchar(1000),
	es_activo bigint,
	map_latitud double precision,
	map_longitud varchar(255),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS persona_documento;
CREATE TABLE persona_documento (
	id_persona bigint NOT NULL,
	id_tipodocumento bigint NOT NULL,
	num_documento varchar(20) NOT NULL,
	img_documento bytea
) ;


DROP TABLE IF EXISTS persona_imagen;
CREATE TABLE persona_imagen (
	id_imagen bigint NOT NULL,
	id_persona bigint NOT NULL,
	imagen bytea,
	fec_registro timestamp(0),
	comentario varchar(255)
) ;


DROP TABLE IF EXISTS persona_juridica;
CREATE TABLE persona_juridica (
	id_ruc varchar(50) NOT NULL,
	id_persona bigint NOT NULL,
	id_tipoestado bigint NOT NULL,
	id_tipocondicion bigint NOT NULL,
	id_tipocontribuyente bigint,
	id_tipopais bigint,
	fec_registro timestamp(0),
	id_tipoactividadeconomica bigint,
	fec_inicio timestamp(0),
	fec_baja timestamp(0),
	es_rus bigint
) ;


DROP TABLE IF EXISTS persona_juridica_contacto;
CREATE TABLE persona_juridica_contacto (
	id_tipo_proyectos bigint NOT NULL,
	nombre_contacto varchar(4000),
	apellido_contacto varchar(4000),
	celular_contacto varchar(4000),
	email_contacto varchar(4000),
	estado char(1)
) ;


DROP TABLE IF EXISTS persona_natural;
CREATE TABLE persona_natural (
	id_persona bigint NOT NULL,
	id_tipotratamiento bigint NOT NULL,
	id_tipoestadocivil bigint NOT NULL,
	id_tipopais bigint,
	id_nacionalidad bigint,
	id_tiposangre bigint,
	sexo varchar(10),
	fec_nacimiento timestamp(0),
	fec_defuncion timestamp(0),
	num_documento varchar(20),
	id_tipodocumento varchar(2)
) ;


DROP TABLE IF EXISTS persona_natural_alumno;
CREATE TABLE persona_natural_alumno (
	id_persona bigint NOT NULL,
	id_erp varchar(50),
	codigo varchar(9),
	codigo_modular varchar(30)
) ;


DROP TABLE IF EXISTS persona_natural_firma;
CREATE TABLE persona_natural_firma (
	id_persona bigint NOT NULL,
	img_firma bytea,
	img_foto bytea,
	img_sello bytea,
	img_indicederecho bytea,
	img_indiceizquierdo bytea
) ;


DROP TABLE IF EXISTS persona_natural_idioma;
CREATE TABLE persona_natural_idioma (
	id_persona bigint NOT NULL,
	id_tipoidioma bigint NOT NULL,
	es_materna bigint
) ;


DROP TABLE IF EXISTS persona_natural_parentesco;
CREATE TABLE persona_natural_parentesco (
	id_pariente bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_tipoparentesco varchar(20) NOT NULL,
	comentario varchar(50)
) ;


DROP TABLE IF EXISTS persona_natural_religion;
CREATE TABLE persona_natural_religion (
	id_persona bigint NOT NULL,
	id_iglesia bigint NOT NULL,
	id_tiporeligion bigint NOT NULL,
	fec_baustimo timestamp(0),
	comentario varchar(50)
) ;


DROP TABLE IF EXISTS persona_sistema_pension;
CREATE TABLE persona_sistema_pension (
	id_sistemapension bigint NOT NULL,
	id_ruc bigint NOT NULL,
	cod_aps bigint,
	nombre varchar(255),
	tas_menor bigint,
	tas_mayor bigint
) ;


DROP TABLE IF EXISTS persona_telefono;
CREATE TABLE persona_telefono (
	id_telefono bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_tipotelefono bigint NOT NULL,
	num_telefono varchar(100),
	es_activo bigint,
	es_privado bigint,
	comentario varchar(255),
	gth bigint
) ;


DROP TABLE IF EXISTS persona_virtual;
CREATE TABLE persona_virtual (
	id_virtual bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_tipovirtual bigint NOT NULL,
	direccion varchar(255),
	comentario varchar(255),
	gth bigint
) ;


DROP TABLE IF EXISTS plame_impuesto;
CREATE TABLE plame_impuesto (
	id_empresa bigint NOT NULL,
	id_entidad bigint,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	renta_cuarta double precision,
	renta_quinta double precision,
	dev_quinta_cat double precision,
	onp double precision,
	essalud double precision,
	eps double precision,
	essalud_aporte double precision,
	essalud_cant double precision,
	calculado double precision,
	total double precision
) ;


DROP TABLE IF EXISTS plantilla_detalle_compra;
CREATE TABLE plantilla_detalle_compra (
	id_pdcompra bigint NOT NULL,
	id_pedido bigint,
	id_entidad bigint,
	id_depto bigint,
	id_tipoplan bigint,
	id_cuentaaasi bigint,
	id_restriccion bigint,
	id_ctacte bigint,
	detalle varchar(100),
	porcentaje bigint,
	cantidad bigint,
	precio numeric,
	importe numeric,
	importe_me numeric,
	estado bigint
) ;


DROP TABLE IF EXISTS presupuesto_temp;
CREATE TABLE presupuesto_temp (
	id_anho bigint,
	id_entidad bigint,
	id_depto varchar(10),
	cuenta varchar(10),
	restriccion varchar(10),
	cuenta_cte varchar(10),
	departamento varchar(10),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS presupuesto_test;
CREATE TABLE presupuesto_test (
	cuenta varchar(10),
	restriccion varchar(10),
	cuenta_corriente varchar(50),
	depto varchar(10),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS proceso_documento;
CREATE TABLE proceso_documento (
	id_dproceso bigint NOT NULL,
	nombre varchar(60),
	codigo varchar(10),
	estado varchar(1),
	es_fin varchar(1)
) ;


DROP TABLE IF EXISTS process;
CREATE TABLE process (
	id_proceso bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_modulo bigint,
	id_tipotransaccion bigint,
	id_paso_inicio bigint,
	id_paso_fin bigint,
	nombre varchar(100),
	codigo bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS process_componente;
CREATE TABLE process_componente (
	id_componente bigint NOT NULL,
	nombre varchar(100),
	llave varchar(50),
	estado varchar(1),
	nombre_accion varchar(100)
) ;


DROP TABLE IF EXISTS process_componente_paso;
CREATE TABLE process_componente_paso (
	id_paso bigint NOT NULL,
	id_componente bigint NOT NULL
) ;


DROP TABLE IF EXISTS process_flujo;
CREATE TABLE process_flujo (
	id_flujo bigint NOT NULL,
	id_proceso bigint NOT NULL,
	id_paso bigint NOT NULL,
	id_paso_next bigint NOT NULL,
	tag varchar(50),
	id_componente bigint
) ;


DROP TABLE IF EXISTS process_observacion;
CREATE TABLE process_observacion (
	id_observacion bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_ofrecuente bigint,
	observacion varchar(500) NOT NULL,
	id_registro bigint NOT NULL,
	id_paso bigint,
	estado varchar(1),
	created_at timestamp(0),
	updated_at timestamp(0)
) ;
COMMENT ON COLUMN process_observacion.estado IS E'R=Registrando; V=Verificando; A=Autorizando';


DROP TABLE IF EXISTS process_pago;
CREATE TABLE process_pago (
	id_process_pago bigint NOT NULL,
	importe numeric NOT NULL,
	id_process_run bigint NOT NULL,
	id_moneda bigint NOT NULL,
	id_process_pago_config bigint,
	id_persona bigint NOT NULL,
	adjunto varchar(150),
	entidad varchar(150) NOT NULL,
	estado char(1) NOT NULL DEFAULT '0',
	fecha_pago varchar(100) NOT NULL,
	id_usuario_reg bigint NOT NULL,
	fecha_registro timestamp(0) NOT NULL,
	id_usuario_act varchar(100),
	fecha_actualizacion timestamp(0)
) ;


DROP TABLE IF EXISTS process_parametro;
CREATE TABLE process_parametro (
	id_parametro bigint NOT NULL,
	id_detalle bigint NOT NULL,
	clave varchar(50),
	valor varchar(50)
) ;


DROP TABLE IF EXISTS process_paso;
CREATE TABLE process_paso (
	id_paso bigint NOT NULL,
	id_proceso bigint NOT NULL,
	id_tipopaso bigint NOT NULL,
	nombre varchar(100),
	orden decimal(10,2),
	estado varchar(1),
	route varchar(300),
	icono varchar(30),
	id_proceso_parent bigint,
	id_paso_parent bigint,
	orden_parent bigint
) ;


DROP TABLE IF EXISTS process_paso_rol;
CREATE TABLE process_paso_rol (
	id_paso bigint NOT NULL,
	id_rol bigint NOT NULL
) ;


DROP TABLE IF EXISTS process_paso_run;
CREATE TABLE process_paso_run (
	id_detalle bigint NOT NULL,
	id_registro bigint NOT NULL,
	id_paso bigint NOT NULL,
	id_persona bigint,
	fecha timestamp(0),
	detalle varchar(255),
	numero bigint,
	revisado varchar(1),
	ip varchar(30),
	estado varchar(1),
	id_paso_next bigint
) ;


DROP TABLE IF EXISTS process_run;
CREATE TABLE process_run (
	id_registro bigint NOT NULL,
	id_proceso bigint NOT NULL,
	id_operacion bigint,
	fecha timestamp(0),
	detalle varchar(100),
	estado varchar(1),
	id_paso_actual bigint,
	id_registro_parent bigint
) ;


DROP TABLE IF EXISTS process_simbolo;
CREATE TABLE process_simbolo (
	id_simbolo bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS process_tipopaso;
CREATE TABLE process_tipopaso (
	id_tipopaso bigint NOT NULL,
	id_simbolo bigint,
	nombre varchar(100),
	llave varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS proveedor_duplicado;
CREATE TABLE proveedor_duplicado (
	id_persona bigint,
	num_documento varchar(11)
) ;


DROP TABLE IF EXISTS proyecto;
CREATE TABLE proyecto (
	id_proyecto bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_tipoproyecto bigint,
	nombre varchar(255),
	nro_acuerdo varchar(20),
	fecha_acuerdo timestamp(0),
	presupuesto decimal(10,2),
	cuenta varchar(20),
	modalidad_ejecucion varchar(1),
	tipo_financiamiento varchar(1),
	estado varchar(1),
	reg_cont varchar(1),
	cta_cte varchar(20),
	sustento varchar(200),
	extencion varchar(5)
) ;
COMMENT ON COLUMN proyecto.modalidad_ejecucion IS E'1: Contrata; 2: Administracion Directa; 3: Mixta;';
COMMENT ON COLUMN proyecto.reg_cont IS E'1: Activo; 2: Gasto;';
COMMENT ON COLUMN proyecto.tipo_financiamiento IS E'1: Ingresos Generados propios; 2: Endeudamiento; 3: Mixto;';


DROP TABLE IF EXISTS proyecto_acuerdo;
CREATE TABLE proyecto_acuerdo (
	id_pdetalle bigint NOT NULL,
	nro_acuerdo varchar(20),
	fecha_acuerdo timestamp(0),
	presupuesto decimal(10,2),
	sustento varchar(20),
	id_proyecto bigint NOT NULL,
	extencion varchar(5)
) ;


DROP TABLE IF EXISTS proyecto_compra;
CREATE TABLE proyecto_compra (
	id_proyecto bigint NOT NULL,
	id_pcompra bigint NOT NULL,
	importe decimal(10,2),
	afecta_all varchar(1)
) ;


DROP TABLE IF EXISTS pro_concepto_asign_alum;
CREATE TABLE pro_concepto_asign_alum (
	id_proforma bigint NOT NULL,
	id_criterio_semestre bigint NOT NULL,
	item bigint NOT NULL,
	id_semestre_programa bigint,
	descripcion varchar(500),
	id_plan varchar(20),
	cantidad decimal(10,2),
	unitario decimal(10,2),
	total decimal(10,2),
	dc varchar(1),
	tipo_valor varchar(2),
	aplazado varchar(1),
	creditos decimal(10,2),
	unitario_cred decimal(10,2)
) ;
COMMENT ON COLUMN pro_concepto_asign_alum.aplazado IS E'S:SI';
COMMENT ON COLUMN pro_concepto_asign_alum.tipo_valor IS E'I: Importe, P:porcentaje';


DROP TABLE IF EXISTS pro_postulante;
CREATE TABLE pro_postulante (
	id_postulante bigint NOT NULL,
	id_persona bigint,
	nombres varchar(50),
	paterno varchar(20),
	materno varchar(20),
	id_tipodocumento bigint,
	num_documento varchar(20),
	correo varchar(50),
	celular varchar(20),
	fecha_registro timestamp(0)
) ;


DROP TABLE IF EXISTS pro_proforma;
CREATE TABLE pro_proforma (
	id_proforma bigint NOT NULL,
	id_postulante bigint NOT NULL,
	id_semestre_programa bigint,
	id_planpago_semestre bigint,
	id_resid_tipo_habitacion bigint,
	id_nivel_ensenanza bigint,
	numero varchar(20),
	estado varchar(2) NOT NULL DEFAULT '0',
	dias_residencia decimal(10,2),
	tipo_hijo varchar(2) NOT NULL DEFAULT 'N',
	tipo_postulante varchar(2),
	sostenedor_obra varchar(2) NOT NULL DEFAULT 'N',
	total_debito decimal(15,2),
	total_credito decimal(15,2),
	total decimal(15,2),
	matricula decimal(15,2),
	mensual decimal(15,2),
	contado decimal(15,2),
	pago decimal(15,2),
	matricula1cuota decimal(15,2),
	tipo_alumno varchar(5),
	id_usuario_reg bigint,
	fecha_registro timestamp(0),
	id_usuario_act bigint,
	fecha_actualizacion timestamp(0),
	paga_credito varchar(20),
	creditos decimal(10,2),
	imp_dscto decimal(10,2) DEFAULT 0,
	ciclo bigint,
	mensual_ens_resi decimal(10,2),
	archivo varchar(4000),
	id_sede bigint
) ;
COMMENT ON COLUMN pro_proforma.estado IS E'0 = Péndiente
1 = Finalizado';
COMMENT ON COLUMN pro_proforma.sostenedor_obra IS E'S = Si
N = No';
COMMENT ON COLUMN pro_proforma.tipo_hijo IS E'N = Nínguno
M = Misionero
T = Trabajador';
COMMENT ON COLUMN pro_proforma.tipo_postulante IS E'E = Estudiante

P = Postulante o persona postulante';


DROP TABLE IF EXISTS pro_proforma_criterio;
CREATE TABLE pro_proforma_criterio (
	id_proforma bigint NOT NULL,
	id_criterio_semestre bigint NOT NULL
) ;


DROP TABLE IF EXISTS pro_proforma_det;
CREATE TABLE pro_proforma_det (
	id_proforma bigint NOT NULL,
	contador bigint NOT NULL,
	id_criterio_semestre bigint NOT NULL,
	importe decimal(10,2),
	dc varchar(1),
	acumula decimal(10,2),
	id_parent bigint,
	descripcion varchar(500),
	imp_cal decimal(10,2),
	tipo_valor varchar(2),
	id_parent_mis bigint,
	importe_mis decimal(10,2),
	acum_mis decimal(10,2),
	importe_real decimal(10,2),
	creditos decimal(10,2),
	unitario decimal(10,2)
) ;


DROP TABLE IF EXISTS pro_semestre;
CREATE TABLE pro_semestre (
	id_semestre bigint NOT NULL,
	dias_resid decimal(10,2),
	costo_cred decimal(10,2),
	vigencia bigint
) ;


DROP TABLE IF EXISTS psto_actividad;
CREATE TABLE psto_actividad (
	id_actividad bigint NOT NULL,
	id_evento bigint NOT NULL,
	tipo varchar(1) NOT NULL,
	nombre varchar(100) NOT NULL,
	esdescuento varchar(1),
	descripcion varchar(300),
	id_tipoplan bigint,
	id_cuentaaasi varchar(10),
	id_restriccion varchar(50),
	id_entidad bigint,
	id_ctacte varchar(50),
	id_tipoctacte varchar(10),
	importeunit1 decimal(10,2),
	importeunit2 decimal(10,2),
	id_depto varchar(10),
	estado varchar(1),
	id_entidad_ctacte bigint,
	tipo_dist varchar(2)
) ;


DROP TABLE IF EXISTS psto_actividad_dist;
CREATE TABLE psto_actividad_dist (
	id_actividad bigint NOT NULL,
	id_mes bigint NOT NULL,
	porcentaje decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_area;
CREATE TABLE psto_area (
	id_area bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_tipo_area varchar(2) NOT NULL,
	nombre varchar(120),
	nombre_corto varchar(15),
	id_parent bigint,
	id_responsable bigint,
	id_tesorero bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_area_depto;
CREATE TABLE psto_area_depto (
	id_area_depto bigint NOT NULL,
	id_area bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_tipo_depto varchar(2) NOT NULL,
	nombre_corto varchar(100),
	id_responsable bigint,
	estado varchar(1),
	id_eap_depto varchar(10),
	tipo varchar(2)
) ;
COMMENT ON COLUMN psto_area_depto.tipo IS E'A:APROYO, P:PRODUCTIVO';


DROP TABLE IF EXISTS psto_asiento;
CREATE TABLE psto_asiento (
	id_asiento bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_presupuesto bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_persona bigint NOT NULL,
	descripcion varchar(300),
	fecha timestamp(0),
	total_ingreso decimal(10,2),
	total_gasto decimal(10,2),
	estado varchar(1)
) ;
COMMENT ON COLUMN psto_asiento.estado IS E'1:REGISTRADO,2:APROBADO,
0:ANULADO';


DROP TABLE IF EXISTS psto_asiento_det;
CREATE TABLE psto_asiento_det (
	id_asiento_det bigint NOT NULL,
	id_asiento bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	tipo varchar(1) NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoplan bigint,
	id_cuentaaasi varchar(10),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_tipoctacte varchar(10),
	glosa varchar(300),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_auxiliar;
CREATE TABLE psto_auxiliar (
	id_auxiliar bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	nombre varchar(50),
	url varchar(255),
	estado varchar(1),
	logo varchar(50),
	identificador varchar(2),
	url_rep varchar(255)
) ;


DROP TABLE IF EXISTS psto_auxiliar_anho;
CREATE TABLE psto_auxiliar_anho (
	id_anho bigint NOT NULL,
	id_auxiliar bigint NOT NULL,
	estado varchar(2)
) ;
COMMENT ON COLUMN psto_auxiliar_anho.estado IS E'01: PROCESO; 02: GENERADO,03: CERRADO';


DROP TABLE IF EXISTS psto_config_auxi;
CREATE TABLE psto_config_auxi (
	id_config_auxi varchar(25) NOT NULL,
	id_auxiliar bigint NOT NULL,
	descripcion varchar(100),
	valor1 varchar(50),
	valor2 varchar(50),
	valor3 varchar(50),
	valor4 varchar(50),
	valor5 varchar(50)
) ;


DROP TABLE IF EXISTS psto_eap;
CREATE TABLE psto_eap (
	id_eap bigint NOT NULL,
	nombre varchar(100) NOT NULL,
	id_tipo_depto varchar(2) NOT NULL,
	nombre_corto varchar(15),
	id_entidad bigint,
	id_depto varchar(10),
	estado varchar(1),
	ciclo bigint
) ;


DROP TABLE IF EXISTS psto_eap_area_depto;
CREATE TABLE psto_eap_area_depto (
	id_eap_depto_area bigint NOT NULL,
	id_area_depto bigint NOT NULL,
	id_eap bigint NOT NULL,
	estado varchar(1),
	sede_principal varchar(1)
) ;
COMMENT ON COLUMN psto_eap_area_depto.sede_principal IS E'S:SI N:NO';


DROP TABLE IF EXISTS psto_eje;
CREATE TABLE psto_eje (
	id_eje bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_evento;
CREATE TABLE psto_evento (
	id_evento bigint NOT NULL,
	id_proyecto bigint NOT NULL,
	id_entidad bigint NOT NULL,
	nombre varchar(300) NOT NULL,
	id_auxiliar bigint,
	descripcion varchar(300),
	cantidad varchar(35),
	punidad varchar(35),
	a varchar(35),
	b varchar(35),
	c varchar(35),
	d varchar(35),
	e varchar(35),
	f varchar(35),
	g varchar(35),
	formula varchar(300),
	tipo_asiento varchar(1),
	id_depto varchar(10),
	estado varchar(1)
) ;
COMMENT ON COLUMN psto_evento.tipo_asiento IS E'D:DETALLADO,S:SUMARIZADO';


DROP TABLE IF EXISTS psto_negocio;
CREATE TABLE psto_negocio (
	id_pstonegocio bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_plla_ayudas;
CREATE TABLE psto_plla_ayudas (
	id_psto_ayudas bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cargo bigint NOT NULL,
	imp_enero decimal(10,2),
	imp_febrero decimal(10,2),
	imp_marzo decimal(10,2),
	imp_abril decimal(10,2),
	imp_mayo decimal(10,2),
	imp_junio decimal(10,2),
	imp_julio decimal(10,2),
	imp_agosto decimal(10,2),
	imp_setiembre decimal(10,2),
	imp_total_meses decimal(10,2),
	imp_anual_reg decimal(10,2),
	imp_total decimal(10,2),
	imp_ens_univ decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_plla_cargosueldo_escala;
CREATE TABLE psto_plla_cargosueldo_escala (
	id_cargosueldo_escala bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto_padre varchar(10) NOT NULL,
	id_cargo bigint NOT NULL,
	id_condicion_escala varchar(2) NOT NULL,
	observacion varchar(2),
	minimo decimal(10,2),
	maximo decimal(10,2),
	tipo_min varchar(2),
	tipo_max varchar(2),
	bono_min decimal(10,2),
	bono_max decimal(10,2),
	via_min decimal(10,2),
	via_max decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_plla_cargo_proceso;
CREATE TABLE psto_plla_cargo_proceso (
	id_cargo_proceso bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_depto_padre varchar(10) NOT NULL,
	id_cargo bigint NOT NULL,
	id_renovable varchar(2),
	id_sexo bigint,
	id_edad varchar(2),
	id_nivel_edu varchar(2),
	id_tipoestadocivil bigint,
	id_tiempotrabajo bigint,
	id_temporada varchar(2),
	cantidad bigint,
	id_cargosueldo_escala bigint
) ;


DROP TABLE IF EXISTS psto_plla_cargo_proceso_conlab;
CREATE TABLE psto_plla_cargo_proceso_conlab (
	id_cargo_proceso bigint NOT NULL,
	id_cond_lab varchar(5) NOT NULL
) ;


DROP TABLE IF EXISTS psto_plla_cargo_proceso_prof;
CREATE TABLE psto_plla_cargo_proceso_prof (
	id_cargo_proceso bigint NOT NULL,
	id_profesion bigint NOT NULL
) ;


DROP TABLE IF EXISTS psto_plla_cargo_proceso_tipcon;
CREATE TABLE psto_plla_cargo_proceso_tipcon (
	id_cargo_proceso bigint NOT NULL,
	id_tipocontrato bigint NOT NULL
) ;


DROP TABLE IF EXISTS psto_plla_concepto_actividad;
CREATE TABLE psto_plla_concepto_actividad (
	id_concepto_actividad bigint NOT NULL,
	id_actividad bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto_padre varchar(10) NOT NULL,
	auxi_identificador varchar(3),
	id_conceptoaps bigint,
	columna_imp varchar(35),
	formula varchar(3000),
	estado varchar(1),
	distribuido varchar(1)
) ;
COMMENT ON COLUMN psto_plla_concepto_actividad.distribuido IS E'S: Si, N: No';


DROP TABLE IF EXISTS psto_plla_conce_plani_ant;
CREATE TABLE psto_plla_conce_plani_ant (
	id_conceptoaps bigint NOT NULL,
	columna_imp varchar(35) NOT NULL,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_plla_condicion_escala;
CREATE TABLE psto_plla_condicion_escala (
	id_condicion_escala varchar(2) NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_plla_edad;
CREATE TABLE psto_plla_edad (
	id_edad varchar(2) NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_plla_movlibdis;
CREATE TABLE psto_plla_movlibdis (
	id_psto_movlibdis bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cargo bigint NOT NULL,
	id_tipoestatus bigint,
	id_tipopais bigint,
	kilometraje decimal(10,2),
	imp_pto_viaje decimal(10,2),
	tramo1 decimal(10,2),
	imp_tramo1 decimal(10,2),
	tramo2 decimal(10,2),
	imp_tramo2 decimal(10,2),
	imp_total decimal(10,2),
	actividad varchar(200)
) ;


DROP TABLE IF EXISTS psto_plla_parametros;
CREATE TABLE psto_plla_parametros (
	id_parametro varchar(35) NOT NULL,
	nombre varchar(100),
	formula varchar(200),
	importe decimal(20,14),
	estado varchar(1),
	orden bigint
) ;


DROP TABLE IF EXISTS psto_plla_parametros_valor;
CREATE TABLE psto_plla_parametros_valor (
	id_parametro varchar(35) NOT NULL,
	id_anho bigint NOT NULL,
	eje_formula varchar(200),
	importe decimal(20,14)
) ;


DROP TABLE IF EXISTS psto_plla_planilla;
CREATE TABLE psto_plla_planilla (
	id_psto_planilla bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto_padre varchar(10) NOT NULL,
	id_persona bigint,
	id_categoria bigint,
	id_depto varchar(10) NOT NULL,
	id_cargo bigint NOT NULL,
	id_tipocontrato bigint NOT NULL,
	id_auxiliar bigint,
	uniforme varchar(1),
	docente_tc varchar(1),
	tipo_area varchar(1),
	finicio timestamp(0),
	ffin timestamp(0),
	id_cond_lab varchar(5),
	id_tiempotrabajo bigint,
	ant_basico decimal(10,2),
	ant_prima_inf decimal(10,2),
	ant_modal_formativa decimal(10,2),
	ant_boni_cargo decimal(10,2),
	ant_asig_fam decimal(10,2),
	ant_viv_remun decimal(10,2),
	ant_sodexo decimal(10,2),
	imp_boni_cargo decimal(10,2),
	imp_asig_fam decimal(10,2),
	imp_movi_lib_dis decimal(10,2),
	imp_hextras25 decimal(10,2),
	imp_hextras35 decimal(10,2),
	imp_hnocturna decimal(10,2),
	imp_hferiado decimal(10,2),
	imp_viv_remun decimal(10,2),
	imp_sodexo decimal(10,2),
	imp_ayudaanual decimal(10,2),
	imp_reint5tacat decimal(10,2),
	cal_meses decimal(10,2),
	cal_prima_inf decimal(10,2),
	cal_sueldo decimal(10,2),
	imp_basico decimal(10,2),
	imp_modal_formativa decimal(10,2),
	imp_prima_inf decimal(10,2),
	imp_gratificacion decimal(10,2),
	imp_bono_mis decimal(10,2),
	imp_essalud decimal(10,2),
	imp_uniforme decimal(10,2),
	imp_boni_extra decimal(10,2),
	imp_cts decimal(10,2),
	imp_vac_trunca decimal(10,2),
	imp_ppg decimal(10,2),
	imp_seguro_vida decimal(10,2),
	total decimal(10,2),
	id_temporada varchar(2),
	id_cargo_proceso bigint,
	eshextras25 decimal(4,1),
	eshextras35 decimal(4,1),
	eshnocturna decimal(4,1),
	eshferiado decimal(4,1),
	fmr decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_plla_planilla_dist;
CREATE TABLE psto_plla_planilla_dist (
	id_plla_planilla_dist bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_psto_planilla bigint NOT NULL,
	tipo varchar(1) NOT NULL,
	id_temporada varchar(2),
	porcentaje decimal(10,2),
	mes1 bigint,
	mes2 bigint,
	mes3 bigint,
	mes4 bigint,
	mes5 bigint,
	mes6 bigint,
	mes7 bigint,
	mes8 bigint,
	mes9 bigint,
	mes10 bigint,
	mes11 bigint,
	mes12 bigint
) ;
COMMENT ON COLUMN psto_plla_planilla_dist.tipo IS E'1: principal, 0:asociado';


DROP TABLE IF EXISTS psto_plla_planilla_dist_det;
CREATE TABLE psto_plla_planilla_dist_det (
	id_concepto_actividad bigint NOT NULL,
	id_plla_planilla_dist bigint NOT NULL,
	mes1 decimal(10,2),
	mes2 decimal(10,2),
	mes3 decimal(10,2),
	mes4 decimal(10,2),
	mes5 decimal(10,2),
	mes6 decimal(10,2),
	mes7 decimal(10,2),
	mes8 decimal(10,2),
	mes9 decimal(10,2),
	mes10 decimal(10,2),
	mes11 decimal(10,2),
	mes12 decimal(10,2),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_plla_puntaje_mis;
CREATE TABLE psto_plla_puntaje_mis (
	id_psto_puntaje_mis bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cargo bigint NOT NULL,
	id_tipoestatus bigint,
	id_tipopais bigint,
	punt_min decimal(10,2),
	punt_max decimal(10,2),
	punt_ant decimal(10,2),
	punt_sujerido decimal(10,2),
	punt_aprobado decimal(10,2),
	actividad varchar(200)
) ;


DROP TABLE IF EXISTS psto_plla_renovable;
CREATE TABLE psto_plla_renovable (
	id_renovable varchar(2) NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_plla_temporada;
CREATE TABLE psto_plla_temporada (
	id_temporada varchar(2) NOT NULL,
	nombre varchar(50),
	inicio bigint,
	fin bigint,
	inicio1 bigint,
	fin1 bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_plla_vivienda;
CREATE TABLE psto_plla_vivienda (
	id_psto_vivienda bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_cargo bigint NOT NULL,
	imp_importe decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_pregrado_concepto_precio;
CREATE TABLE psto_pregrado_concepto_precio (
	id_concepto_precio bigint NOT NULL,
	id_actividad bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto_padre varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	importe_i decimal(10,2),
	importe_ii decimal(10,2),
	importe_beca_i decimal(10,2),
	importe_beca_ii decimal(10,2),
	tipo varchar(2),
	id_auxiliar bigint
) ;
COMMENT ON COLUMN psto_pregrado_concepto_precio.tipo IS E'M:Matricula, E: enseñanza';


DROP TABLE IF EXISTS psto_pregrado_proceso;
CREATE TABLE psto_pregrado_proceso (
	id_pregrado_proceso bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_depto_padre varchar(10) NOT NULL,
	armada decimal(10,2),
	imp_mat decimal(10,2),
	credito_1 decimal(10,2),
	credito_2_5 decimal(10,2),
	totalcredito_1_i decimal(10,2),
	totalcredito_2_5_i decimal(10,2),
	total_alumno_i decimal(10,2),
	totalcredito_1_ii decimal(10,2),
	totalcredito_2_5_ii decimal(10,2),
	total_alumno_ii decimal(10,2),
	total_horas_i decimal(10,2),
	total_horas_ii decimal(10,2),
	convoca varchar(8),
	id_auxiliar bigint,
	id_eap_depto_area bigint,
	total_ense_i decimal(10,2),
	total_ense_ii decimal(10,2),
	total_mat_i decimal(10,2),
	total_mat_ii decimal(10,2),
	id_eap bigint,
	nom_depto varchar(255),
	total_des_i decimal(10,2),
	total_des_ii decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_pregrado_proceso_concepto;
CREATE TABLE psto_pregrado_proceso_concepto (
	id_pregrado_proceso bigint NOT NULL,
	id_concepto_precio bigint NOT NULL,
	importe_i decimal(10,2),
	importe_ii decimal(10,2),
	total_i decimal(10,2),
	total_ii decimal(10,2),
	tipo varchar(2)
) ;


DROP TABLE IF EXISTS psto_pregrado_proyecccion;
CREATE TABLE psto_pregrado_proyecccion (
	id_proyeccion bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_depto_padre varchar(10) NOT NULL,
	ciclo bigint,
	incremento decimal(10,2),
	afecta_incremento varchar(1),
	cantidad_i decimal(10,2),
	cantidad_ii decimal(10,2),
	credito_i decimal(10,2),
	credito_ii decimal(10,2),
	disercion_i decimal(10,2),
	disercion_ii decimal(10,2),
	horas_i decimal(10,2),
	horas_ii decimal(10,2),
	beca varchar(1),
	id_auxiliar bigint,
	id_eap_depto_area bigint,
	id_eap bigint,
	nom_depto varchar(255)
) ;


DROP TABLE IF EXISTS psto_presupuesto;
CREATE TABLE psto_presupuesto (
	id_presupuesto bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_evento bigint NOT NULL,
	id_pstonegocio bigint,
	id_eje bigint,
	id_depto varchar(10),
	id_persona bigint,
	descripcion varchar(200),
	fecha timestamp(0),
	total_ingreso decimal(10,2),
	total_gasto decimal(10,2),
	estado varchar(1),
	motivo varchar(500)
) ;
COMMENT ON COLUMN psto_presupuesto.estado IS E'1:REGISTRADO 
2:APROBADO 
0:ANULADO';


DROP TABLE IF EXISTS psto_presupuesto_det;
CREATE TABLE psto_presupuesto_det (
	id_presupuesto_det bigint NOT NULL,
	id_presupuesto bigint NOT NULL,
	id_actividad bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_depto_asiento varchar(10) NOT NULL,
	tipo varchar(1) NOT NULL,
	descripcion varchar(300),
	cantidad decimal(10,2),
	punidad decimal(10,2),
	a decimal(10,2),
	b decimal(10,2),
	c decimal(10,2),
	d decimal(10,2),
	e decimal(10,2),
	f decimal(10,2),
	g decimal(10,2),
	total decimal(10,2),
	depto_nombre varchar(255),
	depto_asiento_nombre varchar(255),
	id_tipoplan bigint,
	id_cuentaaasi varchar(10),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_tipoctacte varchar(10),
	id_entidad_ctacte bigint,
	mes1 decimal(10,2),
	mes2 decimal(10,2),
	mes3 decimal(10,2),
	mes4 decimal(10,2),
	mes5 decimal(10,2),
	mes6 decimal(10,2),
	mes7 decimal(10,2),
	mes8 decimal(10,2),
	mes9 decimal(10,2),
	mes10 decimal(10,2),
	mes11 decimal(10,2),
	mes12 decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_presupuesto_det_dist;
CREATE TABLE psto_presupuesto_det_dist (
	id_presupuesto_det bigint NOT NULL,
	id_presupuesto bigint NOT NULL,
	id_mes bigint NOT NULL,
	importe decimal(10,2),
	porcentaje decimal(10,2),
	meses decimal(10,2)
) ;


DROP TABLE IF EXISTS psto_presupuesto_eliminar;
CREATE TABLE psto_presupuesto_eliminar (
	id varchar(35) NOT NULL,
	id_presupuesto bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_anho bigint NOT NULL,
	id_evento bigint NOT NULL,
	id_pstonegocio bigint,
	id_eje bigint,
	id_depto varchar(10),
	id_persona bigint,
	descripcion varchar(200),
	fecha timestamp(0),
	total_ingreso decimal(10,2),
	total_gasto decimal(10,2),
	estado varchar(1),
	motivo varchar(500),
	id_perona_elim bigint,
	fecha_elim TIMESTAMP(6)
) ;


DROP TABLE IF EXISTS psto_proyecto;
CREATE TABLE psto_proyecto (
	id_proyecto bigint NOT NULL,
	id_entidad bigint NOT NULL,
	nombre varchar(100),
	comentario varchar(300),
	fdesde timestamp(0),
	fhasta timestamp(0),
	id_depto varchar(10),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_proyecto_auxiliar;
CREATE TABLE psto_proyecto_auxiliar (
	id_proyecto bigint NOT NULL,
	id_auxiliar bigint NOT NULL
) ;


DROP TABLE IF EXISTS psto_tipo;
CREATE TABLE psto_tipo (
	id_pstotipo bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_tipo_area;
CREATE TABLE psto_tipo_area (
	id_tipo_area varchar(2) NOT NULL,
	nombre varchar(100) NOT NULL,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS psto_tipo_depto;
CREATE TABLE psto_tipo_depto (
	id_tipo_depto varchar(2) NOT NULL,
	nombre varchar(100) NOT NULL,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS reporte_archivo_mensual;
CREATE TABLE reporte_archivo_mensual (
	id_archivo_mensual bigint NOT NULL,
	id_empresa bigint,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_tipoarchivo bigint NOT NULL,
	fecha_limite timestamp(0) NOT NULL,
	id_entidad bigint,
	id_depto bigint
) ;


DROP TABLE IF EXISTS report_archiv_mensual_det;
CREATE TABLE report_archiv_mensual_det (
	id_detalle bigint NOT NULL,
	id_archivo_mensual bigint NOT NULL,
	id_entidad bigint,
	fecha_creacion TIMESTAMP(6),
	fecha_modificacion TIMESTAMP(6),
	url varchar(500),
	nombre varchar(300),
	formato varchar(100),
	tamanho varchar(100),
	id_user bigint,
	id_depto bigint
) ;


DROP TABLE IF EXISTS rep_matriculados;
CREATE TABLE rep_matriculados (
	id_alumno_contrato bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_programa_estudio bigint NOT NULL,
	id_tipo_contrato bigint NOT NULL,
	id_semestre_programa bigint NOT NULL,
	id_planpago_semestre bigint NOT NULL,
	id_nivel_ensenanza bigint NOT NULL,
	id_plan_programa bigint NOT NULL,
	id_matricula_detalle bigint NOT NULL,
	id_comprobante varchar(2) NOT NULL,
	estado char(1) NOT NULL,
	total_debito decimal(15,2),
	total_credito decimal(15,2),
	total decimal(15,2),
	matricula decimal(15,2),
	mensual decimal(15,2),
	contado decimal(15,2),
	matricula1cuota decimal(15,2),
	tipo_alumno varchar(5),
	id_alumno_contrato_clon bigint,
	id_alumno_contrato_asociado bigint,
	id_entidad bigint,
	id_depto varchar(10),
	codigo varchar(12),
	nombre varchar(255),
	paterno varchar(255),
	materno varchar(255),
	nombre_facultad varchar(200),
	nombre_escuela varchar(303),
	cuotas bigint,
	semestre varchar(7),
	id_semestre bigint,
	id_modo_contrato bigint,
	id_modalidad_estudio bigint,
	id_sede bigint,
	plan_pago varchar(100),
	tipo varchar(10),
	provision decimal(15,2),
	deposito decimal(15,2),
	id_user bigint NOT NULL,
	matriculaprov decimal(15,2),
	id_venta bigint,
	tipo_ope varchar(2),
	saldo decimal(15,2),
	motivo varchar(250)
) ;


DROP TABLE IF EXISTS rep_morosidad;
CREATE TABLE rep_morosidad (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint,
	id_cliente bigint NOT NULL,
	id_user bigint NOT NULL,
	id_tipoventa bigint,
	ingreso decimal(10,2),
	debito decimal(10,2),
	credito decimal(10,2),
	saldo decimal(10,2),
	morosidad decimal(10,2)
) ;


DROP TABLE IF EXISTS rep_morosidad_new;
CREATE TABLE rep_morosidad_new (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint,
	id_cliente bigint NOT NULL,
	id_user bigint NOT NULL,
	id_tipoventa bigint,
	ingreso decimal(10,2),
	debito decimal(10,2),
	credito decimal(10,2),
	saldo decimal(10,2),
	morosidad decimal(10,2)
) ;


DROP TABLE IF EXISTS rep_recaudacion;
CREATE TABLE rep_recaudacion (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint,
	dia bigint,
	id_cliente bigint NOT NULL,
	id_user bigint NOT NULL,
	deuda decimal(10,2),
	deposito decimal(10,2),
	saldo decimal(10,2)
) ;


DROP TABLE IF EXISTS rep_recaudacion_tmp;
CREATE TABLE rep_recaudacion_tmp (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint,
	dia bigint,
	id_cliente bigint NOT NULL,
	id_user bigint NOT NULL,
	deuda decimal(10,2),
	deposito decimal(10,2),
	saldo decimal(10,2)
) ;


DROP TABLE IF EXISTS rep_recaudacion_tmp1;
CREATE TABLE rep_recaudacion_tmp1 (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint,
	dia bigint,
	id_cliente bigint NOT NULL,
	id_user bigint NOT NULL,
	deuda decimal(10,2),
	deposito decimal(10,2),
	saldo decimal(10,2)
) ;


DROP TABLE IF EXISTS rep_recuperacion;
CREATE TABLE rep_recuperacion (
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint,
	id_cliente bigint NOT NULL,
	id_user bigint NOT NULL,
	id_tipoventa bigint,
	ingreso decimal(10,2),
	debito decimal(10,2),
	credito decimal(10,2),
	saldo decimal(10,2),
	morosidad decimal(10,2)
) ;


DROP TABLE IF EXISTS school_departamento;
CREATE TABLE school_departamento (
	dep_id varchar(5) NOT NULL,
	pai_id bigint,
	dep_nombre varchar(50),
	dep_codigo varchar(5)
) ;


DROP TABLE IF EXISTS school_distrito;
CREATE TABLE school_distrito (
	dis_id varchar(5) NOT NULL,
	pro_id varchar(5),
	dis_nombre varchar(50),
	dis_codigo varchar(5)
) ;


DROP TABLE IF EXISTS school_provincia;
CREATE TABLE school_provincia (
	pro_id varchar(5) NOT NULL,
	dep_id varchar(5),
	pro_nombre varchar(50),
	pro_codigo varchar(5)
) ;


DROP TABLE IF EXISTS segcli_mes_corte;
CREATE TABLE segcli_mes_corte (
	id_mescorte bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(22),
	id_anho bigint,
	id_mes bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS segcli_saldos;
CREATE TABLE segcli_saldos (
	id_mescorte bigint NOT NULL,
	id_venta bigint NOT NULL,
	importe decimal(38,2)
) ;


DROP TABLE IF EXISTS segcli_saldos_detalle;
CREATE TABLE segcli_saldos_detalle (
	id_mescorte bigint NOT NULL,
	id_venta bigint NOT NULL,
	id_articulo bigint NOT NULL,
	importe decimal(38,2)
) ;


DROP TABLE IF EXISTS servicio;
CREATE TABLE servicio (
	id_servicio bigint NOT NULL,
	codigo varchar(20) NOT NULL,
	url varchar(500),
	usuario varchar(200),
	clave varchar(200),
	ruc varchar(200),
	descripcion varchar(500),
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS servicio_usuario;
CREATE TABLE servicio_usuario (
	id_servicio bigint NOT NULL,
	id_usuario bigint NOT NULL
) ;


DROP TABLE IF EXISTS serv_control;
CREATE TABLE serv_control (
	id_control bigint NOT NULL,
	id_grupo bigint NOT NULL,
	id_persona bigint NOT NULL,
	fecha timestamp(0),
	hentrada varchar(12),
	hsalida varchar(12),
	asistencia bigint,
	asistencia_culto bigint,
	motivo varchar(100),
	accion varchar(2),
	comentario varchar(25),
	estado varchar(1),
	fecregistrado TIMESTAMP(6),
	id_persona_reg bigint,
	fecha_marcacion timestamp(0)
) ;


DROP TABLE IF EXISTS serv_grupo;
CREATE TABLE serv_grupo (
	id_grupo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	nombre varchar(100),
	descripcion varchar(200),
	id_persona bigint,
	id_adjunto bigint,
	estado varchar(1)
) ;


DROP TABLE IF EXISTS serv_grupo_integrantes;
CREATE TABLE serv_grupo_integrantes (
	id_grupo_integrantes bigint NOT NULL,
	id_grupo bigint NOT NULL,
	id_persona bigint NOT NULL,
	hentrada varchar(20),
	hsalida varchar(20),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS serv_grupo_servicios;
CREATE TABLE serv_grupo_servicios (
	id_grupo_servicios bigint NOT NULL,
	id_grupo bigint NOT NULL,
	descripcion varchar(100),
	comentario varchar(100),
	id_persona bigint
) ;


DROP TABLE IF EXISTS sire_compras_contribuy;
CREATE TABLE sire_compras_contribuy (
	id_compras_contribuy varchar(25) NOT NULL,
	id_empresa bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	periodo varchar(10) NOT NULL,
	orden bigint NOT NULL,
	femision timestamp(0) NOT NULL,
	fvctopago timestamp(0),
	tipocomp varchar(3) NOT NULL,
	serie varchar(5) NOT NULL,
	anho varchar(10),
	mes varchar(2),
	nrodocinicial varchar(20) NOT NULL,
	nrodofinal varchar(20),
	tipodoc varchar(3) NOT NULL,
	nrodocumento varchar(30) NOT NULL,
	razonsocial varchar(1000),
	bigravadodg decimal(10,2),
	igvipmdg decimal(10,2),
	bigravadodgng decimal(10,2),
	igvipmdgng decimal(10,2),
	bigravadodng decimal(10,2),
	igvipmdng decimal(10,2),
	valoradqng decimal(10,2),
	isc decimal(10,2),
	icbper decimal(10,2),
	otrostributos decimal(10,2),
	totalcp decimal(10,2),
	moneda varchar(3) NOT NULL,
	tipocambio decimal(10,3),
	femisiondocmod timestamp(0),
	tipocpmod varchar(3),
	seriecpmod varchar(10),
	coddamodsi varchar(20),
	nrocpmod varchar(20),
	clasifdebssysss varchar(20),
	idproyoperatri varchar(20),
	porcpart decimal(10,2),
	imb decimal(10,2),
	carorigindeoi varchar(100),
	detraccion varchar(3),
	tipodenota varchar(3),
	estcomp varchar(3),
	incal varchar(3),
	carsunat varchar(100) NOT NULL,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	clu1 varchar(50)
) ;


DROP TABLE IF EXISTS sire_compras_preli;
CREATE TABLE sire_compras_preli (
	id_compras_preli bigint NOT NULL,
	id_empresa bigint NOT NULL,
	periodo varchar(10) NOT NULL,
	tipo varchar(5) NOT NULL,
	tipo_compra varchar(5) NOT NULL,
	id_estado_prel_rvie varchar(5) NOT NULL,
	correlativo bigint,
	archivo varchar(500),
	num_ticke varchar(100),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;
COMMENT ON COLUMN sire_compras_preli.correlativo IS E'CORRE CUANDO tipo=R';
COMMENT ON COLUMN sire_compras_preli.id_estado_prel_rvie IS E'01:Registrado, 02:Generado zip, 03: Generado reemplazo 04: generado preliminar, 00:eliminado P: 01,04,00, R: 01,02,03,04,05';
COMMENT ON COLUMN sire_compras_preli.tipo IS E'P: ACEPTA PROPUESTA, R:REMPLAZO';
COMMENT ON COLUMN sire_compras_preli.tipo_compra IS E'CO: COMPRA, ND: NO DOMICILIADO';


DROP TABLE IF EXISTS sire_compras_preli_det;
CREATE TABLE sire_compras_preli_det (
	id_compras_preli_det varchar(25) NOT NULL,
	id_compras_preli bigint NOT NULL,
	orden bigint NOT NULL,
	tipo varchar(5) NOT NULL,
	femision timestamp(0) NOT NULL,
	fvctopago timestamp(0),
	tipocomp varchar(3) NOT NULL,
	serie varchar(5),
	anho varchar(10),
	mes varchar(2),
	nrodocinicial varchar(20),
	nrodofinal varchar(20),
	tipodoc varchar(3),
	nrodocumento varchar(30),
	razonsocial varchar(1000),
	bigravadodg decimal(10,2),
	igvipmdg decimal(10,2),
	bigravadodgng decimal(10,2),
	igvipmdgng decimal(10,2),
	bigravadodng decimal(10,2),
	igvipmdng decimal(10,2),
	valoradqng decimal(10,2),
	ndconcepto_adic decimal(10,2),
	isc decimal(10,2),
	icbper decimal(10,2),
	otrostributos decimal(10,2),
	totalcp decimal(10,2),
	ndtipocomp varchar(3),
	ndserie varchar(5),
	ndanho varchar(10),
	ndnrodocinicial varchar(20),
	ndpais varchar(10),
	ndpaispago varchar(10),
	ndnrodocpago varchar(30),
	ndrazonsocialpago varchar(1000),
	nddomicilio varchar(300),
	ndvinculo varchar(5),
	nddobletrib varchar(5),
	ndexoapli varchar(5),
	ndtiporenta varchar(5),
	ndmoderv varchar(5),
	ndaplirenta varchar(5),
	moneda varchar(3) NOT NULL,
	tipocambio decimal(10,3),
	femisiondocmod timestamp(0),
	tipocpmod varchar(3),
	seriecpmod varchar(10),
	coddamodsi varchar(20),
	nrocpmod varchar(20),
	clasifdebssysss varchar(20),
	idproyoperatri varchar(20),
	porcpart decimal(10,2),
	imb decimal(10,2),
	carorigindeoi varchar(100),
	detraccion varchar(3),
	tipodenota varchar(3),
	estcomp varchar(3),
	incal varchar(3),
	carsunat varchar(100) NOT NULL,
	id_entidad bigint,
	id_depto varchar(20),
	vigencia bigint,
	editado bigint,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;
COMMENT ON COLUMN sire_compras_preli_det.editado IS E'0: NO, 1:SI';
COMMENT ON COLUMN sire_compras_preli_det.id_depto IS E'No domiciliado';
COMMENT ON COLUMN sire_compras_preli_det.id_entidad IS E'No domiciliado';
COMMENT ON COLUMN sire_compras_preli_det.tipo IS E'P: PROPUESTA, C:CONTABLE IS TIPO_COMRA=ND =>C';


DROP TABLE IF EXISTS sire_compras_sunat;
CREATE TABLE sire_compras_sunat (
	id_compras_sunat varchar(25) NOT NULL,
	id_empresa bigint NOT NULL,
	periodo varchar(10) NOT NULL,
	orden bigint NOT NULL,
	femision timestamp(0) NOT NULL,
	fvctopago timestamp(0),
	tipocomp varchar(3) NOT NULL,
	serie varchar(5) NOT NULL,
	anho varchar(10),
	mes varchar(2),
	nrodocinicial varchar(20) NOT NULL,
	nrodofinal varchar(20),
	tipodoc varchar(3) NOT NULL,
	nrodocumento varchar(30) NOT NULL,
	razonsocial varchar(1000),
	bigravadodg decimal(10,2),
	igvipmdg decimal(10,2),
	bigravadodgng decimal(10,2),
	igvipmdgng decimal(10,2),
	bigravadodng decimal(10,2),
	igvipmdng decimal(10,2),
	valoradqng decimal(10,2),
	isc decimal(10,2),
	icbper decimal(10,2),
	otrostributos decimal(10,2),
	totalcp decimal(10,2),
	moneda varchar(3) NOT NULL,
	tipocambio decimal(10,3),
	femisiondocmod timestamp(0),
	tipocpmod varchar(3),
	seriecpmod varchar(10),
	coddamodsi varchar(20),
	nrocpmod varchar(20),
	clasifdebssysss varchar(20),
	idproyoperatri varchar(20),
	porcpart decimal(10,2),
	imb decimal(10,2),
	carorigindeoi varchar(100),
	detraccion varchar(3),
	tipodenota varchar(3),
	estcomp varchar(3),
	incal varchar(3),
	carsunat varchar(100) NOT NULL,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	clu1 varchar(50)
) ;


DROP TABLE IF EXISTS sire_empresa_credencial;
CREATE TABLE sire_empresa_credencial (
	id_empresa bigint NOT NULL,
	client_id varchar(300) NOT NULL,
	client_secret varchar(300) NOT NULL,
	usuario varchar(50) NOT NULL,
	clave varchar(1000) NOT NULL,
	grant_type varchar(1000) NOT NULL,
	scope varchar(1000) NOT NULL,
	tokens varchar(3000),
	fecha_tk timestamp(0),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;


DROP TABLE IF EXISTS sire_estado_prel_rvie;
CREATE TABLE sire_estado_prel_rvie (
	id_estado_prel_rvie varchar(5) NOT NULL,
	nombre varchar(50),
	nombrecorto varchar(10),
	orden bigint,
	vigencia bigint
) ;


DROP TABLE IF EXISTS sire_ventas_contribuy;
CREATE TABLE sire_ventas_contribuy (
	id_ventas_contribuy varchar(25) NOT NULL,
	id_empresa bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	periodo varchar(10) NOT NULL,
	orden bigint NOT NULL,
	femision timestamp(0) NOT NULL,
	fvctopago timestamp(0),
	tipocomp varchar(3) NOT NULL,
	serie varchar(5) NOT NULL,
	nrodocinicial varchar(20) NOT NULL,
	nrodofinal varchar(20),
	tipodoc varchar(3) NOT NULL,
	nrodocumento varchar(30) NOT NULL,
	razonsocial varchar(1000),
	valfacexpo decimal(10,2),
	bigravada decimal(10,2),
	dsctobi decimal(10,2),
	igvipm decimal(10,2),
	dsctoigvipm decimal(10,2),
	mtoexonerado decimal(10,2),
	mtoinafecto decimal(10,2),
	isc decimal(10,2),
	bigravivap decimal(10,2),
	ivap decimal(10,2),
	icbper decimal(10,2),
	otrostributos decimal(10,2),
	totalcp decimal(10,2),
	moneda varchar(3) NOT NULL,
	tipocambio decimal(10,3),
	femisiondocmod timestamp(0),
	tipocpmod varchar(3),
	seriecpmod varchar(10),
	nrocpmod varchar(20),
	idproyoperatri varchar(20),
	tipodenota varchar(3),
	estcomp varchar(3),
	valorfobembo decimal(10,2),
	valoropgrat decimal(10,2),
	tipooperacion varchar(5),
	damcp varchar(20),
	clu varchar(20),
	carsunat varchar(100) NOT NULL,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;


DROP TABLE IF EXISTS sire_ventas_preli;
CREATE TABLE sire_ventas_preli (
	id_ventas_preli bigint NOT NULL,
	id_empresa bigint NOT NULL,
	periodo varchar(10) NOT NULL,
	tipo varchar(5) NOT NULL,
	id_estado_prel_rvie varchar(5) NOT NULL,
	correlativo bigint,
	archivo varchar(500),
	num_ticke varchar(100),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;
COMMENT ON COLUMN sire_ventas_preli.correlativo IS E'CORRE CUANDO tipo=R';
COMMENT ON COLUMN sire_ventas_preli.id_estado_prel_rvie IS E'01:Registrado, 02:Generado zip, 03: Generado reemplazo 04: generado preliminar, 00:eliminado P: 01,04,00, R: 01,02,03,04,05';
COMMENT ON COLUMN sire_ventas_preli.tipo IS E'P: ACEPTA PROPUESTA, R:REMPLAZO';


DROP TABLE IF EXISTS sire_ventas_preli_det;
CREATE TABLE sire_ventas_preli_det (
	id_ventas_preli_det varchar(25) NOT NULL,
	id_ventas_preli bigint NOT NULL,
	orden bigint NOT NULL,
	tipo varchar(5) NOT NULL,
	femision timestamp(0) NOT NULL,
	fvctopago timestamp(0),
	tipocomp varchar(3) NOT NULL,
	serie varchar(5) NOT NULL,
	nrodocinicial varchar(20) NOT NULL,
	nrodofinal varchar(20),
	tipodoc varchar(3) NOT NULL,
	nrodocumento varchar(30) NOT NULL,
	razonsocial varchar(1000),
	valfacexpo decimal(10,2),
	bigravada decimal(10,2),
	dsctobi decimal(10,2),
	igvipm decimal(10,2),
	dsctoigvipm decimal(10,2),
	mtoexonerado decimal(10,2),
	mtoinafecto decimal(10,2),
	isc decimal(10,2),
	bigravivap decimal(10,2),
	ivap decimal(10,2),
	icbper decimal(10,2),
	otrostributos decimal(10,2),
	totalcp decimal(10,2),
	moneda varchar(3) NOT NULL,
	tipocambio decimal(10,3),
	femisiondocmod timestamp(0),
	tipocpmod varchar(3),
	seriecpmod varchar(10),
	nrocpmod varchar(20),
	idproyoperatri varchar(20),
	tipodenota varchar(3),
	estcomp varchar(3),
	valorfobembo decimal(10,2),
	valoropgrat decimal(10,2),
	tipooperacion varchar(5),
	damcp varchar(20),
	clu varchar(20),
	carsunat varchar(100) NOT NULL,
	vigencia bigint,
	editado bigint,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;
COMMENT ON COLUMN sire_ventas_preli_det.editado IS E'0: NO, 1:SI';
COMMENT ON COLUMN sire_ventas_preli_det.tipo IS E'P: PROPUESTA, C:CONTABLE';


DROP TABLE IF EXISTS sire_ventas_sunat;
CREATE TABLE sire_ventas_sunat (
	id_ventas_sunat varchar(25) NOT NULL,
	id_empresa bigint NOT NULL,
	periodo varchar(10) NOT NULL,
	orden bigint NOT NULL,
	femision timestamp(0) NOT NULL,
	fvctopago timestamp(0),
	tipocomp varchar(3) NOT NULL,
	serie varchar(5) NOT NULL,
	nrodocinicial varchar(20) NOT NULL,
	nrodofinal varchar(20),
	tipodoc varchar(3) NOT NULL,
	nrodocumento varchar(30) NOT NULL,
	razonsocial varchar(1000),
	valfacexpo decimal(10,2),
	bigravada decimal(10,2),
	dsctobi decimal(10,2),
	igvipm decimal(10,2),
	dsctoigvipm decimal(10,2),
	mtoexonerado decimal(10,2),
	mtoinafecto decimal(10,2),
	isc decimal(10,2),
	bigravivap decimal(10,2),
	ivap decimal(10,2),
	icbper decimal(10,2),
	otrostributos decimal(10,2),
	totalcp decimal(10,2),
	moneda varchar(3) NOT NULL,
	tipocambio decimal(10,3),
	femisiondocmod timestamp(0),
	tipocpmod varchar(3),
	seriecpmod varchar(10),
	nrocpmod varchar(20),
	idproyoperatri varchar(20),
	tipodenota varchar(3),
	estcomp varchar(3),
	valorfobembo decimal(10,2),
	valoropgrat decimal(10,2),
	tipooperacion varchar(5),
	damcp varchar(20),
	clu varchar(20),
	carsunat varchar(100) NOT NULL,
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0)
) ;


DROP TABLE IF EXISTS sistema_externo;
CREATE TABLE sistema_externo (
	id_sistemaexterno bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_tipoasiento varchar(10),
	codigo bigint,
	nombre varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS sistema_externo_bk;
CREATE TABLE sistema_externo_bk (
	id_sistemaexterno bigint,
	id_entidad bigint,
	id_depto varchar(10),
	id_tipoasiento varchar(10),
	codigo bigint,
	nombre varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS ssire_libro;
CREATE TABLE ssire_libro (
	codigo_libro varchar(6) NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS ssire_rce_contribuyente;
CREATE TABLE ssire_rce_contribuyente (
	id_rce_contribuyente bigint NOT NULL,
	id_empresa bigint,
	ruc varchar(11),
	razon_social varchar(1500),
	periodo varchar(8),
	car_sunat varchar(27),
	fecha_emision varchar(10),
	fecha_vcto_pago varchar(10),
	tipo_cp varchar(2),
	serie_cp varchar(20),
	anho bigint,
	nro_cp_ini varchar(20),
	nro_cp_fin varchar(20),
	tipo_doc_prov varchar(1),
	nro_doc_prov varchar(15),
	razon_social_prov varchar(1500),
	bi_gravado_dg decimal(12,2),
	igv_gravado_dg decimal(12,2),
	bi_gravado_dgng decimal(12,2),
	igv_gravado_dgng decimal(12,2),
	bi_gravado_dng decimal(12,2),
	igv_gravado_dng decimal(12,2),
	valor_adq_ng decimal(12,2),
	isc decimal(12,2),
	icbper decimal(12,2),
	otros_tributos decimal(12,2),
	total_cp decimal(12,2),
	moneda varchar(3),
	tipo_cambio numeric,
	fecha_emision_doc_mod varchar(10),
	tipo_cp_mod varchar(2),
	serie_cp_mod varchar(20),
	cod_dam_dsi varchar(3),
	nro_cp_mod varchar(20),
	clasif_bss_sss bigint,
	id_proyecto_oper varchar(50),
	porc_part decimal(25,2),
	imb decimal(25,2),
	car_orig varchar(27),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_created bigint,
	id_user_updated bigint
) ;


DROP TABLE IF EXISTS ssire_rce_propuesta;
CREATE TABLE ssire_rce_propuesta (
	id_rce_propuesta bigint,
	ruc_empresa varchar(25),
	razon_social_empresa varchar(250),
	periodo varchar(100),
	car_sunat varchar(50),
	fecha_emision timestamp(0),
	fecha_vcto_pago timestamp(0),
	tipo_cp varchar(10),
	serie_cp varchar(25),
	anho bigint,
	nro_cp_ini varchar(25),
	nro_cp_fin varchar(25),
	tipo_doc_identidad bigint,
	nro_doc_identidad varchar(50),
	razon_social varchar(250),
	bi_gravado_dg decimal(25,2),
	igv_gravado_dg decimal(25,2),
	bi_gravado_dgng decimal(25,2),
	igv_gravado_dgng decimal(25,2),
	bi_gravado_dng decimal(25,2),
	igv_gravado_dng decimal(25,2),
	valor_adq_ng decimal(25,2),
	isc decimal(25,2),
	icbper decimal(25,2),
	otros_tributos decimal(25,2),
	total_cp decimal(25,2),
	moneda varchar(25),
	tipo_cambio decimal(25,3),
	fecha_emision_doc_mod timestamp(0),
	tipo_cp_mod varchar(10),
	serie_cp_mod varchar(25),
	cod_dam_dsi varchar(100),
	nro_cp_mod varchar(25),
	clasif_bss_sss varchar(100),
	id_proyecto_oper varchar(100),
	porc_part varchar(100),
	imb decimal(25,2),
	car_orig varchar(50),
	detraccion varchar(100),
	tipo_nota varchar(100),
	est_comp varchar(1),
	incal bigint,
	id_empresa bigint,
	id_proveedor bigint,
	num_ticket varchar(25),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_created bigint,
	id_user_updated bigint
) ;


DROP TABLE IF EXISTS ssire_rce_propuesta_compra;
CREATE TABLE ssire_rce_propuesta_compra (
	id_compra bigint NOT NULL,
	car_sunat varchar(50) NOT NULL
) ;


DROP TABLE IF EXISTS ssire_rce_propuesta_nodom;
CREATE TABLE ssire_rce_propuesta_nodom (
	id_compra bigint NOT NULL,
	periodo varchar(6),
	car_sunat varchar(27),
	fecha_emision varchar(10),
	tipo_cp varchar(2),
	serie_cp varchar(20),
	nro_cp varchar(20),
	val_adquisiciones decimal(14,2),
	otros decimal(14,2),
	total_cp decimal(14,2),
	tipo_cp_cf varchar(2),
	serie_cp_cf varchar(20),
	anho bigint,
	nro_cp_cf varchar(20),
	monto_ret decimal(14,2),
	moneda varchar(3),
	tipo_cambio decimal(4,3),
	pais bigint,
	razon_social_sujeto varchar(100),
	domicilio_sujeto varchar(100),
	id_sujeto varchar(15),
	id_beneficiario varchar(15),
	razon_social_beneficiario varchar(100),
	pais_beneficiario bigint,
	vinculo bigint,
	rta_bta decimal(14,2),
	deduccion_costo decimal(14,2),
	rta_neta decimal(14,2),
	tasa_retencion decimal(5,2),
	impuesto_retenido decimal(14,2),
	convenio bigint,
	exoneracion bigint,
	tipo_renta bigint,
	mod_serv bigint,
	art_76 bigint,
	car_orig varchar(27),
	id_empresa bigint,
	id_entidad bigint,
	id_depto varchar(20),
	id_anho bigint,
	id_mes bigint,
	id_proveedor bigint,
	orden bigint,
	validated varchar(1),
	errors varchar(1000),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_created bigint,
	id_user_updated bigint
) ;


DROP TABLE IF EXISTS ssire_rce_propuesta_reemplaza;
CREATE TABLE ssire_rce_propuesta_reemplaza (
	id_compra bigint NOT NULL,
	ruc varchar(11),
	razon_social varchar(1500),
	periodo varchar(6),
	car_sunat varchar(27),
	fecha_emision varchar(10),
	fecha_vcto_pago varchar(10),
	tipo_cp varchar(2),
	serie_cp varchar(20),
	anho bigint,
	nro_cp_ini varchar(20),
	nro_cp_fin varchar(20),
	tipo_doc_prov varchar(1),
	nro_doc_prov varchar(15),
	razon_social_prov varchar(1500),
	bi_gravado_dg decimal(14,2),
	igv_gravado_dg decimal(14,2),
	bi_gravado_dgng decimal(14,2),
	igv_gravado_dgng decimal(14,2),
	bi_gravado_dng decimal(14,2),
	igv_gravado_dng decimal(14,2),
	valor_adq_ng decimal(14,2),
	isc decimal(14,2),
	icbper decimal(14,2),
	otros_tributos decimal(14,2),
	total_cp decimal(14,2),
	moneda varchar(3),
	tipo_cambio decimal(4,3),
	fecha_emision_doc_mod varchar(10),
	tipo_cp_mod varchar(2),
	serie_cp_mod varchar(20),
	cod_dam_dsi varchar(3),
	nro_cp_mod varchar(20),
	clasif_bss_sss bigint,
	id_proyecto_oper varchar(50),
	porc_part decimal(27,2),
	imb decimal(27,2),
	car_orig varchar(27),
	id_empresa bigint,
	id_entidad bigint,
	id_depto varchar(20),
	id_anho bigint,
	id_mes bigint,
	id_proveedor bigint,
	orden bigint,
	validated varchar(1),
	errors varchar(1000),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_created bigint,
	id_user_updated bigint
) ;


DROP TABLE IF EXISTS ssire_rce_propuesta_sunat;
CREATE TABLE ssire_rce_propuesta_sunat (
	id_rce_propuesta_su bigint NOT NULL,
	ruc varchar(11),
	razon_social varchar(1500),
	periodo varchar(6),
	car_sunat varchar(27),
	fecha_emision timestamp(0),
	fecha_vcto_pago timestamp(0),
	tipo_cp varchar(2),
	serie_cp varchar(20),
	anho bigint,
	nro_cp_ini varchar(20),
	nro_cp_fin varchar(20),
	tipo_doc_prov varchar(1),
	nro_doc_prov varchar(15),
	razon_social_prov varchar(1500),
	bi_gravado_dg decimal(14,2),
	igv_gravado_dg decimal(14,2),
	bi_gravado_dgng decimal(14,2),
	igv_gravado_dgng decimal(14,2),
	bi_gravado_dng decimal(14,2),
	igv_gravado_dng decimal(14,2),
	valor_adq_ng decimal(14,2),
	isc decimal(14,2),
	icbper decimal(14,2),
	otros_tributos decimal(14,2),
	total_cp decimal(14,2),
	moneda varchar(3),
	tipo_cambio decimal(4,3),
	fecha_emision_doc_mod timestamp(0),
	tipo_cp_mod varchar(2),
	serie_cp_mod varchar(20),
	cod_dam_dsi varchar(3),
	nro_cp_mod varchar(20),
	clasif_bss_sss bigint,
	id_proyecto_oper varchar(50),
	porc_part decimal(27,2),
	imb decimal(27,2),
	car_orig varchar(27),
	detraccion varchar(100),
	tipo_nota varchar(100),
	est_comp varchar(1),
	incal bigint,
	id_empresa bigint,
	id_proveedor bigint,
	num_ticket varchar(25),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_created bigint,
	id_user_updated bigint
) ;


DROP TABLE IF EXISTS ssire_rvie_propuesta_reemplaza;
CREATE TABLE ssire_rvie_propuesta_reemplaza (
	id_venta bigint NOT NULL,
	ruc varchar(11),
	razon_social varchar(1500),
	periodo varchar(6),
	car_sunat varchar(27),
	fecha_emision varchar(10),
	fecha_vcto_pago varchar(10),
	tipo_cp varchar(2),
	serie_cp varchar(20),
	nro_cp_ini varchar(20),
	nro_cp_fin varchar(20),
	tipo_doc_cli varchar(1),
	nro_doc_cli varchar(15),
	razon_social_cli varchar(1500),
	valor_fac_exportacion decimal(14,2),
	bi_gravada decimal(14,2),
	dscto_bi decimal(14,2),
	igv decimal(14,2),
	dscto_igv decimal(14,2),
	mto_exonerado decimal(14,2),
	mto_inafecto decimal(14,2),
	isc decimal(14,2),
	bi_ivap decimal(14,2),
	ivap decimal(14,2),
	icbper decimal(14,2),
	otros_tributos decimal(14,2),
	total_cp decimal(14,2),
	moneda varchar(3),
	tipo_cambio decimal(4,3),
	fecha_emision_doc_mod varchar(10),
	tipo_cp_mod varchar(2),
	serie_cp_mod varchar(20),
	nro_cp_mod varchar(20),
	id_proyecto_oper varchar(50),
	id_empresa bigint,
	id_entidad bigint,
	id_depto varchar(20),
	id_anho bigint,
	id_mes bigint,
	id_cliente bigint,
	orden bigint,
	validated varchar(1),
	errors varchar(1000),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_created bigint,
	id_user_updated bigint
) ;


DROP TABLE IF EXISTS ssire_rvie_propuesta_sunat;
CREATE TABLE ssire_rvie_propuesta_sunat (
	id_rvie_propuesta_su bigint NOT NULL,
	fecha_emision timestamp(0),
	fecha_vcto_pago timestamp(0),
	tipo_cp varchar(2),
	serie_cp varchar(20),
	nro_cp_ini varchar(20),
	nro_cp_fin varchar(20),
	tipo_doc_cli varchar(1),
	nro_doc_cli varchar(15),
	razon_social_cli varchar(1500),
	valor_fac_exportacion decimal(14,2),
	bi_gravada decimal(14,2),
	dscto_bi decimal(14,2),
	igv decimal(14,2),
	dscto_igv decimal(14,2),
	mto_exonerado decimal(14,2),
	mto_inafecto decimal(14,2),
	isc decimal(14,2),
	bi_ivap decimal(14,2),
	ivap decimal(14,2),
	icbper decimal(14,2),
	otros_tributos decimal(14,2),
	total_cp decimal(14,2),
	moneda varchar(3),
	tipo_cambio decimal(4,3),
	fecha_emision_doc_mod timestamp(0),
	tipo_cp_mod varchar(2),
	serie_cp_mod varchar(20),
	nro_cp_mod varchar(20),
	id_proyecto_oper varchar(50),
	tipo_nota varchar(100),
	est_comp varchar(1),
	valor_fob_embarcado decimal(14,2),
	valor_op_gratuitas decimal(14,2),
	tipo_operacion varchar(4),
	dam_cp varchar(50),
	car_sunat varchar(27),
	id_empresa bigint,
	id_cliente bigint,
	num_ticket varchar(25),
	periodo varchar(6),
	created_at timestamp(0),
	updated_at timestamp(0),
	id_user_created bigint,
	id_user_updated bigint
) ;


DROP TABLE IF EXISTS temp_asiento;
CREATE TABLE temp_asiento (
	id_tipoorigen varchar(20),
	id_origen varchar(20),
	fondo varchar(20),
	depto varchar(20),
	cuenta varchar(20),
	cuenta_cte varchar(20),
	restriccion varchar(20),
	importe decimal(10,2),
	descripcion varchar(200),
	memo varchar(20),
	voucher varchar(20),
	agrupa varchar(20)
) ;


DROP TABLE IF EXISTS temp_asiento1;
CREATE TABLE temp_asiento1 (
	id_tipoorigen varchar(20),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS temp_personal_asientos;
CREATE TABLE temp_personal_asientos (
	dni varchar(100),
	asiento varchar(100)
) ;


DROP TABLE IF EXISTS temp_personal_confianza;
CREATE TABLE temp_personal_confianza (
	dni varchar(100)
) ;


DROP TABLE IF EXISTS temp_sequence_values;
CREATE TABLE temp_sequence_values (
	id_pngrado bigint
) ;


DROP TABLE IF EXISTS test;
CREATE TABLE test (
	id varchar(20),
	name varchar(20),
	age varchar(20)
) ;


DROP TABLE IF EXISTS test1;
CREATE TABLE test1 (
	id_test bigint NOT NULL,
	nom varchar(10)
) ;


DROP TABLE IF EXISTS test_anticipo_auto;
CREATE TABLE test_anticipo_auto (
	id_cliente bigint,
	id_venta bigint,
	importe decimal(10,2),
	tipo varchar(4),
	msn varchar(200),
	fecha timestamp(0),
	id_entidad bigint,
	id_depto varchar(10)
) ;


DROP TABLE IF EXISTS test_aud;
CREATE TABLE test_aud (
	empno bigint NOT NULL,
	ename varchar(10),
	job varchar(9),
	mgr bigint,
	hiredate timestamp(0),
	sal decimal(7,2),
	comm decimal(7,2),
	deptno bigint
) ;


DROP TABLE IF EXISTS test_cuota;
CREATE TABLE test_cuota (
	id_persona bigint,
	id_venta bigint,
	fecha timestamp(0),
	variacion varchar(1) DEFAULT 'N',
	id_nivel_ens bigint,
	cuota bigint,
	id_semestre bigint
) ;


DROP TABLE IF EXISTS test_cuota_epg;
CREATE TABLE test_cuota_epg (
	id_semestre bigint,
	id_persona bigint,
	codigo varchar(20),
	nro_cuota bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS test_dscto;
CREATE TABLE test_dscto (
	codigo varchar(20)
) ;


DROP TABLE IF EXISTS test_dscto_covid_epg;
CREATE TABLE test_dscto_covid_epg (
	codigo varchar(20),
	importe decimal(10,2),
	depto varchar(10),
	procesado varchar(1)
) ;


DROP TABLE IF EXISTS test_dscto_mat;
CREATE TABLE test_dscto_mat (
	id_cliente bigint,
	msn varchar(200),
	imp_cuota decimal(10,2),
	imp_dscto decimal(10,2),
	saldo decimal(10,2),
	ok varchar(1),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS test_migrated;
CREATE TABLE test_migrated (
	alumno varchar(100),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS test_migrated2;
CREATE TABLE test_migrated2 (
	alumno varchar(100),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS test_migrated3;
CREATE TABLE test_migrated3 (
	id_personal varchar(100),
	id_persona bigint,
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS test_migrated4;
CREATE TABLE test_migrated4 (
	id_personal varchar(100),
	id_persona bigint,
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS test_migrated_ju;
CREATE TABLE test_migrated_ju (
	codigo varchar(20),
	importe decimal(10,2),
	fecha timestamp(0),
	migrado varchar(1),
	comentario varchar(200)
) ;


DROP TABLE IF EXISTS test_migrated_tpp;
CREATE TABLE test_migrated_tpp (
	codigo varchar(20),
	importe decimal(10,2),
	fecha timestamp(0),
	migrado varchar(1),
	comentario varchar(200)
) ;


DROP TABLE IF EXISTS test_nc_dscto;
CREATE TABLE test_nc_dscto (
	id_user bigint,
	id_cliente bigint,
	id_venta bigint,
	fecha timestamp(0),
	msn varchar(200),
	imp_cuota decimal(10,2),
	imp_dscto decimal(10,2),
	saldo decimal(10,2),
	ok varchar(1),
	revisado varchar(1)
) ;


DROP TABLE IF EXISTS test_no_cuota;
CREATE TABLE test_no_cuota (
	id_persona bigint,
	id_alumno_contrato bigint,
	error varchar(200),
	variacion varchar(1) DEFAULT 'N',
	id_nivel_ens bigint,
	cuota bigint,
	fecha timestamp(0),
	id_semestre bigint
) ;


DROP TABLE IF EXISTS test_no_migrated;
CREATE TABLE test_no_migrated (
	alumno varchar(100),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS test_vnt;
CREATE TABLE test_vnt (
	serie_numero varchar(20)
) ;


DROP TABLE IF EXISTS tes_cuota_mus;
CREATE TABLE tes_cuota_mus (
	id_cliente bigint,
	importe decimal(10,2),
	fecha timestamp(0),
	se_cobro varchar(1)
) ;


DROP TABLE IF EXISTS tipo_actividad_concepto;
CREATE TABLE tipo_actividad_concepto (
	id_tipoactividadconcepto bigint NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_actividad_economica;
CREATE TABLE tipo_actividad_economica (
	id_tipoactividadeconomica bigint NOT NULL,
	nombre varchar(255),
	cod_sunat varchar(50)
) ;


DROP TABLE IF EXISTS tipo_activo_movimiento;
CREATE TABLE tipo_activo_movimiento (
	id_tipoactivomovimiento bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	es_acreedora bigint NOT NULL
) ;


DROP TABLE IF EXISTS tipo_activo_seccion;
CREATE TABLE tipo_activo_seccion (
	id_entidad bigint NOT NULL,
	seccion bigint,
	nombre varchar(150),
	id_depto varchar(10)
) ;


DROP TABLE IF EXISTS tipo_anticipo;
CREATE TABLE tipo_anticipo (
	id_tipoanticipo bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_archivo;
CREATE TABLE tipo_archivo (
	id_tipoarchivo bigint NOT NULL,
	nombre varchar(100) NOT NULL,
	abreviatura varchar(20),
	id_grupoarchivo bigint,
	codigo varchar(6)
) ;


DROP TABLE IF EXISTS tipo_area;
CREATE TABLE tipo_area (
	id_tipoarea bigint NOT NULL,
	nombre varchar(55),
	codigo varchar(4)
) ;


DROP TABLE IF EXISTS tipo_arreglo;
CREATE TABLE tipo_arreglo (
	id_tipoarreglo bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_asiento;
CREATE TABLE tipo_asiento (
	id_tipoasiento varchar(10) NOT NULL,
	nombre varchar(100) NOT NULL,
	es_apertura bigint,
	es_cierre bigint,
	es_legal bigint,
	num_orden bigint
) ;


DROP TABLE IF EXISTS tipo_balance_item;
CREATE TABLE tipo_balance_item (
	id_tipobalanceitem bigint NOT NULL,
	nombre varchar(100) NOT NULL,
	id_parent bigint,
	id_level bigint
) ;


DROP TABLE IF EXISTS tipo_bien_servicio;
CREATE TABLE tipo_bien_servicio (
	id_tipobienservicio varchar(3) NOT NULL,
	nombre varchar(100) NOT NULL,
	tasa decimal(10,3),
	estado varchar(1),
	anexo varchar(1)
) ;


DROP TABLE IF EXISTS tipo_cambio;
CREATE TABLE tipo_cambio (
	id_moneda bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	cos_venta numeric,
	cos_compra numeric,
	cos_denominacional numeric,
	id_moneda_main bigint NOT NULL DEFAULT 7
) ;


DROP TABLE IF EXISTS tipo_canal;
CREATE TABLE tipo_canal (
	id_tipocanal bigint NOT NULL,
	nombre varchar(100),
	codigo varchar(10),
	es_activo varchar(1)
) ;


DROP TABLE IF EXISTS tipo_cese;
CREATE TABLE tipo_cese (
	id_tipocese bigint NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_componente;
CREATE TABLE tipo_componente (
	id_tipocomponente bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_comprobante;
CREATE TABLE tipo_comprobante (
	id_comprobante varchar(3) NOT NULL,
	nombre varchar(255),
	tipo varchar(1),
	nombre_corto varchar(15),
	id_tipopais bigint,
	codigo varchar(3),
	cod_sunat varchar(5),
	cod_electronico varchar(5),
	dc varchar(3),
	orden bigint,
	gr varchar(1),
	patron varchar(250)
) ;
COMMENT ON COLUMN tipo_comprobante.cod_electronico IS E'Código que se utiliza para enviar a facturación electronica';
COMMENT ON COLUMN tipo_comprobante.codigo IS E'Código del documento';
COMMENT ON COLUMN tipo_comprobante.dc IS E'D=Débito,C=Crédito,T=Todos';
COMMENT ON COLUMN tipo_comprobante.id_tipopais IS E'Id del país';
COMMENT ON COLUMN tipo_comprobante.orden IS E'ORDEN PARA LISTADO';
COMMENT ON COLUMN tipo_comprobante.tipo IS E'V:VENTA, C:COMPRAS,T:TODOS';


DROP TABLE IF EXISTS tipo_concepto_planilla;
CREATE TABLE tipo_concepto_planilla (
	id_tipoconceptoaps bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	signo bigint NOT NULL
) ;
COMMENT ON TABLE tipo_concepto_planilla IS E'Todos estos tipos de conceptos se descargan del APS, a excepción del 500 que se ha creado para efectos de conceptos extras creados por el usuario ';


DROP TABLE IF EXISTS tipo_condicion;
CREATE TABLE tipo_condicion (
	id_tipocondicion bigint NOT NULL,
	nombre varchar(255)
) ;


DROP TABLE IF EXISTS tipo_contrato;
CREATE TABLE tipo_contrato (
	id_tipocontrato bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	nombre_corto varchar(15)
) ;


DROP TABLE IF EXISTS tipo_contribuyente;
CREATE TABLE tipo_contribuyente (
	id_tipocontribuyente bigint NOT NULL,
	nombre varchar(255),
	nombre_2 varchar(255)
) ;


DROP TABLE IF EXISTS tipo_cta_banco;
CREATE TABLE tipo_cta_banco (
	id_tipoctabanco bigint NOT NULL,
	nombre varchar(50),
	codigo varchar(4)
) ;


DROP TABLE IF EXISTS tipo_cta_corriente;
CREATE TABLE tipo_cta_corriente (
	id_tipoctacte varchar(10) NOT NULL,
	nombre varchar(255) NOT NULL,
	cod_sunat bigint
) ;


DROP TABLE IF EXISTS tipo_cubso;
CREATE TABLE tipo_cubso (
	id_cubso bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_dato;
CREATE TABLE tipo_dato (
	id_tipodato bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	siglas varchar(50),
	pos_siglas bigint
) ;


DROP TABLE IF EXISTS tipo_deposito;
CREATE TABLE tipo_deposito (
	id_tipodeposito bigint NOT NULL,
	nombres varchar(30),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_direccion;
CREATE TABLE tipo_direccion (
	id_tipodireccion bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_documento;
CREATE TABLE tipo_documento (
	id_tipodocumento bigint NOT NULL,
	nombre varchar(255),
	siglas varchar(10)
) ;


DROP TABLE IF EXISTS tipo_documento_salida;
CREATE TABLE tipo_documento_salida (
	id_tipodocumentosalida bigint NOT NULL,
	nombre varchar(50) NOT NULL,
	codigo varchar(5),
	estado bigint NOT NULL,
	orden bigint
) ;
COMMENT ON COLUMN tipo_documento_salida.codigo IS E'codigo del documento de salida';
COMMENT ON COLUMN tipo_documento_salida.estado IS E'1 = activo
0 = inactivo';
COMMENT ON COLUMN tipo_documento_salida.nombre IS E'nombre del documento de salida';


DROP TABLE IF EXISTS tipo_empresa;
CREATE TABLE tipo_empresa (
	id_tipoempresa bigint NOT NULL,
	nombre varchar(100) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_entidad;
CREATE TABLE tipo_entidad (
	id_tipoentidad bigint NOT NULL,
	nombre varchar(255),
	orden bigint
) ;


DROP TABLE IF EXISTS tipo_estado;
CREATE TABLE tipo_estado (
	id_tipoestado bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_estado_civil;
CREATE TABLE tipo_estado_civil (
	id_tipoestadocivil bigint NOT NULL,
	nombre varchar(255),
	estado varchar(1),
	estado_psto varchar(1),
	nombre_corto varchar(10)
) ;


DROP TABLE IF EXISTS tipo_estatus;
CREATE TABLE tipo_estatus (
	id_tipoestatus bigint NOT NULL,
	nombre varchar(50) NOT NULL,
	siglas varchar(10) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_evidencia;
CREATE TABLE tipo_evidencia (
	id_tipoevidencia bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_existencia;
CREATE TABLE tipo_existencia (
	id_existencia bigint NOT NULL,
	nombre varchar(50),
	codigo varchar(2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_familia;
CREATE TABLE tipo_familia (
	id_tipofamilia bigint NOT NULL,
	nombre varchar(20)
) ;


DROP TABLE IF EXISTS tipo_gasto;
CREATE TABLE tipo_gasto (
	id_tipogasto bigint NOT NULL,
	nombre varchar(255),
	estado varchar(1),
	codigo varchar(1)
) ;


DROP TABLE IF EXISTS tipo_grupo_conta;
CREATE TABLE tipo_grupo_conta (
	id_tipogrupoconta bigint NOT NULL,
	codigo varchar(2) NOT NULL,
	nombre varchar(255),
	descripcion varchar(500),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_grupo_cuenta;
CREATE TABLE tipo_grupo_cuenta (
	id_tipogrupocuenta bigint NOT NULL,
	nombre varchar(50) NOT NULL,
	nom_clase varchar(50) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_idioma;
CREATE TABLE tipo_idioma (
	id_tipoidioma bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_igv;
CREATE TABLE tipo_igv (
	id_tipoigv varchar(2) NOT NULL,
	descripcion varchar(60),
	gravado varchar(1),
	id_tipopais bigint,
	codigo varchar(10)
) ;
COMMENT ON TABLE tipo_igv IS E'Catálogo No. 07: Códigos de Tipo de Afectación del IGV
ANEXO VII';
COMMENT ON COLUMN tipo_igv.id_tipopais IS E'Id del país';


DROP TABLE IF EXISTS tipo_incoterm;
CREATE TABLE tipo_incoterm (
	id_incoterm varchar(3) NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_indicador;
CREATE TABLE tipo_indicador (
	id_tipoindicador bigint NOT NULL,
	nombre varchar(255)
) ;


DROP TABLE IF EXISTS tipo_informe;
CREATE TABLE tipo_informe (
	id_tipoinforme bigint NOT NULL,
	nombre varchar(100),
	descripcion varchar(200),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_jornada;
CREATE TABLE tipo_jornada (
	id_tipojornada bigint NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_leyenda;
CREATE TABLE tipo_leyenda (
	id_leyenda varchar(4) NOT NULL,
	nombre varchar(255)
) ;


DROP TABLE IF EXISTS tipo_mod_traslado;
CREATE TABLE tipo_mod_traslado (
	id_tipo_mod_traslado varchar(3) NOT NULL,
	nombre varchar(50) NOT NULL,
	codigo_sunat varchar(3),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_motivo_traslado;
CREATE TABLE tipo_motivo_traslado (
	id_motivotraslado bigint NOT NULL,
	nombre varchar(100),
	estado varchar(1),
	codigo_sunat varchar(10)
) ;


DROP TABLE IF EXISTS tipo_nivel_area;
CREATE TABLE tipo_nivel_area (
	id_tipo_nivel_area bigint NOT NULL,
	nombre varchar(100),
	comentario varchar(200),
	nivelhijo bigint,
	orden bigint,
	vigencia bigint
) ;


DROP TABLE IF EXISTS tipo_nivel_vista;
CREATE TABLE tipo_nivel_vista (
	id_tipo_nivel_vista bigint NOT NULL,
	nombre varchar(100),
	comentario varchar(200),
	orden bigint,
	vigencia bigint
) ;


DROP TABLE IF EXISTS tipo_nota_dc;
CREATE TABLE tipo_nota_dc (
	id_tiponota varchar(2) NOT NULL,
	id_comprobante varchar(2) NOT NULL,
	nombre varchar(50),
	vigencia bigint,
	codigo varchar(10),
	grupo varchar(3)
) ;
COMMENT ON COLUMN tipo_nota_dc.grupo IS E'GE = GENERAL; IT = ITEM; GL = GLOGAL. FUNCIONALIDAD PARA MOSTRAR EL FORMULARIO A UTILIZAR PARA LAS NOTAS DC';


DROP TABLE IF EXISTS tipo_operacion;
CREATE TABLE tipo_operacion (
	id_tipooperacion varchar(2) NOT NULL,
	nombre varchar(100),
	tipo_mov varchar(1),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_operacion_detraccion;
CREATE TABLE tipo_operacion_detraccion (
	id_operacion varchar(2) NOT NULL,
	nombre varchar(100) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_origen;
CREATE TABLE tipo_origen (
	id_tipoorigen bigint NOT NULL,
	nombre varchar(50),
	nombre_tabla varchar(255)
) ;


DROP TABLE IF EXISTS tipo_pago;
CREATE TABLE tipo_pago (
	id_tipopago bigint NOT NULL,
	num_grupo bigint NOT NULL,
	nombre varchar(50) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_pais;
CREATE TABLE tipo_pais (
	id_tipopais bigint NOT NULL,
	nombre varchar(50),
	iso_a2 varchar(10),
	iso_a3 varchar(10),
	tel_prefijo varchar(10),
	map_longitud double precision,
	map_latitud double precision,
	gentilicio varchar(50),
	cod_sunat bigint
) ;


DROP TABLE IF EXISTS tipo_parentesco;
CREATE TABLE tipo_parentesco (
	id_tipoparentesco varchar(20) NOT NULL,
	id_parent varchar(20),
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_pedido;
CREATE TABLE tipo_pedido (
	id_tipopedido bigint NOT NULL,
	nombre varchar(50),
	estado varchar(1),
	llave varchar(4)
) ;


DROP TABLE IF EXISTS tipo_periodo;
CREATE TABLE tipo_periodo (
	id_tipoperiodo bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	num_meses bigint
) ;


DROP TABLE IF EXISTS tipo_plan;
CREATE TABLE tipo_plan (
	id_tipoplan bigint NOT NULL,
	nombre varchar(50) NOT NULL
) ;


DROP TABLE IF EXISTS tipo_planilla;
CREATE TABLE tipo_planilla (
	id_tipoplanilla bigint NOT NULL,
	nombre varchar(255) NOT NULL,
	cod_aps bigint
) ;


DROP TABLE IF EXISTS tipo_plantilla;
CREATE TABLE tipo_plantilla (
	id_tipoplantilla bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_plataforma;
CREATE TABLE tipo_plataforma (
	id_tipoplataforma bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_politica;
CREATE TABLE tipo_politica (
	id_tipopolitica bigint NOT NULL,
	nombre varchar(30),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_privilegio;
CREATE TABLE tipo_privilegio (
	id_privilegio bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_proyecto;
CREATE TABLE tipo_proyecto (
	id_tipoproyecto bigint NOT NULL,
	nombre varchar(50)
) ;


DROP TABLE IF EXISTS tipo_recingreso;
CREATE TABLE tipo_recingreso (
	id_tiporecingreso bigint NOT NULL,
	nombre varchar(100)
) ;
COMMENT ON COLUMN tipo_recingreso.id_tiporecingreso IS E'IDENTIFICADOR';
COMMENT ON COLUMN tipo_recingreso.nombre IS E'NOMBRE';


DROP TABLE IF EXISTS tipo_religion;
CREATE TABLE tipo_religion (
	id_tiporeligion bigint NOT NULL,
	nombre varchar(255),
	siglas varchar(50)
) ;


DROP TABLE IF EXISTS tipo_renta;
CREATE TABLE tipo_renta (
	id_tiporenta bigint NOT NULL,
	nombre varchar(200),
	codigo varchar(2)
) ;


DROP TABLE IF EXISTS tipo_representante_doc;
CREATE TABLE tipo_representante_doc (
	id_tiporedoc bigint NOT NULL,
	nombre varchar(100) NOT NULL,
	activo varchar(3)
) ;
COMMENT ON TABLE tipo_representante_doc IS E'Tabla encargada de registro de los tipo de de representan te para firma de documentos';


DROP TABLE IF EXISTS tipo_sangre;
CREATE TABLE tipo_sangre (
	id_tiposangre bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_servicioproceso;
CREATE TABLE tipo_servicioproceso (
	id_tiposervicioproceso varchar(100) NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_telefono;
CREATE TABLE tipo_telefono (
	id_tipotelefono bigint NOT NULL,
	nombre varchar(255)
) ;


DROP TABLE IF EXISTS tipo_total;
CREATE TABLE tipo_total (
	id_tipototal bigint NOT NULL,
	nombre varchar(255)
) ;


DROP TABLE IF EXISTS tipo_tramite;
CREATE TABLE tipo_tramite (
	id_tipotramite bigint NOT NULL,
	nombre varchar(100)
) ;


DROP TABLE IF EXISTS tipo_tramite_proceso;
CREATE TABLE tipo_tramite_proceso (
	id_tramite_proceso bigint NOT NULL,
	nombre varchar(255),
	orden bigint,
	codigo varchar(4)
) ;


DROP TABLE IF EXISTS tipo_transaccion;
CREATE TABLE tipo_transaccion (
	id_tipotransaccion bigint NOT NULL,
	id_parent bigint,
	id_modulo bigint,
	nombre varchar(30),
	modo varchar(1),
	estado varchar(1),
	id_tipogrupoconta bigint,
	codigo varchar(25),
	descripcion varchar(1000),
	ruta varchar(250)
) ;
COMMENT ON TABLE tipo_transaccion IS E'Esta Tabla, Define el tipo de operacion de ventas, depositos y otros, ademas ayuda a identificar que operaciones se muestran en el estado de cuenta de Alumno';
COMMENT ON COLUMN tipo_transaccion.codigo IS E'Codigo único de caso que genera distribución';
COMMENT ON COLUMN tipo_transaccion.descripcion IS E'Desc del caso que genera distribución';
COMMENT ON COLUMN tipo_transaccion.ruta IS E'Ruta del caso que genera distribución';


DROP TABLE IF EXISTS tipo_tratamiento;
CREATE TABLE tipo_tratamiento (
	id_tipotratamiento bigint NOT NULL,
	nombre varchar(255),
	nom_masculino varchar(10),
	nom_femenino varchar(10),
	sig_masculino varchar(10),
	sig_femenino varchar(10)
) ;


DROP TABLE IF EXISTS tipo_ubigeo;
CREATE TABLE tipo_ubigeo (
	id_ubigeo bigint NOT NULL,
	id_departamento bigint,
	id_provincia bigint,
	id_distrito bigint,
	id_ciudad bigint,
	nom_departamento varchar(20),
	nom_provincia varchar(30),
	nom_distrito varchar(30),
	nom_ciudad varchar(60),
	clasificcpp varchar(10),
	p02_06 double precision,
	catccpp02 varchar(2),
	nom_categoria varchar(30)
) ;


DROP TABLE IF EXISTS tipo_vehiculo;
CREATE TABLE tipo_vehiculo (
	id_tipovehiculo bigint NOT NULL,
	nombre varchar(20),
	activo varchar(1)
) ;


DROP TABLE IF EXISTS tipo_venta;
CREATE TABLE tipo_venta (
	id_tipoventa bigint NOT NULL,
	nombre varchar(100),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS tipo_virtual;
CREATE TABLE tipo_virtual (
	id_tipovirtual bigint NOT NULL,
	nombre varchar(255),
	siglas varchar(100)
) ;


DROP TABLE IF EXISTS tipo_voucher;
CREATE TABLE tipo_voucher (
	id_tipovoucher bigint NOT NULL,
	nombre varchar(20)
) ;


DROP TABLE IF EXISTS tlecrd_transf_temp;
CREATE TABLE tlecrd_transf_temp (
	id_tlecrd varchar(8) NOT NULL,
	id_area varchar(3) NOT NULL,
	id_mov_tran varchar(20) NOT NULL,
	id_chequera varchar(20),
	num_operacion varchar(20) NOT NULL,
	numtran varchar(20),
	fecha timestamp(0) NOT NULL,
	glosa varchar(80),
	dc varchar(1) NOT NULL,
	importe decimal(10,2) NOT NULL,
	imp_otro decimal(10,2) NOT NULL,
	voucher varchar(4) NOT NULL,
	id_cuenta_chq varchar(20) NOT NULL,
	id_cuenta_gasto_chq varchar(20) NOT NULL,
	id_nivel_gasto varchar(20) NOT NULL,
	id_pers_user varchar(20) NOT NULL,
	ip varchar(20) NOT NULL,
	estado varchar(1) NOT NULL,
	id_personal varchar(20)
) ;


DROP TABLE IF EXISTS tmp_conta_asiento;
CREATE TABLE tmp_conta_asiento (
	id_asiento bigint NOT NULL,
	id_tipoorigen bigint NOT NULL,
	id_origen bigint,
	fondo varchar(10),
	depto varchar(10),
	cuenta varchar(10),
	cuenta_cte varchar(50),
	restriccion varchar(10),
	importe decimal(10,2),
	descripcion varchar(255),
	memo varchar(100),
	voucher varchar(10),
	parent_id bigint,
	ref_id varchar(100),
	agrupa varchar(1) DEFAULT 'N',
	importe_me decimal(10,2),
	primario varchar(1)
) ;


DROP TABLE IF EXISTS tmp_visa;
CREATE TABLE tmp_visa (
	almacenid bigint NOT NULL,
	entidadid bigint NOT NULL,
	dptoid varchar(20) NOT NULL,
	nombre varchar(255) NOT NULL
) ;


DROP TABLE IF EXISTS tmp_visa2;
CREATE TABLE tmp_visa2 (
	id_institucion bigint NOT NULL,
	id_depto varchar(20) NOT NULL,
	id_entidad bigint NOT NULL,
	id_documento bigint NOT NULL,
	id_comprobante varchar(20) NOT NULL
) ;


DROP TABLE IF EXISTS tramite_catalogo;
CREATE TABLE tramite_catalogo (
	id_tramite bigint NOT NULL,
	id_sedearea bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_persona_update bigint,
	id_tipotramite bigint NOT NULL,
	id_dinamica bigint NOT NULL,
	nombre varchar(255),
	fecha_create timestamp(0),
	fecha_update timestamp(0),
	estado varchar(1),
	codigo varchar(6),
	id_entidad bigint,
	id_depto varchar(10),
	es_digital varchar(1) DEFAULT 'N'
) ;


DROP TABLE IF EXISTS tramite_detalle;
CREATE TABLE tramite_detalle (
	id_tramite_detalle bigint NOT NULL,
	id_registro bigint NOT NULL,
	id_tramite bigint NOT NULL,
	importe decimal(10,2),
	file varchar(255),
	anulado varchar(1),
	estado varchar(1),
	id_paso_actual bigint,
	ext_file varchar(5)
) ;
COMMENT ON COLUMN tramite_detalle.anulado IS E'S: RECHAZAR EL TRAMITE; N: PROCESAR';
COMMENT ON COLUMN tramite_detalle.estado IS E'0: EN PROCESO; 1: FINALIZADO; 2: RECHAZADO';


DROP TABLE IF EXISTS tramite_flujo;
CREATE TABLE tramite_flujo (
	id_flujo bigint NOT NULL,
	id_tramite bigint,
	nombre varchar(50),
	codigo varchar(6),
	orden bigint,
	estado varchar(1)
) ;
COMMENT ON COLUMN tramite_flujo.orden IS E'El orden 1 es el flujo principal para iniciar todos los procesos
El orden 2 es cuando se rechaza o anula la solicitud';


DROP TABLE IF EXISTS tramite_flujo_paso;
CREATE TABLE tramite_flujo_paso (
	id_paso bigint NOT NULL,
	id_flujo bigint,
	id_tramite_proceso bigint,
	orden bigint,
	permite_anular varchar(1),
	paso_visible varchar(1),
	estado varchar(1),
	es_paso_fin varchar(1) DEFAULT 'N',
	id_user bigint,
	fecha timestamp(0)
) ;
COMMENT ON COLUMN tramite_flujo_paso.es_paso_fin IS E'SI ES S ENTONCES ES EL PASO FINAL
SI ES N NO ES EL PASO FINAL';
COMMENT ON COLUMN tramite_flujo_paso.paso_visible IS E'S:VER PASO CUANDO HAY 2 PASOS FIN; N:NO MOSTRAR ';
COMMENT ON COLUMN tramite_flujo_paso.permite_anular IS E'S: EL PASO PERMITE ANULAR; N:PASO NO PERMITE ANULAR';


DROP TABLE IF EXISTS tramite_pasos;
CREATE TABLE tramite_pasos (
	id_tramite_pasos bigint NOT NULL,
	id_tramite bigint NOT NULL,
	id_tramite_proceso bigint NOT NULL,
	orden bigint,
	estado varchar(1),
	es_fin varchar(1),
	nro_flujo bigint
) ;


DROP TABLE IF EXISTS tramite_proceso;
CREATE TABLE tramite_proceso (
	id_proceso bigint NOT NULL,
	id_tramite_detalle bigint NOT NULL,
	id_paso bigint NOT NULL,
	id_user bigint NOT NULL,
	fecha timestamp(0),
	revisado varchar(2),
	descripcion varchar(255)
) ;


DROP TABLE IF EXISTS tramite_registro;
CREATE TABLE tramite_registro (
	id_registro bigint NOT NULL,
	id_venta bigint,
	id_sede bigint,
	id_persona bigint NOT NULL,
	id_user_reg bigint NOT NULL,
	fecha_reg timestamp(0),
	es_tramitador varchar(1),
	nombre_tramitador varchar(255),
	dni_tramitador varchar(11),
	total decimal(10,2),
	file_poder_tramitador varchar(255),
	ext_file_poder varchar(10),
	estado varchar(1),
	id_entidad bigint,
	id_depto varchar(10)
) ;
COMMENT ON COLUMN tramite_registro.estado IS E'Si es 0 entonces el tramite no esta pagado
Si es 1 entonces el tramite esta pagado';
COMMENT ON COLUMN tramite_registro.ext_file_poder IS E'Extensión del archivo';
COMMENT ON COLUMN tramite_registro.file_poder_tramitador IS E'CUENDO ES_TRAMITADOR = S';


DROP TABLE IF EXISTS transferencia_file;
CREATE TABLE transferencia_file (
	id_transferencia_file bigint NOT NULL,
	id_voucher bigint NOT NULL,
	id_proveedor bigint,
	id_ajuste bigint,
	id_transferencia bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tamanho decimal(10,2)
) ;


DROP TABLE IF EXISTS traspaso_mov_cin;
CREATE TABLE traspaso_mov_cin (
	id_tipo_origen bigint,
	id_origen bigint,
	id_tipo_destino bigint,
	id_destino bigint,
	id_cingreso bigint,
	id_movimiento bigint,
	id_compra bigint
) ;
COMMENT ON TABLE traspaso_mov_cin IS E'TABLA DE REFRENCIA DE LOS MOVIMIENTOS_DETALLE CON SUS COMPRA_INGRESO_DETALLE';


DROP TABLE IF EXISTS users;
CREATE TABLE users (
	id bigint NOT NULL,
	email varchar(50),
	contrasenha varchar(100),
	remember_tokem varchar(200),
	name varchar(150),
	id_perfil bigint,
	fecha_create timestamp(0),
	fecha_update timestamp(0),
	imagen_url varchar(255),
	migrado bigint,
	acceso_firma varchar(5) DEFAULT '0',
	temp_password char(1) DEFAULT 'N'
) ;
COMMENT ON COLUMN users.acceso_firma IS E'0: sin acceso 
1: todo
2: DTH
3: POR DOC
4: POR API
5: 3 y 4
6: 2 y 4';
COMMENT ON COLUMN users.migrado IS E'1=MIGRADO, 0= NO MIGRADO';


DROP TABLE IF EXISTS users_deleted;
CREATE TABLE users_deleted (
	id bigint NOT NULL,
	motivo varchar(250),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS users_details;
CREATE TABLE users_details (
	id bigint NOT NULL,
	id_entidad bigint,
	id_typeadmin bigint
) ;


DROP TABLE IF EXISTS users_oauth;
CREATE TABLE users_oauth (
	id bigint,
	password varchar(200),
	last_login timestamp(0),
	is_superuser char(5),
	username varchar(75),
	first_name varchar(255),
	last_name varchar(511),
	email varchar(52),
	is_staff char(5),
	is_active char(4),
	date_joined timestamp(0),
	from_ldap char(5),
	created_date timestamp(0),
	updated_date timestamp(0),
	last_access timestamp(0),
	doc_number varchar(200),
	doc_type varchar(41),
	is_foreign char(5)
) ;


DROP TABLE IF EXISTS users_reset_password;
CREATE TABLE users_reset_password (
	token varchar(100) NOT NULL,
	id bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS users_session;
CREATE TABLE users_session (
	token varchar(300) NOT NULL,
	id_user bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	date_create TIMESTAMP(6),
	last_update TIMESTAMP(6),
	status char(1),
	id_almacen bigint,
	token_oauth varchar(300),
	caduca varchar(1) DEFAULT 'S',
	user_fingerprint varchar(500)
) ;


DROP TABLE IF EXISTS users_session_academico;
CREATE TABLE users_session_academico (
	token varchar(100) NOT NULL,
	per_id varchar(49),
	date_create TIMESTAMP(6),
	last_update TIMESTAMP(6),
	caduca varchar(1),
	status char(1)
) ;


DROP TABLE IF EXISTS users_session_fraud_logs;
CREATE TABLE users_session_fraud_logs (
	id_session_fraud bigint NOT NULL,
	id_user bigint,
	token varchar(1000),
	ip_address varchar(45),
	ip_location text,
	user_agent varchar(1000),
	reason varchar(100),
	user_fingerprint varchar(500),
	created_at timestamp(0),
	updated_at timestamp(0)
) ;


DROP TABLE IF EXISTS users_session_log;
CREATE TABLE users_session_log (
	token varchar(100) NOT NULL,
	id_user bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	date_create TIMESTAMP(6),
	last_update TIMESTAMP(6),
	status char(1),
	id_almacen bigint,
	token_oauth varchar(100),
	app_name varchar(100),
	user_fingerprint varchar(500)
) ;


DROP TABLE IF EXISTS venta;
CREATE TABLE venta (
	id_venta bigint NOT NULL,
	id_parent bigint,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	id_persona bigint NOT NULL,
	id_cliente bigint,
	id_sucursal bigint,
	id_voucher bigint,
	id_comprobante varchar(3) NOT NULL,
	id_tiponota varchar(2),
	id_igv decimal(12,2) NOT NULL,
	id_moneda bigint NOT NULL,
	tipocambio decimal(10,3),
	id_leyenda varchar(4) NOT NULL,
	id_credito bigint,
	id_tipotransaccion bigint,
	id_tipoorigen bigint DEFAULT 1,
	id_comprobante_ref varchar(2),
	serie varchar(4),
	serie_ref varchar(4),
	numero varchar(8),
	numero_ref varchar(8),
	fecha timestamp(0),
	glosa varchar(400),
	agrupado varchar(1),
	gravada decimal(10,2),
	inafecta decimal(10,2),
	exonerada decimal(10,2),
	gratuita decimal(10,2),
	descuento decimal(10,2),
	descuento_global decimal(10,2),
	descuento_porcentaje decimal(10,2),
	importe_adescontar decimal(10,2),
	igv decimal(10,2),
	total decimal(10,2),
	gravada_me decimal(10,2),
	inafecta_me decimal(9,2),
	exonerada_me decimal(10,2),
	gratuita_me decimal(10,2),
	descuento_me decimal(10,2),
	descuento_global_me decimal(10,2),
	importe_adescontar_me decimal(10,2),
	igv_me decimal(10,2),
	total_me decimal(10,2),
	estado varchar(1),
	id_cliente_legal bigint,
	otros_cargos decimal(10,2),
	otros_cargos_me decimal(10,2),
	vresumen varchar(255),
	id_pedido bigint,
	es_autoentrega bigint,
	id_tipoventa bigint DEFAULT 5,
	id_saldo bigint,
	id_transferencia bigint,
	cuota bigint,
	fecha_ref timestamp(0),
	id_depto_ccosto varchar(100),
	id_alum_temp bigint,
	id_tipodocumento_cli bigint,
	nro_doc_cli varchar(25),
	razon_social_cli varchar(1000),
	direccion_cli varchar(500),
	fecha_vencimiento timestamp(0),
	valor_exportacion decimal(10,2),
	valor_exportacion_me decimal(10,2),
	es_exportacion varchar(1),
	id_entidad_cliente bigint,
	id_documento bigint,
	id_incoterm varchar(3),
	id_paciente bigint
) ;
COMMENT ON COLUMN venta.cuota IS E'NRO DE COBRANZA DEL CONTRATO';
COMMENT ON COLUMN venta.es_autoentrega IS E'1=Venta CON entrega de mercaderia; 0= Venta SIN entrega de mercaderia';


DROP TABLE IF EXISTS venta_anticipo;
CREATE TABLE venta_anticipo (
	id_tipoorigen bigint,
	id_origen bigint,
	id_destino bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS venta_asiento;
CREATE TABLE venta_asiento (
	id_vasiento bigint NOT NULL,
	id_venta bigint NOT NULL,
	id_cuentaaasi varchar(20) NOT NULL,
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe numeric,
	importe_me numeric,
	descripcion varchar(400),
	editable varchar(1),
	dc varchar(1),
	agrupa varchar(1) NOT NULL,
	id_vdetalle bigint
) ;


DROP TABLE IF EXISTS venta_bk;
CREATE TABLE venta_bk (
	id_venta bigint,
	id_transferencia bigint,
	data varchar(255),
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS venta_cliente_to_lamb;
CREATE TABLE venta_cliente_to_lamb (
	id_venta bigint NOT NULL,
	num_documento_cliente varchar(50),
	num_documento_cliente_legal varchar(50)
) ;


DROP TABLE IF EXISTS venta_config;
CREATE TABLE venta_config (
	id_config varchar(20) NOT NULL,
	valor varchar(100),
	valor1 varchar(100),
	comentario varchar(200)
) ;


DROP TABLE IF EXISTS venta_detalle;
CREATE TABLE venta_detalle (
	id_vdetalle bigint NOT NULL,
	id_venta bigint NOT NULL,
	id_tipoigv varchar(2) NOT NULL,
	id_almacen bigint,
	id_articulo bigint,
	id_dinamica bigint,
	id_tipoorigen bigint NOT NULL DEFAULT 1,
	id_vdetalle_ref bigint,
	detalle varchar(400),
	dc varchar(1),
	cantidad decimal(10,2),
	precio decimal(10,2),
	precio_base decimal(10,2),
	precio_alm decimal(10,2),
	base decimal(10,2),
	igv decimal(10,2),
	descuento decimal(10,2),
	importe decimal(10,2),
	precio_me decimal(10,2),
	precio_base_me decimal(10,2),
	precio_alm_me decimal(10,2),
	base_me decimal(10,2),
	igv_me decimal(10,2),
	descuento_me decimal(10,2),
	importe_me decimal(10,2),
	importe_adescontar decimal(10,2),
	descuento_porcentaje decimal(10,2),
	item bigint,
	otros_cargos decimal(10,2),
	otros_cargos_me decimal(10,2),
	id_vdetalle_ori bigint,
	id_alumno_contrato bigint,
	id_alumno_contrato_det bigint,
	anticipo char(1),
	id_tipoanticipo bigint,
	precio_inicial decimal(20,5),
	precio_inicial_me decimal(20,5),
	precio_alm_total decimal(10,2),
	precio_alm_total_me decimal(10,2),
	precio_base_full decimal(14,5),
	precio_base_full_me decimal(14,5),
	descuento_porcentaje_full decimal(14,5),
	precio_base_total decimal(10,2),
	precio_base_total_me decimal(10,2),
	descuento_valor decimal(10,2),
	descuento_valor_me decimal(10,2),
	id_depto_asi varchar(10),
	precio_inicial_bk bigint
) ;
COMMENT ON COLUMN venta_detalle.anticipo IS E'IDENTIFICA AL ANTICIPO';
COMMENT ON COLUMN venta_detalle.id_tipoanticipo IS E'TIPO DE ANTICIPO';


DROP TABLE IF EXISTS venta_detalle_to_lamb;
CREATE TABLE venta_detalle_to_lamb (
	id_vdetalle bigint NOT NULL,
	id_venta bigint NOT NULL,
	id_tipoigv varchar(2) NOT NULL,
	id_tipoorigen bigint NOT NULL DEFAULT 1,
	detalle varchar(400),
	cantidad decimal(10,2),
	precio decimal(10,2),
	precio_base decimal(10,2),
	base decimal(10,2),
	igv decimal(10,3),
	descuento decimal(10,2),
	importe decimal(10,2)
) ;


DROP TABLE IF EXISTS venta_electronica;
CREATE TABLE venta_electronica (
	id bigint NOT NULL,
	emisorid bigint NOT NULL,
	origenid varchar(40) NOT NULL,
	fecha timestamp(0) NOT NULL,
	tipo varchar(2) NOT NULL,
	nrocomprobante varchar(13) NOT NULL,
	comprobante_old varchar(4000),
	comprobante text,
	nombrearchivo varchar(50) NOT NULL,
	hash varchar(50),
	codbarra bytea,
	estado varchar(2),
	procesado bigint DEFAULT 0,
	enviado bigint DEFAULT 0,
	observaciones varchar(4000),
	cadenacb varchar(1000),
	descargado_lamb varchar(2),
	fecha_descarga_lamb timestamp(0),
	url_lamb varchar(500)
) ;


DROP TABLE IF EXISTS venta_electronica_aces;
CREATE TABLE venta_electronica_aces (
	id bigint NOT NULL,
	origenid bigint,
	emisorid bigint,
	fecha timestamp(0),
	tipo varchar(2),
	nrocomprobante varchar(20),
	comprobante text,
	nombrearchivo varchar(50),
	hash varchar(50),
	estado varchar(2),
	procesado bigint,
	enviado bigint,
	observaciones varchar(4000),
	cadenacb varchar(1000),
	codbarra bytea,
	descargado_lamb varchar(2),
	fecha_descarga_lamb timestamp(0),
	url_lamb varchar(500)
) ;


DROP TABLE IF EXISTS venta_electronica_bizlinks;
CREATE TABLE venta_electronica_bizlinks (
	id bigint NOT NULL,
	origenid bigint,
	emisorid bigint,
	fecha timestamp(0),
	tipo varchar(2),
	nrocomprobante varchar(20),
	comprobante text,
	nombrearchivo varchar(50),
	hash varchar(200),
	estado varchar(2),
	procesado bigint,
	enviado bigint,
	observaciones varchar(4000),
	cadenacb varchar(1000),
	codbarra bytea,
	error bigint,
	estadoregistro varchar(50),
	estadoproceso varchar(50),
	firma varchar(2000),
	errorcodigo varchar(50),
	errormensaje varchar(500),
	descargado_lamb varchar(2),
	fecha_descarga_lamb timestamp(0),
	url_lamb varchar(500),
	url_cdr varchar(1000),
	url_pdf varchar(500),
	estado_registro_envio bigint DEFAULT 0,
	error_registro_envio varchar(200),
	estado_descarga_respuesta bigint DEFAULT 0,
	msj_descarga_respuesta varchar(200),
	id_user_registro_envio bigint,
	fecha_registro_envio timestamp(0),
	id_user_descarga_respuesta bigint,
	fecha_descarga_respuesta timestamp(0)
) ;
COMMENT ON COLUMN venta_electronica_bizlinks.error_registro_envio IS E'ERROR DEL ENVÍO A LA BASE DE DATOS';
COMMENT ON COLUMN venta_electronica_bizlinks.estado_registro_envio IS E'ESTADO DEL ERROR DEL ENVÍO DE LAMB A LA BASE DE DATOS QUE ENVÍA A BIZLINK 
1 ES TODO OK
0 NO ENVIADO';


DROP TABLE IF EXISTS venta_electronica_desis;
CREATE TABLE venta_electronica_desis (
	id bigint NOT NULL,
	origenid bigint NOT NULL,
	emisorid bigint,
	fecha timestamp(0) NOT NULL,
	folio varchar(20) NOT NULL,
	tipodte varchar(2) NOT NULL,
	operacion varchar(100),
	comprobante text,
	url_original varchar(500),
	url_cedible varchar(500),
	estado varchar(2),
	procesado bigint,
	enviado bigint,
	observaciones varchar(4000),
	codbarra bytea
) ;
COMMENT ON COLUMN venta_electronica_desis.comprobante IS E'Documento electrónico en formato XML o TXT, listo para el envío a facturacion.cl';
COMMENT ON COLUMN venta_electronica_desis.emisorid IS E'Es el id de la tabla ELISEO.VENTA_EMISOR_DESIS';
COMMENT ON COLUMN venta_electronica_desis.enviado IS E'1=Enviado; 0= No enviado';
COMMENT ON COLUMN venta_electronica_desis.estado IS E'0=Invalido; 1=Valido; 2=Rechazado';
COMMENT ON COLUMN venta_electronica_desis.folio IS E'Número del documento electrónico';
COMMENT ON COLUMN venta_electronica_desis.operacion IS E'Si es una venta o compra, este campo proviene de Facturación.cl';
COMMENT ON COLUMN venta_electronica_desis.origenid IS E'Es un campo para definir de donde proviene el documento, el id de venta o el id de compra';
COMMENT ON COLUMN venta_electronica_desis.procesado IS E'1=Procesado; 0=No procesado';
COMMENT ON COLUMN venta_electronica_desis.tipodte IS E'Es el tipo de documento electrónico.';
COMMENT ON COLUMN venta_electronica_desis.url_original IS E'Url del documento electrónico emitido y que el cliente puede descargar en pdf';


DROP TABLE IF EXISTS venta_electronica_nube;
CREATE TABLE venta_electronica_nube (
	id bigint NOT NULL,
	origenid bigint,
	emisorid bigint,
	fecha timestamp(0),
	tipo varchar(2),
	nrocomprobante varchar(20),
	comprobante text,
	nombrearchivo varchar(50),
	hash varchar(50),
	estado varchar(2),
	procesado bigint,
	enviado bigint,
	observaciones varchar(4000),
	cadenacb varchar(1000),
	codbarra bytea,
	descargado_lamb varchar(2),
	fecha_descarga_lamb timestamp(0),
	url_lamb varchar(500)
) ;


DROP TABLE IF EXISTS venta_electronica_nube_temp;
CREATE TABLE venta_electronica_nube_temp (
	id bigint NOT NULL,
	origenid bigint,
	comprobante_char text,
	comprobante_corregido text
) ;


DROP TABLE IF EXISTS venta_elect_nube_lamb_7edu;
CREATE TABLE venta_elect_nube_lamb_7edu (
	id_venta bigint,
	id_lamb bigint,
	id_venta_lamb bigint,
	tipoemisorid varchar(20)
) ;


DROP TABLE IF EXISTS venta_emisor;
CREATE TABLE venta_emisor (
	id bigint NOT NULL,
	ruc varchar(11) NOT NULL,
	razonsocial varchar(150) NOT NULL,
	nomcomercial varchar(150) NOT NULL,
	ubigeo varchar(8) NOT NULL,
	direccion varchar(200) NOT NULL,
	urbanizacion varchar(200) NOT NULL,
	provincia varchar(100) NOT NULL,
	departamento varchar(100) NOT NULL,
	distrito varchar(100) NOT NULL,
	codigoestablecimiento varchar(6) DEFAULT '0000',
	emailauth varchar(5) NOT NULL,
	emailport varchar(4) NOT NULL,
	emailstarttlsenable varchar(5) NOT NULL,
	emailhost varchar(100) NOT NULL,
	emailusername varchar(50) NOT NULL,
	emailpassword varchar(50) NOT NULL,
	emailfrom varchar(100) NOT NULL,
	emailto varchar(100) NOT NULL,
	keystorefile varchar(250) NOT NULL,
	keystorepassword varchar(50) NOT NULL,
	keystorekeypassword varchar(50) NOT NULL,
	keystorekeyalias varchar(150) NOT NULL,
	sigid varchar(50) NOT NULL,
	sigpartyid varchar(50) NOT NULL,
	sigpartyidentificationid varchar(50) NOT NULL,
	sigpartyidentificationname varchar(200) NOT NULL,
	sigpartyidentificationuri varchar(50) NOT NULL,
	uploadonline varchar(2) NOT NULL,
	uploadprotocol varchar(6) NOT NULL,
	uploadhost varchar(50) NOT NULL,
	uploaduser varchar(50) NOT NULL,
	uploadpassword varchar(50) NOT NULL,
	uploaddirectory varchar(150) NOT NULL,
	uploadport bigint NOT NULL,
	ambientetest varchar(2) NOT NULL,
	fileextension varchar(4) NOT NULL,
	urlservicerest varchar(200) NOT NULL
) ;


DROP TABLE IF EXISTS venta_emisor_aces;
CREATE TABLE venta_emisor_aces (
	id bigint NOT NULL,
	ruc varchar(11) NOT NULL,
	razonsocial varchar(150) NOT NULL,
	nomcomercial varchar(150) NOT NULL,
	ubigeo varchar(8) NOT NULL,
	direccion varchar(200) NOT NULL,
	urbanizacion varchar(200) NOT NULL,
	provincia varchar(100) NOT NULL,
	departamento varchar(100) NOT NULL,
	distrito varchar(100) NOT NULL,
	codigoestablecimiento varchar(6) DEFAULT '0000',
	emailauth varchar(5) NOT NULL,
	emailport varchar(4) NOT NULL,
	emailstarttlsenable varchar(5) NOT NULL,
	emailhost varchar(100) NOT NULL,
	emailusername varchar(50) NOT NULL,
	emailpassword varchar(50) NOT NULL,
	emailfrom varchar(100) NOT NULL,
	emailto varchar(100) NOT NULL,
	keystorefile varchar(250) NOT NULL,
	keystorepassword varchar(50) NOT NULL,
	keystorekeypassword varchar(50) NOT NULL,
	keystorekeyalias varchar(150) NOT NULL,
	sigid varchar(50) NOT NULL,
	sigpartyid varchar(50) NOT NULL,
	sigpartyidentificationid varchar(50) NOT NULL,
	sigpartyidentificationname varchar(200) NOT NULL,
	sigpartyidentificationuri varchar(50) NOT NULL,
	uploadonline varchar(2) NOT NULL,
	uploadprotocol varchar(6) NOT NULL,
	uploadhost varchar(50) NOT NULL,
	uploaduser varchar(50) NOT NULL,
	uploadpassword varchar(50) NOT NULL,
	uploaddirectory varchar(150) NOT NULL,
	uploadport bigint NOT NULL,
	ambientetest varchar(2) NOT NULL,
	fileextension varchar(4) NOT NULL,
	urlservicerest varchar(200) NOT NULL
) ;


DROP TABLE IF EXISTS venta_emisor_bizlinks;
CREATE TABLE venta_emisor_bizlinks (
	id bigint,
	ruc varchar(11) NOT NULL,
	razonsocial varchar(150) NOT NULL,
	nomcomercial varchar(150) NOT NULL,
	ubigeo varchar(8) NOT NULL,
	direccion varchar(200) NOT NULL,
	urbanizacion varchar(200) NOT NULL,
	provincia varchar(100) NOT NULL,
	departamento varchar(100) NOT NULL,
	distrito varchar(100) NOT NULL,
	codigoestablecimiento varchar(6) DEFAULT '0000',
	email varchar(200),
	pais_codigo varchar(100)
) ;


DROP TABLE IF EXISTS venta_emisor_desis;
CREATE TABLE venta_emisor_desis (
	id bigint NOT NULL,
	ruc varchar(11) NOT NULL,
	razonsocial varchar(150),
	nomcomercial varchar(150),
	username varchar(50) NOT NULL,
	password varchar(50) NOT NULL,
	ambiente varchar(2) NOT NULL,
	urlservicerest varchar(200) NOT NULL,
	port varchar(4) NOT NULL,
	formato varchar(1),
	incluye_link varchar(1),
	estado varchar(1) NOT NULL
) ;
COMMENT ON COLUMN venta_emisor_desis.ambiente IS E'D=Desarrollo;P=Producción';
COMMENT ON COLUMN venta_emisor_desis.estado IS E'1=Activo; 0=Desactivado';
COMMENT ON COLUMN venta_emisor_desis.formato IS E'1= TXT;2=XML';
COMMENT ON COLUMN venta_emisor_desis.incluye_link IS E'1= retorna el link del documento';


DROP TABLE IF EXISTS venta_emisor_nube;
CREATE TABLE venta_emisor_nube (
	id bigint NOT NULL,
	ruc varchar(11) NOT NULL,
	razonsocial varchar(150) NOT NULL,
	nomcomercial varchar(150) NOT NULL,
	ubigeo varchar(8) NOT NULL,
	direccion varchar(200) NOT NULL,
	urbanizacion varchar(200) NOT NULL,
	provincia varchar(100) NOT NULL,
	departamento varchar(100) NOT NULL,
	distrito varchar(100) NOT NULL,
	codigoestablecimiento varchar(6) DEFAULT '0000',
	emailauth varchar(5) NOT NULL,
	emailport varchar(4) NOT NULL,
	emailstarttlsenable varchar(5) NOT NULL,
	emailhost varchar(100) NOT NULL,
	emailusername varchar(50) NOT NULL,
	emailpassword varchar(50) NOT NULL,
	emailfrom varchar(100) NOT NULL,
	emailto varchar(100) NOT NULL,
	keystorefile varchar(250) NOT NULL,
	keystorepassword varchar(50) NOT NULL,
	keystorekeypassword varchar(50) NOT NULL,
	keystorekeyalias varchar(150) NOT NULL,
	sigid varchar(50) NOT NULL,
	sigpartyid varchar(50) NOT NULL,
	sigpartyidentificationid varchar(50) NOT NULL,
	sigpartyidentificationname varchar(200) NOT NULL,
	sigpartyidentificationuri varchar(50) NOT NULL,
	uploadonline varchar(2) NOT NULL,
	uploadprotocol varchar(6) NOT NULL,
	uploadhost varchar(50) NOT NULL,
	uploaduser varchar(50) NOT NULL,
	uploadpassword varchar(50) NOT NULL,
	uploaddirectory varchar(150) NOT NULL,
	uploadport bigint NOT NULL,
	ambientetest varchar(2) NOT NULL,
	fileextension varchar(4) NOT NULL,
	urlservicerest varchar(200) NOT NULL
) ;


DROP TABLE IF EXISTS venta_file;
CREATE TABLE venta_file (
	id_vfile bigint NOT NULL,
	id_venta bigint,
	id_transferencia bigint,
	id_pventa bigint,
	nombre varchar(255),
	formato varchar(100),
	url varchar(255),
	fecha timestamp(0),
	tipo varchar(1),
	tamanho decimal(10,2),
	estado varchar(1),
	url_old varchar(255)
) ;
COMMENT ON COLUMN venta_file.tipo IS E'T = Transferencias
N = Notas de credito debito';


DROP TABLE IF EXISTS venta_forma_pago;
CREATE TABLE venta_forma_pago (
	id_forma_pago bigint,
	id_venta bigint,
	nro_cuota varchar(10),
	importe decimal(10,2),
	importe_me decimal(10,2),
	fecha_pago timestamp(0),
	detalle varchar(100)
) ;


DROP TABLE IF EXISTS venta_guia;
CREATE TABLE venta_guia (
	id_venta_guia bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	fecha timestamp(0) NOT NULL,
	id_comprobante varchar(3) NOT NULL,
	serie varchar(4) NOT NULL,
	numero varchar(8) NOT NULL,
	id_venta_guia_baja bigint,
	id_comprobante_ref varchar(3),
	serie_ref varchar(4),
	numero_ref varchar(10),
	id_persona bigint NOT NULL,
	id_tipodocumento bigint NOT NULL,
	num_documento varchar(30),
	id_destino bigint NOT NULL,
	id_tipodocumentodes bigint NOT NULL,
	num_documentodes varchar(30),
	id_proveedor bigint,
	id_tipodocumentopro bigint,
	num_documentopro varchar(30),
	id_comprador bigint,
	id_tipodocumentocom bigint,
	num_documentocom varchar(30),
	id_motivotraslado bigint NOT NULL,
	desc_motivo_otros varchar(500),
	transbordo_programado bigint,
	id_unidadmedida bigint,
	bruto_total decimal(10,2),
	nro_bultos decimal(10,2),
	id_tipo_mod_traslado varchar(3),
	fec_inicio_traslado timestamp(0),
	fec_entrega timestamp(0),
	id_transportista bigint,
	id_tipodocumentotra bigint,
	num_documentotra varchar(30),
	registro_mtc varchar(30),
	id_vehiculo bigint,
	placa varchar(20),
	id_ubigeo_par bigint,
	direccion_par varchar(1000),
	id_ubigeo_lleg bigint,
	direccion_lleg varchar(1000),
	num_contenedor varchar(50),
	puerto_aeropuerto varchar(10),
	email_cliente varchar(100),
	info_adicional varchar(1000),
	id_conductor bigint,
	id_tipodocumentocon bigint,
	num_documentocon varchar(30),
	num_licencia varchar(30),
	estado varchar(2),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	id_almacen bigint,
	id_tipoorigen bigint DEFAULT 29,
	id_documento bigint
) ;
COMMENT ON COLUMN venta_guia.desc_motivo_otros IS E'Cuando motivo es otros ';
COMMENT ON COLUMN venta_guia.email_cliente IS E'para envia la guia';
COMMENT ON COLUMN venta_guia.estado IS E'1: ACTIVO, 0: ANULADO';
COMMENT ON COLUMN venta_guia.id_almacen IS E'Almacen de donde se dara salida a los productos';
COMMENT ON COLUMN venta_guia.id_comprador IS E'PERSONA ';
COMMENT ON COLUMN venta_guia.id_comprobante_ref IS E'documento de referencia';
COMMENT ON COLUMN venta_guia.id_conductor IS E'PERSONA privado';
COMMENT ON COLUMN venta_guia.id_destino IS E'PERSONA ';
COMMENT ON COLUMN venta_guia.id_persona IS E'PERSONA REMITENTE';
COMMENT ON COLUMN venta_guia.id_proveedor IS E'PERSONA ';
COMMENT ON COLUMN venta_guia.id_tipoorigen IS E'Venta Guia';
COMMENT ON COLUMN venta_guia.id_transportista IS E'PERSONA ';
COMMENT ON COLUMN venta_guia.id_ubigeo_lleg IS E'ubigeo de llegada ';
COMMENT ON COLUMN venta_guia.id_ubigeo_par IS E'ubigeo de partida ';
COMMENT ON COLUMN venta_guia.id_venta_guia_baja IS E'cuando es para dar de baja';
COMMENT ON COLUMN venta_guia.num_contenedor IS E'SI MOTIVO IMPORTACION';
COMMENT ON COLUMN venta_guia.numero_ref IS E'documento de referencia';
COMMENT ON COLUMN venta_guia.serie_ref IS E'documento de referencia';
COMMENT ON COLUMN venta_guia.transbordo_programado IS E'0, false, 1 true';


DROP TABLE IF EXISTS venta_guia_det;
CREATE TABLE venta_guia_det (
	item bigint NOT NULL,
	id_venta_guia bigint NOT NULL,
	id_articulo bigint,
	cantidad decimal(10,2) NOT NULL,
	id_unidadmedida bigint,
	descripcion varchar(1000),
	codigo_item varchar(20),
	codigo_sunat varchar(20),
	codum_sunat varchar(10),
	adicional varchar(300),
	id_user_reg bigint,
	fecha_reg timestamp(0),
	id_user_mod bigint,
	fecha_mod timestamp(0),
	id_almacen bigint
) ;


DROP TABLE IF EXISTS venta_guia_ref;
CREATE TABLE venta_guia_ref (
	id_venta_guia_ref bigint NOT NULL,
	id_venta_guia bigint NOT NULL,
	id_comprobante varchar(3),
	serie varchar(4),
	numero varchar(8)
) ;


DROP TABLE IF EXISTS venta_movimiento;
CREATE TABLE venta_movimiento (
	id_vmovimiento bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(30),
	id_anho bigint,
	id_mes bigint,
	id_almacen bigint,
	id_venta bigint,
	id_tipotransaccion bigint,
	id_persona bigint,
	id_motivotraslado bigint,
	id_transportista bigint,
	fecha_emision timestamp(0),
	fecha_inicio_traslado timestamp(0),
	direccion_partida varchar(150),
	direccion_llegada varchar(150),
	vehiculo_marca varchar(100),
	vehiculo_placa varchar(100),
	licencia_transportista varchar(100),
	estado varchar(1),
	id_voucher bigint,
	glosa varchar(150),
	serie varchar(4),
	numero varchar(8),
	id_tipooperacion varchar(2),
	id_documento bigint,
	id_tipoorigen bigint DEFAULT 17,
	tipo varchar(1)
) ;


DROP TABLE IF EXISTS venta_movimiento_detalle;
CREATE TABLE venta_movimiento_detalle (
	id_vmdetalle bigint NOT NULL,
	id_vmovimiento bigint,
	id_articulo bigint,
	id_dinamica bigint,
	cantidad decimal(10,2),
	detalle varchar(150),
	id_vdetalle bigint,
	precio decimal(10,2),
	importe decimal(10,2),
	precio_alm decimal(10,2),
	id_tipoorigen bigint NOT NULL DEFAULT 17,
	precio_alm_total decimal(10,2),
	id_tipoigv varchar(2)
) ;


DROP TABLE IF EXISTS venta_orden;
CREATE TABLE venta_orden (
	id_orden bigint NOT NULL,
	id_venta bigint,
	id_persona bigint,
	id_zona bigint,
	fecha_entrega timestamp(0),
	direccion varchar(200),
	celular varchar(20),
	email varchar(100),
	es_delivery varchar(1),
	estado varchar(1)
) ;
COMMENT ON COLUMN venta_orden.estado IS E'0:pendiente, 1:pagado';


DROP TABLE IF EXISTS venta_orden_detalle;
CREATE TABLE venta_orden_detalle (
	id_orden_detalle bigint NOT NULL,
	id_orden bigint,
	id_vdetalle bigint,
	id_articulo bigint,
	cantidad bigint,
	entregado varchar(1)
) ;


DROP TABLE IF EXISTS venta_persona_to_lamb;
CREATE TABLE venta_persona_to_lamb (
	id_persona bigint,
	nombre varchar(200),
	paterno varchar(100),
	materno varchar(100),
	id_tipopais bigint,
	id_tiporeligion bigint,
	id_tipodocumento bigint,
	num_documento varchar(20),
	sexo bigint,
	fec_nacimiento TIMESTAMP(6),
	celular varchar(12),
	correo varchar(500),
	id_ruc varchar(20),
	id_tipoestado bigint,
	id_tipocondicion bigint,
	id_tipocontribuyente bigint,
	id_tipoactividadeconomica bigint
) ;


DROP TABLE IF EXISTS venta_politica;
CREATE TABLE venta_politica (
	id_politica bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_tipopolitica bigint NOT NULL,
	nombre varchar(50),
	fecha timestamp(0),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS venta_politica_articulo;
CREATE TABLE venta_politica_articulo (
	id_politica bigint NOT NULL,
	id_almacen bigint NOT NULL,
	id_articulo bigint NOT NULL,
	id_anho bigint NOT NULL,
	p_venta decimal(10,3),
	costo decimal(10,2),
	descuento decimal(10,3),
	precio decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS venta_politica_persona;
CREATE TABLE venta_politica_persona (
	id_politica bigint NOT NULL,
	id_persona bigint NOT NULL,
	fecha timestamp(0),
	credito varchar(1),
	activo varchar(1)
) ;


DROP TABLE IF EXISTS venta_precio;
CREATE TABLE venta_precio (
	id_almacen bigint NOT NULL,
	id_articulo bigint NOT NULL,
	id_anho bigint NOT NULL,
	p_venta decimal(10,3),
	costo decimal(10,2),
	descuento decimal(10,3),
	precio decimal(10,2),
	estado varchar(1)
) ;


DROP TABLE IF EXISTS venta_saldo;
CREATE TABLE venta_saldo (
	id_saldo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_venta bigint,
	id_moneda bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_cliente bigint NOT NULL,
	id_comprobante varchar(2) NOT NULL,
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	total decimal(10,2),
	total_me decimal(10,2),
	ip varchar(36),
	id_mes bigint,
	id_articulo bigint,
	id_tipoventa bigint,
	detalle varchar(200),
	id_voucher bigint,
	id_depto_ccosto char(15),
	id_tipoorigen bigint DEFAULT 30
) ;


DROP TABLE IF EXISTS venta_saldo_bk_7322;
CREATE TABLE venta_saldo_bk_7322 (
	id_saldo bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_venta bigint,
	id_moneda bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_cliente bigint NOT NULL,
	id_comprobante varchar(2) NOT NULL,
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	total decimal(10,2),
	total_me decimal(10,2),
	ip varchar(36),
	id_mes bigint,
	id_articulo bigint,
	id_tipoventa bigint,
	detalle varchar(200),
	id_voucher bigint,
	id_depto_ccosto char(15)
) ;


DROP TABLE IF EXISTS venta_saldo_bk_col_tot_0;
CREATE TABLE venta_saldo_bk_col_tot_0 (
	id_saldo bigint,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_venta bigint,
	id_moneda bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_cliente bigint NOT NULL,
	id_comprobante varchar(2) NOT NULL,
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	total decimal(10,2),
	total_me decimal(10,2),
	ip varchar(36),
	id_mes bigint,
	id_articulo bigint,
	id_tipoventa bigint,
	detalle varchar(200)
) ;


DROP TABLE IF EXISTS venta_test_saldos;
CREATE TABLE venta_test_saldos (
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_cliente bigint,
	importe decimal(10,2),
	msn varchar(200),
	opc bigint,
	fecha timestamp(0)
) ;


DROP TABLE IF EXISTS venta_to_lamb;
CREATE TABLE venta_to_lamb (
	id_venta bigint NOT NULL,
	id_entidad bigint,
	id_depto varchar(10),
	id_anho bigint,
	id_mes bigint,
	id_persona bigint NOT NULL,
	id_cliente bigint,
	id_cliente_legal bigint,
	id_voucher bigint,
	id_comprobante varchar(3) NOT NULL,
	id_tiponota varchar(2),
	id_igv bigint NOT NULL,
	id_moneda bigint NOT NULL,
	tipocambio decimal(10,2),
	id_leyenda varchar(4) NOT NULL,
	id_comprobante_ref varchar(3),
	serie varchar(7),
	serie_ref varchar(4),
	numero varchar(10),
	numero_ref varchar(10),
	fecha timestamp(0),
	glosa varchar(400),
	gravada decimal(10,2),
	inafecta decimal(10,2),
	exonerada decimal(10,2),
	gratuita decimal(10,2),
	descuento decimal(10,2),
	descuento_global decimal(10,2),
	descuento_porcentaje decimal(10,2),
	importe_adescontar decimal(10,2),
	igv decimal(10,3),
	total decimal(10,2),
	estado varchar(1),
	otros_cargos decimal(10,2),
	id_tipoventa bigint DEFAULT 5,
	fecha_ref timestamp(0),
	id_tipodocumento_cli bigint,
	nro_doc_cli varchar(25),
	razon_social_cli varchar(1000),
	direccion_cli varchar(500),
	id_lamb bigint,
	id_7edu bigint,
	id_venta_lamb bigint,
	num_documento_cliente varchar(50),
	num_documento_cliente_legal varchar(50),
	id_tipoasiento varchar(5),
	id_tipovoucher bigint,
	existe_venta bigint DEFAULT 0,
	no_existe_cliente bigint DEFAULT 0,
	no_existe_cliente_legal bigint DEFAULT 0,
	tipoemisorid varchar(20)
) ;


DROP TABLE IF EXISTS venta_transferencia;
CREATE TABLE venta_transferencia (
	id_transferencia bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(10) NOT NULL,
	id_anho bigint NOT NULL,
	id_mes bigint NOT NULL,
	id_persona bigint NOT NULL,
	id_empleado bigint,
	id_cliente bigint NOT NULL,
	id_tipotransaccion bigint,
	id_dinamica bigint,
	id_voucher bigint,
	id_moneda bigint NOT NULL,
	id_tipoorigen bigint DEFAULT 2,
	tipocambio decimal(10,3),
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	glosa varchar(200),
	importex decimal(10,1),
	ip varchar(33),
	estado varchar(1),
	es_anticipo varchar(1),
	importe_me decimal(10,2),
	id_deposito bigint,
	id_tipoventa bigint,
	importe decimal(10,2),
	importe2 decimal(10,2),
	es_entreclientes varchar(1) DEFAULT 'N',
	cuota bigint,
	id_depto_ccosto char(15),
	id_venta_temp bigint
) ;
COMMENT ON COLUMN venta_transferencia.cuota IS E'NRO DE CUOTA PROVISIONADA';
COMMENT ON COLUMN venta_transferencia.es_anticipo IS E'S: ES ANTICIPO, N: TRANSFERENCIA O AJUSTE';


DROP TABLE IF EXISTS venta_transferencia_asiento;
CREATE TABLE venta_transferencia_asiento (
	id_tasiento bigint NOT NULL,
	id_transferencia bigint NOT NULL,
	id_asiento bigint,
	id_cuentaaasi varchar(20),
	id_restriccion varchar(50),
	id_ctacte varchar(50),
	id_fondo bigint,
	id_depto varchar(10),
	importe decimal(10,2),
	importe_me decimal(20,2),
	descripcion varchar(255),
	editable varchar(1),
	dc varchar(1),
	agrupa varchar(1),
	porcentaje decimal(10,2)
) ;


DROP TABLE IF EXISTS venta_transferencia_detalle;
CREATE TABLE venta_transferencia_detalle (
	id_tdetalle bigint NOT NULL,
	id_transferencia bigint NOT NULL,
	id_venta bigint,
	id_articulo bigint,
	id_tipoorigen decimal(22,2) NOT NULL DEFAULT 2,
	dc varchar(1),
	importe decimal(10,2),
	detalle varchar(200),
	importe_me decimal(22,2),
	id_alumno_contrato bigint,
	id_alumno_contrato_det bigint,
	id_saldo bigint,
	id_transferencia_p bigint,
	id_pventa bigint,
	id_venta_destino bigint,
	id_articulo_destino bigint,
	id_cliente_destino bigint,
	id_vdetalle bigint
) ;


DROP TABLE IF EXISTS venta_zona;
CREATE TABLE venta_zona (
	id_zona bigint NOT NULL,
	id_entidad bigint NOT NULL,
	id_depto varchar(20) NOT NULL,
	nombre varchar(200),
	costo bigint
) ;


DROP TABLE IF EXISTS vnt_test;
CREATE TABLE vnt_test (
	documento varchar(15),
	id_comprobante varchar(2),
	serie varchar(4),
	numero varchar(8),
	fecha timestamp(0),
	importe decimal(10,2),
	importe_me decimal(10,2)
) ;
