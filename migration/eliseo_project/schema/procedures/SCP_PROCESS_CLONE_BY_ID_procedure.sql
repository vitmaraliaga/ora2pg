-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.scp_process_clone_by_id ( v_ID_PROCESS_FROM bigint, v_ID_ENTIDAD_TO bigint, v_ID_DEPTO_TO text, v_ERROR OUT bigint, v_MSGERROR OUT text ) AS $body$
DECLARE

    L_ERROR bigint :=0;
    L_MSGERROR varchar(100) :='';
    l_contar bigint := 0;

   	L_ID_PROCESO bigint;
   	L_ID_PASO bigint;

    L_ID_MODULO bigint;
    L_ID_TIPOTRANSACCION bigint;
    L_ID_PASO_INICIO bigint;
    L_ID_PASO_FIN bigint;
    L_NOMBRE varchar(200);
    L_CODIGO bigint;
    L_ESTADO varchar(2);


	v_c_p_cursor REFCURSOR;
	d_p_record      PROCESS_COMPONENTE_PASO%ROWTYPE;
	v_c_p_stmt_str      varchar(200);

 	
	v_p_r_cursor REFCURSOR;
	d_r_record      PROCESS_PASO_ROL%ROWTYPE;
	v_p_r_stmt_str      varchar(200);

   cpasos CURSOR FOR
   SELECT ID_PASO, ID_TIPOPASO, NOMBRE, ORDEN, ESTADO, ROUTE, ICONO
   FROM PROCESS_PASO WHERE ID_PROCESO = v_ID_PROCESS_FROM;

BEGIN

	IF L_ERROR = 0 THEN

		SELECT 
		ID_MODULO,ID_TIPOTRANSACCION 
		, NOMBRE, CODIGO , ESTADO  
		INTO STRICT L_ID_MODULO, L_ID_TIPOTRANSACCION
		, L_NOMBRE, L_CODIGO, L_ESTADO
		FROM PROCESS WHERE ID_PROCESO = v_ID_PROCESS_FROM;


		INSERT INTO PROCESS(ID_ENTIDAD , ID_DEPTO , ID_MODULO,
		ID_TIPOTRANSACCION
		, NOMBRE , CODIGO , ESTADO )
		VALUES (v_ID_ENTIDAD_TO, v_ID_DEPTO_TO,L_ID_MODULO,  
		L_ID_TIPOTRANSACCION
		, L_NOMBRE, L_CODIGO, L_ESTADO) RETURNING ID_PROCESO INTO L_ID_PROCESO;


		FOR cp IN cpasos
		LOOP

			RAISE NOTICE 'PASO NOMBRE: %', cp.NOMBRE;

            INSERT INTO PROCESS_PASO(
    		ID_PROCESO , ID_TIPOPASO , NOMBRE , ORDEN,
    		ESTADO, ROUTE, ICONO) VALUES (
    		L_ID_PROCESO, cp.ID_TIPOPASO, cp.NOMBRE, cp.ORDEN,
    		cp.ESTADO, cp.ROUTE, cp.ICONO) RETURNING ID_PASO INTO L_ID_PASO;


    		v_c_p_stmt_str := 'SELECT * FROM PROCESS_COMPONENTE_PASO WHERE ID_PASO = :1';
            OPEN v_c_p_cursor FOR EXECUTE EXECUTE EXECUTE v_c_p_stmt_str USING cp.ID_PASO;
                LOOP
                FETCH v_c_p_cursor INTO d_p_record;
                EXIT WHEN NOT FOUND;/* apply on v_c_p_cursor */
               		RAISE NOTICE 'ID_COMPONENTE: %', d_p_record.ID_COMPONENTE;
               		INSERT INTO PROCESS_COMPONENTE_PASO(ID_PASO , ID_COMPONENTE )
               		VALUES (L_ID_PASO, d_p_record.ID_COMPONENTE);
                END LOOP;
            CLOSE v_c_p_cursor;


    		v_p_r_stmt_str := 'SELECT * FROM PROCESS_PASO_ROL WHERE ID_PASO = :1';
            OPEN v_p_r_cursor FOR EXECUTE EXECUTE v_p_r_stmt_str USING cp.ID_PASO;
                LOOP
                FETCH v_p_r_cursor INTO d_r_record;
                EXIT WHEN NOT FOUND;/* apply on v_p_r_cursor */
               		RAISE NOTICE 'ID_ROL: %', d_r_record.ID_ROL;
               		INSERT INTO PROCESS_PASO_ROL(ID_PASO , ID_ROL )
               		VALUES (L_ID_PASO, d_r_record.ID_ROL);
                END LOOP;
            CLOSE v_p_r_cursor;

            END LOOP;
        END IF;

-- 	<<salida_rapida>>

    V_ERROR := L_ERROR;
    V_MSGERROR := L_MSGERROR;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.scp_process_clone_by_id ( v_ID_PROCESS_FROM bigint, v_ID_ENTIDAD_TO bigint, v_ID_DEPTO_TO text, v_ERROR OUT bigint, v_MSGERROR OUT text ) FROM PUBLIC;

