-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.spc_user_session_valida ( p_token text, OUT CURSOR REFCURSOR ) AS $body$
DECLARE

    l_id_user integer :=0;
   l_id_empresa integer;
    l_id_entidad integer;
    l_id_depto varchar(10);
    l_id_institucion integer;
    l_id_anho_activo integer;
   	l_id_mes_activo integer;
    l_id_moneda_activa integer;
    l_cant integer;
    l_id_almacen integer;
    l_email varchar(50):='';
    l_token_oauth varchar(100):='';
    pp_token varchar(100):='';

BEGIN
	
	select max(token) into STRICT l_token_oauth
    from USERS_SESSION where token_oauth = p_token and status = '1';
	
	IF (l_token_oauth IS NOT NULL AND l_token_oauth::text <> '') THEN
		pp_token:= l_token_oauth;
	ELSE
		pp_token:= p_token;
	END IF;

    update USERS_SESSION set LAST_UPDATE = current_timestamp where token = pp_token and status = '1';

    --select nvl(max(ID_USER),0) into l_id_user from USERS_SESSION where token = p_token and status = '1';
    
    select count(ID_USER) into STRICT l_cant
    from USERS_SESSION where token = pp_token and status = '1';

    IF l_cant > 0 THEN
        select ID_USER,id_entidad,id_depto into STRICT l_id_user,l_id_entidad,l_id_depto
        from USERS_SESSION where token = pp_token and status = '1';
        select email into STRICT l_email from users where id=l_id_user;

       	SELECT max(ID_INSTITUCION) INTO STRICT l_id_institucion FROM JOSE.SCHOOL_INSTITUCION
       	WHERE ID_CAMPO = l_id_entidad AND ID_DEPTO =l_id_depto;

        SELECT COUNT(1) INTO STRICT l_cant FROM LAMB_MODULO M 
        WHERE M.ID_MODULO = 129
        AND NOT EXISTS (SELECT 1 FROM LAMB_ENTIDAD_DEPTO_CONFIG T 
                        WHERE T.ID_MODULO = M.ID_MODULO 
                        AND T.ID = l_id_user 
                        AND T.id_entidad = l_id_entidad 
                        AND T.id_depto = l_id_depto
                        );

        IF l_cant > 0 THEN
            CALL PKG_SETUP.SP_ASSIGN_THEMES(l_id_user,l_id_entidad,l_id_depto);
        END IF;


       	IF (l_id_entidad IS NOT NULL AND l_id_entidad::text <> '') THEN 
	      	SELECT max(ID_EMPRESA) INTO STRICT l_id_empresa FROM CONTA_ENTIDAD WHERE ID_ENTIDAD = l_id_entidad;
       	
	        SELECT CASE WHEN MAX(ID_ANHO)=TO_CHAR(clock_timestamp(),'YYYY') THEN  MAX(ID_ANHO)  ELSE 0 END , MAX(id_moneda)
	        INTO STRICT l_id_anho_activo, l_id_moneda_activa
		    FROM CONTA_ENTIDAD_ANHO_CONFIG
		    WHERE ID_ENTIDAD = l_id_entidad
		    AND ACTIVO = '1';
		
		    IF (l_id_anho_activo IS NOT NULL AND l_id_anho_activo::text <> '') AND l_id_anho_activo<>0 THEN 
		    	SELECT CASE WHEN MAX(ID_MES)=(TO_CHAR(clock_timestamp(),'MM'))::numeric  THEN  max(id_mes)  ELSE 0 END 
		    		INTO STRICT l_id_mes_activo
		        FROM CONTA_ENTIDAD_MES_CONFIG
		        WHERE ID_ENTIDAD = l_id_entidad
		        AND ID_ANHO = l_id_anho_activo
		        AND ESTADO = '1';
		    END IF;
		END IF;
    END IF;






    OPEN CURSOR FOR 
    SELECT CASE WHEN l_id_user=0 THEN 'NO'  ELSE 'SI' END  as active, l_id_user as id_user,
    l_id_empresa AS id_empresa,
    l_id_entidad as id_entidad,
   	l_id_depto as id_depto,l_email as email,
   	l_id_institucion AS id_institucion,
   	l_id_anho_activo as id_anho_activo,
   	l_id_mes_activo as id_mes_activo,
   	l_id_moneda_activa AS id_moneda_activa
;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.spc_user_session_valida ( p_token text, OUT CURSOR REFCURSOR ) FROM PUBLIC;

