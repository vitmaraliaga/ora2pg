-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.spc_user_session_login_ppm ( -- spc_user_session_login_portal_padre_mobile
    -- LOGIN PARA LA AUTENTICACIÓN DE PORTAL DE PADRES DE 
    -- LA APLICACIÓN DE COLEGIOS DE LA UPN. LAMB-SCHOOL
 p_id_persona integer, p_token text, p_token_oauth text, p_error OUT bigint, p_msjerror OUT text, p_caduca text default 'S') AS $body$
DECLARE

  l_entidad bigint;
  l_dpto varchar(10);
  l_contar bigint:=0;
  l_error bigint:=0;
  l_msjerror varchar(200);

  l_id_rol_padre bigint := 295; -- rol padre lamb school.
  cursor_hijos CURSOR FOR
    SELECT ID_INSTITUCION, ID_ALUMNO 
  FROM jose.SCHOOL_ALUMNO WHERE ID_RESP_FINANCIERO = p_id_persona;

BEGIN

	-- probamos con los datos del landing page
	SELECT COUNT(1), MAX(B.ID_CAMPO), MAX(B.ID_DEPTO) INTO STRICT l_contar, l_entidad, l_dpto
	FROM JOSE.PAGE_CONTACTO A 
	INNER JOIN JOSE.SCHOOL_INSTITUCION B ON A.ID_INSTITUCION = B.ID_INSTITUCION
	WHERE ID_PERSONA = p_id_persona;
	
	IF l_contar>0 THEN
		CALL PKG_SETUP.SP_SET_ROL(l_id_rol_padre,p_id_persona,l_entidad,l_dpto,'0',l_error,l_msjerror);
	END IF;

	-- Probamos con los hijos
	FOR hijo in cursor_hijos
        LOOP
        BEGIN
            SELECT ID_CAMPO, ID_DEPTO INTO STRICT l_entidad,l_dpto FROM jose.SCHOOL_INSTITUCION WHERE ID_INSTITUCION = hijo.id_institucion;
           	CALL PKG_SETUP.SP_SET_ROL(l_id_rol_padre,p_id_persona,l_entidad,l_dpto,'0',l_error,l_msjerror);
        END;
    --EXIT WHEN TRUE;
    END LOOP;

   -- Solo si el usuario no es padre de familia que se le asigne la entidad y depto por defecto que tiene. 
    IF coalesce(l_entidad::text, '') = '' AND coalesce(l_dpto::text, '') = '' THEN 
	    
		-- Validar que la persona tenga una entidad asignada por defecto en el LAMB.
	    SELECT COUNT(1), max(X.id_entidad) into STRICT l_contar, l_entidad FROM CONTA_ENTIDAD_USUARIO X 
	   		WHERE X.ID_PERSONA = p_id_persona AND X.ESTADO = 1
	   		AND X.ID_ENTIDAD IN (SELECT si.ID_CAMPO FROM JOSE.SCHOOL_INSTITUCION si);
	
	    IF l_contar = 0 THEN
	    
	    	-- Si la entidad por defecto no es entidad colegio, asignar una que si tenga
	    	SELECT COUNT(1), max(X.id_entidad) into STRICT l_contar, l_entidad FROM CONTA_ENTIDAD_USUARIO X 
	   			WHERE X.ID_PERSONA = p_id_persona 
	   			AND X.ID_ENTIDAD IN (SELECT si.ID_CAMPO FROM JOSE.SCHOOL_INSTITUCION si);
	   	
	        --l_error := 1;
	        -- l_msjerror := 'Alto. El usuario no tiene asignado una entidad en colegios por defecto en el LAMB.';
	         --goto salida_rapida;
	       
	    --ELSIF l_contar > 1 THEN
	      --  l_error := 1;
	      --  l_msjerror := 'Alto. El usuario tiene asignado más de una entidad en colegios por defecto en el LAMB.';
	      --  goto salida_rapida;
	    END IF;
	
	   IF l_contar = 0 THEN
	   		l_error := 1;
	   		l_msjerror := 'Alto. El usuario no tiene asignado una entidad en colegios por defecto en el LAMB.';
-- 	        goto salida_rapida;
	    END IF;
	
	    -- Validar que la persona tenga una departamento asignado por defecto en el LAMB.
	    SELECT count(1), max(A.ID_DEPTO) into STRICT l_contar, l_dpto
	        FROM LAMB_USERS_DEPTO A INNER JOIN CONTA_ENTIDAD_DEPTO B ON A.ID_ENTIDAD = B.ID_ENTIDAD AND A.ID_DEPTO = B.ID_DEPTO
	    WHERE A.ID = p_id_persona
	    AND A.ID_ENTIDAD = l_entidad
	    AND A.ESTADO = 1
	    AND B.ES_EMPRESA = '1';
	
	    IF l_contar = 0 THEN
	        l_error := 1;
	        l_msjerror := 'Alto. El usuario no tiene asignado un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
-- 	        goto salida_rapida;
	    ELSIF l_contar > 1 THEN
	        l_error := 1;
	        l_msjerror := 'Alto. El usuario tiene asignado más de un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
-- 	        goto salida_rapida;
	    END IF;
    END IF;

    -- Validar que la persona tenga un rol asignado por defecto en el LAMB.
    SELECT count(1) into STRICT l_contar FROM LAMB_USUARIO_ROL WHERE ID_PERSONA = p_id_persona AND ID_ENTIDAD = l_entidad;

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado un rol por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
--         goto salida_rapida;
    END IF;

    SELECT count(1) into STRICT l_contar FROM USERS_SESSION_LOG usl WHERE TOKEN = p_token;
    IF l_contar = 0 THEN
        INSERT INTO USERS_SESSION_LOG(TOKEN, ID_USER , ID_ENTIDAD , ID_DEPTO , DATE_CREATE , LAST_UPDATE , STATUS , ID_ALMACEN , TOKEN_OAUTH, APP_NAME )
		VALUES (p_token, p_id_persona, l_entidad, l_dpto, clock_timestamp(), clock_timestamp(), '1', NULL, p_token_oauth, 'LAMB_SCHOOL');
	ELSE
		UPDATE USERS_SESSION_LOG 
			SET ID_ENTIDAD = l_entidad, ID_DEPTO = l_dpto,
			LAST_UPDATE = clock_timestamp()
			WHERE TOKEN = p_token;
    END IF;
   

    select count(ID_USER) into STRICT l_contar
    from USERS_SESSION where token = p_token and status = '1';

    IF l_contar > 0 THEN
        update USERS_SESSION set LAST_UPDATE = current_timestamp where token = p_token and status = '1';
    ELSE
        insert into USERS_SESSION(TOKEN,ID_USER,ID_ENTIDAD,ID_DEPTO,DATE_CREATE,LAST_UPDATE,STATUS,TOKEN_OAUTH,CADUCA)
        values (p_token,p_id_persona,l_entidad,l_dpto,current_timestamp,current_timestamp,'1',p_token_oauth,p_caduca);
    END IF;

--      <<salida_rapida>>
    p_error:=l_error;
    p_msjerror:=l_msjerror;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.spc_user_session_login_ppm (  p_id_persona integer, p_token text, p_token_oauth text, p_error OUT bigint, p_msjerror OUT text, p_caduca text default 'S') FROM PUBLIC;

