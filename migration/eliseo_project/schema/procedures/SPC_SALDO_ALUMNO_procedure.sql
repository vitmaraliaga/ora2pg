-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.spc_saldo_alumno (P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint, OUT CURSOR REFCURSOR) AS $body$
DECLARE

    L_ID_MES bigint;
    L_ID_MESES bigint;
    L_ID_CLIENTE bigint;
    L_INGRESO decimal(10,2);
    L_DEBITO decimal(10,2);
    L_CREDITO decimal(10,2);
    L_SALDO decimal(10,2);
    L_CANT bigint;

    L_MES CURSOR FOR
    SELECT ID_MES FROM CONTA_MES
    WHERE ID_MES <= P_ID_MES;


BEGIN
    DELETE FROM TT_SALDO_ALUMNO_MES;

    OPEN L_MES;
        FETCH L_MES INTO L_ID_MES;
            WHILE L_MES%FOUND LOOP
                L_INGRESO :=0;
                L_DEBITO :=0;
                L_CREDITO :=0;
                L_SALDO :=0;
                BEGIN
                    SELECT
                            B.ID_CLIENTE,
                            B.ID_MES,
                            SUM(CASE WHEN B.TOTAL > 0 THEN B.TOTAL ELSE 0 END) AS INGRESO,
                           (SELECT SUM(X.DEBITO) FROM VW_SALDO_ALUMNO_MES X WHERE X.ID_ENTIDAD = P_ID_ENTIDAD AND X.ID_DEPTO = P_ID_DEPTO AND X.ID_ANHO = P_ID_ANHO AND X.ID_CLIENTE = B.ID_CLIENTE AND X.ID_MES <= B.ID_MES) DEBITO,
                           (SELECT ABS(SUM(X.CREDITO)) FROM VW_SALDO_ALUMNO_MES X WHERE X.ID_ENTIDAD = P_ID_ENTIDAD AND X.ID_DEPTO = P_ID_DEPTO AND X.ID_ANHO = P_ID_ANHO AND X.ID_CLIENTE = B.ID_CLIENTE AND X.ID_MES <= B.ID_MES) CREDITO,
                           (SELECT (CASE WHEN SUM(X.SALDO) < 0 THEN 0 ELSE SUM(X.SALDO) END) FROM VW_SALDO_ALUMNO_MES X WHERE X.ID_ENTIDAD = P_ID_ENTIDAD AND X.ID_DEPTO = P_ID_DEPTO AND X.ID_ANHO = P_ID_ANHO AND X.ID_CLIENTE = B.ID_CLIENTE AND X.ID_MES <= B.ID_MES) SALDO
                           INTO STRICT L_ID_CLIENTE,L_ID_MESES,L_INGRESO,L_DEBITO,L_CREDITO,L_SALDO
                    FROM VW_MAT_MATRICULADOS A JOIN VW_SALES_MOV B ON A.ID_PERSONA = B.ID_CLIENTE  
                    WHERE A.ID_SEMESTRE = 107  
                    AND A.ID_NIVEL_ENSENANZA = 1 
                    AND A.ID_MODO_CONTRATO = 1 
                    AND A.ID_SEDE = 1 
                    AND A.ID_MODALIDAD_ESTUDIO = 1 
                    AND B.ID_ENTIDAD = P_ID_ENTIDAD 
                    AND B.ID_DEPTO = P_ID_DEPTO 
                    AND B.ID_ANHO = P_ID_ANHO 
                    AND B.ID_MES = L_ID_MES
                    AND B.ID_TIPOVENTA IN (1,2,3,4)
                    AND B.SERIE <> 'S001'
                    AND B.ID_CLIENTE IN (198015,78583)-- IN (197004,69592,69412,198015)78583
                    AND A.ID_PROGRAMA_ESTUDIO IN (SELECT  ID_PROGRAMA_ESTUDIO  FROM DAVID.VW_ALUMNO_PLAN_PROGRAMA WHERE NOM_ESCUELA = 'EP EnfermerÃ­a') 
                    GROUP BY B.ID_CLIENTE,B.ID_MES
                    ORDER BY B.ID_CLIENTE,B.ID_MES;
                EXCEPTION
                WHEN OTHERS THEN
                    L_INGRESO :=0;
                    L_DEBITO :=0;
                    L_CREDITO :=0;
                    L_SALDO :=0;
                END;

                IF L_SALDO = 0 OR L_DEBITO = 0 THEN
                    SELECT COUNT(1) INTO STRICT L_CANT FROM TT_SALDO_ALUMNO_MES
                    WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_MES = L_ID_MES-1 AND ID_CLIENTE = L_ID_CLIENTE;
                    IF L_CANT > 0 THEN
                        SELECT DEBITO,SALDO INTO STRICT L_DEBITO,L_SALDO FROM TT_SALDO_ALUMNO_MES
                        WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_MES = L_ID_MES-1 AND ID_CLIENTE = L_ID_CLIENTE;
                    END IF;
                END IF;
                INSERT INTO TT_SALDO_ALUMNO_MES(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_CLIENTE,INGRESO,DEBITO,CREDITO,SALDO)VALUES (P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,L_ID_MES,L_ID_CLIENTE,L_INGRESO,L_DEBITO,L_CREDITO,L_SALDO);

            FETCH L_MES INTO L_ID_MES;
            END LOOP;
    CLOSE L_MES;

    OPEN CURSOR FOR 
    --SELECT 
      --*--ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_CLIENTE,INGRESO,DEBITO,CREDITO,SALDO
    --FROM TT_SALDO_ALUMNO_MES 
    SELECT 
    *
    FROM (
    SELECT  ID_MES,
            ESCUELA,
            ID_CLIENTE,
            CODIGO,ALUMNO,
            SUM(DEBITO) AS DEBITO,
            SUM(INGRESO) AS INGRESO,SUM(SALDO) AS SALDO,--ROUND((SUM(SALDO)/(CASE WHEN SUM(INGRESO) = 0 THEN 1 ELSE SUM(INGRESO) END ))*100,2) AS MOROSIDAD
            (CASE WHEN SUM(SALDO) = 0 THEN 0 ELSE ROUND((SUM(SALDO)/(CASE WHEN(CASE WHEN SUM(INGRESO) = 0 THEN SUM(DEBITO) ELSE SUM(INGRESO) END) = 0 THEN 1 ELSE (CASE WHEN SUM(INGRESO) = 0 THEN SUM(DEBITO) ELSE SUM(INGRESO) END) END ))*100,2)END) AS MOROSIDAD
    FROM (
            SELECT 
                    B.ID_CLIENTE,
                    A.CODIGO,
                    A.PATERNO||' '||A.MATERNO||' '||A.NOMBRE AS ALUMNO,A.NOMBRE_ESCUELA AS ESCUELA,
                    B.ID_MES,
                    B.INGRESO,
                    B.DEBITO,
                    B.CREDITO,
                    B.SALDO
            FROM VW_MAT_MATRICULADOS A JOIN TT_SALDO_ALUMNO_MES B ON A.ID_PERSONA = B.ID_CLIENTE  
            WHERE A.ID_SEMESTRE = 107  
            AND A.ID_NIVEL_ENSENANZA = 1 
            AND A.ID_MODO_CONTRATO = 1 
            AND A.ID_SEDE = 1 
            AND A.ID_MODALIDAD_ESTUDIO = 1 
            AND B.ID_ENTIDAD = P_ID_ENTIDAD 
            AND B.ID_DEPTO = P_ID_DEPTO 
            AND B.ID_ANHO = P_ID_ANHO 
            AND B.ID_MES <= L_ID_MES
            --AND A.ID_PROGRAMA_ESTUDIO IN (SELECT  ID_PROGRAMA_ESTUDIO  FROM DAVID.VW_ALUMNO_PLAN_PROGRAMA WHERE NOM_ESCUELA = 'EP Enfermera')                                                                             
    ) alias17 
    GROUP BY ESCUELA,ALUMNO,CODIGO,ID_MES,ID_CLIENTE
    )
    PIVOT(SUM(INGRESO) AS INGRESO,SUM(SALDO) AS SALDO ,SUM(MOROSIDAD) AS MOROSIDAD,SUM(DEBITO) AS DEBITO
    FOR EXECUTE ID_MES IN (1,2,3,4,5,6)
    ) 
    ORDER BY ESCUELA,ALUMNO;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.spc_saldo_alumno (P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint, OUT CURSOR REFCURSOR) FROM PUBLIC;

