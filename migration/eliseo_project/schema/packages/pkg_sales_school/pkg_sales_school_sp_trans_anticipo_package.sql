-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_school,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_school_sp_trans_anticipo (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint, P_ID_EMPLEADO bigint,P_ID_CLIENTE bigint,P_ID_VENTA bigint,P_ID_ARTICULO bigint,P_IMPORTE bigint,P_DC text, P_ID_MONEDA bigint, P_ID_TIPOTRANSACCION bigint,P_ID_DINAMICA bigint,P_GLOSA text, P_ID_TRANSFERENCIA INOUT bigint,P_ERROR OUT bigint, P_MSGERROR OUT text) AS $body$
DECLARE

        --l_cont numeric;	
        l_igv decimal(10,2);
        l_tc decimal(10,3) := 0;
        l_id_moneda bigint;
        -- l_id_moneda_tc numeric;
        l_contar bigint;
        L_DOCUMENTO bigint :=0;
        l_id_empleado bigint;
        L_ID_PERSONA_V bigint;
        l_id_voucher bigint;
        l_id_tipoorigen_vdetalle bigint;
        l_id_articulo_vdetalle bigint;

        l_numero varchar(15);
        l_serie varchar(5);
        l_correlativo bigint;
        l_total decimal(10,2);
        L_SALDO decimal(10,2);

        L_ID_TIPOASIENTO varchar(3):='MI';
        L_ID_TIPOVOUCHER bigint:=7;

        L_ID_TRANSFERENCIA bigint :=0;
        L_ERROR bigint :=0;
        L_MSGERROR varchar(100) :='';

       	l_id_tipopais bigint;
        l_id_comprobante_otros varchar(3);

        
BEGIN
        
            if P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '7' then 
                L_ID_TIPOASIENTO := 'MIL';
            end if;

            if P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '4' then 
                L_ID_TIPOASIENTO := 'MIC';
            end if;

            l_id_moneda:=P_ID_MONEDA; --SOLES
            -- l_id_moneda_tc:=9;
            L_ERROR :=0;
            DELETE FROM VENTA_TRANSFERENCIA_DETALLE WHERE ID_TRANSFERENCIA IN (SELECT ID_TRANSFERENCIA FROM VENTA_TRANSFERENCIA WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_PERSONA = P_ID_PERSONA AND ESTADO = 0);
            DELETE FROM VENTA_TRANSFERENCIA_ASIENTO WHERE ID_TRANSFERENCIA IN (SELECT ID_TRANSFERENCIA FROM VENTA_TRANSFERENCIA WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_PERSONA = P_ID_PERSONA AND ESTADO = 0);
            DELETE FROM VENTA_TRANSFERENCIA WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_PERSONA = P_ID_PERSONA AND ESTADO = 0;

            --SELECT COALESCE(MAX(ID_TRANSFERENCIA),0)+1 INTO l_cont FROM VENTA_TRANSFERENCIA;
         
            --obtiene tipo de cambio del dia
            --select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
     
            /*
            if l_tc is null then
                l_tc:=0;
            end if;*/
           
            --obteniendo el id_tipopais
	       	SELECT A.ID_TIPOPAIS INTO STRICT l_id_tipopais FROM CONTA_EMPRESA A,CONTA_ENTIDAD B
			WHERE A.ID_EMPRESA = B.ID_EMPRESA AND B.ID_ENTIDAD = P_ID_ENTIDAD  LIMIT 1; --Agregado por Ulices
			
			SELECT ID_COMPROBANTE INTO STRICT l_id_comprobante_otros FROM TIPO_COMPROBANTE WHERE ID_TIPOPAIS = l_id_tipopais AND CODIGO = '00'; --Agregado por Ulices
			
            SELECT pkg_sales_fc_documento_impresion_user(P_ID_PERSONA,l_id_comprobante_otros,P_ID_ENTIDAD,P_ID_DEPTO) INTO STRICT L_DOCUMENTO;
            IF L_DOCUMENTO = 0 THEN
                L_ERROR :=1;
                L_MSGERROR := 'Alto! El usuario no tiene asignado un punto de impresión para el tipo de documento: 00';
--                 goto salida_rapida;
            END IF;

            IF P_ID_EMPLEADO = '' OR P_ID_EMPLEADO = 0 THEN
                l_id_empleado := NULL;
            ELSE
                l_id_empleado := P_ID_EMPLEADO;
            END IF;

            ---------------------------------------------------------------
            SELECT   count(*) into STRICT l_contar FROM CONTA_VOUCHER_CONFIG
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO =P_ID_DEPTO
                AND ID_MODULO = '13'--modulo ventas
                AND ID_ANHO = P_ID_ANHO
                and ID_TIPOASIENTO=L_ID_TIPOASIENTO
                AND AUTOMATICO='S'
                AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;

            if l_contar < 1 then
                l_error:=1;
                l_msgerror:='Alto: No existe la configuración de vouchers para las transferencias, del periodo '||P_ID_ANHO::text;
--                 GOTO salida_rapida;
            elsif l_contar > 1 then
                l_error:=1;
                l_msgerror:='Alto: Existe más de una configuración de vouchers para las transferencias, del periodo '||P_ID_ANHO::text;
--                 GOTO salida_rapida;
            end if;

            SELECT MAX(A.ID_PERSONA) INTO STRICT L_ID_PERSONA_V
            FROM APS_EMPLEADO A 
                INNER JOIN APS_TRABAJADOR B ON A.ID_PERSONA = B.ID_PERSONA
                INNER JOIN APS_CARGO C ON B.ID_CARGO = C.ID_CARGO
                INNER JOIN CONTA_ENTIDAD E ON A.ID_ENTIDAD = E.ID_ENTIDAD
            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
            AND (
            	(A.ID_DEPTO LIKE P_ID_DEPTO||'%' AND E.ID_TIPOENTIDAD = 12)
            	OR (E.ID_TIPOENTIDAD != 12)
            )
            AND UPPER(C.NOMBRE) LIKE '%CONTADOR%'
            AND A.ESTADO = 'A';

            if coalesce(L_ID_PERSONA_V::text, '') = '' then
                l_error:=1;
                l_msgerror:='Alto: No existe asignado un contador para la entidad: ' || P_ID_ENTIDAD || ' y el departamento: ' || P_ID_DEPTO;
--                 GOTO salida_rapida;
            end if;

            l_contar := pkg_sales_fc_verificar_serie_numero(P_ID_PERSONA,l_id_comprobante_otros,P_ID_ENTIDAD, P_ID_DEPTO);
            if l_contar < 1 then
                l_error := 1;
                l_msgerror := 'Alto! No existe un punto de impresión activo de transferencias para el usuario. [tipo de documento: 00]';
--                 GOTO salida_rapida;
            elsif l_contar > 1 then
                l_error := 1;
                l_msgerror := 'Alto! Existe mas de un punto de impresión activo de transferencias para el usuario. [tipo de documento: 00]';
--                 GOTO salida_rapida;
            END IF;

            /*
            SELECT ID_TIPOORIGEN, ID_ARTICULO INTO l_id_tipoorigen_vdetalle, l_id_articulo_vdetalle FROM VENTA_DETALLE WHERE ID_VDETALLE=P_ID_VDETALLE;
            SELECT count(*) into l_contar FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen_vdetalle AND ID_ORIGEN=P_ID_VDETALLE AND PRIMARIO='S';
            if l_contar < 1 then
                l_error := 1;
                l_msgerror := 'Alto! No existe un asiento primario en la venta.';
--                 GOTO salida_rapida;
            elsif l_contar > 1 then
                l_error := 1;
                l_msgerror := 'Alto! Existe mas de un asiento primario en la venta.';
--                 GOTO salida_rapida;
            END IF;
            */
            --DBMS_OUTPUT.put_line(' antes de error l_error'||l_error);
            IF l_error = 0 then
            --DBMS_OUTPUT.put_line(' dentro de error P_ID_TRANSFERENCIA:'||P_ID_TRANSFERENCIA);
            
                IF P_ID_TRANSFERENCIA = 0 THEN 
                    -- Crear transferencia
                    INSERT INTO VENTA_TRANSFERENCIA(
                        ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_EMPLEADO,ID_CLIENTE,
                        ID_TIPOTRANSACCION,ID_DINAMICA,ID_MONEDA,TIPOCAMBIO,SERIE,NUMERO,FECHA,GLOSA,ESTADO 
                        )VALUES (
                        P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,l_id_empleado,P_ID_CLIENTE,
                        P_ID_TIPOTRANSACCION,P_ID_DINAMICA,l_id_moneda,l_tc,'-','-',clock_timestamp(),P_GLOSA,0)
                        RETURNING ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA;

                    -- Crear detalle de tranferencia.
                    INSERT INTO VENTA_TRANSFERENCIA_DETALLE(ID_VENTA, ID_ARTICULO, ID_TRANSFERENCIA,DC,IMPORTE, DETALLE
                    )VALUES (P_ID_VENTA,P_ID_ARTICULO, L_ID_TRANSFERENCIA,P_DC,P_IMPORTE, P_GLOSA);

                    -- Finalizar tranferencia.
                    CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_PERSONA_V,l_id_voucher);

                    
                    pkg_sales_school_sp_obtener_serie_numero(P_ID_PERSONA,l_id_comprobante_otros,P_ID_ENTIDAD
                    ,P_ID_DEPTO
                    ,l_serie,l_correlativo);
    
                    SELECT lpad(l_correlativo::text,8,'0') into STRICT l_numero;

                    SELECT
                            coalesce(sum(CASE WHEN dc='D' THEN (importe)  ELSE (importe*-1) END ),0) INTO STRICT l_total
                    FROM VENTA_TRANSFERENCIA_DETALLE
                    WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;

                    UPDATE VENTA_TRANSFERENCIA SET
                                ID_VOUCHER  =   l_id_voucher,
                                SERIE       =   l_serie, 
                                NUMERO      =   l_numero, 
                                IMPORTE     =   l_total,
                                ESTADO      =   1
                    WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;

                    -- pkg_sales_sp_generar_asiento_trans(L_ID_TRANSFERENCIA,l_error,l_msgerror);
                ELSE 
                    UPDATE VENTA_TRANSFERENCIA
                    SET GLOSA = P_GLOSA
                    WHERE ID_TRANSFERENCIA= P_ID_TRANSFERENCIA;

                    L_ID_TRANSFERENCIA := P_ID_TRANSFERENCIA;

                    -- pkg_sales_sp_generar_asiento_trans(L_ID_TRANSFERENCIA,l_error,l_msgerror);
                
                END IF;
            end if;

--         <<salida_rapida>>
        
        P_ID_TRANSFERENCIA := L_ID_TRANSFERENCIA;
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_school_sp_trans_anticipo (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint, P_ID_EMPLEADO bigint,P_ID_CLIENTE bigint,P_ID_VENTA bigint,P_ID_ARTICULO bigint,P_IMPORTE bigint,P_DC text, P_ID_MONEDA bigint, P_ID_TIPOTRANSACCION bigint,P_ID_DINAMICA bigint,P_GLOSA text, P_ID_TRANSFERENCIA INOUT bigint,P_ERROR OUT bigint, P_MSGERROR OUT text) FROM PUBLIC;
