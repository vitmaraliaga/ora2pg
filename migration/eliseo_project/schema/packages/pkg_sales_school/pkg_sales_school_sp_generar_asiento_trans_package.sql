-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_school,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_school_sp_generar_asiento_trans (P_ID_TRANSFERENCIA bigint, P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_id_anho bigint;
        l_id_entidad bigint;
        l_id_depto_transf varchar(20);
        l_id_depto_transf_destino varchar(20);
        l_dinamica bigint;
        l_id_tipoorigen bigint;
        l_id_cliente bigint;
        l_memo varchar(255);
        l_id_voucher bigint;
        l_serie varchar(255);
        l_numero varchar(255);
        l_glosa varchar(255);
        l_id_tipotransaccion bigint;

        -- Datos del detalle
        l_id_tdetalle bigint;
        l_id_venta bigint;
        --l_id_vdetalle numeric;
        l_id_articulo bigint;
        l_id_tipoorigen_vdetalle bigint;
        l_id_articulo_vdetalle bigint;
        l_id_vdetalle bigint;
        l_ddc varchar(1);
        l_importe bigint;
        l_descuento bigint;
        l_precio_total bigint;
        l_detalle varchar(255);

        -- Datos de los asientos de la dinamica
        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_unicoctate varchar(1);
        l_porcentaje decimal(10,2);
        l_descripcion varchar(255);
        l_agrupa varchar(1);

        l_importeasiento decimal(10,2);
        l_importeasiento_me decimal(10,2);
        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_fondo varchar(10);

        -- Validación
        l_cont bigint;
        l_contrato_costo_nominal bigint;
        l_contrato_descuento bigint;
        l_contrato_total bigint;

        l_id_dinamica_cli_sal_ini bigint;
        l_contar bigint;
        l_doc_anticipo varchar(255);
        l_buscar varchar(255);
        l_ctas varchar(200);
        l_deptos varchar(200);
        l_ctates varchar(200);
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;

        CURSOR_TRANSFERENCIA_DETALLE CURSOR FOR		
        SELECT  ID_TDETALLE,ID_VENTA,ID_ARTICULO,DC, IMPORTE, DETALLE, ID_VDETALLE
        FROM VENTA_TRANSFERENCIA_DETALLE
        WHERE ID_TRANSFERENCIA=P_ID_TRANSFERENCIA
        ORDER BY ID_TDETALLE;	

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =l_dinamica
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        casi_sal_ant CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =l_id_dinamica_cli_sal_ini
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        
        l_error bigint :=0;
        l_msgerror varchar(100) :='';

BEGIN
        
        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_TIPOORIGEN, ID_CLIENTE, ID_VOUCHER, SERIE, NUMERO, GLOSA, ID_TIPOTRANSACCION, ID_ANHO
            INTO STRICT l_id_entidad, l_id_depto_transf,l_dinamica, l_id_tipoorigen, l_id_cliente, l_id_voucher, l_serie, l_numero, l_glosa, l_id_tipotransaccion, l_id_anho
        FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = P_ID_TRANSFERENCIA;

        --- SOLO FUNCIONA CUANDO LA TRANSFERENCIA TIENE UN ÚNICO DETALLE, REVISAR CON CALMA EN CASO TENGA VARIOS DETALLES OJO PESTAÑA Y CEJA
        SELECT max(B.ID_DEPTO)
            INTO STRICT l_id_depto_transf_destino
        FROM VENTA_TRANSFERENCIA_DETALLE A inner join Venta B on A.id_venta_destino = B.id_venta
        WHERE A.ID_TRANSFERENCIA = P_ID_TRANSFERENCIA;

        SELECT (l_id_tipoorigen::text || '-' || P_ID_TRANSFERENCIA::text) INTO STRICT l_memo;

        OPEN CURSOR_TRANSFERENCIA_DETALLE;
        FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_id_tdetalle,l_id_venta,l_id_articulo,l_ddc,l_importe,l_detalle, l_id_vdetalle;
        WHILE CURSOR_TRANSFERENCIA_DETALLE%FOUND LOOP

        --DBMS_OUTPUT.put_line(' : l_id_tipotransaccion -> '||l_id_tipotransaccion);
            if l_id_tipotransaccion = 179 then 
        
                SELECT count(1) AS contar, coalesce(sum(costo_nominal),0) AS COSTO_NOMINAL, COALESCE(sum(DESCUENTO + descuento_covid),0) AS descuento, COALESCE(sum(costo_nominal - DESCUENTO - descuento_covid),0) AS total 
                into STRICT l_cont, l_contrato_costo_nominal, l_contrato_descuento, l_contrato_total
                from (
                SELECT vcc.id_articulo, 
                 198576 AS ID_PERSONA, I.ID_CAMPO AS ID_ENTIDAD, I.ID_DEPTO, 2020 AS ID_ANHO, 4 AS ID_MES,
                 MC.ID_ALUMNO AS ID_CLIENTE, mc.id_cliente_legal, MC.ID_COMPROBANTE,
                 coalesce((vcc.TOTAL),0) AS total, coalesce((vcc.DESCUENTO ),0) AS descuento, coalesce((vcc.IMPORTE ),0) AS costo_nominal,
                            (SELECT coalesce(sum(case when p.es_porcentaje = '1' then vcc.total * p.valor else p.valor end),0) from jose.fin_promocion p 
                                inner join jose.fin_promocion_alumno a on a.id_promocion = p.id_promocion
                                LEFT OUTER JOIN jose.FIN_PROMOCION_ARTICULO_CONF paf ON p.ID_ANHO = paf.ID_ANHO 
                                        AND p.ID_ENTIDAD = paf.ID_ENTIDAD 
                                        AND p.ID_DEPTO = paf.ID_DEPTO 
                                        AND p.ID_ARTICULO = paf.ID_ARTICULO 
                                where a.id_alumno = mc.id_alumno
                                and p.id_entidad = i.id_campo
                                and p.id_depto = i.id_depto
                                and p.id_anho = mc.id_anho
                                and p.estado = '1'
                                and p.id_articulo = vcc.id_articulo
                                AND COALESCE(paf.ES_NOTACREDITO,'N') = 'N' ) as descuento_covid            
                FROM jose.VSCH_CONTRATO_CRONOGRAMA vcc
                inner join jose.MAT_CONTRATO mc on mc.ID_CONTRATO = vcc.ID_CONTRATO 
                inner join moises.persona vpn on vcc.ID_ALUMNO = vpn.ID_PERSONA 
                inner join MOISES.persona_documento pd on pd.id_persona = mc.id_alumno 
                inner join jose.school_institucion i on i.id_institucion = mc.id_institucion
                WHERE i.id_campo = l_id_entidad
                AND i.id_depto = l_id_depto_transf
                -- AND mc.CONTADO = 'N'
                AND mc.ESTADO = '1'
                AND mc.ID_ANHO = l_id_anho
                and mc.id_alumno = l_id_cliente
                and vcc.id_articulo = l_id_articulo
                ) t1;

                if l_cont = 1 then 
                    if l_contrato_total = 0 then l_precio_total := 0;
                    else l_precio_total := l_importe*l_contrato_costo_nominal/l_contrato_total;
                    end if;

                    if l_contrato_total = 0 then l_descuento := 0;
                    else l_descuento := l_importe*l_contrato_descuento/l_contrato_total;
                    end if;

                else
                    l_precio_total := l_importe;
                    l_descuento := 0;
                end if;
            else
                l_precio_total := 0;
                l_descuento := 0;
            end if;

            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            WHILE casi%FOUND LOOP
                select (case
                            --when l_id_indicador='COSTO_ALM' then l_precio_alm
                            --when l_id_indicador='BASE' then l_base
                            --when l_id_indicador='IGV' then l_igv
                            when l_id_indicador='PRECIO_TOTAL' then l_precio_total
                            when l_id_indicador='DESCUENTO' then l_descuento
                            when l_id_indicador='IMPORTE' then l_importe
                      else 0 end)*(l_porcentaje)  into STRICT l_importeasiento
;
                l_importeasiento_me := 0;

                l_depto:=null;
                l_cuenta_cte:=null;

                
                if l_unico='U' then
                    select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif (l_unico='X') then
                    --select pkg_sales_school_fc_depto_alumno_school(l_id_cliente, l_id_depto_transf) into l_depto from dual;
                    select pkg_sales_school_fc_depto_alumno_school_oth_sch(l_id_cliente, l_id_entidad, l_id_depto_transf, l_id_depto_transf_destino ) into STRICT l_depto;
                    --pkg_sales_school_fc_depto_alumno_school_oth_sch(97294, 17322,'121712','121212')
                elsif l_unico='S' THEN  -- Si es sesión
                    l_depto := l_id_depto_transf;---
                end if;

                if l_unicoctate='U' then
                  -- select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                  -- if l_cont>0 then
                    select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                  -- end if;
                end if;

                if l_dc='C' then
                  l_importeasiento:=l_importeasiento*(-1);
                end if;

                if l_ddc='D' then
                   l_importeasiento:=l_importeasiento;
                  --l_importeasiento:=l_importeasiento*(-1);
                  -- else
                end if;

                select count(*) into STRICT l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=P_ID_TRANSFERENCIA
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'C' else 'D' end=l_ddc;

                
                --DBMS_OUTPUT.put_line(' ****************** : l_depto -> '||l_depto);
          
        
                 if l_importeasiento<>0 then
                
                  if l_cont=0 then
                   
                    INSERT INTO CONTA_ASIENTO(
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    P_ID_TRANSFERENCIA,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                    l_memo,
                    l_id_voucher,
                    null,
                    null,
                    l_agrupa 
                    );
                  else

                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_TRANSFERENCIA
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'C' else 'D' end=l_ddc;

                  end if;
                end if;

                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            END LOOP;
            CLOSE casi;

            -- CONTRA PARTIDA
            if l_id_tipotransaccion <> 179 then
            
                l_importeasiento := l_importeasiento*-1;

                           SELECT count(1) into STRICT l_contar FROM VENTA_SALDO s
                                        WHERE ID_VENTA = l_id_venta
                                        AND EXISTS (
                                        SELECT 1 FROM VENTA_TRANSFERENCIA d
                                        WHERE d.ID_ANHO = s.ID_ANHO
                                        AND d.ID_ENTIDAD = s.ID_ENTIDAD
                                        AND d.ID_DEPTO = s.ID_DEPTO
                                        AND d.ID_TRANSFERENCIA = P_ID_TRANSFERENCIA
                                        );
                            
                            if l_contar > 0 then 
                            
                                        SELECT 
                                            count(1), max(din.ID_DINAMICA)
                                            into STRICT l_contar, l_id_dinamica_cli_sal_ini
                                            FROM eliseo.CONTA_DINAMICA din, eliseo.TIPO_TRANSACCION tra, eliseo.TIPO_GRUPO_CONTA conta
                                            WHERE din.ID_TIPOTRANSACCION = tra.ID_TIPOTRANSACCION
                                            AND tra.ID_TIPOGRUPOCONTA = conta.ID_TIPOGRUPOCONTA
                                            AND din.ID_ENTIDAD = l_id_entidad
                                            AND din.ID_ANHO = l_id_anho
                                            AND din.ID_DEPTO IN ('0',l_id_depto_transf)
                                            AND din.ID_MODULO = 14
                                            AND conta.CODIGO = 'DS';

                                            --l_id_entidad, l_id_depto_transf
                                            
                                            --DBMS_OUTPUT.put_line(' : l_id_dinamica_cli_sal_ini -> '||l_id_dinamica_cli_sal_ini);
                                            
                                            if l_contar <> 1
                                            then
                                                L_ERROR :=1;
                                                L_MSGERROR := 'Alto! La cantidad de dinámicas configuradas para Clientes Saldo Inicial debe de ser 1 ('||l_contar||' dinámicas)';
--                                                 GOTO salida_rapida;
                                            end if;
                                            
                            
                                                    ---DINAMICA ASIENTO
                                                    OPEN casi_sal_ant;
                                                    FETCH casi_sal_ant INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                                                        l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                                                    WHILE casi_sal_ant%FOUND LOOP

                                                       SELECT max('('||serie||'-'||numero||')') into STRICT l_doc_anticipo FROM VENTA_SALDO s
                                                        WHERE ID_VENTA = l_id_venta
                                                        AND ID_ANHO =  l_id_anho;

                                                        l_depto:=null;
                                                        l_cuenta_cte:=null;

                                                        if l_importeasiento<>0 then
                                                        
                                                            if l_unico='U' then
                                                              select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                                            elsif (l_unico='M') then
                                                               SELECT position('|' in l_deptos) into STRICT l_buscar;
                                                               if l_buscar>0 then
                                                                 select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                                                                 select FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                                                                 select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into STRICT l_depto;
                                                               else
                                                                l_depto:=l_deptos;
                                                               end if;
                                                            elsif (l_unico='X') then
                                                               select pkg_sales_school_fc_depto_alumno_school_inst(l_id_cliente, l_id_entidad, l_id_depto_transf) into STRICT l_depto;
                                                            elsif l_unico='S' THEN  -- Si es sesión
                                                                l_depto := l_id_depto_transf;
                                                            end if;

                                                            if l_unicoctate='U' then
                                                              select  count(*) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                                              if l_cont>0 then
                                                                select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                                              end if;
                                                            elsif (l_unicoctate='M') then
                                                               SELECT position('|' in l_ctates) into STRICT l_buscar;
                                                               if l_buscar>0 then
                                                                 select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                                                                 select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                                                                 select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into STRICT l_cuenta_cte;
                                                               else
                                                                l_cuenta_cte:=l_ctates;
                                                               end if;
                                                            elsif (l_unicoctate='X') then
                                                                select NUM_DOCUMENTO into STRICT l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;
                                                            elsif (l_unicoctate='B') then --LA CTA CTE SE OBTIENE DEL LA CTA BANCARIA
                                                                --SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                                                -- SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                                                null;
                                                            end if;
                                                            --if l_dc='C' then
                                                            --  l_importeasiento:=l_importeasiento*(-1);
                                                            --end if;
                                                        --DBMS_OUTPUT.put_line(' ++++++++++++++ : l_depto -> '||l_depto);
                                                            INSERT INTO CONTA_ASIENTO(
                                                            ID_TIPOORIGEN,
                                                            ID_ORIGEN,
                                                            FONDO,
                                                            DEPTO,
                                                            CUENTA, 
                                                            CUENTA_CTE,
                                                            RESTRICCION,
                                                            IMPORTE,
                                                            DESCRIPCION,
                                                            MEMO,
                                                            VOUCHER, 
                                                            PARENT_ID,
                                                            REF_ID,
                                                            AGRUPA
                                                            )VALUES ( 
                                                            l_id_tipoorigen,
                                                            P_ID_TRANSFERENCIA,
                                                            l_fondo,
                                                            l_depto,
                                                            l_id_cuentaaasi,
                                                            l_cuenta_cte,
                                                            l_id_restriccion,
                                                            l_importeasiento,
                                                            l_doc_anticipo||'-'||l_descripcion,
                                                            l_memo,
                                                            l_id_voucher,
                                                            null,
                                                            null ,-- ref_id
                                                            l_agrupa
                                                            );

                                                        end if;

                                                        FETCH casi_sal_ant INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                                                                        l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;END LOOP;
                                                      CLOSE casi_sal_ant;
                                        else 
                                                --DBMS_OUTPUT.put_line('l_id_venta');
                                                --DBMS_OUTPUT.put_line(l_id_venta);
                                                --DBMS_OUTPUT.put_line(l_id_vdetalle);
                                                SELECT ID_TIPOORIGEN,ID_ARTICULO, ID_VDETALLE INTO STRICT l_id_tipoorigen_vdetalle, l_id_articulo_vdetalle, l_id_vdetalle
                                                        FROM VENTA_DETALLE WHERE ID_VENTA=l_id_venta AND ID_VDETALLE=l_id_vdetalle;

                                                SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO STRICT l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
                                                FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen_vdetalle AND ID_ORIGEN=l_id_vdetalle AND PRIMARIO='S'  LIMIT 1;

                                                select pkg_sales_school_fc_depto_alumno_school_inst(l_id_cliente, l_id_entidad, l_id_depto_transf) into STRICT l_depto;

                                                INSERT INTO CONTA_ASIENTO(
                                                        ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                                                        CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                                                        MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                                                        )VALUES ( 
                                                        l_id_tipoorigen,
                                                        P_ID_TRANSFERENCIA,
                                                        l_fondo,
                                                        l_depto,
                                                        l_id_cuentaaasi,
                                                        l_cuenta_cte,
                                                        l_id_restriccion,
                                                        l_importeasiento,
                                                        '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                                                        l_memo,
                                                        l_id_voucher,
                                                        null,
                                                        null,
                                                        l_agrupa 
                                                        );
                                    end if;

            end if;
            /*
            select count(*) into l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=L_ID_TRANSFERENCIA
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'D' else 'C' end=l_ddc;
                
                if l_importeasiento<>0 then
                
                  if l_cont=0 then
                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    L_ID_TRANSFERENCIA,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                    l_memo,
                    l_id_voucher,
                    null,
                    null,
                    l_agrupa 
                    );
                  else
                  
                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=L_ID_TRANSFERENCIA
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'C' else 'D' end=l_ddc;
                    
                  end if;
                end if;
                
                */
            FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_id_tdetalle,l_id_venta,l_id_articulo,l_ddc,l_importe,l_detalle, l_id_vdetalle;
        END LOOP;
        CLOSE CURSOR_TRANSFERENCIA_DETALLE;
        
--         <<salida_rapida>>
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_school_sp_generar_asiento_trans (P_ID_TRANSFERENCIA bigint, P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
