-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_school,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_school_sp_venta_cargo_cuota ( P_IMPORTE text, P_ID_ARTICULO text, P_ID_PERSONA bigint, P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint, P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_CLIENTE_LEGAL bigint, P_ID_COMPROBANTE text, P_ID_MONEDA bigint,  -- moneda de venta 
 P_ID_VENTA OUT bigint, P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_DEPOSITO_EFECTIVO bigint:=0;
        L_ID_DEPOSITO_TARJETA bigint:=0;
        L_IMPORTE_DEPOSITO_EFECTIVO bigint:=0;
        L_IMPORTE_DEPOSITO_TARJETA bigint:=0;
        L_ID_CTABANCARIA bigint;
        l_contar bigint;
        L_DOCUMENTO bigint :=0;
        l_igv decimal(10,2);
        l_tc decimal(10,3);
        l_id_moneda bigint;
        l_id_moneda_tc bigint;


        l_id_almacen bigint;
        l_id_mes bigint;
        l_id_contrato bigint;

        L_ID_VENTA bigint :=0;
        L_ID_VDETALLE bigint :=0;
        L_ERROR bigint :=0;
        L_MSGERROR varchar(200) :='';

        l_cantidad_item bigint := 1;
        l_gravado varchar(2);
        l_igv_item decimal(10,2);
        l_es_anticipo varchar(1) := 'N';

        l_precio decimal(10,2);
        l_precio_base decimal(10,2);
        l_base decimal(10,2);
        l_descuento decimal(10,2):=0;
        l_totaldescuento decimal(10,2):=0;
        l_importe decimal(10,2);

        l_precio_me decimal(10,2);
        l_igv_me decimal(10,2);
        l_precio_base_me decimal(10,2);
        l_precio_alm_me decimal(10,2);
        l_base_me decimal(10,2);
        l_descuento_me decimal(10,2);
        l_importe_me decimal(10,2);

        l_total_costos_no_mensual decimal(10,2) := 0;
        l_total_costos_mensual decimal(10,2) := 0;
        l_sum_total bigint:=0;
        l_total bigint:=0;
        L_ID_PERSONA_V bigint;

        l_id_tipotransacciondep bigint;
        l_id_dinamica bigint;
        l_id_dinamica_cli_sal_ini bigint;

        l_id_voucher bigint;
        l_serie varchar(5);
        l_correlativo bigint;
        l_numero varchar(15);
        l_id_leyenda varchar(10):='1000';

        l_ventas varchar(100);
        l_imp_ventas varchar(100);
        l_glosa varchar(100);
        l_tipocambio numeric(10,3);
        l_id_mediopago varchar(5);

        l_importe_resto bigint := 0;
        l_importe_registrar bigint := 0;

        s_ventas tablastring;
        s_importes tablastring;
        s_articulos tablastring;

        s_id_venta bigint;
        s_importe  decimal(10,2);
        s_id_articulo bigint;

        s_count_id_venta_0 bigint:=0;
        s_count_id_venta_old bigint:=0;

        
        

        
BEGIN

        L_ID_CTABANCARIA := NULL;
        l_id_moneda:=P_ID_MONEDA; --SOLES
        l_id_moneda_tc:=9;



            pkg_sales_school_sp_crear_venta(P_ID_PERSONA,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,
            P_ID_CLIENTE,P_ID_CLIENTE_LEGAL,P_ID_COMPROBANTE,l_id_moneda,L_ID_VENTA,L_ERROR,L_MSGERROR);
            if l_error = 1 then
--                 GOTO salida_rapida;
            end if;

            -- DETALLE
            pkg_sales_school_sp_crear_venta_detalle(L_ID_VENTA, P_IMPORTE, P_ID_ARTICULO,
                                    P_ID_PERSONA,
                                    P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,
                                    P_ID_MES,P_ID_CLIENTE,P_ID_CLIENTE_LEGAL,
                                    P_ID_COMPROBANTE,
                                    L_ERROR,L_MSGERROR);
            if l_error = 1 then
--                 GOTO salida_rapida;
            end if;

        --- FINALIZANDO LA VENTA
        
        IF L_ID_VENTA <> 0 THEN 
            pkg_sales_school_sp_finalizar_venta(L_ID_VENTA,P_ID_PERSONA,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,
            P_ID_CLIENTE,P_ID_CLIENTE_LEGAL,P_ID_COMPROBANTE,L_ERROR,L_MSGERROR);

        END IF;

--         <<salida_rapida>>
        P_ID_VENTA := L_ID_VENTA;
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_school_sp_venta_cargo_cuota ( P_IMPORTE text, P_ID_ARTICULO text, P_ID_PERSONA bigint, P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint, P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_CLIENTE_LEGAL bigint, P_ID_COMPROBANTE text, P_ID_MONEDA bigint, P_ID_VENTA OUT bigint, P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
