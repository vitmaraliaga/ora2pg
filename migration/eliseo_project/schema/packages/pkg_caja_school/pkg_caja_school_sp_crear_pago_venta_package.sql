-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja_school,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_school_sp_crear_pago_venta (P_ID_PAGO bigint,P_ID_DINAMICA bigint,P_ID_CLIENTE bigint,P_ID_VENTA bigint,P_ID_ARTICULO bigint, P_IMPORTE bigint,P_IMPORTE_ME bigint, P_ERROR out bigint, P_MSGERROR out text) AS $body$
DECLARE
 IS  --P_ID_ARTICULO numeric, QUITADO
        l_error bigint:=0;
        l_msgerror varchar(180):='';
        l_importe_me decimal(10,2);
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(10);
        L_ID_ANHO bigint;
        L_ID_ARTICULO bigint;
        L_ID_VENTA bigint;
        L_TOTAL_ANTICIPO decimal(10,2);
        L_CLIENTE varchar(80);
        L_DETALLE varchar(80);
        --L_ID_PERSONA numeric :=null;
        
BEGIN
        
            --- CADA VEZ QUE SE ACTUALIZE O SE AGREGUE ALGO DE DETALLE AL PAGO EL PAGO AUTOMATICAMENTE SE PONE EN ESTADO 0
            UPDATE ELISEO.CAJA_PAGO SET ESTADO='0' WHERE ID_PAGO=P_ID_PAGO;
            ---
            l_error:=0;
            --l_error:=1;
            --l_msgerror:='NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0)';
            if l_error=0 then
                IF P_ID_VENTA = 0 OR coalesce(P_ID_VENTA::text, '') = '' THEN
                    L_ID_VENTA := NULL;
                ELSE
                    L_ID_VENTA := P_ID_VENTA;
                END IF;
                SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                SELECT SUM(IMPORTE)*-1 AS TOTAL INTO STRICT L_TOTAL_ANTICIPO
                FROM VW_SALES_DETAIL_SALDO_COL
                WHERE ID_ENTIDAD = L_ID_ENTIDAD
                AND ID_DEPTO = L_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                --AND ID_CLIENTE = P_ID_CLIENTE
                AND ID_VENTA=P_ID_VENTA
                AND ID_ARTICULO = P_ID_ARTICULO;

                IF L_TOTAL_ANTICIPO >= P_IMPORTE THEN
                    
                    SELECT SUBSTR(FC_NOMBRE_PERSONA(P_ID_CLIENTE),1,100) CLIENTE INTO STRICT L_CLIENTE;

                    SELECT 
                    SUBSTR((CASE ID_ENTIDAD 
                    WHEN 7124 
                    THEN ID_ENTIDAD||'-ALUM-'||CASE WHEN ID_MEDIOPAGO='001' THEN 'TLC' WHEN ID_MEDIOPAGO='007' THEN 'CHQ' WHEN ID_MEDIOPAGO='008' THEN 'EFEC' END ||'-'||(NUMERO)::numeric ||'-'||SUBSTR(L_CLIENTE,1,20)||'-'||TO_CHAR(FECHA,'DD/MM/YYYY')
                    ELSE 
                    CASE WHEN ID_MEDIOPAGO='001' THEN 'TLC' WHEN ID_MEDIOPAGO='007' THEN 'CHQ' WHEN ID_MEDIOPAGO='008' THEN 'EFEC' END ||'-'||NUMERO||' | '||TO_CHAR(FECHA,'DD/MM/YYYY')||' | '||pkg_caja_fc_cuenta_bancaria(ID_CTABANCARIA)
                    END ),1,80) AS GLOSA INTO STRICT L_DETALLE
                    FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;

                    /*SE VA AGENERAR UN ANTICIPO DE TIPO CREDITO Y SE VA AGUARDAR EL ID_PVENTA DEL PAGO Y EL ANTICIPO NO GENERARÁ ASIENTO, EL ASIENTO LO HARÁ LA SALIDA DE DINERO
                    --7124 = solo permite sacar dinero si tengo saldo en Anticipos
                    SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
                    FROM VW_SALES_ADVANCES
                    WHERE ID_ENTIDAD = L_ID_ENTIDAD
                    AND ID_DEPTO = L_ID_DEPTO
                    AND ID_ANHO = L_ID_ANHO
                    AND ID_CLIENTE = L_ID_CLIENTE;
                    IF L_TOTAL_ANTICIPO > 0 THEN
                        IF L_TOTAL_ANTICIPO >= L_TOTAL THEN
                            L_IMPORTE_ANTICIPO := L_TOTAL;
                        ELSE
                            L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
                        END IF;
                        pkg_sales_sp_crear_anticipos_clientes(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_CLIENTE,L_ID_PERSONA,P_ID_VENTA,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,L_ERROR,L_MSGERROR,L_TIPO);
                        IF L_ERROR > 0 THEN
                          --l_msgerror := l_msgerror;
--                           GOTO SALIDA_RAPIDA;
                      END IF;
                    END IF;*/
                
                    IF coalesce(P_IMPORTE,0)+coalesce(P_IMPORTE_ME,0) > 0 THEN
                        INSERT INTO CAJA_PAGO_VENTA(
                        ID_PAGO,
                        ID_CLIENTE,
                        ID_VENTA,
                        ID_ARTICULO,
                        ID_DINAMICA,
                        IMPORTE,
                        IMPORTE_ME,
                        DETALLE
                        )values (
                        P_ID_PAGO,
                        P_ID_CLIENTE,
                        L_ID_VENTA,
                        P_ID_ARTICULO,
                        P_ID_DINAMICA,
                        P_IMPORTE,
                        P_IMPORTE_ME,
                        L_DETALLE
                        );
                        l_msgerror:='Pago OK';
                    ELSE
                        l_error := 1;
                        l_msgerror:='No existen Importes';
                    END IF;
                ELSE
                    l_error := 1;
                    l_msgerror:='ERROR: Importe Mayor al Monto del Anticipo '||L_TOTAL_ANTICIPO;
                END IF;
            end if;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_school_sp_crear_pago_venta (P_ID_PAGO bigint,P_ID_DINAMICA bigint,P_ID_CLIENTE bigint,P_ID_VENTA bigint,P_ID_ARTICULO bigint, P_IMPORTE bigint,P_IMPORTE_ME bigint, P_ERROR out bigint, P_MSGERROR out text) FROM PUBLIC;
