-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja_school,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_school_sp_finalizar_deposito (P_ID_DEPOSITO bigint,P_ID_DINAMICA bigint,P_ID_DINAMICA_CLI_SALDO_INI bigint, P_ID_CTABANCARIA bigint, P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_TRANS bigint, P_ERROR out bigint,P_MSGERROR out text) AS $body$
DECLARE


        l_serie varchar(4);
        l_numero varchar(8);
        l_deposito bigint:=0;
        l_estado varchar(1):='0'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher bigint :=0;

        l_correlativo bigint :=0;
        l_id_comprobante varchar(3):='00';  --deposito
        l_automatico varchar(2);
        l_contar bigint;
        l_fecha timestamp(0);
        --l_id_ctabancaria numeric;
        l_importedet decimal(10,2);
        l_importeasiento decimal(10,2);
        L_ID_VALE bigint;
        L_ID_TIPOTARJETA bigint;
        L_ID_CTABANCARIA bigint;
        L_GLOSA varchar(100);
        L_ID_TIPOVOUCHER bigint:=5;

        l_id_entidad bigint;
        l_id_depto bigint;
        l_id_anho bigint;
        l_id_mes bigint;
        l_id_tipoasiento varchar(10) := 'MB';
        l_id_persona bigint;
        l_id_cliente bigint;

        L_ID_PERSONA_V bigint;

        l_id_documento_fin bigint := NULL;

        l_id_tipopais bigint;

        l_error bigint:=0;
        l_msgerror varchar(200):='';

BEGIN
          --goto salida_rapida;
          if P_ID_DEPOSITO <> 0 then
          
            select coalesce(sum(importe),0) into STRICT l_importedet from caja_deposito_detalle
            where id_deposito=P_ID_DEPOSITO;

            select ID_ENTIDAD, ID_DEPTO, ID_ANHO, ID_MES, ID_PERSONA, glosa, id_cliente into STRICT L_ID_ENTIDAD, L_ID_DEPTO, L_ID_ANHO, L_ID_MES, L_ID_PERSONA, L_GLOSA, l_id_cliente  from caja_deposito
            where id_deposito=P_ID_DEPOSITO;

            if L_ID_ENTIDAD = 7124 and L_ID_DEPTO = '7' then
                l_id_tipoasiento := 'MBL';
            end if;
            
            if L_ID_ENTIDAD = 7124 and L_ID_DEPTO = '4' then 
                l_id_tipoasiento := 'MBC';
            end if;
           
           --obteniendo el id_tipopais
	       	SELECT A.ID_TIPOPAIS INTO STRICT l_id_tipopais FROM CONTA_EMPRESA A,CONTA_ENTIDAD B
			WHERE A.ID_EMPRESA = B.ID_EMPRESA AND B.ID_ENTIDAD = L_ID_ENTIDAD  LIMIT 1; --Agregado por Ulices
			--obteniendo el id_comprobante con el codigo '00' de deposito
			SELECT ID_COMPROBANTE INTO STRICT l_id_comprobante FROM TIPO_COMPROBANTE WHERE ID_TIPOPAIS = l_id_tipopais AND CODIGO = '00'; --Agregado por Ulices
			
           
            --obtiene numero y serie y actualiza correlativo
           --========================= CONFIG TO VISA ONLINE=====================================
            IF L_ID_PERSONA = 2 THEN  -- USUARIO VISA ONLINE
            	SELECT COUNT(1), max(id_documento) INTO STRICT l_contar, l_id_documento_fin FROM FIN_DOCUMENTO_DEPTO
		        WHERE ID_ENTIDAD = L_ID_ENTIDAD
		        AND ID_DEPTO = L_ID_DEPTO
		        AND ID_COMPROBANTE = l_id_comprobante;
           		CALL pkg_sales_sp_obtener_serie_numero_fijo(l_id_documento_fin,l_serie,l_correlativo);
           	
           		SELECT ID_PERSONA INTO STRICT L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
	      		WHERE ID_ENTIDAD = L_ID_ENTIDAD
	      		AND ID_DEPTO = L_ID_DEPTO;
            ELSE
           		pkg_sales_school_sp_obtener_serie_numero(L_ID_PERSONA,l_id_comprobante,L_ID_ENTIDAD,L_ID_DEPTO, l_serie,l_correlativo);
           		L_ID_PERSONA_V := L_ID_PERSONA;
            END IF;
            --========================= CONFIG TO VISA ONLINE=====================================
          
            -- Obtener voucher.
            CALL pkg_accounting_sp_crear_voucher(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,null, 'S', L_ID_PERSONA_V, l_id_voucher);

            update caja_deposito set estado = '1', SERIE = l_serie, NUMERO = l_correlativo, ID_VOUCHER = l_id_voucher
            where id_deposito=P_ID_DEPOSITO;


            if round((P_IMPORTE)::numeric,2)<>round((l_importedet)::numeric,2) then
                l_error:=1;
                l_msgerror:='Depósito: Importe depósito('||P_IMPORTE::text||') es diferente a la suma de importe de los documentos('||l_importedet::text||') pagados'||P_ID_DEPOSITO::text;
--                 goto salida_rapida;
            end if;

            l_importeasiento:=P_IMPORTE;

            if coalesce(P_IMPORTE_TARJETA,0)>0 then
                l_importeasiento:=0;
            end if;

            if coalesce(P_IMPORTE_TRANS,0)>0 then
                l_importeasiento:=0;
            end if;
            if l_error=0  then
               pkg_caja_school_sp_generar_asiento_deposito(P_ID_DEPOSITO,P_ID_DINAMICA,P_ID_DINAMICA_CLI_SALDO_INI,P_ID_CTABANCARIA,l_importeasiento,P_IMPORTE_TARJETA,P_IMPORTE_TRANS,L_GLOSA,l_error,l_msgerror);
               if L_ID_ENTIDAD <> 7124 then
                pkg_caja_school_sp_generar_asiento_inter_dep(P_ID_DEPOSITO);
               end if;
               
               JOSE.PKG_MATRICULA_OPERACIONES.SP_CONTRATO_SALDO_ANHO_ANT(l_id_cliente);
            end if;

            
          end if;

--           <<salida_rapida>>
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
          RAISE NOTICE 'error l_msgerror :%', l_msgerror;
          RAISE NOTICE 'error P_MSGERROR :%', P_MSGERROR;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_school_sp_finalizar_deposito (P_ID_DEPOSITO bigint,P_ID_DINAMICA bigint,P_ID_DINAMICA_CLI_SALDO_INI bigint, P_ID_CTABANCARIA bigint, P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_TRANS bigint, P_ERROR out bigint,P_MSGERROR out text) FROM PUBLIC;
