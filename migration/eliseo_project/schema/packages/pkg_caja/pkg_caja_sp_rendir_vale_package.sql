-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_rendir_vale (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        L_IMPORTE bigint;
        L_IMPORTE_ME bigint;

        -----------------------------------------
        -- DATOS DEL DETALLE
        L_PCOMPRA bigint;
        L_ORIGEN bigint;
        L_TIPOORIGEN bigint;
        L_ID_DINAMICA bigint;
        L_PROVEEDOR bigint;
        L_DETALLE varchar(100);
        L_DETALLE_IN varchar(50);
        --L_IMPORTE numeric(10,2);
        --L_IMPORTE_ME numeric(10,2);
        L_CORRELATIVO decimal(10,2);
        L_ES_CREDITO varchar(1);

        -- DATOS DE LA DINAMICA
        L_ID_ASIENTO bigint;
        L_ID_PARENT bigint;
        L_ID_TIPOPLAN bigint;
        L_ID_RESTRICCION varchar(50);
        L_ID_CUENTAAASI varchar(10);
        L_DC varchar(1);
        L_DESTINO varchar(1);
        L_ID_INDICADOR varchar(10);
        L_UNICO varchar(1);
        L_UNICOCTATE varchar(1);
        L_PORCENTAJE decimal(10,2);
        L_DESCRIPCION varchar(255);
        L_AGRUPA varchar(1);
        L_FONDO varchar(10);

        -- DATOS DEL VALE
        L_ID_VALE bigint;
        L_ID_ENTIDAD_PAGO bigint;
        L_ID_DEPTO_PAGO varchar(20);
        L_ID_VOUCHER_PAGO bigint;
        -- L_ID_ASIENTO numeric;
        -- L_ID_CTABANCARIA numeric;
        -- L_IMPORTE_VALE numeric;
        -- L_IMPORTE_ME_VALE numeric;
        -- Datos asiento vale
        L_ID_CUENTAAASI_DEBITO_VALE varchar(10);
        L_ID_CTACTE_DEBITO_VALE varchar(50);
        L_FONDO_DEBITO_VALE varchar(10);
        L_DEPTO_DEBITO_VALE varchar(10);
        L_RESTRICCION_DEBITO_VALE varchar(50);
        L_AGRUPA_DEBITO_VALE varchar(1);
        L_DESCRIPCION_DEBITO_VALE varchar(50);

        -- Other dates
        L_MEMO varchar(255);
        L_IMPORTEASIENTO decimal(10,2);
        L_IMPORTEASIENTO_ME decimal(10,2);
        L_DEPTO varchar(10);
        L_CUENTA_CTE varchar(50);
        L_CONT bigint;
        L_CONT_CUENTA_CTE bigint;

        CU_PAGO_COMPRAS CURSOR FOR
        SELECT
            A.ID_PCOMPRA, A.ID_PAGO, A.ID_TIPOORIGEN, A.ID_DINAMICA, A.ID_PROVEEDOR, SUBSTR(A.DETALLE,1,50), A.IMPORTE, A.IMPORTE_ME, C.CORRELATIVO, C.ES_CREDITO
        FROM CAJA_PAGO_COMPRA A
        INNER JOIN COMPRA C ON A.ID_COMPRA=C.ID_COMPRA
        WHERE A.ID_PAGO=P_ID_PAGO;

        CU_DINAMICA_ASIENTOS CURSOR FOR
        SELECT 
            A.ID_ASIENTO, A.ID_PARENT, A.ID_TIPOPLAN, A.ID_RESTRICCION, A.ID_CUENTAAASI, A.DC, A.DESTINO, A.ID_INDICADOR, A.UNICO, A.UNICO_CTACTE, A.PORCENTAJE,
            A.NOMBRE, A.AGRUPA, A.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO A
        WHERE A.ID_DINAMICA=L_ID_DINAMICA
        AND COALESCE(A.ID_PARENT,0)=0 
        ORDER BY A.NRO_ASIENTO, A.DC DESC;

        
        CU_PAGO_GASTO CURSOR FOR
        SELECT 
        ID_PGASTO, ID_DINAMICA, DETALLE, IMPORTE, IMPORTE_ME, FECHA, ID_TIPOORIGEN
        FROM CAJA_PAGO_GASTO WHERE ID_PAGO=P_ID_PAGO;
        -- Datos del gasto.
        L_ID_PGASTO bigint;
        L_ID_DINAMICA_GASTO bigint;
        L_DETALLE_GASTO varchar(50);
        L_IMPORTE_GASTO bigint;
        L_IMPORTE_ME_GASTO bigint;
        L_FECHA_GASTO timestamp(0);
        L_ID_TIPOORIGEN_GASTO bigint;
        -----------------------------------------
        
        -- l_id_pcompra numeric:=0;
        l_error bigint:=0;
        l_msgerror varchar(200):='';

BEGIN
    
        SELECT 
                coalesce(SUM(IMPORTE),0) IMPORTE,
                coalesce(SUM(IMPORTE_ME),0) IMPORTE_ME INTO STRICT L_IMPORTE,L_IMPORTE_ME
        FROM (
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_COMPRA
            WHERE ID_PAGO = P_ID_PAGO
            
UNION ALL

            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_GASTO
            WHERE ID_PAGO = P_ID_PAGO
        ) alias4;

        IF l_error=0 THEN
            
            IF (L_IMPORTE + L_IMPORTE_ME) > 0 THEN
                
                UPDATE CAJA_PAGO SET IMPORTE = L_IMPORTE, 
                                    IMPORTE_ME = L_IMPORTE_ME, 
                                    ESTADO = '1'
                WHERE ID_PAGO = P_ID_PAGO;

                -- OBTIENE DATOS DEL PAGO
                SELECT ID_VALE, ID_VOUCHER, ID_ENTIDAD, ID_DEPTO INTO STRICT L_ID_VALE, L_ID_VOUCHER_PAGO, L_ID_ENTIDAD_PAGO, L_ID_DEPTO_PAGO  FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;

                SELECT CUENTA, CUENTA_CTE, FONDO, DEPTO, RESTRICCION, AGRUPA, SUBSTR(DESCRIPCION,1, 49)AS DESCRIPCION
                INTO STRICT L_ID_CUENTAAASI_DEBITO_VALE, L_ID_CTACTE_DEBITO_VALE, L_FONDO_DEBITO_VALE, L_DEPTO_DEBITO_VALE, L_RESTRICCION_DEBITO_VALE, L_AGRUPA_DEBITO_VALE ,
                    L_DESCRIPCION_DEBITO_VALE
                    FROM CONTA_ASIENTO WHERE ID_ORIGEN = L_ID_VALE AND ID_TIPOORIGEN = 15 AND IMPORTE > 0  LIMIT 1;

                -- CURSOR DE LAS COMPRAS
                L_DETALLE := '';
                L_DETALLE_IN := '';
                OPEN CU_PAGO_COMPRAS;
                FETCH CU_PAGO_COMPRAS INTO L_PCOMPRA, L_ORIGEN, L_TIPOORIGEN, L_ID_DINAMICA, L_PROVEEDOR, L_DETALLE, L_IMPORTE, L_IMPORTE_ME, L_CORRELATIVO, L_ES_CREDITO;
                WHILE CU_PAGO_COMPRAS%FOUND LOOP
                    L_MEMO := L_TIPOORIGEN || '-' || L_ORIGEN;

                    OPEN CU_DINAMICA_ASIENTOS;
                    FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    WHILE CU_DINAMICA_ASIENTOS%FOUND LOOP

                        IF L_AGRUPA='S' THEN
                            L_DETALLE_IN := SUBSTR(L_ID_ENTIDAD_PAGO || '-' || L_DETALLE, 1,50);
                        ELSE
                            L_DETALLE_IN := SUBSTR( L_ID_ENTIDAD_PAGO || '-' || L_CORRELATIVO || '-' || L_DETALLE || '-' || SUBSTR(FC_NOMBRE_PERSONA(L_PROVEEDOR),1,100), 1,50);
                        END IF;

                        IF L_ID_INDICADOR='IMPORTE' THEN
                            L_IMPORTEASIENTO := (L_IMPORTE)*(L_PORCENTAJE);
                            L_IMPORTEASIENTO_ME := (L_IMPORTE_ME)*(L_PORCENTAJE);
                        ELSE
                            L_IMPORTEASIENTO := 0;
                            L_IMPORTEASIENTO_ME := 0;
                        END IF;

                        L_DEPTO:=null;
                        L_CUENTA_CTE:=null;
                        IF L_UNICO='U' THEN
                            SELECT ID_DEPTO INTO STRICT L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=L_ID_ENTIDAD_PAGO AND ID_ASIENTO=L_ID_ASIENTO;
                        ELSIF L_UNICO='X' THEN
                            SELECT FC_DEPTO_CLIENTE(L_PROVEEDOR) INTO STRICT L_DEPTO;
                        ELSIF L_UNICO='S' THEN  -- Si es sesi√≥n
                            L_DEPTO := L_ID_DEPTO_PAGO;
                        END IF;

                        IF L_ES_CREDITO = 'S' and L_DC <> 'C' THEN
                            SELECT pkg_caja_fc_ruc(L_PROVEEDOR) INTO STRICT L_CUENTA_CTE;
                        ELSE
                            IF L_UNICOCTATE='U' THEN
                                SELECT  count(*) INTO STRICT L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=L_ID_ENTIDAD_PAGO AND ID_ASIENTO=L_ID_ASIENTO;
                                IF L_CONT>0 THEN
                                    SELECT ID_CTACTE INTO STRICT L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=L_ID_ENTIDAD_PAGO AND ID_ASIENTO=L_ID_ASIENTO;
                                END IF;
                            ELSIF (L_UNICOCTATE='B') THEN
                                L_ID_CUENTAAASI := L_ID_CUENTAAASI_DEBITO_VALE;
                                L_CUENTA_CTE := L_ID_CTACTE_DEBITO_VALE;
                                L_DETALLE_IN := L_DESCRIPCION_DEBITO_VALE;
                                L_FONDO := L_FONDO_DEBITO_VALE;
                                L_DEPTO := L_DEPTO_DEBITO_VALE;
                                L_ID_RESTRICCION := L_RESTRICCION_DEBITO_VALE;
                            ELSIF (L_UNICOCTATE='X') THEN
                                SELECT pkg_caja_fc_ruc(L_PROVEEDOR) INTO STRICT L_CUENTA_CTE;
                            END IF;
                        END IF;

                        IF L_DC='C' THEN
                            L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                            L_IMPORTEASIENTO_ME:=L_IMPORTEASIENTO_ME*(-1);
                        END IF;

                            
                        SELECT COUNT(*) INTO STRICT L_CONT FROM CONTA_ASIENTO
                        WHERE ID_TIPOORIGEN=L_TIPOORIGEN
                        AND ID_ORIGEN=L_ORIGEN
                        AND COALESCE(DEPTO,'-') =COALESCE(L_DEPTO,'-')
                        AND CUENTA =L_ID_CUENTAAASI
                        AND COALESCE(CUENTA_CTE,'-')=COALESCE(L_CUENTA_CTE,'-')
                        AND CASE WHEN IMPORTE>0 THEN 'D' ELSE 'C' END=L_DC;

                        IF coalesce(L_IMPORTEASIENTO,0)+coalesce(L_IMPORTEASIENTO_ME,0) <>0 THEN
                            IF L_CONT=0 THEN
                                    INSERT INTO CONTA_ASIENTO(
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        L_TIPOORIGEN,
                                        L_PCOMPRA,
                                        L_FONDO,
                                        L_DEPTO,
                                        L_ID_CUENTAAASI,
                                        L_CUENTA_CTE,
                                        L_ID_RESTRICCION,
                                        L_IMPORTEASIENTO,
                                        L_IMPORTEASIENTO_ME,
                                        L_DETALLE_IN,
                                        L_MEMO,
                                        L_ID_VOUCHER_PAGO,
                                        null,
                                        NULL,
                                        l_agrupa
                                    );
                                ELSE
                                    update CONTA_ASIENTO set
                                    IMPORTE=L_IMPORTEASIENTO,
                                    IMPORTE_ME=L_IMPORTEASIENTO_ME
                                    where ID_TIPOORIGEN=L_TIPOORIGEN
                                    and ID_ORIGEN=L_ORIGEN
                                    and coalesce(DEPTO,'-') =coalesce(L_DEPTO,'-')
                                    and CUENTA =L_ID_CUENTAAASI
                                    and coalesce(CUENTA_CTE,'-')=coalesce(L_CUENTA_CTE,'-')
                                    and case when IMPORTE>0 then 'D' else 'C' end=L_DC;
                                END IF;
                        END IF;

                        FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO,L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    END LOOP;
                    CLOSE CU_DINAMICA_ASIENTOS;

                    FETCH CU_PAGO_COMPRAS INTO L_PCOMPRA, L_ORIGEN, L_TIPOORIGEN, L_ID_DINAMICA, L_PROVEEDOR, L_DETALLE, L_IMPORTE, L_IMPORTE_ME, L_CORRELATIVO, L_ES_CREDITO;
                END LOOP;
                CLOSE CU_PAGO_COMPRAS;

                -- CURSOR DE LOS GASTOS
                OPEN CU_PAGO_GASTO;
                FETCH CU_PAGO_GASTO INTO L_ID_PGASTO, L_ID_DINAMICA_GASTO, L_DETALLE_GASTO, L_IMPORTE_GASTO, L_IMPORTE_ME_GASTO, L_FECHA_GASTO, L_ID_TIPOORIGEN_GASTO;
                WHILE CU_PAGO_GASTO%FOUND LOOP

                    INSERT INTO CONTA_ASIENTO(
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )
                                    SELECT 
                                    L_ID_TIPOORIGEN_GASTO,
                                    L_ID_PGASTO,
                                    A.ID_FONDO,
                                    A.ID_DEPTO,
                                    A.ID_CUENTAAASI,
                                    A.ID_CTACTE,
                                    A.ID_RESTRICCION,
                                    A.IMPORTE,
                                    A.IMPORTE_ME,
                                    SUBSTR(L_ID_ENTIDAD_PAGO || '-' || L_ID_DEPTO_PAGO || '-[REN]-' || TO_CHAR(L_FECHA_GASTO, 'DD/MM/YYYY') || '-' || L_DETALLE_GASTO, 1,50),
                                    L_ID_TIPOORIGEN_GASTO || '-' || L_ID_PGASTO,
                                    L_ID_VOUCHER_PAGO,
                                    NULL,
                                    L_ID_PGASTO,
                                    'N'
                                    FROM CAJA_PAGO_GASTO_ASIENTO A WHERE A.ID_PGASTO=L_ID_PGASTO;

                    -- Cr√©dito del vale
                    INSERT INTO CONTA_ASIENTO(
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        L_ID_TIPOORIGEN_GASTO,
                                        L_ID_PGASTO,
                                        L_FONDO_DEBITO_VALE,
                                        L_DEPTO_DEBITO_VALE,
                                        L_ID_CUENTAAASI_DEBITO_VALE,
                                        L_ID_CTACTE_DEBITO_VALE,
                                        L_RESTRICCION_DEBITO_VALE,
                                        (L_IMPORTE_GASTO * -1),
                                        (L_IMPORTE_ME_GASTO * -1),
                                        --L_DESCRIPCION_DEBITO_VALE,
                                        SUBSTR(L_ID_ENTIDAD_PAGO || '-' || L_ID_DEPTO_PAGO || '-[REN]-' || TO_CHAR(L_FECHA_GASTO, 'DD/MM/YYYY') || '-' || L_DETALLE_GASTO, 1,50),
                                        L_ID_TIPOORIGEN_GASTO || '-' || L_ID_PGASTO,
                                        L_ID_VOUCHER_PAGO,
                                        NULL,
                                        L_ID_PGASTO,
                                        'S'
                                    );
                            
                FETCH CU_PAGO_GASTO INTO L_ID_PGASTO, L_ID_DINAMICA_GASTO, L_DETALLE_GASTO, L_IMPORTE_GASTO, L_IMPORTE_ME_GASTO, L_FECHA_GASTO, L_ID_TIPOORIGEN_GASTO;
                END LOOP;
                CLOSE CU_PAGO_GASTO;
            ELSE
                P_ERROR := 0;
                P_MSGERROR := 'Error, la suma del importe de los items es cero(0).';
            END IF;

        END IF;

        
        P_ERROR := 0;
        P_MSGERROR := 'Generaci√≥n de asientos del vale rendido con exito.';
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_rendir_vale (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
