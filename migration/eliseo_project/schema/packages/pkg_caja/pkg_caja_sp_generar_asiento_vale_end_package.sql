-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_generar_asiento_vale_end (P_ID_VALE bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


        l_cont bigint:=0;
        l_error bigint:=0;
        l_msgerror varchar(200):='';

        L_ID_TIPOORIGEN decimal(10,2);
        L_ID_VOUCHER bigint;
        l_memo varchar(255);

        vale_asiento_cursor CURSOR FOR
        SELECT ID_ASIENTO, ID_VALE, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO,
		ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, AGRUPA 
		FROM CAJA_VALE_ASIENTO cva WHERE ID_VALE =P_ID_VALE;


BEGIN
        
	    	-- Obtener datos del vale
        	SELECT ID_TIPOORIGEN, ID_VOUCHER INTO STRICT
                L_ID_TIPOORIGEN, L_ID_VOUCHER FROM CAJA_VALE WHERE ID_VALE=P_ID_VALE;
          	
            -- Eliminarmos todo los asiento generados para esta operaci√≥n
            DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN= L_ID_TIPOORIGEN
            	AND ID_ORIGEN=P_ID_VALE;
		    
            FOR c_avale in vale_asiento_cursor
            LOOP
            BEGIN
	           
	            l_memo := L_ID_TIPOORIGEN || '-' || P_ID_VALE;
	
	            INSERT INTO CONTA_ASIENTO(
                ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE,
                RESTRICCION, IMPORTE, IMPORTE_ME, DESCRIPCION,
                MEMO, VOUCHER, PARENT_ID,
                REF_ID, AGRUPA
                )VALUES ( 
                L_ID_TIPOORIGEN, P_ID_VALE, c_avale.id_fondo, c_avale.id_depto, c_avale.id_cuentaaasi, c_avale.id_ctacte,
                c_avale.id_restriccion, c_avale.importe, c_avale.importe_me, c_avale.descripcion,
                l_memo, L_ID_VOUCHER, null,
                P_ID_VALE, c_avale.agrupa
                );

                --end if;
                END;
            END LOOP;

--         <<salida_rapida>>
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_generar_asiento_vale_end (P_ID_VALE bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
