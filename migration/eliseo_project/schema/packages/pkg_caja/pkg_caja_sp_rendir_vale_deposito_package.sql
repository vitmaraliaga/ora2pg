-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_rendir_vale_deposito (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_VALE bigint,P_ID_MEDIOPAGO text,P_ID_VOUCHER bigint,P_ID_PERSONA bigint,P_ID_CLIENTE bigint, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_ID_DINAMICA bigint,P_ID_ANHO bigint,P_ID_MES bigint, P_SERIE text, P_NUMERO text, P_FECHA timestamp(0), P_IMPORTE bigint, P_IMPORTE_ME bigint, P_TIPO_CAMBIO bigint, P_GLOSA text, P_ID_DEPOSITO INOUT bigint, P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


        L_IMPORTE bigint;
        L_IMPORTE_ME bigint;
        -- Datos asiento vale
        L_ID_CUENTAAASI_DEBITO_VALE varchar(10);
        L_ID_CTACTE_DEBITO_VALE varchar(50);
        L_FONDO_DEBITO_VALE varchar(10);
        L_DEPTO_DEBITO_VALE varchar(10);
        L_RESTRICCION_DEBITO_VALE varchar(50);
        L_AGRUPA_DEBITO_VALE varchar(1);
        L_DESCRIPCION_DEBITO_VALE varchar(50);

        -- DATOS DE LA DINAMICA
        L_ID_ASIENTO bigint;
        L_ID_PARENT bigint;
        L_ID_TIPOPLAN bigint;
        L_ID_RESTRICCION varchar(50);
        L_ID_CUENTAAASI varchar(10);
        L_DC varchar(1);
        L_DESTINO varchar(1);
        L_ID_INDICADOR varchar(10);
        L_UNICO varchar(1);
        L_UNICOCTATE varchar(1);
        L_PORCENTAJE decimal(10,2);
        L_DESCRIPCION varchar(255);
        L_AGRUPA varchar(1);
        L_FONDO varchar(10);

         -- Other dates
        L_MEMO varchar(255);
        L_IMPORTEASIENTO decimal(10,2);
        L_IMPORTEASIENTO_ME decimal(10,2);
        L_DEPTO varchar(10);
        L_CUENTA_CTE varchar(50);
        L_CONT bigint;
        L_CONT_CUENTA_CTE bigint;
        L_DETALLE_IN varchar(50);

        -- DATOS DEL DEPOSITO
        L_ID_TIPOORIGEN bigint;

        CU_DINAMICA_ASIENTOS CURSOR FOR
        SELECT 
            A.ID_ASIENTO, A.ID_PARENT, A.ID_TIPOPLAN, A.ID_RESTRICCION, A.ID_CUENTAAASI, A.DC, A.DESTINO, A.ID_INDICADOR, A.UNICO, A.UNICO_CTACTE, A.PORCENTAJE,
            A.NOMBRE, A.AGRUPA, A.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO A
        WHERE A.ID_DINAMICA=P_ID_DINAMICA
        AND COALESCE(A.ID_PARENT,0)=0 
        ORDER BY A.NRO_ASIENTO, A.DC DESC;

        l_id_deposito bigint:=0;
        l_error bigint:=0;
        l_msgerror varchar(200):='';

        
BEGIN
        
        IF P_ID_MONEDA = 7 THEN 
            L_IMPORTE := P_IMPORTE;
            L_IMPORTE_ME := P_IMPORTE_ME;
        ELSE
            L_IMPORTE := P_IMPORTE * P_TIPO_CAMBIO;
            L_IMPORTE_ME := P_IMPORTE_ME * P_TIPO_CAMBIO;
        END IF;

        --l_msgerror:=P_ID_DEPOSITO;
        --l_error:=1;
        IF l_error = 0 THEN
            IF P_ID_DEPOSITO = 0 THEN 
                -- select coalesce(max(ID_DEPOSITO),0)+1 into l_id_deposito from CAJA_DEPOSITO;
                INSERT INTO CAJA_DEPOSITO(
                  --ID_DEPOSITO, 
                  ID_ENTIDAD, 
                  ID_DEPTO, 
                  ID_ANHO, 
                  ID_MES, 
                  ID_VOUCHER, 
                  ID_MEDIOPAGO, 
                  ID_PERSONA, 
                  ID_CLIENTE, 
                  ID_TIPOTRANSACCION,
                  ID_MONEDA,
                  ID_DINAMICA,
                  SERIE,
                  NUMERO,
                  FECHA,
                  IMPORTE, 
                  IMPORTE_ME,
                  TIPOCAMBIO,
                  GLOSA, 
                  --NOMBRE_DEP, 
                  --DOCUMENTO_DEP,
                  ESTADO,
                  --ID_TIPOORIGEN,
                  ID_VALE
                )VALUES (
                  --l_id_deposito, 
                  P_ID_ENTIDAD, 
                  P_ID_DEPTO, 
                  P_ID_ANHO, 
                  P_ID_MES, 
                  P_ID_VOUCHER, 
                  P_ID_MEDIOPAGO, 
                  P_ID_PERSONA, 
                  P_ID_CLIENTE, 
                  P_ID_TIPOTRANSACCION,
                  P_ID_MONEDA,
                  P_ID_DINAMICA,
                  P_SERIE, -- No estoy seguro si esto se genera por default.
                  P_NUMERO, -- No estoy seguro si esto se genera por default.
                  P_FECHA,
                  L_IMPORTE, 
                  L_IMPORTE_ME,
                  P_TIPO_CAMBIO,
                  P_GLOSA, 
                  --SUBSTR(P_NOMBRE_DEP,0,50), 
                  --P_DOCUMENTO_DEP,
                  '1',
                  P_ID_VALE
                );
                select coalesce(max(ID_DEPOSITO),0) into STRICT l_id_deposito from CAJA_DEPOSITO;
                --P_ID_DEPOSITO := l_id_deposito;
            ELSE
                UPDATE CAJA_DEPOSITO
                SET  ID_MONEDA = P_ID_MONEDA
                  ,ID_DINAMICA = P_ID_DINAMICA
                  --, SERIE = l_serie,
                  --, NUMERO = l_numero,
                  --, FECHA = l_fecha,
                  , IMPORTE = L_IMPORTE 
                  , IMPORTE_ME = L_IMPORTE_ME
                  , TIPOCAMBIO = P_TIPO_CAMBIO
                  , GLOSA = P_GLOSA
                  -- , NOMBRE_DEP = SUBSTR(P_NOMBRE_DEP,0,50) 
                  -- , DOCUMENTO_DEP = P_DOCUMENTO_DEP
                  -- , ESTADO = 1
                WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                l_id_deposito := P_ID_DEPOSITO;
            END IF;

            --Generar asientos
            IF (coalesce(L_IMPORTE,0) + coalesce(L_IMPORTE_ME,0)) > 0 THEN
                
                -- OBTIENE DATOS DEL DEPOSITO.
                SELECT ID_TIPOORIGEN INTO STRICT L_ID_TIPOORIGEN  FROM CAJA_DEPOSITO WHERE ID_DEPOSITO = l_id_deposito;

                -- Traer los asientos del vale.
                SELECT CUENTA, CUENTA_CTE, FONDO, DEPTO, RESTRICCION, AGRUPA, SUBSTR(DESCRIPCION,1, 49)AS DESCRIPCION
                INTO STRICT L_ID_CUENTAAASI_DEBITO_VALE, L_ID_CTACTE_DEBITO_VALE, L_FONDO_DEBITO_VALE, L_DEPTO_DEBITO_VALE, L_RESTRICCION_DEBITO_VALE, L_AGRUPA_DEBITO_VALE ,
                    L_DESCRIPCION_DEBITO_VALE
                    FROM CONTA_ASIENTO WHERE ID_ORIGEN = P_ID_VALE AND ID_TIPOORIGEN = 15 AND IMPORTE > 0  LIMIT 1;

                OPEN CU_DINAMICA_ASIENTOS;
                    FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    WHILE CU_DINAMICA_ASIENTOS%FOUND LOOP

                        L_DETALLE_IN := SUBSTR(P_ID_ENTIDAD || '-' || P_ID_DEPTO || '-[DEP]-' || P_GLOSA, 1,50);
                        L_MEMO := L_ID_TIPOORIGEN || '-' || l_id_deposito;

                        IF L_ID_INDICADOR='IMPORTE' THEN
                            L_IMPORTEASIENTO := (L_IMPORTE)*(L_PORCENTAJE);
                            L_IMPORTEASIENTO_ME := (L_IMPORTE_ME)*(L_PORCENTAJE);
                        ELSE
                            L_IMPORTEASIENTO := 0;
                            L_IMPORTEASIENTO_ME := 0;
                        END IF;

                        L_DEPTO:=null;
                        L_CUENTA_CTE:=null;
                        IF L_UNICO='U' THEN
                            SELECT ID_DEPTO INTO STRICT L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                        ELSIF L_UNICO='S' THEN  -- Si es sesiÃ³n
                            L_DEPTO := P_ID_DEPTO;
                        end if;

                        IF L_UNICOCTATE='U' THEN
                            SELECT  count(*) INTO STRICT L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                            IF L_CONT>0 THEN
                                SELECT ID_CTACTE INTO STRICT L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                            END IF;
                        ELSIF (L_UNICOCTATE='X') THEN
                            L_ID_CUENTAAASI := L_ID_CUENTAAASI_DEBITO_VALE;
                            L_CUENTA_CTE := L_ID_CTACTE_DEBITO_VALE;
                            --L_DETALLE_IN := L_DESCRIPCION_DEBITO_VALE;
                            L_FONDO := L_FONDO_DEBITO_VALE;
                            L_DEPTO := L_DEPTO_DEBITO_VALE;
                            L_ID_RESTRICCION := L_RESTRICCION_DEBITO_VALE;
                        END IF;
                                
                        IF L_DC='C' THEN
                            L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                            L_IMPORTEASIENTO_ME:=L_IMPORTEASIENTO_ME*(-1);
                        END IF;

                            
                        SELECT COUNT(*) INTO STRICT L_CONT FROM CONTA_ASIENTO
                        WHERE ID_TIPOORIGEN=L_ID_TIPOORIGEN
                        AND ID_ORIGEN=l_id_deposito
                        AND COALESCE(DEPTO,'-') =COALESCE(L_DEPTO,'-')
                        AND CUENTA =L_ID_CUENTAAASI
                        AND COALESCE(CUENTA_CTE,'-')=COALESCE(L_CUENTA_CTE,'-')
                        AND CASE WHEN IMPORTE>0 THEN 'D' ELSE 'C' END=L_DC;

                        IF coalesce(L_IMPORTEASIENTO,0)+coalesce(L_IMPORTEASIENTO_ME,0) <>0 THEN
                            IF L_CONT=0 THEN
                                    INSERT INTO CONTA_ASIENTO(
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        L_ID_TIPOORIGEN,
                                        l_id_deposito,
                                        L_FONDO,
                                        L_DEPTO,
                                        L_ID_CUENTAAASI,
                                        L_CUENTA_CTE,
                                        L_ID_RESTRICCION,
                                        L_IMPORTEASIENTO,
                                        L_IMPORTEASIENTO_ME,
                                        L_DETALLE_IN,
                                        L_MEMO,
                                        P_ID_VOUCHER,
                                        null,
                                        l_id_deposito,
                                        l_agrupa
                                    );
                                ELSE
                                    update CONTA_ASIENTO set
                                    IMPORTE=L_IMPORTEASIENTO,
                                    IMPORTE_ME=L_IMPORTEASIENTO_ME
                                    where ID_TIPOORIGEN=L_ID_TIPOORIGEN
                                    and ID_ORIGEN=l_id_deposito
                                    and coalesce(DEPTO,'-') =coalesce(L_DEPTO,'-')
                                    and CUENTA =L_ID_CUENTAAASI
                                    and coalesce(CUENTA_CTE,'-')=coalesce(L_CUENTA_CTE,'-')
                                    and case when IMPORTE>0 then 'D' else 'C' end=L_DC;
                                END IF;
                        END IF;

                        FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO,L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    END LOOP;
                    CLOSE CU_DINAMICA_ASIENTOS;

            END IF;

        END IF;
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
        P_ID_DEPOSITO := l_id_deposito;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_rendir_vale_deposito (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_VALE bigint,P_ID_MEDIOPAGO text,P_ID_VOUCHER bigint,P_ID_PERSONA bigint,P_ID_CLIENTE bigint, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_ID_DINAMICA bigint,P_ID_ANHO bigint,P_ID_MES bigint, P_SERIE text, P_NUMERO text, P_FECHA timestamp(0), P_IMPORTE bigint, P_IMPORTE_ME bigint, P_TIPO_CAMBIO bigint, P_GLOSA text, P_ID_DEPOSITO INOUT bigint, P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
