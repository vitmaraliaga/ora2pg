-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_generar_asiento_deposito (P_ID_DEPOSITO bigint,P_ID_DINAMICA bigint,P_ID_CTABANCARIA bigint,P_IMPORTE bigint,P_IMPORTE_TARJETA bigint ,P_IMPORTE_TRANS bigint,P_DETALLE text,P_ERROR OUT bigint,P_MSGERROR out text,P_DEP_B text default null) AS $body$
DECLARE


        l_dinamica bigint;
        l_asiento bigint;
        l_detalle varchar(200);
        l_base decimal(10,2);
        l_igv decimal(10,2);
        l_descuento decimal(10,2);
        l_importe decimal(10,2);
        l_precio_alm decimal(10,2);
        l_ctas varchar(200);
        l_deptos varchar(200);
        l_ctates varchar(200);

        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;

        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_porcentaje decimal(10,2);
        l_unicoctate varchar(1);

        l_id_asientod bigint;
        l_id_tipopland bigint;
        l_id_restricciond varchar(50);
        l_id_cuentaaasid varchar(10);
        l_dcd varchar(1);
        l_id_indicadord  varchar(35);
        l_unicod varchar(1);
        l_porcentajed decimal(10,2);
        l_unicoctated varchar(1);

        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_fondo varchar(10);
        l_importeasiento decimal(10,2);
        l_importe_tarjeta decimal(10,2);
        l_importe_trans decimal(10,2);
        l_descripcion varchar(255);
        l_memo varchar(255);
        l_voucher bigint;
        l_id_depto_deposito varchar(20);
        l_ref_id varchar(100);

        l_id_entidad bigint;
        l_buscar bigint;

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        --l_id_operorigen numeric:=5;
        l_id_tipoorigen bigint;
        l_serie varchar(5);
        l_numero varchar(15);

        --validacion
        l_contar bigint;
        l_debito decimal(10,2);
        l_credito decimal(10,2);
        l_cont bigint;
        l_id_cliente bigint;
        l_agrupa varchar(1);
        /*
        l_cont numeric;
        l_serie varchar(5);
        l_numero varchar(15);
        l_fecha timestamp;
        */
        L_CC varchar(8);
        L_DIA bigint;
        l_esanonima varchar(1);
        l_id_moneda bigint;
        l_importeasiento_me decimal(10,2);
        l_importe_me decimal(10,2);

        cdet CURSOR FOR	
        SELECT  ID_DINAMICA,ID_ENTIDAD
        FROM CONTA_DINAMICA 
        WHERE ID_DINAMICA=P_ID_DINAMICA;

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0  
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        casides CURSOR FOR		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;


BEGIN
     
        l_detalle:=P_DETALLE;
        l_importe:= P_IMPORTE;
        l_importe_tarjeta:=P_IMPORTE_TARJETA;
        l_importe_trans:=P_IMPORTE_TRANS;
        l_fondo:='10';

        --VALIDA EL TIPO DE PAGO PARA GENERAR EL ASIENTO
        IF P_IMPORTE > 0 THEN  --PAGO CON EFECTIVO
            l_importe_tarjeta := 0;
            l_importe_trans :=0;
        ELSIF P_IMPORTE_TARJETA > 0 THEN  --PAGO CON TARJETA
            l_importe := 0;
            l_importe_trans :=0;
        ELSE  --PAGO A CUENTA PERSONAL
             l_importe := 0;
            l_importe_tarjeta :=0;
        END IF;

        if (P_ID_DEPOSITO IS NOT NULL AND P_ID_DEPOSITO::text <> '') then
            IF P_DEP_B = 'S' THEN 
                SELECT COUNT(1) INTO STRICT l_cont FROM CAJA_DEPOSITO_BANCO WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN
                    SELECT ID_DEPTO, ID_VOUCHER, ID_TIPOORIGEN, '-' AS SERIE, OPERACION AS NUMERO into STRICT l_id_depto_deposito, l_voucher,l_id_tipoorigen, l_serie, l_numero
                    FROM CAJA_DEPOSITO_BANCO
                    WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                END IF;
            ELSE
                SELECT COUNT(1) INTO STRICT l_cont FROM CAJA_DEPOSITO  WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN
                    select ID_DEPTO, ID_CLIENTE,ID_VOUCHER, ID_TIPOORIGEN, SERIE, NUMERO,IMPORTE_ME into STRICT l_id_depto_deposito, l_id_cliente,l_voucher,l_id_tipoorigen, l_serie, l_numero,l_importe_me
                    from CAJA_DEPOSITO 
                    WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                END IF;
            END IF;
            /*
            SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO  WHERE ID_DEPOSITO = P_ID_DEPOSITO;
            IF l_cont > 0 THEN 
                select ID_DEPTO, ID_CLIENTE,ID_VOUCHER, ID_TIPOORIGEN, SERIE, NUMERO into l_id_depto_deposito, l_id_cliente,l_voucher,l_id_tipoorigen, l_serie, l_numero
                from CAJA_DEPOSITO 
                WHERE ID_DEPOSITO = P_ID_DEPOSITO;
            ELSE
                SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO_BANCO WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN 
                    SELECT ID_DEPTO, ID_VOUCHER, ID_TIPOORIGEN, '-' AS SERIE, OPERACION AS NUMERO into l_id_depto_deposito, l_voucher,l_id_tipoorigen, l_serie, l_numero
                    FROM CAJA_DEPOSITO_BANCO
                    WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                END IF;
            END IF;*/
            --IDENTIFICO EL CENTRO DEL COSTO DEL PERSONAL
            SELECT COUNT(1) INTO STRICT l_cont
            FROM CAJA_DEPOSITO A JOIN APS_TRABAJADOR B
            ON A.ID_CLIENTE = B.ID_PERSONA
            WHERE A.ID_DEPOSITO = P_ID_DEPOSITO
            AND A.ID_MEDIOPAGO = '999';
            IF l_cont > 0 THEN
                SELECT SUBSTR(B.ID_DEPTO,1,1) INTO STRICT L_CC
                FROM CAJA_DEPOSITO A JOIN APS_TRABAJADOR B
                ON A.ID_CLIENTE = B.ID_PERSONA
                WHERE A.ID_DEPOSITO = P_ID_DEPOSITO
                AND A.ID_MEDIOPAGO = '999';
            END IF;
        end if;
        IF coalesce(l_voucher::text, '') = '' OR l_voucher = 0 THEN
            l_error :=1;
            l_msgerror:='No existe Voucher-'||P_ID_DEPOSITO;
            --goto salida_rapida;
        END IF;

        SELECT l_id_tipoorigen::text || '-' || P_ID_DEPOSITO::text INTO STRICT l_memo;

        --l_detalle := '(Dep: '|| COALESCE(l_serie,'-') || '-' || COALESCE(l_numero,'-') || ') ' || l_detalle;
        
     --OBTIENE DATOS DE LA VENTA
      --select ID_ENTIDAD,SERIE,NUMERO,FECHA,ID_CLIENTE into l_id_entidad,l_serie,l_numero,l_fecha,l_id_cliente from VENTA where ID_VENTA=P_ID_VENTA;
     --DETALLE
        OPEN cdet;
        FETCH cdet INTO l_dinamica,l_id_entidad;

        WHILE cdet%FOUND LOOP

            ---DENAMICA ASIENTO
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
            WHILE casi%FOUND LOOP

                select (case when l_id_indicador='IMPORTE' then (l_importe)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then (l_importe_tarjeta)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TRANS' then (l_importe_trans)*(l_porcentaje)
                          else
                          0
                          end),
                        (case when l_id_indicador='IMPORTE' then (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TRANS' then (l_importe_me)*(l_porcentaje)
                          else
                          0
                          end) into STRICT l_importeasiento,l_importeasiento_me
;

                l_depto:=null;
                l_cuenta_cte:=null;

                if l_importeasiento<>0 then
                
                    if l_unico='U' then
                      select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif (l_unico='M') then
                       SELECT position('|' in l_deptos) into STRICT l_buscar;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                         select FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into STRICT l_depto;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif (l_unico='X') then
                       select FC_DEPTO_CLIENTE(l_id_cliente) into STRICT l_depto;
                    elsif l_unico='S' THEN  -- Si es sesiÃ³n
                        l_depto := l_id_depto_deposito;
                    end if;

                    if l_unicoctate='U' then
                      
                      
                      --IMPORTAR DEPOSITO
                        SELECT COUNT(1) into STRICT l_cont FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                        IF l_cont > 0 THEN
                            if l_dc = 'D' then
                                SELECT ID_MONEDA,ES_ANONIMA into STRICT l_id_moneda,l_esanonima FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                IF l_esanonima = 'S' THEN
                                    SELECT ID_CUENTAAASI,ID_TIPOCTACTE INTO STRICT l_id_cuentaaasi,l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                ELSE
                                    SELECT ID_TIPOCTACTE into STRICT l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                END IF;
                                if l_id_moneda = 9 then
                                    SELECT ID_CUENTAAASI INTO STRICT l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                end if;
                            end if;
                        END IF;
                        IF coalesce(l_cuenta_cte::text, '') = '' THEN
                            select  count(1) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        END IF;
                      --LO COMENTÃ TODO IVA A UNA CTA DE BANCO
                      --if l_cont>0 then
                        --select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                      --end if;
                    elsif (l_unicoctate='M') then
                       SELECT position('|' in l_ctates) into STRICT l_buscar;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                         select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into STRICT l_cuenta_cte;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif (l_unicoctate='X') then
                        select COUNT(1) into STRICT l_cont from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;
                        IF l_cont > 0 THEN
                            select MIN(NUM_DOCUMENTO) into STRICT l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;
                        ELSE
                            SELECT COUNT(1) into STRICT l_cont  FROM MOISES.VW_PERSONA_NATURAL WHERE ID_PERSONA=l_id_cliente AND ID_TIPODOCUMENTO = 4;
                            IF l_cont > 0 THEN
                                SELECT NUM_DOCUMENTO INTO STRICT l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL WHERE ID_PERSONA=l_id_cliente AND ID_TIPODOCUMENTO = 4;
                            ELSE
                                SELECT COUNT(1) into STRICT l_cont FROM MOISES.VW_PERSONA_JURIDICA WHERE ID_PERSONA=l_id_cliente;
                                IF l_cont > 0 THEN
                                    SELECT ID_RUC INTO STRICT l_cuenta_cte FROM MOISES.VW_PERSONA_JURIDICA WHERE ID_PERSONA=l_id_cliente;
                                END IF;
                            END IF;
                        END IF;
                    elsif (l_unicoctate='B') then --LA CTA CTE SE OBTIENE DEL LA CTA BANCARIA
                        SELECT ID_TIPOCTACTE into STRICT l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                    end if;
                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                      l_importeasiento_me:=l_importeasiento_me*(-1);
                    end if;

                    select count(1) into STRICT l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_DEPOSITO
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;

                    --== LA CUENTA 1135001 SOLO ES PARA SEDE, PARA LOS CENTROS DE COSTO ES LA CTA PUENTE
                    SELECT (TO_CHAR(clock_timestamp(),'DD'))::numeric  INTO STRICT L_DIA;
                    IF L_DIA < 25 THEN
                        IF (L_CC = '2' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '21010101';
                            l_depto := '11010101';
                        ELSIF (L_CC = '3' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '31010101';
                            l_depto := '11010101';
                        ELSIF (L_CC = '4' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '41010101';
                            l_depto := '11010101';
                        ELSE
                            l_cont := 0;
                        END IF;
                    ELSE  --VENTAS AL CREDITO A PARTIR DEL 26
                        IF l_id_cuentaaasi = '1135001' THEN
                            l_id_cuentaaasi := '1139090';
                            l_cuenta_cte := '21';
                            l_depto := '11010101';
                        END IF;
                    END IF;

                  if l_cont=0 then
                    INSERT INTO CONTA_ASIENTO(
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA,
                    IMPORTE_ME
                    )VALUES ( 
                    l_id_tipoorigen,
                    P_ID_DEPOSITO,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    l_detalle,
                    l_memo,
                    l_voucher,
                    null,
                    l_ref_id ,
                    l_agrupa,
                    l_importeasiento_me
                    );
                  else

                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento,IMPORTE_ME = IMPORTE_ME+l_importeasiento_me
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_DEPOSITO
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;

                  end if;
                end if;
                  --DESTINO
                  OPEN casides;
                  FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  WHILE casides%FOUND LOOP

                  
                    select (case when l_id_indicadord='IMPORTE' then (l_importe)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TARJETA' then (l_importe_tarjeta)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TRANS' then (l_importe_trans)*(l_porcentaje)
                          else
                          0
                          end),
                        (case when l_id_indicador='IMPORTE' then (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TRANS' then (l_importe_me)*(l_porcentaje)
                          else
                          0
                          end) into STRICT l_importeasiento,l_importeasiento_me
;

                    l_depto:=null;
                    l_cuenta_cte:=null;

                    if l_unicod='U' then
                      select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                    elsif (l_unicod='M') then
                       SELECT position('|' in l_deptos) into STRICT l_buscar;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                         select FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into STRICT l_depto;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif (l_unicod='X') then
                       select FC_DEPTO_CLIENTE(l_id_cliente) into STRICT l_depto;
                    end if;

                    if l_unicoctated='U' then
                      select  count(*) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      if l_cont>0 then
                        select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      end if;

                    elsif (l_unicoctated='M') then
                       SELECT position('|' in l_ctates) into STRICT l_buscar;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                         select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into STRICT l_cuenta_cte;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif (l_unicoctated='X') then
                      select NUM_DOCUMENTO into STRICT l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                    end if;

                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    if l_importeasiento<>0 then

                      select count(*) into STRICT l_cont from CONTA_ASIENTO
                      where ID_TIPOORIGEN=l_id_tipoorigen
                      and ID_ORIGEN=P_ID_DEPOSITO
                      and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                      and CUENTA =l_id_cuentaaasid
                      and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                      and case when importe>0 then 'D' else 'C' end=l_dc;

                    
                      IF l_agrupa='S' and l_cont>0 THEN
                        update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento,IMPORTE_ME = IMPORTE_ME+l_importeasiento_me
                        where ID_TIPOORIGEN=l_id_tipoorigen
                        and ID_ORIGEN=P_ID_DEPOSITO
                        and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                        and CUENTA =l_id_cuentaaasid
                        and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                        and case when importe>0 then 'D' else 'C' end=l_dc;

                      ELSE
                        INSERT INTO CONTA_ASIENTO(
                        ID_TIPOORIGEN,
                        ID_ORIGEN, 
                        FONDO,
                        DEPTO,
                        CUENTA, 
                        CUENTA_CTE,
                        RESTRICCION,
                        IMPORTE,
                        DESCRIPCION,
                        MEMO,
                        VOUCHER, 
                        PARENT_ID,
                        REF_ID,
                        IMPORTE_ME
                        )VALUES ( 
                        l_id_tipoorigen,
                        P_ID_DEPOSITO,
                        l_fondo,
                        l_depto,
                        l_id_cuentaaasid,
                        l_cuenta_cte,
                        l_id_restricciond,
                        l_importeasiento,
                        l_detalle,
                        l_memo,
                        l_voucher,
                        null,
                        l_ref_id,
                        l_importeasiento_me
                        );
                      END IF;

                      
                    end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  END LOOP;
                  CLOSE casides;
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;

              END LOOP;
              CLOSE casi;

            FETCH cdet INTO l_dinamica,l_id_entidad;

        END LOOP;
        CLOSE cdet;
        
        
        select count(1) into STRICT l_contar from CONTA_ASIENTO
        where ID_TIPOORIGEN=l_id_tipoorigen
        and ID_ORIGEN=P_ID_DEPOSITO;

        if l_contar=0 then
          l_error:=3; --no se ha generado el asiento
          l_msgerror:='Asiento DepÃ³sito: No se ha generado el asiento';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into STRICT l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN=P_ID_DEPOSITO;

          if l_credito=0 or l_credito=0 then
             l_error:=4; --importe de debito o credito igual a cero
             l_msgerror:='Asiento DepÃ³sito: Importe de dÃ©bito o crÃ©dito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=5; --descuadre de asiento
              l_msgerror:='Asiento DepÃ³sito: Descuadre de asiento';
             end if;
          end if;

        end if;

       -- <<salida_rapida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_generar_asiento_deposito (P_ID_DEPOSITO bigint,P_ID_DINAMICA bigint,P_ID_CTABANCARIA bigint,P_IMPORTE bigint,P_IMPORTE_TARJETA bigint ,P_IMPORTE_TRANS bigint,P_DETALLE text,P_ERROR OUT bigint,P_MSGERROR out text,P_DEP_B text default null) FROM PUBLIC;
