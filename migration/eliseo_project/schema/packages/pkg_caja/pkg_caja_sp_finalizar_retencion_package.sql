-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_finalizar_retencion (P_ID_RETENCION bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        L_ID_ENTIDAD bigint;
        L_IMPORTE bigint;
        L_IMPORTE_ME bigint;
        L_ID_CTABANCARIA bigint;
        L_ID_DINAMICA bigint;
        L_CANT bigint;

        L_SERIE varchar(20):='';
        L_NRO_RETENCION varchar(50):='';
        L_CUENTA_CORRIENTE varchar(50):='';
        L_ID_RETDETALLE bigint;
        L_IMPORTE_RET decimal(10,2);
        L_DETALLE varchar(50);
        L_PROVEEDOR varchar(50);

        /*CURSOR ret IS
        SELECT 
                B.ID_RETDETALLE,B.IMPORTE_RET,SUBSTR(B.DETALLE,1,50)
        FROM CAJA_RETENCION A JOIN CAJA_RETENCION_COMPRA B
        ON A.ID_RETENCION = B.ID_RETENCION
        WHERE A.ID_RETENCION = P_ID_RETENCION
        ORDER BY ID_RETDETALLE;*/
        
        
BEGIN
        
        SELECT coalesce(SUM(IMPORTE_RET),0),coalesce(SUM(IMPORTE_RET_ME),0) INTO STRICT L_IMPORTE, L_IMPORTE_ME
        FROM CAJA_RETENCION_COMPRA
        WHERE ID_RETENCION = P_ID_RETENCION;

        SELECT ID_ENTIDAD,ID_CTABANCARIA, SERIE, NRO_RETENCION,SUBSTR(FC_NOMBRE_PERSONA(ID_PROVEEDOR),1,20) INTO STRICT L_ID_ENTIDAD,L_ID_CTABANCARIA, L_SERIE, L_NRO_RETENCION, L_PROVEEDOR
        FROM CAJA_RETENCION
        WHERE ID_RETENCION = P_ID_RETENCION;

        IF (L_ID_CTABANCARIA IS NOT NULL AND L_ID_CTABANCARIA::text <> '') THEN 
            SELECT CUENTA_CORRIENTE INTO STRICT L_CUENTA_CORRIENTE  FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA=L_ID_CTABANCARIA;
        ELSE
            L_CUENTA_CORRIENTE := '';
        END IF;

        --IF L_ID_ENTIDAD = 7124 THEN
        SELECT COUNT(ID_DINAMICA) INTO STRICT L_CANT
        FROM CAJA_RETENCION_COMPRA
        WHERE ID_RETENCION = P_ID_RETENCION
        GROUP BY ID_DINAMICA;
        /*ELSE
            L_CANT := 1;
        END IF;*/
        
        -- DELETE ASIENTOS CONTABLES ANTERIORES
        DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN=12 AND ID_ORIGEN=P_ID_RETENCION;

        IF L_CANT >= 1 THEN
            SELECT ID_DINAMICA INTO STRICT L_ID_DINAMICA
            FROM CAJA_RETENCION_COMPRA
            WHERE ID_RETENCION = P_ID_RETENCION
            GROUP BY ID_DINAMICA;

            IF L_IMPORTE+L_IMPORTE_ME > 0 THEN
                UPDATE CAJA_RETENCION SET   IMPORTE = L_IMPORTE, 
                                            ESTADO = '1'
                WHERE ID_RETENCION = P_ID_RETENCION;

                UPDATE CAJA_RETENCION_COMPRA SET    ESTADO = '1'
                WHERE ID_RETENCION = P_ID_RETENCION;
                P_ERROR := 0;
                P_MSGERROR := 'La retención se finalizó con éxito.';
                if P_ERROR=0  then
                    P_ERROR := 0;
                       --pkg_caja_sp_generar_asiento_pago(P_ID_RETENCION,P_ERROR,P_MSGERROR);
                       --12 = ID_OPERORIGEN = RETENCION
                        --IF L_ID_ENTIDAD = 7124 THEN
                        CALL pkg_caja_sp_generar_asiento_ret_det(12,P_ID_RETENCION,L_ID_DINAMICA,L_ID_CTABANCARIA,L_IMPORTE,

                        SUBSTR((L_ID_ENTIDAD || '-' || L_SERIE || '-' || L_NRO_RETENCION || '-' ||L_PROVEEDOR||'-'||L_CUENTA_CORRIENTE || '-PAGO DE RETENCIONES'), 1, 50),
                        P_ERROR,P_MSGERROR);

                        --END IF;
                        
                        /*OPEN ret;
                        FETCH ret INTO L_ID_RETDETALLE,L_IMPORTE_RET,L_DETALLE;
                        WHILE ret%FOUND LOOP
                            pkg_caja_sp_generar_asiento_ret_det(12,L_ID_RETDETALLE,L_ID_DINAMICA,L_ID_CTABANCARIA,L_IMPORTE_RET,L_DETALLE,P_ERROR,P_MSGERROR);
                        FETCH ret INTO L_ID_RETDETALLE,L_IMPORTE_RET,L_DETALLE;
                        END LOOP;
                        CLOSE ret;*/
                end if;
            ELSE
                P_ERROR := 1;
                P_MSGERROR := 'Error Al finalizar retención, La suma del importe de los items es cero(0).';
            END IF;
        elsif (L_CANT = 0) THEN
            P_ERROR := 1;
            P_MSGERROR := 'Error al finalizar retención, No exite asiento para retenciones.';
        /*
        elsif (L_CANT > 1) THEN
            P_ERROR := 1;
            P_MSGERROR := 'ERROR AL FINALIZAR, HAY MAS DE UN ASIENTO PARA LA RETENCION';
            */
        END IF;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_finalizar_retencion (P_ID_RETENCION bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
