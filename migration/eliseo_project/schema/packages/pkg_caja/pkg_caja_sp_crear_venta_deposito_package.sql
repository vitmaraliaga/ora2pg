-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_venta_deposito (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_MEDIOPAGO text,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_ID_MONEDA bigint,P_ID_DINAMICA bigint, P_ID_TIPOTARJETA bigint,P_ID_CTABANCARIA bigint,P_OPERACION text,P_FECHA_OP timestamp(0),P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_ME bigint, P_GLOSA text,P_NOMBRE_DEP text,P_DOCUMENTO_DEP text,P_ID_EVENTO_PARTICIPANTE text,P_ID_CANAL integer DEFAULT NULL,P_ERROR OUT bigint,P_MSGERROR OUT text, P_ID_VENTA OUT bigint) AS $body$
DECLARE

        L_ID_ANHO bigint;
        L_ID_MES bigint;
        L_VENTAS varchar(100):=NULL;
        L_VENTAS_IMP varchar(100):=NULL;
        L_TIPO varchar(100):='V';
        L_ID_TIPOTRANSACCION bigint; ---POR DEFINIR
        L_CONTAR bigint:=0;
        L_FECHA timestamp(0);
        L_IMPORTE_ME bigint:=0;
        L_TIPOCAMBIO bigint:=0;
        L_GLOSA varchar(200);
        L_ID_TIPOASIENTO varchar(5) := 'MB';
        L_ID_TIPOVOUCHER bigint := 5;
        L_ID_TIPOTARJETA bigint;
        L_ID_DINAMICA_DEP bigint;
        L_SERIE_NUMERO varchar(30);
        P_COD_TARJETA   varchar(10);
        L_ID_COMPROBANTE varchar(20) := '03';
        L_ID_TIPOVENTA bigint :='6';--se puede obtener de la dinamica
        N_IMPORTE decimal(10,2):=0;
        N_IMPORTE_EFECTIVO decimal(10,2):=0;
        N_IMPORTE_TARJETA decimal(10,2):=0;
        N_IMPORTE_ME decimal(10,2):=0;
        L_IP varchar(50);
        L_ERROR bigint:=0;
        L_MSGERROR varchar(200):='';
        L_CANTIDAD decimal(10,2):=1;

    
BEGIN
        SELECT 
            (TO_CHAR(clock_timestamp(),'YYYY'))::numeric ,  (TO_CHAR(clock_timestamp(),'MM'))::numeric , clock_timestamp(), 'DEPÓSITO EVENTOS'
            INTO STRICT L_ID_ANHO, L_ID_MES, L_FECHA, L_GLOSA
;
        --voucher de venta
        SELECT COUNT(1) INTO STRICT L_CONTAR FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = L_ID_ANHO
        AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;

        IF L_CONTAR < 1 THEN
          L_ERROR:=1;
          L_MSGERROR:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
--           GOTO SALIDA_DEP_VNT;
        ELSIF L_CONTAR > 1 THEN
          L_ERROR:=1;
          L_MSGERROR:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||L_ID_ANHO::text;
--           GOTO SALIDA_DEP_VNT;
        END IF;

        SELECT ID_TIPOASIENTO INTO STRICT L_ID_TIPOASIENTO FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = L_ID_ANHO
        AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;

        SELECT COS_DENOMINACIONAL INTO STRICT L_TIPOCAMBIO FROM ELISEO.TIPO_CAMBIO
        WHERE ID_MONEDA=9 
        AND  FECHA =(
          SELECT MAX(FECHA) FROM ELISEO.TIPO_CAMBIO  WHERE ID_MONEDA=9 AND COALESCE(COS_DENOMINACIONAL,0)>0 
        );

        IF P_ID_MEDIOPAGO = '008' THEN
            N_IMPORTE_EFECTIVO:= P_IMPORTE;
            N_IMPORTE_TARJETA:= 0;
            N_IMPORTE:= P_IMPORTE;
        ELSE
            N_IMPORTE_TARJETA := P_IMPORTE_TARJETA;
            N_IMPORTE_EFECTIVO:= 0;
            N_IMPORTE:= P_IMPORTE_TARJETA;
        END IF;

          
        IF P_ID_MONEDA=9 THEN
            N_IMPORTE:=P_IMPORTE * L_TIPOCAMBIO;
            N_IMPORTE_ME:=P_IMPORTE;
        ELSE
            L_TIPOCAMBIO:=0;
        END IF;

        CALL pkg_pay_sp_ventas_alumnoiddni(
           P_ID_CLIENTE,	
           P_OPERACION,
           P_ID_ENTIDAD,
           P_ID_DEPTO,
           L_ID_ANHO ,
           L_ID_MES,
           N_IMPORTE,	
           L_IP,
           P_ID_DINAMICA,
           P_ID_PERSONA, --ID_USER
           L_ID_COMPROBANTE,
           L_ID_TIPOVENTA,
           P_ID_MONEDA,
           L_TIPOCAMBIO,
           N_IMPORTE_ME,
           L_CANTIDAD,
           L_VENTAS,
           L_VENTAS_IMP,
           L_ERROR,
           L_MSGERROR
        );

        IF COALESCE(LENGTH(L_VENTAS),0)>0 THEN
            SELECT SERIE||'-'||NUMERO INTO STRICT L_SERIE_NUMERO FROM VENTA WHERE ID_VENTA=(L_VENTAS)::numeric;
        END IF;

        SELECT ID_PARENT INTO STRICT L_ID_DINAMICA_DEP FROM CONTA_DINAMICA WHERE ID_DINAMICA = P_ID_DINAMICA;

        SELECT COUNT(1) INTO STRICT L_CONTAR FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;
        IF L_CONTAR>0 THEN
           SELECT ID_TIPOTARJETA INTO STRICT L_ID_TIPOTARJETA FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;
        END IF;

        SELECT ID_TIPOTRANSACCION INTO STRICT L_ID_TIPOTRANSACCION FROM CONTA_DINAMICA WHERE ID_DINAMICA = L_ID_DINAMICA_DEP;

        CALL pkg_pay_sp_crear_deposito_alumnoiddni(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              L_ID_ANHO,
                              L_ID_MES,
                              P_ID_MEDIOPAGO,
                              P_ID_PERSONA,
                              P_ID_CLIENTE,
                              L_VENTAS,
                              L_VENTAS_IMP,
                              L_TIPO,
                              L_ID_TIPOTRANSACCION,
                              P_ID_MONEDA,
                              L_ID_DINAMICA_DEP,
                              L_ID_TIPOTARJETA,
                              NULL,
                              P_OPERACION,
                              L_FECHA,
                              N_IMPORTE_EFECTIVO,
                              N_IMPORTE_TARJETA,
                              0,
                              N_IMPORTE_ME,
                              L_TIPOCAMBIO,
                              L_GLOSA,
                              P_NOMBRE_DEP,
                              P_DOCUMENTO_DEP,
                              L_ID_TIPOASIENTO,
                              P_ID_CANAL,
                              L_ERROR,
                              L_MSGERROR
                            );

        UPDATE JONAS.EVENTO_EVENTO_PARTICIPANTE SET ID_VENTA = L_VENTAS, ESTADO = 2 WHERE ID_EVENTO_PARTICIPANTE = P_ID_EVENTO_PARTICIPANTE;

--         <<SALIDA_DEP_VNT>>
        P_ID_VENTA:=(L_VENTAS)::numeric;
        P_ERROR:=L_ERROR;
        P_MSGERROR:=L_MSGERROR;
       -- END;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_venta_deposito (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_MEDIOPAGO text,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_ID_MONEDA bigint,P_ID_DINAMICA bigint, P_ID_TIPOTARJETA bigint,P_ID_CTABANCARIA bigint,P_OPERACION text,P_FECHA_OP timestamp(0),P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_ME bigint, P_GLOSA text,P_NOMBRE_DEP text,P_DOCUMENTO_DEP text,P_ID_EVENTO_PARTICIPANTE text,P_ID_CANAL integer DEFAULT NULL,P_ERROR OUT bigint,P_MSGERROR OUT text, P_ID_VENTA OUT bigint) FROM PUBLIC;
