-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_pago_gasto (P_ID_PAGO bigint,P_ID_DINAMICA bigint,P_ID_PERSONA bigint,P_DETALLE text, P_IMPORTE bigint,P_IMPORTE_ME bigint, P_FECHA timestamp(0), P_ID_PGASTO INOUT bigint,P_ERROR out bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_id_pgasto numeric(38);
        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(300):='';
        --l_importe_me numeric(10,2);
        L_ID_PERSONA bigint :=NULL;
        L_ID_DINAMICA bigint :=NULL;
        --L_ID_TIPOORIGEN numeric;
        L_DETALLE varchar(100);

        
BEGIN
        	l_error:=0;
	        SELECT COUNT(1) into STRICT l_contar FROM ELISEO.CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
	        -- Validamos que exista el pago.
            IF l_contar = 0 THEN
              l_error := 1;
              l_msgerror := 'Alto! El pago con Id: ' || P_ID_PAGO || ' no existe, vuelva a crear el pago.';
--               GOTO salida_rapida;
            END IF;

            --- CADA VEZ QUE SE ACTUALIZE O SE AGREGUE ALGO DE DETALLE AL PAGO EL PAGO AUTOMATICAMENTE SE PONE EN ESTADO 0
            UPDATE ELISEO.CAJA_PAGO SET ESTADO='0' WHERE ID_PAGO=P_ID_PAGO;
            ---
            
            
            SELECT ID_ENTIDAD||'-'||COALESCE(P_DETALLE,'')||'-'||CASE WHEN ID_MEDIOPAGO='001' THEN 'TLC' WHEN ID_MEDIOPAGO='007' THEN 'CHQ' WHEN ID_MEDIOPAGO='008' THEN 'EFEC' END ||'-'||(NUMERO)::numeric ||'-'||TO_CHAR(FECHA,'DD/MM/YY') GLOSA INTO STRICT L_DETALLE
            FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
            IF coalesce(P_ID_PERSONA::text, '') = '' OR P_ID_PERSONA = 0 THEN
                L_ID_PERSONA:=null;
            ELSE  --A/C
                L_ID_PERSONA := P_ID_PERSONA;
            END IF;

            IF coalesce(P_ID_DINAMICA::text, '') = '' OR P_ID_DINAMICA = 0 THEN
                L_ID_DINAMICA:=null;
            ELSE
                L_ID_DINAMICA :=P_ID_DINAMICA;
            END IF;
            --l_error := 1;
            --l_msgerror:=L_ID_DINAMICA;
            if l_error=0 then
                INSERT INTO CAJA_PAGO_GASTO(
                ID_PAGO,
                ID_DINAMICA,
                ID_PERSONA,
                --ID_TIPOORIGEN,
                DETALLE,
                IMPORTE,
                IMPORTE_ME,
                FECHA
                )values (
                P_ID_PAGO,
                L_ID_DINAMICA,
                L_ID_PERSONA,
                --L_ID_TIPOORIGEN,
                L_DETALLE,
                P_IMPORTE,
                P_IMPORTE_ME,
                P_FECHA
                )returning ID_PGASTO into l_id_pgasto;
                l_msgerror:='Pago OK';
            end if;

--         <<salida_rapida>>
        P_ID_PGASTO :=l_id_pgasto;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_pago_gasto (P_ID_PAGO bigint,P_ID_DINAMICA bigint,P_ID_PERSONA bigint,P_DETALLE text, P_IMPORTE bigint,P_IMPORTE_ME bigint, P_FECHA timestamp(0), P_ID_PGASTO INOUT bigint,P_ERROR out bigint,P_MSGERROR out text) FROM PUBLIC;
