-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_pago (P_ID_MEDIOPAGO text,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_CTABANCARIA bigint,P_ID_CHEQUERA bigint,P_ID_VALE bigint,P_ID_VOUCHER bigint,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint, P_ID_TIPOTRANSACCION bigint,P_ID_MONEDA bigint,P_NUMERO text,P_FECHA timestamp(0),P_TIPOCAMBIO bigint,P_ID_PAGO OUT bigint,P_ERROR out bigint,P_MSGERROR out text) AS $body$
DECLARE


        l_pago bigint:=0;
        l_estado varchar(1):='0'; --1:vigente, 0:anulado
        L_ID_CTABANCARIA bigint := null;
        L_ID_CHEQUERA bigint :=null;
        L_ID_VALE bigint :=null;
        L_ID_MONEDA bigint :=null;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        L_FECHA timestamp(0);
        L_ID_TIPOTRANSACCION bigint;

BEGIN
            
            --l_error := 1;
            -- l_msgerror := 'hOA';
            --select TO_CHAR(fecha, 'DD/MM/YYYY') into L_FECHA from caja_chequera WHERE ID_CHEQUERA=P_ID_CHEQUERA;
            
            if l_error=0 then
                
                DELETE FROM CAJA_PAGO_GASTO_ASIENTO
                WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO WHERE ID_PAGO IN (
                            SELECT ID_PAGO FROM CAJA_PAGO
                            WHERE ID_USER = P_ID_USER
                            AND ESTADO = '0'
                            ) 
                );

                --ELIMINNA LOS FILES QUE EL USER SUBE MIESTRAS ESTE EN PROCESO
                DELETE  FROM CAJA_VALE_FILE WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO WHERE ID_USER = P_ID_USER  AND ESTADO = '0'
                    ) 
                )
                AND ID_USER = P_ID_USER
                AND ORIGEN = '2';

                --ACTUALIZA EL FILE A NULL CUANDO ESTA EN PROCESO
                UPDATE CAJA_VALE_FILE SET ID_PGASTO  = NULL WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO WHERE ID_USER = P_ID_USER  AND ESTADO = '0'
                    ) 
                )
                --AND ID_USER = P_ID_USER --IS NULL;
;

                
                UPDATE CAJA_VALE_GASTO SET ID_PGASTO  = NULL WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO
                        WHERE ID_USER = P_ID_USER
                        AND ESTADO = '0'
                    ) 
                );

                --UPDATE CAJA_DOCUMENTO
                UPDATE CAJA_DOCUMENTO SET ID_PGASTO  = NULL 
                WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO
                        WHERE ID_USER = P_ID_USER
                        AND ESTADO = '0'
                    ) 
                )
                AND CODIGO = 'AUTDOC';

                DELETE FROM CAJA_PAGO_GASTO
                WHERE ID_PAGO IN (
                    SELECT ID_PAGO FROM CAJA_PAGO
                    WHERE ID_USER = P_ID_USER
                    AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_COMPRA
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_VENTA
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_ASIENTO
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_FILE
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0';

                --SELECT coalesce(max(ID_PAGO),0)+1 into l_pago FROM CAJA_PAGO;
        
                IF coalesce(P_ID_CTABANCARIA::text, '') = '' OR P_ID_CTABANCARIA = 0 THEN
                    L_ID_CTABANCARIA:=null;
                ELSE
                    L_ID_CTABANCARIA:=P_ID_CTABANCARIA;
                END IF;

                IF coalesce(P_FECHA::text, '') = '' THEN
                    L_FECHA := NULL;
                ELSE
                    L_FECHA := to_date(to_char(P_FECHA, 'dd/mm')||'/20'||to_char(P_FECHA,'yy'),'dd/mm/yyyy');
                END IF;

                IF coalesce(P_ID_CHEQUERA::text, '') = '' OR P_ID_CHEQUERA = 0 THEN
                    L_ID_CHEQUERA:=null;
                ELSE  --FECHA PARA CHEQUE ES DE LA CHEQUERA
                    L_ID_CHEQUERA:=P_ID_CHEQUERA;
                    SELECT FECHA INTO STRICT L_FECHA FROM CAJA_CHEQUERA WHERE ID_CHEQUERA=P_ID_CHEQUERA;
                END IF;

                IF coalesce(P_ID_VALE::text, '') = '' OR P_ID_VALE = 0 THEN
                    L_ID_VALE:=null;
                ELSE
                    L_ID_VALE:=P_ID_VALE;
                END IF;

                IF coalesce(P_ID_MONEDA::text, '') = '' OR P_ID_MONEDA = 0 THEN
                    L_ID_MONEDA:=null;
                ELSE
                    L_ID_MONEDA:=P_ID_MONEDA;
                END IF;

                IF coalesce(P_ID_TIPOTRANSACCION::text, '') = '' OR P_ID_TIPOTRANSACCION = 0 THEN
                    L_ID_TIPOTRANSACCION:=null;
                ELSE
                    L_ID_TIPOTRANSACCION := P_ID_TIPOTRANSACCION;
                END IF;

                INSERT INTO CAJA_PAGO(
                    ID_PAGO,
                    ID_MEDIOPAGO,
                    ID_ENTIDAD,
                    ID_DEPTO,
                    ID_CTABANCARIA,
                    ID_CHEQUERA,
                    ID_VALE,
                    ID_VOUCHER,
                    ID_ANHO,
                    ID_MES,
                    ID_USER,
                    ID_TIPOTRANSACCION,
                    ID_MONEDA,
                    NUMERO,
                    FECHA,
                    FECHA_REG,
                    TIPOCAMBIO,
                    ESTADO
                )VALUES (
                  l_pago,
                  P_ID_MEDIOPAGO, 
                  P_ID_ENTIDAD, 
                  P_ID_DEPTO, 
                  L_ID_CTABANCARIA,
                  L_ID_CHEQUERA,
                  L_ID_VALE,
                  P_ID_VOUCHER,
                  P_ID_ANHO, 
                  P_ID_MES,  
                  P_ID_USER, 
                  L_ID_TIPOTRANSACCION,
                  L_ID_MONEDA,
                  P_NUMERO,
                  L_FECHA,
                  clock_timestamp(),
                  (P_TIPOCAMBIO)::numeric , 
                  l_estado
                ) RETURNING ID_PAGO INTO l_pago;
            end if;
        P_ID_PAGO :=l_pago;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_pago (P_ID_MEDIOPAGO text,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_CTABANCARIA bigint,P_ID_CHEQUERA bigint,P_ID_VALE bigint,P_ID_VOUCHER bigint,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint, P_ID_TIPOTRANSACCION bigint,P_ID_MONEDA bigint,P_NUMERO text,P_FECHA timestamp(0),P_TIPOCAMBIO bigint,P_ID_PAGO OUT bigint,P_ERROR out bigint,P_MSGERROR out text) FROM PUBLIC;
