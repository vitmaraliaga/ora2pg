-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_generar_asiento_rendicion (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        L_ID_ENTIDAD bigint;
        L_VOUCHER bigint;
        L_TIPOORIGEN bigint;
        L_ID_ORIGEN bigint;
        L_FONDO bigint;
        L_DEPTO varchar(10);
        L_ID_CUENTAAASI varchar(10);
        L_CUENTA_CTE varchar(10);
        L_ID_RESTRICCION varchar(10);
        L_IMPORTE decimal(10,2);
        L_DETALLE varchar(100);
        L_MEMO varchar(50);
        L_AGRUPA varchar(4);

        ID_FONDO_D bigint;
        L_ID_DEPTO_D varchar(10);
        L_ID_CUENTAAASI_D varchar(10);
        L_ID_CTACTE_D varchar(10);
        L_ID_RESTRICCION_D varchar(10);
        L_DESCRIPCION_D  varchar(100);
        L_AGRUPA_D varchar(4);
        L_DEBITO decimal(10,2);
        L_CREDITO decimal(10,2);
        L_ERROR bigint :=0;
        L_MSGERROR varchar(200);
        L_CONTAR bigint;
        L_DC varchar(1);

        casi CURSOR FOR		
        SELECT DISTINCT 
                B.ID_TIPOORIGEN,B.ID_PCOMPRA,A.ID_FONDO,(SELECT X.ID_DEPTO FROM CONTA_DINAMICA_DEPTO X WHERE X.ID_ASIENTO = A.ID_ASIENTO) AS ID_DEPTO,
                A.ID_CUENTAAASI,
                (SELECT MAX(X.ID_CTACTE) FROM CONTA_DINAMICA_CTA_CTE X WHERE X.ID_ASIENTO = A.ID_ASIENTO) AS ID_CTACTE,
                A.ID_RESTRICCION,B.IMPORTE*(CASE WHEN A.DC='C' THEN -1  ELSE 1 END ) AS IMP,B.DETALLE AS DESCRIPCION,A.AGRUPA,A.DC
        FROM CONTA_DINAMICA_ASIENTO A JOIN CAJA_PAGO_COMPRA B
        ON A.ID_DINAMICA = B.ID_DINAMICA
        WHERE B.ID_PAGO = P_ID_PAGO
        AND A.DC = 'D'
        
UNION ALL

        SELECT
                A.ID_TIPOORIGEN,A.ID_PGASTO,B.ID_FONDO,B.ID_DEPTO,B.ID_CUENTAAASI,B.ID_CTACTE,B.ID_RESTRICCION,B.IMPORTE*(CASE WHEN B.DC='C' THEN -1  ELSE 1 END ) AS IMP,A.DETALLE,B.AGRUPA,B.DC
        FROM CAJA_PAGO_GASTO A JOIN CAJA_PAGO_GASTO_ASIENTO B
        ON A.ID_PGASTO = B.ID_PGASTO
        WHERE A.ID_PAGO = P_ID_PAGO
        ORDER BY DC DESC,DESCRIPCION;

        
BEGIN
            --OBTIENE DATOS DEL PAGO
            SELECT ID_ENTIDAD,ID_VOUCHER INTO STRICT L_ID_ENTIDAD,L_VOUCHER 
            FROM CAJA_PAGO 
            WHERE ID_PAGO=P_ID_PAGO;

            --DATOS PARA ASIENTO DE CREDITO - A RENDIR
            SELECT 
                    B.ID_FONDO,B.ID_DEPTO,B.ID_CUENTAAASI,B.ID_CTACTE,B.ID_RESTRICCION,A.ID_ENTIDAD||'-'||A.ID_DEPTO||'-'||B.DESCRIPCION as DESCRIPCION,B.AGRUPA 
                    INTO STRICT ID_FONDO_D,L_ID_DEPTO_D,L_ID_CUENTAAASI_D,L_ID_CTACTE_D,L_ID_RESTRICCION_D,L_DESCRIPCION_D,L_AGRUPA_D
            FROM CAJA_PAGO A JOIN CAJA_PAGO_ASIENTO B
            ON A.ID_PAGO = B.ID_PAGO
            WHERE A.ID_PAGO = P_ID_PAGO;

            OPEN casi;
            FETCH casi INTO L_TIPOORIGEN,L_ID_ORIGEN,L_FONDO,L_DEPTO,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,L_IMPORTE,L_DETALLE,L_AGRUPA,L_DC;
                WHILE casi%FOUND LOOP

                    L_MEMO :=L_TIPOORIGEN || '-' || L_ID_ORIGEN;

                    --INSERTO EL DEBITO
                    INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,AGRUPA)
                    VALUES (L_TIPOORIGEN,L_ID_ORIGEN,L_FONDO,L_DEPTO,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,L_IMPORTE,L_DETALLE,L_MEMO,L_VOUCHER,L_AGRUPA);

                    --INSERTO EL CREDITO
                    INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,AGRUPA)
                    VALUES (L_TIPOORIGEN,L_ID_ORIGEN,ID_FONDO_D,L_ID_DEPTO_D,L_ID_CUENTAAASI_D,L_ID_CTACTE_D,L_ID_RESTRICCION_D,L_IMPORTE*-1,L_DESCRIPCION_D,L_MEMO,L_VOUCHER,L_AGRUPA_D);

                FETCH casi INTO L_TIPOORIGEN,L_ID_ORIGEN,L_FONDO,L_DEPTO,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,L_IMPORTE,L_DETALLE,L_AGRUPA,L_DC;
                END LOOP;
            CLOSE casi;

            SELECT COUNT(1) INTO STRICT L_CONTAR FROM CONTA_ASIENTO
            WHERE ID_TIPOORIGEN=L_TIPOORIGEN
            AND ID_ORIGEN=L_ID_ORIGEN;

            IF L_CONTAR=0 THEN
              L_ERROR:=3; --no se ha generado el asiento
              L_MSGERROR:='Asiento Pago: No se ha generado el asiento';
            ELSE
                SELECT COALESCE(SUM(CASE WHEN IMPORTE>0 THEN IMPORTE ELSE 0 END),0) AS DEBITO,
                COALESCE(SUM(CASE WHEN IMPORTE<0 THEN IMPORTE*(-1) ELSE 0 END),0) AS CREDITO
                INTO STRICT L_DEBITO,L_CREDITO
                FROM CONTA_ASIENTO
                WHERE ID_TIPOORIGEN=L_TIPOORIGEN
                AND ID_ORIGEN=L_ID_ORIGEN;

                IF L_CREDITO=0 OR L_CREDITO=0 THEN
                    L_ERROR:=4; --importe de debito o credito igual a cero
                    L_MSGERROR:='Asiento Pago: Importe de débito o crédito igual a cero';
                ELSE
                    IF L_CREDITO<>L_CREDITO THEN
                        L_ERROR:=5; --descuadre de asiento
                        L_MSGERROR:='Asiento Pago: Descuadre de asiento';
                    END IF;
                END IF;
            END IF;

            P_ERROR:=L_ERROR;
            P_MSGERROR:=L_MSGERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_generar_asiento_rendicion (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
