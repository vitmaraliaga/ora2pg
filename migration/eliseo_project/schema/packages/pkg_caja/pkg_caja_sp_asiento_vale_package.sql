-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_asiento_vale (P_ID_VALE bigint,P_ERROR OUT bigint, P_MSGERROR OUT text) AS $body$
DECLARE

     --Datos de asiento
        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_porcentaje decimal(10,2);
        l_unicoctate varchar(1);
        l_descripcion varchar(255);
        l_agrupa varchar(1);
        l_fondo varchar(10);
        l_nro_asiento bigint;
        l_importeasiento decimal(10,2);
        l_importeasiento_me decimal(10,2);
        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_count_cuenta_cte bigint;
        l_cont bigint:=0;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(10);
        L_ID_DINAMICA bigint;
        L_ID_EMPLEADO decimal(10,2);
        L_DETALLE varchar(200);
        L_ID_CTABANCARIA decimal(10,2);
        L_IMPORTE decimal(10,2);
        L_IMPORTE_ME decimal(10,2);
        L_ID_PERSONA_AUTO bigint;
        L_ID_TIPOVALE bigint;
        L_NRO_VALE varchar(50);

        CONTA_DINAMICA_ASIENTO_CURSOR CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,a.NOMBRE,a.AGRUPA, a.ID_FONDO, a.NRO_ASIENTO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        ORDER BY a.NRO_ASIENTO,a.DC desc;

    
BEGIN
        -- Obtener datos del vale
        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_EMPLEADO,ID_PERSONA_AUTO, ID_TIPOVALE,SUBSTR(DETALLE, 0,90), ID_CTABANCARIA, IMPORTE, IMPORTE_ME, NRO_VALE INTO STRICT
                L_ID_ENTIDAD, L_ID_DEPTO, L_ID_DINAMICA, L_ID_EMPLEADO, L_ID_PERSONA_AUTO,L_ID_TIPOVALE,L_DETALLE, L_ID_CTABANCARIA, L_IMPORTE, L_IMPORTE_ME, L_NRO_VALE 
        FROM CAJA_VALE WHERE ID_VALE=P_ID_VALE;

        IF coalesce(L_ID_DINAMICA::text, '') = '' THEN
            l_error := 1;
            l_msgerror := 'ERROR: NO EXISTE DIAMICA CONTABLE - '||L_ID_DINAMICA;
        END IF;

        IF l_error = 0 THEN
            DELETE FROM CAJA_VALE_ASIENTO WHERE ID_VALE=P_ID_VALE;
                    -- Generar asinto en el caja_vale_asiento
            OPEN CONTA_DINAMICA_ASIENTO_CURSOR;
            FETCH CONTA_DINAMICA_ASIENTO_CURSOR INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,
                                        l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_nro_asiento;
                WHILE CONTA_DINAMICA_ASIENTO_CURSOR%FOUND LOOP

                    l_descripcion := SUBSTR(L_ID_ENTIDAD || '-' || '-[VALE-'||L_NRO_VALE||']-'|| L_DETALLE || '-' || SUBSTR(FC_NOMBRE_PERSONA(L_ID_EMPLEADO),1,100), 1,50);

                    SELECT CASE WHEN l_id_indicador = 'IMPORTE' THEN (L_IMPORTE) * (l_porcentaje) ELSE 0 END INTO STRICT l_importeasiento
;

                    SELECT CASE WHEN l_id_indicador = 'IMPORTE' THEN (L_IMPORTE_ME) * (l_porcentaje) ELSE 0 END INTO STRICT l_importeasiento_me
;

                    l_depto:=null;
                    l_cuenta_cte:=null;

                    if l_unico='U' then
                        select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=l_id_asiento;
                    elsif (l_unico='X') then
                       select FC_DEPTO_CLIENTE(L_ID_EMPLEADO) into STRICT l_depto;
                    elsif l_unico='S' THEN  -- Si es sesiÃ³n
                        l_depto := L_ID_DEPTO;
                    end if;

                    IF (l_unicoctate='B') then
                        IF l_dc = 'C' then
                            BEGIN
                                SELECT ID_TIPOCTACTE into STRICT l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = L_ID_CTABANCARIA;
                                EXCEPTION WHEN no_data_found THEN
                                l_cuenta_cte := '';
                            END;
                        end IF;
                    elsif (l_unicoctate='X') then
                        IF L_ID_TIPOVALE = 1 THEN  --si el vale es a rendir
                            --SELECT ID_CTACTE INTO l_cuenta_cte 
                            --FROM CAJA_VALE_AUTORIZA
                            --WHERE ID_PERSONA = L_ID_PERSONA_AUTO;
                            SELECT COUNT(NUM_DOCUMENTO) INTO STRICT l_count_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;
                            IF (l_count_cuenta_cte >= 1) THEN
                                select max(NUM_DOCUMENTO) into STRICT l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;
                            END IF;
                        ELSE
                            SELECT COUNT(NUM_DOCUMENTO) INTO STRICT l_count_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;
                            IF (l_count_cuenta_cte >= 1) THEN
                                select max(NUM_DOCUMENTO) into STRICT l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;
                            END IF;
                        END IF;
                    END IF;
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                        l_importeasiento_me:=l_importeasiento_me*(-1);
                    end if;

                    IF l_cont=0 THEN
                        INSERT INTO CAJA_VALE_ASIENTO(
                            ID_VALE, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, ID_DEPTO, IMPORTE, IMPORTE_ME,
                            DESCRIPCION, DC, AGRUPA, NRO_ASIENTO
                        ) VALUES (
                            P_ID_VALE, l_id_cuentaaasi, l_id_restriccion, l_cuenta_cte, l_fondo, l_depto, l_importeasiento, l_importeasiento_me,
                            l_descripcion, l_dc, l_agrupa, l_nro_asiento
                        );
                    END IF;

                FETCH CONTA_DINAMICA_ASIENTO_CURSOR INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,
                                        l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_nro_asiento;
                END LOOP;
                CLOSE CONTA_DINAMICA_ASIENTO_CURSOR;

        END IF;
            -- Generar asiento en el conta_asiento
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_asiento_vale (P_ID_VALE bigint,P_ERROR OUT bigint, P_MSGERROR OUT text) FROM PUBLIC;
