-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_presupuesto,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_presupuesto_sp_proesad_proyeccion (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_contar bigint;
    l_id_depto varchar(20);
    l_ciclos bigint;
    l_ciclo bigint;
    l_id_proyeccion bigint;
    l_incremento bigint:=0;
    l_incremento_n bigint:=0;
    l_afecta_incremento varchar(1);
    l_sede_lima varchar(1);
    l_cantidad_i bigint;
    l_cantidad_ii bigint;
    l_credito_i bigint;
    l_credito_ii bigint;
    l_disercion_i bigint;
    l_disercion_ii bigint;
    l_ciclo_menos bigint;
    l_anho_menos bigint;
    l_eap varchar(20);
    l_id_eap bigint;
    l_afecta varchar(1):='S';
    l_horas_i bigint:=0;
    l_horas_ii bigint:=0;
    curdepto CURSOR FOR	

        /*SELECT A.ID_DEPTO,A.CICLOS,A.EAP,B.ID_EAP,case when A.ID_DEPTO='13060202' THEN 'S' ELSE 'N' END AS SEDE
        FROM VW_PTO_DEPTOS A, PSTO_EAP  B
        WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.TIPO='PR'
        AND SUBSTR(A.ID_DEPTO,1,1)=P_ID_DEPTO_PADRE
        AND B.PROESAD='1'
        ORDER BY  A.FAC, A.ID_DEPTO,B.ID_EAP;*/
        
        SELECT A.ID_DEPTO,COALESCE(C.CICLO,0),COALESCE(A.ID_EAP_DEPTO,A.ID_DEPTO) AS  ID_EAP_DEPTO, B.ID_EAP_DEPTO_AREA,COALESCE(B.SEDE_PRINCIPAL,'N') AS SEDE_PRINCIPAL
        FROM PSTO_AREA_DEPTO A, PSTO_EAP_AREA_DEPTO B,PSTO_EAP C,PSTO_AREA D
        WHERE A.ID_AREA=D.ID_AREA
        AND A.ID_AREA_DEPTO=B.ID_AREA_DEPTO
        AND B.ID_EAP=C.ID_EAP
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_TIPO_DEPTO IN ('EP')
        AND D.ID_TIPO_AREA='PR'
        AND D.ID_DEPTO=P_ID_DEPTO_PADRE
        ORDER BY COALESCE(A.ID_EAP_DEPTO,A.ID_DEPTO),A.ID_DEPTO,C.ID_EAP;

                
  
BEGIN
    
    OPEN curdepto;
    FETCH curdepto INTO l_id_depto,l_ciclos,l_eap,l_id_eap,l_sede_lima;

    WHILE curdepto%FOUND LOOP
      l_ciclo:=1;

      WHILE l_ciclo <= l_ciclos
      LOOP
          l_ciclo_menos:=l_ciclo - 1;
          l_anho_menos:=P_ID_ANHO - 1;
          l_afecta_incremento:='S';

          SELECT COUNT(*) INTO STRICT l_contar FROM PSTO_PREGRADO_PROYECCCION
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=l_id_depto
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_EAP_DEPTO_AREA=l_id_eap
          AND CICLO=l_ciclo
          AND ID_AUXILIAR=P_ID_AUXILIAR;

          if l_contar=0 then  
            if l_ciclo=1 then
                l_disercion_i:=0;
                l_disercion_ii:=0;
                l_incremento_n:=l_incremento;
            else

                SELECT FC_PORCENTAJE_DISERCION_ACAD(P_ID_ENTIDAD,l_eap,P_ID_ANHO,l_ciclo) INTO STRICT l_disercion_i;
                SELECT FC_PORCENTAJE_DISERCION_ACAD(P_ID_ENTIDAD,l_eap,P_ID_ANHO,l_ciclo) INTO STRICT l_disercion_ii;

                --l_disercion_i:=0;
                --l_disercion_ii:=0;
                
                l_incremento_n:=0;
            end if;

            if (l_ciclo=1 or l_ciclo=2) and l_afecta='N' then   --solo I y II ciclo
              l_afecta_incremento:='N';
              l_cantidad_i:=0;
              l_cantidad_ii:=0;
            else
              l_afecta_incremento:='S';

              IF l_ciclo>1 THEN 
                SELECT FC_CANTIDAD_ALUMNO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-2',l_ciclo_menos,l_afecta) INTO STRICT l_cantidad_i;

                SELECT CANTIDAD_I INTO STRICT l_cantidad_ii FROM PSTO_PREGRADO_PROYECCCION
                WHERE ID_ENTIDAD=P_ID_ENTIDAD
                AND ID_DEPTO=l_id_depto
                AND ID_ANHO=P_ID_ANHO
                AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
                AND CICLO=l_ciclo_menos
                AND ID_AUXILIAR=P_ID_AUXILIAR
                AND ID_EAP_DEPTO_AREA=l_id_eap;
                --l_cantidad_i:=0; 
                --l_cantidad_ii:=0;
              ELSE
                l_cantidad_i:=0;
                l_cantidad_ii:=0;
              END IF;
            end if;

            
            SELECT FC_CANTIDAD_CREDITO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-1',l_ciclo) INTO STRICT l_credito_i;
            SELECT FC_CANTIDAD_CREDITO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-2',l_ciclo) INTO STRICT l_credito_ii;
            --l_credito_i:=0;
            --l_credito_ii:=0;
            select coalesce(max(ID_PROYECCION),0)+1 into STRICT l_id_proyeccion from PSTO_PREGRADO_PROYECCCION;

            insert into PSTO_PREGRADO_PROYECCCION(
                  ID_PROYECCION, 
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_ANHO,
                  ID_DEPTO_PADRE, 
                  CICLO,
                  INCREMENTO,
                  AFECTA_INCREMENTO,
                  CANTIDAD_I, 
                  CANTIDAD_II,
                  CREDITO_I,
                  CREDITO_II,
                  HORAS_I,
                  HORAS_II,
                  DISERCION_I, 
                  DISERCION_II,
                  BECA,
                  ID_AUXILIAR,
                  ID_EAP_DEPTO_AREA
              )values (
                  l_id_proyeccion, 
                  P_ID_ENTIDAD,
                  l_id_depto,
                  P_ID_ANHO,
                  P_ID_DEPTO_PADRE, 
                  l_ciclo,
                  l_incremento_n,
                  l_afecta_incremento,
                  l_cantidad_i, 
                  l_cantidad_ii,
                  l_credito_i,
                  l_credito_ii,
                  l_horas_i,
                  l_horas_ii,
                  l_disercion_i,
                  l_disercion_ii,
                  l_sede_lima,
                  P_ID_AUXILIAR,
                  l_id_eap
              );
         end if;
         l_ciclo := l_ciclo +1;
      END LOOP;

    
      FETCH curdepto INTO l_id_depto,l_ciclos,l_eap,l_id_eap,l_sede_lima;

    END LOOP;
    CLOSE curdepto;
        
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_presupuesto_sp_proesad_proyeccion (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
