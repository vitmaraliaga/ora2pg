-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_presupuesto,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_presupuesto_sp_proesad_proceso (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_contar bigint;

    
    
  
BEGIN
  
      
    DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO
    WHERE ID_PREGRADO_PROCESO IN (
      SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND ID_AUXILIAR=P_ID_AUXILIAR	
    ) AND TIPO IN ('M','E');

  
  
    SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0) INTO STRICT l_contar FROM PSTO_PREGRADO_PROCESO;

    
    ----PROCESO PREGRADO
    
    INSERT INTO PSTO_PREGRADO_PROCESO(
      ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      ARMADA,
      IMP_MAT,
      CREDITO_1,
      CREDITO_2_5,
      TOTALCREDITO_1_I,
      TOTALCREDITO_2_5_I,
      TOTAL_ALUMNO_I,
      TOTALCREDITO_1_II,
      TOTALCREDITO_2_5_II,
      TOTAL_ALUMNO_II,
      TOTAL_HORAS_I ,
      TOTAL_HORAS_II ,
      CONVOCA,
      ID_AUXILIAR
    )

    SELECT 
      row_number() OVER () + l_contar AS ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      4,
      0,
      0,
      0,
      0,
      0,
      CANTIDAD_I,
      0,
      0,
      CANTIDAD_II,
      HORAS_I,
      HORAS_II,
      BECA as CONVOCA,
      P_ID_AUXILIAR
      FROM (
        SELECT 
        A.ID_ENTIDAD,
        A.ID_DEPTO,
        A.ID_ANHO,
        A.ID_DEPTO_PADRE,
        COALESCE(SUM(A.CANTIDAD_I),0) AS CANTIDAD_I,
        COALESCE(SUM(A.CANTIDAD_II),0) AS CANTIDAD_II,
        COALESCE(SUM(A.HORAS_I),0) AS HORAS_I,
        COALESCE(SUM(A.HORAS_II),0) AS HORAS_II,
        A.BECA
        FROM PSTO_PREGRADO_PROYECCCION A
        WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND (A.CANTIDAD_I+A.CANTIDAD_II)>0
        AND A.ID_AUXILIAR=P_ID_AUXILIAR
        AND A.ID_DEPTO NOT IN (
          SELECT T.ID_DEPTO FROM PSTO_PREGRADO_PROCESO T
          WHERE T.ID_ENTIDAD=P_ID_ENTIDAD
          AND T.ID_ANHO=P_ID_ANHO
          AND T.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND T.ID_AUXILIAR=P_ID_AUXILIAR
          AND COALESCE(T.CONVOCA,'-')=COALESCE(A.BECA,'-') 
        ) 
        GROUP BY A.ID_ENTIDAD,
        A.ID_DEPTO,
        A.ID_ANHO,
        A.ID_DEPTO_PADRE,
        A.BECA
        
    )M 
    ORDER BY M.ID_DEPTO;


    MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING(SELECT 
              A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              COALESCE(SUM(A.CANTIDAD_I),0) AS CANTIDAD_I,
              COALESCE(SUM(A.CANTIDAD_II),0) AS CANTIDAD_II,
              COALESCE(SUM(A.HORAS_I),0) AS HORAS_I,
              COALESCE(SUM(A.HORAS_II),0) AS HORAS_II,
              A.BECA,
              A.ID_AUXILIAR
              FROM PSTO_PREGRADO_PROYECCCION A
              WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
              AND A.ID_ANHO=P_ID_ANHO
              AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
              AND (A.CANTIDAD_I+A.CANTIDAD_II)>0
              AND A.ID_AUXILIAR=P_ID_AUXILIAR 
              GROUP BY A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              A.BECA,
              A.ID_AUXILIAR
            )t
        ON (C.ID_ENTIDAD=t.ID_ENTIDAD and C.ID_DEPTO=t.ID_DEPTO and C.ID_ANHO=t.ID_ANHO and coalesce(C.CONVOCA,'-')=coalesce(t.BECA,'-') and C.ID_DEPTO_PADRE=t.ID_DEPTO_PADRE and C.ID_AUXILIAR=t.ID_AUXILIAR )
        WHEN  MATCHED THEN UPDATE SET  
          C.TOTAL_ALUMNO_I=t.CANTIDAD_I,
          C.TOTAL_ALUMNO_II=t.CANTIDAD_II,
          C.TOTAL_HORAS_I=t.HORAS_I,
          C.TOTAL_HORAS_II=t.HORAS_II;

    
    INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
    ID_PREGRADO_PROCESO, 
    ID_CONCEPTO_PRECIO, 
    IMPORTE_I, 
    IMPORTE_II, 
    TOTAL_I, 
    TOTAL_II,
    TIPO
    )
    
     SELECT 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      CASE WHEN P.CONVOCA='S'  THEN IMPORTE_I ELSE IMPORTE_BECA_I END AS IMPORTE_I,
      CASE WHEN P.CONVOCA='S'  THEN IMPORTE_II ELSE IMPORTE_BECA_II END AS IMPORTE_II,
      (CASE WHEN P.CONVOCA='S'  THEN IMPORTE_I ELSE IMPORTE_BECA_I END)*TOTAL_ALUMNO_I AS TOTAL_I,
      (CASE WHEN P.CONVOCA='S'  THEN IMPORTE_II ELSE IMPORTE_BECA_II END)*TOTAL_ALUMNO_II AS TOTAL_II,
      C.TIPO
      FROM PSTO_PREGRADO_CONCEPTO_PRECIO C,PSTO_PREGRADO_PROCESO P
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='M'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	
      ORDER BY P.ID_DEPTO,P.CONVOCA,C.ID_ACTIVIDAD;

      MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING(SELECT 
              X.ID_PREGRADO_PROCESO,
              M.IMPORTE_I,
              M.IMPORTE_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN(
                  SELECT 
                    COALESCE(SUM(D.IMPORTE_I),0) AS IMPORTE_I,SUM(D.IMPORTE_II) AS IMPORTE_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  AND D.TIPO='M'
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO 
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  C.IMP_MAT=t.IMPORTE_I;

  
      
      ---ENSEÃ‘ANZA
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
      ID_PREGRADO_PROCESO, 
      ID_CONCEPTO_PRECIO, 
      IMPORTE_I, 
      IMPORTE_II, 
      TOTAL_I, 
      TOTAL_II,
      TIPO
      )
      SELECT 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      P.CREDITO_1 AS IMPORTE_I,
      P.CREDITO_1 AS IMPORTE_II,
      P.CREDITO_1*P.ARMADA*P.TOTAL_ALUMNO_I   AS TOTAL_I,
      P.CREDITO_1*P.ARMADA*P.TOTAL_ALUMNO_II   AS TOTAL_II,
      C.TIPO
      from PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO C
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='E'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR;

      ---DESCUENTO
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
      ID_PREGRADO_PROCESO, 
      ID_CONCEPTO_PRECIO, 
      IMPORTE_I, 
      IMPORTE_II, 
      TOTAL_I, 
      TOTAL_II,
      TIPO
      )
      SELECT 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      0 AS IMPORTE_I,
      0 AS IMPORTE_II,
      0 AS TOTAL_I,
      0 AS TOTAL_II,
      C.TIPO
      from PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO C
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='D'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	
      AND C.ID_CONCEPTO_PRECIO NOT IN (
        SELECT X.ID_CONCEPTO_PRECIO  FROM PSTO_PREGRADO_PROCESO_CONCEPTO X
        WHERE X.ID_PREGRADO_PROCESO=P.ID_PREGRADO_PROCESO

      );

      
       
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_presupuesto_sp_proesad_proceso (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
