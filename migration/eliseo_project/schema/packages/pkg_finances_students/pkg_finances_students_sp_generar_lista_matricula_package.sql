-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_generar_lista_matricula (P_ID_SEMESTRE bigint,P_ID_NIVEL_ENSENANZA bigint,P_ID_MODALIDAD_ESTUDIO bigint,P_ID_SEDE bigint,P_ID_MODO_CONTRATO bigint,P_ID_PROGRAMA_ESTUDIO text,P_ESTADO text,P_USER bigint,P_CANTIDAD OUT bigint) AS $body$
DECLARE

      l_query varchar(4000):='';
      l_contar bigint;

BEGIN
    
      DELETE FROM REP_MATRICULADOS WHERE ID_USER=P_USER;

      l_query:='INSERT INTO REP_MATRICULADOS ';
      l_query:=l_query|| ' SELECT ';
      l_query:=l_query|| ' x.ID_ALUMNO_CONTRATO,x.ID_PERSONA,x.ID_PROGRAMA_ESTUDIO,x.ID_TIPO_CONTRATO,x.ID_SEMESTRE_PROGRAMA,x.ID_PLANPAGO_SEMESTRE,x.ID_NIVEL_ENSENANZA,x.ID_PLAN_PROGRAMA,x.ID_MATRICULA_DETALLE,x.ID_COMPROBANTE, ';
      l_query:=l_query|| ' x.ESTADO,x.TOTAL_DEBITO,x.TOTAL_CREDITO,x.TOTAL,x.MATRICULA,x.MENSUAL,x.CONTADO,x.MATRICULA1CUOTA,x.TIPO_ALUMNO,x.ID_ALUMNO_CONTRATO_CLON,x.ID_ALUMNO_CONTRATO_ASOCIADO,x.ID_ENTIDAD,x.ID_DEPTO,x.CODIGO, ';
      l_query:=l_query|| ' x.NOMBRE,x.PATERNO,x.MATERNO,x.NOMBRE_FACULTAD,x.NOMBRE_ESCUELA,x.CUOTAS,x.SEMESTRE,x.ID_SEMESTRE,x.ID_MODO_CONTRATO,x.ID_MODALIDAD_ESTUDIO,x.ID_SEDE,x.PLAN_PAGO ';
      l_query:=l_query|| ' ,null,0,0,:PP_ID_USER,0,NULL,NULL,0,NULL';
      l_query:=l_query|| ' FROM VW_MAT_MATRICULADOS x ';
      l_query:=l_query|| ' WHERE x.ID_SEMESTRE=:PP_ID_SEMESTRE';
      l_query:=l_query|| ' AND x.ID_NIVEL_ENSENANZA=:PP_ID_NIVEL_ENSENANZA';
      l_query:=l_query|| ' AND x.ID_MODALIDAD_ESTUDIO=:PP_ID_MODALIDAD_ESTUDIO';
      l_query:=l_query|| ' AND x.ID_SEDE=:PP_ID_SEDE';
      l_query:=l_query|| ' AND x.ID_MODO_CONTRATO=:PP_ID_MODO_CONTRATO';
      l_query:=l_query|| ' AND x.ESTADO=:PP_ESTADO';
      IF (P_ID_PROGRAMA_ESTUDIO IS NOT NULL AND P_ID_PROGRAMA_ESTUDIO::text <> '') THEN
        l_query:= l_query||' AND x.ID_PROGRAMA_ESTUDIO IN('||P_ID_PROGRAMA_ESTUDIO||')';
      END IF;

      EXECUTE l_query USING P_USER,P_ID_SEMESTRE, P_ID_NIVEL_ENSENANZA,P_ID_MODALIDAD_ESTUDIO,P_ID_SEDE,P_ID_MODO_CONTRATO,P_ESTADO;

      SELECT COUNT(*) INTO STRICT P_CANTIDAD FROM REP_MATRICULADOS WHERE ID_USER=P_USER;

      --BECA 18
     
      MERGE INTO REP_MATRICULADOS S 
       USING(
           SELECT 
              A.ID_ALUMNO_CONTRATO,
              A.tipo_alumno,
              SUM((CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)/CASE WHEN b.tipo_cobro='M' THEN A.CUOTAS  ELSE 1 END ) AS IMPORTE,
              SUM(CASE WHEN  b.tipo_cobro='U' THEN CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END ELSE 0 END) AS MATRICULAPROV
            FROM REP_MATRICULADOS A,VW_MAT_ALUMNO_CONTRATO_DET B
            WHERE A.ID_ALUMNO_CONTRATO=B.ID_ALUMNO_CONTRATO
            AND A.tipo_alumno='B18'
            AND B.TIENE_HIJO=0
            AND A.ID_USER=P_USER
            GROUP BY A.ID_ALUMNO_CONTRATO,A.tipo_alumno
            ORDER BY A.ID_ALUMNO_CONTRATO
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.PROVISION = T.IMPORTE,
      S.MATRICULAPROV=T.MATRICULAPROV,
      S.TIPO='8'||T.tipo_alumno,
      S.TIPO_OPE='T';

      --TARNS  QUE NO ES BECA 18
      MERGE INTO REP_MATRICULADOS S 
       USING(
           SELECT 
              A.ID_ALUMNO_CONTRATO,
               SUM(CASE WHEN  b.tipo_cobro='U' THEN CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END ELSE 0 END) AS MATRICULAPROV
            FROM REP_MATRICULADOS A,VW_MAT_ALUMNO_CONTRATO_DET B
            WHERE A.ID_ALUMNO_CONTRATO=B.ID_ALUMNO_CONTRATO
            AND A.tipo_alumno='B18'
            and a.ID_COMPROBANTE='99'
            AND B.TIENE_HIJO=0
            and coalesce(a.tipo::text, '') = ''
            AND A.ID_USER=P_USER 
            GROUP BY A.ID_ALUMNO_CONTRATO,A.tipo_alumno
            ORDER BY A.ID_ALUMNO_CONTRATO
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.MATRICULAPROV=T.MATRICULAPROV;

        --transferencia: tipo alumno = RE y id_comprobante=99
        
        MERGE INTO REP_MATRICULADOS S 
         USING(
             SELECT 
                A.ID_ALUMNO_CONTRATO,T.ID_TRANSFERENCIA,
                SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END) AS IMPORTE
            from REP_MATRICULADOS a, VENTA_TRANSFERENCIA_DETALLE B, VENTA_TRANSFERENCIA T
            where a.id_alumno_contrato=b.id_alumno_contrato
            and b.ID_TRANSFERENCIA=t.ID_TRANSFERENCIA
            and a.tipo_alumno='RE'
            and a.ID_COMPROBANTE='99'
            and coalesce(a.tipo::text, '') = ''
            and t.cuota=1
            AND A.ID_USER=P_USER
            group by A.ID_ALUMNO_CONTRATO,t.id_transferencia,a.cuotas,a.contado,a.matricula1cuota
            having SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)=case when a.cuotas=1 then a.contado else a.matricula1cuota end 
        )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
        WHEN  MATCHED THEN UPDATE SET  
        S.PROVISION = T.IMPORTE,
        S.ID_VENTA=T.ID_TRANSFERENCIA,
        S.TIPO_OPE='T';

        --venta tipo alumno=RE
        MERGE INTO REP_MATRICULADOS S 
         USING(
             SELECT 
                A.ID_ALUMNO_CONTRATO,t.id_venta,
                SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END) AS IMPORTE,
                --,coalesce((select sum(x.total) from VW_SALES_MOV x where x.id_venta=t.id_venta and x.tipo='V'),0) as deposito
                SUM(CASE WHEN  dc.tipo_cobro='U' THEN CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END ELSE 0 END) AS MATRICULAPROV
            from REP_MATRICULADOS a, VENTA_DETALLE B, VENTA T,VW_MAT_ALUMNO_CONTRATO_DET DC
            where a.id_alumno_contrato=b.id_alumno_contrato
            and b.id_venta=t.id_venta
            AND B.id_alumno_contrato=DC.id_alumno_contrato
            AND B.id_alumno_contrato_DET=DC.id_alumno_contrato_DET
            AND DC.id_alumno_contrato=a.id_alumno_contrato
            and a.tipo_alumno='RE'
            and a.ID_COMPROBANTE<>'99'
            and coalesce(a.tipo::text, '') = ''
            and t.cuota=1
            AND A.ID_USER=P_USER
            group by A.ID_ALUMNO_CONTRATO,t.id_venta,a.cuotas,a.contado,a.matricula1cuota
            having SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)=case when a.cuotas=1 then a.contado else a.matricula1cuota end 
        )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
        WHEN  MATCHED THEN UPDATE SET  
        S.PROVISION = T.IMPORTE,
        --S.DEPOSITO=T.DEPOSITO
        S.MATRICULAPROV = T.MATRICULAPROV,
        S.ID_VENTA=T.id_venta,
        S.TIPO_OPE='V';

        ---RE que hicieron transferencia
        MERGE INTO REP_MATRICULADOS S 
         USING(
             SELECT 
                A.ID_ALUMNO_CONTRATO,T.ID_TRANSFERENCIA,
                SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END) AS IMPORTE
            from REP_MATRICULADOS a, VENTA_TRANSFERENCIA_DETALLE B, VENTA_TRANSFERENCIA T
            where a.id_alumno_contrato=b.id_alumno_contrato
            and b.ID_TRANSFERENCIA=t.ID_TRANSFERENCIA
            and a.tipo_alumno='RE'
            and coalesce(a.tipo::text, '') = ''
            and t.cuota=1
            and coalesce(a.provision,0)=0
            AND A.ID_USER=P_USER
            group by A.ID_ALUMNO_CONTRATO,t.id_transferencia,a.cuotas,a.contado,a.matricula1cuota
            having SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)=case when a.cuotas=1 then a.contado else a.matricula1cuota end 
        )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
        WHEN  MATCHED THEN UPDATE SET  
        S.PROVISION = T.IMPORTE,
        S.ID_VENTA=T.ID_TRANSFERENCIA,
        S.TIPO_OPE='T';

        DELETE FROM TT_MATRICULA_DEPOSITO;

        INSERT INTO TT_MATRICULA_DEPOSITO
        SELECT a.ID_ALUMNO_CONTRATO,
            CASE WHEN coalesce(sum(b.total),0)=0 THEN 
              A.PROVISION 
            ELSE
              --CASE WHEN coalesce(sum(b.total),0)<0 THEN
                --A.PROVISION
             -- ELSE
                A.PROVISION-coalesce(sum(b.total),0)
             -- END 
           END as deposito
           from REP_MATRICULADOS a,VW_SALES_MOV b
           where a.id_venta=b.id_venta
           and a.TIPO_OPE=b.tipo
           AND A.ID_USER=P_USER
           GROUP BY a.ID_ALUMNO_CONTRATO,A.PROVISION;

           
       
       --depositos 
       MERGE INTO REP_MATRICULADOS S 
       USING(
           SELECT A.ID_ALUMNO_CONTRATO,
                  B.DEPOSITO
           from REP_MATRICULADOS a,TT_MATRICULA_DEPOSITO b
           where a.id_alumno_contrato=b.id_alumno_contrato
            AND A.ID_USER=P_USER
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.DEPOSITO=T.DEPOSITO;

      
      /*
       CON,   CONTADO	
       COND,  CONTADO_DEUDA	
       MATCD, MAT_CON_DEUDA	
       MEMA,  MENOS_MAT	
       SOMA,  SOLO_MAT	
       MATMA, MAT_MAT_ARMADA	
       MATAR, MAT_ARMADA	
       B18,   BECA18	
       COWE,  CONTAWEB
      */
      
      --Alumnos Maticulados al contado y pagaron todo el contrato
      update REP_MATRICULADOS set
        tipo='1CON'
      where DEPOSITO>=PROVISION
      and cuotas=1
      and PROVISION>0
      AND ID_USER=P_USER
      and coalesce(tipo::text, '') = '';

      --Alumnos Maticulados al contado y NO pagaron todo el contrato
      update REP_MATRICULADOS set
        tipo='2COND'
      where DEPOSITO<PROVISION
      and cuotas=1
      and PROVISION>0
      AND ID_USER=P_USER
      and coalesce(tipo::text, '') = '';
      
      --Alumnos Matriculados en cuotas y no pagaro nada
      update REP_MATRICULADOS set
        tipo='3MATCD'
      where DEPOSITO=0
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and coalesce(tipo::text, '') = '';
      
       --Alumnos Matriculados en cuotas y pagaron menos de la matricula(mat)
      update REP_MATRICULADOS set
        tipo='4MEMA'
      where DEPOSITO<MATRICULAPROV
      and cuotas<>1
      and DEPOSITO>0
      and PROVISION>0
      AND ID_USER=P_USER
      and coalesce(tipo::text, '') = '';

      
       --Alumnos Matriculados en cuotas y pagaron solo la matricula(mat)
      update REP_MATRICULADOS set
        tipo='5SOMA'
      where MATRICULAPROV=DEPOSITO
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and coalesce(tipo::text, '') = '';

      --Alumnos Matriculados en cuotas y pagaron la matricula y una parte de su 1ra Armada
      update REP_MATRICULADOS set
        tipo='6MATMA'
      where DEPOSITO>MATRICULAPROV
      and DEPOSITO<PROVISION
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and coalesce(tipo::text, '') = '';

      --Alumnos Matriculados en cuotas y pagaron la matricula y toda su primera armada
      update REP_MATRICULADOS set
        tipo='7MATAR'
      where DEPOSITO>=PROVISION
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and coalesce(tipo::text, '') = '';

      --SALDO ALUMNO
      MERGE INTO REP_MATRICULADOS S 
       USING(
           SELECT A.ID_ALUMNO_CONTRATO,
                 SUM(B.TOTAL) AS SALDO
           from REP_MATRICULADOS a,VW_MAT_SALDO_ALUMNO b
           where a.ID_ENTIDAD=b.ID_ENTIDAD
           AND SUBSTR(a.ID_DEPTO,1,1)=b.ID_DEPTO
           AND (SUBSTR(a.SEMESTRE,1,4))::numeric =b.ID_ANHO
           AND a.ID_PERSONA=b.ID_CLIENTE 
           AND a.ID_USER=P_USER 
           GROUP BY A.ID_ALUMNO_CONTRATO
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.SALDO=T.SALDO;

      
      UPDATE REP_MATRICULADOS SET
      MOTIVO= CASE TIPO
          WHEN '1CON' THEN 'AL CONTADO DEPOSITO TOTAL'
          WHEN '2COND' THEN 'AL CONTADO CON DEUDA'
          WHEN '3MATCD' THEN 'EN CUOTAS SIN DEPOSITO'
          WHEN '4MEMA' THEN 'EN CUOTAS DEPOSITO MENOR A MATRICULA'
          WHEN '5SOMA' THEN 'EN CUOTAS DEPOSITO SOLO MATRICULA'
          WHEN '6MATMA' THEN 'EN CUOTAS DEPOSITO MENOR A 1RA ARMADA'
          WHEN '7MATAR' THEN 'EN CUOTAS DEPOSITO TOTAL'
          WHEN '8B18' THEN 'BECA 18'
          ELSE ''
        END
     WHERE ID_USER=P_USER;

      
      /*
      SELECT 
      CASE WHEN SUM(TOTAL) < 0 THEN ABS(SUM(TOTAL)) ELSE 0 END AS CREDITO,
      CASE WHEN SUM(TOTAL) > 0 THEN (SUM(TOTAL)) ELSE 0 END AS DEBITO
      FROM (
        SELECT 
        TOTAL
        FROM VW_SALES_MOV
        WHERE ID_ENTIDAD = ".$id_entidad."
        AND ID_DEPTO = '".$id_depto."'
        AND ID_ANHO = ".$id_anho."
        AND ID_MES BETWEEN  ".$id_mesDe." AND ".$id_mesA."
        AND ID_CLIENTE = ".$id_persona."
        AND ID_TIPOVENTA IN (1,2,3,4)
        UNION ALL
        SELECT 
        SUM(IMPORTE)*DECODE(SIGN(SUM(IMPORTE)),1,-1,0) AS TOTAL
        FROM VW_SALES_ADVANCES
        WHERE ID_ENTIDAD =  ".$id_entidad."
        AND ID_DEPTO = '".$id_depto."'
        AND ID_ANHO = ".$id_anho."
        AND ID_MES BETWEEN ".$id_mesDe." AND ".$id_mesA."
        AND ID_CLIENTE = ".$id_persona." 
      )
  */
     
    
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_generar_lista_matricula (P_ID_SEMESTRE bigint,P_ID_NIVEL_ENSENANZA bigint,P_ID_MODALIDAD_ESTUDIO bigint,P_ID_SEDE bigint,P_ID_MODO_CONTRATO bigint,P_ID_PROGRAMA_ESTUDIO text,P_ESTADO text,P_USER bigint,P_CANTIDAD OUT bigint) FROM PUBLIC;
