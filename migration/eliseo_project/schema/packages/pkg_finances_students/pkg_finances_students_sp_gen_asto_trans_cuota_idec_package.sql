-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_gen_asto_trans_cuota_idec (P_ID_ALUMNO_CONTRATO bigint,P_ID_TRANSFERENCIA bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_id_entidad bigint;
        l_id_depto_transf varchar(20);
        l_dinamica bigint:=1516;
        l_id_tipoorigen bigint:=2;
        l_id_cliente bigint;
        l_memo varchar(255);
        l_id_voucher bigint;
        l_serie varchar(255);
        l_numero varchar(255);
        l_glosa varchar(255);

        -- Datos del detalle
        l_id_tdetalle bigint;
        l_id_venta bigint;
        --l_id_vdetalle numeric;
        l_id_articulo bigint;
        l_id_tipoorigen_vdetalle bigint;
        l_id_articulo_vdetalle bigint;
        l_id_vdetalle bigint;
        l_ddc varchar(1);
        l_importe bigint;
        l_detalle varchar(255);

        -- Datos de los asientos de la dinamica
        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_unicoctate varchar(1);
        l_porcentaje decimal(10,2);
        l_descripcion varchar(255);
        l_agrupa varchar(1);

        l_importeasiento decimal(10,2);
        l_importeasiento_me decimal(10,2);
        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_fondo varchar(10);

        -- Validación
        l_cont bigint;

        
        CURSOR_TRANSFERENCIA_DETALLE CURSOR FOR		
        --SELECT  ID_TDETALLE,ID_VENTA,ID_ARTICULO,DC, IMPORTE, DETALLE
        SELECT 'D' as DC, sum(case when DC='C' then IMPORTE*(-1) else IMPORTE end) as importe, DETALLE
        FROM VENTA_TRANSFERENCIA_DETALLE
        WHERE ID_TRANSFERENCIA=P_ID_TRANSFERENCIA
        group BY DETALLE;	

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =l_dinamica
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        l_error bigint :=0;
        l_msgerror varchar(100) :='';

        l_debito decimal(10,2);
        l_credito decimal(10,2);

BEGIN

        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_TIPOORIGEN, ID_CLIENTE, ID_VOUCHER, SERIE, NUMERO, GLOSA
            INTO STRICT l_id_entidad, l_id_depto_transf,l_dinamica, l_id_tipoorigen, l_id_cliente, l_id_voucher, l_serie, l_numero, l_glosa
        FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = P_ID_TRANSFERENCIA;

        
                
        
        SELECT (l_id_tipoorigen::text || '-' || P_ID_TRANSFERENCIA::text) INTO STRICT l_memo;

        OPEN CURSOR_TRANSFERENCIA_DETALLE;
        FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_ddc,l_importe,l_detalle;
        WHILE CURSOR_TRANSFERENCIA_DETALLE%FOUND LOOP

            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            WHILE casi%FOUND LOOP
                select (case
                            when l_id_indicador='IMPORTE' then l_importe
                      else 0 end)*(l_porcentaje)  into STRICT l_importeasiento
;
                l_importeasiento_me := 0;

                l_depto:=null;
                l_cuenta_cte:=null;

                
                if l_unico='U' then
                    select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif (l_unico='X') then
                    select FC_DEPTO_CLIENTE(l_id_cliente) into STRICT l_depto;
                elsif l_unico='S' THEN  -- Si es sesión
                    l_depto := l_id_depto_transf;---
                end if;

                if l_unicoctate='U' then
                   select  count(*) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   if l_cont>0 then
                      select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   end if;
                end if;

                --if l_ddc='D' then
                if l_dc = 'C' then
                  -- l_importeasiento:=l_importeasiento;
                  l_importeasiento:=l_importeasiento*(-1);
                -- else
                end if;

                select count(*) into STRICT l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=P_ID_TRANSFERENCIA
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'C' else 'D' end=l_ddc;

        
                 if l_importeasiento<>0 then
                
     
                  if l_cont=0 then
                   

                    INSERT INTO CONTA_ASIENTO(
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    P_ID_TRANSFERENCIA,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                    l_memo,
                    l_id_voucher,
                    null,
                    null,
                    l_agrupa 
                    );
                  else

                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_TRANSFERENCIA
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'C' else 'D' end=l_ddc;

                  end if;
                end if;

                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            END LOOP;
            CLOSE casi;

            -- CONTRA PARTIDA
            l_importeasiento := l_importeasiento*-1;

            SELECT count(*) INTO STRICT l_cont
            FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S';

            if l_cont>0 then
              SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO STRICT l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
              FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S'  LIMIT 1;

              INSERT INTO CONTA_ASIENTO(
                      ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                      CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                      MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                      )VALUES ( 
                      l_id_tipoorigen,
                      P_ID_TRANSFERENCIA,
                      l_fondo,
                      l_depto,
                      l_id_cuentaaasi,
                      l_cuenta_cte,
                      l_id_restriccion,
                      l_importeasiento,
                      '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                      l_memo,
                      l_id_voucher,
                      null,
                      null,
                      l_agrupa 
                      );

            end if;

            FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_ddc,l_importe,l_detalle;
        END LOOP;
        CLOSE CURSOR_TRANSFERENCIA_DETALLE;
        
        
        SELECT COUNT(1) INTO STRICT l_cont 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN = P_ID_TRANSFERENCIA;
        --ANALIZAR UREGTNE
        if l_cont=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 06';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into STRICT l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN =P_ID_TRANSFERENCIA;

          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;

        end if;

        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_gen_asto_trans_cuota_idec (P_ID_ALUMNO_CONTRATO bigint,P_ID_TRANSFERENCIA bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
