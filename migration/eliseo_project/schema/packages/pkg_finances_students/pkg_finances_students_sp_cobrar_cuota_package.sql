-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;

  
  --cobranza  Cuotas
CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_cobrar_cuota (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ES_VIRTUAL text,P_ID_TIPOVENTA bigint,P_CONINTERNADO text,P_NRO_CUOTA bigint,P_ID_VENTA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

      l_error bigint:=0;
      l_msgerror varchar(200):='Se ha generado correctamente';
      l_contar bigint;
      l_id_venta bigint;
      l_tipo_alumno varchar(5);
      l_id_comprobante varchar(5);
      l_estado varchar(1);
      l_id_matricula_detalle bigint;
      l_codigo_mod varchar(10);
      L_ID_ALUMNO bigint;
      L_CANT bigint :=0;

      l_id_semestre_programa bigint;


BEGIN
      SELECT TIPO_ALUMNO,ID_COMPROBANTE,ESTADO,id_matricula_detalle,id_semestre_programa
      INTO STRICT l_tipo_alumno,l_id_comprobante,l_estado,l_id_matricula_detalle,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

      IF l_estado <> '1' THEN 
        l_error:=1;
        l_msgerror:='Alto: Alumno no esta Matriculado';
--         GOTO cobrar_cuota;
     END IF;

        select B.CODIGO INTO STRICT l_codigo_mod FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
        WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
        AND A.id_matricula_detalle=l_id_matricula_detalle;

    --if l_codigo_mod<>'R' then -- asi es cobranza regular
    if l_codigo_mod not in ('R','V','E','D') then  --DEJA PASARA PARA REGULAR Y VARIACION: EXTRAS Y DIRIGIDOS EN CUOTAS
        l_error:=1;
        l_msgerror:='Alto: No es Regular';
--         GOTO cobrar_cuota;
    end if;

    
      
      CASE l_tipo_alumno
        WHEN 'RE' THEN
          if l_id_comprobante='99' then
            CALL pkg_finances_students_sp_generar_transf_cuota_idec(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_NRO_CUOTA,l_id_venta,l_error,l_msgerror);
          else
            SELECT ID_PERSONA INTO STRICT L_ID_ALUMNO FROM DAVID.ACAD_ALUMNO_CONTRATO WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

            /*SELECT COUNT(1) INTO L_CANT FROM MAT_TEST_IDEC WHERE ID_PERSONA = L_ID_ALUMNO;
            IF L_CANT > 0 THEN
                pkg_finances_students_sp_generar_transf_cuota_idec(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,l_id_venta,l_error,l_msgerror);
            ELSE*/
                CALL pkg_finances_students_sp_generar_cuota(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,P_CONINTERNADO,P_NRO_CUOTA,l_id_venta,l_error,l_msgerror);
            --END IF;
          end if;
        WHEN 'B18' THEN

          CALL pkg_finances_students_sp_generar_transf_mat(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_NRO_CUOTA,'C',l_id_venta,l_error,l_msgerror);

          
          if l_error=0 then
            select 
              count(*) into STRICT l_contar
            from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
            where a.id_criterio_semestre=b.id_criterio_semestre
            and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            AND B.TIENE_HIJO=0
            AND A.APLAZADO='S';

            if l_contar>0 then
             
              CALL pkg_finances_students_sp_generar_venta_mat_aplaz(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,l_id_venta,l_error,l_msgerror);
            end if;
          end if;

        ELSE
          l_error:=1;
          l_msgerror:='No se ha generado la venta';
      END CASE;
--       <<cobrar_cuota>>
      P_ID_VENTA:=l_id_venta;
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_cobrar_cuota (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ES_VIRTUAL text,P_ID_TIPOVENTA bigint,P_CONINTERNADO text,P_NRO_CUOTA bigint,P_ID_VENTA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
