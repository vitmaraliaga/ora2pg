-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_copiar_criterio_semestre (P_ID_SEMESTRE_PROGRAMA_ORI bigint, P_ID_SEMESTRE_PROGRAMA_DES text, P_INDICADOR text,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

      l_error bigint:=0;
      l_msgerror varchar(200):='';
      l_contar bigint;
      PP_ID_SEMESTRE_PROGRAMA_DES text:=P_ID_SEMESTRE_PROGRAMA_DES||'|';

      l_1 bigint;
      l_id_semestre_programa_des bigint;
      l_id_criterio_semestre bigint;
      curcri CURSOR FOR
       SELECT
            ID_CRITERIO_SEMESTRE,
            ID_CRITERIO,
            IMPORTE,
            FORMULA,
            TIPO_PROCESO,
            TIPO_VALOR,
            ESTADO,
            ID_PROCEDURE
          FROM MAT_CRITERIO_SEMESTRE 
          WHERE ID_SEMESTRE_PROGRAMA=P_ID_SEMESTRE_PROGRAMA_ORI
          and ESTADO='1'
          AND ID_CRITERIO NOT IN (
            SELECT ID_CRITERIO
            FROM MAT_CRITERIO_SEMESTRE 
            WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
          );

                 
    
BEGIN
    
      if P_INDICADOR='A' THEN
        CALL pkg_finances_students_sp_copiar_asiento(P_ID_SEMESTRE_PROGRAMA_ORI,P_ID_SEMESTRE_PROGRAMA_DES,l_error,l_msgerror);
      else
        LOOP
            l_error:=0;
            l_1 := position('|'  in PP_ID_SEMESTRE_PROGRAMA_DES);
            exit when coalesce(l_1,0) = 0;

            select cast(trim(both substr(PP_ID_SEMESTRE_PROGRAMA_DES,1, l_1-1)) as bigint) into STRICT l_id_semestre_programa_des;

            if P_INDICADOR='D' THEN
            
              SELECT COUNT(*) INTO STRICT l_contar FROM MAT_CONCEPTO_ASIGN_ALUM 
              WHERE ID_CRITERIO_SEMESTRE IN (
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              IF l_contar>0 then
                l_error:=1; --descuadre de asiento
                l_msgerror:='Esta asociado a la asignacÃ­on de contrato detalle';
                exit when l_contar>0;
              END IF;

              SELECT COUNT(*) INTO STRICT l_contar FROM MAT_ALUMNO_CONTRATO_DET 
              WHERE ID_CRITERIO_SEMESTRE IN (
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              IF l_contar>0 then
                l_error:=1; --descuadre de asiento
                l_msgerror:='Esta asignado a detalle contrato';
                exit when l_contar>0;

              END IF;

             
              
              DELETE FROM MAT_CONCEPTO_ASIGN_ALUM 
              WHERE ID_CRITERIO_SEMESTRE IN (
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );

              DELETE FROM MAT_ALUMNO_CONTRATO_DET 
              WHERE ID_CRITERIO_SEMESTRE IN (
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );

              DELETE FROM MAT_CRITERIO_SEMESTRE_ASIENTO 
              WHERE ID_CRITERIO_SEMESTRE IN (
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );

              DELETE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des;

             
            END IF;
            
            FOR cur in curcri LOOP
              BEGIN
              
                SELECT COUNT(*) INTO STRICT l_contar FROM MAT_CRITERIO_SEMESTRE
                WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
                AND ID_CRITERIO=CUR.ID_CRITERIO;

                IF l_contar=0 THEN
                  INSERT INTO MAT_CRITERIO_SEMESTRE(
                    ID_SEMESTRE_PROGRAMA,
                    ID_CRITERIO,
                    IMPORTE,
                    FORMULA,
                    TIPO_PROCESO,
                    TIPO_VALOR,
                    ESTADO,
                    ID_PROCEDURE
                  )values (
                    l_id_semestre_programa_des,
                    cur.ID_CRITERIO,
                    cur.IMPORTE,
                    cur.FORMULA,
                    cur.TIPO_PROCESO,
                    cur.TIPO_VALOR,
                    cur.ESTADO,
                    cur.ID_PROCEDURE
                  ) RETURNING ID_CRITERIO_SEMESTRE INTO l_id_criterio_semestre;
                ELSE
                  SELECT ID_CRITERIO_SEMESTRE INTO STRICT l_id_criterio_semestre FROM MAT_CRITERIO_SEMESTRE
                  WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
                  AND ID_CRITERIO=CUR.ID_CRITERIO;
                END IF;

                DELETE FROM MAT_CRITERIO_SEMESTRE_ASIENTO WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;

                              
                insert into MAT_CRITERIO_SEMESTRE_ASIENTO(
                  ID_CRITERIO_SEMESTRE_ASIENTO,
                  ID_TIPOPLAN,
                  ID_CUENTAAASI,
                  ID_RESTRICCION,
                  ID_CRITERIO_SEMESTRE,
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_CTACTE,
                  PORCENTAJE,
                  FECHA_INICIO,
                  FECHA_FIN,
                  ES_EAP,
                  TIPO_DC
                )
                SELECT (row_number() OVER ( ORDER BY ID_CRITERIO_SEMESTRE ASC ))  AS items,
                  ID_TIPOPLAN,
                  ID_CUENTAAASI,
                  ID_RESTRICCION,
                  l_id_criterio_semestre,
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_CTACTE,
                  PORCENTAJE,
                  FECHA_INICIO,
                  FECHA_FIN,
                  ES_EAP,
                  TIPO_DC
                FROM MAT_CRITERIO_SEMESTRE_ASIENTO
                WHERE ID_CRITERIO_SEMESTRE = cur.ID_CRITERIO_SEMESTRE;

              END;
            END LOOP;

         
            PP_ID_SEMESTRE_PROGRAMA_DES := substr(PP_ID_SEMESTRE_PROGRAMA_DES, l_1+1 );
        END LOOP;

      end if;

      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_copiar_criterio_semestre (P_ID_SEMESTRE_PROGRAMA_ORI bigint, P_ID_SEMESTRE_PROGRAMA_DES text, P_INDICADOR text,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
