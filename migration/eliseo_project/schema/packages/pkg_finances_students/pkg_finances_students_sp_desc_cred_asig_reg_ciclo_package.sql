-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_desc_cred_asig_reg_ciclo (P_ID_ALUMNO_CONTRATO bigint,P_ID_CRITERIO_SEMESTRE bigint,P_TIPO_ALUMNO text,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_items bigint;
    l_contar bigint;
    l_contar1 bigint;
    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_id_semestre_programa bigint;
    l_id_persona bigint;

    l_id_criterio	bigint;
    l_importe	decimal(10,2);
    l_tipo_proceso	varchar(2);
    l_tipo_valor	varchar(2);
    l_id_semestre bigint;
    l_nombre varchar(150);
    l_id_plan_programa bigint;
    l_id_plan bigint;
    l_dc varchar(1);
    l_creditos decimal(10,2);
    l_id_criterio_semestre bigint;
    l_ciclo bigint;

BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ciclo
    INTO STRICT l_id_semestre_programa,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO STRICT
      l_id_criterio,
      l_nombre,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;

    select 
      count(*) into STRICT l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;

    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        into STRICT 
        l_id_criterio_semestre
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='M치s de un criterio asignado para cobro de ense침anza';
--         goto salida_var_regular;

    end if;

    
    SELECT 
      ID_CRITERIO,
      --IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR
      INTO STRICT
      l_id_criterio,
      --l_importe,
      l_tipo_proceso,
      l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;

    --=====
    SELECT COUNT(*) INTO STRICT l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;

    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de ense침anza';
--       goto salida_var_regular;
    end if;

    SELECT COUNT(*) INTO STRICT l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0;

    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de ense침anza, importe cero';
--       goto salida_var_regular;
    end if;

    SELECT  coalesce(IMPORTE,0) into STRICT  l_importe  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    --=====
    
    /*
    SELECT coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
    WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
    and ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    */
   select
            sum(credito_variados)   INTO STRICT l_creditos
            FROM (
            SELECT
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=1 THEN acd.credito  ELSE 0 END ),0) credito_insertados,
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=2 THEN acd.credito  ELSE 0 END ),0) credito_removidos,
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=2 THEN (acd.credito*-1)  ELSE acd.credito END ),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            and cur.codigo='UI01'
            
union 
            all

            PERFORM
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=1 THEN acd.credito  ELSE 0 END ),0) credito_insertados,
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=2 THEN acd.credito  ELSE 0 END ),0) credito_removidos,
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=2 THEN (acd.credito*-1)  ELSE acd.credito END ),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO 
            and cur.codigo='UI01'
            ) alias15;

    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO STRICT l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

    if l_creditos<>0 then
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES ( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      l_creditos,
      l_importe,
      l_creditos*l_importe,
      l_tipo_valor,
      null);
    end if;

--     <<salida_var_regular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_desc_cred_asig_reg_ciclo (P_ID_ALUMNO_CONTRATO bigint,P_ID_CRITERIO_SEMESTRE bigint,P_TIPO_ALUMNO text,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
