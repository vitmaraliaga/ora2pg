-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_nota_mat (P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_VENTA bigint,P_GLOSA text,P_IMPORTE bigint,P_ES_VIRTUAL text, P_ERROR OUT bigint, P_MSN OUT text,P_ID_NOTA OUT bigint) AS $body$
DECLARE

        L_ID_NOTA bigint;
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(10);
        L_ID_ANHO bigint;
        L_ID_MES bigint;
        L_ID_COMPROBANTE varchar(2) := '07';
        L_ID_TIPOVENTA bigint := 1; --TIPO VENTA ALUMNOS
        L_ID_MONEDA bigint;
        L_ID_TIPONOTA varchar(2) :='04';
        L_ID_IGV bigint := 18;
        L_ID_TIPOORIGEN bigint := 1;
        L_ID_COMPROBANTE_REF varchar(3);
        L_SERIE_REF varchar(4);
        L_NUMERO_REF varchar(8);
        L_DC varchar(1);
        L_ID_TIPOIGV varchar(2) := '30';
        L_CONT bigint;
        L_ERROR bigint :=0;
        L_MSN varchar(200);
        L_ID_DINAMICA bigint;
        L_ID_TIPOASIENTO varchar(5);
        L_ID_TIPOVOUCHER bigint := 1;
        L_ID_LEYENDA varchar(4) :='1000';
        L_ID_VNT bigint;
        L_TIPO varchar(1);
        L_ID_VENTA bigint;
        L_ID_SALDO bigint;
        L_ID_TRANSFERENCIA bigint;
        L_TOTAL decimal(10,2);
        L_ID_VDETALLE bigint;
        L_ID_PERSONA_V bigint;
        L_ID_DOCUMENTO bigint;
        --
        L_DEPTO_A varchar(10);
        L_ID_CUENTAAASI varchar(20);
        L_CUENTA_TMP varchar(20);
        L_CUENTA_CTE varchar(20);
        L_ID_RESTRICCION varchar(20);
        L_SERIE varchar(4);
        L_NUMERO varchar(8);
        L_CORRELATIVO bigint;
        L_ID_VOUCHER bigint;
        L_USER bigint :=4; --MATRICULADOR ONLINE
        L_MEMO varchar(255);

        
BEGIN
            L_ERROR :=0;
            SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_TIPOVENTA,ID_MONEDA,ID_COMPROBANTE,SERIE,NUMERO INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_TIPOVENTA,L_ID_MONEDA,L_ID_COMPROBANTE_REF,L_SERIE_REF,L_NUMERO_REF
            FROM VENTA WHERE ID_VENTA = P_ID_VENTA;

            SELECT MAX(ID_MES) ID_MES INTO STRICT L_ID_MES
            FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';

            --VALIDA LA CONFIGURACION DEL VOUCHER
            L_ID_TIPOASIENTO := pkg_sales_fc_get_tipo_asiento(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_TIPOVOUCHER);
            IF L_ID_TIPOASIENTO = 'X' THEN
                L_ERROR:=1;
                L_MSN:='Alto: No existe la configuración de vouchers - TIPO ASIENTO para las ventas, del periodo '||L_ID_ANHO::text;
--                 GOTO SALIDA_RAPIDA;
            END IF;
            SELECT   COUNT(1) INTO STRICT L_CONT FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND ID_MODULO = '13'--modulo ventas
            AND ID_ANHO = L_ID_ANHO AND ID_TIPOASIENTO = L_ID_TIPOASIENTO
            AND AUTOMATICO='S' AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
            IF L_CONT < 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: No existe la configuración de vouchers para las ventas, del periodo '||L_ID_ANHO||L_ID_ENTIDAD||L_ID_DEPTO||L_ID_TIPOASIENTO||L_ID_TIPOVOUCHER::text;
--                 GOTO SALIDA_RAPIDA;
            ELSIF L_CONT > 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||L_ID_ANHO::text;
--                 GOTO SALIDA_RAPIDA;
            END IF;
            --CONTADOR 
            SELECT COUNT(1) INTO STRICT L_CONT FROM FIN_CONTADOR_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO;
            IF L_CONT = 0 THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSN:='FINALIZAR NOTA: Falta Asignar Contador - Sede por Departamento';
--                 GOTO SALIDA_RAPIDA;
            END IF;

            SELECT ID_PERSONA INTO STRICT L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO;
            --CREA EL VOUCHER
            CALL pkg_accounting_sp_crear_voucher(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_PERSONA_V,L_ID_VOUCHER);

            IF (L_ID_COMPROBANTE_REF IS NOT NULL AND L_ID_COMPROBANTE_REF::text <> '') OR L_ID_COMPROBANTE_REF <> '' THEN
                IF LENGTH(L_NUMERO_REF) > 8 THEN 
                     L_ERROR:=1;
                    L_MSN:='Alto: El documento de Referencia debe tener 8 digitos';
--                     GOTO SALIDA_RAPIDA;
                END IF;
            END IF;
            IF L_ID_COMPROBANTE_REF <> '01' AND L_ID_COMPROBANTE_REF <> '03' THEN
                IF SUBSTR(L_SERIE_REF,1,1) <> 'B' OR SUBSTR(L_SERIE_REF,1,1) <> 'F' THEN
                    L_ERROR:=1;
                    L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: B100)';
--                     GOTO SALIDA_RAPIDA;
                END IF;
            END IF;
            IF (L_ID_COMPROBANTE_REF = '03' AND SUBSTR(L_SERIE_REF,1,1) <> 'B') THEN
                L_ERROR:=1;
                L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: B100)';
--                 GOTO SALIDA_RAPIDA;
            END IF;
            IF (L_ID_COMPROBANTE_REF = '01' AND SUBSTR(L_SERIE_REF,1,1) <> 'F') THEN
                L_ERROR:=1;
                L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: F100)';
--                 GOTO SALIDA_RAPIDA;
            END IF;
            IF L_ERROR = 0 THEN
                IF L_ID_COMPROBANTE = '07' THEN
                    L_DC := 'C';
                ELSE
                    L_DC := 'D';
                END IF;

                IF P_ES_VIRTUAL = 'S' THEN
                    SELECT COUNT(1) INTO STRICT L_CONT FROM FIN_DOCUMENTO_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND ID_COMPROBANTE = L_ID_COMPROBANTE AND ID_COMPROBANTE_REF = L_ID_COMPROBANTE_REF;
                    IF L_CONT = 0 THEN
                        L_ERROR := 1;
                        L_MSN := 'Alto! FaltA asignar documento la entidad: '||L_ID_ENTIDAD::text||' el departamento: '||L_ID_DEPTO||' y el comprobante: '||L_ID_COMPROBANTE;
--                         GOTO SALIDA_RAPIDA;
                    END IF;
                    SELECT ID_DOCUMENTO INTO STRICT L_ID_DOCUMENTO FROM FIN_DOCUMENTO_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND ID_COMPROBANTE = L_ID_COMPROBANTE AND ID_COMPROBANTE_REF = L_ID_COMPROBANTE_REF;
                    CALL pkg_sales_sp_obtener_serie_numero_fijo(L_ID_DOCUMENTO,L_SERIE,L_CORRELATIVO);
                ELSE
                    L_USER := P_ID_PERSONA; --MATRICULDOR ONLINE
                    L_CONT := pkg_sales_fc_verificar_serie_numero(L_USER,L_ID_COMPROBANTE,L_ID_ENTIDAD, L_ID_DEPTO,L_ID_COMPROBANTE_REF);
                    IF L_CONT < 1 THEN
                        L_ERROR := 1;
                        L_MSN := 'Alto! No existe un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||L_ID_COMPROBANTE||']'||L_USER||'-'||L_ID_ENTIDAD||'-'||L_ID_DEPTO;
--                         GOTO SALIDA_RAPIDA;
                    ELSIF L_CONT > 1 THEN
                        L_ERROR := 1;
                        L_MSN := 'Alto! Existe mas de un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||L_ID_COMPROBANTE||']';
--                         GOTO SALIDA_RAPIDA;
                    END IF;
                    --***********para produccion quitar
                    CALL pkg_sales_sp_obtener_serie_numero(L_USER,L_ID_COMPROBANTE,L_ID_ENTIDAD,L_ID_DEPTO, L_ID_COMPROBANTE_REF, L_SERIE,L_CORRELATIVO);
                END IF;
                SELECT LPAD(L_CORRELATIVO::text,8,'0') INTO STRICT L_NUMERO;

                INSERT INTO VENTA(ID_PARENT,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_COMPROBANTE,ID_TIPONOTA,ID_IGV,ID_MONEDA,ID_LEYENDA,ID_TIPOTRANSACCION,ID_TIPOORIGEN,ID_VOUCHER,SERIE,NUMERO,ID_COMPROBANTE_REF,SERIE_REF,
                NUMERO_REF,FECHA,GLOSA,AGRUPADO,GRAVADA,INAFECTA,EXONERADA,GRATUITA,DESCUENTO,DESCUENTO_GLOBAL,DESCUENTO_PORCENTAJE,IMPORTE_ADESCONTAR,IGV,TOTAL,ESTADO,ID_TIPOVENTA)
                VALUES (
                P_ID_VENTA,L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_USER,P_ID_CLIENTE,L_ID_COMPROBANTE,L_ID_TIPONOTA,L_ID_IGV,L_ID_MONEDA,L_ID_LEYENDA,NULL,L_ID_TIPOORIGEN,L_ID_VOUCHER,L_SERIE,L_NUMERO,
                L_ID_COMPROBANTE_REF,L_SERIE_REF,L_NUMERO_REF,clock_timestamp(),P_GLOSA,'S',0,P_IMPORTE,0,0,0,0,0,0,0,P_IMPORTE,'1',L_ID_TIPOVENTA
                ) RETURNING ID_VENTA INTO L_ID_NOTA;

                INSERT INTO VENTA_DETALLE(ID_VENTA,ID_TIPOIGV,ID_DINAMICA,ID_TIPOORIGEN,DETALLE,DC,CANTIDAD,PRECIO,PRECIO_BASE,PRECIO_ALM,BASE,IGV,DESCUENTO,IMPORTE,IMPORTE_ADESCONTAR,DESCUENTO_PORCENTAJE,ITEM)
                VALUES (L_ID_NOTA,L_ID_TIPOIGV,L_ID_DINAMICA,L_ID_TIPOORIGEN,P_GLOSA,L_DC,1,P_IMPORTE,P_IMPORTE,0,P_IMPORTE,0,0,P_IMPORTE,0,0,1)RETURNING ID_VDETALLE INTO L_ID_VDETALLE;

                SELECT (L_ID_TIPOORIGEN::text || '-' || L_ID_VDETALLE::text) INTO STRICT L_MEMO;
                --DEBITO
                IF L_ID_DEPTO = '1' THEN 
                        L_CUENTA_TMP :='3141001';
                ELSIF  L_ID_DEPTO = '5' THEN 
                        L_CUENTA_TMP :='3141001';
                        --L_CUENTA_TMP :='2162006';
                ELSIF  L_ID_DEPTO = '6' THEN 
                        L_CUENTA_TMP :='3141001';
                END IF;

                SELECT COUNT(1) INTO STRICT L_CONT
                FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = 1 AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA IN (SELECT ID_VENTA FROM VENTA WHERE ID_VENTA = P_ID_VENTA) )
                AND CUENTA = L_CUENTA_TMP   LIMIT 1;

                IF L_CONT > 0 THEN
                    SELECT DEPTO,RESTRICCION INTO STRICT L_DEPTO_A,L_ID_RESTRICCION
                    FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = 1 AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA IN (SELECT ID_VENTA FROM VENTA WHERE ID_VENTA = P_ID_VENTA) )
                    AND CUENTA =  L_CUENTA_TMP   LIMIT 1;
                END IF;

                
                IF L_ID_DEPTO = '1' THEN
                       L_ID_CUENTAAASI :='3149011';
                        L_CUENTA_CTE :='27';
                        L_ID_RESTRICCION :='2';
                ELSIF  L_ID_DEPTO = '5' THEN
                        L_ID_CUENTAAASI :='3149011';
                        L_CUENTA_CTE :='30';
                        L_ID_RESTRICCION :='2';
                ELSIF  L_ID_DEPTO = '6' THEN
                        L_ID_CUENTAAASI :='3149011';
                        L_CUENTA_CTE :='27';
                        L_ID_RESTRICCION :='2';
                END IF;

                INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,AGRUPA,PRIMARIO
                    )VALUES (L_ID_TIPOORIGEN,L_ID_VDETALLE,'10',L_DEPTO_A,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,P_IMPORTE,'(Doc: '||L_SERIE||'-'||L_NUMERO||')-'||P_GLOSA,L_MEMO,L_ID_VOUCHER,NULL,'N',NULL);
                --CREDITO
                IF L_ID_DEPTO = '1' THEN
                    L_DEPTO_A :='11010101';
                    L_CUENTA_CTE :='2';
                ELSIF  L_ID_DEPTO = '5' THEN
                    L_DEPTO_A :='51010101';
                    L_CUENTA_CTE :='8';
                ELSIF  L_ID_DEPTO = '6' THEN
                    L_DEPTO_A :='61010101';
                    L_CUENTA_CTE :='11';
                END IF;

    
                
                L_ID_CUENTAAASI :='1132001';
                L_ID_RESTRICCION :='0A';
                INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,AGRUPA,PRIMARIO
                    )VALUES (L_ID_TIPOORIGEN,L_ID_VDETALLE,'10',L_DEPTO_A,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,P_IMPORTE*-1,'(Doc: '||L_SERIE||'-'||L_NUMERO||')-'||P_GLOSA,L_MEMO,L_ID_VOUCHER,NULL,'N',NULL);

                IF L_ID_COMPROBANTE = '07' THEN
                    --GENERAR ANTICIPOS SI EL DOC QUE ESTA SIENDO AFECTADO ESTA EN CERO
                    CALL pkg_sales_finances_sp_genera_anticipos_notas(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_CLIENTE,L_USER,L_ID_NOTA,P_ID_VENTA,L_ERROR,L_MSN);
                END IF;

                --GENERA VENTA ELECTRONICA
                IF L_ID_ENTIDAD = 7124 THEN
                    CALL pkg_sales_sp_venta_electronica(L_ID_NOTA,L_ID_COMPROBANTE);
                END IF;
            END IF;

--             <<SALIDA_RAPIDA>>
            P_ERROR := L_ERROR;
            P_MSN := L_MSN;
            P_ID_NOTA := L_ID_NOTA;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_nota_mat (P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_VENTA bigint,P_GLOSA text,P_IMPORTE bigint,P_ES_VIRTUAL text, P_ERROR OUT bigint, P_MSN OUT text,P_ID_NOTA OUT bigint) FROM PUBLIC;
