-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_desc_solicitud_beca (P_ID_ALUMNO_CONTRATO bigint,P_ID_CRITERIO_SEMESTRE bigint,P_TIPO_ALUMNO text,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_items bigint;
    l_contar bigint;
    l_error bigint:=0;
    l_msgerror varchar(200):='';

    l_id_semestre_programa bigint;
    l_id_persona bigint;

    l_id_criterio bigint;
    l_importe decimal(10,2);
    l_dc varchar(5);
    l_dias decimal(10,2);
    l_tipo_valor varchar(2);
    l_nombre varchar(150);
    l_id_tipo_requisito_beca bigint;
    l_id_semestre bigint;
    l_id_plan_programa bigint;
    l_codigo varchar(5);

BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA, ID_PLAN_PROGRAMA
    INTO STRICT l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

    SELECT ID_SEMESTRE INTO STRICT l_id_semestre FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;

   
    
    SELECT 
        ID_CRITERIO,
        IMPORTE,
        DC,
        NOMBRE,
        ID_TIPO_REQUISITO_BECA,
        TIPO_VALOR
        INTO STRICT
        l_id_criterio,
        l_importe,
        l_dc,
        l_nombre,
        l_id_tipo_requisito_beca,
        l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;

    if coalesce(l_id_tipo_requisito_beca::text, '') = '' then
      l_error:=1;
      l_msgerror:='Falta asignar tipo de requisito beca al criterio ' || l_nombre || ' ' ||l_id_criterio || ' ' || P_ID_CRITERIO_SEMESTRE;
--       goto desc_solbeca;
    end if;

    SELECT COUNT(*) INTO STRICT l_contar FROM DAVID.SOLICITUD_MAT_ALUM A,DAVID.TIPO_REQUISITO_BECA B
    WHERE A.ID_TIPO_REQUISITO_BECA=B.ID_TIPO_REQUISITO_BECA
    AND A.ID_PERSONA=l_id_persona 
    AND A.ID_TIPO_REQUISITO_BECA=l_id_tipo_requisito_beca
    AND A.ID_SEMESTRE=l_id_semestre
    AND a.id_plan_programa = l_id_plan_programa
    AND A.ESTADO='2';

    if l_contar>0 then
      IF l_contar>1 then
        l_error:=1;
        l_msgerror:='Mas de una beca('||l_nombre||') asignado para el mismo alumno';
--         goto desc_solbeca;
      end if;
      SELECT B.NOMBRE,B.CODIGO INTO STRICT l_nombre,l_codigo FROM DAVID.SOLICITUD_MAT_ALUM A,DAVID.TIPO_REQUISITO_BECA B
      WHERE A.ID_TIPO_REQUISITO_BECA=B.ID_TIPO_REQUISITO_BECA
      AND A.ID_PERSONA=l_id_persona
      AND A.ID_TIPO_REQUISITO_BECA=l_id_tipo_requisito_beca
      AND a.id_plan_programa = l_id_plan_programa 
      AND A.ID_SEMESTRE=l_id_semestre
      AND A.ESTADO='2';

       SELECT COALESCE(MAX(ITEM),0)+1  INTO STRICT l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       if l_codigo = 'DHM' then
          UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET MISIONERO='S' WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
       end if;


       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES (
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
    end if;
--     <<desc_solbeca>>

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_desc_solicitud_beca (P_ID_ALUMNO_CONTRATO bigint,P_ID_CRITERIO_SEMESTRE bigint,P_TIPO_ALUMNO text,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
