-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;

    
    --NEW STORES
    


CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_generar_transf_mat (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_NRO_CUOTA bigint,P_TIPO_COBRO text,P_ID_TRANSFERENCIA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

      l_error bigint:=0;
      l_msgerror varchar(200):='';
      l_contar bigint;
      L_DOCUMENTO bigint :=0;
      l_tc decimal(10,3);
      l_id_moneda bigint;
      l_id_moneda_tc bigint;
      l_tipo_alumno varchar(5);
      L_ID_TRANSFERENCIA bigint :=0;
      l_id_tipotransaccion bigint:=null;--pendiente
      l_id_dinamica bigint:=null;--pendiente
      l_id_cliente bigint;
      l_glosa varchar(100):='';
      l_automatico varchar(2);
      L_ID_PERSONA_V bigint;
      l_id_voucher bigint :=0;

      l_serie varchar(5);
      l_correlativo bigint;
      l_numero varchar(15);
      l_id_planpago_semestre bigint;
      l_cuotas decimal(10,2);
      l_id bigint;
      l_id_semestre_programa bigint;
      l_semestre varchar(20);
      l_total decimal(10,2);
      l_id_tipoasiento varchar(10):= 'RV';
      l_nro_cuota bigint;
      l_tipo_cobro varchar(1);
      l_id_tipoventa bigint;
      l_nom_nivel_ensenanza varchar(300);

BEGIN
    
      SELECT ID_PERSONA, TIPO_ALUMNO,ID_PLANPAGO_SEMESTRE, ID_SEMESTRE_PROGRAMA
      INTO STRICT l_id_cliente,l_tipo_alumno,l_id_planpago_semestre,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

      SELECT 
      b.SEMESTRE into STRICT l_semestre
      FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
      WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
      AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;

      
       SELECT 
        D.NOMBRE,d.ID_TIPOVENTA into STRICT l_nom_nivel_ensenanza,l_id_tipoventa
        FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D,DAVID.ACAD_SEMESTRE B
        WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
        AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
        and  A.ID_SEMESTRE=B.ID_SEMESTRE
        AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;

      IF l_tipo_alumno <>'B18' THEN
        l_error :=1;
        l_msgerror := 'Alto! El alumno no es de beca 18';
--         goto salida_transferencia;
      END IF;

      select C.CUOTAS into STRICT l_cuotas
      from MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      where B.ID_PLANPAGO=C.ID_PLANPAGO
      and b.ID_PLANPAGO_SEMESTRE=l_id_planpago_semestre;

      SELECT 
                COUNT(A.ID) INTO STRICT l_contar
        FROM CONTA_DOCUMENTO_IP_USER A, CONTA_DOCUMENTO_IP B, CONTA_DOCUMENTO C
        WHERE A.ID_DOCIP = B.ID_DOCIP
        AND B.ID_DOCUMENTO = C.ID_DOCUMENTO
        AND A.ID = P_ID_PERSONA
        AND C.ID_COMPROBANTE = '00'
        AND C.ID_ENTIDAD = P_ID_ENTIDAD
        AND C.ID_DEPTO = P_ID_DEPTO;

      IF l_contar = 0 THEN
        l_error :=1;
        l_msgerror := 'Alto! El usuario no tiene asignado un punto de impresión para el tipo de documento: 00';
--         goto salida_transferencia;
      END IF;

      if coalesce(l_id_tipoventa::text, '') = '' then
        l_id_tipoventa:=1;
      end if;

      IF P_ID_DEPTO = '1' THEN 
          l_id_tipoasiento:= 'RV';
      ELSIF P_ID_DEPTO = '5' THEN
          l_id_tipoasiento:= 'RVJ';
      ELSIF P_ID_DEPTO = '6' THEN
          l_id_tipoasiento:= 'RVT';
      ELSIF P_ID_DEPTO = '8' THEN
          l_id_tipoasiento:= 'RVS';
      END IF;

      SELECT   count(*) into STRICT l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;

      if l_contar=0 then
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!:Falta configurar Voucher de Transferencia'||P_ID_ANHO::text;
--            goto salida_transferencia;
      end if;
      
      select AUTOMATICO into STRICT l_automatico 
      from CONTA_VOUCHER_CONFIG  
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;

      if l_automatico='S' then  
          --obtener id del contador para crear el voucher
                   
          SELECT ID_PERSONA INTO STRICT L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=P_ID_DEPTO;

          CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),l_id_tipoasiento,7,'','S',L_ID_PERSONA_V,l_id_voucher);
      end if;

      if l_id_voucher=0 then
          l_error:=1; --no existe voucher
          l_msgerror:='Alto!: No existe voucher';
--           goto salida_transferencia;
      end if;

      
      CALL pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,'99',P_ID_ENTIDAD,P_ID_DEPTO, NULL,l_serie,l_correlativo);

      IF l_correlativo=0 or coalesce(l_correlativo::text, '') = '' THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!: No existe serie y número del documento('||l_correlativo||')';
      END IF;

      SELECT lpad(l_correlativo::text,8,'0') into STRICT l_numero;

      
        l_id_moneda:=7; --SOLES
        l_id_moneda_tc:=9;


        --obtiene tipo de cambio del dia
        select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into STRICT l_tc;

        if coalesce(l_tc::text, '') = '' then
            l_tc:=0;
        end if;

        IF P_TIPO_COBRO='M' THEN
          --l_glosa:='Matrícula '||l_semestre;
          --||l_nom_nivel_ensenanza||'
          IF P_NRO_CUOTA = 1 THEN
              l_glosa:=substr('1ra armada '||l_semestre,0,200);
          else
            l_glosa:='Matrícula Contado '||l_semestre;
          end if;
          l_nro_cuota :=1;
          l_tipo_cobro := P_TIPO_COBRO;
        ELSIF P_TIPO_COBRO='U' THEN
          --l_glosa:='1ra armada '||l_semestre;
          l_glosa:='Matrícula '||l_semestre;
          l_nro_cuota :=1;
          l_tipo_cobro := P_TIPO_COBRO;
        ELSE  --glosa para las armadas
            --l_glosa:='2da armada '||l_semestre;
            --l_nro_cuota :=2;
            --l_tipo_cobro := 'M';
            l_nro_cuota := P_NRO_CUOTA;
            l_tipo_cobro := 'M';
            IF P_NRO_CUOTA = 1 THEN
              l_glosa:=substr('1ra Armada '||l_nom_nivel_ensenanza||' '||l_semestre,0,200);
            ELSIF P_NRO_CUOTA = 2 THEN
                l_glosa := '2da Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 3 THEN
                l_glosa := '3ra Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 4 THEN
                l_glosa := '4ta Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 5 THEN
                l_glosa := '5ta Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 6 THEN
                l_glosa := '6ta Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 7 THEN
                l_glosa := '7ma Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 8 THEN
                l_glosa := '8va Armada '||l_semestre;
            ELSE
                l_glosa := '9na Armada '||l_semestre;
            END IF;
        END IF;


       INSERT INTO VENTA_TRANSFERENCIA(
          ID_ENTIDAD,
          ID_DEPTO,
          ID_ANHO,
          ID_MES,
          ID_PERSONA,
          ID_CLIENTE,
          ID_TIPOTRANSACCION,
          ID_DINAMICA,
          ID_MONEDA,
          TIPOCAMBIO,
          SERIE,
          NUMERO,
          FECHA,
          GLOSA,
          ESTADO,
          ID_VOUCHER,
          ID_TIPOORIGEN,
          ES_ANTICIPO,
          ID_TIPOVENTA,
          CUOTA
      )VALUES (
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_ANHO,
          P_ID_MES,
          P_ID_PERSONA,
          l_id_cliente,
          l_id_tipotransaccion,
          l_id_dinamica,
          l_id_moneda,
          l_tc,
          l_serie,
          l_numero,
          clock_timestamp(), --to_date('26042021 23:59:00','ddmmyyyy hh24:mi:ss')
          l_glosa,
          1,
          l_id_voucher,
          2,
          'N',
          l_id_tipoventa,
          l_nro_cuota  --3RA ARMADA, CAMBIAR CADA ARMADA
          
        ) RETURNING ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA;

        --detalle
        
        SELECT COALESCE(MAX(ID_TDETALLE),0) INTO STRICT l_id FROM VENTA_TRANSFERENCIA_DETALLE;

        INSERT INTO VENTA_TRANSFERENCIA_DETALLE(
        ID_TDETALLE,
        ID_TRANSFERENCIA,
        DC,
        IMPORTE,
        DETALLE,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
        )           
        
        SELECT (row_number() OVER ( ORDER BY A.ID_ALUMNO_CONTRATO_DET ASC ))+l_id  AS items,
          L_ID_TRANSFERENCIA,
          a.dc,
          a.importe/CASE WHEN b.tipo_cobro='M' THEN l_cuotas  ELSE 1 END ,
          substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100) as descripcion,
          A.ID_ALUMNO_CONTRATO,
          A.ID_ALUMNO_CONTRATO_DET
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        AND B.TIENE_HIJO=0
        AND coalesce(A.APLAZADO::text, '') = ''
        AND b.tipo_cobro = l_tipo_cobro 
        ORDER BY a.dc, B.ORDEN;
        
      
       SELECT
              coalesce(sum(CASE WHEN dc='D' THEN (importe)  ELSE (importe*-1) END ),0) INTO STRICT l_total
      FROM VENTA_TRANSFERENCIA_DETALLE
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;

      UPDATE VENTA_TRANSFERENCIA SET
           IMPORTE     =   l_total
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;

       CALL pkg_finances_students_sp_generar_asiento_transf(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,L_ID_TRANSFERENCIA,l_error,l_msgerror);
      
--       <<salida_transferencia>>
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_generar_transf_mat (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_NRO_CUOTA bigint,P_TIPO_COBRO text,P_ID_TRANSFERENCIA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
