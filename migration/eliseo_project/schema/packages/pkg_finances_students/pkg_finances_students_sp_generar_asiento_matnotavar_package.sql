-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_generar_asiento_matnotavar (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_VENTA bigint,P_APLAZADO text,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_contar bigint;
        l_id_tipoorigen bigint:=1; --venta
        l_fondo varchar(10):='10';
        l_serie varchar(10);
        l_numero varchar(20);
        l_fecha timestamp(0);
        l_voucher bigint;
        l_debito decimal(10,2);
        l_credito decimal(10,2);
        l_glosa varchar(100);
        l_nombre varchar(100);

BEGIN
      
      SELECT SERIE, NUMERO, FECHA,ID_VOUCHER, GLOSA, FC_NOMBRE_PERSONA(ID_CLIENTE) INTO STRICT l_serie,l_numero,l_fecha, l_voucher, l_glosa, l_nombre FROM VENTA WHERE ID_VENTA=P_ID_VENTA;

      /*insert into MAT_ALUMNO_CONTRATO_ASIENTO(
        ID_ALUMNO_CONTRATO_ASIENTO,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET,
        ID_TIPOPLAN,
        ID_CUENTAAASI,
        ID_RESTRICCION,
        ID_ENTIDAD,
        ID_DEPTO,
        ID_CTACTE,
        PORCENTAJE,
        IMPORTE,
        GLOSA
      )
      SELECT 
        (row_number() OVER( ORDER BY A.ID_CRITERIO_SEMESTRE ASC ))  AS items,
        A.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET,
        b.ID_TIPOPLAN,
        B.ID_CUENTAAASI,
        B.ID_RESTRICCION,
        P_ID_ENTIDAD,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CTACTE,
        b.porcentaje,
        (CASE WHEN A.DC='D' THEN abs(A.IMPORTE)*(-1) ELSE abs(A.IMPORTE) END)*(b.porcentaje/100),
        a.DESCRIPCION
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;*/
      
      INSERT INTO CONTA_ASIENTO(
        ID_TIPOORIGEN,
        ID_ORIGEN, 
        FONDO,
        DEPTO,
        CUENTA, 
        CUENTA_CTE,
        RESTRICCION,
        IMPORTE,
        DESCRIPCION,
        MEMO,
        VOUCHER, 
        PARENT_ID,
        AGRUPA
        )
        SELECT 
        l_id_tipoorigen,
        VD.ID_VDETALLE,
        l_fondo,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CUENTAAASI,
        B.ID_CTACTE,
        B.ID_RESTRICCION,
        (CASE WHEN b.TIPO_DC='D' THEN VD.IMPORTE*(-1) ELSE VD.IMPORTE END)*(b.porcentaje/100),
        CASE WHEN VD.DC='D' THEN (CASE b.TIPO_DC WHEN 'C' THEN 7124||'-'||'(Doc: '||l_serie||'-'||(l_numero)::numeric ||')-'||l_glosa||'-'||l_nombre            ELSE                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')            END)  ELSE (CASE b.TIPO_DC WHEN 'D' THEN 7124||'-'||'(Doc: '||l_serie||'-'||(l_numero)::numeric ||')-'||l_glosa||'-'||l_nombre            ELSE                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||' '||to_char(l_fecha,'DD/MM/YYYY')            END) END ,
        (l_id_tipoorigen::text || '-' || VD.ID_VDETALLE::text),
        l_voucher,
        NULL,
        --DECODE(b.TIPO_DC,'C','N','S')
        CASE WHEN VD.DC='C' THEN CASE WHEN b.TIPO_DC='C' THEN 'N'  ELSE 'S' END   ELSE CASE WHEN b.TIPO_DC='D' THEN 'S'  ELSE 'N' END  END  AS AGRUPA
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b, VENTA_DETALLE VD
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        AND A.ID_ALUMNO_CONTRATO=VD.ID_ALUMNO_CONTRATO
        AND A.ID_ALUMNO_CONTRATO_DET=VD.ID_ALUMNO_CONTRATO_DET
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND VD.ID_VENTA =P_ID_VENTA
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1)) 
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;

      
      SELECT COUNT(1) INTO STRICT l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
        --ANALIZAR UREGTNE
        if l_contar=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 02';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into STRICT l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);

          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;

        end if;

      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_generar_asiento_matnotavar (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_VENTA bigint,P_APLAZADO text,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
