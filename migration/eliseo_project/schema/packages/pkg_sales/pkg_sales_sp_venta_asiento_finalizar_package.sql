-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_venta_asiento_finalizar (P_ID_VENTA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_VENTA_SERIE varchar(20) := '';
        L_VENTA_NUMERO varchar(20) := '';
        L_VENTA_ID_VOUCHER bigint := 0;
        L_VENTA_DECRIPCION bigint := 0;
        L_ID_ASIENTO bigint := 0;
        L_ID_ORIGEN bigint;
        L_ID_OPERORIGEN bigint := 1;
        L_ID_FONDO bigint := 10;
        L_ID_DEPTO varchar(20):= '';
        L_ID_CUENTAAASI varchar(20):= '';
        L_CTACTE varchar(20):= '';
        L_RESTRICCION varchar(20):= '';
        L_IMPORTE bigint := 0;
        L_DESCRIPCION varchar(200):= '';
        L_ID_PARENT bigint := 0;
        L_AGRUPA varchar(1) := '';

        L_TOTALIZAR_IMPORTE bigint := 0;
        L_CANTIDAD_ASIENTOS bigint := 0;
        L_GLOSA varchar(100);
        L_DEBITOS decimal(10,2);
        L_CREDITOS decimal(10,2);
        L_TOTAL decimal(10,2);
        L_CTA_CLIENTE decimal(10,2);

        CURSOR_CASIENTOS CURSOR FOR 
        SELECT ID_FONDO, ID_DEPTO, ID_CUENTAAASI, ID_CTACTE, ID_RESTRICCION, IMPORTE, SUBSTR(DESCRIPCION,0,49), AGRUPA FROM VENTA_ASIENTO WHERE ID_VENTA = P_ID_VENTA;
        /*SELECT 
        B.ID_VDETALLE,A.ID_FONDO, A.ID_DEPTO, A.ID_CUENTAAASI, A.ID_CTACTE, A.ID_RESTRICCION, A.IMPORTE/COUNT(B.ID_VDETALLE), SUBSTR(A.DESCRIPCION,0,49), A.AGRUPA
        FROM VENTA_ASIENTO A JOIN VENTA_DETALLE B
        ON A.ID_VENTA = B.ID_VENTA
        WHERE A.ID_VENTA = P_ID_VENTA
        GROUP BY B.ID_VDETALLE,A.ID_FONDO, A.ID_DEPTO, A.ID_CUENTAAASI, A.ID_CTACTE, A.ID_RESTRICCION,A.IMPORTE,SUBSTR(A.DESCRIPCION,0,49), A.AGRUPA;*/
        L_ERROR bigint :=0;
        L_MSGERROR varchar(100) :='';

BEGIN
        SELECT ID_VDETALLE INTO STRICT L_ID_ORIGEN FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA;
        --- Validar que haya contrapartida
        SELECT coalesce(SUM(IMPORTE),0),coalesce(SUM(CASE WHEN DC='D' THEN IMPORTE  ELSE 0 END ),0),ABS(coalesce(SUM(CASE WHEN DC='C' THEN IMPORTE  ELSE 0 END ),0)),COUNT(1) INTO STRICT L_TOTALIZAR_IMPORTE,L_DEBITOS,L_CREDITOS,L_CANTIDAD_ASIENTOS  FROM VENTA_ASIENTO WHERE ID_VENTA = P_ID_VENTA;
        SELECT ABS(coalesce(SUM(IMPORTE),0)) INTO STRICT L_CTA_CLIENTE FROM VENTA_ASIENTO WHERE ID_VENTA = P_ID_VENTA AND ID_CUENTAAASI IN ('1132001','1132006','1131001'); --1131001 = Cta Aces Temporal
        IF L_DEBITOS <> L_CREDITOS THEN
            L_ERROR := 1;
            L_MSGERROR := 'La suma del debe y haber no son igualan.';
        END IF;
        IF L_CANTIDAD_ASIENTOS = 0 THEN
            L_ERROR := 1;
            L_MSGERROR := 'La Venta/Nota no tiene asientos contables.';
        --ELSIF L_CANTIDAD_ASIENTOS > 0 AND L_TOTALIZAR_IMPORTE = 0  THEN
            --L_ERROR := 1;
            --L_MSGERROR := 'La suma del debe y haber no igualan en cero (0).';
        END IF;

        IF L_ERROR <> 1 THEN
            SELECT ID_ENTIDAD||'-'||ID_DEPTO||'-'||SERIE||'-'||NUMERO,SERIE, NUMERO, ID_VOUCHER, TOTAL INTO STRICT L_GLOSA, L_VENTA_SERIE, L_VENTA_NUMERO, L_VENTA_ID_VOUCHER, L_TOTAL FROM VENTA WHERE ID_VENTA = P_ID_VENTA;

            --IF L_DEBITOS <> L_TOTAL THEN
            IF L_CTA_CLIENTE <> L_TOTAL THEN
                L_ERROR := 1;
                L_MSGERROR := 'ALTO: EL importe de la Nota es diferente al Asiento (Imp. 1132001)';
            END IF;
            IF L_ERROR <> 1 THEN
                OPEN CURSOR_CASIENTOS;
                FETCH CURSOR_CASIENTOS INTO L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION, L_IMPORTE, L_DESCRIPCION, L_AGRUPA;
                WHILE CURSOR_CASIENTOS%FOUND LOOP
                    SELECT coalesce(MAX(ID_ASIENTO),0)+1 INTO STRICT L_ID_ASIENTO FROM CONTA_ASIENTO;

                    INSERT INTO CONTA_ASIENTO(ID_ASIENTO, ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE, RESTRICCION,IMPORTE, DESCRIPCION, MEMO, VOUCHER, REF_ID, AGRUPA) 
                    VALUES (L_ID_ASIENTO, L_ID_OPERORIGEN, L_ID_ORIGEN, L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION,L_IMPORTE, L_GLOSA||'-'||L_DESCRIPCION, (L_ID_OPERORIGEN || '-' || P_ID_VENTA), L_VENTA_ID_VOUCHER, NULL,L_AGRUPA
                    );

                    FETCH CURSOR_CASIENTOS INTO L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION, L_IMPORTE, L_DESCRIPCION, L_AGRUPA;

                END LOOP;
                CLOSE CURSOR_CASIENTOS;
            END IF;
        END IF;

        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_venta_asiento_finalizar (P_ID_VENTA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
