-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_crear_anticipos (P_ID bigint,P_IMPORTE bigint,P_TIPO text, P_DC text,P_MODO text,P_ERROR OUT bigint, P_MSN OUT text) AS $body$
DECLARE

        L_ID_TRANSF bigint;
        L_ID_DET bigint;
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(10);
        L_ID_ANHO bigint;
        L_ID_MES bigint;
        L_ID_PERSONA bigint;
        L_ID_CLIENTE bigint;
        L_ID_MONEDA bigint;
        L_CONTADOR bigint;
        L_ID_VOUCHER bigint;
        L_ID_TIPOTRANSACCION bigint;
        L_ID_DINAMICA bigint;
        L_TC decimal(10,2) :=0;
        L_DOCUMENTO bigint;
        L_SERIE varchar(4);
        L_NUMERO varchar(8);
        L_CORRELATIVO bigint;
        L_ERROR bigint;
        L_MSN varchar(200);
        L_CONT bigint :=0;
        L_GLOSA varchar(100);
        L_ID_TIPOORIGEN bigint := 2; --TRANSFERENCIA
        L_AUTOMATICO varchar(1);
        L_ID_TIPOASIENTO varchar(4);

        
BEGIN
            L_ERROR :=0;
             
            IF P_TIPO = 'NO' THEN  --NOTAS
                SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_MONEDA INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_PERSONA,L_ID_CLIENTE,L_ID_MONEDA
                FROM VENTA
                WHERE ID_VENTA = P_ID;
                L_GLOSA := 'Anticipo Generado por la Emision de una Nota de Credito';
            END IF;

            IF L_ID_MONEDA = 9 THEN
                SELECT FC_TIPOCAMBIO(L_ID_MONEDA,CURRENT_DATE,'D' ) INTO STRICT L_TC;
            END IF;

            if coalesce(L_TC::text, '') = '' then
                L_TC:=0;
            end if;

            SELECT pkg_sales_fc_documento_impresion_user(L_ID_PERSONA,'00',L_ID_ENTIDAD,L_ID_DEPTO) INTO STRICT L_DOCUMENTO;
            IF L_DOCUMENTO = 0 THEN
                L_ERROR :=1;
            END IF;

            IF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '1' THEN
                L_ID_TIPOASIENTO := 'RV';
            ELSIF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '5' THEN
                L_ID_TIPOASIENTO := 'RVJ';
            ELSIF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '6' THEN
                L_ID_TIPOASIENTO := 'RVT';
            ELSIF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '8' THEN
                L_ID_TIPOASIENTO := 'RVS';
            END IF;

            SELECT   count(1) into STRICT L_CONT FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = L_ID_ENTIDAD
            AND ID_DEPTO =L_ID_DEPTO
            AND ID_MODULO = '13'--modulo ventas
            --and ID_TIPOASIENTO='RV' 
            AND ID_TIPOASIENTO = L_ID_TIPOASIENTO 
            AND ID_ANHO = L_ID_ANHO
            AND ID_TIPOVOUCHER = 7;

            if L_CONT=0 then
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSN:='FINALIZAR ANTICIPOS: Falta configurar Voucher de Transferencia'||L_ID_ANHO::text;
            end if;
            IF L_ERROR=0 THEN
                if L_CONT>0  then
                    select AUTOMATICO into STRICT L_AUTOMATICO
                    from CONTA_VOUCHER_CONFIG  
                    where ID_ENTIDAD=L_ID_ENTIDAD 
                    and ID_DEPTO= L_ID_DEPTO
                    --and ID_TIPOASIENTO='RV' 
                    AND ID_TIPOASIENTO = L_ID_TIPOASIENTO 
                    and ID_ANHO=L_ID_ANHO
                    AND ID_TIPOVOUCHER = 7;

                    if L_AUTOMATICO='S' then 
                        SELECT DISTINCT
                            MAX(A.ID_PERSONA)  INTO STRICT L_CONTADOR
                        FROM APS_EMPLEADO A, APS_TRABAJADOR B, APS_CARGO C
                        WHERE A.ID_PERSONA = B.ID_PERSONA
                        AND B.ID_CARGO = C.ID_CARGO
                        AND A.ID_ENTIDAD = L_ID_ENTIDAD
                        AND A.ID_DEPTO LIKE L_ID_DEPTO||'%'
                        AND UPPER(C.NOMBRE) LIKE '%CONTADOR%'
                        AND A.ESTADO = 'A';
                        CALL pkg_accounting_sp_crear_voucher(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,7,'','S',L_CONTADOR,L_ID_VOUCHER);
                    end if;
                end if;
            END IF;
            if L_ID_VOUCHER=0 then
                L_ERROR:=2; --no existe voucher
                L_MSN:='FINALIZAR ANTICIPOS: No existe voucher';
            end if;
            IF L_ERROR = 0 THEN
                CALL pkg_sales_sp_obtener_serie_numero(L_ID_PERSONA,'00',L_ID_ENTIDAD
                ,L_ID_DEPTO, null,L_SERIE,L_CORRELATIVO);
                IF L_CORRELATIVO=0 or coalesce(L_CORRELATIVO::text, '') = '' THEN
                    L_ERROR:=1; --no existe serie y numero del documento
                    L_MSN:='FINALIZAR ANTICIPOS: No existe serie y n√∫mero del documento('||L_CORRELATIVO||')';
                END IF;
            END IF;

            SELECT COUNT(*) INTO STRICT L_CONT
            FROM TIPO_TRANSACCION A INNER JOIN TIPO_GRUPO_CONTA B ON A.ID_TIPOGRUPOCONTA=B.ID_TIPOGRUPOCONTA
            INNER JOIN CONTA_ENTIDAD_TRANSACCION C ON A.ID_TIPOTRANSACCION=C.ID_TIPOTRANSACCION
            WHERE C.ID_ENTIDAD = L_ID_ENTIDAD
            AND A.ID_MODULO = 13
            AND B.CODIGO  = 'AN';
            IF L_CONT = 0 THEN
                L_ERROR:=1;
                L_MSN:='FINALIZAR ANTICIPOS: No existe Tipo de Transaccion de Anticipos';
            END IF;

            IF L_ERROR = 0 THEN 
                SELECT A.ID_TIPOTRANSACCION INTO STRICT  L_ID_TIPOTRANSACCION
                FROM TIPO_TRANSACCION A INNER JOIN TIPO_GRUPO_CONTA B ON A.ID_TIPOGRUPOCONTA=B.ID_TIPOGRUPOCONTA
                INNER JOIN CONTA_ENTIDAD_TRANSACCION C ON A.ID_TIPOTRANSACCION=C.ID_TIPOTRANSACCION
                WHERE C.ID_ENTIDAD = L_ID_ENTIDAD
                AND A.ID_MODULO = 13
                AND B.CODIGO  = 'AN';

                SELECT COUNT(*) INTO STRICT L_CONT
                FROM CONTA_DINAMICA
                WHERE ID_ENTIDAD = L_ID_ENTIDAD
                AND ID_DEPTO = L_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                AND ID_MODULO = 13
                AND ID_TIPOTRANSACCION = L_ID_TIPOTRANSACCION
                AND ACTIVO = 'S';
                IF L_CONT = 0 THEN
                    L_ERROR:=1;
                    L_MSN:='FINALIZAR ANTICIPOS: No existe Asiento Contable Configurado para Anticipos '||L_ID_TIPOTRANSACCION;
                END IF;
            END IF;
            IF L_ERROR = 0 THEN
                SELECT ID_DINAMICA INTO STRICT L_ID_DINAMICA
                FROM CONTA_DINAMICA
                WHERE ID_ENTIDAD = L_ID_ENTIDAD
                AND ID_DEPTO = L_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                AND ID_MODULO = 13
                AND ID_TIPOTRANSACCION = L_ID_TIPOTRANSACCION
                AND ACTIVO = 'S';

                SELECT lpad(L_CORRELATIVO::text,8,'0') into STRICT L_NUMERO;
                SELECT COALESCE(MAX(ID_TRANSFERENCIA),0)+1 INTO STRICT L_ID_TRANSF FROM VENTA_TRANSFERENCIA;
                INSERT INTO VENTA_TRANSFERENCIA(ID_TRANSFERENCIA,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_TIPOTRANSACCION,ID_DINAMICA,ID_VOUCHER,ID_TIPOORIGEN,ID_MONEDA,TIPOCAMBIO,SERIE,NUMERO,FECHA,GLOSA,IMPORTE,ESTADO)
                VALUES (L_ID_TRANSF,L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_PERSONA,L_ID_CLIENTE,L_ID_TIPOTRANSACCION,L_ID_DINAMICA,L_ID_VOUCHER,L_ID_TIPOORIGEN,L_ID_MONEDA,L_TC,L_SERIE,L_NUMERO,clock_timestamp(),L_GLOSA,P_IMPORTE,'1');

                SELECT COALESCE(MAX(ID_TDETALLE),0)+1 INTO STRICT L_ID_DET FROM VENTA_TRANSFERENCIA_DETALLE;
                IF P_MODO = '1' THEN
                    INSERT INTO VENTA_TRANSFERENCIA_DETALLE(ID_TDETALLE,ID_VENTA,ID_TRANSFERENCIA,DC,IMPORTE,DETALLE)
                    VALUES (L_ID_DET,P_ID,L_ID_TRANSF,P_DC,P_IMPORTE,L_GLOSA);
                ELSE
                    INSERT INTO VENTA_TRANSFERENCIA_DETALLE(ID_TDETALLE,ID_TRANSFERENCIA,DC,IMPORTE,DETALLE)
                    VALUES (L_ID_DET,L_ID_TRANSF,P_DC,P_IMPORTE,L_GLOSA);
                END IF;

                --GENERA ASIENTO DE ANTICIPOS
            END IF;
            P_ERROR := L_ERROR;
            P_MSN := L_MSN;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_crear_anticipos (P_ID bigint,P_IMPORTE bigint,P_TIPO text, P_DC text,P_MODO text,P_ERROR OUT bigint, P_MSN OUT text) FROM PUBLIC;
