-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_crear_anticipos_clientes (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_VENTA bigint,P_IMPORTE bigint,P_DC text,P_CODIGO text,P_ERROR OUT bigint, P_MSN OUT text,P_TIPO text DEFAULT 'V') AS $body$
DECLARE

        L_ID_TRANSFERENCIA bigint;
        L_ID_TIPOTRANSACCION bigint;
        L_ID_MONEDA bigint :=7;
        L_TC decimal(10,2) :=0;
        L_ID_DINAMICA bigint;
        L_ID_PERSONA_V bigint;
        L_ID_VOUCHER bigint;
        L_ID_DOCUMENTO bigint;
        L_ID_TIPOORIGEN bigint := 2; --TRANSFERENCIA
        L_SERIE varchar(4);
        L_NUMERO varchar(8);
        L_CORRELATIVO bigint;
        L_ID_TIPOCOMPROBANTE varchar(4) := '99'; --TRANSFERENCIAS DE VENTAS
        L_ID_TIPOASIENTO varchar(5);
        L_ID_TIPOVOUCHER bigint := 7; --ingresos se contabilizar치 en MI
        L_CONT bigint :=0;
        L_GLOSA varchar(300);
        L_ERROR bigint;
        L_MSN varchar(200);
        L_CLIENTE varchar(100);
        L_ES_ANTICIPO varchar(1) := 'S'; --ESTE PROCEDURE SOLO REALIZA ANTICIPOS, POR ESO SE ASIGA "S" POR DEFAUT
        L_DET varchar(200);

        L_ID_TRANSF bigint;
        L_ID_VENTA bigint;
        L_ID_PVENTA bigint;
        L_ID_SALDO bigint;

        
BEGIN
            L_ERROR :=0;
            
            IF L_ID_MONEDA = 9 THEN
                SELECT FC_TIPOCAMBIO(L_ID_MONEDA,CURRENT_DATE,'D' ) INTO STRICT L_TC;
            END IF;

            IF coalesce(L_TC::text, '') = '' THEN
                L_TC:=0;
            END IF;

            IF P_ID_ENTIDAD = 7124 THEN
                IF P_ID_DEPTO = '1' THEN
                    L_ID_TIPOASIENTO := 'MI';
                ELSIF P_ID_DEPTO = '4' THEN
                    L_ID_TIPOASIENTO := 'MIC';
                ELSIF P_ID_DEPTO = '5' THEN
                    L_ID_TIPOASIENTO := 'MIJ';
                ELSIF P_ID_DEPTO = '6' THEN
                    L_ID_TIPOASIENTO := 'MIT';
                ELSIF P_ID_DEPTO = '8' THEN
                    L_ID_TIPOASIENTO := 'MIS';
                ELSE
                    L_ID_TIPOASIENTO := 'MIL';
                END IF;
            ELSE
                L_ID_TIPOASIENTO := 'MI';
            END IF;

            --VALIDA CONFIGURACION DE VOUCHER
            SELECT   COUNT(1) INTO STRICT L_CONT FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_MODULO = '13'--modulo TESORERIA
            AND ID_ANHO = P_ID_ANHO
            AND ID_TIPOASIENTO = L_ID_TIPOASIENTO
            AND AUTOMATICO = 'S'
            AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;

            IF L_CONT < 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: No existe la configuraci칩n de vouchers para las Transf., del periodo H -> '||P_ID_ANHO::text||'-'||P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-'||L_ID_TIPOASIENTO||'-'||L_ID_TIPOVOUCHER;
--                 GOTO salida_rapida;
            ELSIF L_CONT > 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: Existe m치s de una configuraci칩n de vouchers para las ventas, del periodo '||P_ID_ANHO::text;
--                 GOTO salida_rapida;
            END IF;

            SELECT COUNT(1) INTO STRICT L_CONT FROM FIN_CONTADOR_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO;

            IF L_CONT = 0 THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSN:='FINALIZAR ANTICIPOS: Falta Asignar Contador - Sede por Departamento';
--                 GOTO salida_rapida;
            END IF;

            --VALIDA PARA ANTICIPOS EL COMPROBANTE SE DEFINE FIJO POR DEPTO
            SELECT COUNT(1) INTO STRICT L_CONT FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_COMPROBANTE = L_ID_TIPOCOMPROBANTE;

            IF L_CONT = 0 THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSN:='FINALIZAR ANTICIPOS: Falta configurar el Comprobante de Transferencia';
--                 GOTO salida_rapida;
            END IF;

            --VALIDA ASIENTO CONTABLE CONFIGURADO PARA ANTICIPOS
            SELECT COUNT(1) INTO STRICT L_CONT FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
            ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
            JOIN TIPO_GRUPO_CONTA C
            ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
            AND A.ID_DEPTO = P_ID_DEPTO
            AND A.ID_ANHO = P_ID_ANHO
            AND A.ID_MODULO = 13
            AND C.CODIGO = P_CODIGO  --ANTICIPOS
            AND A.ACTIVO = 'S';
            IF L_CONT = 0 THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSN:='FINALIZAR ANTICIPOS: Falta configurar el Asiento de Anticipos';
--                 GOTO salida_rapida;
            ELSE
                IF L_CONT > 1 THEN
                    L_ERROR:=1; --no existe serie y numero del documento
                    L_MSN:='FINALIZAR ANTICIPOS: Existe mas de un Asiento de Anticipos';
--                     GOTO salida_rapida;
                END IF;
            END IF;

            IF L_ERROR = 0 THEN
                --CREA EL VOUCHER
                SELECT ID_PERSONA INTO STRICT L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO;
                CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_PERSONA_V,L_ID_VOUCHER);
                --CREA EL CORRELATIVO
                SELECT ID_DOCUMENTO INTO STRICT L_ID_DOCUMENTO FROM FIN_DOCUMENTO_DEPTO
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO
                AND ID_COMPROBANTE = L_ID_TIPOCOMPROBANTE;
                CALL pkg_sales_sp_obtener_serie_numero_fijo(L_ID_DOCUMENTO,L_SERIE,L_CORRELATIVO);
                SELECT LPAD(L_CORRELATIVO::text,8,'0') INTO STRICT L_NUMERO;
                --DINAMICA
                SELECT A.ID_DINAMICA,A.ID_TIPOTRANSACCION INTO STRICT L_ID_DINAMICA,L_ID_TIPOTRANSACCION FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
                ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
                JOIN TIPO_GRUPO_CONTA C
                ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
                WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
                AND A.ID_DEPTO = P_ID_DEPTO
                AND A.ID_ANHO = P_ID_ANHO
                AND A.ID_MODULO = 13
                AND C.CODIGO = P_CODIGO  --ANTICIPOS
                AND A.ACTIVO = 'S';
                --CREA EL ANTICIPO
                SELECT SUBSTR(NOMBRE||' '||PATERNO||' '||MATERNO,1,20) INTO STRICT L_CLIENTE FROM MOISES.PERSONA
                WHERE ID_PERSONA = P_ID_CLIENTE;

                IF P_DC = 'C' THEN
                    SELECT COUNT(1) INTO STRICT L_CONT FROM VENTA WHERE ID_VENTA = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                    IF L_CONT  > 0  THEN
                        SELECT GLOSA INTO STRICT L_DET FROM VENTA WHERE ID_VENTA = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                        L_GLOSA := P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Saldo de Anticipos - '||L_CORRELATIVO||'-'||L_DET||'- '||L_CLIENTE;
                    ELSE
                        IF P_TIPO = 'P' THEN  --PAGO A ALUMNOS
                            SELECT DETALLE INTO STRICT L_GLOSA FROM CAJA_PAGO_VENTA WHERE ID_PVENTA = P_ID_VENTA;
                        ELSE
                            L_GLOSA := P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Saldo de Anticipos - '||L_CORRELATIVO||'-'||L_CLIENTE;
                        END IF;
                    END IF;
                ELSE
                    SELECT COUNT(1) INTO STRICT L_CONT FROM CAJA_DEPOSITO WHERE ID_DEPOSITO = P_ID_VENTA;
                    IF L_CONT  > 0  THEN
                        SELECT GLOSA INTO STRICT L_DET FROM CAJA_DEPOSITO WHERE ID_DEPOSITO = P_ID_VENTA;
                        L_GLOSA := L_DET||'-'||L_CORRELATIVO||'-'||L_CLIENTE;
                    ELSE
                        L_GLOSA := P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Anticipos Clientes: '||L_CORRELATIVO||'-'||L_CLIENTE;
                    END  IF;
                END IF;
                L_GLOSA := SUBSTR(L_GLOSA,1,100);
                --L_GLOSA := P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Anticipos Clientes: '||L_CORRELATIVO||'-'||L_CLIENTE;
                INSERT INTO VENTA_TRANSFERENCIA(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_TIPOTRANSACCION,ID_DINAMICA,ID_VOUCHER,ID_TIPOORIGEN,ID_MONEDA,TIPOCAMBIO,SERIE,NUMERO,FECHA,GLOSA,IMPORTE,ESTADO,ES_ANTICIPO,ID_DEPOSITO)
                VALUES (P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_CLIENTE,L_ID_TIPOTRANSACCION,L_ID_DINAMICA,L_ID_VOUCHER,L_ID_TIPOORIGEN,L_ID_MONEDA,L_TC,L_SERIE,L_NUMERO,clock_timestamp(),L_GLOSA,ABS(P_IMPORTE),'1',L_ES_ANTICIPO,CASE WHEN P_DC='D' THEN P_ID_VENTA  ELSE NULL END )
                RETURNING ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA;

                IF P_DC = 'C' THEN  --RELACIONA EL ANTRICIPO A UNA VENTA
                    --INSERT INTO VENTA_TRANSFERENCIA_DETALLE(ID_VENTA,ID_TRANSFERENCIA,DC,IMPORTE,DETALLE,ID_TIPOORIGEN)
                    --VALUES(P_ID_VENTA,L_ID_TRANSFERENCIA,P_DC,ABS(P_IMPORTE),L_GLOSA,L_ID_TIPOORIGEN);
                    
                    /*IF P_TIPO = 'T' THEN
                        L_ID_TRANSF := P_ID_VENTA;
                        L_ID_VENTA := NULL;
                    ELSE 
                        L_ID_VENTA := P_ID_VENTA;
                        L_ID_TRANSF := NULL;
                    END IF;*/
                    
                    IF P_TIPO = 'T' THEN
                        L_ID_TRANSF := P_ID_VENTA;
                        L_ID_VENTA := NULL;
                        L_ID_PVENTA := NULL;
                        L_ID_SALDO := NULL;
                    ELSIF P_TIPO = 'V' THEN
                        L_ID_VENTA := P_ID_VENTA;
                        L_ID_TRANSF := NULL;
                        L_ID_PVENTA := NULL;
                        L_ID_SALDO := NULL;
                    ELSIF P_TIPO = 'S' THEN
                        L_ID_SALDO := P_ID_VENTA;
                        L_ID_VENTA := NULL;
                        L_ID_TRANSF := NULL;
                        L_ID_PVENTA := NULL;
                    ELSE  --= P PAGOS A CIENTES
                        L_ID_PVENTA := P_ID_VENTA;
                        L_ID_VENTA := NULL;
                        L_ID_TRANSF := NULL;
                        L_ID_SALDO := NULL;
                    END IF;
                    INSERT INTO VENTA_TRANSFERENCIA_DETALLE(ID_VENTA,ID_TRANSFERENCIA,DC,IMPORTE,DETALLE,ID_TIPOORIGEN,ID_SALDO,ID_TRANSFERENCIA_P,ID_PVENTA)--P_TIPO varchar DEFAULT 'V'
                    VALUES (L_ID_VENTA,L_ID_TRANSFERENCIA,P_DC,ABS(P_IMPORTE),L_GLOSA,L_ID_TIPOORIGEN,L_ID_SALDO,L_ID_TRANSF,L_ID_PVENTA);
                    IF P_TIPO <> 'P' THEN
                        --GENERA ASIENTO DE ANTICIPOS---SOLO PARA EL CREDITO (SE HA MODIFICADO SI ES PAGO POR CHQ/TLC ALLI YA GENERA EL ASIENTO)
                        CALL pkg_accounting_sp_asiento_contable(L_ID_DINAMICA,L_ID_TIPOORIGEN,L_ID_TRANSFERENCIA,P_IMPORTE,L_GLOSA,L_ID_VOUCHER,0 ,L_ERROR,L_MSN);
                    END IF;
                ELSE  --GENERA EL ANTICIPO CUANDO NO HAY DOCUMENTO QUE AFECTAR
                    INSERT INTO VENTA_TRANSFERENCIA_DETALLE(ID_TRANSFERENCIA,DC,IMPORTE,DETALLE,ID_TIPOORIGEN)
                    VALUES (L_ID_TRANSFERENCIA,P_DC,ABS(P_IMPORTE),L_GLOSA,L_ID_TIPOORIGEN);
                    --GENERA ASIENTO DE ANTICIPOS---SOLO PARA EL CREDITO : P_ID_VENTA = ID_DEPOSITO PARA GENERAR EL ASIENTO DE ANTICIPO RELACIONADO AL DEPOSITO
                    --SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN FROM CAJA_DEPOSITO WHERE ID_DEPOSITO = P_ID_VENTA;
                    --pkg_accounting_sp_asiento_contable(L_ID_DINAMICA,L_ID_TIPOORIGEN,P_ID_VENTA,P_IMPORTE,L_GLOSA,L_ID_VOUCHER,0 ,L_ERROR,L_MSN); --los depositos lo genero en caja_deposito
                END IF;

                
            END IF;

--             <<salida_rapida>>
            P_ERROR := L_ERROR;
            P_MSN := L_MSN;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_crear_anticipos_clientes (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_VENTA bigint,P_IMPORTE bigint,P_DC text,P_CODIGO text,P_ERROR OUT bigint, P_MSN OUT text,P_TIPO text DEFAULT 'V') FROM PUBLIC;
