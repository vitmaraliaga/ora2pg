-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_venta_autoconsumo (P_ID_PEDIDO bigint,P_ID_PERSONA bigint,P_ERROR OUT bigint, P_MSN OUT text) AS $body$
DECLARE

        L_ID_VENTA bigint;
        L_ID_VDETALLE bigint;
        L_ID_CLIENTE bigint := 23; --UPeU
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(10);
        L_ID_ANHO bigint;
        L_ID_MES bigint;
        L_IGV bigint := 18;
        L_ID_CREDITO bigint :=2; --VENTA CREDITO
        L_ID_ALMACEN bigint;
        L_ID_ARTICULO bigint;
        L_CANTIDAD decimal(10,2);

        L_ID_TIPOIGV varchar(2);
        L_PRECIO decimal(10,2);
        --L_IGV numeric(10,2);
        L_IGV_ITEM decimal(10,2);
        L_PRECIO_BASE decimal(10,2);
        L_PRECIO_ALM decimal(10,2);
        L_BASE decimal(10,2);
        L_DESCUENTO decimal(10,2):=0;
        L_TOTALDESCUENTO decimal(10,2):=0;
        L_IMPORTE decimal(10,2);
        L_GRAVADO varchar(2);
        L_CONTAR bigint;

        L_PRECIO_ME decimal(10,2);
        L_PRECIO_BASE_ME decimal(10,2);
        L_PRECIO_ALM_ME decimal(10,2);
        L_BASE_ME decimal(10,2);
        L_IGV_ME decimal(10,2);
        L_DESCUENTO_ME decimal(10,2);
        L_IMPORTE_ME decimal(10,2);
        L_OTROS_CARGOS_ME decimal(10,2);
        L_ID_DINAMICA bigint;
        L_DETALLE varchar(100);
        L_ES_AUTOCONSUMO varchar(1) :='S';
        L_PRECIO_D decimal(10,2);

        ARTICULOS CURSOR FOR	
        SELECT 
                C.ID_ALMACEN,C.ID_ARTICULO,C.CANTIDAD,pkg_inventories_fc_articulo(C.ID_ARTICULO), C.PRECIO
        FROM PEDIDO_REGISTRO A JOIN PEDIDO_DETALLE B
        ON A.ID_PEDIDO = B.ID_PEDIDO
        JOIN PEDIDO_DESPACHO C
        ON B.ID_DETALLE = C.ID_DETALLE
        WHERE A.ID_PEDIDO = P_ID_PEDIDO
        AND C.ESTADO = '0';
        	

BEGIN  
   
        SELECT DISTINCT A.ID_ENTIDAD,(CASE WHEN A.ID_DEPTO = SUBSTR(B.ID_DEPTO,1,1) THEN A.ID_DEPTO ELSE SUBSTR(B.ID_DEPTO,1,1) END) AS ID_DEPTO,
        A.ID_ANHO,(TO_CHAR(clock_timestamp(),'MM'))::numeric  AS ID_MES --,A.ID_MES 
        INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES
        FROM PEDIDO_REGISTRO A JOIN ORG_SEDE_AREA B 
        ON A.ID_AREADESTINO = B.ID_SEDEAREA
        WHERE A.ID_PEDIDO = P_ID_PEDIDO;

        SELECT
                MAX(ID_ANHO) ID_ANHO INTO STRICT L_ID_ANHO
        FROM CONTA_ENTIDAD_ANHO_CONFIG
        WHERE ID_ENTIDAD = L_ID_ENTIDAD
        AND ACTIVO = '1';

        /*SELECT 
                ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES
        FROM PEDIDO_REGISTRO
        WHERE ID_PEDIDO = P_ID_PEDIDO;*/
  
    
        INSERT INTO VENTA(ID_PERSONA,ID_CLIENTE,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_COMPROBANTE,ID_IGV,ID_MONEDA,ID_LEYENDA,TIPOCAMBIO,SERIE,NUMERO,FECHA,ESTADO,ID_PEDIDO )
        VALUES (P_ID_PERSONA,L_ID_CLIENTE,L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,'03',L_IGV,7,'1000',0,'-','-',clock_timestamp(),0,P_ID_PEDIDO) RETURNING ID_VENTA INTO L_ID_VENTA;
        L_IGV:=L_IGV/100;
        OPEN ARTICULOS;
          FETCH ARTICULOS INTO L_ID_ALMACEN,L_ID_ARTICULO,L_CANTIDAD,L_DETALLE,L_PRECIO_D;
            WHILE ARTICULOS%FOUND LOOP
                RAISE NOTICE ' PISTA Vnt 01 ';
                CALL pkg_sales_sp_precio_articulo(L_ID_CLIENTE,L_ID_ALMACEN,L_ID_ARTICULO,L_ID_ANHO,L_ID_TIPOIGV,L_PRECIO_ALM,L_PRECIO,L_DESCUENTO);
                IF L_ID_ALMACEN <> 22 THEN  --BAZAR
                    L_PRECIO := L_PRECIO_D;
                END IF;
                RAISE NOTICE ' PISTA Vnt 02  L_ID_CLIENTE :%', L_ID_CLIENTE;
                SELECT COUNT(1) INTO STRICT L_CONTAR FROM TIPO_IGV WHERE ID_TIPOIGV=L_ID_TIPOIGV;
                IF L_CONTAR>0 THEN
                    SELECT GRAVADO INTO STRICT L_GRAVADO FROM TIPO_IGV WHERE ID_TIPOIGV=L_ID_TIPOIGV;
                END IF;
                L_DESCUENTO :=0;

                L_TOTALDESCUENTO:=L_DESCUENTO*L_CANTIDAD;
                L_PRECIO_BASE:=L_PRECIO;
                L_IMPORTE:=(L_PRECIO*L_CANTIDAD)-(L_TOTALDESCUENTO);
                L_BASE:=L_IMPORTE;
                L_IGV_ITEM:=0;
                IF L_GRAVADO IN ('G') THEN
                    L_PRECIO_BASE:=L_PRECIO/(1+L_IGV);
                    L_BASE:=L_IMPORTE/(1+L_IGV);
                    L_IGV_ITEM:=L_IMPORTE-L_BASE;
                END IF;
                L_DESCUENTO:=L_TOTALDESCUENTO;
                L_PRECIO_ME:=0;
                L_PRECIO_BASE_ME:=0;
                L_PRECIO_ALM_ME:=0;
                L_BASE_ME:=0;
                L_IGV_ME:=0;
                L_DESCUENTO_ME:=0;
                L_IMPORTE_ME:=0;
                L_OTROS_CARGOS_ME :=0;
                
                SELECT DISTINCT A.ID_DINAMICA INTO STRICT L_ID_DINAMICA
                FROM CONTA_DINAMICA A 
                WHERE A.ID_ENTIDAD = L_ID_ENTIDAD
                AND A.ID_DEPTO = L_ID_DEPTO
                AND A.ID_ANHO = L_ID_ANHO
                AND A.ID_MODULO = 13
                AND A.ID_ALMACEN = L_ID_ALMACEN 
                AND A.ACTIVO = 'S'  LIMIT 1;
                /*IF L_BASE = 0 OR L_BASE IS NULL THEN
                    P_ERROR :=1;
                    P_MSN := 'Base: '||L_BASE;
                ELSE*/
                  RAISE NOTICE ' PISTA Vnt 03  L_ID_ARTICULO: %  -  L_ID_TIPOIGV :%', L_ID_ARTICULO, L_ID_TIPOIGV;
                INSERT INTO TEST1(ID_TEST,NOM) VALUES (L_ID_ARTICULO,L_ID_TIPOIGV);
                RAISE NOTICE ' PISTA Vnt 03 - 1 -  %  -> L_ID_TIPOIGV :%  id_art :%', L_ID_VENTA, L_ID_TIPOIGV, L_ID_ARTICULO;
                --IF L_CONTAR > 0 THEN
                    INSERT INTO VENTA_DETALLE(ID_VENTA,ID_TIPOIGV,ID_ARTICULO,ID_ALMACEN,ID_DINAMICA,DETALLE,CANTIDAD,PRECIO,PRECIO_BASE,PRECIO_ALM,BASE,IGV,DESCUENTO,IMPORTE)
                    VALUES (L_ID_VENTA,L_ID_TIPOIGV,L_ID_ARTICULO,L_ID_ALMACEN,L_ID_DINAMICA,L_DETALLE,L_CANTIDAD,L_PRECIO,L_PRECIO_BASE,L_PRECIO_ALM,L_BASE,L_IGV_ITEM,L_DESCUENTO,L_IMPORTE);
                --END IF;
                RAISE NOTICE ' PISTA Vnt 04 ';
                FETCH ARTICULOS INTO L_ID_ALMACEN,L_ID_ARTICULO,L_CANTIDAD,L_DETALLE,L_PRECIO_D;
            END LOOP;
        CLOSE ARTICULOS;
         RAISE NOTICE ' PISTA Vnt 02 Fn';
        SELECT COUNT(1) INTO STRICT L_CONTAR FROM VENTA_DETALLE
        WHERE ID_VENTA = L_ID_VENTA;

        IF L_CONTAR > 0 THEN
            CALL pkg_sales_sp_actualizar_total_venta(L_ID_VENTA);
            CALL pkg_sales_sp_finalizar_venta(L_ID_VENTA,L_ID_CREDITO,0,0,0,NULL,NULL,P_ERROR,P_MSN,L_ES_AUTOCONSUMO);
        ELSE
            P_ERROR :=1;
            P_MSN := 'Venta sin Detalle: '||L_BASE||'-'||L_ID_ALMACEN||'-'||L_ID_ARTICULO||'-'||L_CANTIDAD;
        END IF;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_venta_autoconsumo (P_ID_PEDIDO bigint,P_ID_PERSONA bigint,P_ERROR OUT bigint, P_MSN OUT text) FROM PUBLIC;
