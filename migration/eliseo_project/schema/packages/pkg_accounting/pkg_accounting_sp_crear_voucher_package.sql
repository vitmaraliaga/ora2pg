-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_accounting,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_accounting_sp_crear_voucher ( p_id_entidad integer, p_id_depto text, p_id_anho integer, p_id_mes integer, p_fecha timestamp(0), p_id_tipoasiento text, p_id_tipovoucher bigint, p_id_seat_parent bigint, p_activo text, p_id_persona bigint, p_id_voucher OUT bigint ) AS $body$
DECLARE


        l_vou_id               bigint;
        l_cont                 bigint;
        l_nrovoucher           bigint;
        l_automatico           varchar(4);

        -- DATOS DEL CONFIG PARENT
        l_id_tipovoucher_child bigint;
        l_id_tipoasiento_child varchar(10);
        l_cantidad_child       bigint := 0;
        l_id_voucher_child     bigint;

BEGIN
        l_cont := 0;
        SELECT
            automatico
        INTO STRICT l_automatico
        FROM
            conta_voucher_config
        WHERE
                id_entidad = p_id_entidad
            AND id_depto = p_id_depto
            AND id_tipoasiento = p_id_tipoasiento
            AND id_anho = p_id_anho
            AND id_tipovoucher = p_id_tipovoucher;

        IF l_automatico = 'N' THEN  -- SI EL VOUCHER NO ES AUTOMATICO SE CREAN TODOS LOS QUE SEAN NECESARIOS
            SELECT
                coalesce(MAX(numero), 0) + 1
            INTO STRICT l_nrovoucher
            FROM
                conta_voucher
            WHERE
                    id_entidad = p_id_entidad
                AND id_depto = p_id_depto
                AND id_anho = p_id_anho
                AND id_mes = p_id_mes
                AND id_tipoasiento = p_id_tipoasiento
                AND id_tipovoucher = p_id_tipovoucher;

            SELECT
                coalesce(MAX(id_voucher), 0) + 1
            INTO STRICT l_vou_id
            FROM
                conta_voucher;

            p_id_voucher := l_vou_id;
            INSERT INTO conta_voucher(
                id_voucher,
                id_entidad,
                id_depto,
                id_anho,
                id_mes,
                id_tipoasiento,
                id_tipovoucher,
                numero,
                fecha,
                activo,
                id_persona,
                id_voucher_parent
            ) VALUES (
                l_vou_id,
                p_id_entidad,
                p_id_depto,
                p_id_anho,
                p_id_mes,
                p_id_tipoasiento,
                p_id_tipovoucher,
                l_nrovoucher,
                p_fecha,
                p_activo,
                p_id_persona,
                p_id_seat_parent
            );

        ELSE  -- EL SI VOUCHER ES AUTOMATICO SE CREA UNO POR DIA, CON LA PRIMERA OPCION
            SELECT
                COUNT(id_voucher)
            INTO STRICT l_cont
            FROM
                conta_voucher
            WHERE
                    id_entidad = p_id_entidad
                AND id_depto = p_id_depto
                AND id_anho = p_id_anho
                AND id_mes = p_id_mes
                AND id_tipoasiento = p_id_tipoasiento
                AND id_tipovoucher = p_id_tipovoucher
                AND to_char(fecha, 'YYYYDDMM') = to_char(clock_timestamp(), 'YYYYDDMM');

            IF l_cont = 0 THEN
                SELECT
                    coalesce(MAX(numero), 0) + 1
                INTO STRICT l_nrovoucher
                FROM
                    conta_voucher
                WHERE
                        id_entidad = p_id_entidad
                    AND id_depto = p_id_depto
                    AND id_anho = p_id_anho
                    AND id_mes = p_id_mes
                    AND id_tipoasiento = p_id_tipoasiento
                    AND id_tipovoucher = p_id_tipovoucher;

                SELECT
                    coalesce(MAX(id_voucher), 0) + 1
                INTO STRICT l_vou_id
                FROM
                    conta_voucher;

                p_id_voucher := l_vou_id;
                INSERT INTO conta_voucher(
                    id_voucher,
                    id_entidad,
                    id_depto,
                    id_anho,
                    id_mes,
                    id_tipoasiento,
                    id_tipovoucher,
                    numero,
                    fecha,
                    activo,
                    id_persona,
                    id_voucher_parent
                ) VALUES (
                    l_vou_id,
                    p_id_entidad,
                    p_id_depto,
                    p_id_anho,
                    p_id_mes,
                    p_id_tipoasiento,
                    p_id_tipovoucher,
                    l_nrovoucher,
                    clock_timestamp(),
                    p_activo,
                    p_id_persona,
                    p_id_seat_parent
                );

            ELSE
                IF l_cont = 1 THEN
                    SELECT
                        id_voucher
                    INTO STRICT l_vou_id
                    FROM
                        conta_voucher
                    WHERE
                            id_entidad = p_id_entidad
                        AND id_depto = p_id_depto
                        AND id_anho = p_id_anho
                        AND id_mes = p_id_mes
                        AND id_tipoasiento = p_id_tipoasiento
                        AND id_tipovoucher = p_id_tipovoucher
                        AND to_char(fecha, 'YYYYDDMM') = to_char(clock_timestamp(), 'YYYYDDMM');

                ELSE
                    SELECT
                        id_voucher
                    INTO STRICT l_vou_id
                    FROM
                        conta_voucher
                    WHERE
                            id_entidad = p_id_entidad
                        AND id_depto = p_id_depto
                        AND id_anho = p_id_anho
                        AND id_mes = p_id_mes
                        AND id_tipoasiento = p_id_tipoasiento
                        AND id_tipovoucher = p_id_tipovoucher
                        AND to_char(fecha, 'YYYYDDMM') = to_char(clock_timestamp(), 'YYYYDDMM')
                        AND coalesce(id_voucher_parent::text, '') = '';

                END IF;

                p_id_voucher := l_vou_id;
            END IF;

        END IF;

			-- SI EL VOUCHER_CONFIG TIENE UN HIJO, TAMBIEN LO CREAMOS SU HIJO
        IF p_id_entidad <> 7124 THEN
            SELECT
                COUNT(1)
            INTO STRICT l_cantidad_child
            FROM
                conta_voucher_config
            WHERE
                    id_entidad = p_id_entidad
                AND id_depto = p_id_depto
                AND id_anho = p_id_anho
                AND id_tipoasiento_parent = p_id_tipoasiento
                AND id_tipovoucher_parent = p_id_tipovoucher;

            IF l_cantidad_child = 1 THEN
                SELECT
                    id_tipoasiento,
                    id_tipovoucher
                INTO STRICT
                    l_id_tipoasiento_child,
                    l_id_tipovoucher_child
                FROM
                    conta_voucher_config
                WHERE
                        id_entidad = p_id_entidad
                    AND id_depto = p_id_depto
                    AND id_anho = p_id_anho
                    AND id_tipoasiento_parent = p_id_tipoasiento
                    AND id_tipovoucher_parent = p_id_tipovoucher;
                    -- AGREGAR HIJO // Comentado temporalmente 
                CALL pkg_accounting_sp_crear_voucher(p_id_entidad, p_id_depto, p_id_anho, p_id_mes, p_fecha,
                                               l_id_tipoasiento_child, l_id_tipovoucher_child, NULL, p_activo, p_id_persona,
                                               l_id_voucher_child);

                    -- UPDATE CHILD
                UPDATE conta_voucher
                SET
                    id_voucher_parent = p_id_voucher
                WHERE
                    id_voucher = l_id_voucher_child;

            END IF;

        END IF;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_accounting_sp_crear_voucher ( p_id_entidad integer, p_id_depto text, p_id_anho integer, p_id_mes integer, p_fecha timestamp(0), p_id_tipoasiento text, p_id_tipovoucher bigint, p_id_seat_parent bigint, p_activo text, p_id_persona bigint, p_id_voucher OUT bigint ) FROM PUBLIC;
