-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_accounting,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_accounting_sp_asiento_contable ( p_id_dinamica bigint, p_id_tipoorigen bigint, p_id_origen bigint, p_importe bigint, p_descripcion text, p_voucher bigint, p_importe_me bigint, p_error OUT bigint, p_msgerror OUT text ) AS $body$
DECLARE


        l_id_entidad     bigint;
        l_id_asiento     bigint;
        l_id_pedido      bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi  varchar(10);
        l_id_ctacte      varchar(10);
        l_dc             varchar(1);
        l_destino        varchar(10);
        l_origen         varchar(10);
        l_id_indicador   varchar(35);
        l_unico          varchar(1);
        l_unicoctacte    varchar(1);
        l_porcentaje     decimal(10,2);
        l_descripcion    varchar(255);
        l_id_casiento    varchar(50);
        l_id_fondo       varchar(50);
        l_base           decimal(10,2);
        l_igv            decimal(10,2);
        l_importe        decimal(10,2);
        l_importe_me     decimal(10,2);
        l_depto          varchar(10);
        l_cont           bigint;
        l_agrupa         varchar(1) := 'N';
        l_serie          varchar(4);
        l_numero         varchar(8);
        l_correlativo    varchar(20);
        l_editable       varchar(1) := 'N';
        l_ctas           varchar(200);
        l_ctates         varchar(200);
        l_actas          tablastring;
        l_actates        tablastring;
        l_buscar         bigint;
        l_unicoctated    varchar(1);
        p_id_asiento     bigint;
        casi CURSOR FOR
        SELECT
            a.id_asiento,
            a.id_restriccion,
            a.id_cuentaaasi,
            a.dc,
            a.id_indicador,
            a.unico,
            a.unico_ctacte,
            round((a.porcentaje * 100)::numeric, 2),
            a.nombre,
            coalesce(a.agrupa, 'N'),
            a.id_fondo
        FROM
            conta_dinamica_asiento a,
            conta_dinamica         d
        WHERE
                a.id_dinamica = d.id_dinamica
            AND a.id_dinamica = p_id_dinamica
        ORDER BY
            a.nro_asiento,
            a.dc DESC;


BEGIN
        p_error := 0;
        IF p_error = 0 THEN
            OPEN casi;
            FETCH casi INTO
                l_id_asiento,
                l_id_restriccion,
                l_id_cuentaaasi,
                l_dc,
                l_id_indicador,
                l_unico,
                l_unicoctacte,
                l_porcentaje,
                l_descripcion,
                l_agrupa,
                l_id_fondo;

            WHILE casi%found LOOP
                l_depto := NULL;
                l_id_ctacte := NULL;
                IF l_unico = 'U' THEN
                    SELECT
                        COUNT(1)
                    INTO STRICT l_cont
                    FROM
                        conta_dinamica_depto
                    WHERE
                        id_asiento = l_id_asiento;

                    IF l_cont > 0 THEN
                        SELECT
                            id_depto
                        INTO STRICT l_depto
                        FROM
                            conta_dinamica_depto
                        WHERE
                            id_asiento = l_id_asiento;

                    END IF;

                ELSIF ( l_unico = 'X' ) THEN
                    l_depto := '';
                END IF;

                IF l_unicoctacte = 'U' THEN
                    SELECT
                        COUNT(1)
                    INTO STRICT l_cont
                    FROM
                        conta_dinamica_cta_cte
                    WHERE
                        id_asiento = l_id_asiento;

                    IF l_cont > 0 THEN
                        SELECT
                            id_ctacte
                        INTO STRICT l_id_ctacte
                        FROM
                            conta_dinamica_cta_cte
                        WHERE
                            id_asiento = l_id_asiento;

                    END IF;

                ELSIF ( l_unicoctated = 'M' ) THEN
                    SELECT
                        position('|' in l_ctates)
                    INTO STRICT l_buscar
;

                    IF l_buscar > 0 THEN
                        SELECT
                            fc_split(l_ctas, '|')
                        INTO STRICT l_actas
;

                        SELECT
                            fc_split(l_ctates, '|')
                        INTO STRICT l_actates
;

                        SELECT
                            fc_obtener_dptoctcte(l_actas, l_actates, l_id_cuentaaasi)
                        INTO STRICT l_id_ctacte
;

                    ELSE
                        l_id_ctacte := l_ctates;
                    END IF;

                END IF;
                 /*
                    SELECT CASE L_ID_INDICADOR
                          WHEN 'IMPORTE' THEN (L_IMPORTE)                --*(L_PORCENTAJE/100)
                          WHEN 'BASE' THEN (L_BASE)                      --*(L_PORCENTAJE/100)
                          WHEN 'IGV' THEN (L_IGV)                        --*(L_PORCENTAJE/100)
                          ELSE 0
                       END
                    INTO P_IMPORTE
                    FROM DUAL;
                    SELECT CASE
                              WHEN L_ID_INDICADOR = 'IMPORTE' AND L_DC = 'D' THEN 'S'
                              WHEN L_ID_INDICADOR = 'BASE' AND L_DC = 'D' THEN 'S'
                              WHEN L_ID_INDICADOR = 'IGV' THEN 'N'
                              ELSE 'N'
                           END
                      INTO l_EDITABLE
                      FROM DUAL;*/
                IF l_dc = 'C' THEN
                    l_importe := p_importe * ( -1 );
                    l_importe_me := p_importe_me * ( -1 );
                ELSE
                    l_importe := p_importe;
                    l_importe_me := p_importe_me;
                END IF;

                IF p_importe <> 0 THEN
                    p_error := 0;
                    CALL pkg_accounting_sp_add_conta_asiento(p_id_asiento, p_id_tipoorigen, p_id_origen, l_id_fondo, l_depto,
                                                       l_id_cuentaaasi, l_id_ctacte, l_id_restriccion, l_importe, p_descripcion,
                                                       p_voucher, l_importe_me, '1');

                END IF;

                FETCH casi INTO
                    l_id_asiento,
                    l_id_restriccion,
                    l_id_cuentaaasi,
                    l_dc,
                    l_id_indicador,
                    l_unico,
                    l_unicoctacte,
                    l_porcentaje,
                    l_descripcion,
                    l_agrupa,
                    l_id_fondo;

            END LOOP;

            CLOSE casi;
            p_error := 0;
        END IF;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_accounting_sp_asiento_contable ( p_id_dinamica bigint, p_id_tipoorigen bigint, p_id_origen bigint, p_importe bigint, p_descripcion text, p_voucher bigint, p_importe_me bigint, p_error OUT bigint, p_msgerror OUT text ) FROM PUBLIC;
