-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_product,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_product_sp_crear_venta_detalle_inven (P_ID_VENTA bigint,P_ID_ARTICULO text,P_ID_ALMACEN bigint,P_CANTIDAD bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(10);
        L_ID_ANHO bigint;
        L_ID_CLIENTE bigint;
        L_ID_POLITICA bigint;
        L_ID_DINAMICA bigint;
        l_cont bigint;
        l_precio decimal(10,2);
        l_igv decimal(10,2);
        l_igv_item decimal(10,2);
        l_precio_base decimal(10,2);
        l_precio_alm decimal(10,2);
        l_base decimal(10,2);
        l_descuento decimal(10,2):=0;
        l_totaldescuento decimal(10,2):=0;
        l_importe decimal(10,2);
        l_tc decimal(10,3);
        l_id_tipoigv bigint;
        l_gravado varchar(2);
        l_precio_me decimal(10,2);
        l_igv_me decimal(10,2);
        l_precio_base_me decimal(10,2);
        l_precio_alm_me decimal(10,2);
        l_base_me decimal(10,2);
        l_descuento_me decimal(10,2);
        l_importe_me decimal(10,2);
        l_id_moneda bigint;
        l_contar bigint;
        L_DETALLE varchar(255);
        L_STOCK decimal(10,2);
        L_STOCK_T decimal(10,2);
        L_COSTO_ST decimal(10,2);
        L_MSN varchar(200):='';
        L_CONTA bigint;

        L_NOMBRE_MODULO varchar(255);
        L_NOMBRE_ALMACEN varchar(255);
        L_CODIGO varchar(8);
        l_otros_cargos decimal(10,2) :=0;
        l_otros_cargos_me decimal(10,2) :=0;
        L_CANTIDAD decimal(10,2);
        L_ID_ALMACEN_P bigint;
        L_ID_ALM bigint;

        L_CANTIDAD_REAL decimal(10,2);

        --L_ID_TRANSFERENCIA numeric :=0;
        L_ERROR bigint :=0;
        L_MSGERROR varchar(255) :='';
        L_CANT bigint;

BEGIN
          
            --obtiene igv,TC
            SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_IGV,TIPOCAMBIO,ID_MONEDA,ID_CLIENTE INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,l_igv,l_tc,l_id_moneda,l_id_cliente 
            FROM venta WHERE id_venta=P_ID_VENTA;

            SELECT NOMBRE,SUBSTR(CODIGO,9,16) INTO STRICT L_DETALLE, L_CODIGO FROM INVENTARIO_ARTICULO WHERE ID_ARTICULO = P_ID_ARTICULO;

            SELECT NOMBRE INTO STRICT L_NOMBRE_ALMACEN FROM INVENTARIO_ALMACEN WHERE ID_ALMACEN = P_ID_ALMACEN;
            SELECT NOMBRE INTO STRICT L_NOMBRE_MODULO FROM LAMB_MODULO WHERE ID_MODULO = 13;

            --OBTENGO EL ALMACEN PARENT
            SELECT ID_PARENT INTO STRICT L_ID_ALMACEN_P FROM INVENTARIO_ALMACEN
            WHERE ID_ALMACEN = P_ID_ALMACEN;

            IF coalesce(L_ID_ALMACEN_P::text, '') = '' THEN
                L_ID_ALM := P_ID_ALMACEN;
            ELSE
                L_ID_ALM := L_ID_ALMACEN_P;
            END IF;

            
            SELECT COUNT(1) INTO STRICT l_contar 
            FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
            JOIN TIPO_GRUPO_CONTA C ON C.ID_TIPOGRUPOCONTA = B.ID_TIPOGRUPOCONTA
            JOIN CONTA_ENTIDAD_TRANSACCION D ON D.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION AND D.ID_ENTIDAD = A.ID_ENTIDAD
            WHERE A.ID_ENTIDAD = L_ID_ENTIDAD
            AND A.ID_DEPTO = L_ID_DEPTO
            AND A.ID_ANHO = L_ID_ANHO
            AND A.ID_MODULO = 13
            AND A.ID_ALMACEN = L_ID_ALM
            AND C.CODIGO  = 'VI'
            AND A.ACTIVO = 'S';

            IF l_contar > 1 THEN
                L_ERROR:=1;
                L_MSGERROR := 'Alto, Hay mas de una dinámica contable para la venta en el almacén: ' ||L_NOMBRE_ALMACEN|| ', y el módulo: ' ||L_NOMBRE_MODULO||', Cant. Dina.'||l_contar;
--                 GOTO salida_rapida;
            ELSIF l_contar = 0 THEN
                L_ERROR:=1;
                L_MSGERROR := 'Alto, No existe una dinámica contable para la venta en el almacén: ' ||L_NOMBRE_ALMACEN|| ', y el módulo: '||L_NOMBRE_MODULO||', Cant. Dina.'||l_contar;
--                 GOTO salida_rapida;
            END IF;

            SELECT COUNT(1) into STRICT l_contar 
            FROM INVENTARIO_ARTICULO
            WHERE ID_ARTICULO = P_ID_ARTICULO
            AND coalesce(ID_UNIDADMEDIDA::text, '') = '';

            IF l_contar > 0 THEN
                L_ERROR:=1;
                L_MSGERROR := 'Alto, EL PRODUCTO no tiene Unidad de medida';
--                 GOTO salida_rapida;
            END IF;

            IF L_ERROR = 0 THEN
                                        
                    SELECT A.ID_DINAMICA INTO STRICT L_ID_DINAMICA
                    FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
                    JOIN TIPO_GRUPO_CONTA C ON C.ID_TIPOGRUPOCONTA = B.ID_TIPOGRUPOCONTA
                    JOIN CONTA_ENTIDAD_TRANSACCION D ON D.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION AND D.ID_ENTIDAD = A.ID_ENTIDAD
                    WHERE A.ID_ENTIDAD = L_ID_ENTIDAD
                    AND A.ID_DEPTO = L_ID_DEPTO
                    AND A.ID_ANHO = L_ID_ANHO
                    AND A.ID_MODULO = 13
                    AND A.ID_ALMACEN = L_ID_ALM
                    AND C.CODIGO  = 'VI'
                    AND A.ACTIVO = 'S';

                    CALL pkg_inventories_sp_articulo_stock(P_ID_ALMACEN,P_ID_ARTICULO,L_ID_ANHO,L_STOCK,L_COSTO_ST,L_MSN);
                    CALL pkg_inventories_sp_articulo_stock_temp(P_ID_ALMACEN,P_ID_ARTICULO,L_ID_ANHO,L_STOCK_T,L_MSN);

                    IF L_STOCK > 0 THEN
                        IF L_STOCK < 1 THEN 
                            --P_CANTIDAD := L_STOCK;
                            L_CANTIDAD_REAL := L_STOCK;
                        ELSE
                            L_CANTIDAD_REAL := P_CANTIDAD;
                        END IF;
                        IF (L_STOCK-L_STOCK_T) >= L_CANTIDAD_REAL THEN
                            --obtiene precio del almacen
                            CALL pkg_sales_sp_precio_articulo(l_id_cliente,P_ID_ALMACEN,P_ID_ARTICULO,L_ID_ANHO,l_id_tipoigv,l_precio_alm,l_precio,l_descuento);

                            IF l_precio > 0 THEN
                                if coalesce(l_precio_alm::text, '') = '' then
                                    l_precio_alm:=0;
                                end if;

                                select count(1) into STRICT l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                                if l_contar>0 then
                                    select GRAVADO into STRICT l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                                end if;

                                --IF L_CODIGO = '24111503' THEN --CODIGO PARA IMPUESTO DE BOLSAS
                                IF L_CODIGO IN ('24111586','24111587') THEN 
                                    l_precio := l_precio - 0.5;
                                    l_otros_cargos := L_CANTIDAD_REAL * 0.5;
                                END IF;

                                l_igv:=l_igv/100;
                                l_totaldescuento:=l_descuento*L_CANTIDAD_REAL;
                                --l_precio:=P_PRECIO;
                                l_precio_base:=l_precio;
                                l_importe:=((l_precio+l_otros_cargos)*L_CANTIDAD_REAL)-(l_totaldescuento);
                                --l_precio_alm:=l_precio_alm;
                                l_base:=l_importe;
                                l_igv_item:=0;
                                if l_gravado in ('G') then
                                    l_precio_base:=l_precio/(1+l_igv);
                                    l_base:=(l_importe-l_otros_cargos)/(1+l_igv);
                                    l_igv_item:=(l_importe-l_otros_cargos)-l_base;
                                end if;
                                l_descuento:=l_totaldescuento;
                                l_precio_me:=0;
                                l_precio_base_me:=0;
                                l_precio_alm_me:=0;
                                l_base_me:=0;
                                l_igv_me:=0;
                                l_descuento_me:=0;
                                l_importe_me:=0;
                                l_otros_cargos_me :=0;
                              
                                if l_id_moneda=9 then
                                    --l_totaldescuento:=l_descuento*P_CANTIDAD;
                                    --l_totaldescuento:=l_totaldescuento/l_tc;
                                    l_totaldescuento:=l_totaldescuento/l_tc;
                                    l_precio_me:=l_precio/l_tc;
                                    l_precio_base_me:=l_precio_base/l_tc;
                                    l_importe_me:=l_importe/l_tc;
                                    l_precio_alm_me:=l_precio_alm/l_tc;
                                    l_base_me:=l_base/l_tc;
                                    l_igv_me:=l_igv_item/l_tc;
                                    l_descuento_me:=l_totaldescuento;
                                    l_otros_cargos_me := l_otros_cargos/l_tc;
                                end if;
                                SELECT COUNT(1) INTO STRICT L_CANT FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA AND ID_ARTICULO = P_ID_ARTICULO;
                                IF L_CANT > 0 THEN
                                    SELECT ID_VDETALLE,CANTIDAD INTO STRICT l_cont, L_CANTIDAD FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA AND ID_ARTICULO = P_ID_ARTICULO;
                                    CALL pkg_sales_sp_update_venta_detalle_inven(P_ID_VENTA,l_cont,L_CANTIDAD_REAL+L_CANTIDAD,L_ERROR,L_MSGERROR);
                                    IF L_ERROR > 0 THEN
--                                         GOTO salida_rapida;
                                    END IF;
                                ELSE
                                    SELECT COALESCE(MAX(ID_VDETALLE),0)+1 INTO STRICT l_cont FROM VENTA_DETALLE;

                                    INSERT INTO VENTA_DETALLE(
                                    ID_VDETALLE,ID_VENTA,ID_TIPOIGV,ID_ARTICULO,ID_ALMACEN,ID_DINAMICA,DETALLE,CANTIDAD,PRECIO,PRECIO_BASE,PRECIO_ALM,BASE,IGV,DESCUENTO,IMPORTE,PRECIO_ME,PRECIO_BASE_ME,PRECIO_ALM_ME,BASE_ME,IGV_ME,DESCUENTO_ME,IMPORTE_ME,OTROS_CARGOS,OTROS_CARGOS_ME
                                    )VALUES (
                                    l_cont,P_ID_VENTA,l_id_tipoigv,P_ID_ARTICULO,P_ID_ALMACEN,L_ID_DINAMICA,L_DETALLE,L_CANTIDAD_REAL,l_precio,l_precio_base,l_precio_alm,l_base,l_igv_item,l_descuento,l_importe,l_precio_me,l_precio_base_me,l_precio_alm_me,l_base_me,l_igv_me,l_descuento_me,l_importe_me,l_otros_cargos,l_otros_cargos_me
                                    );
                                    CALL pkg_sales_sp_actualizar_total_venta(P_ID_VENTA);
                                END IF;
                                L_ERROR:=0;
                            ELSE
                                L_ERROR:=1; --PRECIO ES MENOR A 0
                                L_MSGERROR := 'PRECIO ES MENOR A 0';
                            END IF;
                        ELSE
                            L_ERROR := 1;
                            L_MSGERROR := 'Stock Insuficiente: '||L_STOCK;
                        END IF;
                    ELSE
                        L_ERROR := 1;
                        L_MSGERROR := 'Stock Insuficiente: '||L_STOCK;
                    END IF;
            END IF;

--         <<salida_rapida>>
        
        P_ERROR:= L_ERROR;
        P_MSGERROR :=L_MSGERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_product_sp_crear_venta_detalle_inven (P_ID_VENTA bigint,P_ID_ARTICULO text,P_ID_ALMACEN bigint,P_CANTIDAD bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
