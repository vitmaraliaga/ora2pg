-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_inventories,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_inventories_sp_generar_asiento (P_ID_MOVIMIENTO bigint, P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


        l_dinamica bigint;
        l_asiento bigint;
        l_detalle varchar(150);
        l_base decimal(10,2);
        l_igv decimal(10,2);
        l_descuento decimal(10,2);
        l_importe decimal(10,2);
        l_precio_alm decimal(10,2);
        l_ctas varchar(200);
        l_deptos varchar(200);
        l_ctates varchar(200);

        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;

        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_porcentaje decimal(10,2);
        l_unicoctate varchar(1);

        l_id_asientod bigint;
        l_id_tipopland bigint;
        l_id_restricciond varchar(50);
        l_id_cuentaaasid varchar(10);
        l_dcd varchar(1);
        l_id_indicadord  varchar(35);
        l_unicod varchar(1);
        l_porcentajed decimal(10,2);
        l_unicoctated varchar(1);

        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_fondo varchar(10);
        l_importeasiento decimal(10,2);
        l_descripcion varchar(255);
        l_memo varchar(255);
        l_voucher varchar(10);
        l_ref_id varchar(100);

        l_id_entidad bigint;
        l_buscar bigint;

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_operorigen bigint:=6;

        --validacion
        l_contar bigint;
        l_debito decimal(10,2);
        l_credito decimal(10,2);
        l_cont bigint;
        l_serie varchar(5);
        l_numero varchar(15);
        l_fecha timestamp(0);
        l_agrupa varchar(1);
        l_id_almacen bigint;
        l_glosa varchar(100);
        l_det varchar(150);
        l_det2 varchar(150);
        L_ALMACEN varchar(50);

        cdet CURSOR FOR	
        SELECT  ID_DINAMICA,pkg_inventories_fc_articulo(ID_ARTICULO) AS DETALLE,0 AS BASE,0 AS IGV,0 AS DESCUENTO,IMPORTE,COSTO AS PRECIO_ALM 
        FROM INVENTARIO_DETALLE
        WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO
        ORDER BY ID_MOVDETALLE;	

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,coalesce(a.AGRUPA,'N')
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        --AND coalesce(d.ID_PARENT,0)=0
        AND a.ID_DINAMICA =l_dinamica
        --AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        casides CURSOR FOR		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,coalesce(AGRUPA,'N')
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT = l_asiento
        ORDER BY NRO_ASIENTO,DC desc;

    
BEGIN
         
	   
           
        l_fondo:='10';
        SELECT P_ID_MOVIMIENTO::text INTO STRICT l_memo;
        --OBTIENE DATOS DE LA VENTA
        SELECT ID_ENTIDAD,SERIE, case when NUMERO='-' then NUMERO else (NUMERO)::numeric ::text end,FECHA,ID_ALMACEN, ID_VOUCHER INTO STRICT l_id_entidad,l_serie,l_numero,l_fecha,l_id_almacen, l_voucher
        FROM INVENTARIO_MOVIMIENTO WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO;

        SELECT NOMBRE INTO STRICT L_ALMACEN FROM INVENTARIO_ALMACEN
        WHERE ID_ALMACEN = l_id_almacen;

        DELETE FROM conta_asiento WHERE id_tipoorigen=6
	    AND voucher=l_voucher
            AND id_origen=P_ID_MOVIMIENTO;

        SELECT (CASE  
                    WHEN TIPO = 'I' AND coalesce(GUIA::text, '') = '' THEN 'Ing.Diversos-'||L_ALMACEN||'-'||FC_MES_NAME(to_char(FECHA,'MM'))
                    WHEN TIPO = 'I' AND (GUIA IS NOT NULL AND GUIA::text <> '') THEN 'PU/Ing.Diversos-'||L_ALMACEN||'-'||FC_MES_NAME(to_char(FECHA,'MM'))
                    WHEN TIPO = 'S' THEN 'Sal.Diversas-'||L_ALMACEN||'-'||FC_MES_NAME(to_char(FECHA,'MM'))
                    ELSE 'X'
                END) AS TIPO,
                (CASE  
                    WHEN TIPO = 'I' AND coalesce(GUIA::text, '') = '' THEN 'Ing.Div.-'
                    WHEN TIPO = 'I' AND (GUIA IS NOT NULL AND GUIA::text <> '') THEN 'Ing.Div.-'
                    WHEN TIPO = 'S' THEN 'Sal.Div.-'
                    ELSE 'X'
                END) AS TIPO
                INTO STRICT l_det,l_det2
        FROM INVENTARIO_MOVIMIENTO WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO;

        RAISE NOTICE '=========l_dinamica %', l_dinamica;
        RAISE NOTICE '=========l_detalle %', l_detalle;
        RAISE NOTICE '=========l_base %', l_base;
        RAISE NOTICE '=========l_igv %', l_igv;
        RAISE NOTICE '=========l_descuento %', l_descuento;
        RAISE NOTICE '=========l_importe %', l_importe;
        RAISE NOTICE '=========l_precio_alm %', l_precio_alm;
        --DETALLE
        OPEN cdet;
        FETCH cdet INTO l_dinamica,l_detalle,l_base,l_igv,l_descuento,l_importe,l_precio_alm;

        WHILE cdet%FOUND LOOP
            ---DENAMICA ASIENTO
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
            WHILE casi%FOUND LOOP

                SELECT (case when l_id_indicador='PRECIO_ALM' then l_precio_alm
                            when l_id_indicador='BASE' then l_base
                            when l_id_indicador='IGV' then l_igv
                            when l_id_indicador='DESCUENTO' then l_descuento
                            when l_id_indicador='IMPORTE' then l_importe
                            when l_id_indicador='COSTO_ALM' then l_importe
                      else 0 end)*(l_porcentaje)  INTO STRICT l_importeasiento
;

                l_depto:=null;
                l_cuenta_cte:=null;

                if l_unico='U' then
                    SELECT ID_DEPTO INTO STRICT l_depto FROM CONTA_DINAMICA_DEPTO WHERE id_entidad = l_id_entidad AND id_asiento = l_id_asiento;
                elsif (l_unicoctated='M') then
                    SELECT position('|' in l_deptos) into STRICT l_buscar;
                    if l_buscar>0 then
                        SELECT FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                        SELECT FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                        SELECT FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into STRICT l_depto;
                    else
                    l_depto:=l_deptos;
                   end if;
                elsif (l_unicoctated='X') then
                    SELECT FC_DEPTO_CLIENTE(l_id_almacen) INTO STRICT l_depto;
                end if;

                if l_unicoctate='U' then
                    SELECT  count(1) into STRICT l_cont FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad = l_id_entidad AND id_asiento = l_id_asiento;
                    if l_cont>0 then
                        SELECT ID_CTACTE into STRICT l_cuenta_cte FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad = l_id_entidad AND id_asiento = l_id_asiento;
                    end if;
                elsif (l_unicoctated='M') then
                    SELECT position('|' in l_ctates) into STRICT l_buscar;
                    if l_buscar>0 then
                        select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                        select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                        select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into STRICT l_cuenta_cte;
                    else
                        l_cuenta_cte:=l_ctates;
                    end if;
                --elsif(l_unicoctated='X') then
                    --SELECT NUM_DOCUMENTO into l_cuenta_cte FROM VW_PERSONA_NATURAL WHERE ID_PERSONA=l_id_cliente;
                end if;

                if l_dc='C' then
                    l_importeasiento:=l_importeasiento*(-1);
                end if;

                SELECT count(*) into STRICT l_cont FROM CONTA_ASIENTO
                WHERE ID_TIPOORIGEN = l_id_operorigen
                AND ID_ORIGEN = P_ID_MOVIMIENTO
                AND coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                AND CUENTA =l_id_cuentaaasi
                AND coalesce(CUENTA_CTE,'-') = coalesce(l_cuenta_cte,'-')
                AND case when importe>0 then 'D' else 'C' end=l_dc;

                if l_importeasiento<>0 then
                    /*if l_cont=0 then
                        INSERT INTO CONTA_ASIENTO (
                        ID_OPERORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,REF_ID
                        )VALUES (l_id_operorigen,P_ID_MOVIMIENTO,l_fondo,l_depto,l_id_cuentaaasi,l_cuenta_cte,l_id_restriccion,l_importeasiento,'(Doc: '||l_serie||'-'||l_numero||')-'||l_descripcion,l_memo,l_voucher,null,l_ref_id 
                        );
                    else                  
                        UPDATE CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                        WHERE ID_OPERORIGEN = l_id_operorigen
                        AND ID_ORIGEN = P_ID_MOVIMIENTO
                        AND coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                        AND CUENTA =l_id_cuentaaasi
                        AND coalesce(CUENTA_CTE,'-') = coalesce(l_cuenta_cte,'-')
                        AND case when importe>0 then 'D' else 'C' end=l_dc;                    
                    end if;*/
                    /*IF l_agrupa='S' and l_cont>0 THEN
                                UPDATE CONTA_ASIENTO SET IMPORTE=IMPORTE+l_importeasiento
                                WHERE ID_TIPOORIGEN = l_id_operorigen
                                AND ID_ORIGEN = P_ID_MOVIMIENTO
                                AND coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                                AND CUENTA = l_id_cuentaaasid
                                AND coalesce(CUENTA_CTE,'-')= coalesce(l_cuenta_cte,'-')
                                AND case when importe>0 then 'D' else 'C' end=l_dc;
                          
                            ELSE
                                INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,REF_ID,AGRUPA
                                )VALUES (l_id_operorigen,P_ID_MOVIMIENTO,l_fondo,l_depto,l_id_cuentaaasi,l_cuenta_cte,l_id_restriccion,l_importeasiento,
                                case when l_agrupa='N' then  l_detalle||' - (Doc: '||l_serie||'-'||l_numero||')-'||to_char(l_fecha,'DD/MM/YYYY') else l_descripcion||' - (Doc: '||l_serie||'-'||l_numero||')-'||FC_MES_NAME(to_char(l_fecha,'MM')) end,
                                l_memo,l_voucher,null,l_ref_id,l_agrupa
                                );
                            END IF;*/
                            
                    IF l_agrupa='S' THEN
                        l_glosa :=SUBSTR(l_det||'-(Doc: '||l_serie||'-'||l_numero||')',1,50);
                    ELSE
                        l_glosa :=SUBSTR(l_det2||'-'||l_detalle||'-'||to_char(l_fecha,'DD/MM/YY')||'-(Doc: '||l_serie||'-'||l_numero||')',1,80);
                    END IF;
                    
                    INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,REF_ID,AGRUPA
                    )VALUES (l_id_operorigen,P_ID_MOVIMIENTO,l_fondo,l_depto,l_id_cuentaaasi,l_cuenta_cte,l_id_restriccion,l_importeasiento,
                    --case when l_agrupa='N' then  l_detalle||' - (Doc: '||l_serie||'-'||l_numero||')-'||to_char(l_fecha,'DD/MM/YY') else l_descripcion||' - (Doc: '||l_serie||'-'||l_numero||')-'||FC_MES_NAME(to_char(l_fecha,'MM')) end,
                    l_glosa,
                    l_memo,l_voucher,null,l_ref_id,l_agrupa
                    );
                            
                end if;
                  --DESTINO
                    OPEN casides;
                        FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                    WHILE casides%FOUND LOOP

                        SELECT (case when l_id_indicadord='PRECIO_ALM' then l_precio_alm
                                  when l_id_indicadord='BASE' then l_base
                                  when l_id_indicadord='IGV' then l_igv
                                  when l_id_indicadord='DESCUENTO' then l_descuento
                                  when l_id_indicadord='IMPORTE' then l_importe
                            else 0 end)*(l_porcentaje)  into STRICT l_importeasiento
;

                        l_depto:=null;
                        l_cuenta_cte:=null;

                        if l_unicod='U' then
                            SELECT ID_DEPTO INTO STRICT l_depto FROM CONTA_DINAMICA_DEPTO WHERE id_entidad = l_id_entidad AND id_asiento = l_id_asientod;
                        elsif (l_unicod='M') then
                            SELECT position('|' in l_deptos) into STRICT l_buscar;
                            if l_buscar>0 then
                                select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                                select FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                                select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into STRICT l_depto;
                            else
                                l_depto:=l_deptos;
                            end if;
                        --elsif(l_unicod='X') then
                            --SELECT FC_DEPTO_CLIENTE(l_id_cliente) INTO l_depto FROM dual;
                        end if;

                        if l_unicoctated='U' then
                            SELECT  count(1) into STRICT l_cont FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad=l_id_entidad AND id_asiento=l_id_asientod;
                            if l_cont>0 then
                                SELECT ID_CTACTE into STRICT l_cuenta_cte FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad=l_id_entidad AND id_asiento=l_id_asientod;
                            end if;

                        elsif (l_unicoctated='M') then
                            SELECT position('|' in l_ctates) into STRICT l_buscar;
                            if l_buscar>0 then
                                select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                                select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                                select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into STRICT l_cuenta_cte;
                            else
                                l_cuenta_cte:=l_ctates;
                            end if;
                        --elsif(l_unicoctated='X') then
                            --select NUM_DOCUMENTO into l_cuenta_cte from VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                        end if;

                        if l_dc='C' then
                            l_importeasiento:=l_importeasiento*(-1);
                        end if;
                        if l_importeasiento<>0 then

                            SELECT count(1) into STRICT l_cont FROM CONTA_ASIENTO
                            WHERE ID_TIPOORIGEN = l_id_operorigen
                            AND ID_ORIGEN = P_ID_MOVIMIENTO
                            AND coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                            AND CUENTA = l_id_cuentaaasid
                            AND coalesce(CUENTA_CTE,'-')= coalesce(l_cuenta_cte,'-')
                            AND case when importe>0 then 'D' else 'C' end=l_dc;

                            IF l_agrupa='S' and l_cont>0 THEN
                                UPDATE CONTA_ASIENTO SET IMPORTE=IMPORTE+l_importeasiento
                                WHERE ID_TIPOORIGEN = l_id_operorigen
                                AND ID_ORIGEN = P_ID_MOVIMIENTO
                                AND coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                                AND CUENTA = l_id_cuentaaasid
                                AND coalesce(CUENTA_CTE,'-')= coalesce(l_cuenta_cte,'-')
                                AND case when importe>0 then 'D' else 'C' end=l_dc;

                            ELSE
                                INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,REF_ID,AGRUPA
                                )VALUES (l_id_operorigen,P_ID_MOVIMIENTO,l_fondo,l_depto,l_id_cuentaaasi,l_cuenta_cte,l_id_restriccion,l_importeasiento,
                                case when l_agrupa='N' then  l_detalle||' - (Doc: '||l_serie||'-'||l_numero||')-'||to_char(l_fecha,'DD/MM/YYYY') else l_descripcion||' - (Doc: '||l_serie||'-'||l_numero||')-'||FC_MES_NAME(to_char(l_fecha,'MM')) end,
                                l_memo,l_voucher,null,l_ref_id,l_agrupa
                                );
                            END IF;

                        end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                END LOOP;
                CLOSE casides;
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;

              END LOOP;
              CLOSE casi;

            FETCH cdet INTO l_dinamica,l_detalle,l_base,l_igv,l_descuento,l_importe,l_precio_alm;

        END LOOP;
        CLOSE cdet;
        
        SELECT count(1) into STRICT l_contar FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_operorigen
        AND ID_ORIGEN=P_ID_MOVIMIENTO;

        if l_contar=0 then
            l_error:=3; --no se ha generado el asiento
            l_msgerror:='ASIENTO ALMACEN: No se ha generado el asiento';

        else
            SELECT COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
                COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
            INTO STRICT l_debito,l_credito
            FROM CONTA_ASIENTO
            WHERE ID_TIPOORIGEN=l_id_operorigen
            AND ID_ORIGEN=P_ID_MOVIMIENTO;

            if l_credito=0 or l_credito=0 then
                l_error:=4; --importe de debito o credito igual a cero
                l_msgerror:='ASIENTO ALMACEN: Importe de debito o credito igual a cero';
            else
                if l_credito<>l_credito then
                    l_error:=5; --descuadre de asiento
                    l_msgerror:='ASIENTO ALMACEN: Descuadre de asiento';
                end if;
            end if;

        end if;

        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_inventories_sp_generar_asiento (P_ID_MOVIMIENTO bigint, P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
