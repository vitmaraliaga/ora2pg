-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_pstoplanilla,public;

        
        
    /*
    PROCEDURE pkg_pstoplanilla_sp_planilla_presupuesto(P_ID_ENTIDAD numeric,P_ID_DEPTO_PADRE varchar,P_ID_ANHO numeric,P_ID_PERSONA numeric,P_ID_PSTONEGOCIO numeric,P_ID_EJE numeric, P_ID_AUXILIAR numeric,P_ERROR OUT numeric,P_MSGERROR out varchar) IS
    l_error numeric:=0;
    l_msgerror varchar(200):='';
    l_contar numeric;
    l_id_presupuesto numeric;
    l_id_evento numeric;
    l_descripcion varchar(300);
    l_total_ingreso numeric(10,2);
    l_total_gasto numeric(10,2);
    l_id_presupuesto_del numeric;
  BEGIN
  
    SELECT COALESCE(MAX(ID_PRESUPUESTO),0)+1 INTO l_id_presupuesto FROM PSTO_PRESUPUESTO;
    
    SELECT D.id_evento into l_id_evento
    FROM PSTO_PLLA_CONCEPTO_ACTIVIDAD B,
    PSTO_ACTIVIDAD D
    WHERE B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
    AND B.ID_ENTIDAD=P_ID_ENTIDAD
    AND B.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
    AND B.ID_AUXILIAR=P_ID_AUXILIAR
    GROUP BY D.id_evento;
    
    
    SELECT  NOMBRE INTO l_descripcion  FROM PSTO_EVENTO WHERE ID_EVENTO=l_id_evento;
    
    
    select 
      COUNT(*) INTO l_contar
      FROM PSTO_PLLA_CONCEPTO_ACTIVIDAD B,
      PSTO_ACTIVIDAD D
      WHERE B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
      AND B.ID_ENTIDAD=P_ID_ENTIDAD
      AND B.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND B.ID_AUXILIAR=P_ID_AUXILIAR
      AND (D.ID_TIPOPLAN IS NULL OR D.ID_CUENTAAASI IS NULL OR D.ID_RESTRICCION IS NULL);
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar  cuenta contable denominacional a la actividad de evento '||l_descripcion;
    end if;
    
    if l_error=0 then
      SELECT  COUNT(*) INTO l_contar FROM PSTO_PRESUPUESTO 
      WHERE ID_EVENTO=l_id_evento
      AND ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ESTADO='2';
      
      
        
      if l_contar>0 then
        l_error:=1;
        l_msgerror:='Ya esta aprobado presupuesto del evento '||l_descripcion||' para el aÃ±o ' ||to_char(P_ID_ANHO);
      else
      
        
        SELECT  COUNT(*) INTO l_contar FROM PSTO_PRESUPUESTO 
        WHERE ID_EVENTO=l_id_evento
        AND ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_ANHO=P_ID_ANHO
        AND ESTADO='1';
        
        IF l_contar>0 THEN
          SELECT ID_PRESUPUESTO into l_id_presupuesto_del FROM PSTO_PRESUPUESTO 
          WHERE ID_EVENTO=l_id_evento
          AND ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ESTADO='1';
          
          pkg_presupuesto_sp_eliminar_presupuesto(l_id_presupuesto_del,P_ID_PERSONA);
          
        END IF;
        
      
        --CABECERA
        insert into PSTO_PRESUPUESTO(
          ID_PRESUPUESTO, 
          ID_ENTIDAD,
          ID_ANHO, 
          ID_EVENTO,
          ID_PSTONEGOCIO,
          ID_EJE,
          ID_DEPTO,
          ID_PERSONA,
          DESCRIPCION,
          FECHA, 
          ESTADO
        )values(
          l_id_presupuesto,
          P_ID_ENTIDAD,
          P_ID_ANHO,
          l_id_evento,
          P_ID_PSTONEGOCIO,
          P_ID_EJE,
          P_ID_DEPTO_PADRE,
          P_ID_PERSONA,
          l_descripcion,
          sysdate,
          '1'
        );
    
        --DETALLE
        INSERT INTO PSTO_PRESUPUESTO_DET(
            ID_PRESUPUESTO_DET,
            ID_PRESUPUESTO,
            ID_ACTIVIDAD,
            ID_ENTIDAD, 
            ID_DEPTO, 
            ID_DEPTO_ASIENTO,
            TIPO,
            DESCRIPCION,
            CANTIDAD,
            PUNIDAD,
            A, 
            B, 
            C,
            D, 
            E,
            F, 
            G,
            TOTAL,
            ID_TIPOPLAN,
            ID_CUENTAAASI,
            ID_RESTRICCION,
            ID_CTACTE,
            ID_TIPOCTACTE,
            ID_ENTIDAD_CTACTE
          )
        SELECT
            ROWNUM AS ID_PRESUPUESTO_DET, 
            l_id_presupuesto AS ID_PRESUPUESTO,
            M.ID_ACTIVIDAD,
            M.ID_ENTIDAD,
            M.ID_DEPTO,
            M.ID_DEPTO_ASIENTO,
            M.TIPO,
            M.DESCRIPCION,
            M.CANTIDAD,
            M.PUNIDAD,
            M.A,
            M.B,
            M.C, 
            M.D,
            M.E, 
            M.F,
            M.G,
            M.TOTAL,
            M.ID_TIPOPLAN,
            M.ID_CUENTAAASI,
            M.ID_RESTRICCION,
            M.ID_CTACTE,
            M.ID_TIPOCTACTE,
            M.ID_ENTIDAD_CTACTE
        FROM(
            select 
            B.ID_ACTIVIDAD,
            C.ID_ENTIDAD,
            C.ID_DEPTO,
            COALESCE(D.ID_DEPTO,C.ID_DEPTO) AS ID_DEPTO_ASIENTO,
            D.TIPO,
            D.NOMBRE AS DESCRIPCION,
            0 AS CANTIDAD,
            0 AS PUNIDAD,
            0 AS A,
            0 AS B,
            0 AS C,
            0 AS D, 
            0 AS E, 
            0 AS F,
            0 AS G,
            COALESCE(SUM(COALESCE(IMPORTE,0)),0) AS TOTAL,
            D.ID_TIPOPLAN,
            D.ID_CUENTAAASI,
            D.ID_RESTRICCION,
            D.ID_CTACTE,
            D.ID_TIPOCTACTE,
            D.ID_ENTIDAD_CTACTE
            FROM PSTO_PLLA_PLANILLA_ACTIVIDAD A,PSTO_PLLA_CONCEPTO_ACTIVIDAD B,PSTO_PLLA_PLANILLA C,PSTO_ACTIVIDAD D
            WHERE A.ID_CONCEPTO_ACTIVIDAD=B.ID_CONCEPTO_ACTIVIDAD
            AND A.ID_PSTO_PLANILLA=C.ID_PSTO_PLANILLA
            AND B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
            AND (A.IMPORTE)>0
            AND C.ID_ENTIDAD=P_ID_ENTIDAD
            AND C.ID_ANHO=P_ID_ANHO
            AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
            AND B.ID_AUXILIAR=C.ID_AUXILIAR
            AND B.ID_AUXILIAR=P_ID_AUXILIAR
            GROUP BY B.ID_ACTIVIDAD,
            C.ID_ENTIDAD,
            C.ID_DEPTO,
            COALESCE(D.ID_DEPTO,C.ID_DEPTO),
            D.TIPO,
            D.NOMBRE,
            D.ID_TIPOPLAN,
            D.ID_CUENTAAASI,
            D.ID_RESTRICCION,
            D.ID_CTACTE,
            D.ID_TIPOCTACTE,
            D.ID_ENTIDAD_CTACTE
            
        )M;
        
        
        MERGE INTO PSTO_PRESUPUESTO_DET C 
        USING (SELECT 
                A.ID_PRESUPUESTO,
                A.ID_PRESUPUESTO_DET,
                B.NOMBRE
                FROM PSTO_PRESUPUESTO_DET A,CONTA_ENTIDAD_DEPTO B
                WHERE A.ID_ENTIDAD=B.ID_ENTIDAD
                AND A.ID_DEPTO=B.ID_DEPTO
                AND A.ID_PRESUPUESTO=l_id_presupuesto
              )t
          ON (C.ID_PRESUPUESTO=t.ID_PRESUPUESTO and C.ID_PRESUPUESTO_DET=t.ID_PRESUPUESTO_DET and C.ID_PRESUPUESTO=l_id_presupuesto)
          WHEN  MATCHED THEN UPDATE SET  
            C.DEPTO_NOMBRE=t.NOMBRE;
            
        MERGE INTO PSTO_PRESUPUESTO_DET C 
        USING (SELECT 
                A.ID_PRESUPUESTO,
                A.ID_PRESUPUESTO_DET,
                B.NOMBRE
                FROM PSTO_PRESUPUESTO_DET A,CONTA_ENTIDAD_DEPTO B
                WHERE A.ID_ENTIDAD=B.ID_ENTIDAD
                AND A.ID_DEPTO_ASIENTO=B.ID_DEPTO
                AND A.ID_PRESUPUESTO=l_id_presupuesto
              )t
          ON (C.ID_PRESUPUESTO=t.ID_PRESUPUESTO and C.ID_PRESUPUESTO_DET=t.ID_PRESUPUESTO_DET and C.ID_PRESUPUESTO=l_id_presupuesto)
          WHEN  MATCHED THEN UPDATE SET  
            C.DEPTO_ASIENTO_NOMBRE=t.NOMBRE;
        
  
        select 
        coalesce(sum(case when tipo='I' then TOTAL else 0 end),0),
        coalesce(sum(case when tipo='G' then TOTAL else 0 end),0)
        into 
        l_total_ingreso,
        l_total_gasto
        from  PSTO_PRESUPUESTO_DET
        where ID_PRESUPUESTO=l_id_presupuesto;
        
        update PSTO_PRESUPUESTO set
        TOTAL_INGRESO=l_total_ingreso,
        TOTAL_GASTO=l_total_gasto
        where ID_PRESUPUESTO=l_id_presupuesto;
        
        
        pkg_presupuesto_sp_asiento_presupuesto(l_id_presupuesto,P_ID_PERSONA);
        
        select count(*) into l_contar from psto_auxiliar_anho
        where id_auxiliar=P_ID_AUXILIAR
        and id_anho=P_ID_ANHO;
      
        if l_contar=0 then
          insert into psto_auxiliar_anho(id_anho,id_auxiliar,estado) values(P_ID_ANHO,P_ID_AUXILIAR,'01');
        else
          update psto_auxiliar_anho set estado='01'
          where id_auxiliar=P_ID_AUXILIAR
          and id_anho=P_ID_ANHO;
        end if;
  
      end if;
    end if;
    
  
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
    
  END pkg_pstoplanilla_sp_planilla_presupuesto;
  */
CREATE OR REPLACE PROCEDURE eliseo.pkg_pstoplanilla_sp_planilla_presupuesto (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_PERSONA bigint,P_ID_PSTONEGOCIO bigint,P_ID_EJE bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_contar bigint;
    l_id_presupuesto bigint;
    l_id_evento bigint;
    l_descripcion varchar(300);
    l_total_ingreso decimal(10,2);
    l_total_gasto decimal(10,2);
    l_id_presupuesto_del bigint;
    l_id_auxiliar bigint;
    l_id_psto_planilla bigint;

    l_cerror bigint:=0;
    l_cmsgerror varchar(200):='';

    cur CURSOR FOR  SELECT ID_PSTO_PLANILLA from  PSTO_PLLA_PLANILLA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND P_ID_DEPTO_PADRE=P_ID_DEPTO_PADRE AND ID_ANHO=P_ID_ANHO;

  
BEGIN
  
 
    SELECT D.id_evento into STRICT l_id_evento
    FROM PSTO_PLLA_CONCEPTO_ACTIVIDAD B,
    PSTO_ACTIVIDAD D
    WHERE B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
    AND B.ID_ENTIDAD=P_ID_ENTIDAD
    AND B.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
    AND B.AUXI_IDENTIFICADOR='PL'
    GROUP BY D.id_evento;

    
    SELECT  NOMBRE INTO STRICT l_descripcion  FROM PSTO_EVENTO WHERE ID_EVENTO=l_id_evento;

    
    select 
      COUNT(*) INTO STRICT l_contar
      FROM PSTO_PLLA_CONCEPTO_ACTIVIDAD B,
      PSTO_ACTIVIDAD D
      WHERE B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
      AND B.ID_ENTIDAD=P_ID_ENTIDAD
      AND B.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND B.AUXI_IDENTIFICADOR='PL'
      AND (coalesce(D.ID_TIPOPLAN::text, '') = '' OR coalesce(D.ID_CUENTAAASI::text, '') = '' OR coalesce(D.ID_RESTRICCION::text, '') = '');

    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar  cuenta contable denominacional a la actividad de evento '||l_descripcion;
    end if;
    --l_error:=0;
    if l_error=0 then
      SELECT  COUNT(*) INTO STRICT l_contar FROM PSTO_PRESUPUESTO
      WHERE ID_EVENTO=l_id_evento
      AND ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ESTADO='2';

      
        
      if l_contar>0 then
        l_error:=1;
        l_msgerror:='Ya esta aprobado presupuesto del evento '||l_descripcion||' para el aÃ±o ' ||P_ID_ANHO::text;
      else

        
        SELECT  COUNT(*) INTO STRICT l_contar FROM PSTO_PRESUPUESTO 
        WHERE ID_EVENTO=l_id_evento
        AND ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_ANHO=P_ID_ANHO
        AND ESTADO='1';

        IF l_contar>0 THEN
          SELECT ID_PRESUPUESTO into STRICT l_id_presupuesto_del FROM PSTO_PRESUPUESTO 
          WHERE ID_EVENTO=l_id_evento
          AND ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ESTADO='1';

          CALL pkg_presupuesto_sp_eliminar_presupuesto(l_id_presupuesto_del,P_ID_PERSONA);

        END IF;

        OPEN cur;
        FETCH cur INTO l_id_psto_planilla;

        WHILE cur%FOUND LOOP

              CALL pkg_pstoplanilla_sp_generar_planilla_dist_det(l_id_psto_planilla,l_cerror,l_cmsgerror);

          FETCH cur INTO l_id_psto_planilla;

        END LOOP;
        CLOSE cur;
        
        
        
       SELECT COALESCE(MAX(ID_PRESUPUESTO),0)+1 INTO STRICT l_id_presupuesto FROM PSTO_PRESUPUESTO;
        --CABECERA
        insert into PSTO_PRESUPUESTO(
          ID_PRESUPUESTO,
          ID_ENTIDAD,
          ID_ANHO, 
          ID_EVENTO,
          ID_PSTONEGOCIO,
          ID_EJE,
          ID_DEPTO,
          ID_PERSONA,
          DESCRIPCION,
          FECHA, 
          ESTADO
        )values (
          l_id_presupuesto,
          P_ID_ENTIDAD,
          P_ID_ANHO,
          l_id_evento,
          P_ID_PSTONEGOCIO,
          P_ID_EJE,
          P_ID_DEPTO_PADRE,
          P_ID_PERSONA,
          l_descripcion,
          clock_timestamp(),
          '1'
        );

        --DETALLE
        INSERT INTO PSTO_PRESUPUESTO_DET(
            ID_PRESUPUESTO_DET,
            ID_PRESUPUESTO,
            ID_ACTIVIDAD,
            ID_ENTIDAD, 
            ID_DEPTO, 
            ID_DEPTO_ASIENTO,
            TIPO,
            DESCRIPCION,
            CANTIDAD,
            PUNIDAD,
            A, 
            B, 
            C,
            D, 
            E,
            F, 
            G,
            TOTAL,
            ID_TIPOPLAN,
            ID_CUENTAAASI,
            ID_RESTRICCION,
            ID_CTACTE,
            ID_TIPOCTACTE,
            ID_ENTIDAD_CTACTE,
            MES1,
            MES2,
            MES3,
            MES4,
            MES5,
            MES6,
            MES7,
            MES8,
            MES9,
            MES10,
            MES11,
            MES12
          )
        SELECT
            row_number() OVER () AS ID_PRESUPUESTO_DET, 
            l_id_presupuesto AS ID_PRESUPUESTO,
            M.ID_ACTIVIDAD,
            M.ID_ENTIDAD,
            M.ID_DEPTO,
            M.ID_DEPTO_ASIENTO,
            M.TIPO,
            M.DESCRIPCION,
            M.CANTIDAD,
            M.PUNIDAD,
            M.A,
            M.B,
            M.C, 
            M.D,
            M.E, 
            M.F,
            M.G,
            M.TOTAL,
            M.ID_TIPOPLAN,
            M.ID_CUENTAAASI,
            M.ID_RESTRICCION,
            M.ID_CTACTE,
            M.ID_TIPOCTACTE,
            M.ID_ENTIDAD_CTACTE,
            M.MES1,
            M.MES2,
            M.MES3,
            M.MES4,
            M.MES5,
            M.MES6,
            M.MES7,
            M.MES8,
            M.MES9,
            M.MES10,
            M.MES11,
            M.MES12
        FROM (
            SELECT 
            B.ID_ACTIVIDAD,
            C.ID_ENTIDAD,
            C.ID_DEPTO,
            COALESCE(D.ID_DEPTO,X.ID_DEPTO) AS ID_DEPTO_ASIENTO,
            D.TIPO,
            D.NOMBRE AS DESCRIPCION,
            0 AS CANTIDAD,
            0 AS PUNIDAD,
            0 AS A,
            0 AS B,
            0 AS C,
            0 AS D, 
            0 AS E, 
            0 AS F,
            0 AS G,
            COALESCE(SUM(COALESCE(A.IMPORTE,0)),0) AS TOTAL,
            D.ID_TIPOPLAN,
            D.ID_CUENTAAASI,
            D.ID_RESTRICCION,
            D.ID_CTACTE,
            D.ID_TIPOCTACTE,
            D.ID_ENTIDAD_CTACTE,
            COALESCE(SUM(COALESCE(A.MES1,0)),0) AS MES1,
            COALESCE(SUM(COALESCE(A.MES2,0)),0) AS MES2,
            COALESCE(SUM(COALESCE(A.MES3,0)),0) AS MES3,
            COALESCE(SUM(COALESCE(A.MES4,0)),0) AS MES4,
            COALESCE(SUM(COALESCE(A.MES5,0)),0) AS MES5,
            COALESCE(SUM(COALESCE(A.MES6,0)),0) AS MES6,
            COALESCE(SUM(COALESCE(A.MES7,0)),0) AS MES7,
            COALESCE(SUM(COALESCE(A.MES8,0)),0) AS MES8,
            COALESCE(SUM(COALESCE(A.MES9,0)),0) AS MES9,
            COALESCE(SUM(COALESCE(A.MES10,0)),0) AS MES10,
            COALESCE(SUM(COALESCE(A.MES11,0)),0) AS MES11,
            COALESCE(SUM(COALESCE(A.MES12,0)),0) AS MES12
            FROM PSTO_PLLA_PLANILLA_DIST_DET A,PSTO_PLLA_PLANILLA_DIST X ,PSTO_PLLA_CONCEPTO_ACTIVIDAD B,PSTO_PLLA_PLANILLA C,PSTO_ACTIVIDAD D
            WHERE A.ID_PLLA_PLANILLA_DIST=X.ID_PLLA_PLANILLA_DIST
            AND A.ID_CONCEPTO_ACTIVIDAD=B.ID_CONCEPTO_ACTIVIDAD
            AND X.ID_PSTO_PLANILLA=C.ID_PSTO_PLANILLA
            AND B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
            AND (A.IMPORTE)>0
            AND C.ID_ENTIDAD=P_ID_ENTIDAD
            AND C.ID_ANHO=P_ID_ANHO
            AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
            AND B.AUXI_IDENTIFICADOR='PL'
            GROUP BY B.ID_ACTIVIDAD,
            C.ID_ENTIDAD,
            C.ID_DEPTO,
            COALESCE(D.ID_DEPTO,X.ID_DEPTO),
            D.TIPO,
            D.NOMBRE,
            D.ID_TIPOPLAN,
            D.ID_CUENTAAASI,
            D.ID_RESTRICCION,
            D.ID_CTACTE,
            D.ID_TIPOCTACTE,
            D.ID_ENTIDAD_CTACTE 
            ORDER BY B.ID_ACTIVIDAD,C.ID_DEPTO
            
        )M;

        
        MERGE INTO PSTO_PRESUPUESTO_DET C 
        USING(SELECT 
                A.ID_PRESUPUESTO,
                A.ID_PRESUPUESTO_DET,
                B.NOMBRE
                FROM PSTO_PRESUPUESTO_DET A,CONTA_ENTIDAD_DEPTO B
                WHERE A.ID_ENTIDAD=B.ID_ENTIDAD
                AND A.ID_DEPTO=B.ID_DEPTO
                AND A.ID_PRESUPUESTO=l_id_presupuesto
              )t
          ON (C.ID_PRESUPUESTO=t.ID_PRESUPUESTO and C.ID_PRESUPUESTO_DET=t.ID_PRESUPUESTO_DET and C.ID_PRESUPUESTO=l_id_presupuesto)
          WHEN  MATCHED THEN UPDATE SET  
            C.DEPTO_NOMBRE=t.NOMBRE;

        MERGE INTO PSTO_PRESUPUESTO_DET C 
        USING(SELECT 
                A.ID_PRESUPUESTO,
                A.ID_PRESUPUESTO_DET,
                B.NOMBRE
                FROM PSTO_PRESUPUESTO_DET A,CONTA_ENTIDAD_DEPTO B
                WHERE A.ID_ENTIDAD=B.ID_ENTIDAD
                AND A.ID_DEPTO_ASIENTO=B.ID_DEPTO
                AND A.ID_PRESUPUESTO=l_id_presupuesto
              )t
          ON (C.ID_PRESUPUESTO=t.ID_PRESUPUESTO and C.ID_PRESUPUESTO_DET=t.ID_PRESUPUESTO_DET and C.ID_PRESUPUESTO=l_id_presupuesto)
          WHEN  MATCHED THEN UPDATE SET  
            C.DEPTO_ASIENTO_NOMBRE=t.NOMBRE;

  
        select 
        coalesce(sum(case when tipo='I' then TOTAL else 0 end),0),
        coalesce(sum(case when tipo='G' then TOTAL else 0 end),0)
        into STRICT 
        l_total_ingreso,
        l_total_gasto
        from  PSTO_PRESUPUESTO_DET
        where ID_PRESUPUESTO=l_id_presupuesto;

        update PSTO_PRESUPUESTO set
        TOTAL_INGRESO=l_total_ingreso,
        TOTAL_GASTO=l_total_gasto
        where ID_PRESUPUESTO=l_id_presupuesto;

        
        CALL pkg_pstoplanilla_sp_gen_psto_det_dist_plla(l_id_presupuesto);

        
        CALL pkg_presupuesto_sp_asiento_presupuesto(l_id_presupuesto,P_ID_PERSONA);

        
        select id_auxiliar into STRICT l_id_auxiliar from psto_evento where id_evento=l_id_evento;

        select count(*) into STRICT l_contar from psto_auxiliar_anho
        where id_auxiliar=P_ID_AUXILIAR
        and id_anho=P_ID_ANHO;

        if l_contar=0 then
          insert into psto_auxiliar_anho(id_anho,id_auxiliar,estado) values (P_ID_ANHO,P_ID_AUXILIAR,'01');
        else
          update psto_auxiliar_anho set estado='01'
          where id_auxiliar=P_ID_AUXILIAR
          and id_anho=P_ID_ANHO;
        end if;

      end if;
    end if;

  
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_pstoplanilla_sp_planilla_presupuesto (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_PERSONA bigint,P_ID_PSTONEGOCIO bigint,P_ID_EJE bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
