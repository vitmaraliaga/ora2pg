-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_pstoplanilla,public;

/******************************************************************************
   NAME:       PKG_PSTOPLANILLA
   PURPOSE:

   REVISIONS:
   Ver        timestamp        Author           Description
   ---------  ----------  ---------------  ------------------------------------
   1.0        19/07/2018      sotil.yarasca       1. Created this package.
******************************************************************************/
    
 


CREATE OR REPLACE PROCEDURE eliseo.pkg_pstoplanilla_sp_generar_parametros (P_ID_ANHO bigint) AS $body$
DECLARE

        cur CURSOR FOR SELECT  ID_PARAMETRO,   FORMULA from psto_plla_parametros ORDER BY orden;
        l_id_parametro varchar(25);
        l_formula varchar(200);
        l_importe decimal(20,14);
        l_contar bigint;

        cur1 CURSOR FOR SELECT  ID_PARAMETRO,   EJE_FORMULA from psto_plla_parametros_valor where ID_ANHO=P_ID_ANHO AND (EJE_FORMULA IS NOT NULL AND EJE_FORMULA::text <> '')  ORDER BY ID_PARAMETRO;

BEGIN
        
            INSERT INTO psto_plla_parametros_valor(ID_PARAMETRO,ID_ANHO,EJE_FORMULA,IMPORTE)
              SELECT  ID_PARAMETRO, P_ID_ANHO,  FORMULA,  IMPORTE 
              from psto_plla_parametros
              WHERE ID_PARAMETRO NOT IN (
                SELECT ID_PARAMETRO FROM psto_plla_parametros_valor
                WHERE ID_ANHO=P_ID_ANHO
              )  ORDER BY orden;

              
              
              MERGE INTO psto_plla_parametros_valor C
              USING(
                SELECT 
                A.ID_PARAMETRO,
                B.FORMULA,
                A.ID_ANHO,
                B.IMPORTE,
                a.importe as importe_val
                FROM psto_plla_parametros_valor A,psto_plla_parametros B
                WHERE A.ID_PARAMETRO=B.ID_PARAMETRO
                AND A.ID_ANHO=P_ID_ANHO
              )t ON (C.ID_PARAMETRO=t.ID_PARAMETRO AND C.ID_ANHO=t.ID_ANHO and C.ID_ANHO=P_ID_ANHO)
              WHEN  MATCHED THEN UPDATE SET  C.EJE_FORMULA=t.FORMULA,C.IMPORTE=case when coalesce(t.importe_val,0)<>0 then t.importe_val  else t.IMPORTE end;

              
              
              OPEN cur;
                FETCH cur INTO l_id_parametro,l_formula;

                WHILE cur%FOUND LOOP
                       
             
                  
                  select IMPORTE into STRICT l_importe from psto_plla_parametros_valor
                  where ID_PARAMETRO=l_id_parametro
                  and ID_ANHO=P_ID_ANHO;

                  
                  select count(*) into STRICT l_contar from psto_plla_parametros_valor
                  where EJE_FORMULA LIKE '%'||l_id_parametro||'%'
                  and ID_ANHO=P_ID_ANHO
                  AND (EJE_FORMULA IS NOT NULL AND EJE_FORMULA::text <> '');

                 
                  IF l_contar>0 THEN

                    UPDATE psto_plla_parametros_valor
                    SET EJE_FORMULA=REPLACE(EJE_FORMULA,l_id_parametro,REPLACE(l_importe::text,',','.'))
                    WHERE EJE_FORMULA LIKE '%'||l_id_parametro||'%'
                    AND ID_ANHO=P_ID_ANHO
                    AND (EJE_FORMULA IS NOT NULL AND EJE_FORMULA::text <> '');


                  END IF;

                  FETCH cur INTO l_id_parametro,l_formula;

                 END LOOP;
                CLOSE cur;

                
                --ejecutar
                OPEN cur1;
                FETCH cur1 INTO l_id_parametro,l_formula;

                WHILE cur1%FOUND LOOP
                
                    EXECUTE 'UPDATE psto_plla_parametros_valor SET IMPORTE='||l_formula||' WHERE ID_PARAMETRO=:PARAMETRO AND ID_ANHO=:ANHO'  
                    USING l_id_parametro,P_ID_ANHO;

                FETCH cur1 INTO l_id_parametro,l_formula;

                END LOOP;
                CLOSE cur1;

        END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_pstoplanilla_sp_generar_parametros (P_ID_ANHO bigint) FROM PUBLIC;
