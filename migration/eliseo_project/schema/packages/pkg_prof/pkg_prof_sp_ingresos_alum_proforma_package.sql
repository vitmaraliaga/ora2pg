-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_prof,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_prof_sp_ingresos_alum_proforma (P_ID_PROFORMA bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


    l_id_semestre_programa bigint;



    l_importe	decimal(10,2);


    l_codigo varchar(15);

    l_items bigint:=0;



    l_numhijo	bigint;
    l_tipo_alumno varchar(5);

    l_id_modo_contrato bigint;
    l_formula varchar(500);

    curING CURSOR FOR
    SELECT
      ID_CRITERIO_SEMESTRE,
      ID_CRITERIO,
      IMPORTE,
      FORMULA,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE,
      ORDEN,
      coalesce(ID_PROCEDURE_PRO,0) as ID_PROCEDURE_PRO
    FROM VW_MAT_CRITERIO_SEMESTRE 
    WHERE DC='D'
    AND ESTADO='1'
    AND ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND TIPO_ALUMNO=l_tipo_alumno
    AND TIENE_HIJO=0
    AND id_modo_contrato=l_id_modo_contrato
    AND COALESCE(PROFORMA,0)=1 --FIJO
 
    
UNION

    SELECT
      A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      A.IMPORTE,
      A.FORMULA,
      A.TIPO_PROCESO,
      A.TIPO_VALOR,
      C.DC,
      C.NOMBRE,
      C.ORDEN,
      coalesce(a.ID_PROCEDURE_PRO,0) as ID_PROCEDURE_PRO
    FROM MAT_CRITERIO_SEMESTRE A, MAT_CRITERIO C
    WHERE A.ID_CRITERIO=C.ID_CRITERIO
    AND C.DC='D'
    AND A.ESTADO='1'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND c.id_modo_contrato=l_id_modo_contrato
    AND C.ID_CRITERIO in (
      SELECT
        COALESCE(d.ID_PARENT,0)
      FROM MAT_CRITERIO_SEMESTRE b, MAT_CRITERIO d
      WHERE b.ID_CRITERIO=d.ID_CRITERIO
      AND d.DC='D'
      AND b.ESTADO='1'
      AND b.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
      AND d.TIPO_ALUMNO=l_tipo_alumno
      AND d.id_modo_contrato=l_id_modo_contrato
      and (d.ID_PARENT IS NOT NULL AND d.ID_PARENT::text <> '')
      AND COALESCE(D.PROFORMA,0)=1 --FIJO
 
      group by d.ID_PARENT
    ) 
    ORDER BY DC DESC,ORDEN;

 
    l_total decimal(10,2);
    l_contar bigint;
    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_id_persona bigint;
    l_cod_nivel varchar(5);
    l_id_modalidad_estudio bigint;
    l_id_postulante bigint;


BEGIN
  
    SELECT B.ID_PERSONA, A.ID_SEMESTRE_PROGRAMA,B.ID_POSTULANTE
    INTO STRICT l_id_persona,l_id_semestre_programa,l_id_postulante
    FROM ELISEO.PRO_PROFORMA A, PRO_POSTULANTE B
    WHERE A.ID_POSTULANTE=B.ID_POSTULANTE
    AND A.ID_PROFORMA = P_ID_PROFORMA;

   
    --select codigo into l_codigo from  david.TIPO_CONTRATO 
    --where ID_TIPO_CONTRATO=l_id_tipo_contrato;
    
    select c.codigo,b.id_modalidad_estudio into STRICT l_cod_nivel,l_id_modalidad_estudio
    from  david.acad_semestre_programa a,david.acad_programa_estudio b,david.TIPO_NIVEL_ENSENANZA c
    where a.id_programa_estudio=b.id_programa_estudio
    and b.id_nivel_ensenanza=c.id_nivel_ensenanza
    and a.id_semestre_programa=l_id_semestre_programa;

    
     
    l_id_modo_contrato:=1;

    l_tipo_alumno:='RE';
    l_codigo:='R';

    FOR cur in curING LOOP
      BEGIN
        l_total:= 0;
        CASE
          WHEN cur.TIPO_PROCESO = 'PF' OR cur.TIPO_PROCESO = 'P'  THEN
             l_formula:= CUR.formula;
             if cur.ID_PROCEDURE_PRO>0 then
              select nombre into STRICT l_formula from eliseo.mat_procedure where id_procedure=cur.ID_PROCEDURE_PRO;
             end if;
             EXECUTE 'BEGIN PKG_PROF.'||l_formula||'(:P_ID_PROFORMA,:P_ID_CRITERIO_SEMESTRE,:l_error,:l_msgerror); end;'
             USING P_ID_PROFORMA,CUR.id_criterio_semestre,IN OUT l_error,IN OUT l_msgerror;
          WHEN cur.TIPO_PROCESO = 'F' THEN
            l_total:= cur.importe;
            SELECT COALESCE(MAX(ITEM),0)+1  INTO STRICT l_items FROM PRO_CONCEPTO_ASIGN_ALUM
            WHERE ID_PROFORMA=P_ID_PROFORMA;

            IF l_total>0 THEN
               insert into PRO_CONCEPTO_ASIGN_ALUM(
                  ID_PROFORMA,
                  ID_CRITERIO_SEMESTRE,
                  ITEM,
                  ID_SEMESTRE_PROGRAMA,
                  DESCRIPCION,
                  DC,
                  TOTAL,
                  TIPO_VALOR
                  )VALUES (
                  P_ID_PROFORMA,
                  CUR.id_criterio_semestre,
                  l_items,
                  l_id_semestre_programa,
                  CUR.nombre,
                  CUR.dc,
                  l_total,
                  CUR.tipo_valor
                  );
            END IF;
          ELSE
            SELECT COALESCE(MAX(ITEM),0)+1  INTO STRICT l_items FROM PRO_CONCEPTO_ASIGN_ALUM
            WHERE ID_PROFORMA=P_ID_PROFORMA;

            insert into PRO_CONCEPTO_ASIGN_ALUM(
            ID_PROFORMA,
            ID_CRITERIO_SEMESTRE,
            ITEM,
            ID_SEMESTRE_PROGRAMA,
            DESCRIPCION,
            DC,
            TOTAL,
            TIPO_VALOR
            )VALUES (
            P_ID_PROFORMA,
            CUR.id_criterio_semestre,
            l_items,
            l_id_semestre_programa,
            CUR.nombre,
            CUR.dc,
            0,
            CUR.tipo_valor
            );
        END CASE;

      end;
    END LOOP;

    
  --ASIGNACION DE VALORES A CRITERIO PADRE
  
    SELECT
    COUNT(*) INTO STRICT l_numhijo  
    FROM MAT_CRITERIO_SEMESTRE A, MAT_CRITERIO C, PRO_CONCEPTO_ASIGN_ALUM D
    WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
    AND A.ID_CRITERIO=C.ID_CRITERIO
    AND C.DC='D'
    AND A.ESTADO='1'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND D.ID_PROFORMA=P_ID_PROFORMA
    AND C.id_modo_contrato=l_id_modo_contrato
    AND (C.ID_PARENT IS NOT NULL AND C.ID_PARENT::text <> '');

    IF l_numhijo>0 THEN
       MERGE INTO PRO_CONCEPTO_ASIGN_ALUM S 
       USING(
          SELECT
          D.ID_PROFORMA,A.ID_SEMESTRE_PROGRAMA,A.ID_CRITERIO_SEMESTRE,D.ITEM,E.TOTAL  
          FROM MAT_CRITERIO_SEMESTRE A, MAT_CRITERIO C,PRO_CONCEPTO_ASIGN_ALUM D,(
            SELECT
            Y.ID_PARENT, COALESCE(SUM(Z.TOTAL),0) as total
            FROM MAT_CRITERIO_SEMESTRE X, MAT_CRITERIO Y, PRO_CONCEPTO_ASIGN_ALUM Z
            WHERE X.ID_CRITERIO_SEMESTRE=Z.ID_CRITERIO_SEMESTRE
            AND X.ID_CRITERIO=Y.ID_CRITERIO
            AND Y.DC='D'
            AND X.ESTADO='1'
            AND X.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
            AND Z.ID_PROFORMA=P_ID_PROFORMA
            AND (Y.ID_PARENT IS NOT NULL AND Y.ID_PARENT::text <> '') 
            group by Y.ID_PARENT
          )E
          WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
          AND A.ID_CRITERIO=C.ID_CRITERIO
          AND E.ID_PARENT=A.ID_CRITERIO
          AND C.DC='D'
          AND A.ESTADO='1'
          AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND D.ID_PROFORMA=P_ID_PROFORMA
          AND coalesce(C.ID_PARENT::text, '') = '' 
      )T ON (T.ID_PROFORMA=S.ID_PROFORMA AND T.ID_SEMESTRE_PROGRAMA=S.ID_SEMESTRE_PROGRAMA AND T.ID_CRITERIO_SEMESTRE= S.ID_CRITERIO_SEMESTRE AND T.ITEM=S.ITEM)
       WHEN  MATCHED THEN UPDATE SET  
       S.TOTAL = T.TOTAL;

      END IF;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_prof_sp_ingresos_alum_proforma (P_ID_PROFORMA bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
