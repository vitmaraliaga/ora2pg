-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_prof,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_prof_sp_generar_detalle_proforma (P_ID_PROFORMA bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_contar bigint;
    l_id_semestre_programa bigint;
    l_id_criterio_ing bigint;
    l_total decimal(15,2);

    curdetING CURSOR FOR
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      coalesce(sum(B.TOTAL),0) as TOTAL,
      A.DC,
      B.ID_SEMESTRE_PROGRAMA,
      A.TIENE_HIJO,
      B.TIPO_VALOR,
      B.DESCRIPCION,
      B.APLAZADO
    FROM VW_MAT_CRITERIO_SEMESTRE A,PRO_CONCEPTO_ASIGN_ALUM B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND B.ID_PROFORMA = P_ID_PROFORMA
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND A.DC='D'
    GROUP BY A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      A.DC,
      B.ID_SEMESTRE_PROGRAMA,
      A.TIENE_HIJO,
      A.ORDEN,
      B.TIPO_VALOR,
      B.DESCRIPCION,
      B.APLAZADO
    ORDER BY A.DC DESC,A.ORDEN;

    
    
    curdetDES CURSOR FOR
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      coalesce(B.TOTAL,0) as TOTAL,
      A.DC,
      B.TIPO_VALOR,
      A.TIENE_HIJO,
      B.DESCRIPCION,
      B.ID_SEMESTRE_PROGRAMA,
      B.CREDITOS,
      B.unitario_cred
    FROM VW_MAT_CRITERIO_SEMESTRE A,PRO_CONCEPTO_ASIGN_ALUM B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND B.ID_PROFORMA = P_ID_PROFORMA
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND A.DC='C'
    AND COALESCE(A.ID_AFECTA,0)=l_id_criterio_ing 
    ORDER BY A.DC DESC,A.ORDEN;

    l_total_des decimal(10,2);


    l_acumula  decimal(10,2);
    l_importe  decimal(10,2);
    l_i bigint:=0;
    l_id_parent bigint;

    l_k bigint:=0;
    l_numhijo bigint;

    
    l_total_debito decimal(15,2);
    l_total_credito decimal(15,2);
    l_matricula decimal(15,2);
    l_mensual decimal(15,2);
    l_mensual_resi decimal(15,2);
    l_contado decimal(15,2);
    l_matricula1cuota decimal(15,2);
    l_pago decimal(15,2);
    l_saldo decimal(15,2);
    l_cuotas decimal(10,2);
    l_id_persona bigint;
    l_id_postulante bigint;

    total_dc decimal(10,2);
    imp_dc decimal(10,2);
    l_prd decimal(10,2);
    l_contarcrit bigint:=0;

    l_conmat1cuota varchar(1);

    unitario_cred decimal(10,2):=0;
    l_total_r  decimal(10,2):=0;
    l_total_debito_r  decimal(10,2):=0;
    l_total_credito_r  decimal(10,2):=0;


BEGIN
    SELECT B.ID_PERSONA, A.ID_SEMESTRE_PROGRAMA,B.ID_POSTULANTE
    INTO STRICT l_id_persona,l_id_semestre_programa,l_id_postulante
    FROM ELISEO.PRO_PROFORMA A, PRO_POSTULANTE B
    WHERE A.ID_POSTULANTE=B.ID_POSTULANTE
    AND A.ID_PROFORMA = P_ID_PROFORMA;

  --eliminar 
    DELETE FROM PRO_CONCEPTO_ASIGN_ALUM WHERE ID_PROFORMA=P_ID_PROFORMA;
    DELETE FROM PRO_PROFORMA_DET WHERE ID_PROFORMA=P_ID_PROFORMA;

 
    UPDATE ELISEO.PRO_PROFORMA  SET 
      TOTAL=0,
      TOTAL_DEBITO=0,
      TOTAL_CREDITO=0,
      MATRICULA=0,
      MENSUAL=0,
      CONTADO=0,
      MATRICULA1CUOTA=0,
      PAGO=0,
      DIAS_RESIDENCIA=0,
      MENSUAL_ENS_RESI=0
    WHERE ID_PROFORMA = P_ID_PROFORMA;

    
    
    --PROCESA INGRESOS
    CALL pkg_prof_sp_ingresos_alum_proforma(P_ID_PROFORMA,l_error,l_msgerror);

   
    IF l_error<>0 THEN
--         GOTO salida_prof;
    END IF;

    --procesa_descuento
    SELECT COUNT(*) INTO STRICT l_contar FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND COALESCE(PROFORMA,0)=1
    AND DC='C';

    IF l_contar>0 THEN
      CALL pkg_prof_sp_desctos_alum_proforma(P_ID_PROFORMA,l_error,l_msgerror);

      IF l_error<>0 THEN
--         GOTO salida_prof;
      END IF;

    END IF;

    --ELIMINA LOS QUE TIENE IMPORTE CERO QUE NO SEN PADRES
    DELETE FROM PRO_CONCEPTO_ASIGN_ALUM 
    WHERE ID_PROFORMA=P_ID_PROFORMA
    AND TOTAL=0
    AND ID_CRITERIO_SEMESTRE IN (
      SELECT ID_CRITERIO_SEMESTRE
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      AND TIENE_HIJO=0
    );

    FOR cur in curdetING LOOP
        BEGIN
          l_acumula:=cur.total;
          l_id_criterio_ing:=cur.id_criterio;

          SELECT COALESCE(MAX(CONTADOR),0)+1  INTO STRICT l_i FROM PRO_PROFORMA_DET
          WHERE ID_PROFORMA = P_ID_PROFORMA;

          l_id_parent := l_i;

          INSERT INTO PRO_PROFORMA_DET(
            ID_PROFORMA,
            CONTADOR,
            ID_CRITERIO_SEMESTRE,
            IMPORTE,
            DC,
            ACUMULA,
            ID_PARENT,
            DESCRIPCION,
            IMP_CAL,
            TIPO_VALOR           
         ) VALUES (
            P_ID_PROFORMA,
            l_i,
            cur.id_criterio_semestre,
            cur.total,
            cur.dc,
            NULL,
            NULL,
            cur.descripcion,
            NULL,
            cur.tipo_valor
         );

         --DESCUENTO ASOCIADO
        if l_k=0 then
          SELECT COALESCE(MAX(CONTADOR),0)+1  INTO STRICT l_i FROM PRO_PROFORMA_DET
          WHERE ID_PROFORMA = P_ID_PROFORMA;

           INSERT INTO PRO_PROFORMA_DET(
            ID_PROFORMA,
            CONTADOR,
            ID_CRITERIO_SEMESTRE,
            IMPORTE,
            DC,
            ACUMULA,
            ID_PARENT,
            DESCRIPCION,
            IMP_CAL,
            TIPO_VALOR           
          )
       
          SELECT
            P_ID_PROFORMA,
            (row_number() OVER ( ORDER BY A.ID_CRITERIO_SEMESTRE ASC )) + l_i AS items, 
            A.ID_CRITERIO_SEMESTRE,
            0,
            A.DC,
            0,
            null,
            A.NOMBRE,
            0,
            A.TIPO_VALOR
          FROM VW_MAT_CRITERIO_SEMESTRE A
          WHERE A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND A.DC='C'
          --AND A.ID_AFECTA is null
          and A.TIENE_HIJO>0
          AND A.ID_CRITERIO IN (
            SELECT COALESCE(ID_PARENT,0) FROM MAT_CRITERIO
            WHERE COALESCE(PROFORMA,0)=1 --AND COALESCE(PROFORMA_MANUAL,0)=1
 
          ) 
          ORDER BY A.DC DESC,A.ORDEN;
        end if;

        FOR curd in curdetDES LOOP
          BEGIN
            l_total_des:=curd.TOTAL;
            SELECT COALESCE(MAX(CONTADOR),0)+1  INTO STRICT l_i FROM PRO_PROFORMA_DET
            WHERE ID_PROFORMA = P_ID_PROFORMA;

            if curd.TIPO_VALOR='I' then
              select coalesce(sum(TOTAL),0) into STRICT total_dc from PRO_CONCEPTO_ASIGN_ALUM 
              where ID_PROFORMA=P_ID_PROFORMA 
              and ID_CRITERIO_SEMESTRE=cur.id_criterio_semestre;

              select importe into STRICT imp_dc from PRO_PROFORMA_DET 
              where ID_PROFORMA=P_ID_PROFORMA 
              and ID_CRITERIO_SEMESTRE=cur.id_criterio_semestre
              and CONTADOR=l_id_parent;

              l_prd:=0;

              if total_dc>0 then
                l_prd:=imp_dc/total_dc;
              end if;
              l_total_des := l_prd*l_total_des;

             
            end if;


            if curd.TIPO_VALOR = 'P' THEN
              l_importe:=(l_total_des/100)*l_acumula;
            else
              l_importe:=l_total_des;
            END IF;

            l_acumula := l_acumula - l_importe;

      
            if (cur.total>0 and l_importe>0 ) or (cur.total<0 and l_importe<0 ) then
            
            
              INSERT INTO PRO_PROFORMA_DET(
                  ID_PROFORMA,
                  ID_CRITERIO_SEMESTRE,
                  CONTADOR,
                  IMPORTE,
                  DC,
                  ACUMULA,
                  ID_PARENT,
                  DESCRIPCION,
                  IMP_CAL,
                  TIPO_VALOR,
                  CREDITOS,
                  UNITARIO
                 ) VALUES (
                  P_ID_PROFORMA,
                  curd.ID_CRITERIO_SEMESTRE,
                  l_i,
                  l_importe,
                  curd.DC,
                  l_acumula,
                  l_id_parent,
                  curd.descripcion,
                  l_total_des,
                  curd.TIPO_VALOR,
                  curd.CREDITOS,
                  curd.unitario_cred
                 );
            end if;
           END;
        END LOOP;
        l_k:=l_k+1;
        l_contarcrit:=l_contarcrit +1;
      end;
    END LOOP;

    IF l_contarcrit=0 THEN
        l_error:=1;
        l_msgerror:='No estÃ¡ asignado criterios de matricula';
--         GOTO salida_prof;
    END IF;

    ---solo descuento
    SELECT
    COUNT(*) INTO STRICT l_numhijo  
    FROM VW_MAT_CRITERIO_SEMESTRE A, PRO_PROFORMA_DET D
    WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
    AND A.DC='C'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND D.ID_PROFORMA=P_ID_PROFORMA
    AND (A.ID_PARENT IS NOT NULL AND A.ID_PARENT::text <> '');

    IF l_numhijo>0 THEN
       MERGE INTO PRO_PROFORMA_DET S 
       USING(
          SELECT
          D.ID_PROFORMA,A.ID_SEMESTRE_PROGRAMA,A.ID_CRITERIO_SEMESTRE,D.CONTADOR,E.TOTAL  
          FROM VW_MAT_CRITERIO_SEMESTRE A, PRO_PROFORMA_DET D,(
            SELECT
            X.ID_PARENT, COALESCE(SUM(Z.IMPORTE),0) as total
            FROM VW_MAT_CRITERIO_SEMESTRE X, PRO_PROFORMA_DET Z
            WHERE X.ID_CRITERIO_SEMESTRE=Z.ID_CRITERIO_SEMESTRE
            AND X.DC='C'
            AND X.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
            AND Z.ID_PROFORMA=P_ID_PROFORMA
            AND (X.ID_PARENT IS NOT NULL AND X.ID_PARENT::text <> '') 
            group by X.ID_PARENT
          )E
          WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
          AND E.ID_PARENT=A.ID_CRITERIO
          AND A.DC='C'
          AND A.ESTADO='1'
          AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND D.ID_PROFORMA=P_ID_PROFORMA
          AND coalesce(A.ID_PARENT::text, '') = '' 
      )T ON (T.ID_PROFORMA=S.ID_PROFORMA AND  T.ID_CRITERIO_SEMESTRE= S.ID_CRITERIO_SEMESTRE AND T.CONTADOR=S.CONTADOR)
       WHEN  MATCHED THEN UPDATE SET  
       S.IMPORTE = T.TOTAL;

    END IF;

    --CALCULO DE TOTALES
    
    SELECT count(*)
    INTO STRICT l_contar
    FROM ELISEO.PRO_PROFORMA A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_PROFORMA = P_ID_PROFORMA;

    
    IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='No tiene asignado plan de pagos';
--         GOTO salida_prof;
    END IF;

    SELECT C.CUOTAS,coalesce(c.CONMAT1CUOTA,'S')
    INTO STRICT l_cuotas,l_conmat1cuota
    FROM ELISEO.PRO_PROFORMA A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_PROFORMA = P_ID_PROFORMA;


    SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO='M' or (B.tipo_cobro='U' and B.TIPO='R') THEN A.IMPORTE ELSE 0 END)),0) AS MATRICULA,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN(B.TIPO='E' or (B.tipo_cobro='M' and B.TIPO='R')) THEN  A.IMPORTE  ELSE 0 END)),0)/l_cuotas AS MENSUAL
    INTO STRICT
    l_total,
    l_total_debito,
    l_total_credito,
    l_matricula,
    l_mensual
    FROM PRO_PROFORMA_DET A, VW_MAT_CRITERIO_SEMESTRE B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND A.ID_PROFORMA = P_ID_PROFORMA
    AND B.TIENE_HIJO=0
    AND B.RESI_MEN=0;

    
    SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN(B.TIPO='E' or (B.tipo_cobro='M' and B.TIPO='R')) THEN  A.IMPORTE  ELSE 0 END)),0)/CASE WHEN(l_cuotas-1)=0 THEN 1 ELSE (l_cuotas-1) END AS MENSUAL
    into STRICT
    l_total_r,
    l_total_debito_r,
    l_total_credito_r,
    l_mensual_resi
    FROM PRO_PROFORMA_DET A, VW_MAT_CRITERIO_SEMESTRE B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND A.ID_PROFORMA = P_ID_PROFORMA
    AND B.TIENE_HIJO=0
    AND B.RESI_MEN=1;

    
    
    l_saldo:= 0;


    l_contado:= 0;
    if l_cuotas=1 then
      l_contado:= l_total + l_total_r;
      l_pago:= l_contado + l_saldo;
    end if;

    l_matricula1cuota:=0;

    if l_cuotas<>1 then
      if l_conmat1cuota='S' then
        l_matricula1cuota:=l_matricula + l_mensual;
      else
        l_matricula1cuota:=l_matricula;
      end if;
      l_pago:= l_matricula1cuota + l_saldo;
    else
      l_mensual:=0;
      l_mensual_resi:=0;
    end if;

    if l_pago<0 then
      l_pago:=0;
    end if;

  
    
    UPDATE ELISEO.PRO_PROFORMA SET
      TOTAL=l_total + l_total_r,
      TOTAL_DEBITO=l_total_debito+l_total_debito_r,
      TOTAL_CREDITO=l_total_credito+l_total_credito_r,
      MATRICULA=l_matricula,
      MENSUAL=l_mensual,
      CONTADO=l_contado,
      MATRICULA1CUOTA=l_matricula1cuota,
      PAGO=l_pago,
      MENSUAL_ENS_RESI = l_mensual + l_mensual_resi
    WHERE ID_PROFORMA = P_ID_PROFORMA;

    delete from PRO_PROFORMA_DET  WHERE ID_PROFORMA = P_ID_PROFORMA  and coalesce(importe,0)=0;

  
--     <<salida_prof>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_prof_sp_generar_detalle_proforma (P_ID_PROFORMA bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
