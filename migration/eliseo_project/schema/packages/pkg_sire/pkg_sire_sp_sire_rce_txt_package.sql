-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sire,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sire_sp_sire_rce_txt ( P_ID_EMPRESA bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_MES bigint, P_ID_ANHO bigint, OUT CURSOR REFCURSOR ) AS $body$
DECLARE

    	l_empresa_ruc varchar(20) := '';
    	l_empresa_rs varchar(250) := '';

BEGIN
	    
		SELECT ce2.ID_RUC, ce2.RAZON_SOCIAL INTO STRICT l_empresa_ruc, l_empresa_rs FROM CONTA_EMPRESA ce2 
		WHERE ce2.ID_EMPRESA =P_ID_EMPRESA;

    OPEN CURSOR FOR

    SELECT
                    fecha_ord, ID_COMPRA, RUC,
                    trim(both l_empresa_ruc)||'|'||
                    trim(both l_empresa_rs)||'|'|| 
                    trim(both periodo)||'|'|| 
                    ''||'|'|| 
                    trim(both fecha_doc)||'|'|| 
                    trim(both fecha_venc)||'|'||
					trim(both tipo_doc)||'|'||  
					trim(both serie)||'|'||  
					''||'|'||  
					trim(both numdoc)||'|'||  
					''||'|'||
					trim(both tipo_doc_identidad)||'|'||
					trim(both ruc)||'|'||
					trim(both nombre)||'|'||
					trim(both baseimp1)||'|'||  
					trim(both igv1)||'|'||  
					trim(both baseimp2)||'|'||  
					trim(both igv2)||'|'||  
					trim(both baseimp3)||'|'|| 
					trim(both igv3)||'|'||  
					trim(both baseimp4)||'|'|| 
					trim(both isc)||'|'|| 
					trim(both '0.00')||'|'|| 
					trim(both baseimp5)||'|'|| 
					trim(both importe)||'|'||
					trim(both moneda)||'|'||  --moneda
					CASE WHEN moneda <> 'PEN' THEN trim(both tipo_cambio) ELSE '' END ||'|'||  --tipo de cambio
					trim(both fecha_doc_modifica)||'|'||  --fecha de emision comprobante que modifica
					trim(both tipo_doc_modifica)||'|'||  --tipo de comprobante de pago que modifica
					CASE WHEN tipo_doc IN ('07','08','87','88') then trim(both serie_modifica) ELSE '' END ||'|'||  --numero de serie del comprobante de pago que se modifica
					''||'|'||  --codigo de la dependencia aduanera
					trim(both numdoc_modifica)||'|'||  --numero de comprobante de pago que modifica
					''||'|'|| 
					''||'|'|| 
					''||'|'||  --35
					''||'|'||  --36
					''||'|'||  --37
					''||'|'||  --38
					''||'|'||  --39
					''||'|'||  --40
					''||'|'||  --41
					''||'|'||  --42
					''||'|'||  --43
					'' as datos
                        from (
                            SELECT 
					A.ID_COMPRA,
                    A.FECHA_DOC as fecha_documento,  
					A.FECHA_PROVISION as fecha_provision, 
                    lpad(A.ID_ANHO,4,'0')||lpad(A.ID_MES,2,'0') AS periodo, 
                    to_char(A.FECHA_DOC,'MM') as mes_doc,
                    coalesce(ELISEO.FC_CONTA_CUO(A.ID_TIPOORIGEN, A.ID_COMPRA, A.ID_ENTIDAD, A.ID_ANHO, A.ID_MES),'') AS cuo, 
                    coalesce(ELISEO.FC_CONTA_CUO_CORRELATIVO(A.ID_TIPOORIGEN, A.ID_COMPRA, A.ID_ENTIDAD, A.ID_ANHO, A.ID_MES),'') AS cuo_correlativo, 
                    coalesce(to_char(A.FECHA_DOC,'yyyymmdd'),' ') AS fecha_ord, 
                    case A.ID_COMPROBANTE when '104' then '' else 
                    coalesce(to_char(A.FECHA_DOC,'dd/mm/yyyy'),' ') end AS fecha_doc,  
					coalesce(to_char(A.FECHA_PROVISION,'dd/mm/yyyy'),' ') AS fecha_prov, 
                    case A.ID_COMPROBANTE when '14' then  
                        coalesce(to_char(A.FECHA_VENCIMIENTO,'dd/mm/yyyy'),' ')
                        else '' end AS fecha_venc, 
					coalesce(A.ID_COMPROBANTE,'') AS tipo_doc,  
                    coalesce(A.SERIE,'0') AS serie,  
                    coalesce(A.SERIE,'0') AS serie_after,  
					A.ID_ANHO AS anio,  
                    coalesce(A.NUMERO,'') AS numdoc,  
                    coalesce(A.NUMERO,'') AS numdoc_after,  
					to_char(coalesce(A.IMPORTE * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS importe,
					to_char(coalesce(A.IMPORTE_ME * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS importe_e,    
					0 AS diascred, 
					to_char(coalesce(A.BASE_GRAVADA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp1,  
					to_char(coalesce(A.BASE_MIXTA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp2,  
					to_char(coalesce(A.BASE_NOGRAVADA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp3,  
					to_char(coalesce(A.BASE_SINCREDITO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp4,  
					to_char(coalesce(A.ISC * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'999999990.99') AS isc,  
					to_char(coalesce(A.OTROS * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'999999990.99') AS baseimp5,  
					to_char(coalesce(A.IGV_GRAVADO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS igv1,  
					to_char(coalesce(A.IGV_MIXTO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS igv2,  
					to_char(coalesce(A.IGV_NOGRAVADO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS igv3,  
					to_char(coalesce(A.BASE_GRAVADA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp1_e,  
					to_char(coalesce(A.BASE_MIXTA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp2_e,  
					to_char(coalesce(A.BASE_NOGRAVADA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp3_e,  
					to_char(coalesce(A.BASE_SINCREDITO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp4_e,  
					to_char(coalesce(A.OTROS * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS baseimp5_e,  
					to_char(coalesce(A.IGV_GRAVADO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS igv1_e,  
					to_char(coalesce(A.IGV_MIXTO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS igv2_e,  
					to_char(coalesce(A.IGV_NOGRAVADO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS igv3_e,
                    to_char(coalesce(A.IGV * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0),'99999990.99') AS rec_igv_total,
					coalesce(A.IMPORTE * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS importe_n,
					coalesce(A.BASE_GRAVADA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS baseimp1_n,  
					coalesce(A.BASE_MIXTA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS baseimp2_n,  
					coalesce(A.BASE_NOGRAVADA * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS baseimp3_n,  
					coalesce(A.BASE_SINCREDITO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS baseimp4_n,  
					coalesce(A.OTROS * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS baseimp5_n,  
                    coalesce(A.IGV_GRAVADO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS igv1_n,  
					coalesce(A.IGV_MIXTO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS igv2_n,  
					coalesce(A.IGV_NOGRAVADO * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS igv3_n,  
					coalesce(A.IGV * case when A.ID_COMPROBANTE like '07' then -1 when A.ID_COMPROBANTE like '87' then -1 else 1 end,0) AS rec_igv_total_n,
                    ELISEO.FC_MONEDA_COD_SUNAT(A.ID_MONEDA) AS moneda,
                    to_char(coalesce(A.TIPOCAMBIO,0),'0.000') AS tipo_cambio,
                    to_char(coalesce(A.OTROS,0),'99999990.99') AS aux_otros,
					coalesce(A.ES_RET_DET,'N') AS detrac,
                    to_char(coalesce(A.IMPORTE-A.IGV,0),'99999990.99') AS rec_importe_neto,    
					coalesce(trim(both FC_CAJA_DETRACCION_NUMERO(A.id_compra)),'') AS numerodetraccion, 	--				
					coalesce(FC_CAJA_DETRACCION_FECHA(A.id_compra),'') AS fechadetraccion, --
					coalesce(to_char(C.FECHA_DOC,'dd/mm/yyyy'),'') AS fecha_doc_modifica,
					coalesce(C.ID_COMPROBANTE,' ') AS tipo_doc_modifica,  
					coalesce(C.SERIE,'0') AS serie_modifica,  
					coalesce(C.NUMERO,'0') AS numdoc_modifica,  
					B.NOMBRE AS nombre_before,
					b.NOMBRE AS nombre,                                        
					B.ID_PERSONA as prv_id,  
                    '6' AS tipo_doc_identidad,  
					B.ID_RUC AS ruc,
                    A.ID_ENTIDAD as entidad,
                    A.ID_ENTIDAD AS ID_ENTIDAD,
                    A.ID_PERSONA as per_user,
                    A.ID_VOUCHER as voucher
			FROM COMPRA A 
				INNER JOIN CONTA_ENTIDAD E ON A.ID_ENTIDAD = E.ID_ENTIDAD
				INNER JOIN MOISES.VW_PERSONA_NATURAL_LEGAL B ON A.ID_PROVEEDOR = b.ID_PERSONA
				LEFT JOIN COMPRA C ON A.ID_PARENT = c.ID_COMPRA
			WHERE E.ID_EMPRESA = P_ID_EMPRESA
		      	AND (A.ID_ENTIDAD = P_ID_ENTIDAD OR 0 = P_ID_ENTIDAD )
		      	AND (A.ID_DEPTO = P_ID_DEPTO OR '*' = P_ID_DEPTO )
				AND A.ID_MES = P_ID_MES
				AND A.ID_ANHO = P_ID_ANHO
	            AND A.ID_COMPROBANTE NOT IN ('02',
	            -- menos compras duas y invoices
	            '00', '46', '50', '91', '97', '98'
	            )
				AND A.Estado = '1' 
                    ) a;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sire_sp_sire_rce_txt ( P_ID_EMPRESA bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_MES bigint, P_ID_ANHO bigint, OUT CURSOR REFCURSOR ) FROM PUBLIC;
