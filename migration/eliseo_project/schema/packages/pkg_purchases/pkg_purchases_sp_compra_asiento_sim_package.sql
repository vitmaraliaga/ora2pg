-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compra_asiento_sim (P_ID_COMPRA bigint,P_ID_DINAMICA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        -- ESTE PROCEDURE REGISTRA CUANDO EL LA COMPRA VIENE DE: SIM Y DIRECTO A PROVISION
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO_COMPRA varchar(20);
        L_ID_ASIENTO bigint;
        L_ID_PEDIDO bigint :=0;
        --L_ID_TIPO_PLAN numeric;
        L_ID_RESTRICCION varchar(50);
        L_ID_CUENTAAASI varchar(10);
        L_ID_CTACTE varchar(20);
        L_DC varchar(1);
        L_DESTINO varchar(10);
        L_ORIGEN varchar(10);
        L_ID_INDICADOR varchar(35);
        L_UNICO varchar(1);
        L_UNICOCTACTE varchar(1);
        L_PORCENTAJE decimal(10,2);
        L_DESCRIPCION varchar(255);
        L_ID_CASIENTO varchar(50);
        L_ID_FONDO varchar(50);
        L_BASE decimal(10,2);
        L_IGV decimal(10,2);
        L_IMPORTE decimal(10,2);
        L_IMPORTE_ME decimal(10,2);
        P_IMPORTE decimal(10,2);
        P_IMPORTE_ME decimal(10,2);
        L_DEPTO varchar(10);
        L_CONT bigint;
        L_AGRUPA varchar(1) :='N';
        L_SERIE varchar(4);
        L_NUMERO varchar(12);
        L_CORRELATIVO varchar(20);
        l_EDITABLE varchar(1) :='N';
        L_NRO_ASIENTO bigint;
        l_ctas varchar(200);
        l_ctates varchar(200);
        l_actas tablastring;
        l_actates tablastring;
        l_buscar bigint;
        l_unicoctated varchar(1);
        L_GLOSA varchar(100);
        L_ID_PROVEEDOR bigint;
        L_CANT bigint :=0;

        casi CURSOR FOR
        SELECT
                a.ID_ASIENTO,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,round((a.PORCENTAJE*100)::numeric,2),a.NOMBRE,a.AGRUPA,a.ID_FONDO,a.NRO_ASIENTO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =P_ID_DINAMICA 
        ORDER BY a.NRO_ASIENTO,a.DC desc;

    
BEGIN
        P_ERROR :=0;
        IF P_ERROR = 0 THEN

            SELECT ID_ENTIDAD,ID_DEPTO,ID_PROVEEDOR,SERIE,NUMERO,BASE,IGV,IMPORTE,IMPORTE_ME INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO_COMPRA,L_ID_PROVEEDOR,L_SERIE,L_NUMERO,L_BASE, L_IGV, L_IMPORTE, L_IMPORTE_ME  
            FROM COMPRA 
            WHERE ID_COMPRA = P_ID_COMPRA;

            SELECT ID_PEDIDO INTO STRICT L_ID_PEDIDO 
            FROM PEDIDO_COMPRA
            WHERE ID_COMPRA = P_ID_COMPRA;

            SELECT COUNT(1) INTO STRICT L_CANT FROM COMPRA_DETALLE WHERE ID_COMPRA = P_ID_COMPRA;
            IF L_CANT > 0 THEN
                SELECT DETALLE INTO STRICT L_GLOSA FROM COMPRA_DETALLE WHERE ID_COMPRA = P_ID_COMPRA  LIMIT 1;
            END IF;

            DELETE FROM COMPRA_ASIENTO 
            WHERE ID_COMPRA = P_ID_COMPRA;

            IF L_ID_PEDIDO <> 0 THEN
                SELECT  
                        COUNT(1) INTO STRICT L_CANT
                FROM PEDIDO_REGISTRO A 
                WHERE A.ID_PEDIDO = L_ID_PEDIDO;
                IF L_CANT > 0 THEN
                    SELECT (SELECT X.ID_DEPTO FROM ORG_SEDE_AREA X WHERE X.ID_ENTIDAD = A.ID_ENTIDAD AND X.ID_SEDEAREA = coalesce(A.ID_AREAGASTO,A.ID_AREAORIGEN) ) ORIGEN,
                    (SELECT X.ID_DEPTO FROM ORG_SEDE_AREA X WHERE X.ID_ENTIDAD = A.ID_ENTIDAD AND X.ID_SEDEAREA = ID_AREADESTINO) DESTINO
                    INTO STRICT L_ORIGEN,L_DESTINO
                    FROM PEDIDO_REGISTRO A 
                    WHERE A.ID_PEDIDO = L_ID_PEDIDO;
                END IF;
            END IF;

            OPEN casi;
                FETCH casi INTO L_ID_ASIENTO,L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC,L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA,L_ID_FONDO,L_NRO_ASIENTO;
                WHILE casi%FOUND LOOP
                    L_DEPTO:=null;
                    L_ID_CTACTE:=null;

                    if L_UNICO='U' then
                      select ID_DEPTO into STRICT L_DEPTO from CONTA_DINAMICA_DEPTO where id_entidad = L_ID_ENTIDAD and id_asiento=L_ID_ASIENTO;
                    elsif (L_UNICO='X') then
                        IF L_DC = 'C' THEN
                            L_DEPTO := L_DESTINO;
                        ELSE
                            L_DEPTO := L_ORIGEN;
                        END IF;
                    elsif L_UNICO='S' THEN  -- Si es sesiÃ³n
                        L_DEPTO := L_ID_DEPTO_COMPRA;
                    end if;

                    if L_UNICOCTACTE='U' then
                        SELECT  count(*) into STRICT L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad = L_ID_ENTIDAD AND id_asiento = L_ID_ASIENTO;
                        if L_CONT>0 then
                            SELECT ID_CTACTE into STRICT L_ID_CTACTE FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad = L_ID_ENTIDAD AND id_asiento = L_ID_ASIENTO;
                        end if;
                    elsif (l_unicoctated='M') then
                        SELECT position('|' in l_ctates) into STRICT l_buscar;
                        if l_buscar>0 then
                            select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                            select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                            select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,L_ID_CUENTAAASI) into STRICT L_ID_CTACTE;
                        else
                            L_ID_CTACTE:=l_ctates;
                        end if;
                    end if;

                    SELECT CASE L_ID_INDICADOR WHEN 'IMPORTE' then (L_IMPORTE)--*(L_PORCENTAJE/100)
                          WHEN 'BASE' then (L_BASE)--*(L_PORCENTAJE/100)
                          WHEN 'IGV' then (L_IGV)--*(L_PORCENTAJE/100)
                          ELSE
                          0
                          END INTO STRICT P_IMPORTE
;
                    SELECT CASE WHEN L_ID_INDICADOR = 'IMPORTE' AND L_DC = 'D' then
                            'S'
                          WHEN L_ID_INDICADOR = 'BASE' AND L_DC = 'D' then
                            'S'
                          WHEN L_ID_INDICADOR = 'IGV' then
                               'N'
                          ELSE
                          'N'
                          END INTO STRICT l_EDITABLE
;
                    IF L_DC='C' THEN
                        P_IMPORTE:=P_IMPORTE*(-1);
                        P_IMPORTE_ME:=P_IMPORTE_ME*(-1);
                    ELSE
                        P_IMPORTE := P_IMPORTE;
                        P_IMPORTE_ME := P_IMPORTE_ME;
                    END IF;

                    IF P_IMPORTE<>0 THEN
                        --SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO L_ID_CASIENTO FROM COMPRA_ASIENTO;
                        
                        INSERT INTO COMPRA_ASIENTO(
                         --ID_CASIENTO,
                         ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE,
                         ID_FONDO, ID_DEPTO, IMPORTE,
                         DESCRIPCION,EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, IMPORTE_ME, FECHA_ACTUALIZACION, AGRUPA,NRO_ASIENTO
                        ) VALUES(
                         --L_ID_CASIENTO,
                         P_ID_COMPRA, L_ID_CUENTAAASI, L_ID_RESTRICCION, L_ID_CTACTE,
                         L_ID_FONDO, L_DEPTO, P_IMPORTE,
                         
                         --SUBSTR((L_ID_ENTIDAD || '-' || L_CORRELATIVO || ' ' || L_SERIE || '-' || L_NUMERO || ' | ' || L_DESCRIPCION),1,50),
                         SUBSTR((L_ID_ENTIDAD || '-' || L_CORRELATIVO || ' ' || L_SERIE || '-' || L_NUMERO || ' - ' ||pkg_purchases_fc_ruc(L_ID_PROVEEDOR)||'-'||L_GLOSA||'-'||L_DESCRIPCION),1,50),
                         
                         l_EDITABLE, NULL, NULL, L_DC, P_IMPORTE_ME, statement_timestamp(), L_AGRUPA,L_NRO_ASIENTO
                        );
                    END IF;

                FETCH casi INTO L_ID_ASIENTO,L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC,L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA,L_ID_FONDO,L_NRO_ASIENTO;

            END LOOP;
            CLOSE casi;

            P_ERROR :=0;
        END IF;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compra_asiento_sim (P_ID_COMPRA bigint,P_ID_DINAMICA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
