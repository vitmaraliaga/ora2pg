-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compra_guardar_actualizar ( P_ES_CREDITO text, P_ID_PROVEEDOR bigint, P_ID_COMPROBANTE text, P_ES_ELECTRONICA text, P_ES_TRANSPORTE_CARGA text, P_ID_PARENT bigint, P_SERIE text, P_NUMERO text, P_FECHA_DOC timestamp(0), P_FECHA_VENCIMIENTO timestamp(0), P_ID_DINAMICA bigint, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_TAXS bigint, P_ES_RET_DET text, P_TIPOCAMBIO bigint, P_IMPORTE bigint, P_IMPORTE_ME bigint, -- VARIABLES DE DESTINO
 P_BASE_GRAVADA bigint, P_IGV_GRAVADO bigint, P_BASE_MIXTA bigint, P_IGV_MIXTO bigint, P_BASE_NOGRAVADA bigint, P_IGV_NOGRAVADO bigint, P_BASE_SINCREDITO bigint, --P_BASE_INAFECTA numeric, -- Para boletas
 P_OTROS bigint, P_FECHA_ALMACEN timestamp(0), P_TIENE_KARDEX text, P_ID_VOUCHER bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_PERSONA bigint, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_IGV bigint, P_ERROR INOUT bigint, P_ID_COMPRA INOUT bigint, P_MSGERROR INOUT text ) AS $body$
DECLARE

        L_ID_TIPONOTA varchar(3);

        L_ESTADO bigint := 0;
        L_ES_ACTIVO varchar(1) := NULL;
        --L_TIENE_KARDEX varchar(1) := NULL;
        L_IMPORTE_RENTA decimal(10,2) := NULL;
        L_TIENE_SUSPENCION varchar(1) := NULL;
        L_BASE_OF_TABLE decimal(10,2) := NULL;

        L_NUMERO_FORMATEADO varchar(25):= '';

        L_ID_DINAMICA bigint;
        L_ID_TIPOTRANSACCION bigint;
		L_ID_PARENT bigint;
	
        -- RETURN DATOS
        L_MSGERROR varchar(300):= '';
        L_ERROR bigint := 0;
        L_ID_COMPRA bigint := 0;
        L_CORRELATIVO bigint := 0;

BEGIN
            
	       	-- L_ERROR := 1;
	        -- L_MSGERROR := P_ID_DINAMICA;
	        -- GOTO salida_rapida;
	        
	        IF P_ID_DINAMICA = 0 OR coalesce(P_ID_DINAMICA::text, '') = '' THEN
	        	L_ID_DINAMICA := NULL;
	        ELSE
	          	L_ID_DINAMICA := P_ID_DINAMICA;
	        END IF;
	        IF P_ID_PARENT = 0 OR coalesce(P_ID_PARENT::text, '') = '' THEN
	        	L_ID_PARENT := NULL;
	        ELSE
	          	L_ID_PARENT := P_ID_PARENT;
	        END IF;
	
	        IF P_ID_TIPOTRANSACCION = 0 OR coalesce(P_ID_TIPOTRANSACCION::text, '') = '' THEN
	        	L_ID_TIPOTRANSACCION := NULL;
	        ELSE
	          	L_ID_TIPOTRANSACCION := P_ID_TIPOTRANSACCION;
	        END IF;
	       	
	        IF P_ID_COMPROBANTE='07' OR P_ID_COMPROBANTE = '87' THEN
	       		L_ID_TIPONOTA :='04';
	       	ELSIF P_ID_COMPROBANTE='08' OR P_ID_COMPROBANTE = '88' THEN
	       		L_ID_TIPONOTA :='11';
	       	ELSE
	       		L_ID_TIPONOTA := NULL;
	        END IF;
	
            -- select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
           -- SELECT lpad(to_char(P_NUMERO),8,'0') INTO L_NUMERO_FORMATEADO FROM dual;
            SELECT (CASE WHEN length(P_NUMERO) < 8 THEN lpad(P_NUMERO::text,8,'0')
				ELSE P_NUMERO::text
				END) INTO STRICT L_NUMERO_FORMATEADO 
			;

            IF L_ERROR = 0 THEN
                L_BASE_OF_TABLE := (COALESCE(P_BASE_GRAVADA,0)+COALESCE(P_BASE_NOGRAVADA,0)+COALESCE(P_BASE_MIXTA,0));

                IF P_ID_COMPRA = 0 THEN 
                         
                    --SELECT NVL(MAX(ID_COMPRA),0)+1 INTO L_ID_COMPRA FROM COMPRA;
                    
                    SELECT coalesce(MAX(CORRELATIVO),0)+1 INTO STRICT L_CORRELATIVO 
                    FROM COMPRA 
                    WHERE ID_ENTIDAD = P_ID_ENTIDAD
                    AND ID_DEPTO = P_ID_DEPTO
                    AND ID_VOUCHER = P_ID_VOUCHER;
                    -- AND ID_COMPROBANTE <> '02';
                    INSERT INTO COMPRA(
                    --ID_COMPRA, 
                    ID_PARENT, ID_ENTIDAD, ID_ANHO, ID_DEPTO, ID_MES, ID_PERSONA, ID_PROVEEDOR, ID_COMPROBANTE, ID_MONEDA, ID_VOUCHER, ID_TIPOTRANSACCION, ID_DINAMICA,
                    TIPOCAMBIO, FECHA_ALMACEN, FECHA_PROVISION, FECHA_DOC, SERIE, NUMERO, IMPORTE, IMPORTE_ME, IGV, 
                    BASE_GRAVADA, BASE_NOGRAVADA, BASE_MIXTA, BASE_SINCREDITO
                    --, BASE_INAFECTA
                    , IGV_GRAVADO, IGV_NOGRAVADO,
                    IGV_MIXTO, ESTADO, OTROS, ES_RET_DET, ES_ACTIVO, TIENE_KARDEX, ES_ELECTRONICA, IMPORTE_RENTA, TIENE_SUSPENCION, BASE, CORRELATIVO,
                    ES_CREDITO, ES_TRANSPORTE_CARGA, TAXS, FECHA_VENCIMIENTO, ID_TIPONOTA, ID_IGV
                    )VALUES(
                    --L_ID_COMPRA, 
                    L_ID_PARENT, P_ID_ENTIDAD, P_ID_ANHO, P_ID_DEPTO, P_ID_MES, P_ID_PERSONA, P_ID_PROVEEDOR, P_ID_COMPROBANTE, P_ID_MONEDA, P_ID_VOUCHER, L_ID_TIPOTRANSACCION,L_ID_DINAMICA,
                    P_TIPOCAMBIO, P_FECHA_ALMACEN, clock_timestamp(), P_FECHA_DOC, P_SERIE, L_NUMERO_FORMATEADO, P_IMPORTE, P_IMPORTE_ME, (COALESCE(P_IGV_GRAVADO,0)+COALESCE(P_IGV_MIXTO,0)+COALESCE(P_IGV_NOGRAVADO,0)),
                    P_BASE_GRAVADA, P_BASE_NOGRAVADA, P_BASE_MIXTA, P_BASE_SINCREDITO
                    --, P_BASE_INAFECTA
                    , P_IGV_GRAVADO, P_IGV_NOGRAVADO,
                    P_IGV_MIXTO, L_ESTADO, P_OTROS, P_ES_RET_DET, L_ES_ACTIVO, P_TIENE_KARDEX, P_ES_ELECTRONICA, L_IMPORTE_RENTA, L_TIENE_SUSPENCION, L_BASE_OF_TABLE, L_CORRELATIVO,
                    P_ES_CREDITO, P_ES_TRANSPORTE_CARGA, P_TAXS, P_FECHA_VENCIMIENTO,
                    L_ID_TIPONOTA, P_ID_IGV) RETURNING ID_COMPRA INTO L_ID_COMPRA; -- Preguntar que va en base e igv.
                ELSE 
                    L_ID_COMPRA := P_ID_COMPRA;

                    UPDATE COMPRA
                    SET ID_PARENT = L_ID_PARENT,
                        ES_CREDITO = P_ES_CREDITO,
                        -- ID_ENTIDAD = P_ID_ENTIDAD, ID_ANHO = P_ID_ANHO, ID_DEPTO = P_ID_DEPTO, ID_MES = P_ID_MES, ID_PERSONA = P_ID_PERSONA,
                        ID_PROVEEDOR = P_ID_PROVEEDOR, ID_COMPROBANTE = P_ID_COMPROBANTE, ID_MONEDA = P_ID_MONEDA, ID_VOUCHER = P_ID_VOUCHER, ID_TIPOTRANSACCION = L_ID_TIPOTRANSACCION,ID_DINAMICA=L_ID_DINAMICA,
                        TIPOCAMBIO = P_TIPOCAMBIO, FECHA_ALMACEN = P_FECHA_ALMACEN, 
                        -- FECHA_PROVISION = L_FECHA_PROVISION, 
                        FECHA_DOC = P_FECHA_DOC, SERIE = P_SERIE,
                        NUMERO = L_NUMERO_FORMATEADO, IMPORTE = P_IMPORTE, IMPORTE_ME = P_IMPORTE_ME, IGV = (COALESCE(P_IGV_GRAVADO,0)+COALESCE(P_IGV_MIXTO,0)+COALESCE(P_IGV_NOGRAVADO,0)), BASE_GRAVADA = P_BASE_GRAVADA,
                        BASE_NOGRAVADA = P_BASE_NOGRAVADA, BASE_MIXTA = P_BASE_MIXTA, BASE_SINCREDITO = P_BASE_SINCREDITO
                        --, BASE_INAFECTA = P_BASE_INAFECTA
                        , IGV_GRAVADO = P_IGV_GRAVADO,
                        IGV_NOGRAVADO = P_IGV_NOGRAVADO, IGV_MIXTO = P_IGV_MIXTO, ESTADO = L_ESTADO, OTROS = P_OTROS, ES_RET_DET = P_ES_RET_DET, ES_ACTIVO = L_ES_ACTIVO,
                        TIENE_KARDEX = P_TIENE_KARDEX, ES_ELECTRONICA = P_ES_ELECTRONICA, IMPORTE_RENTA = L_IMPORTE_RENTA, TIENE_SUSPENCION = L_TIENE_SUSPENCION, BASE = L_BASE_OF_TABLE,
                        ES_TRANSPORTE_CARGA = P_ES_TRANSPORTE_CARGA, TAXS = P_TAXS,
                        FECHA_VENCIMIENTO = P_FECHA_VENCIMIENTO, ID_TIPONOTA=L_ID_TIPONOTA,
                        ID_IGV=P_ID_IGV
                    WHERE ID_COMPRA = L_ID_COMPRA;

                END IF;

               /*
                -- Crear Asientos por defecto
                pkg_purchases_sp_compra_asiento_default_gene(
                P_ID_ENTIDAD, P_ID_PROVEEDOR, P_SERIE, L_NUMERO_FORMATEADO, 
                L_BASE, L_TOTAL, L_IGV, L_IMPORTE_ME, 
                P_ID_DINAMICA,
                P_ID_DEPTO, P_ID_ANHO, L_ID_COMPRA,L_ERROR, L_MSGERROR);
          */
            END IF;
--         <<salida_rapida>>
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;
        P_ID_COMPRA := L_ID_COMPRA;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compra_guardar_actualizar ( P_ES_CREDITO text, P_ID_PROVEEDOR bigint, P_ID_COMPROBANTE text, P_ES_ELECTRONICA text, P_ES_TRANSPORTE_CARGA text, P_ID_PARENT bigint, P_SERIE text, P_NUMERO text, P_FECHA_DOC timestamp(0), P_FECHA_VENCIMIENTO timestamp(0), P_ID_DINAMICA bigint, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_TAXS bigint, P_ES_RET_DET text, P_TIPOCAMBIO bigint, P_IMPORTE bigint, P_IMPORTE_ME bigint,  P_BASE_GRAVADA bigint, P_IGV_GRAVADO bigint, P_BASE_MIXTA bigint, P_IGV_MIXTO bigint, P_BASE_NOGRAVADA bigint, P_IGV_NOGRAVADO bigint, P_BASE_SINCREDITO bigint,  P_OTROS bigint, P_FECHA_ALMACEN timestamp(0), P_TIENE_KARDEX text, P_ID_VOUCHER bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_PERSONA bigint, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_IGV bigint, P_ERROR INOUT bigint, P_ID_COMPRA INOUT bigint, P_MSGERROR INOUT text ) FROM PUBLIC;
