-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compras_saldos (P_ID_ENTIDAD bigint,P_ID_DEPTO text, P_ID_ANHO bigint, P_ERROR OUT bigint,P_MSG OUT text) AS $body$
DECLARE


        L_ID_ANHO bigint := 2022;
        L_ID_MES bigint := 12;
        L_ID_COMPRA bigint;
        L_ID_PERSONA bigint :=4;
        L_ID_PROVEEDOR bigint;
        L_ID_MONEDA bigint;
        L_ID_COMPROBANTE varchar(4);
        L_SERIE varchar(8);
        L_NUMERO varchar(20);
        L_FECHA_PROVISION timestamp(0);
        L_FECHA_DOC timestamp(0);
        L_IMPORTE bigint;
        L_IMPORTE_ME bigint;

        L_ERROR bigint := 0;
        L_MSG varchar(200) := 'Success';
        L_CANT bigint;
        S_SIGNO bigint;

        C_PROVEEDORES CURSOR FOR	
            SELECT  DISTINCT A.ID_PROVEEDOR
            FROM VW_PURCHASES_MOV A
            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
            AND A.ID_DEPTO = P_ID_DEPTO
            AND A.ID_ANHO = P_ID_ANHO
            AND A.ID_MES <= L_ID_MES
            HAVING SUM(A.IMPORTE)+coalesce(SUM(A.IMPORTE_ME),0) <> 0 
            GROUP BY A.ID_COMPRA,A.ID_PROVEEDOR,A.SERIE,A.NUMERO,A.ID_COMPROBANTE;

        C_COMPRAS CURSOR FOR	
            SELECT  
                    A.ID_COMPRA,
                    A.ID_COMPROBANTE,
                    A.SERIE,
                    A.NUMERO,
                    TO_DATE(coalesce((SELECT X.FECHA_PROVISION FROM COMPRA X WHERE X.ID_COMPRA = A.ID_COMPRA),
                    (SELECT X.FECHA_PROVISION FROM COMPRA_SALDO X WHERE X.ID_SALDO = A.ID_COMPRA)))AS FECHA_PROVISION,
                    TO_DATE(coalesce((SELECT X.FECHA_DOC FROM COMPRA X WHERE X.ID_COMPRA = A.ID_COMPRA),
                    (SELECT X.FECHA_DOC FROM COMPRA_SALDO X WHERE X.ID_SALDO = A.ID_COMPRA)))AS FECHA_DOC,
                    SUM(A.IMPORTE) IMPORTE,
                    coalesce(SUM(A.IMPORTE_ME),0) IMPORTE_ME
            FROM VW_PURCHASES_MOV A
            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
            AND A.ID_DEPTO = P_ID_DEPTO
            AND A.ID_ANHO = P_ID_ANHO
            AND A.ID_MES <= L_ID_MES
            AND A.ID_PROVEEDOR = L_ID_PROVEEDOR
            HAVING SUM(A.IMPORTE)+coalesce(SUM(A.IMPORTE_ME),0) <> 0 
            GROUP BY A.ID_COMPRA,A.ID_PROVEEDOR,A.ID_COMPROBANTE,A.SERIE,A.NUMERO
            ORDER BY A.ID_COMPRA;

        
BEGIN
            
            OPEN C_PROVEEDORES;
                FETCH C_PROVEEDORES INTO L_ID_PROVEEDOR;
                WHILE C_PROVEEDORES%FOUND LOOP

                    OPEN C_COMPRAS;
                        FETCH C_COMPRAS INTO L_ID_COMPRA,L_ID_COMPROBANTE,L_SERIE,L_NUMERO,L_FECHA_PROVISION,L_FECHA_DOC,L_IMPORTE,L_IMPORTE_ME;
                        WHILE C_COMPRAS%FOUND LOOP

                            SELECT COUNT(1) INTO STRICT L_CANT FROM COMPRA WHERE ID_COMPRA = L_ID_COMPRA AND ID_PROVEEDOR =  L_ID_PROVEEDOR AND ID_ANHO = P_ID_ANHO;
                            IF L_CANT > 0 THEN
                                SELECT ID_MONEDA INTO STRICT L_ID_MONEDA
                                FROM COMPRA WHERE ID_COMPRA = L_ID_COMPRA AND ID_PROVEEDOR =  L_ID_PROVEEDOR AND ID_ANHO = P_ID_ANHO;
                            ELSE
                                SELECT COUNT(1) INTO STRICT L_CANT FROM COMPRA_SALDO WHERE ID_SALDO = L_ID_COMPRA AND ID_PROVEEDOR = L_ID_PROVEEDOR AND ID_ANHO = P_ID_ANHO;
                                IF L_CANT > 0 THEN
                                    SELECT ID_MONEDA INTO STRICT L_ID_MONEDA
                                    FROM COMPRA_SALDO WHERE ID_SALDO = L_ID_COMPRA AND ID_PROVEEDOR = L_ID_PROVEEDOR AND ID_ANHO = P_ID_ANHO;
                                    L_ID_COMPRA := NULL;
                                ELSE
                                    P_ERROR:=1;
                                END IF;
                            END IF;


                            INSERT INTO COMPRA_SALDO(ID_DEPTO,
                                      ID_ENTIDAD,
                                      ID_ANHO,
                                      ID_COMPRA,
                                      ID_MONEDA,
                                      ID_PERSONA,
                                      ID_PROVEEDOR,
                                      ID_COMPROBANTE,
                                      SERIE,
                                      NUMERO,
                                      FECHA_PROVISION,
                                      FECHA_DOC,
                                      IMPORTE,
                                      IMPORTE_ME)
                             VALUES (P_ID_DEPTO,
                                     P_ID_ENTIDAD,
                                     L_ID_ANHO,
                                     L_ID_COMPRA,
                                     L_ID_MONEDA,
                                     L_ID_PERSONA,
                                     L_ID_PROVEEDOR,
                                     L_ID_COMPROBANTE,
                                     L_SERIE,
                                     L_NUMERO,
                                     L_FECHA_PROVISION,
                                     L_FECHA_DOC,
                                     L_IMPORTE,
                                     L_IMPORTE_ME);

                            FETCH C_COMPRAS INTO L_ID_COMPRA,L_ID_COMPROBANTE,L_SERIE,L_NUMERO,L_FECHA_PROVISION,L_FECHA_DOC,L_IMPORTE,L_IMPORTE_ME;
                        END LOOP;
                    CLOSE C_COMPRAS;

                    FETCH C_PROVEEDORES INTO L_ID_PROVEEDOR;
                END LOOP;
            CLOSE C_PROVEEDORES;

--             <<salida_rapida>>
            P_ERROR := L_ERROR;
            P_MSG := L_MSG;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compras_saldos (P_ID_ENTIDAD bigint,P_ID_DEPTO text, P_ID_ANHO bigint, P_ERROR OUT bigint,P_MSG OUT text) FROM PUBLIC;
