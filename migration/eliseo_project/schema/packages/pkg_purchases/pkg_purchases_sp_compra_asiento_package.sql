-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compra_asiento (P_ID_COMPRA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_ENTIDAD bigint;
        L_ID_ASIENTO bigint;
        L_ID_TIPO_PLAN bigint;
        L_ID_RESTRICCION varchar(50);
        L_ID_CUENTAAASI varchar(10);
        L_ID_CTACTE varchar(10);
        L_DC varchar(1);
        L_DESTINO varchar(1);
        L_ID_INDICADOR varchar(35);
        L_UNICO varchar(1);
        L_UNICOCTACTE varchar(1);
        L_PORCENTAJE decimal(10,2);
        L_DESCRIPCION varchar(522);
        L_ID_CASIENTO varchar(50);
        L_ID_FONDO varchar(50);
        L_BASE decimal(10,2);
        L_IGV decimal(10,2);
        L_IMPORTE decimal(10,2);
        L_IMPORTE_ME decimal(10,2);
        P_IMPORTE decimal(10,2);
        P_IMPORTE_ME decimal(10,2);
        L_DEPTO varchar(10);
        L_CONT bigint := 1;
        L_AGRUPA varchar(1) :='N';
        L_SERIE varchar(4);
        L_NUMERO varchar(14);
        L_CORRELATIVO varchar(20);
        l_EDITABLE varchar(1) :='N';
        L_ESTADO varchar(1);
        L_NRO_ASIENTO bigint;
        L_IMP_DET decimal(10,2);
        L_ARTICULO varchar(100);
        L_COSTO_VINCULADO decimal(10,2);
        L_ID_PROVEEDOR bigint;
        L_PEDIDO_ORIGEN varchar(100);
        L_GLOSA varchar(300);

        casi CURSOR FOR		
        SELECT
        B.ID_TIPOPLAN,B.ID_CUENTAAASI,B.ID_RESTRICCION,B.ID_FONDO,B.ID_CTACTE,B.ID_DEPTO,B.DC,B.PORCENTAJE,SUBSTR(B.GLOSA,0,50),B.INDICADOR,B.NRO_ASIENTO
        FROM PEDIDO_COMPRA A, PEDIDO_ASIENTO B
        WHERE A.ID_PEDIDO = B.ID_PEDIDO
        AND A.ID_COMPRA = P_ID_COMPRA
        
UNION ALL

        SELECT 
        B.ID_TIPOPLAN,B.ID_CUENTAAASI,B.ID_RESTRICCION,B.ID_FONDO,B.ID_CTACTE,B.ID_DEPTO,B.DC,SUM(B.PORCENTAJE)/L_CONT AS PORCENTAJE,B.GLOSA,B.INDICADOR,coalesce(B.NRO_ASIENTO,1) AS NRO_ASIENTO
        FROM PEDIDO_ASIENTO B WHERE B.DC = 'D'
        AND B.ID_PEDIDO::text IN (WITH RECURSIVE cte AS (

            SELECT ((SELECT array_to_string(a, '') FROM regexp_matches(REGEXP_REPLACE(L_PEDIDO_ORIGEN, '(^|,)([^,]+)', '\2,', 'g'), '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (LEVEL - 1) ))::numeric 
            
            LEVEL <= (SELECT count(*) FROM regexp_matches(L_PEDIDO_ORIGEN, ',', 'g') ) + 1
          UNION ALL

            SELECT ((SELECT array_to_string(a, '') FROM regexp_matches(REGEXP_REPLACE(L_PEDIDO_ORIGEN, '(^|,)([^,]+)', '\2,', 'g'), '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (LEVEL - 1) ))::numeric 
            
            LEVEL <= (SELECT count(*) FROM regexp_matches(L_PEDIDO_ORIGEN, ',', 'g') ) + 1
         JOIN cte c ON ()

) SELECT * FROM cte)  GROUP BY B.ID_TIPOPLAN,B.ID_CUENTAAASI,B.ID_RESTRICCION,B.ID_FONDO,B.ID_CTACTE,B.ID_DEPTO,B.DC,B.GLOSA,B.INDICADOR,B.NRO_ASIENTO;
        --ORDER BY B.ID_PASIENTO;
        DET CURSOR FOR
        SELECT  --DECODE(L_ID_INDICADOR,'BASE',BASE,IMPORTE),
             (CASE
                 WHEN L_ID_INDICADOR = 'COSTO_ALM' AND coalesce(COSTO_VINCULADO, 0) > 0
                 THEN
                    BASE + coalesce(COSTO_VINCULADO, 0)
                 WHEN L_ID_INDICADOR = 'COSTO_ALM' AND coalesce(COSTO_VINCULADO, 0) = 0
                 THEN
                    BASE
                 ELSE
                    IMPORTE+coalesce(COSTO_VINCULADO, 0)
              END),
             pkg_inventories_fc_articulo(ID_ARTICULO)
        FROM COMPRA_DETALLE
        WHERE ID_COMPRA = P_ID_COMPRA AND coalesce(ES_COSTO_VINCULADO::text, '') = '' 
        ORDER BY ID_DETALLE;


BEGIN
        P_ERROR :=0;

        IF P_ERROR = 0 THEN
            SELECT ID_ENTIDAD,ID_PROVEEDOR,SERIE,NUMERO,BASE,IGV,IMPORTE,IMPORTE_ME,ESTADO INTO STRICT L_ID_ENTIDAD,L_ID_PROVEEDOR,L_SERIE,L_NUMERO,L_BASE, L_IGV, L_IMPORTE, L_IMPORTE_ME, L_ESTADO  FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA;
            IF L_ESTADO <> '1' THEN
                DELETE FROM COMPRA_ASIENTO
                WHERE ID_COMPRA = P_ID_COMPRA;
            END IF;

            SELECT ID_PEDIDO_ORIGEN INTO STRICT L_PEDIDO_ORIGEN
            FROM PEDIDO_COMPRA A WHERE A.ID_COMPRA = P_ID_COMPRA;

            SELECT 
                    COUNT(1) INTO STRICT L_CONT
            FROM PEDIDO_ASIENTO B WHERE B.DC = 'D'
            AND B.ID_PEDIDO::text IN (WITH RECURSIVE cte AS (

                SELECT ((SELECT array_to_string(a, '') FROM regexp_matches(REGEXP_REPLACE(L_PEDIDO_ORIGEN, '(^|,)([^,]+)', '\2,', 'g'), '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (LEVEL - 1) ))::numeric 
                
                LEVEL <= (SELECT count(*) FROM regexp_matches(L_PEDIDO_ORIGEN, ',', 'g') ) + 1
              UNION ALL

                SELECT ((SELECT array_to_string(a, '') FROM regexp_matches(REGEXP_REPLACE(L_PEDIDO_ORIGEN, '(^|,)([^,]+)', '\2,', 'g'), '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (LEVEL - 1) ))::numeric 
                
                LEVEL <= (SELECT count(*) FROM regexp_matches(L_PEDIDO_ORIGEN, ',', 'g') ) + 1
             JOIN cte c ON ()

) SELECT * FROM cte);

                OPEN casi;
                FETCH casi INTO L_ID_TIPO_PLAN, L_ID_CUENTAAASI, L_ID_RESTRICCION,L_ID_FONDO, L_ID_CTACTE,L_DEPTO,L_DC, L_PORCENTAJE, L_GLOSA, L_ID_INDICADOR,L_NRO_ASIENTO;
                WHILE casi%FOUND LOOP
                    SELECT CASE L_ID_INDICADOR WHEN 'IMPORTE' then (L_IMPORTE)*(L_PORCENTAJE/100)
                          WHEN 'BASE' then
                            --(L_BASE)*(L_PORCENTAJE/100)
                            (L_IMPORTE)/(1+(100-L_PORCENTAJE)/100)
                          WHEN 'IGV' then
                               --(L_IGV)*(L_PORCENTAJE/100)
                               (L_IMPORTE/(1+(L_PORCENTAJE/100)))*(L_PORCENTAJE/100)
                          WHEN 'COSTO_ALM' then (L_BASE)
                          ELSE
                          0
                          END INTO STRICT P_IMPORTE
;
                    SELECT CASE WHEN L_ID_INDICADOR = 'IMPORTE' AND L_DC = 'C' then
                            'N'
                          WHEN L_ID_INDICADOR = 'BASE' AND L_DC = 'D' then
                            'S'
                          WHEN L_ID_INDICADOR = 'IGV' then
                               'N'
                          ELSE
                          'S'
                          END INTO STRICT l_EDITABLE
;
                    SELECT CASE WHEN L_ID_INDICADOR = 'IMPORTE' AND L_DC = 'C' then
                            pkg_purchases_fc_ruc(L_ID_PROVEEDOR)||'-'||FC_NOMBRE_PERSONA(L_ID_PROVEEDOR)
                          WHEN L_ID_INDICADOR = 'BASE' AND L_DC = 'D' then (SELECT DETALLE FROM COMPRA_DETALLE WHERE ID_COMPRA = P_ID_COMPRA  LIMIT 1)
                          WHEN L_ID_INDICADOR = 'IGV' then
                               pkg_purchases_fc_ruc(L_ID_PROVEEDOR)||'-'||FC_NOMBRE_PERSONA(L_ID_PROVEEDOR)
                          ELSE (SELECT DETALLE FROM COMPRA_DETALLE WHERE ID_COMPRA = P_ID_COMPRA  LIMIT 1)
                          END INTO STRICT L_DESCRIPCION
;
                    IF L_DC='C' THEN
                        P_IMPORTE:=P_IMPORTE*(-1);
                        P_IMPORTE_ME:=P_IMPORTE_ME*(-1);
                    ELSE
                        P_IMPORTE := P_IMPORTE;
                        P_IMPORTE_ME := P_IMPORTE_ME;
                    END IF;

                        IF P_IMPORTE<>0 THEN
                        
                            IF L_ID_CUENTAAASI = '1141001' OR L_ID_CUENTAAASI = '1146001' OR L_ID_CUENTAAASI = '1144001' THEN 
                                L_NRO_ASIENTO := 2;
                                OPEN DET;
                                    FETCH DET INTO L_IMP_DET, L_ARTICULO;
                                    WHILE DET%FOUND LOOP
                                        IF L_DC='C' THEN
                                            L_IMP_DET:=L_IMP_DET*(-1);
                                        ELSE
                                            L_IMP_DET := L_IMP_DET;
                                        END IF;
                                        --SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO L_ID_CASIENTO FROM COMPRA_ASIENTO;
                                        INSERT INTO COMPRA_ASIENTO(
                                        --ID_CASIENTO,
                                        ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE,ID_FONDO, ID_DEPTO, IMPORTE,DESCRIPCION,EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, IMPORTE_ME, FECHA_ACTUALIZACION, AGRUPA,NRO_ASIENTO
                                        ) VALUES (
                                        --L_ID_CASIENTO,
                                        P_ID_COMPRA, L_ID_CUENTAAASI, L_ID_RESTRICCION, L_ID_CTACTE,L_ID_FONDO, L_DEPTO, L_IMP_DET,
                                          SUBSTR((L_ID_ENTIDAD || '-' || L_CORRELATIVO || ' ' || L_SERIE || '-' || L_NUMERO || ' | '||L_ARTICULO),1,70),l_EDITABLE, NULL, NULL, L_DC, P_IMPORTE_ME, statement_timestamp(), L_AGRUPA,L_NRO_ASIENTO
                                        );
                                    FETCH DET INTO L_IMP_DET, L_ARTICULO;
                                    END LOOP;
                                CLOSE DET;
                            ELSE
                                IF L_ID_CUENTAAASI = '5111011' OR L_ID_CUENTAAASI = '5111015' THEN
                                    SELECT SUM(BASE)*-1, coalesce(SUM(COSTO_VINCULADO),0)*-1 INTO STRICT L_COSTO_VINCULADO,L_IMP_DET
                                    FROM COMPRA_DETALLE
                                    WHERE ID_COMPRA = P_ID_COMPRA
                                    --AND ES_COSTO_VINCULADO IS NOT NULL
                                    ORDER BY ID_DETALLE;
                                    P_IMPORTE:=L_IMP_DET+L_COSTO_VINCULADO;
                                    L_NRO_ASIENTO := 2;
                                END IF;

                                --SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO L_ID_CASIENTO FROM COMPRA_ASIENTO;
                                
                                INSERT INTO COMPRA_ASIENTO(
                                 --ID_CASIENTO,
                                 ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE,
                                 ID_FONDO, ID_DEPTO, IMPORTE,
                                 DESCRIPCION,EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, IMPORTE_ME, FECHA_ACTUALIZACION, AGRUPA,NRO_ASIENTO
                                ) VALUES (
                                 --L_ID_CASIENTO,
                                 P_ID_COMPRA, L_ID_CUENTAAASI, L_ID_RESTRICCION, L_ID_CTACTE,
                                 L_ID_FONDO, L_DEPTO, P_IMPORTE,
                                 
                                 SUBSTR((L_ID_ENTIDAD || '-' || L_CORRELATIVO || ' ' || L_SERIE || '-' || L_NUMERO || ' | ' || L_GLOSA|| ' | ' ||L_DESCRIPCION),1,70),
                                 
                                 l_EDITABLE, NULL, NULL, L_DC, P_IMPORTE_ME, statement_timestamp(), L_AGRUPA,L_NRO_ASIENTO
                                );
                            END IF;
                      END IF;

                    FETCH casi INTO L_ID_TIPO_PLAN, L_ID_CUENTAAASI, L_ID_RESTRICCION,L_ID_FONDO, L_ID_CTACTE,L_DEPTO,L_DC, L_PORCENTAJE, L_GLOSA, L_ID_INDICADOR,L_NRO_ASIENTO;
                    END LOOP;
                CLOSE casi;

            SELECT 
                    COUNT(1) INTO STRICT L_CONT
            FROM PEDIDO_COMPRA A, PEDIDO_ASIENTO B
            WHERE A.ID_PEDIDO = B.ID_PEDIDO
            AND A.ID_COMPRA = P_ID_COMPRA;

            --EJECUTA EL ASIENTO DE PROVEEDORES, POR QUE PEDIDO ORIGEN NO TIENE ESTE ASIENTO ALAUTORIZAR
            IF L_CONT = 0 THEN
                CALL pkg_purchases_orders_sp_compra_asiento_proveedor(P_ID_COMPRA,P_ERROR,P_MSGERROR);
            END IF;

            P_ERROR :=0;
        END IF;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compra_asiento (P_ID_COMPRA bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
