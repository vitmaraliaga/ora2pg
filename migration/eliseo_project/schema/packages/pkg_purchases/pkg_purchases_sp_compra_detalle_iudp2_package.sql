-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compra_detalle_iudp2 ( P_ID_COMPRA bigint, P_ID_ALMACEN bigint, P_ID_ARTICULO bigint, P_CANTIDAD text, P_IMPORTE text, P_DETALLE text, P_ID_DETALLE INOUT bigint, P_ERROR OUT bigint, P_MSN_ERROR OUT text ) AS $body$
DECLARE


   	   L_ID_DETALLE bigint;
       L_ID_CTIPOIGV bigint;
       L_ID_TIPOIGV varchar(5);
       L_DETALLE varchar(255);

      L_BASE decimal(10,2);
      L_IGV decimal(10,2);
      L_IMPORTE decimal(10,2);
      L_ID_ANHO bigint;
      L_ID_COMPROBANTE varchar(2);

     
      L_CANTIDAD decimal(10,2);
      L_COUNT bigint;

     L_ERROR bigint := 0;
     L_MSN_ERROR  varchar(200):='';

BEGIN
	      
	       SELECT ID_COMPROBANTE, ID_ANHO INTO STRICT L_ID_COMPROBANTE, L_ID_ANHO FROM COMPRA
           WHERE ID_COMPRA = P_ID_COMPRA;

           SELECT ID_TIPOIGV
           , pkg_inventories_fc_articulo(ID_ARTICULO)
           INTO STRICT L_ID_TIPOIGV
           , L_DETALLE
           FROM INVENTARIO_ALMACEN_ARTICULO 
           WHERE ID_ALMACEN = P_ID_ALMACEN AND ID_ARTICULO =P_ID_ARTICULO
           AND ID_ANHO =L_ID_ANHO;

           --- Validar que no se duplique un articulo en el detalle
           --- si se duplica suma cantidades e importes
           SELECT COUNT(1) INTO STRICT L_COUNT FROM COMPRA_DETALLE 
           WHERE ID_COMPRA = P_ID_COMPRA
           AND ID_ALMACEN = P_ID_ALMACEN
           AND ID_ARTICULO=P_ID_ARTICULO;

           IF L_COUNT>0 THEN 
	          	SELECT ID_DETALLE, (CANTIDAD+P_CANTIDAD), (IMPORTE+P_IMPORTE)
	          	INTO STRICT L_ID_DETALLE,L_CANTIDAD, L_IMPORTE FROM COMPRA_DETALLE 
	           	WHERE ID_COMPRA = P_ID_COMPRA
	           	AND ID_ALMACEN = P_ID_ALMACEN
	           	AND ID_ARTICULO=P_ID_ARTICULO  LIMIT 1;
           ELSE
           		L_ID_DETALLE:=P_ID_DETALLE;
           		L_CANTIDAD:=P_CANTIDAD;
           		L_IMPORTE:=P_IMPORTE;
           END IF;
          ----------------------------------------
            IF L_ID_COMPROBANTE = '03' THEN  --BOLETA VENTA
                L_ID_CTIPOIGV := 4;
                L_IGV := 0;
                L_BASE := P_IMPORTE;
            ELSE  -- FACTURA
                IF L_ID_TIPOIGV = '10' THEN
                    L_ID_CTIPOIGV := 1;
                   	L_IGV := (P_IMPORTE/1.18)*0.18;
                	L_BASE := P_IMPORTE/1.18;
                ELSIF L_ID_TIPOIGV = '20' THEN
                    L_ID_CTIPOIGV := 4;
                    L_IGV := 0;
                	L_BASE := P_IMPORTE;
                ELSE
                    L_ID_CTIPOIGV := 4;
                    L_IGV := 0;
                	L_BASE := P_IMPORTE;
                END IF;
            END IF;

           IF P_ID_DETALLE <> 0 THEN
           
           		--L_ERROR := 1;
            	--L_MSN_ERROR := P_ID_DETALLE;
            	--GOTO salida_rapida;
            
            	UPDATE 
            	COMPRA_DETALLE
            	SET CANTIDAD = P_CANTIDAD, PRECIO = (P_IMPORTE/P_CANTIDAD),
            	BASE=L_BASE, IGV =L_IGV, IMPORTE=P_IMPORTE
            	WHERE ID_DETALLE =P_ID_DETALLE;

            ELSE 
            	--SELECT 
	            --      NVL(MAX(ID_DETALLE),0)+1 INTO L_ID_DETALLE
	            --FROM COMPRA_DETALLE;
	           
	         	INSERT INTO COMPRA_DETALLE(
	         	    --ID_DETALLE,
	         	    ID_COMPRA,
	         		ID_CTIPOIGV,ID_ALMACEN,ID_ARTICULO,ID_TIPOIGV,
	         		DETALLE,CANTIDAD,PRECIO,BASE,IGV,
	         		IMPORTE,ORDEN,ESTADO)
	                VALUES (
	                --L_ID_DETALLE,
	                P_ID_COMPRA,
	               	L_ID_CTIPOIGV,P_ID_ALMACEN,P_ID_ARTICULO,L_ID_TIPOIGV,
	               	L_DETALLE,P_CANTIDAD,(P_IMPORTE/P_CANTIDAD),L_BASE,L_IGV,
	              	P_IMPORTE,'0','1') RETURNING ID_DETALLE INTO L_ID_DETALLE;
	              --L_ID_DETALLE:=P_ID_DETALLE;
            END IF;

            
            CALL pkg_purchases_sp_actualizar_total_compra(P_ID_COMPRA);
            -- Actualizaci√≥n manual del importe
            CALL pkg_purchases_sp_actualizar_totalimp_compra(P_ID_COMPRA);

--         <<salida_rapida>>
        P_ID_DETALLE := L_ID_DETALLE;
       	P_ERROR := L_ERROR;
      	P_MSN_ERROR := L_MSN_ERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compra_detalle_iudp2 ( P_ID_COMPRA bigint, P_ID_ALMACEN bigint, P_ID_ARTICULO bigint, P_CANTIDAD text, P_IMPORTE text, P_DETALLE text, P_ID_DETALLE INOUT bigint, P_ERROR OUT bigint, P_MSN_ERROR OUT text ) FROM PUBLIC;
