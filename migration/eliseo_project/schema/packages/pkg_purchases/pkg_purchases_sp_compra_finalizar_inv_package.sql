-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compra_finalizar_inv ( P_ID_COMPRA bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

        L_COMPRA_SERIE varchar(20) := '';
        L_COMPRA_NUMERO varchar(20) := '';
        L_COMPRA_ID_VOUCHER bigint := 0;

    
        L_COMPRA_DECRIPCION bigint := 0;
        L_ID_ASIENTO bigint := 0;
        L_ID_OPERORIGEN bigint := 3;
        L_ID_FONDO bigint := 3;
        L_ID_DEPTO varchar(20):= '';
        L_ID_CUENTAAASI varchar(20):= '';
        L_CTACTE varchar(20):= '';
        L_RESTRICCION varchar(20):= '';
        L_IMPORTE bigint := 0;
        L_DESCRIPCION varchar(51):= '';
        L_ID_PARENT bigint := 0;
        L_AGRUPA varchar(1) := '';

        L_TOTALIZAR_IMPORTE bigint := 0;
        L_CANTIDAD_ASIENTOS bigint := 0;

        L_ESTADO varchar(10) := '';
        L_RESULT varchar(10) := '';
        L_ID_ALMACEN bigint;

       -- L_COUNT_ASIENTO_IGUAL numeric := 0;
    
        CURSOR_CASIENTOS CURSOR FOR 
        SELECT ID_FONDO, ID_DEPTO, ID_CUENTAAASI, ID_CTACTE, ID_RESTRICCION, IMPORTE, SUBSTR(DESCRIPCION,0,49), ID_PARENT, AGRUPA FROM COMPRA_ASIENTO WHERE ID_COMPRA = P_ID_COMPRA;

        L_ERROR bigint :=0;
        L_MSGERROR varchar(100) :='';

BEGIN
       
       	SELECT SERIE, NUMERO, ID_VOUCHER, ESTADO
      	INTO STRICT L_COMPRA_SERIE, L_COMPRA_NUMERO, L_COMPRA_ID_VOUCHER, L_ESTADO 
      	FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA;

        IF L_ESTADO = '1' THEN
            L_ERROR := 1;
            L_MSGERROR := 'La compra ya est√° provisionada';
--             GOTO salida_rapida;
        END IF;

        --- Validar que haya contrapartida
        SELECT FC_COMPRA_END(P_ID_COMPRA) INTO STRICT L_RESULT
;
        IF L_RESULT != 'SI' THEN
            L_ERROR := 1;
            L_MSGERROR := CASE L_RESULT
           					WHEN 'N1' THEN 'Asiento contable incorrecto' 
           					WHEN 'N2' THEN 'El asiento contable no cuadra con el comprobante'
           					WHEN 'N3' THEN 'Importes del comprobante no cuadra con los importes del detalle' 
           				  ELSE L_RESULT END;
--             GOTO salida_rapida;
        END IF;

       	--REGISTRO EL KARDEX DEL ARTICULO
        SELECT ID_ALMACEN INTO STRICT L_ID_ALMACEN FROM COMPRA_DETALLE
        WHERE ID_COMPRA = P_ID_COMPRA 
        AND coalesce(ES_COSTO_VINCULADO::text, '') = '' 
        GROUP BY ID_ALMACEN;

        IF (L_ID_ALMACEN IS NOT NULL AND L_ID_ALMACEN::text <> '') THEN
            --ACTUALIZA COSTOS VINCULADOS
            CALL pkg_purchases_sp_compra_costo_vinculado(P_ID_COMPRA);
            --FIN DE ACTUALIZACION COSTO VINCULADOS
            CALL pkg_purchases_sp_kardex_compra(P_ID_COMPRA);
        END IF;

        IF L_ERROR <> 1 THEN
            
            OPEN CURSOR_CASIENTOS;
            FETCH CURSOR_CASIENTOS INTO L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION, L_IMPORTE, L_DESCRIPCION, L_ID_PARENT, L_AGRUPA;
            WHILE CURSOR_CASIENTOS%FOUND LOOP
                SELECT coalesce(MAX(ID_ASIENTO),0)+1 INTO STRICT L_ID_ASIENTO FROM CONTA_ASIENTO;

                INSERT INTO CONTA_ASIENTO(
                ID_ASIENTO, ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE, RESTRICCION,
                IMPORTE, DESCRIPCION, MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA) 
                VALUES (
                L_ID_ASIENTO, L_ID_OPERORIGEN, P_ID_COMPRA, L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION,
                L_IMPORTE, L_DESCRIPCION, (L_ID_OPERORIGEN || '-' || P_ID_COMPRA), L_COMPRA_ID_VOUCHER, L_ID_PARENT, NULL,
                L_AGRUPA
                );

                FETCH CURSOR_CASIENTOS INTO L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION, L_IMPORTE, L_DESCRIPCION, L_ID_PARENT, L_AGRUPA;

            END LOOP;
            CLOSE CURSOR_CASIENTOS;
        END IF;
       	
       	UPDATE COMPRA SET ESTADO = '1' WHERE ID_COMPRA = P_ID_COMPRA;

--        	<<salida_rapida>>
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;


    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compra_finalizar_inv ( P_ID_COMPRA bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
