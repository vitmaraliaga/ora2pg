-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_genera_anticipos_notas (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_NOTA bigint,P_ID_PARENT bigint,P_ERROR OUT bigint, P_MSN OUT text) AS $body$
DECLARE

        L_TOTAL decimal(10,2) := 0;
        L_IMPORTE_NOTA decimal(10,2);
        L_IMP_ANTICIPO decimal(10,2);
        L_COD_DINAMICA_ANT varchar(2);
        L_TIPO varchar(1) := 'V';
        L_ERROR bigint;
        L_MSGERROR varchar(200);
        L_CANT bigint;
        L_SIGNO bigint;

        
BEGIN
            L_ERROR :=0;
            
            SELECT coalesce(SUM(TOTAL),0) AS TOTAL, SIGN(coalesce(SUM(TOTAL),0)) INTO STRICT L_TOTAL, L_SIGNO
            FROM VW_SALES_MOV
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_VENTA = P_ID_PARENT AND ID_CLIENTE = P_ID_CLIENTE;

            SELECT COUNT(1) INTO STRICT L_CANT
            FROM VW_SALES_MOV
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_VENTA = P_ID_PARENT AND ID_CLIENTE = P_ID_CLIENTE;
            IF L_CANT > 0 THEN
                SELECT DISTINCT TIPO INTO STRICT L_TIPO
                FROM VW_SALES_MOV
                WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_VENTA = P_ID_PARENT AND ID_CLIENTE = P_ID_CLIENTE;
            END IF;

            SELECT ABS(TOTAL) INTO STRICT L_IMPORTE_NOTA FROM VENTA WHERE ID_VENTA = P_ID_NOTA;

            IF L_SIGNO = -1 THEN
                IF L_IMPORTE_NOTA > (ABS(L_TOTAL)-L_IMPORTE_NOTA) THEN
                    --L_IMP_ANTICIPO := L_IMPORTE_NOTA - L_TOTAL;
                    L_IMP_ANTICIPO := ABS(L_IMPORTE_NOTA - ABS(ABS(L_TOTAL)-L_IMPORTE_NOTA));
                    IF L_IMP_ANTICIPO > 0 THEN
                        L_COD_DINAMICA_ANT:='AV';-- ANTICIPO A FAVOR DEL CLIENTE Y GNENERA ASIENTO
                        CALL pkg_sales_finances_sp_crear_anticipos_de_notas(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,P_ID_NOTA,L_IMP_ANTICIPO,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);

                        L_COD_DINAMICA_ANT:='AV';-- GENERA TRANSFERENCIA PARA DEJAR EN CERO LA VENTA QUE SOBREGIRÓ(-) LA NOTA DE CREDITO Y NO GNENERA ASIENTO
                        CALL pkg_sales_finances_sp_crear_anticipos_de_notas(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,P_ID_PARENT,L_IMP_ANTICIPO,'C',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR,L_TIPO);
                        --SOLO SE INSERTA EN ESTE CASO
                        INSERT INTO VENTA_ANTICIPO(ID_TIPOORIGEN,ID_ORIGEN,ID_DESTINO,FECHA)VALUES (1,P_ID_NOTA,0,clock_timestamp());
                    END IF;
                END IF;
            ELSE
                IF coalesce(P_ID_PARENT::text, '') = '' THEN
                    IF L_IMPORTE_NOTA > 0 THEN
                        L_COD_DINAMICA_ANT:='AV';-- ANTICIPO A FAVOR DEL CLIENTE Y GNENERA ASIENTO
                        CALL pkg_sales_finances_sp_crear_anticipos_de_notas(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,P_ID_NOTA,L_IMPORTE_NOTA,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);

                        L_COD_DINAMICA_ANT:='AV';-- GENERA TRANSFERENCIA PARA DEJAR EN CERO LA VENTA QUE SOBREGIRÓ(-) LA NOTA DE CREDITO Y NO GNENERA ASIENTO
                        CALL pkg_sales_finances_sp_crear_anticipos_de_notas(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,P_ID_NOTA,L_IMPORTE_NOTA,'C',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR,L_TIPO);
                    ELSE
                        L_MSGERROR := 'NO SE DEBE GENER EL ANTICIPO DE LA NOTA DE CREDITO';
                    END IF;

                END IF;
            END IF;
            P_ERROR := L_ERROR;
            P_MSN := L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_genera_anticipos_notas (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_NOTA bigint,P_ID_PARENT bigint,P_ERROR OUT bigint, P_MSN OUT text) FROM PUBLIC;
