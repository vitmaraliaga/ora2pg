-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_cobrar_cuota_ingles (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_VENTA bigint;
        L_ID_VDETALLE bigint;
        L_ID_ASIENTO bigint;
        L_ID_ANHO bigint;
        L_ID_ANHO_ACTUAL bigint;
        L_ID_MES bigint;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL bigint;
        L_ID_TIPOVOUCHER bigint := 1;
        L_ID_TIPOASIENTO varchar(4);
        L_ID_PERSONA bigint := 13428; --USER samuel.miranda
        L_ID_PERSONA_V bigint; --CONTADOR
        L_ID_CLIENTE bigint;
        L_NAME varchar(150);
        L_ID_VOUCHER bigint;
        L_ID_COMPROBANTE varchar(2) := '03';
        L_SERIE varchar(5);
        L_CORRELATIVO bigint;
        L_NUMERO varchar(8);
        L_ID_MONEDA bigint := 7;
        L_ID_LEYENDA varchar(4) := '1000';
        L_ID_IGV bigint := 18;
        L_ID_CREDITO bigint := 2;
        L_ID_TIPOTRANSACCION bigint;
        L_ID_TIPOORIGEN bigint := 1;
        L_ESTADO bigint := 1;
        L_ID_TIPOVENTA bigint := 3;--2; --IDIOMAS
        L_ID_TIPOIGV varchar(2) := '30';
        L_DC varchar(1) := 'D';
        L_CANTIDAD decimal(10,2) := 1;
        L_IGV decimal(10,2) := 0;
        L_DESCUENTO decimal(10,2) := 0;
        L_ITEM bigint := 1;
        L_CODIGO varchar(10);
        L_DEPTO_A varchar(10);

        L_ID_FONDO bigint := 10;
        L_ID_DEPTO_ASIENTO varchar(10);
        L_ID_CUENTAAASI varchar(20);
        L_CTACTE varchar(20);
        L_RESTRICCION varchar(10);
        L_IMPORTE decimal(10,2);
        L_GLOSA varchar(100) := '4ta Armada Conservatorio 2020-1';
        L_AGRUPA varchar(1) := 'N';
        L_DC_ASIENTO varchar(1);

        L_ERROR bigint := 0;
        L_MSGERROR varchar(200) := 'OK';
        L_CANT bigint;
        --DATOS PARA EL ANTICIPO
        L_IMPORTE_ANTICIPO decimal(10,2);
        L_TOTAL_ANTICIPO decimal(10,2);
        L_DC_ANT varchar(1) :='C'; --DC PARA ANTICIPOS
        L_CODIGO_ANT varchar(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO
        L_TIPO varchar(1) := 'V';

        L_ID_PERSONAL varchar(60);

        ALUMNOS CURSOR FOR
        /*SELECT 
                DOCUMENTO,IMPORTE,GLOSA,DEPTO
        FROM( 
            SELECT 
                    CARNE@DBL_ARON_APP(A.ID_PERSONAL) AS DOCUMENTO, 290 IMPORTE, '1.04.01' AS ID_NIVEL_VNT, '2da Armada Ingles 2020-3' GLOSA, '1.04.01'ID_NIVEL_CONT,SYSDATE FECHA,
                    (SELECT X.ID_NIVEL_AASINET FROM CONT_EQUIV_NIVEL@DBL_ARON_APP X WHERE X.ID_CONT = '001-2020' AND X.ID_NIVEL = '1.04.01') AS DEPTO,
                    (SELECT X.ID_DEPARTAMENTO FROM AASI_ENTIDAD_DEPARTAMENTO@DBL_ARON_APP X WHERE X.NIVEL = '1.04.01') AS DEPTOS
            FROM ALUMNO_MAT_UPG2@DBL_ARON_APP A
            WHERE A.CODIGO_EAP='ING'
        );*/
        SELECT 
                ID_PERSONAL,
                DOCUMENTO,IMPORTE,GLOSA,DEPTO
        FROM( 
            SELECT A.ID_PERSONAL,
                    CARNE@DBL_ARON_APP(A.ID_PERSONAL) AS DOCUMENTO, NRO_CUOTA IMPORTE, '1.04.01' AS ID_NIVEL_VNT, SUBSTR(A.CODIGO_EAP,3,3)||' Armada Conservatorio 2020-1' GLOSA, 
                    CASE WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Co' THEN '1.01.11' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Cl' THEN '1.04.59' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Tl' THEN '1.04.36' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='En' THEN '1.01.34' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Ij' THEN '1.06.03'  ELSE '1.06.03' END 
                    ID_NIVEL_CONT,clock_timestamp() FECHA,
                    (SELECT X.ID_NIVEL_AASINET FROM CONT_EQUIV_NIVEL@DBL_ARON_APP X WHERE X.ID_CONT = '001-2020' AND X.ID_NIVEL = CASE WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Co' THEN '1.01.11' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Cl' THEN '1.04.59' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Tl' THEN '1.04.36' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='En' THEN '1.01.34' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Ij' THEN '1.06.03'  ELSE '1.06.03' END  ) AS DEPTO,
                    (SELECT X.ID_DEPARTAMENTO FROM AASI_ENTIDAD_DEPARTAMENTO@DBL_ARON_APP X WHERE X.NIVEL = CASE WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Co' THEN '1.01.11' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Cl' THEN '1.04.59' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Tl' THEN '1.04.36' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='En' THEN '1.01.34' WHEN  SUBSTR(A.CODIGO_EAP,1,2)='Ij' THEN '1.06.03'  ELSE '1.06.03' END  ) AS DEPTOS
            FROM ALUMNO_MAT_UPG2@DBL_ARON_APP A
            WHERE LENGTH(A.CODIGO_EAP)=5
        AND A.CODIGO_EAP LIKE'%4ta' --2da, 3ra y 4ta (Solo cambias esto)
 
        );

        ASIENTO CURSOR FOR
        SELECT
                '1132001' AS CUENTA, '2' AS CTA_CTE, '0A' AS RESTRICCION, '11010101' AS DEPTO, 'D' AS DEBITO
        
        
UNION
 
        SELECT 
                '3141001' AS CUENTA, '' AS CTA_CTE, '2' AS RESTRICCION, L_DEPTO_A AS DEPTO, 'C' AS DEBITO
;

        
BEGIN
            SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(clock_timestamp(),'YYYY') ID_ANHO_ACTUAL INTO STRICT L_ID_ANHO,L_ID_ANHO_ACTUAL
            FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
            IF L_ID_ANHO = L_ID_ANHO_ACTUAL THEN
                SELECT MAX(ID_MES) ID_MES, (TO_CHAR(clock_timestamp(),'MM'))::numeric  ID_MES_ACTUAL INTO STRICT L_ID_MES,L_ID_MES_ACTUAL
                FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
                IF L_ID_MES = L_ID_MES_ACTUAL THEN

                    SELECT ID_TIPOASIENTO INTO STRICT L_ID_TIPOASIENTO FROM CONTA_VOUCHER_CONFIG
                    WHERE ID_ENTIDAD = P_ID_ENTIDAD
                    AND ID_DEPTO = P_ID_DEPTO
                    AND ID_ANHO = l_ID_ANHO
                    AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
                    --VOUCHER
                    SELECT ID_PERSONA INTO STRICT L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
                    WHERE ID_ENTIDAD=P_ID_ENTIDAD
                    AND ID_DEPTO=P_ID_DEPTO;

                    CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_PERSONA_V,L_ID_VOUCHER);

                    SELECT FC_IGV(CURRENT_DATE ) INTO STRICT L_ID_IGV;
                    -- GENERA ITEM NUMERO DE LOS DETALLES
                    OPEN ALUMNOS;
                        FETCH ALUMNOS INTO L_ID_PERSONAL,L_CODIGO,L_IMPORTE,L_GLOSA,L_DEPTO_A;
                        WHILE ALUMNOS%FOUND LOOP
                            --SELECT COUNT(1) INTO L_CANT FROM MOISES.PERSONA_NATURAL_ALUMNO WHERE CODIGO = L_CODIGO;
                            SELECT COUNT(1) INTO STRICT L_CANT FROM MOISES.PERSONA_NATURAL_ALUMNO WHERE ID_ACAD = L_ID_PERSONAL;
                            IF L_CANT > 0 THEN
                                --SELECT A.ID_PERSONA,A.PATERNO||' '||A.MATERNO||', '||A.NOMBRE AS NOMBRE INTO L_ID_CLIENTE,L_NAME FROM MOISES.PERSONA A JOIN MOISES.PERSONA_NATURAL_ALUMNO B 
                                --ON A.ID_PERSONA = B.ID_PERSONA WHERE B.CODIGO = L_CODIGO;
                                SELECT A.ID_PERSONA,A.PATERNO||' '||A.MATERNO||', '||A.NOMBRE AS NOMBRE INTO STRICT L_ID_CLIENTE,L_NAME FROM MOISES.PERSONA A JOIN MOISES.PERSONA_NATURAL_ALUMNO B 
                                ON A.ID_PERSONA = B.ID_PERSONA WHERE B.ID_ACAD = L_ID_PERSONAL;
                                --SERIE
                                CALL pkg_sales_sp_obtener_serie_numero(L_ID_PERSONA,L_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO, NULL, L_SERIE,L_CORRELATIVO);
                                SELECT LPAD(L_CORRELATIVO::text,8,'0') INTO STRICT L_NUMERO;
                                --VENTA
                                INSERT INTO TES_CUOTA_MUS(ID_CLIENTE,IMPORTE,FECHA,SE_COBRO) VALUES (L_ID_CLIENTE,L_IMPORTE,clock_timestamp(),'S');
                                INSERT INTO VENTA(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_VOUCHER,ID_COMPROBANTE,ID_IGV,ID_MONEDA,ID_LEYENDA,ID_CREDITO,ID_TIPOTRANSACCION,ID_TIPOORIGEN,SERIE,NUMERO,FECHA,GLOSA,
                                GRAVADA,INAFECTA,EXONERADA,GRATUITA,DESCUENTO,DESCUENTO_GLOBAL,IGV,TOTAL,ESTADO,ID_TIPOVENTA,OTROS_CARGOS)
                                VALUES (P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_PERSONA,L_ID_CLIENTE,L_ID_VOUCHER,L_ID_COMPROBANTE,L_ID_IGV,L_ID_MONEDA,L_ID_LEYENDA,L_ID_CREDITO,L_ID_TIPOTRANSACCION,L_ID_TIPOORIGEN,L_SERIE,L_NUMERO,clock_timestamp(),L_GLOSA,
                                0,L_IMPORTE,0,0,0,0,L_IGV,L_IMPORTE,L_ESTADO,L_ID_TIPOVENTA,0) RETURNING ID_VENTA INTO L_ID_VENTA;
                                --VENTA_DETALLE
                                INSERT INTO VENTA_DETALLE(ID_VENTA,ID_TIPOIGV,ID_TIPOORIGEN,DETALLE,DC,CANTIDAD,PRECIO,PRECIO_BASE,BASE,IGV,DESCUENTO,IMPORTE,ITEM)
                                VALUES (L_ID_VENTA,L_ID_TIPOIGV,L_ID_TIPOORIGEN,L_GLOSA,L_DC,L_CANTIDAD,L_IMPORTE,L_IMPORTE,L_IMPORTE,L_IGV,L_DESCUENTO,L_IMPORTE,L_ITEM) RETURNING ID_VDETALLE INTO L_ID_VDETALLE;
                                --ASIENTO D/C
                                OPEN ASIENTO;
                                FETCH ASIENTO INTO L_ID_CUENTAAASI,L_CTACTE,L_RESTRICCION,L_ID_DEPTO_ASIENTO,L_DC_ASIENTO;
                                    WHILE ASIENTO%FOUND LOOP
                                        SELECT coalesce(MAX(ID_ASIENTO),0)+1 INTO STRICT L_ID_ASIENTO FROM CONTA_ASIENTO;
                                        INSERT INTO CONTA_ASIENTO(ID_ASIENTO, ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE, RESTRICCION,IMPORTE, DESCRIPCION, MEMO, VOUCHER, REF_ID, AGRUPA)
                                        VALUES(L_ID_ASIENTO, L_ID_TIPOORIGEN, L_ID_VDETALLE, L_ID_FONDO, L_ID_DEPTO_ASIENTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION,L_IMPORTE*(CASE WHEN L_DC_ASIENTO='C' THEN -1  ELSE 1 END ),
                                        P_ID_ENTIDAD||'-('||L_SERIE||'-'||L_CORRELATIVO||')-'||L_GLOSA||'-'||L_NAME, L_ID_TIPOORIGEN || '-' || L_ID_VDETALLE, L_ID_VOUCHER, NULL,L_AGRUPA);
                                    FETCH ASIENTO INTO L_ID_CUENTAAASI,L_CTACTE,L_RESTRICCION,L_ID_DEPTO_ASIENTO,L_DC_ASIENTO;
                                    END LOOP;
                                CLOSE ASIENTO;
                                --CANCELA LA VENTA SI TIENE DINERO / EJECUTA ANTICIPOS
                                SELECT SUM(IMPORTE) AS TOTAL INTO STRICT L_TOTAL_ANTICIPO
                                FROM VW_SALES_ADVANCES
                                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                                AND ID_DEPTO = P_ID_DEPTO
                                AND ID_ANHO = L_ID_ANHO
                                AND ID_CLIENTE = L_ID_CLIENTE;
                                IF L_TOTAL_ANTICIPO > 0 THEN
                                    IF L_TOTAL_ANTICIPO >= L_IMPORTE THEN
                                        L_IMPORTE_ANTICIPO := L_IMPORTE;
                                    ELSE
                                        L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
                                    END IF;
                                    CALL pkg_sales_sp_crear_anticipos_clientes(P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_CLIENTE,L_ID_PERSONA,L_ID_VENTA,L_IMPORTE_ANTICIPO,L_DC_ANT,L_CODIGO_ANT,L_ERROR,L_MSGERROR,L_TIPO);
                                    IF L_ERROR > 0 THEN
                                      L_MSGERROR := L_MSGERROR;
                                  END IF;
                                END IF;
                                --VENTA ELECTRONICA
                                IF P_ID_ENTIDAD = 7124 THEN
                                    CALL pkg_sales_sp_venta_electronica(L_ID_VENTA,L_ID_COMPROBANTE);
                                END IF;
                            ELSE
                                INSERT INTO TES_CUOTA_MUS(ID_CLIENTE,IMPORTE,FECHA,SE_COBRO) VALUES (L_ID_CLIENTE,L_IMPORTE,clock_timestamp(),'N');
                                L_ERROR := 1;
                                L_MSGERROR := 'ERROR: NO Existe Alumno';
                            END IF;

                        FETCH ALUMNOS INTO L_ID_PERSONAL,L_CODIGO,L_IMPORTE,L_GLOSA,L_DEPTO_A;
                        END LOOP;
                    CLOSE ALUMNOS;
                ELSE
                    L_ERROR := 1;
                    L_MSGERROR := 'ERROR: El mes no esta Activo';
                END IF;
            ELSE
                L_ERROR := 1;
                L_MSGERROR := 'ERROR: El Año no esta Activo';
            END IF;
        P_ERROR:=L_ERROR;
        P_MSGERROR:=L_MSGERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_cobrar_cuota_ingles (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
