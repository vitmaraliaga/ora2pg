-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_morosidad_new (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint,P_ID_SEMESTRE bigint,P_ID_NIVEL_ENSENANZA bigint,P_ID_MODO_CONTRATO bigint,P_ID_SEDE bigint,P_ID_MODALIDAD_ESTUDIO bigint) AS $body$
DECLARE

        L_ID_MES bigint;
        L_ID_CLIENTE bigint;
        L_ID_TIPOVENTA bigint;
        L_INGRESO decimal(10,2);
        L_DEBITO decimal(10,2);
        L_CREDITO decimal(10,2);
        L_SALDO decimal(10,2);
        L_MOROSIDAD decimal(10,2);
        L_CANT bigint :=0;
        L_ERROR bigint;

        C_ALUMNOS CURSOR FOR
        SELECT ID_PERSONA FROM VW_MAT_MATRICULADOS
        WHERE ID_SEMESTRE = P_ID_SEMESTRE  
        AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA 
        AND ID_MODO_CONTRATO = P_ID_MODO_CONTRATO 
        AND ID_SEDE = P_ID_SEDE 
        AND ID_MODALIDAD_ESTUDIO = P_ID_MODALIDAD_ESTUDIO
        AND CUOTAS <> 1
        AND ID_PERSONA IN (81236);
        --AND ID_PERSONA IN (78583);--(198015,78583);
        
        
BEGIN 
            DELETE FROM TT_SALDO_ALUMNO;
            INSERT INTO TT_SALDO_ALUMNO(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_CLIENTE,CREDITO,DEBITO,SALDO)
            SELECT A.ID_ENTIDAD,
                A.ID_DEPTO,
                A.ID_ANHO,
                A.ID_CLIENTE,
                SUM(CASE WHEN A.TOTAL < 0 THEN A.TOTAL ELSE 0 END) AS CREDITO,
                SUM(CASE WHEN A.TOTAL > 0 THEN A.TOTAL ELSE 0 END) AS DEBITO,
                SUM(A.TOTAL) AS TOTAL
            FROM VW_SALES_MOV A
            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD 
            AND A.ID_DEPTO = P_ID_DEPTO
            AND A.ID_ANHO = P_ID_ANHO
            AND A.ID_TIPOVENTA IN (1,2,3,4) 
            --AND A.FECHA BETWEEN '01/08/2020' AND '30/08/2020'
            AND A.ID_CLIENTE IN (
                SELECT ID_PERSONA FROM VW_MAT_MATRICULADOS
                WHERE ID_SEMESTRE = P_ID_SEMESTRE  
                AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA 
                AND ID_MODO_CONTRATO = P_ID_MODO_CONTRATO 
                AND ID_SEDE = P_ID_SEDE 
                AND ID_MODALIDAD_ESTUDIO = P_ID_MODALIDAD_ESTUDIO
                AND CUOTAS <> 1
                AND ID_PERSONA IN (81236) 
            ) 
            GROUP BY A.ID_ENTIDAD,A.ID_DEPTO,A.ID_ANHO,A.ID_CLIENTE;

            DELETE FROM REP_MOROSIDAD_NEW WHERE ID_USER = P_ID_USER;
            OPEN C_ALUMNOS;
                FETCH C_ALUMNOS INTO L_ID_CLIENTE;
                WHILE C_ALUMNOS%FOUND LOOP

                    BEGIN 
                        SELECT COUNT(1) AS SALDO INTO STRICT L_CANT
                        FROM (
                                SELECT ID_CLIENTE,TOTAL FROM VW_SALES_MOV
                                WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_MES <= P_ID_MES AND ID_CLIENTE = L_ID_CLIENTE
                                AND ID_TIPOVENTA IN (1,2,3,4) 
                                
UNION ALL

                                SELECT ID_CLIENTE,SUM(IMPORTE) * CASE WHEN SIGN(SUM(IMPORTE))=1 THEN  -1  ELSE 0 END AS TOTAL
                                FROM VW_SALES_ADVANCES
                                WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_MES <= P_ID_MES AND ID_CLIENTE = L_ID_CLIENTE
                                GROUP BY ID_CLIENTE
                             ) alias5 
                        GROUP BY ID_CLIENTE;
                        IF L_CANT > 0 THEN

                            SELECT SUM(TOTAL) AS SALDO INTO STRICT L_SALDO
                            FROM (
                                    SELECT ID_CLIENTE,TOTAL FROM VW_SALES_MOV
                                    WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_MES <= P_ID_MES AND ID_CLIENTE = L_ID_CLIENTE
                                    AND ID_TIPOVENTA IN (1,2,3,4) 
                                    
UNION ALL

                                    SELECT ID_CLIENTE,SUM(IMPORTE) * CASE WHEN SIGN(SUM(IMPORTE))=1 THEN  -1  ELSE 0 END AS TOTAL
                                    FROM VW_SALES_ADVANCES
                                    WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_MES <= P_ID_MES AND ID_CLIENTE = L_ID_CLIENTE
                                    GROUP BY ID_CLIENTE
                                 ) alias5 
                            GROUP BY ID_CLIENTE;

                        END IF;

                        SELECT COUNT(1) INTO STRICT L_CANT
                        FROM TT_SALDO_ALUMNO A
                        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_DEPTO = P_ID_DEPTO AND A.ID_ANHO = P_ID_ANHO AND A.ID_CLIENTE = L_ID_CLIENTE;
                        IF L_CANT > 0 THEN
                            SELECT A.DEBITO AS INGRESO,A.DEBITO INTO STRICT L_INGRESO,L_DEBITO
                            FROM TT_SALDO_ALUMNO A
                            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_DEPTO = P_ID_DEPTO AND A.ID_ANHO = P_ID_ANHO AND A.ID_CLIENTE = L_ID_CLIENTE;
                        END IF;

                        L_MOROSIDAD := (L_SALDO/(CASE WHEN L_DEBITO = 0 THEN 1 ELSE L_DEBITO END))*100;

                        INSERT INTO REP_MOROSIDAD_NEW(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_CLIENTE,ID_USER,ID_TIPOVENTA,INGRESO,DEBITO,CREDITO,SALDO,MOROSIDAD)
                        VALUES (P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,L_ID_MES,L_ID_CLIENTE,P_ID_USER,L_ID_TIPOVENTA,L_INGRESO,L_DEBITO,L_CREDITO,L_SALDO,L_MOROSIDAD);

                    EXCEPTION WHEN OTHERS THEN
                            L_ERROR :=0;
                    END;

                    L_INGRESO :=0;
                    L_DEBITO :=0;
                    L_CREDITO :=0;
                    L_SALDO :=0;
                    L_MOROSIDAD :=0;

                FETCH C_ALUMNOS INTO L_ID_CLIENTE;
                END LOOP;
            CLOSE C_ALUMNOS;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_morosidad_new (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint,P_ID_SEMESTRE bigint,P_ID_NIVEL_ENSENANZA bigint,P_ID_MODO_CONTRATO bigint,P_ID_SEDE bigint,P_ID_MODALIDAD_ESTUDIO bigint) FROM PUBLIC;
