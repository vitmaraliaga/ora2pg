-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_resultado_resumen (P_ID_ENTIDAD bigint,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint) AS $body$
DECLARE

        L_ID_MES bigint;
        L_ID_CLIENTE bigint;
        L_ID_TIPOVENTA bigint;
        L_INGRESO decimal(10,2);
        L_DEBITO decimal(10,2);
        L_CREDITO decimal(10,2);
        L_SALDO decimal(10,2);
        L_MOROSIDAD decimal(10,2);
        L_CANT bigint :=0;
        L_ERROR bigint;

        L_ID_NIVEL bigint;
        L_LEVEL bigint;WITH RECURSIVE cte AS (


        C_NIVELES CURSOR FOR
        SELECT ID_NIVEL,1 as level
        FROM CONTA_NIVEL
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_TIPOREPORTE = 3  UNION ALL

        
        C_NIVELES CURSOR FOR
        SELECT ID_NIVEL,(c.level+1)
        FROM CONTA_NIVEL
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_TIPOREPORTE = 3 JOIN cte c ON (c.ID_NIVEL = WHERE.ID_PARENT)

) SELECT * FROM cte;

        
BEGIN 
            DELETE FROM EF_RESULTADO_RESUMEN WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = P_ID_ANHO AND ID_MES = P_ID_MES;
            OPEN C_NIVELES;
                FETCH C_NIVELES INTO L_ID_NIVEL,L_LEVEL;
                WHILE C_NIVELES%FOUND LOOP

                    BEGIN 
                    
                        IF L_LEVEL = 4 THEN
                            INSERT INTO EF_RESULTADO_RESUMEN(ID_ENTIDAD,ID_ANHO,ID_MES,ID_NIVEL,ID_CUENTA,IMPORTE,DEBE,HABER)
                            SELECT P_ID_ENTIDAD,P_ID_ANHO,P_ID_MES,L_ID_NIVEL,ID_CUENTA,IMPORTE,DEBE,HABER
                            FROM (
                                    SELECT ID_ANHO,ID_CUENTA,SUM(COS_VALOR) AS IMPORTE,SUM(DEBE) AS DEBE,SUM(HABER) AS HABER
                                    FROM (
                                            SELECT A.ID_CUENTA,NOMBRE,C.ID_ANHO,C.ID_MES,C.COS_VALOR,C.DEBE,C.HABER
                                            FROM CONTA_CUENTA A JOIN CONTA_CUENTA_DETALLE B ON A.ID_CUENTA = B.ID_CUENTA
                                            JOIN VW_CONTA_DIARIO C ON A.ID_ENTIDAD = C.ID_ENTIDAD
                                            AND B.ID_CUENTAAASI = C.ID_CUENTAAASI
                                            WHERE A.ID_TIPOREPORTE = 3
                                            AND (A.ID_PARENT IS NOT NULL AND A.ID_PARENT::text <> '')
                                            AND coalesce(C.ID_CTACTE::text, '') = ''
                                            AND C.ID_ANHO = P_ID_ANHO
                                            AND C.ID_MES <= P_ID_MES
                                            AND C.ID_DEPTO IN (SELECT B.ID_DEPTO FROM CONTA_NIVEL A JOIN CONTA_NIVEL_DETALLE B ON A.ID_NIVEL = B.ID_NIVEL WHERE A.ID_PARENT = L_ID_NIVEL) 
                                            
UNION ALL

                                            SELECT X.ID_CUENTA,X.NOMBRE,Y.ID_ANHO,Y.ID_MES,Y.COS_VALOR,Y.DEBE,Y.HABER 
                                            FROM (
                                                    SELECT A.ID_ENTIDAD,A.ID_CUENTA,A.NOMBRE,B.ID_CUENTAAASI,C.CTA_CTE 
                                                    FROM CONTA_CUENTA A JOIN CONTA_CUENTA_DETALLE B ON A.ID_CUENTA = B.ID_CUENTA
                                                    JOIN CONTA_CUENTA_CTE C ON B.ID_CDETALLE = C.ID_CDETALLE
                                                    WHERE A.ID_TIPOREPORTE = 3
                                                    AND (A.ID_PARENT IS NOT NULL AND A.ID_PARENT::text <> '') 
                                            ) X JOIN VW_CONTA_DIARIO Y ON X.ID_ENTIDAD = Y.ID_ENTIDAD
                                            AND X.ID_CUENTAAASI = Y.ID_CUENTAAASI
                                            AND X.CTA_CTE = Y.ID_CTACTE
                                            AND Y.ID_ANHO = P_ID_ANHO
                                            AND Y.ID_MES <= P_ID_MES
                                            AND Y.ID_DEPTO IN(SELECT B.ID_DEPTO FROM CONTA_NIVEL A JOIN CONTA_NIVEL_DETALLE B ON A.ID_NIVEL = B.ID_NIVEL WHERE A.ID_PARENT = L_ID_NIVEL) 
                                    ) alias10 
                                    GROUP BY ID_ANHO,ID_CUENTA
                            ) alias11;

                        END IF;

                    EXCEPTION WHEN OTHERS THEN
                            L_ERROR :=0;
                    END;

                                
                FETCH C_NIVELES INTO L_ID_NIVEL,L_LEVEL;
                END LOOP;
            CLOSE C_NIVELES;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_resultado_resumen (P_ID_ENTIDAD bigint,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint) FROM PUBLIC;
