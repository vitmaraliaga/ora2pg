-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,utils,public;




CREATE OR REPLACE FUNCTION eliseo.utils_datepart_ (p_part_expr text, p_date_expr TS) RETURNS bigint AS $body$
DECLARE

  v_part varchar(15) := p_part_expr;
  v_timestamp TS := p_date_expr;
  v_wkday varchar(10);
  v_year varchar(4);
BEGIN
      v_part := UPPER(p_part_expr);
      IF v_part IN ('YEAR', 'YY', 'YYYY') THEN  RETURN (TO_CHAR(v_timestamp, 'YYYY'))::numeric;
      ELSIF v_part IN ('QUARTER', 'QQ', 'Q')  THEN RETURN (TO_CHAR(v_timestamp, 'Q'))::numeric;
      ELSIF v_part IN ('MONTH', 'MM', 'M') THEN RETURN (TO_CHAR(v_timestamp, 'MM'))::numeric;
      ElSIF v_part IN ('DAYOFYEAR', 'DY', 'Y') THEN RETURN (TO_CHAR(v_timestamp, 'DDD'))::numeric;
      ELSIF v_part IN ('DAY', 'DD', 'D') THEN RETURN (TO_CHAR(v_timestamp, 'DD'))::numeric;
      ELSIF v_part IN ('WEEKDAY', 'DW', 'W') THEN RETURN (TO_CHAR(v_timestamp, 'D'))::numeric;
      -- Oracle returns 1 short when compared to Sybase so adding 1 to the result.
      ElSIF v_part IN ('WEEK', 'WK', 'WW') THEN
         v_year := TO_CHAR(v_timestamp, 'YYYY');
         FOR i in current_setting('utils.dt_formats')::VARCHAR2_ARRAY.FIRST .. current_setting('utils.dt_formats')::VARCHAR2_ARRAY.LAST
         LOOP
            BEGIN
              v_wkday := TO_CHAR(TO_DATE('01-01-'|| v_year, current_setting('utils.dt_formats')::VARCHAR2_ARRAY(i)), 'DAY');
              EXIT;
            EXCEPTION
             WHEN OTHERS THEN
                NULL;
            END;
         END LOOP;
         IF v_wkday = TO_CHAR(v_timestamp, 'DAY') THEN
            RETURN (TO_CHAR(v_timestamp, 'WW'))::numeric;
         ELSE
            RETURN (TO_CHAR(v_timestamp, 'WW'))::numeric  + 1;
         END IF;
      ElSIF v_part IN ('HOUR', 'HH') THEN RETURN (TO_CHAR(v_timestamp, 'HH24'))::numeric;
      ElSIF v_part IN ('MINUTE', 'MI', 'N') THEN RETURN (TO_CHAR(v_timestamp, 'MI'))::numeric;
      ElSIF v_part IN ('SECOND', 'SS', 'S') THEN RETURN (TO_CHAR(v_timestamp, 'SS'))::numeric;
      ElSIF v_part IN ('MILLISECOND', 'MS', 'FF3') THEN RETURN (TO_CHAR(v_timestamp, 'MS'))::numeric;
      ElSIF v_part IN ('MICROSECOND', 'MCS', 'US', 'FF6') THEN RETURN (TO_CHAR(v_timestamp, 'US'))::numeric;
      ElSIF v_part IN ('NANOSECOND', 'NS', 'FF9') THEN RETURN (TO_CHAR(v_timestamp, 'US'))::numeric;
      ElSIF v_part IN ('CALYEAROFWEEK', 'CYR', 'IYYY') THEN RETURN (TO_CHAR(v_timestamp, 'IYYY'))::numeric;
      ElSIF v_part IN ('CALWEEKOFYEAR', 'CWK', 'IW') THEN RETURN (TO_CHAR(v_timestamp, 'IW'))::numeric;
      -- Oracle returns 1 more when compared to Sybase so subtract 1 to the result.
      ElSIF v_part IN ('CALDAYOFWEEK', 'CDW', 'D') THEN RETURN (TO_CHAR(v_timestamp, 'D'))::numeric  - 1;
      ELSE
        RETURN NULL;
      END IF;
EXCEPTION
    WHEN OTHERS THEN
      RAISE EXCEPTION '%', DBMS_UTILITY.FORMAT_ERROR_BACKTRACE USING ERRCODE = '45000';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION eliseo.utils_datepart_ (p_part_expr text, p_date_expr TS) FROM PUBLIC;
