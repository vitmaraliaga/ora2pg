-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,utils,public;




CREATE OR REPLACE FUNCTION eliseo.utils_parsename (p_object_name text, p_object_piece bigint) RETURNS varchar AS $body$
DECLARE

    ret_val varchar(150) := NULL;
    pos bigint;
    v_next_pos bigint;
BEGIN
    IF coalesce(p_object_name::text, '') = '' THEN
       RETURN NULL;
    END IF;

    -- for 10g
    IF NOT DBMS_DB_VERSION.VER_LE_9_2 THEN
      IF p_object_piece = 1 THEN  -- object name
         ret_val := (SELECT array_to_string(a, '') FROM regexp_matches(p_object_name, '(^[^\.]+$)|(\.[^\.]+$)', 'g') AS foo(a) LIMIT 1 OFFSET (1 - 1) );
         ret_val := REPLACE(ret_val, '.', '');
      ELSIF p_object_piece = 2 THEN  -- schema name
         ret_val := (SELECT array_to_string(a, '') FROM regexp_matches(p_object_name, '([^\.]+)\.([^\.]+$)', 'g') AS foo(a) LIMIT 1 OFFSET (1 - 1) );
         ret_val := REGEXP_REPLACE(ret_val, '\.([^\.]+$)', '', 'g');
      ELSIF p_object_piece = 3 THEN  -- database name
         ret_val := (SELECT array_to_string(a, '') FROM regexp_matches(p_object_name, '([^\.]+)\.([^\.]*)\.([^\.]+$)', 'g') AS foo(a) LIMIT 1 OFFSET (1 - 1) );
         ret_val := REGEXP_REPLACE(ret_val, '\.([^\.]*)\.([^\.]+$)', '', 'g');
      ELSIF p_object_piece = 4 THEN  -- server name
         ret_val := (SELECT array_to_string(a, '') FROM regexp_matches(p_object_name, '^([^\.]+)\.([^\.]*)\.([^\.]*)\.([^\.]+$)', 'g') AS foo(a) LIMIT 1 OFFSET (1 - 1) );
         IF (ret_val IS NOT NULL AND ret_val::text <> '') THEN
           ret_val := REGEXP_REPLACE(p_object_name, '^([^\.]+)\.([^\.]*)\.([^\.]*)\.([^\.]+$)', '\1', 'g');
         END IF;
      END IF;
    ELSE
      ret_val := p_object_name;
      v_next_pos := LENGTH(p_object_name);
      FOR i IN 1 .. p_object_piece LOOP
        pos := INSTR(p_object_name, '.', -1, i);
        IF pos > 0 THEN
          ret_val := SUBSTR(p_object_name, pos + 1, v_next_pos - pos);
        END IF;
        v_next_pos := pos;
      END LOOP;

      IF LENGTH(ret_val) = 0 THEN
        RETURN NULL;
      END IF;
    END IF;

    RETURN ret_val;
EXCEPTION
    WHEN OTHERS THEN
       RAISE EXCEPTION '%', DBMS_UTILITY.FORMAT_ERROR_STACK USING ERRCODE = '45000';
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION eliseo.utils_parsename (p_object_name text, p_object_piece bigint) FROM PUBLIC;
