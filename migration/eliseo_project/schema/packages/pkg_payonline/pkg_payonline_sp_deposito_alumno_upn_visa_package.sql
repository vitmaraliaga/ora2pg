-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_payonline,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_payonline_sp_deposito_alumno_upn_visa ( P_IDS_VENTAS text, P_IMPORTES text, P_IDS_ARTICULOS text, P_ID_COMPROBANTE text, P_ID_CLIENTE_LEGAL bigint, P_ID_PERSONA bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_DINAMICA bigint, --Datos oblligatorios, no necesitan ser declarados en campo.
 P_IMPORTE bigint, P_PURCHASE_NUMBER text, P_BRAND text, P_IP text, P_ID OUT text, P_ERROR OUT bigint, P_MSGERROR out text) AS $body$
DECLARE

     l_id_anho bigint;
     l_id_mes bigint;
     l_id_user bigint:=2; --cajero Visa Net Online C/E
     l_fecha timestamp(0);
     l_glosa varchar(100);
     L_IDS_VENTAS varchar(250) :='';

     -- l_id_comprobante varchar(20) :='';
     l_id_deposito_efectivo bigint := 0;
     l_id_deposito_tarjeta bigint := 0;
     l_id_new_venta bigint := 0;
     l_id_count_id_venta_old bigint := 0;
     l_id_tipotarjeta bigint := 1;

     L_ID_COMPROBANTE varchar(10) :='';
     L_ID_CLIENTE_LEGAL bigint := 0;
    	
     l_contar bigint := 0;

     l_error bigint:=0;
     l_msgerror varchar(200):='';

     
BEGIN
	     
	    SELECT REPLACE(P_IDS_VENTAS, 'null', '0') INTO STRICT L_IDS_VENTAS;
	
	    IF P_BRAND='visa' THEN
        	l_id_tipotarjeta := 1;
        ELSIF  P_BRAND='mastercard' THEN
        	l_id_tipotarjeta := 2;
        ELSIF  P_BRAND='dinersclub' THEN
        	l_id_tipotarjeta := 3;
        ELSIF  P_BRAND='amex' THEN
        	l_id_tipotarjeta := 4;
        END IF;

        select 
        (to_char(clock_timestamp(),'YYYY'))::numeric , 
        (to_char(clock_timestamp(),'MM'))::numeric ,
        clock_timestamp(),
        'Dep√≥dito con VISA'
        into STRICT
        l_id_anho,
        l_id_mes,
        l_fecha,
        l_glosa
;

        -- ********* --
        -- (INICIO) AGREGADO PARA OBTENER EL COMPROBANTE Y CLIENTE LEGAL DEL ULTIMO CONTRATO
        -- ********* --        
        
        SELECT 
            coalesce(max(ID_COMPROBANTE),P_ID_COMPROBANTE), 
            coalesce(max(ID_CLIENTE_LEGAL),P_ID_CLIENTE_LEGAL)
        INTO STRICT 
            L_ID_COMPROBANTE, 
            L_ID_CLIENTE_LEGAL
        FROM jose.MAT_CONTRATO m
        WHERE ID_CONTRATO IN (
        SELECT max(ID_CONTRATO)  FROM jose.MAT_CONTRATO mc 
        WHERE ID_ALUMNO = P_ID_PERSONA
        );
        -- ********* --
        -- (FIN) AGREGADO PARA OBTENER EL COMPROBANTE Y CLIENTE LEGAL DEL ULTIMO CONTRATO
        -- ********* --
        SELECT count(1) into STRICT l_contar 
        FROM PAYONLINE_VISA
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO =P_ID_DEPTO
        AND PROD = 'S';

        IF l_contar <> 0 then
         	pkg_sales_school_sp_venta_deposito_proceso(
	        		L_IDS_VENTAS, P_IMPORTES, P_IDS_ARTICULOS, l_id_user, P_ID_ENTIDAD, P_ID_DEPTO, l_id_anho, l_id_mes, 
	        		P_ID_PERSONA, L_ID_CLIENTE_LEGAL, L_ID_COMPROBANTE, 0, P_IMPORTE, l_id_tipotarjeta, P_PURCHASE_NUMBER,7,
	        		l_id_deposito_efectivo, l_id_deposito_tarjeta, l_id_new_venta, l_id_count_id_venta_old, 
	        		l_error, l_msgerror
	          );
	    END IF;

--        <<salida_dep>>
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;

     END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_payonline_sp_deposito_alumno_upn_visa ( P_IDS_VENTAS text, P_IMPORTES text, P_IDS_ARTICULOS text, P_ID_COMPROBANTE text, P_ID_CLIENTE_LEGAL bigint, P_ID_PERSONA bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_DINAMICA bigint,  P_IMPORTE bigint, P_PURCHASE_NUMBER text, P_BRAND text, P_IP text, P_ID OUT text, P_ERROR OUT bigint, P_MSGERROR out text) FROM PUBLIC;
