-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_payonline,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_payonline_sp_crear_deposito_alumnoiddni ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_MEDIOPAGO text, P_ID_PERSONA bigint, P_ID_CLIENTE bigint, P_VENTAS text, P_IMP_VENTAS text, P_TIPO text, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_ID_DINAMICA bigint, P_ID_TIPOTARJETA bigint, P_ID_CTABANCARIA bigint, P_OPERACION text, P_FECHA_OP timestamp(0), P_IMPORTE bigint, P_IMPORTE_TARJETA bigint, P_IMPORTE_TRANS bigint, P_IMPORTE_ME bigint, P_TIPOCAMBIO bigint, P_GLOSA text, P_NOMBRE_DEP text, P_DOCUMENTO_DEP text, P_ID_TIPOASIENTO text, P_ERROR out bigint, P_MSGERROR out text) AS $body$
DECLARE


        l_serie varchar(4);
        l_numero varchar(8);
        l_deposito bigint:=0;
        l_estado varchar(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher bigint :=0;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_correlativo bigint :=0;
        l_id_comprobante varchar(3):='00';  --deposito
        l_automatico varchar(2);
        l_contar bigint;
        l_fecha timestamp(0);
        --l_id_ctabancaria numeric;
        l_importedet decimal(10,2);
        l_importeasiento decimal(10,2);
        l_importeasiento_banco decimal(10,2);
        L_ID_VALE bigint;
        L_ID_TIPOTARJETA bigint;
        L_ID_CTABANCARIA bigint;
        L_GLOSA varchar(100);
        l_id_ddetalle bigint;
        l_tipo_tarjeta varchar(30);
        l_cod_dinamica_ant varchar(5);
        L_ID_DOCUMENTO bigint;
        L_ID_TIPODEPOSITO bigint := 1; --DEPOSITOS ALUMNOS
        L_ID_DINAMICA bigint;

BEGIN
            select clock_timestamp() into STRICT l_fecha;

            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;

            SELECT ID_DOCUMENTO into STRICT L_ID_DOCUMENTO FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_COMPROBANTE = l_id_comprobante;

            --obtiene numero y serie y actualiza correlativo
            --pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
            CALL pkg_sales_sp_obtener_serie_numero_fijo(L_ID_DOCUMENTO,l_serie,l_correlativo);

            if l_correlativo=0 or coalesce(l_correlativo::text, '') = '' then
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||')';
            else
                --obtener voucher
                select count(1) into STRICT l_contar from CONTA_VOUCHER_CONFIG
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                and ID_ANHO=P_ID_ANHO
                and id_tipovoucher = 5;
          
                if l_contar>0  then
                    select AUTOMATICO into STRICT l_automatico from CONTA_VOUCHER_CONFIG  
                    where ID_ENTIDAD=P_ID_ENTIDAD 
                    and ID_DEPTO= P_ID_DEPTO
                    and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                    and ID_ANHO=P_ID_ANHO
                    and id_tipovoucher = 5; -- 5= tipo voucher ingresos   
                    if l_automatico='S' then
                        CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),P_ID_TIPOASIENTO,5,null, 'S', P_ID_PERSONA, l_id_voucher);
                    end if;
                end if;
            end if;

            if l_id_voucher=0 then
                l_error:=2; --no existe voucher
                l_msgerror:='Depósito: No existe voucher '||P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-'||P_ID_TIPOASIENTO||'-'||P_ID_ANHO||''||l_automatico;
--                 goto salida_depvisaalumiddni;
            end if;

     
        
        select lpad(l_correlativo::text,8,'0') into STRICT l_numero;

        SELECT COUNT(1) INTO STRICT l_contar FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        if l_contar>0 then
           SELECT NOMBRE INTO STRICT l_tipo_tarjeta FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;

        end if;

        
        SELECT (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Visa Oline:'||l_serie||'-'||(l_numero)::numeric ||'-'||l_tipo_tarjeta||'-Oper-'||P_OPERACION||'-'||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||(l_numero)::numeric ||'-'||TO_CHAR(clock_timestamp(),'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||(l_numero)::numeric ||'-'||TO_CHAR(clock_timestamp(),'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                ELSE 'DEPOSITO CLIENTES' END )
                 as GLOSA INTO STRICT L_GLOSA
;

        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_VALE,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_TIPODEPOSITO
        )VALUES ( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          l_id_voucher, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_VALE,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          l_serie,
          l_numero,
          l_fecha,
          P_IMPORTE_TARJETA, 
          P_IMPORTE_ME,
          P_TIPOCAMBIO,
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          l_estado,
          P_FECHA_OP,
          P_OPERACION,
          L_ID_TIPODEPOSITO
        ) RETURNING ID_DEPOSITO INTO l_deposito;

        
        if coalesce(length(P_VENTAS),0)>0 then
         
          CALL pkg_caja_sp_crear_deposito_detalle(l_deposito,P_VENTAS,P_IMP_VENTAS,P_TIPO,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
        end if;

        CALL pkg_caja_sp_generar_asiento_deposito(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,0,P_IMPORTE_TARJETA,0,L_GLOSA,l_error,l_msgerror);

 
--         <<salida_depvisaalumiddni>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_payonline_sp_crear_deposito_alumnoiddni ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_MEDIOPAGO text, P_ID_PERSONA bigint, P_ID_CLIENTE bigint, P_VENTAS text, P_IMP_VENTAS text, P_TIPO text, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_ID_DINAMICA bigint, P_ID_TIPOTARJETA bigint, P_ID_CTABANCARIA bigint, P_OPERACION text, P_FECHA_OP timestamp(0), P_IMPORTE bigint, P_IMPORTE_TARJETA bigint, P_IMPORTE_TRANS bigint, P_IMPORTE_ME bigint, P_TIPOCAMBIO bigint, P_GLOSA text, P_NOMBRE_DEP text, P_DOCUMENTO_DEP text, P_ID_TIPOASIENTO text, P_ERROR out bigint, P_MSGERROR out text) FROM PUBLIC;
