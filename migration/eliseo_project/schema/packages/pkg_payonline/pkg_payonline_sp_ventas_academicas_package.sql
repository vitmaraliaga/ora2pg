-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_payonline,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_payonline_sp_ventas_academicas ( P_ID_PERSONA bigint, P_OPERACION text, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint, P_IMPORTE bigint, P_IP text, P_ID_REGISTRO bigint, P_ID_CLIENTE bigint, P_ID_COMPROBANTE text, P_ID_TIPOVENTA bigint, P_VENTAS OUT text, P_VENTAS_IMP out text, P_ERROR OUT bigint, P_MSGERROR out text ) AS $body$
DECLARE

     l_error bigint:=0;
     l_msgerror varchar(200):='';

     L_USER bigint :=4; --MATRICULADOR ONLINE
     l_igv decimal(10,2);
     l_tc decimal(10,3);
     l_id_moneda bigint;
     l_id_moneda_tc bigint;
     l_id_documento bigint;

     l_serie varchar(5);
     l_correlativo bigint;
     l_numero varchar(15);
     l_glosa varchar(200):='';
     l_nom_dinamica varchar(150);
     l_id_tipo_transaccion bigint;
     l_id_credito bigint:=1;
     l_id_tipovoucher bigint := 1;
     l_id_persona_v bigint;
     l_id_voucher bigint;
     l_id_tipoventa bigint:=6;---configurar
     l_id_tipoasiento varchar(5);--:='RV';
     l_id_parent bigint;
     l_id_tiponota varchar(5);
     l_id_comprobante_ref varchar(5);
     l_serie_ref varchar(10);
     l_numero_ref varchar(20);

     l_id_venta bigint;

     l_id_tipoigv varchar(5):='30'; --VENTA INAFECTA
     l_gravado varchar(2);
     l_precio decimal(10,2);
     l_igv_item decimal(10,2);
     l_precio_base decimal(10,2);
     l_base decimal(10,2);
     l_importe decimal(10,2);
     l_contar integer;
     l_id_cliente_legal bigint;
     l_imp decimal(10,2);
     L_ID_DINAMICA bigint;
     L_ID_TRAMITE_DETALLE bigint;
     L_ID_TRAMITE bigint;
     L_PASO bigint;

    C_TRAMITE CURSOR FOR	
    SELECT 
        B.ID_TRAMITE_DETALLE,B.ID_TRAMITE,D.ID_DINAMICA,D.NOMBRE,B.IMPORTE,D.ID_TIPOIGV
    FROM TRAMITE_REGISTRO A JOIN TRAMITE_DETALLE B ON A.ID_REGISTRO = B.ID_REGISTRO
    JOIN TRAMITE_CATALOGO C ON B.ID_TRAMITE = C.ID_TRAMITE
    JOIN CONTA_DINAMICA D ON D.ID_DINAMICA = C.ID_DINAMICA
    WHERE A.ID_REGISTRO = P_ID_REGISTRO;

         
BEGIN
            l_id_tipoventa:=P_ID_TIPOVENTA;
            l_id_moneda:=7; --SOLES
            l_id_moneda_tc:=9;
            select FC_IGV(CURRENT_DATE ) into STRICT l_igv;

            select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into STRICT l_tc;

            if coalesce(l_tc::text, '') = '' then
                l_tc:=0;
            end if;

            if P_ID_COMPROBANTE='01' then
                l_id_cliente_legal:=P_ID_CLIENTE;
            else
                l_id_cliente_legal:=null;
            end if;

            SELECT ID_DOCUMENTO INTO STRICT l_id_documento FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO
            AND ID_COMPROBANTE= P_ID_COMPROBANTE;

            CALL pkg_sales_sp_obtener_serie_numero_fijo(l_id_documento,l_serie,l_correlativo);

            select lpad(l_correlativo::text,8,'0') into STRICT l_numero;

            --select nombre,ID_TIPOTRANSACCION,ID_TIPOIGV into l_nom_dinamica,l_id_tipo_transaccion,l_id_tipoigv from conta_dinamica where id_dinamica=P_ID_DINAMICA;
        
            l_glosa:='Venta Online Tramites Academicos';

            SELECT ID_TIPOASIENTO INTO STRICT l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = P_ID_ANHO AND ID_TIPOVOUCHER = l_id_tipovoucher;

            SELECT ID_PERSONA INTO STRICT l_id_persona_v FROM FIN_CONTADOR_DEPTO
            WHERE ID_ENTIDAD=P_ID_ENTIDAD  AND ID_DEPTO=P_ID_DEPTO;

            CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);

            l_id_parent:=null;
            l_id_tiponota:=null;
            l_id_comprobante_ref:=null;
            l_serie_ref:=null;
            l_numero_ref:=null;

            
      
            --crear venta
            INSERT INTO VENTA(ID_PERSONA,ID_CLIENTE,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_COMPROBANTE,ID_IGV,ID_MONEDA,ID_LEYENDA,TIPOCAMBIO,SERIE,NUMERO,FECHA,ESTADO,GLOSA,
                                ID_TIPOTRANSACCION,ID_CREDITO,ID_VOUCHER,ID_CLIENTE_LEGAL,ID_TIPOVENTA,ID_PARENT,ID_TIPONOTA,ID_COMPROBANTE_REF,SERIE_REF,NUMERO_REF)
            VALUES (L_USER,P_ID_PERSONA,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_COMPROBANTE,l_igv,l_id_moneda,'1000',l_tc,l_serie,l_numero,clock_timestamp(),1,l_glosa,
             l_id_tipo_transaccion,l_id_credito,l_id_voucher,l_id_cliente_legal,l_id_tipoventa, l_id_parent,l_id_tiponota,l_id_comprobante_ref,l_serie_ref,l_numero_ref)
            RETURNING ID_VENTA INTO l_id_venta;

            l_igv:=l_igv/100;

            OPEN C_TRAMITE;
                FETCH C_TRAMITE INTO L_ID_TRAMITE_DETALLE,L_ID_TRAMITE,L_ID_DINAMICA,l_nom_dinamica,l_imp,l_id_tipoigv;
                WHILE C_TRAMITE%FOUND LOOP

                    select count(1) into STRICT l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                    if l_contar>0 then
                        select GRAVADO into STRICT l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                    end if;

                    l_precio:=l_imp;
                    l_precio_base:=l_precio;
                    l_importe:=l_precio;
                    l_base:=l_importe;
                    l_igv_item:=0;
                    if l_gravado in ('G') then
                        l_precio_base:=round(l_precio/(1+l_igv),2);
                        l_base:=round(l_importe/(1+l_igv),2);
                        l_igv_item:=l_importe-l_base;
                    end if;

                    INSERT INTO VENTA_DETALLE(ID_VDETALLE,ID_VENTA,ID_TIPOIGV,DETALLE,CANTIDAD,PRECIO,PRECIO_BASE,BASE,IGV,DESCUENTO,DC,
                        IMPORTE,PRECIO_ME,PRECIO_BASE_ME,PRECIO_ALM_ME,BASE_ME,IGV_ME,DESCUENTO_ME,IMPORTE_ME,ID_DINAMICA
                    )VALUES (1,l_id_venta,l_id_tipoigv,l_nom_dinamica,1,l_precio,l_precio_base,l_base,l_igv_item,0,'D',l_imp,0,0,0,0,0,0,0,L_ID_DINAMICA);

                    --SELECT ID_TRAMITE_PASOS INTO L_ID_TRAMITE_PASOS  FROM TRAMITE_PASOS WHERE ID_TRAMITE = L_ID_TRAMITE AND ORDEN = 1; --ORRDE = 1 INDICA EL 1ER PASO
                    --ORDEN 1 DEL FLUJO INDICA EL FLUJO BASE Y EL ORRDEN = 1 INDICA EL 1ER PASO 
                    SELECT ID_PASO INTO STRICT L_PASO FROM TRAMITE_FLUJO A JOIN TRAMITE_FLUJO_PASO B ON A.ID_FLUJO = B.ID_FLUJO WHERE A.ID_TRAMITE = L_ID_TRAMITE AND A.ORDEN = 1 AND B.ORDEN = 1;

                    INSERT INTO TRAMITE_PROCESO(ID_TRAMITE_DETALLE,ID_PASO,ID_USER,FECHA) VALUES (L_ID_TRAMITE_DETALLE,L_PASO,P_ID_PERSONA,clock_timestamp());

                    UPDATE TRAMITE_DETALLE SET ID_PASO_ACTUAL = L_PASO WHERE ID_TRAMITE_DETALLE =  L_ID_TRAMITE_DETALLE;

                    FETCH C_TRAMITE INTO L_ID_TRAMITE_DETALLE,L_ID_TRAMITE,L_ID_DINAMICA,l_nom_dinamica,l_imp,l_id_tipoigv;
                END LOOP;
            CLOSE C_TRAMITE;

            CALL pkg_finances_students_sp_actualizar_total_venta(l_id_venta);

            --GENERAR ASIENTO
            CALL pkg_sales_sp_generar_asiento(l_id_venta,l_error,l_msgerror);
            IF l_error > 0 THEN
                l_msgerror := l_msgerror;
--                 GOTO salida_ventaalumniddni;
            END IF;

            IF P_ID_ENTIDAD = 7124 THEN
                CALL pkg_sales_sp_venta_electronica(l_id_venta,P_ID_COMPROBANTE);
              --l_error:=0;
            END IF;

--        <<salida_ventaalumniddni>>
       P_VENTAS:=l_id_venta::text;
       P_VENTAS_IMP:=P_IMPORTE::text;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_payonline_sp_ventas_academicas ( P_ID_PERSONA bigint, P_OPERACION text, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint, P_IMPORTE bigint, P_IP text, P_ID_REGISTRO bigint, P_ID_CLIENTE bigint, P_ID_COMPROBANTE text, P_ID_TIPOVENTA bigint, P_VENTAS OUT text, P_VENTAS_IMP out text, P_ERROR OUT bigint, P_MSGERROR out text ) FROM PUBLIC;
