-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_informes,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_informes_sp_procesar_documentos_via_old ( P_IDS_DOCUMENTOS text, P_ID_VOUCHER bigint, P_TIPO text, -- 'L', 'NL'
 P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

        L_CONTAR bigint :=0;

        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(15);
        L_ID_ICATEGORIA bigint;
        L_CATEGORIA_NOMBRE varchar(50);
       	L_SERIE varchar(50);
      	L_NUMERO varchar(50);

        L_ID_TIPOTRANSACCION bigint;
        L_ID_DINAMICA bigint;

        s_compras tablastring;
        s_gastos tablastring;

        s_id_compra bigint;
        s_id_igasto bigint;

        L_ES_DJ varchar(1);
        L_TIPO_DOC varchar(50);

        L_ERROR bigint :=0;
        L_MSGERROR varchar(300) :='';

         
BEGIN 
         -- L_ERROR := 1;
         -- L_MSGERROR := 'LLEGASTE CON EXITO';
         -- GOTO salida_rapida;
         
         -- Eliminar todo
         SELECT COUNT(1) INTO STRICT L_CONTAR FROM CONTA_VOUCHER WHERE ID_VOUCHER= P_ID_VOUCHER AND ACTIVO= 'S';
         IF L_CONTAR=0 THEN
            L_ERROR := 1;
            L_MSGERROR := 'Alto! El voucher con id '||P_ID_VOUCHER||' esta cerrado.';
--             GOTO salida_rapida;
         END IF;

         --lIMPIAR TODOS SUS ANTEDECENTES
         CALL pkg_informes_sp_delete_process_documentos(P_IDS_DOCUMENTOS,P_TIPO,L_ERROR, L_MSGERROR);
         RAISE NOTICE 'lIMPIAR TODOS SUS ANTEDECENTES';
         IF P_TIPO='L' THEN

            select eliseo.FC_SPLIT(P_IDS_DOCUMENTOS,'|') into STRICT s_compras;

            -- VALIDACIÓN DE DOCUMENTOS
            FOR i IN s_compras.FIRST .. s_compras.LAST
            loop
                select cast(s_compras(i) as bigint) into STRICT s_id_compra;

                select ID_ICATEGORIA, ID_ENTIDAD, ID_DEPTO, SERIE, NUMERO
                INTO STRICT L_ID_ICATEGORIA, L_ID_ENTIDAD, L_ID_DEPTO, L_SERIE, L_NUMERO 
                from ELISEO.COMPRA WHERE ID_COMPRA=s_id_compra;

                IF coalesce(L_ID_ICATEGORIA::text, '') = '' THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'La compra con id '||s_id_compra||' no tiene una categoría.';
--                     GOTO salida_rapida;
                END IF;

                select NOMBRE INTO STRICT L_CATEGORIA_NOMBRE FROM ELISEO.INFORME_CATEGORIA WHERE ID_ICATEGORIA=L_ID_ICATEGORIA;

                SELECT COUNT(1) INTO STRICT L_CONTAR 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC='LEGAL'
                    AND ESTADO='1';

                IF L_CONTAR=0 THEN 
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una configuración de dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'. Para documentos legales: Compra ['||L_SERIE || '-'||L_NUMERO||']';
--                     GOTO salida_rapida;
                 END IF;

                SELECT ID_TIPOTRANSACCION, ID_DINAMICA INTO STRICT L_ID_TIPOTRANSACCION, L_ID_DINAMICA 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC='LEGAL'
                    AND ESTADO='1';

                IF coalesce(L_ID_TIPOTRANSACCION::text, '') = '' OR coalesce(L_ID_DINAMICA::text, '') = '' THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'Alto! La configuración de la categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una transacción o dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'.';
--                     GOTO salida_rapida;
                END IF;

                 
                RAISE NOTICE 'L_ID_TIPOTRANSACCION = %', L_ID_TIPOTRANSACCION;
                RAISE NOTICE 'L_ID_DINAMICA = %', L_ID_DINAMICA;
                RAISE NOTICE 'P_ID_VOUCHER = %', P_ID_VOUCHER;
                RAISE NOTICE 'L_ID_ENTIDAD = %', L_ID_ENTIDAD;
                RAISE NOTICE 'L_ID_DEPTO = %', L_ID_DEPTO;
                RAISE NOTICE 'L_SERIE = %', L_SERIE;
                RAISE NOTICE 'L_NUMERO = %', L_NUMERO;
                RAISE NOTICE 's_id_compra = %', s_id_compra;

                UPDATE ELISEO.COMPRA 
                SET ID_TIPOTRANSACCION =L_ID_TIPOTRANSACCION,
                ID_DINAMICA =L_ID_DINAMICA,
                ID_VOUCHER=P_ID_VOUCHER
                WHERE ID_COMPRA =s_id_compra;

                RAISE NOTICE 'L_ID_TIPOTRANSACCION = %', L_ID_TIPOTRANSACCION;
                RAISE NOTICE 'L_ID_DINAMICA = %', L_ID_DINAMICA;
                RAISE NOTICE 'P_ID_VOUCHER = %', P_ID_VOUCHER;
                CALL pkg_informes_sp_compra_asiento(s_id_compra,L_ERROR, L_MSGERROR);
                CALL pkg_purchases_sp_compra_finalizar(s_id_compra,L_ERROR, L_MSGERROR);
            end loop;
         ELSE
            select eliseo.FC_SPLIT(P_IDS_DOCUMENTOS,'|') into STRICT s_gastos;

            FOR i IN s_gastos.FIRST .. s_gastos.LAST
            loop
                select cast(s_gastos(i) as bigint) into STRICT s_id_igasto;

               	select A.ID_ICATEGORIA, B.ID_ENTIDAD, B.ID_DEPTO, a.ES_DJ
               	INTO STRICT L_ID_ICATEGORIA, L_ID_ENTIDAD, L_ID_DEPTO, L_ES_DJ
              	from ELISEO.INFORME_GASTO A 
              		INNER JOIN INFORME B ON A.ID_INFORME = B.ID_INFORME
              	WHERE A.ID_IGASTO = s_id_igasto;

                IF coalesce(L_ID_ICATEGORIA::text, '') = '' THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'El gasto con id '||s_id_igasto||' no tiene una categoría.';
--                     GOTO salida_rapida;
                END IF;

             	select NOMBRE INTO STRICT L_CATEGORIA_NOMBRE 
             	FROM ELISEO.INFORME_CATEGORIA WHERE ID_ICATEGORIA=L_ID_ICATEGORIA;

                IF L_ES_DJ = '0' THEN
                    L_TIPO_DOC := 'NO_LEGAL';
                ELSE
                    L_TIPO_DOC := 'DJ';
                END IF;

                SELECT COUNT(1) INTO STRICT L_CONTAR 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC=L_TIPO_DOC
                    AND ESTADO='1';
                IF L_CONTAR=0 THEN
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una configuración de dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'. Para los gastos [' ||L_TIPO_DOC||']';
--                     GOTO salida_rapida;
                END IF;

                SELECT ID_TIPOTRANSACCION, ID_DINAMICA INTO STRICT L_ID_TIPOTRANSACCION, L_ID_DINAMICA 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC=L_TIPO_DOC
                    AND ESTADO='1';

                IF coalesce(L_ID_TIPOTRANSACCION::text, '') = '' OR coalesce(L_ID_DINAMICA::text, '') = '' THEN
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La configuración de la categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una transacción o dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'.';
--                     GOTO salida_rapida;
                END IF;

                UPDATE ELISEO.INFORME_GASTO 
                SET ID_TIPOTRANSACCION =L_ID_TIPOTRANSACCION,
                ID_DINAMICA =L_ID_DINAMICA,
                ID_VOUCHER=P_ID_VOUCHER
                WHERE ID_IGASTO =s_id_igasto;

                CALL pkg_informes_sp_compra_asiento_igasto(s_id_igasto,L_ERROR, L_MSGERROR);
                update INFORME_GASTO SET ESTADO='1'
                WHERE ID_IGASTO=s_id_igasto;

            end loop;
         END IF;

--          <<salida_rapida>>
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_informes_sp_procesar_documentos_via_old ( P_IDS_DOCUMENTOS text, P_ID_VOUCHER bigint, P_TIPO text, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
