-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases_orders,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_orders_sp_rr_x_hh_create (P_ID_PROVEEDOR bigint, P_ID_COMPROBANTE text, P_ES_ELECTRONICA text, P_SERIE text, P_NUMERO text, P_FECHA_DOC timestamp(0), P_ID_TIPOTRANSACCION bigint, P_ID_DINAMICA bigint, P_ID_MONEDA bigint, P_IMPORTE bigint, P_IMPORTE_RETENER bigint, -- P_IMPORTE_TOTAL_NETO numeric, 
 P_TIPOCAMBIO bigint, P_TIENE_SUSPENCION text, P_ID_VOUCHER_COMPRA bigint, P_ID_VOUCHER_PAGO bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_PERSONA bigint, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_PEDIDO bigint, P_ERROR OUT bigint, P_ID_COMPRA INOUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

        L_IMPORTE_ME bigint := 0;
        L_IMPORTE bigint := 0;
        L_IMPORTE_RENTA bigint := 0;

        --L_ID_TIPOTRANSACCION numeric:=25;
        L_FECHA_PROVISION timestamp(0) := clock_timestamp();
        L_ESTADO bigint := 0;
        L_BASE_OF_TABLE bigint := 0;

        L_ID_ASIENTO bigint := 0;

        -- Variables debito retencion RH---------------------------
        L_FONDO varchar(50):= '';L_DEPTO varchar(50):= '';L_CUENTA bigint:= 0;
        L_CUENTA_CTE varchar(50):= '';L_RESTRICCION varchar(50):= '';
        L_DESCRIPCION varchar(50):= '';
        ---------------------------------------
        L_VOUCHER_MES varchar(10);
        L_DOC_MES varchar(10);

        L_ERROR bigint:= 0;
        L_ID_COMPRA bigint:= 0;
        L_MSGERROR varchar(300):= '';
        L_CORRELATIVO bigint := 0;

          T_TEST varchar(300):= '';
        L_CONT bigint;
        L_ID_CASIENTO varchar(50);
        L_ID_DEPTO_RET varchar(8);
        L_ID_DINAMICA bigint;

BEGIN
        
        L_ERROR := 0;

        IF P_ID_DINAMICA = 0 OR coalesce(P_ID_DINAMICA::text, '') = '' THEN
            L_ID_DINAMICA := NULL;
        ELSE
            L_ID_DINAMICA := P_ID_DINAMICA;
        END IF;
        -- validación de la fecha
        SELECT TO_CHAR(FECHA, 'YYYYMM') INTO STRICT L_VOUCHER_MES FROM CONTA_VOUCHER
       	WHERE ID_VOUCHER = P_ID_VOUCHER_COMPRA;

        SELECT TO_CHAR(COALESCE(P_FECHA_DOC, clock_timestamp()), 'YYYYMM') INTO STRICT L_DOC_MES;
       	
        IF L_DOC_MES > L_VOUCHER_MES then
            L_ERROR := 1;
            L_MSGERROR := 'Alto! No puede registrar un RH de un mes mayor a la del voucher.';
--             GOTO salida_rapida;
        END IF;

        -- L_ID_COMPRA := P_ID_COMPRA;
        IF L_ERROR = 0 THEN
        
            IF P_ID_MONEDA = 7 THEN  -- Soles
                L_IMPORTE := P_IMPORTE;
                L_IMPORTE_ME := NULL;
            ELSIF P_ID_MONEDA = 9 THEN  -- Dolares
                L_IMPORTE := (P_IMPORTE * P_TIPOCAMBIO);
                L_IMPORTE_ME := P_IMPORTE;
            END IF;

            L_IMPORTE_RENTA := P_IMPORTE_RETENER;
            L_BASE_OF_TABLE := L_IMPORTE;
            RAISE NOTICE 'Location 01';
            IF P_ID_COMPRA <> 0 THEN  -- UPDATE
                RAISE NOTICE 'Location 02';
                -- Eliminar de compra_asiento.
                DELETE FROM COMPRA_ASIENTO WHERE ID_COMPRA=P_ID_COMPRA AND EDITABLE='N';
                -- Eliminar de conta asiento.
                DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN=3 AND ID_ORIGEN=P_ID_COMPRA;
                -- Eliminar asientos de la retencion del RH
                DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN=14 AND ID_ORIGEN=P_ID_COMPRA;

                SELECT CORRELATIVO INTO STRICT L_CORRELATIVO FROM COMPRA WHERE ID_COMPRA=P_ID_COMPRA;

                UPDATE
                COMPRA
                SET ID_PROVEEDOR = P_ID_PROVEEDOR,
                ID_MONEDA = P_ID_MONEDA, ID_VOUCHER = P_ID_VOUCHER_COMPRA,
                TIPOCAMBIO = P_TIPOCAMBIO, FECHA_PROVISION=L_FECHA_PROVISION, FECHA_DOC=P_FECHA_DOC,
                SERIE=P_SERIE, NUMERO=P_NUMERO, IMPORTE=L_IMPORTE, IMPORTE_ME=L_IMPORTE_ME,
                ESTADO=L_ESTADO, IMPORTE_RENTA=L_IMPORTE_RENTA, TIENE_SUSPENCION=P_TIENE_SUSPENCION, BASE=L_BASE_OF_TABLE,
                ID_DINAMICA=L_ID_DINAMICA
                WHERE ID_COMPRA=P_ID_COMPRA;

                L_ID_COMPRA := P_ID_COMPRA;

            ELSE 
            
            RAISE NOTICE 'Location 03';
                --SELECT NVL(MAX(ID_COMPRA),0)+1 INTO L_ID_COMPRA FROM COMPRA;
                SELECT coalesce(MAX(CORRELATIVO),0)+1 INTO STRICT L_CORRELATIVO
                FROM COMPRA WHERE
                ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO
                AND ID_VOUCHER = P_ID_VOUCHER_COMPRA
                AND ID_COMPROBANTE = '02';

                INSERT INTO COMPRA(
                    --ID_COMPRA, 
                    ID_ENTIDAD, ID_ANHO, ID_DEPTO, ID_MES, ID_PERSONA, ID_PROVEEDOR, ID_COMPROBANTE, ID_MONEDA, ID_VOUCHER, ID_TIPOTRANSACCION, ID_DINAMICA,
                    TIPOCAMBIO, FECHA_PROVISION, FECHA_DOC, SERIE, NUMERO, IMPORTE, IMPORTE_ME, 
                    ESTADO, ES_ELECTRONICA, IMPORTE_RENTA, TIENE_SUSPENCION, BASE, CORRELATIVO
                    )VALUES (
                    --L_ID_COMPRA, 
                    P_ID_ENTIDAD, P_ID_ANHO, P_ID_DEPTO, P_ID_MES, P_ID_PERSONA, P_ID_PROVEEDOR, P_ID_COMPROBANTE, P_ID_MONEDA, P_ID_VOUCHER_COMPRA, P_ID_TIPOTRANSACCION,L_ID_DINAMICA,
                    P_TIPOCAMBIO, L_FECHA_PROVISION, P_FECHA_DOC, P_SERIE, P_NUMERO, L_IMPORTE, L_IMPORTE_ME,
                    L_ESTADO, P_ES_ELECTRONICA, L_IMPORTE_RENTA, P_TIENE_SUSPENCION, 
                   L_BASE_OF_TABLE, L_CORRELATIVO) RETURNING ID_COMPRA INTO L_ID_COMPRA;

            END IF;

            UPDATE PEDIDO_COMPRA SET ID_COMPRA = L_ID_COMPRA WHERE ID_PEDIDO = P_ID_PEDIDO;

               --pkg_purchases_sp_compra_asiento_default_gene(L_ID_COMPRA,L_ERROR, L_MSGERROR);
               CALL pkg_purchases_sp_compra_asiento(L_ID_COMPRA,L_ERROR, L_MSGERROR);

                -- Generar asientos de la retencion de RH si tuviera
            IF P_IMPORTE_RETENER > 0 THEN
                
                IF P_ID_ENTIDAD = 7124 THEN
                    --AUMENTADO POR MARLO
                    IF P_ID_DEPTO = '1' THEN
                        L_ID_DEPTO_RET := '11010101';
                    ELSIF P_ID_DEPTO = '5' THEN
                        L_ID_DEPTO_RET := '51010101';
                    END IF;
                    --SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO L_ID_CASIENTO FROM COMPRA_ASIENTO;
                    INSERT INTO COMPRA_ASIENTO(
                    --ID_CASIENTO,
                    ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE,
                    ID_FONDO, ID_DEPTO, IMPORTE,
                    DESCRIPCION,EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, IMPORTE_ME, FECHA_ACTUALIZACION, AGRUPA,NRO_ASIENTO
                    ) VALUES (
                    --L_ID_CASIENTO,
                    L_ID_COMPRA, '2130341', '0A', '',
                    10, L_ID_DEPTO_RET, P_IMPORTE_RETENER*-1,
                    P_ID_ENTIDAD || '-' || L_CORRELATIVO || ' ' || P_SERIE || '-' || P_NUMERO || ' | ' || 'Retención honorario',
                    'S', NULL, NULL, 'C', 0, statement_timestamp(), 'N',2
                    );
                    --Débito
                   --SELECT NVL(MAX(ID_ASIENTO),0)+1 INTO L_ID_ASIENTO FROM CONTA_ASIENTO;
                  
                   SELECT id_fondo, ID_DEPTO, ID_CUENTAAASI, ID_CTACTE, id_restriccion, descripcion into STRICT
                   L_FONDO, L_DEPTO, L_CUENTA, L_CUENTA_CTE, L_RESTRICCION, L_DESCRIPCION from COMPRA_ASIENTO
                   where id_compra = L_ID_COMPRA 
                   and id_cuentaaasi = '2130341'; --se modifico para juliaca
                   --and id_cuentaaasi = 2130101; --era asi
                   RAISE NOTICE ' Location 5 : %', L_DEPTO;

                END IF;

            END IF;

                
        END IF;
--         <<salida_rapida>>
        P_ERROR := L_ERROR;
        P_ID_COMPRA := L_ID_COMPRA;
        P_MSGERROR := L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_orders_sp_rr_x_hh_create (P_ID_PROVEEDOR bigint, P_ID_COMPROBANTE text, P_ES_ELECTRONICA text, P_SERIE text, P_NUMERO text, P_FECHA_DOC timestamp(0), P_ID_TIPOTRANSACCION bigint, P_ID_DINAMICA bigint, P_ID_MONEDA bigint, P_IMPORTE bigint, P_IMPORTE_RETENER bigint,  P_TIPOCAMBIO bigint, P_TIENE_SUSPENCION text, P_ID_VOUCHER_COMPRA bigint, P_ID_VOUCHER_PAGO bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_PERSONA bigint, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_PEDIDO bigint, P_ERROR OUT bigint, P_ID_COMPRA INOUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
