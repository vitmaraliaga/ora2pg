-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases_orders,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_orders_sp_create_orders_purchases (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_AREAORIGEN bigint,P_ID_PBANCARIA bigint,P_MOTIVO text,P_COMENTARIO text, P_ID_MONEDA bigint,P_ID_PROVEEDOR bigint,P_ID_FUNCIONARIO bigint,P_ID_ACTIVIDAD bigint,P_TRAMITE_PAGO text,P_SERIE text,P_NUMERO text,P_IMPORTE bigint,P_IMPORTE_ME bigint,P_ID_VALE bigint,P_ID_TASK bigint,P_ID_TIPOPEDIDO bigint, P_ID_TIPOACTIVIDADECONOMICA bigint,P_ID_MAPA_INICIATIVA bigint DEFAULT NULL, L_ID_PEDIDO OUT bigint,L_ID_PCOMPRA OUT bigint,L_ERROR OUT bigint,L_MSGERROR OUT text) AS $body$
DECLARE


            L_ID_TIPOPEDIDO bigint := 7;
            L_NUMERO varchar(10);
            L_ESTADO varchar(1) := '0';
            L_ID_PROCESO bigint := 6;
            L_DETALLE varchar(50) := 'Proceso de Compras';
            L_ID_REGISTRO bigint;
            L_CODIGO varchar(1) := '7';
            L_ID_MAPA_INICIATIVA bigint;
            L_IP varchar(50);
            L_ID_PBANCARIA bigint;
            L_ID_FUNCIONARIO bigint;
            L_ID_VALE bigint;
            L_CANT bigint;
            L_ID_PROVEEDOR bigint;

        
BEGIN
            SELECT LPAD(coalesce(MAX((NUMERO)::numeric ),0)+1,8,0) INTO STRICT L_NUMERO
            FROM ELISEO.PEDIDO_REGISTRO WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_TIPOPEDIDO BETWEEN 7 AND 11;

            IF P_ID_PBANCARIA = 0 THEN
                L_ID_PBANCARIA := NULL;
            ELSE
                L_ID_PBANCARIA := P_ID_PBANCARIA;
            END IF;

            IF P_ID_FUNCIONARIO = 0 THEN
                L_ID_FUNCIONARIO := NULL;
            ELSE
                L_ID_FUNCIONARIO := P_ID_FUNCIONARIO;
            END IF;

            IF P_ID_MAPA_INICIATIVA = 0 THEN
                L_ID_MAPA_INICIATIVA := NULL;
            ELSE
                L_ID_MAPA_INICIATIVA := P_ID_MAPA_INICIATIVA;
            END IF;

            IF P_ID_PROVEEDOR = 0 THEN
                L_ID_PROVEEDOR := NULL;
            ELSE
                L_ID_PROVEEDOR := P_ID_PROVEEDOR;
            END IF;

            IF P_ID_TIPOPEDIDO = 12 THEN  --SOLO EDITAR SI RR x HH
                IF (P_ID_TIPOACTIVIDADECONOMICA IS NOT NULL AND P_ID_TIPOACTIVIDADECONOMICA::text <> '')  OR P_ID_TIPOACTIVIDADECONOMICA <> 0 THEN 
                    SELECT COUNT(1) INTO STRICT L_CANT FROM MOISES.PERSONA_NATURAL WHERE ID_PERSONA = L_ID_PROVEEDOR;
                    IF L_CANT > 0 THEN
                        UPDATE MOISES.PERSONA_NATURAL SET ID_TIPOACTIVIDADECONOMICA = P_ID_TIPOACTIVIDADECONOMICA WHERE ID_PERSONA = L_ID_PROVEEDOR;
                    END IF;
                    SELECT COUNT(1) INTO STRICT L_CANT FROM MOISES.PERSONA_JURIDICA WHERE ID_PERSONA = L_ID_PROVEEDOR;
                    IF L_CANT > 0 THEN
                        UPDATE MOISES.PERSONA_JURIDICA SET ID_TIPOACTIVIDADECONOMICA = P_ID_TIPOACTIVIDADECONOMICA WHERE ID_PERSONA = L_ID_PROVEEDOR;
                    END IF;
                END IF;
            END IF;

            IF P_ID_VALE = 0 THEN
                L_ID_VALE := NULL;
            ELSE
                L_ID_VALE := P_ID_VALE;
            END IF;

            INSERT INTO PEDIDO_REGISTRO(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_TIPOPEDIDO,ID_AREAORIGEN,ID_PBANCARIA,NUMERO,FECHA,FECHA_PEDIDO,MOTIVO,COMENTARIO,ESTADO,ID_TASK,ID_MAPA_INICIATIVA) 
            VALUES (P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_TIPOPEDIDO,P_ID_AREAORIGEN,L_ID_PBANCARIA,L_NUMERO,clock_timestamp(),clock_timestamp(),P_MOTIVO,P_COMENTARIO,L_ESTADO,P_ID_TASK,L_ID_MAPA_INICIATIVA) RETURNING ID_PEDIDO INTO L_ID_PEDIDO;

            SELECT MAX(ID_PCOMPRA)+1 INTO STRICT L_ID_PCOMPRA FROM PEDIDO_COMPRA;

            INSERT INTO PEDIDO_COMPRA(ID_PCOMPRA,ID_PEDIDO,ID_MONEDA,ID_PROVEEDOR,ID_PERSONA,ID_ACTIVIDAD,TRAMITE_PAGO,FECHA,SERIE,NUMERO,IMPORTE,IMPORTE_ME,ESTADO,ID_VALE) 
            VALUES (L_ID_PCOMPRA,L_ID_PEDIDO,P_ID_MONEDA,L_ID_PROVEEDOR,L_ID_FUNCIONARIO,P_ID_ACTIVIDAD,P_TRAMITE_PAGO,clock_timestamp(),P_SERIE,P_NUMERO,P_IMPORTE,P_IMPORTE_ME,L_ESTADO,L_ID_VALE) RETURNING ID_PCOMPRA INTO L_ID_PCOMPRA;
            L_MSGERROR := 'OK';
            L_ERROR :=0;
        EXCEPTION
            WHEN OTHERS THEN
            L_MSGERROR := 'ERROR AL REGISTRAR EL COMPROBANTE'||SQLSTATE||' -ERROR- '||SQLERRM;
            L_ERROR :=1;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_orders_sp_create_orders_purchases (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_AREAORIGEN bigint,P_ID_PBANCARIA bigint,P_MOTIVO text,P_COMENTARIO text, P_ID_MONEDA bigint,P_ID_PROVEEDOR bigint,P_ID_FUNCIONARIO bigint,P_ID_ACTIVIDAD bigint,P_TRAMITE_PAGO text,P_SERIE text,P_NUMERO text,P_IMPORTE bigint,P_IMPORTE_ME bigint,P_ID_VALE bigint,P_ID_TASK bigint,P_ID_TIPOPEDIDO bigint, P_ID_TIPOACTIVIDADECONOMICA bigint,P_ID_MAPA_INICIATIVA bigint DEFAULT NULL, L_ID_PEDIDO OUT bigint,L_ID_PCOMPRA OUT bigint,L_ERROR OUT bigint,L_MSGERROR OUT text) FROM PUBLIC;
