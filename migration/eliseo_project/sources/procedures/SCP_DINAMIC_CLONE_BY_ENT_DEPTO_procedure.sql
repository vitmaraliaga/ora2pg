-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

PROCEDURE        scp_dinamic_clone_by_ent_depto(
    v_ID_ENTIDAD_FROM         IN NUMBER,
    v_ID_DEPTO_FROM         IN VARCHAR2,
    v_ID_YEAR_FROM    IN NUMBER,
    v_ID_ENTIDAD_TO         IN NUMBER,
    v_ID_DEPTO_TO         IN VARCHAR2,
    v_ID_YEAR_TO    IN NUMBER,
    v_ERROR OUT NUMBER,
    v_MSGERROR OUT VARCHAR2
)
AS
    L_ERROR NUMBER :=0;
    L_MSGERROR VARCHAR2(100) :='';
    l_contar number := 0;

	TYPE DinamicaAsientoCurTyp  IS REF CURSOR;
	v_d_a_cursor    DinamicaAsientoCurTyp;
	d_a_record      CONTA_DINAMICA_ASIENTO%ROWTYPE;
	v_d_a_stmt_str      VARCHAR2(200);

	TYPE DinamicaCtaCteCurTyp  IS REF CURSOR;
	v_d_cc_cursor    DinamicaCtaCteCurTyp;
	d_cc_record      CONTA_DINAMICA_CTA_CTE%ROWTYPE;
	v_d_cc_stmt_str      VARCHAR2(200);

	TYPE DinamicaDeptoCurTyp  IS REF CURSOR;
	v_d_d_cursor    DinamicaDeptoCurTyp;
	d_d_record      CONTA_DINAMICA_DEPTO%ROWTYPE;
	v_d_d_stmt_str      VARCHAR2(200);

   l_id_dinamica number;
   l_id_asiento number;

   l_id_ctabancaria  number;
   l_id_almacen number;


    cursor c1 is
	SELECT * FROM conta_dinamica
	WHERE ID_ENTIDAD = v_ID_ENTIDAD_FROM
	AND ID_DEPTO = v_ID_DEPTO_FROM
	AND ID_ANHO = v_ID_YEAR_FROM
    AND ID_DINAMICA NOT IN (13235,13236)
   -- AND IP = '10.171.11.179'
  order by ID_DINAMICA;

BEGIN


    IF L_ERROR = 0 THEN 

        SELECT max(id_dinamica) INTO l_id_dinamica FROM conta_dinamica;
        -- SELECT max(id_asiento) INTO l_id_asiento FROM CONTA_DINAMICA_ASIENTO;
        FOR rec_1 in c1
        LOOP

                SELECT max(ID_CTABANCARIA) into l_id_ctabancaria FROM CAJA_CUENTA_BANCARIA
                WHERE ID_ENTIDAD = v_ID_ENTIDAD_TO
                AND ID_DEPTO = v_ID_DEPTO_TO;

                SELECT max(ID_ALMACEN) into l_id_almacen FROM INVENTARIO_ALMACEN
                WHERE ID_ENTIDAD = v_ID_ENTIDAD_TO
                AND ID_DEPTO = v_ID_DEPTO_TO;

                l_id_dinamica := l_id_dinamica +1;
                INSERT INTO conta_dinamica(ID_DINAMICA, ID_ENTIDAD, ID_DEPTO, ID_ANHO, ID_MODULO, ID_TIPOIGV, --6
                ID_TIPOTRANSACCION, ID_PERSONA, ID_PARENT, ID_CTABANCARIA, ID_ALMACEN, NOMBRE, IMPORTE, 
                FECHA, COMENTARIO, IP, ACTIVO)
                VALUES(l_id_dinamica, v_ID_ENTIDAD_TO, v_ID_DEPTO_TO, v_ID_YEAR_TO, rec_1.ID_MODULO, rec_1.ID_TIPOIGV,
                rec_1.ID_TIPOTRANSACCION, rec_1.ID_PERSONA, rec_1.ID_PARENT, l_id_ctabancaria, l_id_almacen, rec_1.NOMBRE, rec_1.IMPORTE, 
                rec_1.FECHA, rec_1.COMENTARIO, rec_1.IP, rec_1.ACTIVO);

                v_d_a_stmt_str := 'SELECT * FROM CONTA_DINAMICA_ASIENTO WHERE id_dinamica = :1 order by ID_ASIENTO';
                OPEN v_d_a_cursor FOR v_d_a_stmt_str USING rec_1.ID_DINAMICA;
                    LOOP
                    FETCH v_d_a_cursor INTO d_a_record;
                  EXIT WHEN v_d_a_cursor%NOTFOUND;
                    --l_id_asiento := l_id_asiento +1;
                    INSERT INTO CONTA_DINAMICA_ASIENTO(
                                    -- ID_ASIENTO,
                                    ID_PARENT, ID_DINAMICA, ID_TIPOPLAN, 
                                    ID_RESTRICCION, ID_CUENTAAASI, ID_CUENTAEMPRESARIAL,
                                    NOMBRE, DC, PORCENTAJE, NRO_ASIENTO,
                                    ACTIVO, DESTINO, ID_INDICADOR,
                                    UNICO, UNICO_CTACTE, AGRUPA, ID_FONDO, PRIMARIO)
                                VALUES(
                                
                                    -- l_id_asiento, 
                                    d_a_record.ID_PARENT, l_id_dinamica, d_a_record.ID_TIPOPLAN, 
                                    d_a_record.ID_RESTRICCION, d_a_record.ID_CUENTAAASI, d_a_record.ID_CUENTAEMPRESARIAL,
                                    d_a_record.NOMBRE, d_a_record.DC, d_a_record.PORCENTAJE, d_a_record.NRO_ASIENTO,
                                    d_a_record.ACTIVO, d_a_record.DESTINO, d_a_record.ID_INDICADOR,
                                    d_a_record.UNICO, d_a_record.UNICO_CTACTE, d_a_record.AGRUPA, d_a_record.ID_FONDO,d_a_record.PRIMARIO)
                                returning ID_ASIENTO INTO l_id_asiento;

                        v_d_cc_stmt_str := 'SELECT * FROM CONTA_DINAMICA_CTA_CTE WHERE id_asiento = :j order by ID_ASIENTO';

                        OPEN v_d_cc_cursor FOR v_d_cc_stmt_str USING d_a_record.ID_ASIENTO;
                            LOOP
                            FETCH v_d_cc_cursor INTO d_cc_record;
                            EXIT WHEN v_d_cc_cursor%NOTFOUND;
                            INSERT INTO CONTA_DINAMICA_CTA_CTE(ID_ASIENTO, ID_ENTIDAD, ID_CTACTE)
                                        VALUES(l_id_asiento, v_ID_ENTIDAD_TO, d_cc_record.ID_CTACTE);
                        END LOOP;
                        CLOSE v_d_cc_cursor;	 
                        v_d_d_stmt_str := 'SELECT * FROM CONTA_DINAMICA_DEPTO WHERE id_asiento = :1';
                        OPEN v_d_d_cursor FOR v_d_d_stmt_str USING d_a_record.ID_ASIENTO;
                            LOOP
                            FETCH v_d_d_cursor INTO d_d_record;
                            EXIT WHEN v_d_d_cursor%NOTFOUND;
                            
                            DBMS_OUTPUT.PUT_LINE('l_id_asiento : '||l_id_asiento);
                            DBMS_OUTPUT.PUT_LINE('v_ID_ENTIDAD_TO : '||v_ID_ENTIDAD_TO);
                            DBMS_OUTPUT.PUT_LINE('d_d_record.ID_DEPTO : '||d_d_record.ID_DEPTO);

                            INSERT INTO CONTA_DINAMICA_DEPTO(ID_ASIENTO, ID_ENTIDAD, ID_DEPTO)
                                        VALUES(l_id_asiento, v_ID_ENTIDAD_TO, d_d_record.ID_DEPTO);
                        END LOOP;
                        CLOSE v_d_d_cursor;	

                END LOOP;
                CLOSE v_d_a_cursor;
            END LOOP;
        END IF;

<<salida_rapida>>

        V_ERROR := L_ERROR;
        V_MSGERROR := L_MSGERROR;

END;

