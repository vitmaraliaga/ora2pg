-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_FINANCES_STUDENTS AS 
    
   --procesos para generar ingresos 
  PROCEDURE SP_INGRESOS_ALUM_CONTRATO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_TIPO_ALUMNO OUT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_MAT_CUOTA_RESIDENCIA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_MAT_BECA18(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_REGULAR(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_REGULAR_PLAN_PKG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_REGULAR_FIJO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_CANTIDAD_CURSO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_COMUNIDAD_ING(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_EXTRAP_DIRIG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_EXTRAP_DIRIG_PLAN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_BECA18(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_ENSE_CURSO_APLAZADO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_RESI_RESIDENCIA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_RESI_LAVANDERIA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_RESI_ALIMENTACION(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    
  --procesos para generar descuentos
  PROCEDURE SP_DESCTOS_ALUM_CONTRATO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_SOLICITUD_BECA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_VICE_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_VICE_ENSE(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_HIJO_TRAB(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_ESPECIAL(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_ESPECIAL_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_PRONTO_PAGO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_PRONTO_PAGO_JUL(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_PRONTO_PAGO_MIS(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_PRONTO_PAGO_COMU(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_PRONTO_PAGO_ING(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_HIJO_MISIONERO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_HIJO_MISIONERO_MAT(P_ID_ALUMNO_CONTRATO NUMBER,P_ID_CRITERIO_SEMESTRE NUMBER,P_IMPORTE OUT number,P_ID_PARENT OUT number,P_ACUMULADO OUT number);
    PROCEDURE SP_DESC_MAT_INGRESANTE(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_INST_EDUC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_CRED_PRAC_FIJO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_CRED_PRAC_BECA18(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_CRED_PRAC_CURSO_APZADO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_DESC_BACH_PREGRADO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    
  --GENERA CONTRATO DETALLE
  PROCEDURE SP_GENERAR_DETALLE_CONTRATO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  PROCEDURE SP_GENERAR_VENTA_MATRICULA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_ACTUALIZAR_TOTAL_VENTA(P_ID_VENTA NUMBER) ;
  PROCEDURE SP_ACTUALIZAR_TOTAL_VENTA_NC(P_ID_VENTA NUMBER);
  --PROCEDURE SP_GENERAR_ASIENTO_MATRICULA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ASIENTO_MATRICULA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ASIENTO_MATNOTAVAR(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  PROCEDURE SP_COPIAR_CRITERIO_SEMESTRE(P_ID_SEMESTRE_PROGRAMA_ORI NUMBER, P_ID_SEMESTRE_PROGRAMA_DES LONG, P_INDICADOR VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar) ;
  PROCEDURE SP_COPIAR_ASIENTO(P_ID_SEMESTRE_PROGRAMA_ORI NUMBER, P_ID_SEMESTRE_PROGRAMA_DES LONG,P_ERROR OUT number,P_MSGERROR out varchar);
  PROCEDURE SP_ELIMINAR_CRITERIO_SEMESTRE(P_ID_CRITERIO_SEMESTRE NUMBER, P_ERROR OUT number,P_MSGERROR out varchar) ;
  --NUEVOS STORES
  PROCEDURE SP_GENERAR_TRANSF_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_NRO_CUOTA NUMBER,P_TIPO_COBRO VARCHAR2,P_ID_TRANSFERENCIA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ASIENTO_TRANSF(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  PROCEDURE SP_GENERAR_VENTA_MAT_APLAZ(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  PROCEDURE SP_GENERAR_TRANSF_MAT_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_TRANSFERENCIA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ASIENTO_TRANSF_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ASIENTO_TRANSF_IDTM(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
   
   
  PROCEDURE SP_VENTA_MATRICULA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  PROCEDURE SP_VARIACION_REGULAR(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_VARIACION_REGULAR_PLAN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_DESC_VARIACION_REG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  --cobrar cuota
  PROCEDURE SP_COBRAR_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_CONINTERNADO VARCHAR2,P_NRO_CUOTA NUMBER,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_CONINTERNADO VARCHAR2,P_NRO_CUOTA NUMBER,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ASIENTO_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_TRANSF_CUOTA_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_NRO_CUOTA NUMBER,P_ID_TRANSFERENCIA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GEN_ASTO_TRANS_CUOTA_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  PROCEDURE SP_EXECUTE_CUOTA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR,P_ID_SEMESTRE NUMBER,P_ID_PERSONA NUMBER,P_ID_MODO_CONTRATO NUMBER, P_ID_NIVEL_ENSENANZA NUMBER, P_ID_MODALIDAD_ESTUDIO NUMBER,P_ID_PROGRAMAS VARCHAR2,P_ID_SEDE NUMBER,P_ALUMNOS VARCHAR2,PLAN_PAGO NUMBER,P_CUOTA NUMBER,P_ID_PLANPAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
  PROCEDURE SP_EXECUTE_CUOTA_NEW(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR,P_ID_PERSONA NUMBER,P_ID_MODO_CONTRATO NUMBER, P_ID_NIVEL_ENSENANZA NUMBER,P_SEMESTRE_PROGRAMA VARCHAR2,P_ALUMNOS VARCHAR2,P_CUOTA NUMBER,P_ID_PLANPAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
  
  PROCEDURE SP_GENERAR_LISTA_MATRICULA(P_ID_SEMESTRE NUMBER,P_ID_NIVEL_ENSENANZA NUMBER,P_ID_MODALIDAD_ESTUDIO NUMBER,P_ID_SEDE NUMBER,P_ID_MODO_CONTRATO NUMBER,P_ID_PROGRAMA_ESTUDIO VARCHAR2,P_ESTADO VARCHAR2,P_USER  NUMBER,P_CANTIDAD OUT NUMBER);
  PROCEDURE SP_RE_GENERAR_ASIENTO_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_NOTA_MAT(P_ID_CLIENTE NUMBER,P_ID_PERSONA NUMBER,P_ID_VENTA NUMBER,P_GLOSA VARCHAR2,P_IMPORTE NUMBER,P_ES_VIRTUAL VARCHAR2, P_ERROR OUT NUMBER, P_MSN OUT VARCHAR2,P_ID_NOTA OUT NUMBER);
  --PROCEDURE SP_EXECUTE_NOTA_MAT(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR,P_ID_SEMESTRE NUMBER,P_ID_PERSONA NUMBER,P_ID_MODO_CONTRATO NUMBER, P_ID_NIVEL_ENSENANZA NUMBER, P_ID_MODALIDAD_ESTUDIO NUMBER,P_ID_ANHO NUMBER, P_NRO_CUOTA NUMBER, P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
  PROCEDURE SP_EXECUTE_NOTA_MAT(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR,P_ID_SEMESTRE NUMBER,P_ID_PERSONA NUMBER,P_ID_MODO_CONTRATO NUMBER, P_ID_NIVEL_ENSENANZA NUMBER, P_ID_MODALIDAD_ESTUDIO NUMBER,P_ID_ANHO NUMBER,P_ID_PROGRAMAS VARCHAR2,P_ID_SEDE NUMBER,P_ALUMNOS VARCHAR2,PLAN_PAGO NUMBER,P_NRO_CUOTA NUMBER, P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_MAT_MANUAL(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER);
  PROCEDURE SP_GENERAR_ASIENTO_FALTANTE(P_ID_ENTIDAD NUMBER);
  
   PROCEDURE SP_LISTAR_DETALLE_CONTRATO(P_ID_ALUMNO_CONTRATO NUMBER,P_DC VARCHAR2,CURSOR OUT SYS_REFCURSOR );
   
    --residencia
   PROCEDURE SP_RESI_RESIDENCIA_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_RESI_RESIDENCIA_MEN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_RESI_LAVANDERIA_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_RESI_ALIMENTACION_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_RESI_LAVANDERIA_MEN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_RESI_ALIMENTACION_MEN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   
   PROCEDURE SP_COPIAR_PLANPAGO_SEMESTRE(P_ID_SEMESTRE_PROGRAMA_ORI NUMBER, P_ID_SEMESTRE_PROGRAMA_DES LONG, P_INDICADOR VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar);
   PROCEDURE SP_INS_CUOTA_ALUMNO(P_ID_ALUMNO_CONTRATO NUMBER,P_ID_USER NUMBER, P_ERROR OUT number,P_MSGERROR out varchar);
   FUNCTION  FC_OBETENER_IMP_CUOTA(P_ID_ALUMNO_CONTRATO NUMBER) RETURN NUMBER;
   PROCEDURE SP_COBRAR_CUOTA_X_CONTRATO(P_ID_ALUMNO_CONTRATO NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_PERSONA NUMBER,P_CUOTA NUMBER,P_ID_VENTA OUT NUMBER, P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
   PROCEDURE SP_GENERAR_CUOTA_ADELANTO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_CONINTERNADO VARCHAR2,P_NRO_CUOTA NUMBER,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_DESC_ALUMNO_CU(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);

    --costo por ciclo
   PROCEDURE SP_MAT_BECA18_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_ENSE_REGULAR_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_ENSE_REGULAR_PLAN_PKG_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_ENSE_EXTRA_DIRI_PLAN_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_ENSE_BECA18_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_ENSE_CURSO_APLAZADO_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_DESC_CRED_PRAC_BECA18_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_DESC_CRE_PRA_CUR_APZA_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
   PROCEDURE SP_VARIACION_REGULAR_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    
   --descuento cred asig variacion
  PROCEDURE SP_DESC_CRED_ASIG_REG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_DESC_CRED_ASIG_REG_PLAN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_DESC_CRED_ASIG_REG_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
END PKG_FINANCES_STUDENTS;


CREATE OR REPLACE PACKAGE BODY                      PKG_FINANCES_STUDENTS AS
  PROCEDURE SP_INGRESOS_ALUM_CONTRATO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_TIPO_ALUMNO OUT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
   
    l_id_semestre_programa number;
    
    l_id_criterio_semestre	number;

    l_importe	number(10,2);
    l_formula	varchar2(2000 byte);
    l_tipo_proceso	varchar2(2 byte);
    
    l_codigo varchar2(15 byte);
    l_dc varchar2(2 byte) ;
    l_items number:=0;
    l_items_padre number:=0;
    l_nombre varchar2(150 byte) ;
    l_tipo_valor varchar2(2 byte) ;
    
    l_id_criterio	number;
    l_numhijo	number;
    l_tipo_alumno varchar2(5);
    l_id_matricula_detalle number;
    l_id_modo_contrato number;
       
    CURSOR curING IS
    SELECT
      ID_CRITERIO_SEMESTRE,
      ID_CRITERIO,
      IMPORTE,
      FORMULA,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE,
      ORDEN
    FROM VW_MAT_CRITERIO_SEMESTRE 
    WHERE DC='D'
    AND ESTADO='1'
    AND ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND TIPO_ALUMNO=l_tipo_alumno
    AND TIENE_HIJO=0
    AND id_modo_contrato=l_id_modo_contrato
    UNION
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      A.IMPORTE,
      A.FORMULA,
      A.TIPO_PROCESO,
      A.TIPO_VALOR,
      C.DC,
      C.NOMBRE,
      C.ORDEN
    FROM MAT_CRITERIO_SEMESTRE A, MAT_CRITERIO C
    WHERE A.ID_CRITERIO=C.ID_CRITERIO
    AND C.DC='D'
    AND A.ESTADO='1'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND c.id_modo_contrato=l_id_modo_contrato
    AND C.ID_CRITERIO in(
      SELECT
        d.ID_PARENT
      FROM MAT_CRITERIO_SEMESTRE b, MAT_CRITERIO d
      WHERE b.ID_CRITERIO=d.ID_CRITERIO
      AND d.DC='D'
      AND b.ESTADO='1'
      AND b.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
      AND d.TIPO_ALUMNO=l_tipo_alumno
      AND d.id_modo_contrato=l_id_modo_contrato
      and d.ID_PARENT is not null
      group by d.ID_PARENT
    )
    ORDER BY DC DESC,ORDEN;
    
 
    l_total NUMBER(10,2); 
    l_total_hijo NUMBER(10,2); 
    
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_persona number;
    l_orden number;
    l_id_tipo_contrato number;
    --l_codigo varchar2(5);
     l_cod_nivel varchar2(5);
     l_creditos number(10,2):=0;
     l_creditosvar number(10,2):=0;
     l_id_modalidad_estudio number;
     l_cod_moda_es varchar2(10);
     l_comunidad varchar2(1):=null;
  BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_TIPO_CONTRATO ,id_matricula_detalle,creditosvar
    INTO l_id_semestre_programa,l_id_persona,l_id_tipo_contrato,l_id_matricula_detalle,l_creditosvar
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    --select codigo into l_codigo from  david.TIPO_CONTRATO 
    --where ID_TIPO_CONTRATO=l_id_tipo_contrato;
    
    select c.codigo,b.id_modalidad_estudio into l_cod_nivel,l_id_modalidad_estudio
    from  david.acad_semestre_programa a,david.acad_programa_estudio b,david.TIPO_NIVEL_ENSENANZA c
    where a.id_programa_estudio=b.id_programa_estudio
    and b.id_nivel_ensenanza=c.id_nivel_ensenanza
    and a.id_semestre_programa=l_id_semestre_programa;
    
    l_comunidad:=null;
    
    IF l_cod_nivel ='ID' THEN
    
      SELECT COUNT(1) into l_contar FROM DAVID.VW_ALUMNO_PLAN_PROGRAMA WHERE ID_PERSONA = l_id_persona AND ID_FACULTAD <>72;
    
      if l_contar=0 then
        l_comunidad:='S';
      end if;
      
      
    END IF;
    
    UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET COMUNIDAD=l_comunidad WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      

    
    select B.CODIGO,A.ID_MODO_CONTRATO INTO l_codigo,l_id_modo_contrato FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;
    
    
      
    
    l_tipo_alumno:='RE';
    
    --IF l_codigo in('R','V') and l_cod_nivel in('PRE') then
    IF l_codigo in('R','V') and l_cod_nivel in('PRE','ID') then ---11-03-2024
      SELECT COUNT(1) INTO l_contar FROM DAVID.ACAD_ALUMNO_BECA A, DAVID.TIPO_REQUISITO_BECA B
      WHERE A.ID_TIPO_REQUISITO_BECA=B.ID_TIPO_REQUISITO_BECA
      AND A.ID_PERSONA = l_id_persona
      AND B.CODIGO='B18'
      AND A.ID_TIPO_BECA_ESTATAL IS NOT NULL
      AND A.estado='1';
      
      IF l_contar>0 THEN
         l_tipo_alumno:='B18';
      END IF;
    end if;
    
    
    UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET tipo_alumno=l_tipo_alumno WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    /*
    SELECT 
      coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  
      INTO l_creditosvar
      FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
      WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
      and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    */
   select
            sum(credito_variados)   INTO l_creditosvar
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO );
    
    IF l_codigo = 'V' AND l_creditosvar=0 THEN
        l_error:=2;
        l_msgerror:='Alto: Alumno Matriculado';
        GOTO salida_ingreso;
    END IF;
    
 
    
    IF l_codigo = 'V' and l_tipo_alumno='B18'  THEN
        l_error:=2;
        l_msgerror:='Alto: Alumno B18 Matriculado';
        GOTO salida_ingreso;
    END IF;
    
    select codigo into  l_cod_moda_es from david.tipo_modalidad_estudio where id_modalidad_estudio=l_id_modalidad_estudio;
    
    IF l_codigo = 'V' and l_cod_moda_es='SP'  THEN
        l_error:=2;
        l_msgerror:='Alto: Alumno  Semipresencial';
        GOTO salida_ingreso;
    END IF;
    
      
    OPEN curING;
    FETCH curING INTO l_id_criterio_semestre,l_id_criterio,l_importe,l_formula,l_tipo_proceso,l_tipo_valor,l_dc,l_nombre,l_orden;
      
    WHILE curING%FOUND LOOP

      l_total:= 0;
      
      CASE 
        WHEN l_tipo_proceso = 'PF' OR l_tipo_proceso = 'P'  THEN
         
          EXECUTE IMMEDIATE 'BEGIN PKG_FINANCES_STUDENTS.'||l_formula||'(:P_ID_ALUMNO_CONTRATO,:P_ID_CRITERIO_SEMESTRE,:P_TIPO_ALUMNO,:l_error,:l_msgerror); end;'
         -- EXECUTE IMMEDIATE 'BEGIN PKG_FINANCES_STUDENTS.'||l_formula||'(:P_ID_ALUMNO_CONTRATO,:P_ID_CRITERIO_SEMESTRE,:P_TIPO_ALUMNO,:l_error,:l_msgerror); END;'
          --INTO l_error,l_msgerror
          USING P_ID_ALUMNO_CONTRATO,l_id_criterio_semestre,l_tipo_alumno,IN OUT l_error,IN OUT l_msgerror;
          
          
          if l_error=1 then
            --CLOSE curING;
            --goto salida_ingreso;
            Exit when l_error=1;
          end if;
          
        WHEN l_tipo_proceso = 'F' THEN
           l_total:= l_importe; 
           SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
           IF l_total>0 THEN
             insert into MAT_CONCEPTO_ASIGN_ALUM(
                ID_ALUMNO_CONTRATO,
                ID_CRITERIO_SEMESTRE,
                ITEM,
                ID_SEMESTRE_PROGRAMA,
                DESCRIPCION,
                DC,
                TOTAL,
                TIPO_VALOR
                )VALUES(
                P_ID_ALUMNO_CONTRATO,
                l_id_criterio_semestre,
                l_items,
                l_id_semestre_programa,
                l_nombre,
                l_dc,
                l_total,
                l_tipo_valor
                );
          END IF;
      ELSE
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

         insert into MAT_CONCEPTO_ASIGN_ALUM(
            ID_ALUMNO_CONTRATO,
            ID_CRITERIO_SEMESTRE,
            ITEM,
            ID_SEMESTRE_PROGRAMA,
            DESCRIPCION,
            DC,
            TOTAL,
            TIPO_VALOR
            )VALUES(
            P_ID_ALUMNO_CONTRATO,
            l_id_criterio_semestre,
            l_items,
            l_id_semestre_programa,
            l_nombre,
            l_dc,
            0,
            l_tipo_valor
            );
          
      END CASE;
      
      FETCH curING INTO l_id_criterio_semestre,l_id_criterio,l_importe,l_formula,l_tipo_proceso,l_tipo_valor,l_dc,l_nombre,l_orden;
                    
    END LOOP;
    CLOSE curING;
    
    
  --ASIGNACION DE VALORES A CRITERIO PADRE
  
    SELECT
    COUNT(*) INTO l_numhijo  
    FROM MAT_CRITERIO_SEMESTRE A, MAT_CRITERIO C, MAT_CONCEPTO_ASIGN_ALUM D
    WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
    AND A.ID_CRITERIO=C.ID_CRITERIO
    AND C.DC='D'
    AND A.ESTADO='1'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND D.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND C.id_modo_contrato=l_id_modo_contrato
    AND C.ID_PARENT IS NOT NULL;
      
    IF l_numhijo>0 THEN
       MERGE INTO MAT_CONCEPTO_ASIGN_ALUM S 
       USING(
          SELECT
          D.ID_ALUMNO_CONTRATO,A.ID_SEMESTRE_PROGRAMA,A.ID_CRITERIO_SEMESTRE,D.ITEM,E.TOTAL  
          FROM MAT_CRITERIO_SEMESTRE A, MAT_CRITERIO C, MAT_CONCEPTO_ASIGN_ALUM D,(
            SELECT
            Y.ID_PARENT, COALESCE(SUM(Z.TOTAL),0) as total
            FROM MAT_CRITERIO_SEMESTRE X, MAT_CRITERIO Y, MAT_CONCEPTO_ASIGN_ALUM Z
            WHERE X.ID_CRITERIO_SEMESTRE=Z.ID_CRITERIO_SEMESTRE
            AND X.ID_CRITERIO=Y.ID_CRITERIO
            AND Y.DC='D'
            AND X.ESTADO='1'
            AND X.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
            AND Z.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
            AND Y.ID_PARENT IS NOT NULL
            group by Y.ID_PARENT
          )E
          WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
          AND A.ID_CRITERIO=C.ID_CRITERIO
          AND E.ID_PARENT=A.ID_CRITERIO
          AND C.DC='D'
          AND A.ESTADO='1'
          AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND D.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
          AND C.ID_PARENT IS NULL
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND T.ID_SEMESTRE_PROGRAMA=S.ID_SEMESTRE_PROGRAMA AND T.ID_CRITERIO_SEMESTRE= S.ID_CRITERIO_SEMESTRE AND T.ITEM=S.ITEM)
       WHEN  MATCHED THEN UPDATE SET  
       S.TOTAL = T.TOTAL;
         
      END IF;
    
    
    <<salida_ingreso>>
    P_TIPO_ALUMNO:=l_tipo_alumno;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_INGRESOS_ALUM_CONTRATO;
  
  PROCEDURE SP_MAT_CUOTA_RESIDENCIA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_resid_tipo_habitacion number;
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_nom_crit varchar2(150 byte);
    l_id_plan_programa number;
  BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA, ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nom_crit
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
    SELECT COUNT(*) INTO l_contar  FROM VW_MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa AND ID_CRITERIO_PROC=l_id_criterio;
        dbms_output.put_line(l_contar);

    IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='No esta asociado a un a criterio de cobranza de resisdencia';
        goto cuota_residencia;
    END IF;
    
    select COUNT(*) INTO l_contar
    from DAVID.Acad_Reserva_Residencia arr
    inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
    inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque --and rh.id_habitacion=1
    --inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion and Rth.Estado='1'
    inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Resid_Tipo_Habitacion=Rh.Id_Resid_Tipo_Habitacion and Rth.Estado='1'
    WHERE rth.ID_CRITERIO IN(
      SELECT ID_CRITERIO  FROM VW_MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa AND ID_CRITERIO_PROC=l_id_criterio
    ) 
    AND arr.ID_SEMESTRE=l_id_semestre
    AND arr.ID_PERSONA=l_id_persona
    and arr.ID_PLAN_PROGRAMA=l_id_plan_programa
    AND arr.ESTADO='6';
        /*dbms_output.put_line(l_id_semestre_programa || 'SEMESTRE PROGAMA');
        dbms_output.put_line(l_id_criterio || 'l_id_criterio');
        dbms_output.put_line(l_id_persona || 'l_id_persona');
        dbms_output.put_line(l_id_plan_programa || 'l_id_plan_programa');

        dbms_output.put_line(l_contar);*/

    
 
    IF l_contar>0 THEN
      if l_contar=1 then
      
        /*select rth.nombre INTO l_nombre
        from DAVID.Acad_Reserva_Residencia arr
        inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
        inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque and rh.id_habitacion=1
        inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion 
        WHERE rth.ID_CRITERIO IN(
          SELECT ID_CRITERIO  FROM VW_MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa AND ID_CRITERIO_PROC=l_id_criterio
        ) 
        AND arr.ID_SEMESTRE=l_id_semestre
        AND arr.ID_PERSONA=l_id_persona
        AND arr.ESTADO='3';*/
    
              
         SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
         
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nom_crit,
          l_dc,
          l_importe,
          l_tipo_valor
          );
      else
        l_error:=1;
        l_msgerror:='Mas de una residencia Reservada';
      end if;
      
     END IF;
     
    <<cuota_residencia>>
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_MAT_CUOTA_RESIDENCIA;
  
  PROCEDURE SP_MAT_BECA18(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      nombre
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    if l_tipo_proceso = 'P' then
      SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
      
      SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a, DAVID.ACAD_PLAN b
      WHERE a.id_plan=b.id_plan
      and a.ID_SEMESTRE_PROGRAMA =l_id_semestre_programa
      AND a.ID_CRITERIO=l_id_criterio
      AND a.ID_PLAN= l_id_plan;
      
      IF l_contar>0 THEN
        if l_contar=1 then
          SELECT a.IMPORTE,b.NOMBRE INTO l_importe,l_nombre 
          FROM MAT_PLAN_COSTO a, DAVID.ACAD_PLAN b
          WHERE a.id_plan=b.id_plan
          and a.ID_SEMESTRE_PROGRAMA =l_id_semestre_programa
          AND a.ID_CRITERIO=l_id_criterio
          AND a.ID_PLAN= l_id_plan;
          
          if coalesce(l_importe,0)=0 then
            l_error:=1;
            l_msgerror:='Costo de matrícula igual a cero';
          else
           SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
           insert into MAT_CONCEPTO_ASIGN_ALUM(
            ID_ALUMNO_CONTRATO,
            ID_CRITERIO_SEMESTRE,
            ITEM,
            ID_SEMESTRE_PROGRAMA,
            DESCRIPCION,
            DC,
            TOTAL,
            TIPO_VALOR
            )VALUES(
            P_ID_ALUMNO_CONTRATO,
            P_ID_CRITERIO_SEMESTRE,
            l_items,
            l_id_semestre_programa,
            'Matrícula plan '||l_nombre,
            l_dc,
            l_importe,
            l_tipo_valor
            );
          end if;
        ELSE
          l_error:=1;
          l_msgerror:='Esta asignado más de un costo de matrícula';
        END IF;
      ELSE
          l_error:=1;
          l_msgerror:='No esta asignado costo de matrículasss: '||P_ID_CRITERIO_SEMESTRE;
      END IF;
    else
      if l_importe>0 then
       SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
      else
        l_error:=1;
        l_msgerror:='No esta asignado costo de matrícula';
      end if;
    end if;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_MAT_BECA18;
  
  PROCEDURE SP_ENSE_REGULAR(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_costo  number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_items  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_items=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo de enseñanza regular';
      goto salida_enseregular;
    end if;

    select count(*) into l_contar1 from TT_CURSOS_X_PLAN;
    
    if l_items<>l_contar1 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes';
      goto salida_enseregular;
    end if;
    
    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_enseregular;
    end if;
    
    SELECT  COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza';
      goto salida_enseregular;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_enseregular;
    end if;
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
     )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null
    );
        
    <<salida_enseregular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_REGULAR;
  
  PROCEDURE SP_ENSE_REGULAR_PLAN_PKG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_costo  number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_items=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo de enseñanza plan pkg';
      goto salida_enseregular;
    end if;

    select count(*) into l_contar1 from TT_CURSOS_X_PLAN;
    
    if l_items<>l_contar1 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes';
      goto salida_enseregular;
    end if;
    
    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_enseregular;
    end if;
    
    SELECT  COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza';
      goto salida_enseregular;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_enseregular;
    end if;
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
     )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_costo,
    l_tipo_valor,
    null
    );
        
    <<salida_enseregular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_REGULAR_PLAN_PKG;
  
  PROCEDURE SP_ENSE_REGULAR_FIJO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
    SELECT sum(CREDITO)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
    )
    VALUES( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_importe,
    l_creditos*l_importe,
    l_tipo_valor,
    null);
        
    <<salida_enseregular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_REGULAR_FIJO;
  PROCEDURE SP_ENSE_CANTIDAD_CURSO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_cantidad number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
    SELECT count(*)  INTO l_cantidad
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
    )
    VALUES( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_cantidad,
    l_importe,
    l_cantidad*l_importe,
    l_tipo_valor,
    null);

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_CANTIDAD_CURSO;
  
   PROCEDURE SP_ENSE_COMUNIDAD_ING(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_comunidad varchar2(1);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA,coalesce(COMUNIDAD,'N')
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa,l_comunidad
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    IF l_comunidad='S' THEN
    
      SELECT 
        ID_CRITERIO,
        IMPORTE,
        TIPO_PROCESO,
        TIPO_VALOR,
        DC,
        NOMBRE
        INTO
        l_id_criterio,
        l_importe,
        l_tipo_proceso,
        l_tipo_valor,
        l_dc,
        l_nombre
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
      
      
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
      
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      1,
      l_importe,
      l_importe,
      l_tipo_valor,
      null);
    END IF;
        
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_COMUNIDAD_ING;
  
   PROCEDURE SP_ENSE_EXTRAP_DIRIG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_criterio_proc number;
    l_importe_cred number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE,
      ID_CRITERIO_PROC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre,
      l_criterio_proc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
    SELECT  COUNT(*)   INTO l_contar
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and ID_CRITERIO=l_criterio_proc
    AND TIPO_PROCESO in('F','PF','P') 
    AND TIPO_VALOR='I';
    
     if l_contar<>1 then
      l_error:=1;
      l_msgerror:='No existe costo de enseñanza';
      goto salida_prog_dir;
     end if;
    
    if l_contar=1 then 
      SELECT 
        IMPORTE
        INTO
        l_importe_cred
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and ID_CRITERIO=l_criterio_proc
      AND TIPO_PROCESO in('F','PF','P')  
      AND TIPO_VALOR='I';
     end if; 
     
   
    
    SELECT sum(CREDITO)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
    )
    VALUES( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    (l_importe_cred*(1+(l_importe/100))),
    (l_creditos*(l_importe_cred*(1+(l_importe/100)))),
    l_tipo_valor,
    null);
        
    <<salida_prog_dir>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_EXTRAP_DIRIG;
  
  PROCEDURE SP_ENSE_EXTRAP_DIRIG_PLAN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_costo  number(10,2);
    l_id_criterio_proc NUMBER;
    l_id_criterio_semestre number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      id_criterio_proc
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_id_criterio_proc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
    SELECT 
    count(*)
    INTO
    l_contar
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    if l_contar<>1 then
      l_error:=1;
      l_msgerror:='No esta asignado a enseñanza regular';
      goto salida_ens_ed_plan;
    end if;
    
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio_proc;
    
    if l_items=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo de enseñanza extra_dirig_plan';
      goto salida_ens_ed_plan;
    end if;

    select count(*) into l_contar1 from TT_CURSOS_X_PLAN;
    
    if l_items<>l_contar1 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes';
      goto salida_ens_ed_plan;
    end if;
    
    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_ens_ed_plan;
    end if;
    
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio_proc
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_ens_ed_plan;
    end if;
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio_proc;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
     )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    (l_costo*(1+(l_importe/100))), --l_costo
    (l_creditos*(l_costo*(1+(l_importe/100)))),--l_creditos*l_costo,
    l_tipo_valor,
    null
    );
        
    <<salida_ens_ed_plan>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_EXTRAP_DIRIG_PLAN;
  
  PROCEDURE SP_ENSE_BECA18(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_costo	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, coalesce(sum(CREDITO),0)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    /*AND  ID_CARGA_CURSO IN(-----16-08-2021
      SELECT
           A.ID_CARGA_CURSO
        FROM DAVID.ACAD_CURSO_ALUMNO A, DAVID.VW_ACAD_CARGA_ACADEMICA B
        WHERE A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ORIGEN='O'
        AND A.ID_PERSONA=l_id_persona
        AND B.ID_SEMESTRE=l_id_semestre_act
        AND B.ID_CURSO_DETALLE NOT IN(  --LO QUE NO SE HA REPROBADO
          SELECT Y.CURSO_EQUIV
          FROM DAVID.ACAD_CURSO_ALUMNO X,
          DAVID.VW_CURSO_EQUIVALENTE Y
          WHERE X.ID_CURSO_DETALLE=Y.ID_CURSO_DETALLE
          AND X.ID_PERSONA=l_id_persona
          AND X.ID_TIPO_CONDICION=2
        )
    )*/
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo de enseñanza beca18';
      goto salida_ensebeca18;
    end if;

    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_ensebeca18;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE  a.id_plan=l_id_plan
    and A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_ensebeca18;
    end if;
    
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
   
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
    )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null
    );
           
    <<salida_ensebeca18>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_BECA18;
   
  
  PROCEDURE SP_ENSE_CURSO_APLAZADO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
    l_costo number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    SELECT 
      ID_CRITERIO_PROC,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND ID_CARGA_CURSO IN(
        SELECT
           A.ID_CARGA_CURSO
        FROM DAVID.ACAD_CURSO_ALUMNO A, DAVID.VW_ACAD_CARGA_ACADEMICA B
        WHERE A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ORIGEN='O'
        AND A.ID_PERSONA=l_id_persona
        AND B.ID_SEMESTRE=l_id_semestre_act
        AND B.ID_CURSO_DETALLE  IN(  --LO QUE NO SE HA REPROBADO
          SELECT Y.CURSO_EQUIV
          FROM DAVID.ACAD_CURSO_ALUMNO X,
          DAVID.VW_CURSO_EQUIVALENTE Y
          WHERE X.ID_CURSO_DETALLE=Y.ID_CURSO_DETALLE
          AND X.ID_PERSONA=l_id_persona
          AND X.ID_TIPO_CONDICION=2
        )
    )
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a, TT_CURSOS_X_PLAN b
    WHERE a.id_plan=b.id_plan
    AND A.ID_SEMESTRE_PROGRAMA=B.ID_SEMESTRE_PROGRAMA
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_items=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo de enseñanza curso aplazado';
      goto salida_curaplazado;
    end if;

    select count(*) into l_contar1 from TT_CURSOS_X_PLAN;
    
    if l_items<>l_contar1 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes';
      goto salida_curaplazado;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a, TT_CURSOS_X_PLAN b
    WHERE a.id_plan=b.id_plan
    AND A.ID_SEMESTRE_PROGRAMA=B.ID_SEMESTRE_PROGRAMA
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_curaplazado;
    end if;
    
     select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN,
      APLAZADO
    )values( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null,
    'S'
    );    
    <<salida_curaplazado>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_CURSO_APLAZADO;
  
  PROCEDURE SP_RESI_RESIDENCIA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_resid_tipo_habitacion number;
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_desde date;
    l_hasta date;
    l_dias decimal(10,2);
    l_id_plan_programa number;

  BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
     
    select COUNT(*) INTO l_contar
    from DAVID.Acad_Reserva_Residencia arr
    inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
    inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque --and rh.id_habitacion=1
    --inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion  and Rth.Estado='1'
    inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Resid_Tipo_Habitacion=Rh.Id_Resid_Tipo_Habitacion  and Rth.Estado='1'
    WHERE rth.ID_CRITERIO=l_id_criterio
    AND arr.ID_SEMESTRE=l_id_semestre
    AND arr.ID_PERSONA=l_id_persona
    and arr.ID_PLAN_PROGRAMA=l_id_plan_programa
    AND arr.ESTADO='6';
    
 
    IF l_contar>0 THEN
      if l_contar=1 then
      
        SELECT rth.nombre,rth.ID_RESID_TIPO_HABITACION ,arr.fecha_inicio,arr.fecha_fin
        INTO l_nombre,l_id_resid_tipo_habitacion,l_desde,l_hasta
        from DAVID.Acad_Reserva_Residencia arr
        inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
        inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque --and rh.id_habitacion=1
        --inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion  and Rth.Estado='1'
        inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Resid_Tipo_Habitacion=Rh.Id_Resid_Tipo_Habitacion  and Rth.Estado='1'
        WHERE rth.ID_CRITERIO=l_id_criterio
        AND arr.ID_SEMESTRE=l_id_semestre
        AND arr.ID_PERSONA=l_id_persona
        and arr.ID_PLAN_PROGRAMA=l_id_plan_programa
        AND arr.ESTADO='6';
    
  
        /*--lo va tomar de la tabla DAVID.Acad_Reserva_Residencia
        SELECT MIN(C.FECHA_INICIO) AS FECHA_INICIO,MAX(C.FECHA_FIN) AS FECHA_FIN into l_desde,l_hasta
        FROM VW_MAT_CURSOS_PLAN_ALUMNO A, DAVID.ACAD_CARGA_CURSO_DOCENTE B,DAVID.ACAD_MODULO_DETALLE C
        WHERE A.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ID_MODULO_DETALLE=C.ID_MODULO_DETALLE;
        */
        
        
        if l_desde is null or l_hasta is null then
          l_error:=1;
          l_msgerror:='Falta asignar fecha desde o hasta de permanencia en la residencia';
          goto resi_residencia;
        end if;
        
         if l_desde > l_hasta then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor a la fecha hasta de permanencia en la residencia';
          goto resi_residencia;
        end if;
    
        --select coalesce(sum((l_hasta -  l_desde)+1),0)+9 into  l_dias  from dual; 
        select coalesce(sum((l_hasta -  l_desde)+1),0) into  l_dias  from dual; 
        
         SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
         
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          CANTIDAD,
          UNITARIO,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre||'. '||TO_CHAR(l_desde,'DD/MM/YYYY')||'-'||TO_CHAR(l_hasta,'DD/MM/YYYY')||' '||TO_CHAR(l_dias)||' dias' ,
          l_dc,
          l_dias,
          l_importe,
          l_importe*l_dias,
          l_tipo_valor
          );
          
          update DAVID.ACAD_ALUMNO_CONTRATO SET 
          ID_RESID_TIPO_HABITACION= l_id_resid_tipo_habitacion ,
          DIAS_RESIDENCIA=l_dias
          WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO; 
          
      else
        l_error:=1;
        l_msgerror:='Mas de una residencia Reservada';
      end if;
      
     END IF;
     
    <<resi_residencia>>
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_RESI_RESIDENCIA;
  
  PROCEDURE SP_RESI_LAVANDERIA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_resid_tipo_habitacion number;
    l_id_criterio number;
    l_importe number(10,2);
    l_tipo_valor	varchar2(2 byte);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_id_semestre_programa NUMBER;
  begin
    SELECT coalesce(ID_RESID_TIPO_HABITACION,0),coalesce(DIAS_RESIDENCIA,0) ,ID_SEMESTRE_PROGRAMA
    INTO l_id_resid_tipo_habitacion,l_dias,l_id_semestre_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
        
    if l_id_resid_tipo_habitacion >0 then
    
      --VERIFICA SI TIENE SERVICIO DE LAVANDERIA
      SELECT COUNT(*) INTO l_contar FROM DAVID.RESIDENCIA_CARACTERISTICA A, DAVID.TIPO_CARACTERISTICA_RESIDENCIA B 
      WHERE A.ID_TIPO_CARACT_RESIDENCIA=B.ID_TIPO_CARACT_RESIDENCIA
      AND A.ID_RESID_TIPO_HABITACION=l_id_resid_tipo_habitacion  and a.estado='1'
      AND B.CODIGO='7';
      
      IF l_contar>0 THEN
    
        SELECT 
          ID_CRITERIO,
          IMPORTE,
          DC,
          NOMBRE,
          TIPO_VALOR
          INTO
          l_id_criterio,
          l_importe,
          l_dc,
          l_nombre,
          l_tipo_valor
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
           insert into MAT_CONCEPTO_ASIGN_ALUM(
              ID_ALUMNO_CONTRATO,
              ID_CRITERIO_SEMESTRE,
              ITEM,
              ID_SEMESTRE_PROGRAMA,
              DESCRIPCION,
              DC,
              CANTIDAD,
              UNITARIO,
              TOTAL,
              TIPO_VALOR
            )VALUES(
              P_ID_ALUMNO_CONTRATO,
              P_ID_CRITERIO_SEMESTRE,
              l_items,
              l_id_semestre_programa,
              l_nombre||' '||TO_CHAR(l_dias)||' dias',
              l_dc,
              l_dias,
              l_importe,
              l_importe*l_dias,
              l_tipo_valor
        );
      END IF;
    
    end if;
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_RESI_LAVANDERIA;
  
  PROCEDURE SP_RESI_ALIMENTACION(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_resid_tipo_habitacion number;
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_id_semestre_programa NUMBER;
  begin
    SELECT coalesce(ID_RESID_TIPO_HABITACION,0),coalesce(DIAS_RESIDENCIA,0),ID_SEMESTRE_PROGRAMA 
    INTO l_id_resid_tipo_habitacion,l_dias,l_id_semestre_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_id_resid_tipo_habitacion >0 then
      SELECT 
        ID_CRITERIO,
        IMPORTE,
        DC,
        NOMBRE,
        TIPO_VALOR
        INTO
        l_id_criterio,
        l_importe,
        l_dc,
        l_nombre,
        l_tipo_valor
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
      
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
         
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          CANTIDAD,
          UNITARIO,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre||' '||TO_CHAR(l_dias)||' dias',
          l_dc,
          l_dias,
          l_importe,
          l_importe*l_dias,
          l_tipo_valor
      );
    
    end if;
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_RESI_ALIMENTACION;
  
  ---descuentos
  PROCEDURE SP_DESCTOS_ALUM_CONTRATO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
   is
   l_id_semestre_programa number;
    
    l_id_criterio_semestre	number;

    l_importe	number(10,2);
    l_formula	varchar2(4000 byte);
    l_tipo_proceso	varchar2(2 byte);
    
    l_codigo varchar2(15 byte);
    l_dc varchar2(2 byte) ;
    l_items number:=0;
    l_items_padre number:=0;
    l_nombre varchar2(150 byte) ;
    l_tipo_valor varchar2(2 byte) ;
    
    l_id_criterio	number;
    l_numhijo	number;
    l_tipo_alumno varchar2(5);
    
    CURSOR curDES IS
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      A.IMPORTE,
      A.FORMULA,
      A.TIPO_PROCESO,
      A.TIPO_VALOR,
      A.DC,
      A.NOMBRE,
      A.ORDEN
    FROM VW_MAT_CRITERIO_SEMESTRE A
    WHERE  A.DC='C'
    AND A.ESTADO='1'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND A.TIPO_ALUMNO=P_TIPO_ALUMNO
    AND coalesce(A.ID_AFECTA,0) IN(
      SELECT
            X.ID_CRITERIO
            FROM VW_MAT_CRITERIO_SEMESTRE X, MAT_CONCEPTO_ASIGN_ALUM Z
            WHERE X.ID_CRITERIO_SEMESTRE=Z.ID_CRITERIO_SEMESTRE
            AND X.DC='D'
            AND X.ESTADO='1'
            AND X.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
            AND Z.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    )
    
    ORDER BY A.DC DESC,A.ORDEN;
    
 
    l_total NUMBER(10,2); 
    l_total_hijo NUMBER(10,2); 
    
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_persona number;
    l_orden number;
        
  BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     
    OPEN curDES;
    FETCH curDES INTO l_id_criterio_semestre,l_id_criterio,l_importe,l_formula,l_tipo_proceso,l_tipo_valor,l_dc,l_nombre,l_orden;
      
    WHILE curDES%FOUND LOOP

      l_total:= 0;
      
      CASE 
        WHEN l_tipo_proceso = 'PF' OR l_tipo_proceso = 'P'  THEN
         
          EXECUTE IMMEDIATE 'BEGIN PKG_FINANCES_STUDENTS.'||l_formula||'(:P_ID_ALUMNO_CONTRATO,:P_ID_CRITERIO_SEMESTRE,:P_TIPO_ALUMNO,:l_error,:l_msgerror);end;'
          --INTO l_error,l_msgerror
          USING P_ID_ALUMNO_CONTRATO,l_id_criterio_semestre,P_TIPO_ALUMNO,IN OUT l_error,IN OUT l_msgerror;
          

          
          if l_error=1 then
            --CLOSE curDES;
            --goto salida_descuento;
             Exit when l_error=1;
          end if;
        WHEN l_tipo_proceso = 'F' then
           SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
           insert into MAT_CONCEPTO_ASIGN_ALUM(
            ID_ALUMNO_CONTRATO,
            ID_CRITERIO_SEMESTRE,
            ITEM,
            ID_SEMESTRE_PROGRAMA,
            DESCRIPCION,
            DC,
            TOTAL,
            TIPO_VALOR
            )VALUES(
            P_ID_ALUMNO_CONTRATO,
            l_id_criterio_semestre,
            l_items,
            l_id_semestre_programa,
            l_nombre,
            l_dc,
            l_importe,
            l_tipo_valor
            );
        WHEN l_tipo_proceso IS NULL THEN
          
           SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
           insert into MAT_CONCEPTO_ASIGN_ALUM(
            ID_ALUMNO_CONTRATO,
            ID_CRITERIO_SEMESTRE,
            ITEM,
            ID_SEMESTRE_PROGRAMA,
            DESCRIPCION,
            DC,
            TOTAL,
            TIPO_VALOR
            )VALUES(
            P_ID_ALUMNO_CONTRATO,
            l_id_criterio_semestre,
            l_items,
            l_id_semestre_programa,
            l_nombre,
            l_dc,
            NULL,
            l_tipo_valor
            );
                
      END CASE;
      
      FETCH curDES INTO l_id_criterio_semestre,l_id_criterio,l_importe,l_formula,l_tipo_proceso,l_tipo_valor,l_dc,l_nombre,l_orden;
                    
    END LOOP;
    CLOSE curDES;

    <<salida_descuento>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
      
  END SP_DESCTOS_ALUM_CONTRATO;
  
  PROCEDURE SP_DESC_SOLICITUD_BECA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_tipo_valor VARCHAR2(2);
    l_nombre varchar2(150 byte);
    l_id_tipo_requisito_beca number;
    l_id_semestre NUMBER;
    l_id_plan_programa NUMBER;
    l_codigo VARCHAR2(5);
  BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA, ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
   
    
    SELECT 
        ID_CRITERIO,
        IMPORTE,
        DC,
        NOMBRE,
        ID_TIPO_REQUISITO_BECA,
        TIPO_VALOR
        INTO
        l_id_criterio,
        l_importe,
        l_dc,
        l_nombre,
        l_id_tipo_requisito_beca,
        l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    if l_id_tipo_requisito_beca is null then
      l_error:=1;
      l_msgerror:='Falta asignar tipo de requisito beca al criterio ' || l_nombre || ' ' ||l_id_criterio || ' ' || P_ID_CRITERIO_SEMESTRE ;
      goto desc_solbeca;
    end if;
    
    SELECT COUNT(*) INTO l_contar FROM DAVID.SOLICITUD_MAT_ALUM A,DAVID.TIPO_REQUISITO_BECA B
    WHERE A.ID_TIPO_REQUISITO_BECA=B.ID_TIPO_REQUISITO_BECA
    AND A.ID_PERSONA=l_id_persona 
    AND A.ID_TIPO_REQUISITO_BECA=l_id_tipo_requisito_beca
    AND A.ID_SEMESTRE=l_id_semestre
    AND a.id_plan_programa = l_id_plan_programa
    AND A.ESTADO='2';
    
    if l_contar>0 then
      IF l_contar>1 then
        l_error:=1;
        l_msgerror:='Mas de una beca('||l_nombre||') asignado para el mismo alumno';
        goto desc_solbeca;
      end if;
      SELECT B.NOMBRE,B.CODIGO INTO l_nombre,l_codigo FROM DAVID.SOLICITUD_MAT_ALUM A,DAVID.TIPO_REQUISITO_BECA B
      WHERE A.ID_TIPO_REQUISITO_BECA=B.ID_TIPO_REQUISITO_BECA
      AND A.ID_PERSONA=l_id_persona 
      AND A.ID_TIPO_REQUISITO_BECA=l_id_tipo_requisito_beca
      AND a.id_plan_programa = l_id_plan_programa 
      AND A.ID_SEMESTRE=l_id_semestre
      AND A.ESTADO='2';
      
       SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
       
       if l_codigo = 'DHM' then
          UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET MISIONERO='S' WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
       end if;
       

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
    end if;
    <<desc_solbeca>>
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  
  END SP_DESC_SOLICITUD_BECA;
  
  PROCEDURE SP_DESC_VICE_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT COUNT(*) INTO l_contar FROM FIN_ALUMNO_DESCUENTO_VICE 
    WHERE ID_PERSONA=l_id_persona
    and tipo_dscto='V'
    AND ESTADO='1';
    
    IF l_contar>0 THEN
    
      SELECT COALESCE(MATRICULA,0),TIPO_MAT INTO l_importe,l_tipo_valor FROM FIN_ALUMNO_DESCUENTO_VICE 
      WHERE ID_PERSONA=l_id_persona
      and tipo_dscto='V'
      AND ESTADO='1';
      
      
 
      if l_importe>0 then
        SELECT 
            ID_CRITERIO,
            DC,
            NOMBRE
            INTO
            l_id_criterio,
            l_dc,
            l_nombre
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
      end if;
      
    END IF;

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_VICE_MAT;
  
  PROCEDURE SP_DESC_VICE_ENSE(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT COUNT(*) INTO l_contar FROM FIN_ALUMNO_DESCUENTO_VICE 
    WHERE ID_PERSONA=l_id_persona
    and tipo_dscto='V'
    AND ESTADO='1';
    
    IF l_contar>0 THEN
    
      SELECT COALESCE(ENSENANZA,0),TIPO_ENSE INTO l_importe,l_tipo_valor FROM FIN_ALUMNO_DESCUENTO_VICE
      WHERE ID_PERSONA=l_id_persona
      and tipo_dscto='V'
      AND ESTADO='1';
      
      
 
      if l_importe>0 then
        SELECT 
            ID_CRITERIO,
            DC,
            NOMBRE
            INTO
            l_id_criterio,
            l_dc,
            l_nombre
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
      end if;
      
    END IF;

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_VICE_ENSE;
  
  PROCEDURE SP_DESC_HIJO_TRAB(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT COUNT(*) INTO l_contar FROM FIN_ALUMNO_DESCUENTO_VICE 
    WHERE ID_PERSONA=l_id_persona
    and tipo_dscto='P'
    AND ESTADO='1';
    
    IF l_contar>0 THEN
    
      SELECT COALESCE(ENSENANZA,0),TIPO_ENSE INTO l_importe,l_tipo_valor FROM FIN_ALUMNO_DESCUENTO_VICE
      WHERE ID_PERSONA=l_id_persona
      and tipo_dscto='P'
      AND ESTADO='1';
      
      
 
      if l_importe>0 then
        SELECT 
            ID_CRITERIO,
            DC,
            NOMBRE
            INTO
            l_id_criterio,
            l_dc,
            l_nombre
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
      end if;
      
    END IF;
  
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_HIJO_TRAB;
  
  PROCEDURE SP_DESC_ESPECIAL(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_tipo_dscto varchar2(3 byte);
    l_id_semestre_act number;
    l_importe_mat   number(10,2);
    l_tipo_valor_mat varchar2(2 byte);
    l_codigo varchar2(25 byte);
    l_tipo_cobro varchar2(10 byte);
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
        ID_CRITERIO,
        DC,
        NOMBRE,
       TIPO_DSCTO,
       codigo,
       tipo_cobro
        INTO
        l_id_criterio,
        l_dc,
        l_nombre,
        l_tipo_dscto,
        l_codigo,
        l_tipo_cobro
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;

    SELECT COUNT(*) INTO l_contar 
    FROM FIN_ALUMNO_DESCUENTO_VICE a,FIN_TIPO_DSCTO b 
    WHERE a.tipo_dscto=b.tipo_dscto
    and a.ID_PERSONA=l_id_persona
    and a.tipo_dscto=l_tipo_dscto
    and case when b.consemestre='S' then a.ID_SEMESTRE else l_id_semestre_act end =l_id_semestre_act
    AND a.ESTADO='1';
    
    IF l_contar>0 THEN
    
      SELECT COALESCE(a.ENSENANZA,0),a.TIPO_ENSE,COALESCE(a.matricula,0),a.tipo_mat INTO l_importe,l_tipo_valor,l_importe_mat ,l_tipo_valor_mat
       FROM FIN_ALUMNO_DESCUENTO_VICE a,FIN_TIPO_DSCTO b 
      WHERE a.tipo_dscto=b.tipo_dscto
      and a.ID_PERSONA=l_id_persona
      and a.tipo_dscto=l_tipo_dscto
      and case when b.consemestre='S' then a.ID_SEMESTRE else l_id_semestre_act end =l_id_semestre_act
      AND a.ESTADO='1';
      
      if l_tipo_cobro='U' then
        l_tipo_valor:=l_tipo_valor_mat;
        l_importe:=l_importe_mat;
      end if;
 
      -- Ensenanza
      if l_importe>0 then
        
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
      end if;
      
      -- Matricula
      /*if l_importe_mat>0 then
        
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe_mat,
        l_tipo_valor_mat
        );
      end if;*/
      
    END IF;

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_ESPECIAL;
  
  PROCEDURE SP_DESC_ESPECIAL_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_tipo_dscto varchar2(3 byte);
    l_id_semestre_act number;
     l_id_plan_pago_semestre number;
     l_cuotas number(10,2):=0;
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA ,ID_PLANPAGO_SEMESTRE
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_pago_semestre
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    select 
      COUNT(*) INTO l_contar
      FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
      AND B.ID_PLANPAGO_SEMESTRE=l_id_plan_pago_semestre;
    
    if l_contar>0 then
      select 
      C.CUOTAS INTO l_cuotas
      FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
      AND B.ID_PLANPAGO_SEMESTRE=l_id_plan_pago_semestre;
    end if;
    
    if l_cuotas>1 then
      SELECT 
          ID_CRITERIO,
          DC,
          NOMBRE,
         TIPO_DSCTO
          INTO
          l_id_criterio,
          l_dc,
          l_nombre,
          l_tipo_dscto
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
  
      SELECT COUNT(*) INTO l_contar 
      FROM FIN_ALUMNO_DESCUENTO_VICE a,FIN_TIPO_DSCTO b 
      WHERE a.tipo_dscto=b.tipo_dscto
      and a.ID_PERSONA=l_id_persona
      and a.tipo_dscto=l_tipo_dscto
      and case when b.consemestre='S' then a.ID_SEMESTRE else l_id_semestre_act end =l_id_semestre_act
      AND a.ESTADO='1';
      
      IF l_contar>0 THEN
      
        SELECT COALESCE(a.ENSENANZA,0),a.TIPO_ENSE INTO l_importe,l_tipo_valor 
         FROM FIN_ALUMNO_DESCUENTO_VICE a,FIN_TIPO_DSCTO b 
        WHERE a.tipo_dscto=b.tipo_dscto
        and a.ID_PERSONA=l_id_persona
        and a.tipo_dscto=l_tipo_dscto
        and case when b.consemestre='S' then a.ID_SEMESTRE else l_id_semestre_act end =l_id_semestre_act
        AND a.ESTADO='1';
        
        
   
        if l_importe>0 then
          
          
          SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
  
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre,
          l_dc,
          l_importe,
          l_tipo_valor
          );
        end if;
        
      END IF;
   end if;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_ESPECIAL_CUOTA;
  
  PROCEDURE SP_DESC_PRONTO_PAGO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_cuotas number(10,2);
    l_misionero varchar2(2 byte);
    l_id_plan_pago_semestre number;
  BEGIN
  
    SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA,coalesce(A.MISIONERO,'N'),A.ID_PLANPAGO_SEMESTRE
    INTO l_id_semestre_programa,l_id_persona,l_misionero,l_id_plan_pago_semestre
    FROM DAVID.ACAD_ALUMNO_CONTRATO A
    WHERE A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_id_plan_pago_semestre is null then
      select 
      COUNT(*) INTO l_contar
      FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
      AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='Falta asignar plan de pago';
        goto salida_ptopago;
      ELSE
        select 
        MAX(ID_PLANPAGO_SEMESTRE) INTO l_id_plan_pago_semestre
        FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
        WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
        AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
        
        UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET ID_PLANPAGO_SEMESTRE=l_id_plan_pago_semestre WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      END IF;
      
    end if;
    
    SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA, C.CUOTAS,coalesce(A.MISIONERO,'N')
    INTO l_id_semestre_programa,l_id_persona,l_cuotas,l_misionero
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    

    
    --if l_cuotas=1 and l_misionero='N' then
    if l_cuotas=1  then
      SELECT 
            ID_CRITERIO,
            IMPORTE,
            DC,
            NOMBRE,
            TIPO_VALOR
            INTO
            l_id_criterio,
            l_importe,
            l_dc,
            l_nombre,
            l_tipo_valor
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
    end if;
    <<salida_ptopago>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_PRONTO_PAGO;
  
  PROCEDURE SP_DESC_PRONTO_PAGO_JUL(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_cuotas number(10,2);
    l_misionero varchar2(2 byte);
    l_id_plan_pago_semestre number;
    l_id_semestre_act number;
    l_tipo_dscto varchar2(3 byte);
  BEGIN
  
    SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA,coalesce(A.MISIONERO,'N'),A.ID_PLANPAGO_SEMESTRE
    INTO l_id_semestre_programa,l_id_persona,l_misionero,l_id_plan_pago_semestre
    FROM DAVID.ACAD_ALUMNO_CONTRATO A
    WHERE A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
        ID_CRITERIO,
        IMPORTE,
        DC,
        NOMBRE,
        TIPO_VALOR,
        TIPO_DSCTO
        INTO
        l_id_criterio,
        l_importe,
        l_dc,
        l_nombre,
        l_tipo_valor,
        l_tipo_dscto
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;

    
    if l_id_plan_pago_semestre is null then
      select 
      COUNT(*) INTO l_contar
      FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
      AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='Falta asignar plan de pago';
        goto salida_ptopago_jul;
      ELSE
        select 
        MAX(ID_PLANPAGO_SEMESTRE) INTO l_id_plan_pago_semestre
        FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
        WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
        AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
        
        UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET ID_PLANPAGO_SEMESTRE=l_id_plan_pago_semestre WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      END IF;
      
    end if;
    
    SELECT  C.CUOTAS,coalesce(A.MISIONERO,'N')
    INTO l_cuotas,l_misionero
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    

    
    if l_cuotas=1 and l_misionero='N' then
    
      SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      SELECT COUNT(*) INTO l_contar 
      FROM FIN_ALUMNO_DESCUENTO_VICE a,FIN_TIPO_DSCTO b 
      WHERE a.tipo_dscto=b.tipo_dscto
      and a.ID_PERSONA=l_id_persona
      and a.tipo_dscto=l_tipo_dscto
      and case when b.consemestre='S' then a.ID_SEMESTRE else l_id_semestre_act end =l_id_semestre_act
      AND a.ESTADO='1';
    
      IF l_contar>0 THEN
        SELECT COALESCE(a.ENSENANZA,0),a.TIPO_ENSE INTO l_importe,l_tipo_valor 
        FROM FIN_ALUMNO_DESCUENTO_VICE a,FIN_TIPO_DSCTO b 
        WHERE a.tipo_dscto=b.tipo_dscto
        and a.ID_PERSONA=l_id_persona
        and a.tipo_dscto=l_tipo_dscto
        and case when b.consemestre='S' then a.ID_SEMESTRE else l_id_semestre_act end =l_id_semestre_act
        AND a.ESTADO='1';
      end if;
        
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
    end if;
    <<salida_ptopago_jul>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_PRONTO_PAGO_JUL;
  
  PROCEDURE SP_DESC_PRONTO_PAGO_MIS(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_cuotas number(10,2);
    l_misionero varchar2(2 byte);
    l_id_plan_pago_semestre number;
  BEGIN
  
    SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA,coalesce(A.MISIONERO,'N'),A.ID_PLANPAGO_SEMESTRE
    INTO l_id_semestre_programa,l_id_persona,l_misionero,l_id_plan_pago_semestre
    FROM DAVID.ACAD_ALUMNO_CONTRATO A
    WHERE A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_id_plan_pago_semestre is null then
      select 
      COUNT(*) INTO l_contar
      FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
      AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='Falta asignar plan de pago';
        goto salida_ptopago;
      ELSE
        select 
        MAX(ID_PLANPAGO_SEMESTRE) INTO l_id_plan_pago_semestre
        FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
        WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
        AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
        
        UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET ID_PLANPAGO_SEMESTRE=l_id_plan_pago_semestre WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      END IF;
      
    end if;
    
    SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA, C.CUOTAS,coalesce(A.MISIONERO,'N')
    INTO l_id_semestre_programa,l_id_persona,l_cuotas,l_misionero
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    

    
    if l_cuotas=1 and l_misionero='S' then
  
      SELECT 
            ID_CRITERIO,
            IMPORTE,
            DC,
            NOMBRE,
            TIPO_VALOR
            INTO
            l_id_criterio,
            l_importe,
            l_dc,
            l_nombre,
            l_tipo_valor
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
    end if;
    <<salida_ptopago>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_PRONTO_PAGO_MIS;
  
  PROCEDURE SP_DESC_PRONTO_PAGO_COMU(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_cuotas number(10,2);
    l_misionero varchar2(2 byte);
    l_id_plan_pago_semestre number;
    l_comunidad varchar2(1);
  BEGIN
  
    SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA,coalesce(A.MISIONERO,'N'),A.ID_PLANPAGO_SEMESTRE,coalesce(COMUNIDAD,'N')
    INTO l_id_semestre_programa,l_id_persona,l_misionero,l_id_plan_pago_semestre,l_comunidad
    FROM DAVID.ACAD_ALUMNO_CONTRATO A
    WHERE A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_comunidad='S' then
    
      if l_id_plan_pago_semestre is null then
        select 
        COUNT(*) INTO l_contar
        FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
        WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
        AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
        
        IF l_contar=0 THEN
          l_error:=1;
          l_msgerror:='Falta asignar plan de pago';
          goto salida_ptopagocomu;
        ELSE
          select 
          MAX(ID_PLANPAGO_SEMESTRE) INTO l_id_plan_pago_semestre
          FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
          WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
          AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
          
          UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET ID_PLANPAGO_SEMESTRE=l_id_plan_pago_semestre WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
        END IF;
        
      end if;
      
      SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA, C.CUOTAS,coalesce(A.MISIONERO,'N')
      INTO l_id_semestre_programa,l_id_persona,l_cuotas,l_misionero
      FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
      AND B.ID_PLANPAGO=C.ID_PLANPAGO
      AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      
  
      
      if l_cuotas=1  then
        SELECT 
              ID_CRITERIO,
              IMPORTE,
              DC,
              NOMBRE,
              TIPO_VALOR
              INTO
              l_id_criterio,
              l_importe,
              l_dc,
              l_nombre,
              l_tipo_valor
          FROM VW_MAT_CRITERIO_SEMESTRE
          WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
          
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
  
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre,
          l_dc,
          l_importe,
          l_tipo_valor
          );
      end if;
    end if;
    <<salida_ptopagocomu>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_PRONTO_PAGO_COMU;
  
  PROCEDURE SP_DESC_PRONTO_PAGO_ING(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_cuotas number(10,2);
    l_misionero varchar2(2 byte);
    l_id_plan_pago_semestre number;
    l_comunidad varchar2(1);
  BEGIN
  
    SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA,coalesce(A.MISIONERO,'N'),A.ID_PLANPAGO_SEMESTRE,coalesce(COMUNIDAD,'N')
    INTO l_id_semestre_programa,l_id_persona,l_misionero,l_id_plan_pago_semestre,l_comunidad
    FROM DAVID.ACAD_ALUMNO_CONTRATO A
    WHERE A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_comunidad='N' then
    
      if l_id_plan_pago_semestre is null then
        select 
        COUNT(*) INTO l_contar
        FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
        WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
        AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
        
        IF l_contar=0 THEN
          l_error:=1;
          l_msgerror:='Falta asignar plan de pago';
          goto salida_ptopagoing;
        ELSE
          select 
          MAX(ID_PLANPAGO_SEMESTRE) INTO l_id_plan_pago_semestre
          FROM MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
          WHERE B.ID_PLANPAGO=C.ID_PLANPAGO
          AND B.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
          
          UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET ID_PLANPAGO_SEMESTRE=l_id_plan_pago_semestre WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
        END IF;
        
      end if;
      
      SELECT A.ID_SEMESTRE_PROGRAMA,A.ID_PERSONA, C.CUOTAS,coalesce(A.MISIONERO,'N')
      INTO l_id_semestre_programa,l_id_persona,l_cuotas,l_misionero
      FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
      AND B.ID_PLANPAGO=C.ID_PLANPAGO
      AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      
  
      
      if l_cuotas=1  then
        SELECT 
              ID_CRITERIO,
              IMPORTE,
              DC,
              NOMBRE,
              TIPO_VALOR
              INTO
              l_id_criterio,
              l_importe,
              l_dc,
              l_nombre,
              l_tipo_valor
          FROM VW_MAT_CRITERIO_SEMESTRE
          WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
          
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
  
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre,
          l_dc,
          l_importe,
          l_tipo_valor
          );
      end if;
    end if;
    <<salida_ptopagoing>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_PRONTO_PAGO_ING;
  
  PROCEDURE SP_DESC_HIJO_MISIONERO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_misionero varchar(2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA,coalesce(MISIONERO,'N')
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa,l_misionero
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
     
    if l_misionero ='S' then
    
    
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
      
       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );

    end if;    

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_HIJO_MISIONERO;
  
  PROCEDURE SP_DESC_HIJO_MISIONERO_MAT(P_ID_ALUMNO_CONTRATO NUMBER,P_ID_CRITERIO_SEMESTRE NUMBER,P_IMPORTE OUT number,P_ID_PARENT OUT number,P_ACUMULADO OUT number) is
  
    l_importe number(10,2):=0.00;
    l_importe_cri number(10,2):=0.00;
    l_contar int:=0;
    l_items number;
    l_tipo_valor varchar2(5);
    l_id_criterio number;
    l_id_semestre_programa number;
    l_acumula number(10,2):=0;
    l_id_criterio_semestre number;
    l_id_parent_mi number;
    l_acumulado number(10,2):=0;
  begin
  
    SELECT  COUNT(*) INTO l_contar
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    IF l_contar=1 THEN
      SELECT 
                importe,
                tipo_valor,
                id_semestre_programa
                INTO
                l_importe_cri,
                l_tipo_valor,
                l_id_semestre_programa
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
      
      SELECT  COUNT(*) INTO l_contar
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      AND CODIGO='MAT';
  
      IF l_contar=1 THEN
          SELECT 
                  id_criterio,
                  id_criterio_semestre
                  INTO
                  l_id_criterio,
                  l_id_criterio_semestre
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
        AND CODIGO='MAT';
        
        
        select COUNT(*) INTO l_contar 
        from vw_mat_criterio_semestre a, mat_alumno_contrato_det b
        where a.id_criterio_semestre = b.id_criterio_semestre
        and a.id_criterio=l_id_criterio 
        and b.dc='D'
        and b.id_alumno_contrato=P_ID_ALUMNO_CONTRATO; 
        
        if l_contar=1 then
        
          select 
          b.id_alumno_contrato_det into l_id_parent_mi
          from vw_mat_criterio_semestre a, mat_alumno_contrato_det b
          where a.id_criterio_semestre = b.id_criterio_semestre
          and a.id_criterio=l_id_criterio 
          and b.dc='D'
          and b.id_alumno_contrato=P_ID_ALUMNO_CONTRATO; 
          
          select coalesce(max(id_alumno_contrato_det),0) into l_items
          from mat_alumno_contrato_det
          where id_alumno_contrato=P_ID_ALUMNO_CONTRATO
          and dc='C'
          and id_parent_mis= l_id_parent_mi;
          
          if l_items>0 then
          
            select acum_mis into l_acumula
            from mat_alumno_contrato_det
            where id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            and ID_ALUMNO_CONTRATO_DET=l_items;
            
          else
            select count(*) into l_contar
            from mat_alumno_contrato_det
            where id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            and dc='C'
            and id_criterio_semestre= l_id_criterio_semestre;
            
            if l_contar>0 then
              select sum(importe) into l_acumula
              from mat_alumno_contrato_det
              where id_alumno_contrato=P_ID_ALUMNO_CONTRATO
              and dc='D'
              and id_criterio_semestre= l_id_criterio_semestre;
              
            end if;
        end if;
            
        if l_tipo_valor='P' then
          l_importe:= l_acumula * (l_importe_cri/100);
        else
          l_importe:= l_importe_cri;
        end if;
        l_acumulado:= l_acumula - l_importe;
        if l_acumulado<0 then
          l_acumulado:=0;
        end if;
          
   
        end if;
              
      END IF;
  
    END IF;
    P_ID_PARENT:= l_id_parent_mi; 
    P_IMPORTE:=l_importe;
    P_ACUMULADO:=l_acumulado;
  end SP_DESC_HIJO_MISIONERO_MAT;
  
  
  PROCEDURE SP_DESC_MAT_INGRESANTE(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';

    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);

    l_nombre varchar2(150 byte);
    l_id_plan_programa number;

    l_dc varchar2(1);

   l_id_semestre_programa number;

  begin
  
    SELECT ID_PLAN_PROGRAMA, ID_SEMESTRE_PROGRAMA
    INTO l_id_plan_programa,l_id_semestre_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    select count(*) into l_contar from david.acad_plan_programa a,david.acad_plan b,david.acad_semestre c
    where a.id_plan=b.id_plan
    and b.id_semestre=c.id_semestre
    and a.id_plan_programa=l_id_plan_programa
    and c.semestre='2024-1';

    if l_contar>0 then
      SELECT 
        ID_CRITERIO,
        IMPORTE,
        TIPO_PROCESO,
        TIPO_VALOR,
        DC,
        NOMBRE
        INTO
        l_id_criterio,
        l_importe,
        l_tipo_proceso,
        l_tipo_valor,
        l_dc,
        l_nombre
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
     
    
    
    
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
      
       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );

    end if;    

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_MAT_INGRESANTE;
  
  PROCEDURE SP_DESC_INST_EDUC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT COUNT(*) INTO l_contar FROM FIN_ALUMNO_DESCUENTO_VICE 
    WHERE ID_PERSONA=l_id_persona
    and tipo_dscto='I'
    AND ESTADO='1';
    
    IF l_contar>0 THEN
    
      SELECT COALESCE(ENSENANZA,0),TIPO_ENSE INTO l_importe,l_tipo_valor FROM FIN_ALUMNO_DESCUENTO_VICE
      WHERE ID_PERSONA=l_id_persona
      and tipo_dscto='I'
      AND ESTADO='1';
      
      
 
      if l_importe>0 then
        SELECT 
            ID_CRITERIO,
            DC,
            NOMBRE
            INTO
            l_id_criterio,
            l_dc,
            l_nombre
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
      end if;
      
    END IF;

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_INST_EDUC;
  PROCEDURE SP_DESC_CRED_PRAC_FIJO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_id_criterio_proc number;
    l_id_criterio_semestre number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE,
      id_criterio_proc
      INTO
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre,
      l_id_criterio_proc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    SELECT 
    count(*)
    INTO
    l_contar
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    if l_contar<>1 then
      goto salida_desc_crpr_fijo;
    end if;
    
    SELECT 
    ID_CRITERIO_SEMESTRE
    INTO
    l_id_criterio_semestre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    
    SELECT 
      IMPORTE
      INTO
      l_importe
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    
    SELECT sum(CP)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND DESCUENTO_CREDITO='S';
    
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN,
      CREDITOS,
      UNITARIO_CRED
    )
    VALUES( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_importe,
    l_creditos*l_importe,
    l_tipo_valor,
    null,
    l_creditos,
    l_importe
    );
        
    <<salida_desc_crpr_fijo>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRED_PRAC_FIJO;
  
  PROCEDURE SP_DESC_CRED_PRAC_BECA18(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_costo	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
    l_id_criterio_proc NUMBER;
    l_id_criterio_semestre number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE,
      id_criterio_proc
      INTO
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre,
      l_id_criterio_proc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    SELECT 
    count(*)
    INTO
    l_contar
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    if l_contar<>1 then
      goto salida_desc_cp_b18;
    end if;
    
    SELECT 
    ID_CRITERIO_SEMESTRE
    INTO
    l_id_criterio_semestre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    SELECT 
    id_criterio
    INTO
    l_id_criterio
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CP)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND DESCUENTO_CREDITO='S'
    AND  ID_CARGA_CURSO IN(
      SELECT
           A.ID_CARGA_CURSO
        FROM DAVID.ACAD_CURSO_ALUMNO A, DAVID.VW_ACAD_CARGA_ACADEMICA B
        WHERE A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ORIGEN='O'
        AND A.ID_PERSONA=l_id_persona
        AND B.ID_SEMESTRE=l_id_semestre_act
        AND B.ID_CURSO_DETALLE NOT IN(  --LO QUE NO SE HA REPROBADO
          SELECT Y.CURSO_EQUIV
          FROM DAVID.ACAD_CURSO_ALUMNO X,
          DAVID.VW_CURSO_EQUIVALENTE Y
          WHERE X.ID_CURSO_DETALLE=Y.ID_CURSO_DETALLE
          AND X.ID_PERSONA=l_id_persona
          AND X.ID_TIPO_CONDICION=2
        )
    )
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    
    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      goto salida_desc_cp_b18;
    end if;
    
       
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
   
    
    SELECT COALESCE(MAX(ITEM),0)  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN,
      CREDITOS,
      UNITARIO_CRED
    )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null,
    l_creditos,
    l_costo
    );
           
    <<salida_desc_cp_b18>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRED_PRAC_BECA18;
  
  PROCEDURE SP_DESC_CRED_PRAC_CURSO_APZADO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
    l_costo number(10,2);
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    SELECT 
      ID_CRITERIO_PROC,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND ID_CARGA_CURSO IN(
        SELECT
           A.ID_CARGA_CURSO
        FROM DAVID.ACAD_CURSO_ALUMNO A, DAVID.VW_ACAD_CARGA_ACADEMICA B
        WHERE A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ORIGEN='O'
        AND A.ID_PERSONA=l_id_persona
        AND B.ID_SEMESTRE=l_id_semestre_act
        AND B.ID_CURSO_DETALLE  IN(  --LO QUE NO SE HA REPROBADO
          SELECT Y.CURSO_EQUIV
          FROM DAVID.ACAD_CURSO_ALUMNO X,
          DAVID.VW_CURSO_EQUIVALENTE Y
          WHERE X.ID_CURSO_DETALLE=Y.ID_CURSO_DETALLE
          AND X.ID_PERSONA=l_id_persona
          AND X.ID_TIPO_CONDICION=2
        )
    )  AND DESCUENTO_CREDITO='S'
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a, TT_CURSOS_X_PLAN b
    WHERE a.id_plan=b.id_plan
    AND A.ID_SEMESTRE_PROGRAMA=B.ID_SEMESTRE_PROGRAMA
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_items=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo de enseñanza DESC_CRED_PRAC_CURSO_APZADO';
      goto salida_desc_cred_apzdo;
    end if;

    select count(*) into l_contar1 from TT_CURSOS_X_PLAN;
    
    if l_items<>l_contar1 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes';
      goto salida_desc_cred_apzdo;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a, TT_CURSOS_X_PLAN b
    WHERE a.id_plan=b.id_plan
    AND A.ID_SEMESTRE_PROGRAMA=B.ID_SEMESTRE_PROGRAMA
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_desc_cred_apzdo;
    end if;
    
     select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN,
      APLAZADO,
      CREDITOS,
      UNITARIO_CRED
    )values( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null,
    'S',
    l_creditos,
    l_costo
    );    
    <<salida_desc_cred_apzdo>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRED_PRAC_CURSO_APZADO;
  
  PROCEDURE SP_DESC_BACH_PREGRADO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number:=0;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_tipo_dscto varchar2(3 byte);
    l_id_semestre_act number;
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
        ID_CRITERIO,
        DC,
        NOMBRE,
        TIPO_DSCTO,
        IMPORTE,
        TIPO_VALOR
        INTO
        l_id_criterio,
        l_dc,
        l_nombre,
        l_tipo_dscto,
        l_importe,
        l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
    select COUNT(*) INTO l_contar  
    from DAVID.Acad_Alumno_Plan aap, DAVID.Vw_Plan_Programa vpp 
    WHERE Vpp.Id_Plan_Programa=Aap.Id_Plan_Programa 
    and vpp.Id_facultad Between 8 and 12
    AND id_persona=l_id_persona 
    and graduado=1;

      
    IF l_contar>0 THEN

       SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
     
    END IF;

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_BACH_PREGRADO;
  
  PROCEDURE SP_GENERAR_DETALLE_CONTRATO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) 
  IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_tipo_alumno varchar2(5);
    l_contar number;
    l_id_semestre_programa number;
    
    l_id_criterio_semestre number;
    l_id_criterio_ing NUMBER;
    l_total number(15,2);
    l_dc varchar2(2);
    l_id_semestre_programa_ori number;
    l_tienehijo number;
    l_tipo_valor varchar2(2);
    l_descripcion varchar2(500);
    l_aplazado varchar2(2);
    l_creditos number(10,2);
    CURSOR curdetING IS
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      coalesce(sum(B.TOTAL),0) as TOTAL,
      A.DC,
      B.ID_SEMESTRE_PROGRAMA,
      A.TIENE_HIJO,
      B.TIPO_VALOR,
      B.DESCRIPCION,
      B.APLAZADO
    FROM VW_MAT_CRITERIO_SEMESTRE A,MAT_CONCEPTO_ASIGN_ALUM B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND B.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND A.DC='D'
    GROUP BY A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      A.DC,
      B.ID_SEMESTRE_PROGRAMA,
      A.TIENE_HIJO,
      A.ORDEN,
      B.TIPO_VALOR,
      B.DESCRIPCION,
      B.APLAZADO
    ORDER BY A.DC DESC,A.ORDEN;
    
    
    
    CURSOR curdetDES IS
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      coalesce(B.TOTAL,0) as TOTAL,
      A.DC,
      B.TIPO_VALOR,
      A.TIENE_HIJO,
      B.DESCRIPCION,
      B.ID_SEMESTRE_PROGRAMA,
      B.CREDITOS,
      B.unitario_cred
    FROM VW_MAT_CRITERIO_SEMESTRE A,MAT_CONCEPTO_ASIGN_ALUM B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND B.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND A.DC='C'
    AND coalesce(A.ID_AFECTA,0)=l_id_criterio_ing
    ORDER BY A.DC DESC,A.ORDEN;
    
    
    
    l_id_criterio_semestre_des number;
    l_total_des number(10,2);
    l_dc_des varchar2(2);
    l_tipo_valor_des varchar2(5);
    l_tienehijo_des number;
    l_descripcion_des varchar2(500); 
    l_id_semestre_programa_ori_des number;
    
    l_acumula  number(10,2);
    l_importe  number(10,2);
    l_i number:=0;
    l_id_parent number;
    
    l_k number:=0;
    l_numhijo number;
    l_id_plan_pago_semestre NUMBER;
    
    

    l_total_debito number(15,2);
    l_total_credito number(15,2);
    l_matricula number(15,2);
    l_mensual number(15,2);
    l_mensual_resi number(15,2);
    l_contado number(15,2);
    l_matricula1cuota number(15,2);
    l_pago number(15,2);
    l_saldo number(15,2);
    l_cuotas number(10,2);
    l_id_persona number;
    l_id_depto varchar2(10);
    
    total_dc number(10,2);
    imp_dc number(10,2);
    l_prd number(10,2);
    l_contarcrit number:=0;
    l_id_matricula_detalle number;
    l_codigo_mod varchar2(10);
    l_creditosvar number(10,2):=0;
    l_errorvar number;
    l_conmat1cuota varchar2(1);
    l_creditos_det number(10,2):=0;
    unitario_cred number(10,2):=0;
    l_total_r  number(10,2):=0;
    l_total_debito_r  number(10,2):=0;
    l_total_credito_r  number(10,2):=0;
    L_ID_SEMESTRE NUMBER;
    L_ID_RESID_TIPO_HABITACION NUMBER;
    L_CANT NUMBER;
  BEGIN
    SELECT ID_PERSONA, ID_SEMESTRE_PROGRAMA, id_matricula_detalle
    INTO l_id_persona,l_id_semestre_programa,l_id_matricula_detalle
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
  --eliminar 
    DELETE FROM MAT_CONCEPTO_ASIGN_ALUM WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    DELETE FROM MAT_ALUMNO_CONTRATO_DET WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
     select B.CODIGO INTO l_codigo_mod 
    FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;
    
    SELECT ID_SEMESTRE INTO L_ID_SEMESTRE FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA = l_id_semestre_programa;
    
    SELECT COUNT(1) INTO L_CANT
    FROM DAVID.ACAD_RESERVA_RESIDENCIA A JOIN DAVID.RESIDENCIA_HABITACION B ON A.ID_HABITACION = B.ID_HABITACION WHERE A.ID_PERSONA = l_id_persona AND A.ID_SEMESTRE = L_ID_SEMESTRE;
    
    IF L_CANT > 0 THEN
        SELECT ID_RESID_TIPO_HABITACION INTO L_ID_RESID_TIPO_HABITACION 
        FROM DAVID.ACAD_RESERVA_RESIDENCIA A JOIN DAVID.RESIDENCIA_HABITACION B ON A.ID_HABITACION = B.ID_HABITACION WHERE A.ID_PERSONA = l_id_persona AND A.ID_SEMESTRE = L_ID_SEMESTRE;
    END IF;
    
    UPDATE DAVID.ACAD_ALUMNO_CONTRATO  SET 
      TOTAL=0,
      TOTAL_DEBITO=0,
      TOTAL_CREDITO=0,
      MATRICULA=0,
      MENSUAL=0,
      CONTADO=0,
      MATRICULA1CUOTA=0,
      PAGO=0,
      ID_RESID_TIPO_HABITACION= L_ID_RESID_TIPO_HABITACION ,
      DIAS_RESIDENCIA=0,
      creditos=0,
      creditosvar=0,
      MENSUAL_ENS_RESI=0
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    
    --PROCESA INGRESOS
    PKG_FINANCES_STUDENTS.SP_INGRESOS_ALUM_CONTRATO(P_ID_ALUMNO_CONTRATO,l_tipo_alumno,l_error,l_msgerror);

    IF l_error=2 THEN
    
       
    
        if l_codigo_mod='V' THEN
          
         	select
            sum(credito_variados)   INTO l_creditosvar
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO );
          
            /*
         SELECT 
          coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  
          INTO l_creditosvar
          FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
          WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
          and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO; */
        else
          SELECT coalesce(sum(CREDITO),0)
          INTO l_creditos
          FROM VW_MAT_CURSOS_PLAN_ALUMNO 
          WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
        end if;
    
   
    
        UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET
          creditos=l_creditos,
          creditosvar=l_creditosvar
        WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
        l_error:=0;
        l_msgerror:='No requiere proceso de variación';
        
        GOTO salida_detcontrato;
    END IF;
    
    IF l_error<>0 THEN
        GOTO salida_detcontrato;
    END IF;
    --procesa_descuento
    SELECT COUNT(*) INTO l_contar FROM MAT_CRITERIO_SEMESTRE A,MAT_CRITERIO C
    WHERE A.ID_CRITERIO=C.ID_CRITERIO
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND C.DC='C';
    
    IF l_contar>0 THEN
      PKG_FINANCES_STUDENTS.SP_DESCTOS_ALUM_CONTRATO(P_ID_ALUMNO_CONTRATO,l_tipo_alumno,l_error,l_msgerror);
      
      IF l_error<>0 THEN
        GOTO salida_detcontrato;
      END IF;
    
    END IF;
    
    --ELIMINA LOS QUE TIENE IMPORTE CERO QUE NO SEN PADRES
    DELETE FROM MAT_CONCEPTO_ASIGN_ALUM 
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND TOTAL=0
    AND ID_CRITERIO_SEMESTRE IN(
      SELECT ID_CRITERIO_SEMESTRE
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      AND TIENE_HIJO=0
    );
    
    
    OPEN curdetING;
    FETCH curdetING INTO l_id_criterio_semestre,l_id_criterio_ing,l_total,l_dc,l_id_semestre_programa_ori,l_tienehijo,l_tipo_valor,l_descripcion,l_aplazado;
      
    WHILE curdetING%FOUND LOOP
      l_acumula:=l_total;
      
      SELECT COALESCE(MAX(ID_ALUMNO_CONTRATO_DET),0)+1  INTO l_i FROM MAT_ALUMNO_CONTRATO_DET
      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
       
      l_id_parent := l_i;
      
      SELECT 
      ID_DEPTO INTO l_id_depto
      FROM DAVID.ACAD_SEMESTRE_PROGRAMA A, DAVID.ACAD_PROGRAMA_ESTUDIO B, ORG_SEDE_AREA C
      WHERE A.ID_PROGRAMA_ESTUDIO=B.ID_PROGRAMA_ESTUDIO
      AND B.ID_SEDEAREA=C.ID_SEDEAREA
      AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_ori;
      
      INSERT INTO MAT_ALUMNO_CONTRATO_DET(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ID_ALUMNO_CONTRATO_DET,
        IMPORTE,
        DC,
        ACUMULA,
        ID_SEMESTRE_PROGRAMA,
        ID_PARENT,
        DESCRIPCION,
        IMP_CAL,
        TIPO_VALOR,
        APLAZADO,
        ID_DEPTO
       ) VALUES (
        P_ID_ALUMNO_CONTRATO,
        l_id_criterio_semestre,
        l_i,
        l_total,
        l_dc,
        NULL,
        l_id_semestre_programa_ori,
        NULL,
        l_descripcion,
        NULL,
        l_tipo_valor,
        l_aplazado,
        l_id_depto
       );
      
      
     
      
      --DESCUENTO ASOCIADO
        --descuento padre
        if l_k=0 then
          
          SELECT COALESCE(MAX(ID_ALUMNO_CONTRATO_DET),0)  INTO l_i FROM MAT_ALUMNO_CONTRATO_DET
          WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
         
          INSERT INTO MAT_ALUMNO_CONTRATO_DET(
            ID_ALUMNO_CONTRATO,
            ID_CRITERIO_SEMESTRE,
            ID_ALUMNO_CONTRATO_DET,
            IMPORTE,
            DC,
            ACUMULA,
            ID_SEMESTRE_PROGRAMA,
            ID_PARENT,
            DESCRIPCION,
            IMP_CAL,
            TIPO_VALOR
           )
       
          SELECT
            P_ID_ALUMNO_CONTRATO,
            A.ID_CRITERIO_SEMESTRE,
            (row_number() OVER( ORDER BY A.ID_CRITERIO_SEMESTRE ASC )) + l_i AS items, 
            0,
            A.DC,
            0,
            A.ID_SEMESTRE_PROGRAMA,
            null,
            A.NOMBRE,
            0,
            A.TIPO_VALOR
          FROM VW_MAT_CRITERIO_SEMESTRE A
          WHERE A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND A.DC='C'
          AND A.ID_AFECTA is null
          and A.TIENE_HIJO>0
          ORDER BY A.DC DESC,A.ORDEN; 
          
        end if;
        
       
      
        OPEN curdetDES;
        FETCH curdetDES INTO l_id_criterio_semestre_des,l_total_des,l_dc_des,l_tipo_valor_des,l_tienehijo_des,l_descripcion_des,l_id_semestre_programa_ori_des,l_creditos_det,unitario_cred;
          
        WHILE curdetDES%FOUND LOOP
        
            SELECT COALESCE(MAX(ID_ALUMNO_CONTRATO_DET),0)+1  INTO l_i FROM MAT_ALUMNO_CONTRATO_DET
            WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
            
            
            if l_tipo_valor_des='I' then
              select coalesce(sum(TOTAL),0) into total_dc from MAT_CONCEPTO_ASIGN_ALUM 
              where ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO 
              and ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
              
              select importe into imp_dc from MAT_ALUMNO_CONTRATO_DET 
              where ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO 
              and ID_CRITERIO_SEMESTRE=l_id_criterio_semestre
              and ID_ALUMNO_CONTRATO_DET=l_id_parent;
              
              l_prd:=0;
              
              if total_dc>0 then
                l_prd:=imp_dc/total_dc;
              end if;
              l_total_des := l_prd*l_total_des;
              
             
            end if;
            

            if l_tipo_valor_des = 'P' THEN
              l_importe:=(l_total_des/100)*l_acumula;
            else
              l_importe:=l_total_des;
            END IF;
            
            l_acumula := l_acumula - l_importe;
            
            SELECT 
            ID_DEPTO INTO l_id_depto
            FROM DAVID.ACAD_SEMESTRE_PROGRAMA A, DAVID.ACAD_PROGRAMA_ESTUDIO B, ORG_SEDE_AREA C
            WHERE A.ID_PROGRAMA_ESTUDIO=B.ID_PROGRAMA_ESTUDIO
            AND B.ID_SEDEAREA=C.ID_SEDEAREA
            AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_ori_des;
      
            if (l_total>0 and l_importe>0 ) or (l_total<0 and l_importe<0 ) then
              INSERT INTO MAT_ALUMNO_CONTRATO_DET(
                  ID_ALUMNO_CONTRATO,
                  ID_CRITERIO_SEMESTRE,
                  ID_ALUMNO_CONTRATO_DET,
                  IMPORTE,
                  DC,
                  ACUMULA,
                  ID_SEMESTRE_PROGRAMA,
                  ID_PARENT,
                  DESCRIPCION,
                  IMP_CAL,
                  TIPO_VALOR,
                  ID_DEPTO,
                  CREDITOS,
                  UNITARIO
                 ) VALUES (
                  P_ID_ALUMNO_CONTRATO,
                  l_id_criterio_semestre_des,
                  l_i,
                  l_importe,
                  l_dc_des,
                  l_acumula,
                  l_id_semestre_programa_ori,
                  l_id_parent,
                  l_descripcion_des,
                  l_total_des,
                  l_tipo_valor_des,
                  l_id_depto,
                  l_creditos_det,
                  unitario_cred
                 );
            end if;
            FETCH curdetDES INTO l_id_criterio_semestre_des,l_total_des,l_dc_des,l_tipo_valor_des,l_tienehijo_des,l_descripcion_des,l_id_semestre_programa_ori_des,l_creditos_det,unitario_cred;
                    
        END LOOP;
        CLOSE curdetDES;
      l_k:=l_k+1;  
      l_contarcrit:=l_contarcrit +1;
      FETCH curdetING INTO l_id_criterio_semestre,l_id_criterio_ing,l_total,l_dc,l_id_semestre_programa_ori,l_tienehijo,l_tipo_valor,l_descripcion,l_aplazado;
                    
    END LOOP;
    CLOSE curdetING;
    
    
    
    IF l_contarcrit=0 THEN
        l_error:=1;
        l_msgerror:='No está asignado criterios de matricula';
        GOTO salida_detcontrato;
    END IF;
    
    ---solo descuento
    SELECT
    COUNT(*) INTO l_numhijo  
    FROM VW_MAT_CRITERIO_SEMESTRE A, MAT_ALUMNO_CONTRATO_DET D
    WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
    AND A.DC='C'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND D.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND A.ID_PARENT IS NOT NULL;
      
    IF l_numhijo>0 THEN
       MERGE INTO MAT_ALUMNO_CONTRATO_DET S 
       USING(
          SELECT
          D.ID_ALUMNO_CONTRATO,A.ID_SEMESTRE_PROGRAMA,A.ID_CRITERIO_SEMESTRE,D.ID_ALUMNO_CONTRATO_DET,E.TOTAL  
          FROM VW_MAT_CRITERIO_SEMESTRE A, MAT_ALUMNO_CONTRATO_DET D,(
            SELECT
            X.ID_PARENT, COALESCE(SUM(Z.IMPORTE),0) as total
            FROM VW_MAT_CRITERIO_SEMESTRE X, MAT_ALUMNO_CONTRATO_DET Z
            WHERE X.ID_CRITERIO_SEMESTRE=Z.ID_CRITERIO_SEMESTRE
            AND X.DC='C'
            AND X.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
            AND Z.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
            AND X.ID_PARENT IS NOT NULL
            group by X.ID_PARENT
          )E
          WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
          AND E.ID_PARENT=A.ID_CRITERIO
          AND A.DC='C'
          AND A.ESTADO='1'
          AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND D.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
          AND A.ID_PARENT IS NULL
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND T.ID_SEMESTRE_PROGRAMA=S.ID_SEMESTRE_PROGRAMA AND T.ID_CRITERIO_SEMESTRE= S.ID_CRITERIO_SEMESTRE AND T.ID_ALUMNO_CONTRATO_DET=S.ID_ALUMNO_CONTRATO_DET)
       WHEN  MATCHED THEN UPDATE SET  
       S.IMPORTE = T.TOTAL;
         
    END IF;
    
    --CALCULO DE TOTALES
    
    SELECT count(*)
    INTO l_contar
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='No tiene asignado plan de pagos';
        GOTO salida_detcontrato;
    END IF;
    
    SELECT C.CUOTAS,coalesce(c.CONMAT1CUOTA,'S')
    INTO l_cuotas,l_conmat1cuota
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    /*SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO='M' THEN A.IMPORTE ELSE 0 END)),0) AS MATRICULA,
    --COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO<>'M' THEN case when l_conmat1cuota='S' then A.IMPORTE else 0 end ELSE 0 END)),0)/l_cuotas AS MENSUAL
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO<>'M' THEN  A.IMPORTE  ELSE 0 END)),0)/l_cuotas AS MENSUAL
    INTO
    l_total,
    l_total_debito,
    l_total_credito,
    l_matricula,
    l_mensual*/
    SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO='M' or (B.tipo_cobro='U' and B.TIPO='R') THEN A.IMPORTE ELSE 0 END)),0) AS MATRICULA,
    --COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO<>'M' THEN case when l_conmat1cuota='S' then A.IMPORTE else 0 end ELSE 0 END)),0)/l_cuotas AS MENSUAL
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN (B.TIPO='E' or (B.tipo_cobro='M' and B.TIPO='R')) THEN  A.IMPORTE  ELSE 0 END)),0)/l_cuotas AS MENSUAL
    
    INTO
    l_total,
    l_total_debito,
    l_total_credito,
    l_matricula,
    l_mensual
    FROM MAT_ALUMNO_CONTRATO_DET A, VW_MAT_CRITERIO_SEMESTRE B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND B.TIENE_HIJO=0
    AND B.RESI_MEN=0;
    --and b.codigo not in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS');
    
    
    SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN (B.TIPO='E' or (B.tipo_cobro='M' and B.TIPO='R')) THEN  A.IMPORTE  ELSE 0 END)),0)/CASE WHEN (l_cuotas-1)=0 THEN 1 ELSE (l_cuotas-1) END AS MENSUAL
    into
    l_total_r,
    l_total_debito_r,
    l_total_credito_r,
    l_mensual_resi
    FROM MAT_ALUMNO_CONTRATO_DET A, VW_MAT_CRITERIO_SEMESTRE B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND B.TIENE_HIJO=0
    AND B.RESI_MEN=1;
    --and b.codigo  in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS');
    
        
    
    
    /*SELECT COALESCE(SUM(TOTAL),0) INTO l_saldo 
    FROM ELISEO.VW_SALES_SALDO
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_CLIENTE = l_id_persona;*/
    
    
    SELECT NVL(SUM(TOTAL), 0) INTO l_saldo
     --SIGN(NVL(SUM(TOTAL), 0)) AS SIGNO
    FROM (
       SELECT TOTAL
       FROM VW_SALES_MOV
       WHERE ID_ENTIDAD = P_ID_ENTIDAD
         AND ID_DEPTO = P_ID_DEPTO
         AND ID_ANHO = P_ID_ANHO
         AND ID_CLIENTE = l_id_persona
         AND ID_TIPOVENTA IN (1, 2, 3)
       UNION ALL
       SELECT SUM(IMPORTE) * DECODE(SIGN(SUM(IMPORTE)), 1, -1, 0) AS TOTAL
       FROM VW_SALES_ADVANCES
       WHERE ID_ENTIDAD = P_ID_ENTIDAD
         AND ID_DEPTO = P_ID_DEPTO
         AND ID_ANHO = P_ID_ANHO
         AND ID_CLIENTE = l_id_persona
    );

    
    l_contado:= 0;
    if l_cuotas=1 then
      l_contado:= l_total + l_total_r;
      l_pago:= l_contado + l_saldo;
    end if;
    
    l_matricula1cuota:=0;
    
    if l_cuotas<>1 then
      if l_conmat1cuota='S' then
        l_matricula1cuota:=l_matricula + l_mensual;
      else
        l_matricula1cuota:=l_matricula;
      end if;
      l_pago:= l_matricula1cuota + l_saldo;
    else
      l_mensual:=0;
      l_mensual_resi:=0;
    end if;
    
    if l_pago<0 then
      l_pago:=0;
    end if;
    
    /*if l_mensual<0 then
      l_mensual:=0;
    end if;*/
    
    select B.CODIGO INTO l_codigo_mod 
    FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;
    
    if l_codigo_mod='V' THEN
      /*
      SELECT 
      coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  
      INTO l_creditosvar
      FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
      WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
      and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;*/
      select
            sum(credito_variados)   INTO l_creditosvar
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO );
          
    else
      SELECT coalesce(sum(CREDITO),0)
      INTO l_creditos
      FROM VW_MAT_CURSOS_PLAN_ALUMNO 
      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    end if;
    
   
    
    UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET
      TOTAL=l_total + l_total_r,
      TOTAL_DEBITO=l_total_debito+l_total_debito_r,
      TOTAL_CREDITO=l_total_credito+l_total_credito_r,
      MATRICULA=l_matricula,
      MENSUAL=l_mensual,
      CONTADO=l_contado,
      MATRICULA1CUOTA=l_matricula1cuota,
      PAGO=l_pago,
      creditos=l_creditos,
      creditosvar=l_creditosvar,
      MENSUAL_ENS_RESI = l_mensual + l_mensual_resi
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    delete from MAT_ALUMNO_CONTRATO_DET  WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO  and coalesce(importe,0)=0;
    
  
    <<salida_detcontrato>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_GENERAR_DETALLE_CONTRATO;
  
 PROCEDURE SP_GENERAR_VENTA_MATRICULA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) 
  IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_venta number;
    l_id_resp_financiero number;
    l_id_cliente number;
    l_cuotas number(10,2);
    
    l_igv number(10,2);
    l_tc NUMBER(10,3);
    l_id_moneda number;
    l_id_moneda_tc number;
    l_glosa varchar2(80):='';
    
    l_id_tipoasiento varchar2(5);--:='RV';
    l_id_tipovoucher number := 1;
    l_id_tipoasientodep varchar2(5) := 'MB';
    l_id_tipovoucherdep number := 5;
    l_id_credito number :=2;
    l_id_voucher NUMBER;
    
    l_serie varchar2(5);
    l_correlativo number;
    l_numero varchar2(15);
    l_id_persona_v number;--pendiente
    l_id_documento NUMBER;
    l_id_tipo_transaccion number:= 1;
    l_id_comprobante varchar2(2);
    l_id_id_cliente_legal number;
    l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
    L_USER NUMBER :=4; --MATRICULADOR ONLINE
    L_TOTAL_ANTICIPO NUMBER(10,2);
    L_IMPORTE_ANTICIPO NUMBER(10,2);
    L_V_TOTAL NUMBER(10,2);
    L_DC VARCHAR2(1) :='C'; --DC PARA ANTICIPOS
    L_CODIGO VARCHAR2(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO
    l_estado varchar2(1);
    l_imp_comtrato number(10,2);
    L_SALDO NUMBER(10,2);
    L_SIGNO NUMBER;
    l_id_semestre_programa number;
    l_semestre varchar2(10);
    P_TIPO VARCHAR2(1) := 'V';
    l_nom_nivel_ensenanza varchar2(150):='-';
    l_id_matricula_detalle number;
    l_codigo_mod varchar2(10);
    l_id_modo_contrato number;
    l_modo_nombre VARCHAR2(150 BYTE);
    l_id_tipoventa number;
    l_creditosvar number(10,2);
    l_id_alumno_contrato_asociado number;
    l_id_parent number;
    l_id_tiponota varchar2(5);
    l_id_comprobante_ref varchar2(5);
    l_serie_ref varchar2(10);
    l_numero_ref varchar2(20);
    l_tipo_alumno varchar2(5);
    l_id_modalidad_estudio number;
    l_cod_moda_es varchar2(5);
    l_conmat1cuota  varchar2(2);
    L_ID_NOTA NUMBER;
    L_DETALLE VARCHAR2(100) :='Descuento Excepcional';
    L_IMP_DSCTO NUMBER(10,2);
    L_IMPORTE_DEUDA NUMBER(10,2) := 0;
    L_ID_SEDE NUMBER;
    L_TOTAL_VAR NUMBER(10,2);
    L_TOTAL_VENTA NUMBER(10,2);
  BEGIN

    SELECT A.ID_PERSONA,C.CUOTAS,A.ID_CLIENTE_LEGAL,A.ID_COMPROBANTE,DECODE(CUOTAS,'1', CONTADO,MATRICULA1CUOTA)-COALESCE(IMP_DSCTO,0) IMP_CONTRATO,COALESCE(IMP_DSCTO,0) IMP_DSCTO,--DECODE(CUOTAS,'1', CONTADO,MATRICULA1CUOTA) IMP_CONTRATO,
    A.ESTADO,a.ID_SEMESTRE_PROGRAMA,A.id_matricula_detalle,COALESCE(A.CREDITOSVAR,0),A.id_alumno_contrato_asociado,tipo_alumno,
    case when C.CUOTAS=1 then 'S' else coalesce(c.conmat1cuota,'S')  end as conmat1cuota
    INTO l_id_cliente,l_cuotas,l_id_id_cliente_legal,l_id_comprobante,l_imp_comtrato,L_IMP_DSCTO,l_estado,
    l_id_semestre_programa,l_id_matricula_detalle,l_creditosvar,l_id_alumno_contrato_asociado,l_tipo_alumno,
    l_conmat1cuota
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    --VALIDA SI EL ALUMNO ESTA MATRICULADO
    IF l_estado = '1' THEN 
        l_error:=1;
        l_msgerror:='Alto: Alumno Matriculado';
        GOTO salida_venta;
    END IF;
    
    l_id_moneda:=7; --SOLES
    l_id_moneda_tc:=9;
    
    SELECT 
    b.SEMESTRE into l_semestre
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
    WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    select B.CODIGO,A.ID_MODO_CONTRATO,b.nombre INTO l_codigo_mod,l_id_modo_contrato,l_modo_nombre FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;
    
    IF l_codigo_mod = 'V' AND l_creditosvar=0 THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno Regular';
        GOTO salida_venta;
    END IF;
    
    IF l_codigo_mod = 'CO'  THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno Regular';
        GOTO salida_venta;
    END IF;
    
    ---modificacion venta =0
    select 
        coalesce(sum(case when a.dc='C' then a.importe * -1 else a.importe end),0) into L_TOTAL_VENTA
      from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
      where a.id_criterio_semestre=b.id_criterio_semestre
      and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
      AND B.TIENE_HIJO=0
      AND (case when l_conmat1cuota='N' then
          case when b.TIPO_COBRO='U' then 'N' else 'S' end
        else
           'S'
        end)=l_conmat1cuota
        and case when l_cuotas=1 then 'S' else case when B.RESI_MEN=1 then 'N' else 'S' end end = 'S';
        --and case when l_cuotas=1 then 'S' else case when b.codigo in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS') then 'N' else 'S' end end = 'S'
      --ORDER BY a.dc, B.ORDEN; 
      
      IF L_TOTAL_VENTA=0 then--and l_codigo_mod = 'V' THEN
        l_error := 0;
        l_msgerror := 'Venta con total cero';
        GOTO salida_venta;
      end if;
    --fin modificacion venta =0
    
   
    
    SELECT 
    D.NOMBRE,d.ID_TIPOVENTA,c.id_modalidad_estudio into l_nom_nivel_ensenanza,l_id_tipoventa,l_id_modalidad_estudio
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D
    WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
    AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    IF l_codigo_mod = 'V' and l_tipo_alumno='B18'  THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno B18 Matriculado';
        GOTO salida_venta;
    END IF;
    
    select codigo into  l_cod_moda_es from david.tipo_modalidad_estudio where id_modalidad_estudio=l_id_modalidad_estudio;
    
    IF l_codigo_mod = 'V' and l_cod_moda_es='SP'  THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno  Semipresencial';
        GOTO salida_venta;
    END IF;
    
    
    
    
    if l_id_tipoventa is null then
      l_id_tipoventa:=1;
    end if;
    
    if l_cuotas=1 then
      if l_codigo_mod='R' then
        l_glosa:=substr('Matrícula Contado '||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
      else
        l_glosa:=substr('Matricula Curso '||l_modo_nombre||' '||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
      end if;
      l_id_credito:=1;
    else
      if l_codigo_mod='R' then
        if l_conmat1cuota ='N' then
          l_glosa:=substr('Matrícula  '||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
        else
          l_glosa:=substr('Matrícula y 1ra armada '||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
        end if;
      else
        if l_codigo_mod='V' then
           l_glosa:=substr('Variación Matrícula '||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
        else
          
          if l_conmat1cuota ='N' then
            l_glosa:=substr('Matrícula  '||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
          else
            l_glosa:=substr('Matrícula y 1ra armada '||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
          end if;
        end if;
      end if;
      l_id_credito:=2;
    end if;
    
    select FC_IGV(CURRENT_DATE ) into l_igv from dual;
     
    select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
     
    if l_tc is null then
        l_tc:=0;
    end if;
    
    SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe tipo de Asiento (RV) '||P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-'||P_ID_ANHO;
        GOTO salida_venta;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||to_char(P_ID_ANHO);
        GOTO salida_venta;
    end if;
    
    SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    SELECT   count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO =P_ID_DEPTO
    AND ID_MODULO = '13'--modulo ventas
    AND ID_ANHO = P_ID_ANHO
    and ID_TIPOASIENTO=l_id_tipoasiento
    AND AUTOMATICO='S'
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
            
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
        GOTO salida_venta;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(P_ID_ANHO);
        GOTO salida_venta;
    end if;
    
    
    --valida asiento
    select count(1) into l_contar from (
        select 
        a.id_criterio_semestre,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='D' ) as contard,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='C' ) as contarc
        from mat_alumno_contrato_det a, vw_mat_criterio_semestre b
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO
        and b.tiene_hijo=0 --EXCLUYE A LOS PARENTS CON HIJOS -MARLO
        group by a.id_criterio_semestre
      ) z
    where (z.contard=0 or z.contarc=0 or (z.contard + z.contarc)<=1);
    
    if l_contar > 0 then
    --if l_contar = 0 then --modificado por marlo
        l_error := 1;
        l_msgerror := 'Alto! Falta configurar asiento contable de la venta '||P_ID_ALUMNO_CONTRATO;
        GOTO salida_venta;
    END IF;
    
    IF l_codigo_mod = 'V' and l_creditosvar<0 then
      select
      ID_VENTA,'04',ID_COMPROBANTE,SERIE, NUMERO
      into
      l_id_parent,l_id_tiponota,l_id_comprobante_ref,l_serie_ref,l_numero_ref
      from VENTA
      where id_venta in(
          WITH contrato AS (SELECT v.id_venta
                  FROM venta_detalle vd
                           INNER JOIN venta v ON v.id_venta = vd.id_venta
                  WHERE vd.id_alumno_contrato = l_id_alumno_contrato_asociado),
                 nota_credito AS (SELECT nc.id_venta, nc.id_parent
                                  FROM venta nc
                                  WHERE nc.id_cliente = l_id_cliente
                                    AND nc.glosa LIKE '%'||l_semestre||'%'
                                    AND nc.serie LIKE 'BC%')
            SELECT Distinct c.id_venta
            FROM contrato c
            WHERE NOT EXISTS (SELECT 1
                              FROM nota_credito ta
                              WHERE ta.id_parent = c.id_venta)
        -- select id_venta from venta_detalle where id_alumno_contrato = l_id_alumno_contrato_asociado
      )
      and total > 0
      and cuota = 1; --apunta a la matricula o primera armada
    else
      l_id_parent:=null;
      l_id_tiponota:=null;
      l_id_comprobante_ref:=null;
      l_serie_ref:=null;
      l_numero_ref:=null;
    end if;
    
    SELECT ID_SEDE INTO L_ID_SEDE FROM DAVID.VW_ACAD_ALUMNO_CONTRATO WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    SELECT COUNT(1) INTO l_contar FROM DAVID.ACAD_DEUDA_CONTRATO WHERE ID_MATRICULA_DETALLE = l_id_matricula_detalle AND ESTADO = '1' AND ID_SEDE = L_ID_SEDE;
    IF l_contar > 0 THEN
        SELECT NVL(IMPORTE,0) INTO L_IMPORTE_DEUDA FROM DAVID.ACAD_DEUDA_CONTRATO WHERE ID_MATRICULA_DETALLE = l_id_matricula_detalle AND ESTADO = '1' AND ID_SEDE = L_ID_SEDE;
    END IF;
    
    
    
    IF P_ES_VIRTUAL = 'S' THEN
    
        /*SELECT NVL(ABS(SUM(TOTAL)),0) AS TOTAL,SIGN(NVL(SUM(TOTAL),0)) AS SIGNO INTO L_SALDO, L_SIGNO 
        FROM VW_SALES_SALDO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_CLIENTE = l_id_cliente;*/
        
         if  l_codigo_mod = 'V' and l_creditosvar<0 then
        
          l_msgerror := '';
        else
          SELECT
                  NVL(ABS(SUM(TOTAL)),0) AS TOTAL, SIGN(NVL(SUM(TOTAL),0)) AS SIGNO INTO L_SALDO, L_SIGNO 
          FROM (
                  SELECT
                          TOTAL
                  FROM VW_SALES_MOV
                  WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = l_id_cliente AND ID_TIPOVENTA IN (1,2,3)
                  UNION ALL
                  SELECT
                          SUM(IMPORTE)*DECODE(SIGN(SUM(IMPORTE)),1,-1,0) AS TOTAL
                  FROM VW_SALES_ADVANCES
                  WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = l_id_cliente
          );
          if  l_codigo_mod = 'V' then
            SELECT 
            COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS total
            into L_TOTAL_VAR
            FROM MAT_ALUMNO_CONTRATO_DET A, VW_MAT_CRITERIO_SEMESTRE B
            WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
            AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
            AND B.TIENE_HIJO=0;
            
            if L_TOTAL_VAR>0 then
              IF L_SIGNO = 0 OR L_SIGNO = 1 THEN
                l_error := 1;
                l_msgerror := 'Alto! Estado de Cuenta en 0';
                GOTO salida_venta;
              ELSE
                  IF L_SALDO < (l_imp_comtrato-L_IMPORTE_DEUDA) THEN --OJO: SE PERMITE MATRICULAR HASTA CON 5 SOLES DE DEUDA
                      l_error := 1;
                      l_msgerror := 'Alto! Saldo Insuficiente';
                      GOTO salida_venta;
                  END IF;
              END IF;
            end if;
          else
            IF L_SIGNO = 0 OR L_SIGNO = 1 THEN
                l_error := 1;
                l_msgerror := 'Alto! Estado de Cuenta en 0';
                GOTO salida_venta;
            ELSE
                IF L_SALDO < (l_imp_comtrato-L_IMPORTE_DEUDA) THEN --OJO: SE PERMITE MATRICULAR HASTA CON 5 SOLES DE DEUDA
                    l_error := 1;
                    l_msgerror := 'Alto! Saldo Insuficiente';
                    GOTO salida_venta;
                END IF;
            END IF;
          end if;
        end if;
        
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= l_id_comprobante;
        
        if l_contar = 0 then
            l_error := 1;
            l_msgerror := 'Alto! FaltA asignar documento la entidad: '||to_char(P_ID_ENTIDAD)||' el departamento: '||P_ID_DEPTO||' y el comprobante: '||l_id_comprobante;
            GOTO salida_venta;
        END IF;
        if l_contar = 1 then
            SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD=P_ID_ENTIDAD
            AND ID_DEPTO=P_ID_DEPTO
            AND ID_COMPROBANTE= l_id_comprobante;
        else
            SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD=P_ID_ENTIDAD
            AND ID_DEPTO=P_ID_DEPTO
            AND ID_COMPROBANTE= l_id_comprobante
            AND ID_COMPROBANTE_REF = l_id_comprobante_ref;
        end if;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
    ELSE
        L_USER := P_ID_PERSONA; --MATRICULDOR ONLINE
        l_contar := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD, P_ID_DEPTO,l_id_comprobante_ref);
        if l_contar < 1 then
            l_error := 1;
            l_msgerror := 'Alto! No existe un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']'||P_ID_PERSONA||'-'||P_ID_ENTIDAD||'-'||P_ID_DEPTO;
            GOTO salida_venta;
        elsif l_contar > 1 then
            l_error := 1;
            l_msgerror := 'Alto! Existe mas de un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']';
            GOTO salida_venta;
        END IF;
        --***********para produccion quitar
        PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, l_id_comprobante_ref, l_serie,l_correlativo);
    END IF;
    
    --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
    

    SELECT COUNT(1) INTO l_contar FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
    
    if l_contar = 0 then
        l_error := 1;
        l_msgerror := 'Alto! No existe asignado un contador para la entidad '||to_char(P_ID_ENTIDAD)||' y el departamento: '||P_ID_DEPTO;
        GOTO salida_venta;
    END IF;
    
    SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
        
   
    
    PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
    
  
    
    select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;       
    --crear venta
    INSERT INTO VENTA(
            ID_PERSONA,
            ID_CLIENTE,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_ANHO,
            ID_MES,
            ID_COMPROBANTE, 
            ID_IGV, 
            ID_MONEDA, 
            ID_LEYENDA,
            TIPOCAMBIO,
            SERIE, 
            NUMERO, 
            FECHA, 
            ESTADO,
            GLOSA,
            ID_TIPOTRANSACCION,
            ID_CREDITO,
            ID_VOUCHER,
            ID_CLIENTE_LEGAL,
            ID_TIPOVENTA,
            
            ID_PARENT,
            ID_TIPONOTA,
            ID_COMPROBANTE_REF,
            SERIE_REF,
            NUMERO_REF,
            CUOTA
        )VALUES(
            L_USER,
            l_id_cliente,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_ANHO,
            P_ID_MES,
            l_id_comprobante,
            l_igv,
            l_id_moneda,--SOLES
            '1000',
            l_tc,
            l_serie,--SERIE
            l_numero,--NRO
            SYSDATE,
            1,
            l_glosa,
            l_id_tipo_transaccion,
            l_id_credito,
            l_id_voucher,
            l_id_id_cliente_legal,
            l_id_tipoventa,--P_ID_TIPOVENTA
            
            l_id_parent,
            l_id_tiponota,
            l_id_comprobante_ref,
            l_serie_ref,
            l_numero_ref,
            1
    )returning ID_VENTA INTO l_id_venta;
    
    
    INSERT INTO VENTA_DETALLE(
        ID_VDETALLE,
        ID_VENTA,
        ID_TIPOIGV,
        DETALLE, 
        CANTIDAD, 
        PRECIO, 
        PRECIO_BASE, 
        BASE, 
        IGV, 
        DESCUENTO, 
        DC,
        IMPORTE, 
        PRECIO_ME, 
        PRECIO_BASE_ME, 
        PRECIO_ALM_ME, 
        BASE_ME, 
        IGV_ME, 
        DESCUENTO_ME, 
        IMPORTE_ME,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
      )
      select 
        1,
        l_id_venta,
        l_id_tipoigv,
        substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100) as descripcion ,
        1,
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        0,
        --0,
        DECODE(a.dc,'C',ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),0),
        case when l_codigo_mod = 'V' and l_creditosvar<0 then  
          case when a.dc='D' then 'C' else 'D' end
        else 
          a.dc
        end,
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        a.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET
      from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
      where a.id_criterio_semestre=b.id_criterio_semestre
      and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
      AND B.TIENE_HIJO=0
      AND (case when l_conmat1cuota='N' then
          case when b.TIPO_COBRO='U' then 'N' else 'S' end
        else
           'S'
        end)=l_conmat1cuota
        and case when l_cuotas=1 then 'S' else case when B.RESI_MEN=1 then 'N' else 'S' end end = 'S'
        --and case when l_cuotas=1 then 'S' else case when b.codigo in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS') then 'N' else 'S' end end = 'S'
      ORDER BY a.dc, B.ORDEN; 
      
      
   
      if  l_codigo_mod = 'V' and l_creditosvar<0 then
        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA_NC(l_id_venta);
      else
        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);
      end if;
      
      --PARA DEFINIR SI EL PAGO DE COMPROBANTE ES AL CONTADO O CREDITO
      if l_cuotas <> 1 then
        PKG_SALES.SP_VENTA_FORMA_PAGO(l_id_venta,l_id_credito);      
        UPDATE VENTA SET ID_CREDITO = l_id_credito WHERE ID_VENTA=l_id_venta;
      end if;
      
      DELETE FROM MAT_ALUMNO_CONTRATO_ASIENTO WHERE ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO;
      
      if  l_codigo_mod = 'V' and l_creditosvar<0 then
        PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_MATNOTAVAR(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,l_id_venta,'N',l_error,l_msgerror);
      else
        PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_MATRICULA(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,l_id_venta,'N',l_error,l_msgerror);
      end if;
      
      IF l_error > 0 THEN
          l_msgerror := l_msgerror;
          --ROLLBACK;
          GOTO salida_venta;
      END IF;
    
    --DESCUETO ESPECIAL QUE GENERA NOTA DE CREDITO DESABILITADO -- 07/01/2022
    --EJECUTA LA NOTA DE CREDITO SI EL DSCTO CALCULADO ES > 0
    /*IF L_IMP_DSCTO > 0 THEN
        IF P_ID_DEPTO <> '6' THEN --BLOQUEADO PRAR TPP
            PKG_FINANCES_STUDENTS.SP_NOTA_MAT(l_id_cliente,L_USER,l_id_venta,L_DETALLE,L_IMP_DSCTO,P_ES_VIRTUAL, l_error, l_msgerror,L_ID_NOTA);
        END IF;
    END IF;*/ 
     
    if  l_codigo_mod = 'V' and l_creditosvar<0 then

      PKG_SALES_FINANCES.SP_GENERA_ANTICIPOS_NOTAS(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,L_USER,l_id_venta,l_id_parent,l_error,l_msgerror);
    else
       --ejecuta anticipos con venta falta
      SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
      FROM VW_SALES_ADVANCES
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_CLIENTE = l_id_cliente;
      
      IF L_TOTAL_ANTICIPO > 0 THEN
      
          /*IF P_ID_DEPTO <> '6' THEN --BLOQUEADO PRAR TPP
            SELECT TOTAL-COALESCE(L_IMP_DSCTO,0) INTO L_V_TOTAL FROM VENTA
            WHERE ID_VENTA = l_id_venta;
          ELSE
            SELECT TOTAL INTO L_V_TOTAL FROM VENTA
            WHERE ID_VENTA = l_id_venta;
          END IF;*/
          SELECT TOTAL INTO L_V_TOTAL FROM VENTA
          WHERE ID_VENTA = l_id_venta;
          
          IF L_TOTAL_ANTICIPO >= L_V_TOTAL THEN
              L_IMPORTE_ANTICIPO := L_V_TOTAL;
          ELSE
              L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
          END IF;
          PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,L_USER,l_id_venta,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,l_error,l_msgerror,P_TIPO);
          IF l_error > 0 THEN
            l_msgerror := l_msgerror;
            GOTO salida_venta;
        END IF;
      END IF;
    end if;
     --desactivado solo para pruebas
      IF P_ID_ENTIDAD = 7124 THEN
          PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,l_id_comprobante);
          --l_error:=0;
      END IF;
      
      if l_error=0 then
        pkg_finances_students.sp_ins_cuota_alumno(P_ID_ALUMNO_CONTRATO,P_ID_PERSONA,l_error,l_msgerror);
      end if;
     
    <<salida_venta>>
    
    P_ID_VENTA:=l_id_venta;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_GENERAR_VENTA_MATRICULA;
  
   PROCEDURE SP_ACTUALIZAR_TOTAL_VENTA(P_ID_VENTA NUMBER) IS
        l_igv number(10,2);
        l_gravada number(10,2); 
        l_inafecta number(10,2);
        l_exonerada number(10,2); 
        l_gratuita number(10,2); 
        l_descuento number(10,2);
        l_total number(10,2);
        l_gravada_me number(10,2); 
        l_inafecta_me number(10,2); 
        l_exonerada_me number(10,2); 
        l_gratuita_me number(10,2); 
        l_descuento_me number(10,2);
        l_igv_me number(10,2);
        l_total_me number(10,2);
        l_totaldescuento number(10,2):=0;
        l_otros_cargos number(10,2) := 0;
        l_otros_cargos_me number(10,2) := 0;
        BEGIN
            SELECT
                    coalesce(sum(case when t.gravado in('G') then d.BASE else 0 end),0) as gravada, 
                    coalesce(sum(case when t.gravado in('I') then d.BASE else 0 end),0) as inafecta,
                    coalesce(sum(case when t.gravado in('E') then d.BASE else 0 end),0) as exonerado,
                    coalesce(sum(case when d.ID_TIPOIGV in('21') then d.BASE else 0 end),0) as gratuita,
                    ABS(coalesce(sum(d.DESCUENTO),0)),
                    coalesce(sum(d.IGV),0), 
                    coalesce(sum(d.IMPORTE),0),
                    coalesce(sum(case when t.gravado in('G') then d.BASE_ME else 0 end),0) as gravadame, 
                    coalesce(sum(case when t.gravado in('I') then d.BASE_ME else 0 end),0) as inafectame,
                    coalesce(sum(case when t.gravado in('E') then d.BASE_ME else 0 end),0) as exoneradome,
                    coalesce(sum(case when d.ID_TIPOIGV in('21') then d.BASE_ME else 0 end),0) as gratuitame,
                    coalesce(sum(d.DESCUENTO_ME),0),
                    coalesce(sum(d.IGV_ME),0), 
                    coalesce(sum(d.IMPORTE_ME),0),
                    coalesce(sum(d.OTROS_CARGOS),0),
                    coalesce(sum(d.OTROS_CARGOS_ME),0)
                    into
                    l_gravada, 
                    l_inafecta, 
                    l_exonerada, 
                    l_gratuita, 
                    l_descuento,
                    l_igv,
                    l_total,
                    l_gravada_me, 
                    l_inafecta_me, 
                    l_exonerada_me, 
                    l_gratuita_me, 
                    l_descuento_me,
                    l_igv_me,
                    l_total_me,
                    l_otros_cargos,
                    l_otros_cargos_me
            from  VW_VENTA_DETALLE d,tipo_igv t
            where d.ID_TIPOIGV=t.ID_TIPOIGV
            and d.id_venta=P_ID_VENTA;
          
            UPDATE VENTA SET
                            GRAVADA=l_gravada, 
                            INAFECTA=l_inafecta, 
                            EXONERADA=l_exonerada, 
                            GRATUITA=l_gratuita, 
                            DESCUENTO=l_descuento, 
                            IGV=l_igv, 
                            TOTAL=l_total, 
                            GRAVADA_ME=l_gravada_me, 
                            INAFECTA_ME=l_inafecta_me ,
                            EXONERADA_ME=l_exonerada_me, 
                            GRATUITA_ME=l_gratuita_me, 
                            DESCUENTO_ME= l_gratuita_me,
                            IGV_ME=l_igv_me, 
                            TOTAL_ME=l_total_me,
                            OTROS_CARGOS = l_otros_cargos,
                            OTROS_CARGOS_ME = l_otros_cargos_me
            WHERE ID_VENTA=P_ID_VENTA;
          
    END SP_ACTUALIZAR_TOTAL_VENTA;
    PROCEDURE SP_ACTUALIZAR_TOTAL_VENTA_NC(P_ID_VENTA NUMBER) IS
        l_igv number(10,2);
        l_gravada number(10,2); 
        l_inafecta number(10,2);
        l_exonerada number(10,2); 
        l_gratuita number(10,2); 
        l_descuento number(10,2);
        l_total number(10,2);
        l_gravada_me number(10,2); 
        l_inafecta_me number(10,2); 
        l_exonerada_me number(10,2); 
        l_gratuita_me number(10,2); 
        l_descuento_me number(10,2);
        l_igv_me number(10,2);
        l_total_me number(10,2);
        l_totaldescuento number(10,2):=0;
        l_otros_cargos number(10,2) := 0;
        l_otros_cargos_me number(10,2) := 0;
        BEGIN
            SELECT
                    coalesce(sum(case when t.gravado in('G') then d.BASE else 0 end),0) as gravada, 
                    coalesce(sum(case when t.gravado in('I') then d.BASE else 0 end),0) as inafecta,
                    coalesce(sum(case when t.gravado in('E') then d.BASE else 0 end),0) as exonerado,
                    coalesce(sum(case when d.ID_TIPOIGV in('21') then d.BASE else 0 end),0) as gratuita,
                    ABS(coalesce(sum(d.DESCUENTO),0)),
                    coalesce(sum(d.IGV),0), 
                    coalesce(sum(d.IMPORTE),0),
                    coalesce(sum(case when t.gravado in('G') then d.BASE_ME else 0 end),0) as gravadame, 
                    coalesce(sum(case when t.gravado in('I') then d.BASE_ME else 0 end),0) as inafectame,
                    coalesce(sum(case when t.gravado in('E') then d.BASE_ME else 0 end),0) as exoneradome,
                    coalesce(sum(case when d.ID_TIPOIGV in('21') then d.BASE_ME else 0 end),0) as gratuitame,
                    coalesce(sum(d.DESCUENTO_ME),0),
                    coalesce(sum(d.IGV_ME),0), 
                    coalesce(sum(d.IMPORTE_ME),0),
                    coalesce(sum(d.OTROS_CARGOS),0),
                    coalesce(sum(d.OTROS_CARGOS_ME),0)
                    into
                    l_gravada, 
                    l_inafecta, 
                    l_exonerada, 
                    l_gratuita, 
                    l_descuento,
                    l_igv,
                    l_total,
                    l_gravada_me, 
                    l_inafecta_me, 
                    l_exonerada_me, 
                    l_gratuita_me, 
                    l_descuento_me,
                    l_igv_me,
                    l_total_me,
                    l_otros_cargos,
                    l_otros_cargos_me
            from  VW_VENTA_DETALLE_NC d,tipo_igv t
            where d.ID_TIPOIGV=t.ID_TIPOIGV
            and d.id_venta=P_ID_VENTA;
          
            UPDATE VENTA SET
                            GRAVADA=l_gravada, 
                            INAFECTA=l_inafecta, 
                            EXONERADA=l_exonerada, 
                            GRATUITA=l_gratuita, 
                            DESCUENTO=l_descuento, 
                            IGV=l_igv, 
                            TOTAL=l_total, 
                            GRAVADA_ME=l_gravada_me, 
                            INAFECTA_ME=l_inafecta_me ,
                            EXONERADA_ME=l_exonerada_me, 
                            GRATUITA_ME=l_gratuita_me, 
                            DESCUENTO_ME= l_gratuita_me,
                            IGV_ME=l_igv_me, 
                            TOTAL_ME=l_total_me,
                            OTROS_CARGOS = l_otros_cargos,
                            OTROS_CARGOS_ME = l_otros_cargos_me
            WHERE ID_VENTA=P_ID_VENTA;
          
    END SP_ACTUALIZAR_TOTAL_VENTA_NC;
    PROCEDURE SP_GENERAR_ASIENTO_MATRICULA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number;
        l_id_tipoorigen number:=1; --venta
        l_fondo varchar2(10):='10';
        l_serie varchar2(10);
        l_numero varchar2(20);
        l_fecha DATE;
        l_voucher number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_glosa varchar2(100);
        l_nombre varchar2(100);
    BEGIN
      
      SELECT SERIE, NUMERO, FECHA,ID_VOUCHER, GLOSA, FC_NOMBRE_PERSONA(ID_CLIENTE) INTO l_serie,l_numero,l_fecha, l_voucher, l_glosa, l_nombre FROM VENTA WHERE ID_VENTA=P_ID_VENTA;
      
      insert into MAT_ALUMNO_CONTRATO_ASIENTO(
        ID_ALUMNO_CONTRATO_ASIENTO,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET,
        ID_TIPOPLAN,
        ID_CUENTAAASI,
        ID_RESTRICCION,
        ID_ENTIDAD,
        ID_DEPTO,
        ID_CTACTE,
        PORCENTAJE,
        IMPORTE,
        GLOSA
      )
      SELECT 
        (row_number() OVER( ORDER BY A.ID_CRITERIO_SEMESTRE ASC ))  AS items,
        A.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET,
        b.ID_TIPOPLAN,
        B.ID_CUENTAAASI,
        B.ID_RESTRICCION,
        P_ID_ENTIDAD,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CTACTE,
        b.porcentaje,
        (CASE WHEN A.DC='C' THEN A.IMPORTE*(-1) ELSE A.IMPORTE END)*(b.porcentaje/100),
        a.DESCRIPCION
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;

      
      INSERT INTO CONTA_ASIENTO (
        ID_TIPOORIGEN,
        ID_ORIGEN, 
        FONDO,
        DEPTO,
        CUENTA, 
        CUENTA_CTE,
        RESTRICCION,
        IMPORTE,
        DESCRIPCION,
        MEMO,
        VOUCHER, 
        PARENT_ID,
        AGRUPA
        )
        SELECT 
        l_id_tipoorigen,
        VD.ID_VDETALLE,
        l_fondo,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CUENTAAASI,
        B.ID_CTACTE,
        B.ID_RESTRICCION,
        (CASE WHEN b.TIPO_DC='C' THEN VD.IMPORTE*(-1) ELSE VD.IMPORTE END)*(b.porcentaje/100),
        /*(CASE b.TIPO_DC WHEN 'D' THEN P_ID_ENTIDAD||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
        ELSE
            P_ID_ENTIDAD||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
        END),*/
        DECODE(VD.DC,'D',
            (CASE b.TIPO_DC WHEN 'D' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
            END),
            (CASE b.TIPO_DC WHEN 'C' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||' '||to_char(l_fecha,'DD/MM/YYYY')
            END)
        ),
        (to_char(l_id_tipoorigen) || '-' || to_char(VD.ID_VDETALLE)),
        l_voucher,
        NULL,
        --DECODE(b.TIPO_DC,'C','N','S')
        DECODE(VD.DC,'D',DECODE(b.TIPO_DC,'C','N','S'),DECODE(b.TIPO_DC,'C','S','N')) AS AGRUPA
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b, VENTA_DETALLE VD
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        AND A.ID_ALUMNO_CONTRATO=VD.ID_ALUMNO_CONTRATO
        AND A.ID_ALUMNO_CONTRATO_DET=VD.ID_ALUMNO_CONTRATO_DET
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND VD.ID_VENTA =P_ID_VENTA
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;
                          
      
      SELECT COUNT(1) INTO l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
        --ANALIZAR UREGTNE
        
        if l_contar=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 01';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
          
          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero: D='||l_debito||', C='||l_credito;
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_GENERAR_ASIENTO_MATRICULA;
    PROCEDURE SP_GENERAR_ASIENTO_MATNOTAVAR(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number;
        l_id_tipoorigen number:=1; --venta
        l_fondo varchar2(10):='10';
        l_serie varchar2(10);
        l_numero varchar2(20);
        l_fecha DATE;
        l_voucher number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_glosa varchar2(100);
        l_nombre varchar2(100);
    BEGIN
      
      SELECT SERIE, NUMERO, FECHA,ID_VOUCHER, GLOSA, FC_NOMBRE_PERSONA(ID_CLIENTE) INTO l_serie,l_numero,l_fecha, l_voucher, l_glosa, l_nombre FROM VENTA WHERE ID_VENTA=P_ID_VENTA;
      
      /*insert into MAT_ALUMNO_CONTRATO_ASIENTO(
        ID_ALUMNO_CONTRATO_ASIENTO,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET,
        ID_TIPOPLAN,
        ID_CUENTAAASI,
        ID_RESTRICCION,
        ID_ENTIDAD,
        ID_DEPTO,
        ID_CTACTE,
        PORCENTAJE,
        IMPORTE,
        GLOSA
      )
      SELECT 
        (row_number() OVER( ORDER BY A.ID_CRITERIO_SEMESTRE ASC ))  AS items,
        A.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET,
        b.ID_TIPOPLAN,
        B.ID_CUENTAAASI,
        B.ID_RESTRICCION,
        P_ID_ENTIDAD,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CTACTE,
        b.porcentaje,
        (CASE WHEN A.DC='D' THEN abs(A.IMPORTE)*(-1) ELSE abs(A.IMPORTE) END)*(b.porcentaje/100),
        a.DESCRIPCION
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;*/

      
      INSERT INTO CONTA_ASIENTO (
        ID_TIPOORIGEN,
        ID_ORIGEN, 
        FONDO,
        DEPTO,
        CUENTA, 
        CUENTA_CTE,
        RESTRICCION,
        IMPORTE,
        DESCRIPCION,
        MEMO,
        VOUCHER, 
        PARENT_ID,
        AGRUPA
        )
        SELECT 
        l_id_tipoorigen,
        VD.ID_VDETALLE,
        l_fondo,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CUENTAAASI,
        B.ID_CTACTE,
        B.ID_RESTRICCION,
        (CASE WHEN b.TIPO_DC='D' THEN VD.IMPORTE*(-1) ELSE VD.IMPORTE END)*(b.porcentaje/100),
        DECODE(VD.DC,'D',
            (CASE b.TIPO_DC WHEN 'C' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
            END),
            (CASE b.TIPO_DC WHEN 'D' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||' '||to_char(l_fecha,'DD/MM/YYYY')
            END)
        ),
        (to_char(l_id_tipoorigen) || '-' || to_char(VD.ID_VDETALLE)),
        l_voucher,
        NULL,
        --DECODE(b.TIPO_DC,'C','N','S')
        DECODE(VD.DC,'C',DECODE(b.TIPO_DC,'C','N','S'),DECODE(b.TIPO_DC,'D','S','N')) AS AGRUPA
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b, VENTA_DETALLE VD
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        AND A.ID_ALUMNO_CONTRATO=VD.ID_ALUMNO_CONTRATO
        AND A.ID_ALUMNO_CONTRATO_DET=VD.ID_ALUMNO_CONTRATO_DET
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND VD.ID_VENTA =P_ID_VENTA
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;
                          
      
      SELECT COUNT(1) INTO l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
        --ANALIZAR UREGTNE
        
        if l_contar=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 02';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
          
          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_GENERAR_ASIENTO_MATNOTAVAR;
    
    PROCEDURE SP_COPIAR_CRITERIO_SEMESTRE(P_ID_SEMESTRE_PROGRAMA_ORI NUMBER, P_ID_SEMESTRE_PROGRAMA_DES LONG, P_INDICADOR VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      PP_ID_SEMESTRE_PROGRAMA_DES long:=P_ID_SEMESTRE_PROGRAMA_DES||'|';
      
      l_1 number;
      l_id_semestre_programa_des number;
      l_id_criterio_semestre number;
      cursor curcri is
       SELECT 
            ID_CRITERIO_SEMESTRE,
            ID_CRITERIO,
            IMPORTE,
            FORMULA,
            TIPO_PROCESO,
            TIPO_VALOR,
            ESTADO,
            ID_PROCEDURE
          FROM MAT_CRITERIO_SEMESTRE 
          WHERE ID_SEMESTRE_PROGRAMA=P_ID_SEMESTRE_PROGRAMA_ORI
          and ESTADO='1'
          AND ID_CRITERIO NOT IN(
            SELECT ID_CRITERIO
            FROM MAT_CRITERIO_SEMESTRE 
            WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
          );
        
                 
    BEGIN
    
      if P_INDICADOR='A' THEN
        PKG_FINANCES_STUDENTS.SP_COPIAR_ASIENTO(P_ID_SEMESTRE_PROGRAMA_ORI,P_ID_SEMESTRE_PROGRAMA_DES,l_error,l_msgerror);
      else
        LOOP
            l_error:=0; 
            l_1 := instr(PP_ID_SEMESTRE_PROGRAMA_DES, '|' );
            exit when nvl(l_1,0) = 0;
            
            select cast(trim(substr(PP_ID_SEMESTRE_PROGRAMA_DES,1, l_1-1)) as number) into l_id_semestre_programa_des from dual;
            
            if P_INDICADOR='D' THEN
            
              SELECT COUNT(*) INTO l_contar FROM MAT_CONCEPTO_ASIGN_ALUM 
              WHERE ID_CRITERIO_SEMESTRE IN(
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              IF l_contar>0 then
                l_error:=1; --descuadre de asiento
                l_msgerror:='Esta asociado a la asignacíon de contrato detalle';
                exit when l_contar>0;
              END IF;
              
              SELECT COUNT(*) INTO l_contar FROM MAT_ALUMNO_CONTRATO_DET 
              WHERE ID_CRITERIO_SEMESTRE IN(
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              IF l_contar>0 then
                l_error:=1; --descuadre de asiento
                l_msgerror:='Esta asignado a detalle contrato';
                exit when l_contar>0;
              
              END IF;
              
             
              
              DELETE FROM MAT_CONCEPTO_ASIGN_ALUM 
              WHERE ID_CRITERIO_SEMESTRE IN(
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              
              DELETE FROM MAT_ALUMNO_CONTRATO_DET 
              WHERE ID_CRITERIO_SEMESTRE IN(
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              
              DELETE FROM MAT_CRITERIO_SEMESTRE_ASIENTO 
              WHERE ID_CRITERIO_SEMESTRE IN(
                SELECT ID_CRITERIO_SEMESTRE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              
              DELETE FROM MAT_CRITERIO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des;
              
             
            END IF; 
            
            FOR cur in curcri LOOP
              BEGIN
              
                SELECT COUNT(*) INTO l_contar FROM MAT_CRITERIO_SEMESTRE
                WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
                AND ID_CRITERIO=CUR.ID_CRITERIO;
                
                IF l_contar=0 THEN
                  INSERT INTO MAT_CRITERIO_SEMESTRE(
                    ID_SEMESTRE_PROGRAMA,
                    ID_CRITERIO,
                    IMPORTE,
                    FORMULA,
                    TIPO_PROCESO,
                    TIPO_VALOR,
                    ESTADO,
                    ID_PROCEDURE
                  )values(
                    l_id_semestre_programa_des,
                    cur.ID_CRITERIO,
                    cur.IMPORTE,
                    cur.FORMULA,
                    cur.TIPO_PROCESO,
                    cur.TIPO_VALOR,
                    cur.ESTADO,
                    cur.ID_PROCEDURE
                  ) RETURNING ID_CRITERIO_SEMESTRE INTO l_id_criterio_semestre;
                ELSE
                  SELECT ID_CRITERIO_SEMESTRE INTO l_id_criterio_semestre FROM MAT_CRITERIO_SEMESTRE
                  WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
                  AND ID_CRITERIO=CUR.ID_CRITERIO;
                END IF;
                
                DELETE FROM MAT_CRITERIO_SEMESTRE_ASIENTO WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
                
                              
                insert into MAT_CRITERIO_SEMESTRE_ASIENTO(
                  ID_CRITERIO_SEMESTRE_ASIENTO,
                  ID_TIPOPLAN,
                  ID_CUENTAAASI,
                  ID_RESTRICCION,
                  ID_CRITERIO_SEMESTRE,
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_CTACTE,
                  PORCENTAJE,
                  FECHA_INICIO,
                  FECHA_FIN,
                  ES_EAP,
                  TIPO_DC
                )
                SELECT 
                  (row_number() OVER( ORDER BY ID_CRITERIO_SEMESTRE ASC ))  AS items,
                  ID_TIPOPLAN,
                  ID_CUENTAAASI,
                  ID_RESTRICCION,
                  l_id_criterio_semestre,
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_CTACTE,
                  PORCENTAJE,
                  FECHA_INICIO,
                  FECHA_FIN,
                  ES_EAP,
                  TIPO_DC
                FROM MAT_CRITERIO_SEMESTRE_ASIENTO
                WHERE ID_CRITERIO_SEMESTRE = cur.ID_CRITERIO_SEMESTRE;
             
              END;     
            END LOOP;
            
         
            PP_ID_SEMESTRE_PROGRAMA_DES := substr(PP_ID_SEMESTRE_PROGRAMA_DES, l_1+1 ); 
        END LOOP;
      
      end if;
      
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_COPIAR_CRITERIO_SEMESTRE;
    
    PROCEDURE SP_COPIAR_ASIENTO(P_ID_SEMESTRE_PROGRAMA_ORI NUMBER, P_ID_SEMESTRE_PROGRAMA_DES LONG,P_ERROR OUT number,P_MSGERROR out varchar) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      PP_ID_SEMESTRE_PROGRAMA_DES long:=P_ID_SEMESTRE_PROGRAMA_DES||'|';
      
      l_1 number;
      l_id_semestre_programa_des number;
      l_id_criterio_semestre number;
      cursor curcri is
       SELECT 
            ID_CRITERIO_SEMESTRE,
            ID_CRITERIO,
            IMPORTE,
            FORMULA,
            TIPO_PROCESO,
            TIPO_VALOR,
            ESTADO,
            ID_PROCEDURE
          FROM MAT_CRITERIO_SEMESTRE 
          WHERE ID_SEMESTRE_PROGRAMA=P_ID_SEMESTRE_PROGRAMA_ORI
          ORDER BY ID_CRITERIO_SEMESTRE;
        
                 
    BEGIN
    
      LOOP
          l_error:=0; 
          l_1 := instr(PP_ID_SEMESTRE_PROGRAMA_DES, '|' );
          exit when nvl(l_1,0) = 0;
          
          select cast(trim(substr(PP_ID_SEMESTRE_PROGRAMA_DES,1, l_1-1)) as number) into l_id_semestre_programa_des from dual;
          
          
          
          FOR cur in curcri LOOP
            BEGIN
            
              SELECT COUNT(*) INTO l_contar FROM MAT_CRITERIO_SEMESTRE
              WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              AND ID_CRITERIO=CUR.ID_CRITERIO;
              
              IF l_contar>0 THEN
               
                SELECT ID_CRITERIO_SEMESTRE INTO l_id_criterio_semestre FROM MAT_CRITERIO_SEMESTRE
                WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
                AND ID_CRITERIO=CUR.ID_CRITERIO;
              
              
               DELETE FROM MAT_CRITERIO_SEMESTRE_ASIENTO WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
              
                            
              insert into MAT_CRITERIO_SEMESTRE_ASIENTO(
                ID_CRITERIO_SEMESTRE_ASIENTO,
                ID_TIPOPLAN,
                ID_CUENTAAASI,
                ID_RESTRICCION,
                ID_CRITERIO_SEMESTRE,
                ID_ENTIDAD,
                ID_DEPTO,
                ID_CTACTE,
                PORCENTAJE,
                FECHA_INICIO,
                FECHA_FIN,
                ES_EAP,
                TIPO_DC
              )
              SELECT 
                (row_number() OVER( ORDER BY ID_CRITERIO_SEMESTRE ASC ))  AS items,
                ID_TIPOPLAN,
                ID_CUENTAAASI,
                ID_RESTRICCION,
                l_id_criterio_semestre,
                ID_ENTIDAD,
                ID_DEPTO,
                ID_CTACTE,
                PORCENTAJE,
                FECHA_INICIO,
                FECHA_FIN,
                ES_EAP,
                TIPO_DC
              FROM MAT_CRITERIO_SEMESTRE_ASIENTO
              WHERE ID_CRITERIO_SEMESTRE = cur.ID_CRITERIO_SEMESTRE;
            end if;
            END;     
          END LOOP;
          
       
          PP_ID_SEMESTRE_PROGRAMA_DES := substr(PP_ID_SEMESTRE_PROGRAMA_DES, l_1+1 ); 
      END LOOP;
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_COPIAR_ASIENTO;
    
    PROCEDURE SP_ELIMINAR_CRITERIO_SEMESTRE(P_ID_CRITERIO_SEMESTRE NUMBER, P_ERROR OUT number,P_MSGERROR out varchar) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_contar1 number;
      l_id_parent number;
      l_id_semestre_programa number;
    BEGIN
      
      SELECT COUNT(*) INTO l_contar FROM  MAT_CONCEPTO_ASIGN_ALUM WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
      SELECT COUNT(*) INTO l_contar1 FROM  MAT_ALUMNO_CONTRATO_DET WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
      
      if l_contar=0 and l_contar1=0 then
        SELECT COUNT(*) INTO l_contar FROM  VW_MAT_CRITERIO_SEMESTRE WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE AND TIENE_HIJO>0;
        IF l_contar> 0 THEN
          SELECT id_criterio,id_semestre_programa INTO l_id_parent,l_id_semestre_programa FROM  VW_MAT_CRITERIO_SEMESTRE WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE AND TIENE_HIJO>0;
          
          
          delete from MAT_CRITERIO_SEMESTRE_ASIENTO where id_criterio_semestre in(
            select id_criterio_semestre from VW_MAT_CRITERIO_SEMESTRE 
            where id_parent=l_id_parent 
            and ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
          );
          
          delete from MAT_CRITERIO_SEMESTRE where id_criterio_semestre in(
            select id_criterio_semestre from VW_MAT_CRITERIO_SEMESTRE 
            where id_parent=l_id_parent 
            and ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
          );
          
           
        END IF;
        
        delete from MAT_CRITERIO_SEMESTRE_ASIENTO where id_criterio_semestre=P_ID_CRITERIO_SEMESTRE;
        
        delete from MAT_CRITERIO_SEMESTRE where id_criterio_semestre=P_ID_CRITERIO_SEMESTRE;
      else
        l_error:=1;
        l_msgerror:='Ya esta asociado al detalle contrato';
      end if;
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_ELIMINAR_CRITERIO_SEMESTRE;
    
    --NEW STORES
    
    PROCEDURE SP_GENERAR_TRANSF_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_NRO_CUOTA NUMBER,P_TIPO_COBRO VARCHAR2,P_ID_TRANSFERENCIA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
    IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      L_DOCUMENTO NUMBER :=0;
      l_tc NUMBER(10,3);
      l_id_moneda number;
      l_id_moneda_tc number;
      l_tipo_alumno varchar2(5);
      L_ID_TRANSFERENCIA NUMBER :=0;
      l_id_tipotransaccion number:=null;--pendiente
      l_id_dinamica number:=null;--pendiente
      l_id_cliente number;
      l_glosa varchar2(100):='';
      l_automatico varchar2(2);
      L_ID_PERSONA_V NUMBER;
      l_id_voucher NUMBER :=0;
      
      l_serie varchar2(5);
      l_correlativo number;
      l_numero varchar2(15);
      l_id_planpago_semestre number;
      l_cuotas number(10,2);  
      l_id number;
      l_id_semestre_programa number;
      l_semestre varchar2(20);
      l_total NUMBER(10,2);
      l_id_tipoasiento varchar2(10):= 'RV';
      l_nro_cuota number;
      l_tipo_cobro varchar2(1);
      l_id_tipoventa number;
      l_nom_nivel_ensenanza varchar2(300);
    BEGIN
    
      SELECT ID_PERSONA, TIPO_ALUMNO,ID_PLANPAGO_SEMESTRE, ID_SEMESTRE_PROGRAMA
      INTO l_id_cliente,l_tipo_alumno,l_id_planpago_semestre,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      SELECT 
      b.SEMESTRE into l_semestre
      FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
      WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
      AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      
       SELECT 
        D.NOMBRE,d.ID_TIPOVENTA into l_nom_nivel_ensenanza,l_id_tipoventa
        FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D,DAVID.ACAD_SEMESTRE B
        WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
        AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
        and  A.ID_SEMESTRE=B.ID_SEMESTRE
        AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      IF l_tipo_alumno <>'B18' THEN
        l_error :=1;
        l_msgerror := 'Alto! El alumno no es de beca 18';
        goto salida_transferencia;
      END IF;
      
      select C.CUOTAS into l_cuotas
      from MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      where B.ID_PLANPAGO=C.ID_PLANPAGO
      and b.ID_PLANPAGO_SEMESTRE=l_id_planpago_semestre;
    
      SELECT 
                COUNT(A.ID) INTO l_contar
        FROM CONTA_DOCUMENTO_IP_USER A, CONTA_DOCUMENTO_IP B, CONTA_DOCUMENTO C
        WHERE A.ID_DOCIP = B.ID_DOCIP
        AND B.ID_DOCUMENTO = C.ID_DOCUMENTO
        AND A.ID = P_ID_PERSONA
        AND C.ID_COMPROBANTE = '00'
        AND C.ID_ENTIDAD = P_ID_ENTIDAD
        AND C.ID_DEPTO = P_ID_DEPTO;
        
      IF l_contar = 0 THEN
        l_error :=1;
        l_msgerror := 'Alto! El usuario no tiene asignado un punto de impresión para el tipo de documento: 00';
        goto salida_transferencia;
      END IF;
      
      if l_id_tipoventa is null then
        l_id_tipoventa:=1;
      end if;
      
      IF P_ID_DEPTO = '1' THEN 
          l_id_tipoasiento:= 'RV';
      ELSIF P_ID_DEPTO = '5' THEN
          l_id_tipoasiento:= 'RVJ';
      ELSIF P_ID_DEPTO = '6' THEN
          l_id_tipoasiento:= 'RVT';
      ELSIF P_ID_DEPTO = '8' THEN
          l_id_tipoasiento:= 'RVS';
      END IF;
      
      SELECT   count(*) into l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;
       
      if l_contar=0 then
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!:Falta configurar Voucher de Transferencia'||to_char(P_ID_ANHO);
           goto salida_transferencia;
      end if;  
      
      select AUTOMATICO into l_automatico 
      from CONTA_VOUCHER_CONFIG  
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;  

      if l_automatico='S' then  
          --obtener id del contador para crear el voucher
                   
          SELECT ID_PERSONA INTO L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=P_ID_DEPTO;
    
          PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,7,'','S',L_ID_PERSONA_V,l_id_voucher);
      end if;
      
      if l_id_voucher=0 then
          l_error:=1; --no existe voucher
          l_msgerror:='Alto!: No existe voucher';
          goto salida_transferencia;
      end if;
      
      
      PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,'99',P_ID_ENTIDAD,P_ID_DEPTO, NULL,l_serie,l_correlativo);
      
      IF l_correlativo=0 or l_correlativo is null THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!: No existe serie y número del documento('||l_correlativo||')';
      END IF;
      
      SELECT lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
                
      
        l_id_moneda:=7; --SOLES
        l_id_moneda_tc:=9;

     
        --obtiene tipo de cambio del dia
        select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
 
        if l_tc is null then
            l_tc:=0;
        end if;
        
        IF P_TIPO_COBRO='M' THEN
          --l_glosa:='Matrícula '||l_semestre;
          --||l_nom_nivel_ensenanza||'
          IF P_NRO_CUOTA = 1 THEN
              l_glosa:=substr('1ra armada '||l_semestre,0,200);
          else
            l_glosa:='Matrícula Contado '||l_semestre;
          end if;
          l_nro_cuota :=1;
          l_tipo_cobro := P_TIPO_COBRO;
        ELSIF P_TIPO_COBRO='U' THEN
          --l_glosa:='1ra armada '||l_semestre;
          l_glosa:='Matrícula '||l_semestre;
          l_nro_cuota :=1;
          l_tipo_cobro := P_TIPO_COBRO;
        ELSE --glosa para las armadas
            --l_glosa:='2da armada '||l_semestre;
            --l_nro_cuota :=2;
            --l_tipo_cobro := 'M';
            
            l_nro_cuota := P_NRO_CUOTA;
            l_tipo_cobro := 'M';
            IF P_NRO_CUOTA = 1 THEN
              l_glosa:=substr('1ra Armada '||l_nom_nivel_ensenanza||' '||l_semestre,0,200);
            ELSIF P_NRO_CUOTA = 2 THEN
                l_glosa := '2da Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 3 THEN
                l_glosa := '3ra Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 4 THEN
                l_glosa := '4ta Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 5 THEN
                l_glosa := '5ta Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 6 THEN
                l_glosa := '6ta Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 7 THEN
                l_glosa := '7ma Armada '||l_semestre;
            ELSIF P_NRO_CUOTA = 8 THEN
                l_glosa := '8va Armada '||l_semestre;
            ELSE
                l_glosa := '9na Armada '||l_semestre;
            END IF; 
        END IF;
        

       INSERT INTO VENTA_TRANSFERENCIA(
          ID_ENTIDAD,
          ID_DEPTO,
          ID_ANHO,
          ID_MES,
          ID_PERSONA,
          ID_CLIENTE,
          ID_TIPOTRANSACCION,
          ID_DINAMICA,
          ID_MONEDA,
          TIPOCAMBIO,
          SERIE,
          NUMERO,
          FECHA,
          GLOSA,
          ESTADO,
          ID_VOUCHER,
          ID_TIPOORIGEN,
          ES_ANTICIPO,
          ID_TIPOVENTA,
          CUOTA
      )VALUES(
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_ANHO,
          P_ID_MES,
          P_ID_PERSONA,
          l_id_cliente,
          l_id_tipotransaccion,
          l_id_dinamica,
          l_id_moneda,
          l_tc,
          l_serie,
          l_numero,
          SYSDATE, --to_date('26042021 23:59:00','ddmmyyyy hh24:mi:ss')
          l_glosa,
          1,
          l_id_voucher,
          2,
          'N',
          l_id_tipoventa,
          l_nro_cuota --3RA ARMADA, CAMBIAR CADA ARMADA
          
        ) RETURNING ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA;
        
        --detalle
        
        SELECT COALESCE(MAX(ID_TDETALLE),0) INTO l_id FROM VENTA_TRANSFERENCIA_DETALLE;
        
        INSERT INTO VENTA_TRANSFERENCIA_DETALLE(
        ID_TDETALLE,
        ID_TRANSFERENCIA,
        DC,
        IMPORTE,
        DETALLE,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
        )           
        
        select 
          (row_number() OVER( ORDER BY A.ID_ALUMNO_CONTRATO_DET ASC ))+l_id  AS items,
          L_ID_TRANSFERENCIA,
          a.dc,
          a.importe/decode(b.tipo_cobro,'M',l_cuotas,1),
          substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100) as descripcion,
          A.ID_ALUMNO_CONTRATO,
          A.ID_ALUMNO_CONTRATO_DET
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        AND B.TIENE_HIJO=0
        AND A.APLAZADO IS NULL
        AND b.tipo_cobro = l_tipo_cobro
        ORDER BY a.dc, B.ORDEN; 
        
      
       SELECT
              nvl(sum(decode(dc,'D',(importe),(importe*-1))),0) INTO l_total
      FROM VENTA_TRANSFERENCIA_DETALLE
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;
      
      UPDATE VENTA_TRANSFERENCIA SET
           IMPORTE     =   l_total
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;
      
       PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_TRANSF(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,L_ID_TRANSFERENCIA,l_error,l_msgerror) ; 
      
      <<salida_transferencia>>
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_GENERAR_TRANSF_MAT;
    
    PROCEDURE SP_GENERAR_ASIENTO_TRANSF(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
     l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_id_tipoorigen number:=2; --venta
      l_fondo varchar2(10):='10';
      l_serie varchar2(10);
      l_numero varchar2(20);
      l_fecha DATE;
      l_voucher number;
      l_debito number(10,2);
      l_credito number(10,2);
      l_glosa varchar2(100);
      l_nombre varchar2(100);
    BEGIN
      SELECT SERIE, NUMERO, FECHA,ID_VOUCHER, GLOSA, FC_NOMBRE_PERSONA(ID_CLIENTE) INTO l_serie,l_numero,l_fecha, l_voucher, l_glosa, l_nombre 
      FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA=P_ID_TRANSFERENCIA;
      
      
      INSERT INTO CONTA_ASIENTO (
        ID_TIPOORIGEN,
        ID_ORIGEN, 
        FONDO,
        DEPTO,
        CUENTA, 
        CUENTA_CTE,
        RESTRICCION,
        IMPORTE,
        DESCRIPCION,
        MEMO,
        VOUCHER, 
        PARENT_ID,
        AGRUPA
        )
        SELECT 
        l_id_tipoorigen,
        VD.ID_TRANSFERENCIA,
        l_fondo,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CUENTAAASI,
        B.ID_CTACTE,
        B.ID_RESTRICCION,
        (CASE WHEN b.TIPO_DC='C' THEN VD.IMPORTE*(-1) ELSE VD.IMPORTE END)*(b.porcentaje/100),
        (CASE b.TIPO_DC WHEN 'D' THEN P_ID_ENTIDAD||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
        ELSE
            P_ID_ENTIDAD||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||' '||to_char(l_fecha,'DD/MM/YYYY')
        END),
        (to_char(l_id_tipoorigen) || '-' || to_char(VD.ID_TDETALLE)),
        l_voucher,
        NULL,
        DECODE(b.TIPO_DC,'C','N','S')
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b, VENTA_TRANSFERENCIA_DETALLE VD
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        AND A.ID_ALUMNO_CONTRATO=VD.ID_ALUMNO_CONTRATO
        AND A.ID_ALUMNO_CONTRATO_DET=VD.ID_ALUMNO_CONTRATO_DET
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND VD.ID_TRANSFERENCIA =P_ID_TRANSFERENCIA
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;
        
        
        SELECT COUNT(1) INTO l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN =P_ID_TRANSFERENCIA;
        --ANALIZAR UREGTNE
        
        if l_contar=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO TRANSF B18: No se ha generado el asiento 03';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN=P_ID_TRANSFERENCIA;
          
          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO TRANSF: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO TRANSF: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
      
    END SP_GENERAR_ASIENTO_TRANSF;
    
    PROCEDURE SP_GENERAR_VENTA_MAT_APLAZ(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
    IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_venta number;
    l_id_resp_financiero number;
    l_id_cliente number;
    l_cuotas number(10,2);
    
    l_igv number(10,2);
    l_tc NUMBER(10,3);
    l_id_moneda number;
    l_id_moneda_tc number;
    l_glosa varchar2(80):='';
    
    l_id_tipoasiento varchar2(5);--:='RV';
    l_id_tipovoucher number := 1;
    --l_id_tipoasientodep varchar2(5) := 'MB';
    l_id_tipovoucherdep number := 5;
    l_id_credito number :=2;
    l_id_voucher NUMBER;
    
    l_serie varchar2(5);
    l_correlativo number;
    l_numero varchar2(15);
    l_id_persona_v number;--pendiente
    l_id_documento NUMBER;
    l_id_tipo_transaccion number:= 1;
    l_id_comprobante varchar2(2);
    l_id_id_cliente_legal number;
    l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
    L_USER NUMBER :=4; --MATRICULADOR ONLINE
    L_TOTAL_ANTICIPO NUMBER(10,2);
    L_IMPORTE_ANTICIPO NUMBER(10,2);
    L_V_TOTAL NUMBER(10,2);
    L_DC VARCHAR2(1) :='C'; --DC PARA ANTICIPOS
    L_CODIGO VARCHAR2(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO
    l_estado varchar2(1);
    l_imp_comtrato number(10,2);
    L_SALDO NUMBER(10,2);
    L_SIGNO NUMBER; 
    l_id_semestre_programa number;
    l_semestre varchar2(10);
  BEGIN
    
    SELECT A.ID_PERSONA,C.CUOTAS,A.ID_CLIENTE_LEGAL,A.ID_COMPROBANTE,DECODE(CUOTAS,'1', CONTADO,MATRICULA1CUOTA) IMP_CONTRATO,A.ESTADO,a.ID_SEMESTRE_PROGRAMA
    INTO l_id_cliente,l_cuotas,l_id_id_cliente_legal,l_id_comprobante,l_imp_comtrato,l_estado,l_id_semestre_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    --VALIDA SI EL ALUMNO ESTA MATRICULADO
    l_id_comprobante := '03'; --SIEMPRE BOLETA CURSOS APLAZADOS PARA BECA 18
    /*IF l_estado = '1' THEN 
        l_error:=1;
        l_msgerror:='Alto: Alumno Matriculado';
        GOTO salida_venta_aplaz;
    END IF;*/
    
    
    SELECT 
    b.SEMESTRE into l_semestre
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
    WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    l_id_moneda:=7; --SOLES
    l_id_moneda_tc:=9;
    
    if l_cuotas=1 then
      l_glosa:='Contado '||l_semestre;
      l_id_credito:=1;
    else
      l_glosa:='2da armada '||l_semestre;
      l_id_credito:=2;
    end if;
    
    select FC_IGV(CURRENT_DATE ) into l_igv from dual;
     
    select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
     
    if l_tc is null then
        l_tc:=0;
    end if;
    
    SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe tipo de Asiento (RV) '||P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-'||P_ID_ANHO;
        GOTO salida_venta_aplaz;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||to_char(P_ID_ANHO);
        GOTO salida_venta_aplaz;
    end if;
    
    SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    SELECT   count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO =P_ID_DEPTO
    AND ID_MODULO = '13'--modulo ventas
    AND ID_ANHO = P_ID_ANHO
    and ID_TIPOASIENTO=l_id_tipoasiento
    AND AUTOMATICO='S'
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
            
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
        GOTO salida_venta_aplaz;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(P_ID_ANHO);
        GOTO salida_venta_aplaz;
    end if;
    
    
    --valida asiento
    select count(1) into l_contar from (
        select 
        a.id_criterio_semestre,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='D' ) as contard,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='C' ) as contarc
        from mat_alumno_contrato_det a, vw_mat_criterio_semestre b
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO
        and b.tiene_hijo=0 --EXCLUYE A LOS PARENTS CON HIJOS -MARLO
        and  A.APLAZADO ='S'
        group by a.id_criterio_semestre
      ) z
    where (z.contard=0 or z.contarc=0 or (z.contard + z.contarc)<=1);
    
    if l_contar > 0 then
    --if l_contar = 0 then --modificado por marlo
        l_error := 1;
        l_msgerror := 'Alto! Falta configurar asiento contable de la venta '||P_ID_ALUMNO_CONTRATO;
        GOTO salida_venta_aplaz;
    END IF;
    
    IF P_ES_VIRTUAL = 'S' THEN
    
        SELECT NVL(ABS(SUM(TOTAL)),0) AS TOTAL,SIGN(NVL(SUM(TOTAL),0)) AS SIGNO INTO L_SALDO, L_SIGNO 
        FROM VW_SALES_SALDO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_CLIENTE = l_id_cliente;
        
        --SOLO COMENTADO PARA LA COBRANZA DE CUOTA
        /*IF L_SIGNO = 0 OR L_SIGNO = 1 THEN
            l_error := 1;
            l_msgerror := 'Alto! Estado de Cuenta en 0';
            GOTO salida_venta_aplaz;
        ELSE
            IF L_SALDO < l_imp_comtrato THEN
                l_error := 1;
                l_msgerror := 'Alto! Saldo Insuficiente';
                GOTO salida_venta_aplaz;
            END IF;
        END IF;*/
    
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= l_id_comprobante;
        
        if l_contar = 0 then
            l_error := 1;
            l_msgerror := 'Alto! FaltA asignar documento la entidad: '||to_char(P_ID_ENTIDAD)||' el departamento: '||P_ID_DEPTO||' y el comprobante: '||l_id_comprobante;
            GOTO salida_venta_aplaz;
        END IF;
        
        SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= l_id_comprobante;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
    ELSE
        L_USER := P_ID_PERSONA; --MATRICULDOR ONLINE
        l_contar := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD, P_ID_DEPTO);
        if l_contar < 1 then
            l_error := 1;
            l_msgerror := 'Alto! No existe un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']'||P_ID_PERSONA||'-'||P_ID_ENTIDAD||'-'||P_ID_DEPTO;
            GOTO salida_venta_aplaz;
        elsif l_contar > 1 then
            l_error := 1;
            l_msgerror := 'Alto! Existe mas de un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']';
            GOTO salida_venta_aplaz;
        END IF;
        PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, NULL,l_serie,l_correlativo);
    END IF;
    
    --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
    

    SELECT COUNT(1) INTO l_contar FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
    
    if l_contar = 0 then
        l_error := 1;
        l_msgerror := 'Alto! No existe asignado un contador para la entidad '||to_char(P_ID_ENTIDAD)||' y el departamento: '||P_ID_DEPTO;
        GOTO salida_venta_aplaz;
    END IF;
    
    SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
        
   
    
    PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
    
    select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;       
    --crear venta
    INSERT INTO VENTA(
            ID_PERSONA,
            ID_CLIENTE,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_ANHO,
            ID_MES,
            ID_COMPROBANTE, 
            ID_IGV, 
            ID_MONEDA, 
            ID_LEYENDA,
            TIPOCAMBIO,
            SERIE, 
            NUMERO, 
            FECHA, 
            ESTADO,
            GLOSA,
            ID_TIPOTRANSACCION,
            ID_CREDITO,
            ID_VOUCHER,
            ID_CLIENTE_LEGAL,
            ID_TIPOVENTA
        )VALUES(
            L_USER,
            l_id_cliente,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_ANHO,
            P_ID_MES,
            l_id_comprobante,
            l_igv,
            l_id_moneda,--SOLES
            '1000',
            l_tc,
            l_serie,--SERIE
            l_numero,--NRO
            SYSDATE,
            1,
            l_glosa,
            l_id_tipo_transaccion,
            l_id_credito,
            l_id_voucher,
            l_id_id_cliente_legal,
            P_ID_TIPOVENTA
    )returning ID_VENTA INTO l_id_venta;
    
    
    INSERT INTO VENTA_DETALLE(
        ID_VDETALLE,
        ID_VENTA,
        ID_TIPOIGV,
        DETALLE, 
        CANTIDAD, 
        PRECIO, 
        PRECIO_BASE, 
        BASE, 
        IGV, 
        DESCUENTO, 
        DC,
        IMPORTE, 
        PRECIO_ME, 
        PRECIO_BASE_ME, 
        PRECIO_ALM_ME, 
        BASE_ME, 
        IGV_ME, 
        DESCUENTO_ME, 
        IMPORTE_ME,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
      )
      select 
        1,
        l_id_venta,
        l_id_tipoigv,
        substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100) as descripcion ,
        1,
        a.importe/decode(b.tipo_cobro,'M',l_cuotas,1),
        a.importe/decode(b.tipo_cobro,'M',l_cuotas,1),
        a.importe/decode(b.tipo_cobro,'M',l_cuotas,1),
        0,
        --0,
        DECODE(a.dc,'C',a.importe/decode(b.tipo_cobro,'M',l_cuotas,1),0),
        a.dc,
        a.importe/decode(b.tipo_cobro,'M',l_cuotas,1),
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        a.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET
      from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
      where a.id_criterio_semestre=b.id_criterio_semestre
      and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
      AND B.TIENE_HIJO=0
      AND  A.APLAZADO ='S'
      ORDER BY a.dc, B.ORDEN; 
   
    
      PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta); 
      
      DELETE FROM MAT_ALUMNO_CONTRATO_ASIENTO WHERE ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO;
      
      PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_MATRICULA(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,l_id_venta,'S',l_error,l_msgerror);
      IF l_error > 0 THEN
          l_msgerror := l_msgerror;
          --ROLLBACK;
          GOTO salida_venta_aplaz;
      END IF;
      
      
      IF P_ID_ENTIDAD = 7124 THEN
          PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,l_id_comprobante);
          --l_error:=0;
      END IF;
    
     --ejecuta anticipos con venta falta
    SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
    FROM VW_SALES_ADVANCES
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_CLIENTE = l_id_cliente;
    IF L_TOTAL_ANTICIPO > 0 THEN
        SELECT TOTAL INTO L_V_TOTAL FROM VENTA
        WHERE ID_VENTA = l_id_venta;
        IF L_TOTAL_ANTICIPO >= L_V_TOTAL THEN
            L_IMPORTE_ANTICIPO := L_V_TOTAL;
        ELSE
            L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
        END IF;
        PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,L_USER,l_id_venta,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,l_error,l_msgerror);
        IF l_error > 0 THEN
          l_msgerror := l_msgerror;
          GOTO salida_venta_aplaz;
      END IF;
    END IF;
     
      <<salida_venta_aplaz>>
      
      P_ID_VENTA:=l_id_venta;
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    end SP_GENERAR_VENTA_MAT_APLAZ;
     PROCEDURE SP_GENERAR_TRANSF_MAT_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_TRANSFERENCIA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
    IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      L_DOCUMENTO NUMBER :=0;
      l_tc NUMBER(10,3);
      l_id_moneda number;
      l_id_moneda_tc number;
      l_tipo_alumno varchar2(5);
      L_ID_TRANSFERENCIA NUMBER :=0;
      l_id_tipotransaccion number:= 165; --153;--pendiente
      l_id_dinamica number:= 2505; --743;--pendiente
      l_id_cliente number;
      l_glosa varchar2(100):='';
      l_automatico varchar2(2);
      L_ID_PERSONA_V NUMBER;
      l_id_voucher NUMBER :=0;
      
      l_serie varchar2(5);
      l_correlativo number;
      l_numero varchar2(15);
      l_id_planpago_semestre number;
      l_cuotas number(10,2);  
      l_id number;
      l_id_semestre_programa number;
      l_semestre varchar2(20);
      l_total NUMBER(10,2);
      
        L_TOTAL_ANTICIPO NUMBER(10,2);
        L_IMPORTE_ANTICIPO NUMBER(10,2);
        L_V_TOTAL NUMBER(10,2);
        L_DC VARCHAR2(1) :='C'; --DC PARA ANTICIPOS
        L_CODIGO VARCHAR2(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO
        L_TIPO VARCHAR2(1) := 'T';
        l_conmat1cuota  varchar2(2);
        l_id_tipoasiento  varchar2(5):='RV';
    BEGIN
    
      SELECT ID_PERSONA, TIPO_ALUMNO,ID_PLANPAGO_SEMESTRE, ID_SEMESTRE_PROGRAMA
      INTO l_id_cliente,l_tipo_alumno,l_id_planpago_semestre,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      SELECT 
      b.SEMESTRE into l_semestre
      FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
      WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
      AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      IF l_tipo_alumno  = 'B18' THEN
        l_error :=1;
        l_msgerror := 'Alto! El alumno  es de beca 18';
        goto salida_transf_idec;
      END IF;
      
      select C.CUOTAS,case when C.CUOTAS=1 then 'S' else coalesce(c.conmat1cuota,'S')  end as conmat1cuota into l_cuotas,l_conmat1cuota
      from MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      where B.ID_PLANPAGO=C.ID_PLANPAGO
      and b.ID_PLANPAGO_SEMESTRE=l_id_planpago_semestre;
      
     
    
      SELECT 
                COUNT(A.ID) INTO l_contar
        FROM CONTA_DOCUMENTO_IP_USER A, CONTA_DOCUMENTO_IP B, CONTA_DOCUMENTO C
        WHERE A.ID_DOCIP = B.ID_DOCIP
        AND B.ID_DOCUMENTO = C.ID_DOCUMENTO
        AND A.ID = P_ID_PERSONA
        AND C.ID_COMPROBANTE = '00'
        AND C.ID_ENTIDAD = P_ID_ENTIDAD
        AND C.ID_DEPTO = P_ID_DEPTO;
        
      IF l_contar = 0 THEN
        l_error :=1;
        l_msgerror := 'Alto! El usuario no tiene asignado un punto de impresión para el tipo de documento: 00';
        goto salida_transf_idec;
      END IF;
      
       IF P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '1' THEN 
          l_id_tipoasiento:= 'RV';
          l_id_dinamica:= 2505;
      ELSIF P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '5' THEN
          l_id_tipoasiento:= 'RVJ';
          l_id_dinamica:= 2672;
      ELSIF P_ID_ENTIDAD = 7124 and  P_ID_DEPTO = '6' THEN
          l_id_tipoasiento:= 'RVT';
          l_id_dinamica:= 2806;
      ELSIF P_ID_ENTIDAD = 7124 and  P_ID_DEPTO = '8' THEN
          l_id_tipoasiento:= 'RVS';
          l_id_dinamica:= 2806;
      END IF;
      
    

      SELECT   count(*) into l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;
       
      if l_contar=0 then
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!:Falta configurar Voucher de Transferencia'||to_char(P_ID_ANHO);
           goto salida_transf_idec;
      end if;  
      
      select AUTOMATICO into l_automatico 
      from CONTA_VOUCHER_CONFIG  
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;  

      if l_automatico='S' then  
          --obtener id del contador para crear el voucher
                   
          SELECT ID_PERSONA INTO L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=P_ID_DEPTO;
    
          PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,7,'','S',L_ID_PERSONA_V,l_id_voucher);
      end if;
      
      if l_id_voucher=0 then
          l_error:=1; --no existe voucher
          l_msgerror:='Alto!: No existe voucher';
          goto salida_transf_idec;
      end if;
      
      
      PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,'99',P_ID_ENTIDAD,P_ID_DEPTO,NULL,l_serie,l_correlativo);
      
      IF l_correlativo=0 or l_correlativo is null THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!: No existe serie y número del documento('||l_correlativo||')';
      END IF;
      
      SELECT lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
                
      
        l_id_moneda:=7; --SOLES
        l_id_moneda_tc:=9;

     
        --obtiene tipo de cambio del dia
        select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
 
        if l_tc is null then
            l_tc:=0;
        end if;
        
        
        l_glosa:='Matrícula y 1ra armada IDEC '||l_semestre;
        
        

       INSERT INTO VENTA_TRANSFERENCIA(
          ID_ENTIDAD,
          ID_DEPTO,
          ID_ANHO,
          ID_MES,
          ID_PERSONA,
          ID_CLIENTE,
          ID_TIPOTRANSACCION,
          ID_DINAMICA,
          ID_MONEDA,
          TIPOCAMBIO,
          SERIE,
          NUMERO,
          FECHA,
          GLOSA,
          ESTADO,
          ID_VOUCHER,
          ID_TIPOORIGEN,
          ES_ANTICIPO,
          ID_TIPOVENTA
      )VALUES(
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_ANHO,
          P_ID_MES,
          P_ID_PERSONA,
          l_id_cliente,
          l_id_tipotransaccion,
          l_id_dinamica,
          l_id_moneda,
          l_tc,
          l_serie,
          l_numero,
          SYSDATE,
          l_glosa,
          1,
          l_id_voucher,
          2,
          'N',
          1
        ) RETURNING ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA;
        
        --detalle
        
        SELECT COALESCE(MAX(ID_TDETALLE),0) INTO l_id FROM VENTA_TRANSFERENCIA_DETALLE;
        
        INSERT INTO VENTA_TRANSFERENCIA_DETALLE(
        ID_TDETALLE,
        ID_TRANSFERENCIA,
        DC,
        IMPORTE,
        DETALLE,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
        )           
        
        select 
          (row_number() OVER( ORDER BY A.ID_ALUMNO_CONTRATO ASC ))+l_id  AS items,
          L_ID_TRANSFERENCIA,
          a.dc,
          SUM(a.importe/decode(b.tipo_cobro,'M',l_cuotas,1)),
          l_glosa,
          A.ID_ALUMNO_CONTRATO,
          NULL
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        AND B.TIENE_HIJO=0
        AND (case when l_conmat1cuota='N' then
          case when b.TIPO_COBRO='U' then 'N' else 'S' end
        else
           'S'
        end)=l_conmat1cuota
        and case when l_cuotas=1 then 'S' else case when B.RESI_MEN=1 then 'N' else 'S' end end = 'S'
        --and case when l_cuotas=1 then 'S' else case when b.codigo in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS') then 'N' else 'S' end end = 'S'
        GROUP BY a.dc,A.ID_ALUMNO_CONTRATO
        ORDER BY a.dc; 
        
      
       SELECT
              nvl(sum(decode(dc,'D',(importe),(importe*-1))),0) INTO l_total
      FROM VENTA_TRANSFERENCIA_DETALLE
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;
      
      UPDATE VENTA_TRANSFERENCIA SET
           IMPORTE     =   l_total
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;
        
      --GENNERA ANTICIPO CREDITO AMARRA A LA TRANF
        SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
        FROM VW_SALES_ADVANCES
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_CLIENTE = l_id_cliente;
        IF L_TOTAL_ANTICIPO > 0 THEN
            IF L_TOTAL_ANTICIPO >= l_total THEN
                L_IMPORTE_ANTICIPO := l_total;
            ELSE
                L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
            END IF;
            PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,P_ID_PERSONA,L_ID_TRANSFERENCIA,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,l_error,l_msgerror,L_TIPO);
            IF l_error > 0 THEN
              l_msgerror := l_msgerror;
              GOTO salida_transf_idec;
          END IF;
        END IF;
      
       PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_TRANSF_IDEC(P_ID_ALUMNO_CONTRATO,L_ID_TRANSFERENCIA,l_error,l_msgerror) ; 
      
      <<salida_transf_idec>>
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_GENERAR_TRANSF_MAT_IDEC;
    
    PROCEDURE SP_GENERAR_ASIENTO_TRANSF_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_id_entidad number;
        l_id_depto_transf varchar2(20);
        l_dinamica number:=1516;
        l_id_tipoorigen number:=2;
        l_id_cliente number;
        l_memo varchar2(255);
        l_id_voucher number;
        l_serie varchar2(255);
        l_numero varchar2(255);
        l_glosa varchar2(255);
        
        -- Datos del detalle
        l_id_tdetalle number;
        l_id_venta number;
        --l_id_vdetalle number;
        l_id_articulo number;
        l_id_tipoorigen_vdetalle number;
        l_id_articulo_vdetalle number;
        l_id_vdetalle number;
        l_ddc varchar2(1);
        l_importe number;
        l_detalle varchar2(255);
        
        -- Datos de los asientos de la dinamica
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_unicoctate varchar2(1);
        l_porcentaje number(10,2);
        l_descripcion varchar2(255);
        l_agrupa varchar2(1);
        
        l_importeasiento number(10,2);
        l_importeasiento_me number(10,2);
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        
        -- Validación
        l_cont number;
        
        
        CURSOR CURSOR_TRANSFERENCIA_DETALLE IS		
        --SELECT  ID_TDETALLE,ID_VENTA,ID_ARTICULO,DC, IMPORTE, DETALLE
        select 'D' as DC, sum(case when DC='C' then IMPORTE*(-1) else IMPORTE end) as importe, DETALLE
        FROM VENTA_TRANSFERENCIA_DETALLE
        WHERE ID_TRANSFERENCIA=P_ID_TRANSFERENCIA
        group BY DETALLE;	
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =l_dinamica
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        l_error NUMBER :=0;
        l_msgerror VARCHAR2(100) :='';
        
        l_debito number(10,2);
        l_credito number(10,2);
    BEGIN

        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_TIPOORIGEN, ID_CLIENTE, ID_VOUCHER, SERIE, NUMERO, GLOSA
            INTO l_id_entidad, l_id_depto_transf,l_dinamica, l_id_tipoorigen, l_id_cliente, l_id_voucher, l_serie, l_numero, l_glosa
        FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = P_ID_TRANSFERENCIA;
        
        
        insert into MAT_ALUMNO_CONTRATO_ASIENTO(
        ID_ALUMNO_CONTRATO_ASIENTO,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET,
        ID_TIPOPLAN,
        ID_CUENTAAASI,
        ID_RESTRICCION,
        ID_ENTIDAD,
        ID_DEPTO,
        ID_CTACTE,
        PORCENTAJE,
        IMPORTE,
        GLOSA
      )
      SELECT 
        (row_number() OVER( ORDER BY A.ID_CRITERIO_SEMESTRE ASC ))  AS items,
        A.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET,
        b.ID_TIPOPLAN,
        B.ID_CUENTAAASI,
        B.ID_RESTRICCION,
        l_id_entidad,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CTACTE,
        b.porcentaje,
        (CASE WHEN A.DC='C' THEN A.IMPORTE*(-1) ELSE A.IMPORTE END)*(b.porcentaje/100),
        a.DESCRIPCION
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;
        
        
        SELECT (to_char(l_id_tipoorigen) || '-' || to_char(P_ID_TRANSFERENCIA)) INTO l_memo FROM DUAL;
        
        OPEN CURSOR_TRANSFERENCIA_DETALLE;
        FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_ddc,l_importe,l_detalle;
        WHILE CURSOR_TRANSFERENCIA_DETALLE%FOUND LOOP
            
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            WHILE casi%FOUND LOOP
                select (case 
                            when l_id_indicador='IMPORTE' then l_importe
                      else 0 end)*(l_porcentaje)  into l_importeasiento
                from dual;
                l_importeasiento_me := 0;
                
                l_depto:=null;
                l_cuenta_cte:=null;
                
                
                if l_unico='U' then
                    select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif(l_unico='X') then
                    select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                elsif l_unico='S' THEN -- Si es sesión
                    l_depto := l_id_depto_transf;---
                end if;
                
                if l_unicoctate='U' then
                   select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   if l_cont>0 then
                      select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   end if;
                end if;
                
                --if l_ddc='D' then
                if l_dc = 'C' then
                  -- l_importeasiento:=l_importeasiento;
                  l_importeasiento:=l_importeasiento*(-1);
                -- else
                end if;
                
                select count(*) into l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=P_ID_TRANSFERENCIA
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'C' else 'D' end=l_ddc;
          
        
                 if l_importeasiento<>0 then
                
     
                  if l_cont=0 then
                   

                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    P_ID_TRANSFERENCIA,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                    l_memo,
                    l_id_voucher,
                    null,
                    null,
                    l_agrupa 
                    );
                  else
                  
                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_TRANSFERENCIA
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'C' else 'D' end=l_ddc;
                    
                  end if;
                end if;
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            END LOOP;
            CLOSE casi;

            -- CONTRA PARTIDA
            l_importeasiento := l_importeasiento*-1;
            
            SELECT count(*) INTO l_cont
            FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S';
            
            if l_cont>0 then
              SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
              FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S' AND ROWNUM = 1;
              
              INSERT INTO CONTA_ASIENTO (
                      ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                      CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                      MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                      )VALUES ( 
                      l_id_tipoorigen,
                      P_ID_TRANSFERENCIA,
                      l_fondo,
                      l_depto,
                      l_id_cuentaaasi,
                      l_cuenta_cte,
                      l_id_restriccion,
                      l_importeasiento,
                      '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                      l_memo,
                      l_id_voucher,
                      null,
                      null,
                      l_agrupa 
                      );
                    
            end if;
            
            FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_ddc,l_importe,l_detalle;
        END LOOP;
        CLOSE CURSOR_TRANSFERENCIA_DETALLE; 
        
        
        SELECT COUNT(1) INTO l_cont 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN = P_ID_TRANSFERENCIA;
        --ANALIZAR UREGTNE
        
        if l_cont=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 04 '||l_dinamica;
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN =P_ID_TRANSFERENCIA;
          
          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      
    END SP_GENERAR_ASIENTO_TRANSF_IDEC;
    
    PROCEDURE SP_GENERAR_ASIENTO_TRANSF_IDTM(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_id_entidad number;
        l_id_depto_transf varchar2(20);
        l_dinamica number:=1516;
        l_id_tipoorigen number:=2;
        l_id_cliente number;
        l_memo varchar2(255);
        l_id_voucher number;
        l_serie varchar2(255);
        l_numero varchar2(255);
        l_glosa varchar2(255);
        
        -- Datos del detalle
        l_id_tdetalle number;
        l_id_venta number;
        --l_id_vdetalle number;
        l_id_articulo number;
        l_id_tipoorigen_vdetalle number;
        l_id_articulo_vdetalle number;
        l_id_vdetalle number;
        l_ddc varchar2(1);
        l_importe number;
        l_detalle varchar2(255);
        
        -- Datos de los asientos de la dinamica
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_unicoctate varchar2(1);
        l_porcentaje number(10,2);
        l_descripcion varchar2(255);
        l_agrupa varchar2(1);
        
        l_importeasiento number(10,2);
        l_importeasiento_me number(10,2);
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        
        -- Validación
        l_cont number;
        
        
        CURSOR CURSOR_TRANSFERENCIA_DETALLE IS		
        SELECT  ID_TDETALLE,ID_VENTA,ID_ARTICULO,DC, IMPORTE, DETALLE
        FROM VENTA_TRANSFERENCIA_DETALLE
        WHERE ID_TRANSFERENCIA=P_ID_TRANSFERENCIA
        ORDER BY ID_TDETALLE;	
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =l_dinamica
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        l_error NUMBER :=0;
        l_msgerror VARCHAR2(100) :='';
        
        l_debito number(10,2);
        l_credito number(10,2);
    BEGIN

        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_TIPOORIGEN, ID_CLIENTE, ID_VOUCHER, SERIE, NUMERO, GLOSA
            INTO l_id_entidad, l_id_depto_transf,l_dinamica, l_id_tipoorigen, l_id_cliente, l_id_voucher, l_serie, l_numero, l_glosa
        FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = P_ID_TRANSFERENCIA;
        
                
        
        SELECT (to_char(l_id_tipoorigen) || '-' || to_char(P_ID_TRANSFERENCIA)) INTO l_memo FROM DUAL;
        
        OPEN CURSOR_TRANSFERENCIA_DETALLE;
        FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_id_tdetalle,l_id_venta,l_id_articulo,l_ddc,l_importe,l_detalle;
        WHILE CURSOR_TRANSFERENCIA_DETALLE%FOUND LOOP
            
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            WHILE casi%FOUND LOOP
                select (case 
                            when l_id_indicador='IMPORTE' then l_importe
                      else 0 end)*(l_porcentaje)  into l_importeasiento
                from dual;
                l_importeasiento_me := 0;
                
                l_depto:=null;
                l_cuenta_cte:=null;
                
                
                if l_unico='U' then
                    select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif(l_unico='X') then
                    select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                elsif l_unico='S' THEN -- Si es sesión
                    l_depto := l_id_depto_transf;---
                end if;
                
                if l_unicoctate='U' then
                   select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   if l_cont>0 then
                      select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   end if;
                end if;
                
                --if l_ddc='D' then
                if l_dc = 'C' then
                  -- l_importeasiento:=l_importeasiento;
                  l_importeasiento:=l_importeasiento*(-1);
                -- else
                end if;
                
                select count(*) into l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=P_ID_TRANSFERENCIA
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'C' else 'D' end=l_ddc;
          
        
                 if l_importeasiento<>0 then
                
     
                  if l_cont=0 then
                   
                    dbms_output.put_line('INS '||l_id_cuentaaasi||'-'||l_importeasiento);
                    
                  else
                  
                    dbms_output.put_line('MOD ' ||l_id_cuentaaasi||'-'||l_importeasiento);
                 
                    
                  end if;
                end if;
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            END LOOP;
            CLOSE casi;

            -- CONTRA PARTIDA
            l_importeasiento := l_importeasiento*-1;
            
            SELECT count(*) INTO l_cont
            FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S';
            
            if l_cont>0 then
              SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
              FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S' AND ROWNUM = 1;
              
              dbms_output.put_line('CONTRA '||l_id_cuentaaasi||'-'||l_importeasiento);
                    
            end if;
            
            FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_id_tdetalle,l_id_venta,l_id_articulo,l_ddc,l_importe,l_detalle;
        END LOOP;
        CLOSE CURSOR_TRANSFERENCIA_DETALLE; 
        
        
        
        
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      
    END SP_GENERAR_ASIENTO_TRANSF_IDTM;
    
    PROCEDURE SP_VENTA_MATRICULA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
    is
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_id_venta number;
      l_tipo_alumno varchar2(5);
      l_id_comprobante varchar2(5);
      l_estado varchar2(1);
      l_id_matricula_detalle number;
      l_codigo_mod varchar2(10);
      l_creditosvar number(10,2);
      l_id_semestre_programa number;
      l_id_modalidad_estudio number;
      l_cod_moda_es varchar2(5);
      l_cod_ne varchar2(5);
    begin
      SELECT TIPO_ALUMNO,ID_COMPROBANTE,ESTADO,id_matricula_detalle,creditosvar,id_semestre_programa
      INTO l_tipo_alumno,l_id_comprobante,l_estado,l_id_matricula_detalle,l_creditosvar,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      IF l_estado = '1' THEN 
        l_error:=1;
        l_msgerror:='Alto: Alumno Matriculado';
        GOTO venta_matricula;
     END IF;
     
     select B.CODIGO INTO l_codigo_mod FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;
    
    IF l_codigo_mod = 'V' AND l_creditosvar=0 THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno Regular';
        GOTO venta_matricula;
    END IF;
    
   
    
    SELECT 
   c.id_modalidad_estudio, d.codigo into l_id_modalidad_estudio,l_cod_ne
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D
    WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
    AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    IF l_codigo_mod = 'V' and l_tipo_alumno='B18'  THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno B18 Matriculado';
        GOTO venta_matricula;
    END IF;
    
    select codigo into  l_cod_moda_es from david.tipo_modalidad_estudio where id_modalidad_estudio=l_id_modalidad_estudio;
    
    IF l_codigo_mod = 'V' and l_cod_moda_es='SP'  THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno  Semipresencial';
        GOTO venta_matricula;
    END IF;
    
      DELETE FROM MAT_ALUMNO_CONTRATO_ASIENTO WHERE ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO;
      
      CASE l_tipo_alumno
        WHEN 'RE' THEN
          if l_id_comprobante='99' then
            PKG_FINANCES_STUDENTS.SP_GENERAR_TRANSF_MAT_IDEC(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,l_id_venta,l_error,l_msgerror);
          else
            PKG_FINANCES_STUDENTS.SP_GENERAR_VENTA_MATRICULA(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,l_id_venta,l_error,l_msgerror);
          end if;
        WHEN 'B18' THEN
          if l_cod_ne<>'ID' then
            PKG_FINANCES_STUDENTS.SP_GENERAR_TRANSF_MAT(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,1,'U',l_id_venta,l_error,l_msgerror);
          end if;
          if l_error=0 then
            PKG_FINANCES_STUDENTS.SP_GENERAR_TRANSF_MAT(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,1,'M',l_id_venta,l_error,l_msgerror);
          end if;
          
          if l_error=0 then
            select 
              count(*) into l_contar
            from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
            where a.id_criterio_semestre=b.id_criterio_semestre
            and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            AND B.TIENE_HIJO=0
            AND A.APLAZADO='S';
            
            if l_contar>0 then
             
              PKG_FINANCES_STUDENTS.SP_GENERAR_VENTA_MAT_APLAZ(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,l_id_venta,l_error,l_msgerror);
            end if;
          end if;
          
        ELSE
          l_error:=1;
          l_msgerror:='No se ha generado la venta';
      END CASE;
      if l_error=0 then
        pkg_finances_students.sp_ins_cuota_alumno(P_ID_ALUMNO_CONTRATO,P_ID_PERSONA,l_error,l_msgerror);
      end if;
      <<venta_matricula>>
      P_ID_VENTA:=l_id_venta;
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
      
    END SP_VENTA_MATRICULA;
    
     PROCEDURE SP_VARIACION_REGULAR(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_id_criterio_semestre number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA
    INTO l_id_semestre_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO
      l_id_criterio,
      l_nombre,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    select 
      count(*) into l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;
    
    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        into 
        l_id_criterio_semestre
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='Más de un criterio asignado para cobro de enseñanza';
        goto salida_var_regular;

    end if;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    /*
    SELECT coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
    WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
    and ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;*/
   
    select
            sum(credito_variados)   INTO l_creditos
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO );
          
    
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    if l_creditos<>0 then
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      l_creditos,
      l_importe,
      l_creditos*l_importe,
      l_tipo_valor,
      null);
    end if;
        
    <<salida_var_regular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_VARIACION_REGULAR;
  
  PROCEDURE SP_VARIACION_REGULAR_PLAN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_id_criterio_semestre number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO
      l_id_criterio,
      l_nombre,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    select 
      count(*) into l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;
    
    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        into 
        l_id_criterio_semestre
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='Más de un criterio asignado para cobro de enseñanza';
        goto salida_var_regular;

    end if;
    
    
    SELECT 
      ID_CRITERIO,
      --IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR
      INTO
      l_id_criterio,
      --l_importe,
      l_tipo_proceso,
      l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    --=====
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_var_regular;
    end if;
    
    SELECT  coalesce(IMPORTE,0) into  l_importe  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    --=====
    
    /*
    SELECT coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
    WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
    and ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    */
   
   select
            sum(credito_variados)   INTO l_creditos
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO );
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    if l_creditos<>0 then
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      l_creditos,
      l_importe,
      l_creditos*l_importe,
      l_tipo_valor,
      null);
    end if;
        
    <<salida_var_regular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_VARIACION_REGULAR_PLAN;
  
  PROCEDURE SP_DESC_VARIACION_REG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_tipo_valor VARCHAR2(2);
    l_nombre varchar2(150 byte);
    l_id_tipo_requisito_beca number;
    l_id_semestre NUMBER;
    l_id_plan_programa NUMBER;
    l_codigo VARCHAR2(5);
    l_id_criterio_semestre number;
  BEGIN
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA, ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO
      l_id_criterio,
      l_nombre,
      l_dc 
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    select 
      count(*) into l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;
    
    if l_contar=0 then
       l_error:=1;
        l_msgerror:='No tiene asignado el descuento para el programa';
        goto desc_varia;
    end if;
    
    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        
        into 
        l_id_criterio_semestre
               
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='Más de un criterio asignado para el descuento';
        goto desc_varia;
    end if;
   
    
    SELECT 
        ID_CRITERIO,
        IMPORTE,
        ID_TIPO_REQUISITO_BECA,
        TIPO_VALOR
        INTO
        l_id_criterio,
        l_importe,
        l_id_tipo_requisito_beca,
        l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    if l_id_tipo_requisito_beca is null then
      l_error:=1;
      l_msgerror:='Falta asignar tipo de requisito beca al criterio ' || l_nombre || ' ' ||l_id_criterio || ' ' || P_ID_CRITERIO_SEMESTRE ;
      goto desc_varia;
    end if;
    
    SELECT COUNT(*) INTO l_contar FROM DAVID.SOLICITUD_MAT_ALUM A,DAVID.TIPO_REQUISITO_BECA B
    WHERE A.ID_TIPO_REQUISITO_BECA=B.ID_TIPO_REQUISITO_BECA
    AND A.ID_PERSONA=l_id_persona 
    AND A.ID_TIPO_REQUISITO_BECA=l_id_tipo_requisito_beca
    AND A.ID_SEMESTRE=l_id_semestre
    AND a.id_plan_programa = l_id_plan_programa
    AND A.ESTADO='2';
    
    if l_contar>0 then
      IF l_contar>1 then
        l_error:=1;
        l_msgerror:='Mas de una beca('||l_nombre||') asignado para el mismo alumno';
        goto desc_varia;
      end if;
      SELECT B.NOMBRE,B.CODIGO INTO l_nombre,l_codigo FROM DAVID.SOLICITUD_MAT_ALUM A,DAVID.TIPO_REQUISITO_BECA B
      WHERE A.ID_TIPO_REQUISITO_BECA=B.ID_TIPO_REQUISITO_BECA
      AND A.ID_PERSONA=l_id_persona 
      AND A.ID_TIPO_REQUISITO_BECA=l_id_tipo_requisito_beca
      AND a.id_plan_programa = l_id_plan_programa 
      AND A.ID_SEMESTRE=l_id_semestre
      AND A.ESTADO='2';
      
       SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
       
            

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
    end if;
    <<desc_varia>>
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  
  END SP_DESC_VARIACION_REG;
  
  --cobranza  Cuotas
    PROCEDURE SP_COBRAR_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_CONINTERNADO VARCHAR2,P_NRO_CUOTA NUMBER,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
    is
      l_error number:=0;
      l_msgerror varchar2(200):='Se ha generado correctamente';
      l_contar number;
      l_id_venta number;
      l_tipo_alumno varchar2(5);
      l_id_comprobante varchar2(5);
      l_estado varchar2(1);
      l_id_matricula_detalle number;
      l_codigo_mod varchar2(10);
      L_ID_ALUMNO NUMBER;
      L_CANT NUMBER :=0;

      l_id_semestre_programa number;

    begin
      SELECT TIPO_ALUMNO,ID_COMPROBANTE,ESTADO,id_matricula_detalle,id_semestre_programa
      INTO l_tipo_alumno,l_id_comprobante,l_estado,l_id_matricula_detalle,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      IF l_estado <> '1' THEN 
        l_error:=1;
        l_msgerror:='Alto: Alumno no esta Matriculado';
        GOTO cobrar_cuota;
     END IF;
     
        select B.CODIGO INTO l_codigo_mod FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
        WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
        AND A.id_matricula_detalle=l_id_matricula_detalle;
    
    --if l_codigo_mod<>'R' then -- asi es cobranza regular
    if l_codigo_mod not in ('R','V','E','D') then --DEJA PASARA PARA REGULAR Y VARIACION: EXTRAS Y DIRIGIDOS EN CUOTAS
        l_error:=1;
        l_msgerror:='Alto: No es Regular';
        GOTO cobrar_cuota;
    end if;
    
    
      
      CASE l_tipo_alumno
        WHEN 'RE' THEN
          if l_id_comprobante='99' then
            PKG_FINANCES_STUDENTS.SP_GENERAR_TRANSF_CUOTA_IDEC(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_NRO_CUOTA,l_id_venta,l_error,l_msgerror);
          else
            SELECT ID_PERSONA INTO L_ID_ALUMNO FROM DAVID.ACAD_ALUMNO_CONTRATO WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
            
            /*SELECT COUNT(1) INTO L_CANT FROM MAT_TEST_IDEC WHERE ID_PERSONA = L_ID_ALUMNO;
            IF L_CANT > 0 THEN
                PKG_FINANCES_STUDENTS.SP_GENERAR_TRANSF_CUOTA_IDEC(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,l_id_venta,l_error,l_msgerror);
            ELSE*/
                PKG_FINANCES_STUDENTS.SP_GENERAR_CUOTA(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,P_CONINTERNADO,P_NRO_CUOTA,l_id_venta,l_error,l_msgerror);
            --END IF;
          end if;
        WHEN 'B18' THEN
          
          PKG_FINANCES_STUDENTS.SP_GENERAR_TRANSF_MAT(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_NRO_CUOTA,'C',l_id_venta,l_error,l_msgerror);
         
          
          if l_error=0 then
            select 
              count(*) into l_contar
            from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
            where a.id_criterio_semestre=b.id_criterio_semestre
            and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            AND B.TIENE_HIJO=0
            AND A.APLAZADO='S';
            
            if l_contar>0 then
             
              PKG_FINANCES_STUDENTS.SP_GENERAR_VENTA_MAT_APLAZ(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,l_id_venta,l_error,l_msgerror);
            end if;
          end if;
          
        ELSE
          l_error:=1;
          l_msgerror:='No se ha generado la venta';
      END CASE;
      <<cobrar_cuota>>
      P_ID_VENTA:=l_id_venta;
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
      
    END SP_COBRAR_CUOTA;
    
    PROCEDURE SP_GENERAR_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_CONINTERNADO VARCHAR2,P_NRO_CUOTA NUMBER,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) 
  IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_venta number;
    l_id_resp_financiero number;
    l_id_cliente number;
    l_cuotas number(10,2);
    
    l_igv number(10,2);
    l_tc NUMBER(10,3);
    l_id_moneda number;
    l_id_moneda_tc number;
    l_glosa varchar2(80):='';
    
    l_id_tipoasiento varchar2(5);--:='RV';
    l_id_tipovoucher number := 1;
    --l_id_tipoasientodep varchar2(5) := 'MB';
    --l_id_tipovoucherdep number := 5;
    l_id_credito number :=1;
    l_id_voucher NUMBER;
    
    l_serie varchar2(5);
    l_correlativo number;
    l_numero varchar2(15);
    l_id_persona_v number;--pendiente
    l_id_documento NUMBER;
    l_id_tipo_transaccion number:= 1;
    l_id_comprobante varchar2(2);
    l_id_id_cliente_legal number;
    l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
    L_USER NUMBER :=4; --MATRICULADOR ONLINE
    L_TOTAL_ANTICIPO NUMBER(10,2);
    L_IMPORTE_ANTICIPO NUMBER(10,2);
    L_V_TOTAL NUMBER(10,2);
    L_DC VARCHAR2(1) :='C'; --DC PARA ANTICIPOS
    L_CODIGO VARCHAR2(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO

    l_imp_comtrato number(10,2);
    L_SALDO NUMBER(10,2);
    L_SIGNO NUMBER;
    l_id_semestre_programa number;
    l_semestre varchar2(10);
    P_TIPO VARCHAR2(1) := 'V';
    l_nom_nivel_ensenanza varchar2(150):='-';
    l_id_matricula_detalle number;
    l_codigo_mod varchar2(10);
    l_id_modo_contrato number;
    l_modo_nombre VARCHAR2(150 BYTE);
    l_id_tipoventa number;
    l_creditosvar number(10,2);
    l_id_alumno_contrato_asociado number;
    l_id_parent number;
    l_id_tiponota varchar2(5);
    l_id_comprobante_ref varchar2(5);
    l_serie_ref varchar2(10);
    l_numero_ref varchar2(20);
    l_tipo_alumno varchar2(5);
    l_id_modalidad_estudio number;
    l_cod_moda_es varchar2(5);
    
    l_glosa_vnt varchar2(60) := '2da Armada '; --4ta cuota posgrado 
    l_glosa_vnt_var varchar2(60) := '2da Armada Variacion '; 
    l_numero_armada number :=2;
    l_detalle varchar2(20);
    l_det varchar2(10);
    l_id_planpago_semestre NUMBER;
    L_FECHA_PAGO DATE;
    L_TOTAL NUMBER(10,2);
    L_ID_PROGRAMA_ESTUDIO NUMBER;
    
  BEGIN
  
    IF P_NRO_CUOTA = 2 THEN
        l_glosa_vnt := '2da Armada ';
        l_glosa_vnt_var := '2da Armada Variación ';
        l_det := '2da';
    ELSIF P_NRO_CUOTA = 3 THEN
        l_glosa_vnt := '3ra Armada ';
        l_glosa_vnt_var := '3ra Armada Variación ';
        l_det := '3ra';
    ELSIF P_NRO_CUOTA = 4 THEN
        l_glosa_vnt := '4ta Armada ';
        l_glosa_vnt_var := '4ta Armada Variación ';
        l_det := '4ta';
    ELSIF P_NRO_CUOTA = 5 THEN
        l_glosa_vnt := '5ta Armada ';
        l_glosa_vnt_var := '5ta Armada Variación ';
        l_det := '5ta';
    ELSIF P_NRO_CUOTA = 6 THEN
        l_glosa_vnt := '6ta Armada ';
        l_glosa_vnt_var := '6ta Armada Variación ';
        l_det := '6ta';
    ELSIF P_NRO_CUOTA = 7 THEN
        l_glosa_vnt := '7ma Armada ';
        l_glosa_vnt_var := '7ma Armada Variación ';
        l_det := '7ma';
    ELSIF P_NRO_CUOTA = 8 THEN
        l_glosa_vnt := '8va Armada ';
        l_glosa_vnt_var := '8va Armada Variación ';
        l_det := '8va';
    ELSIF P_NRO_CUOTA = 1 THEN
        l_glosa_vnt := '1ra Armada ';
        l_glosa_vnt_var := '1ra Armada Variación ';
        l_det := '1ra';
    ELSE
        l_glosa_vnt := '9na Armada ';
        l_glosa_vnt_var := '9na Armada Variación ';
        l_det := '9na';
    END IF; 

    SELECT A.ID_PERSONA,C.CUOTAS,A.ID_CLIENTE_LEGAL,A.ID_COMPROBANTE,DECODE(CUOTAS,'1', CONTADO,MATRICULA1CUOTA) IMP_CONTRATO,a.ID_SEMESTRE_PROGRAMA,A.id_matricula_detalle,COALESCE(A.CREDITOSVAR,0),A.id_alumno_contrato_asociado,tipo_alumno,B.ID_PLANPAGO_SEMESTRE
    INTO l_id_cliente,l_cuotas,l_id_id_cliente_legal,l_id_comprobante,l_imp_comtrato,l_id_semestre_programa,l_id_matricula_detalle,l_creditosvar,l_id_alumno_contrato_asociado,l_tipo_alumno,l_id_planpago_semestre
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_PROGRAMA_ESTUDIO INTO L_ID_PROGRAMA_ESTUDIO
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA = l_id_semestre_programa;
 
    if l_cuotas=1 then
       l_error:=1;
       l_msgerror:='Alto: Es contado ';
       GOTO generar_cuota;
    end if;
    l_id_moneda:=7; --SOLES
    l_id_moneda_tc:=9;
    
    SELECT 
    b.SEMESTRE into l_semestre
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
    WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    select B.CODIGO,b.nombre INTO l_codigo_mod,l_modo_nombre FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;
    

    SELECT 
    D.NOMBRE,d.ID_TIPOVENTA into l_nom_nivel_ensenanza,l_id_tipoventa
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D
    WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
    AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;

    if l_id_tipoventa is null then
      l_id_tipoventa:=1;
    end if;
    
    if l_codigo_mod='E' then
        l_detalle :='Extra ';
    elsif l_codigo_mod='D' then
        l_detalle :='Dirigido ';
    else
        l_detalle :='';
    end if;
    --la glosa para variacion y/o Armada
    if l_codigo_mod='V' then
        l_glosa:=substr(l_glosa_vnt_var||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
    else
        l_glosa:=substr(l_glosa_vnt||l_detalle||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
    end if;
    
    
    select FC_IGV(CURRENT_DATE ) into l_igv from dual;
     
    select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
     
    if l_tc is null then
        l_tc:=0;
    end if;
    
    SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe tipo de Asiento (RV) ';
        GOTO generar_cuota;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||to_char(P_ID_ANHO);
        GOTO generar_cuota;
    end if;
    
    SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    SELECT   count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO =P_ID_DEPTO
    AND ID_MODULO = '13'--modulo ventas
    AND ID_ANHO = P_ID_ANHO
    and ID_TIPOASIENTO=l_id_tipoasiento
    AND AUTOMATICO='S'
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
            
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
        GOTO generar_cuota;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(P_ID_ANHO);
        GOTO generar_cuota;
    end if;
    
    
    --valida asiento
    select count(1) into l_contar from (
        select 
        a.id_criterio_semestre,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='D' ) as contard,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='C' ) as contarc
        from mat_alumno_contrato_det a, vw_mat_criterio_semestre b
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO
        and b.tiene_hijo=0 --EXCLUYE A LOS PARENTS CON HIJOS -MARLO
        group by a.id_criterio_semestre
      ) z
    where (z.contard=0 or z.contarc=0 or (z.contard + z.contarc)<=1);
    
    if l_contar > 0 then
    --if l_contar = 0 then --modificado por marlo
        l_error := 1;
        l_msgerror := 'Alto! Falta configurar asiento contable de la venta '||P_ID_ALUMNO_CONTRATO;
        GOTO generar_cuota;
    END IF;
    
    IF l_codigo_mod = 'V' and l_creditosvar<0 then
        select count(1) into l_contar
        from VENTA
        where id_venta in(
        select id_venta from venta_detalle where id_alumno_contrato = l_id_alumno_contrato_asociado and glosa like l_det||'%'--'Mat%2021-1'
        );
        if l_contar = 0 then --modificado por marlo
            l_error := 1;
            l_msgerror := 'Alto! NO hay Documento de Referencia '||P_ID_ALUMNO_CONTRATO;
            GOTO generar_cuota;
        else
            select 
            ID_VENTA,'04',ID_COMPROBANTE,SERIE, NUMERO
            into
            l_id_parent,l_id_tiponota,l_id_comprobante_ref,l_serie_ref,l_numero_ref
            from VENTA
            where id_venta in(
            select id_venta from venta_detalle where id_alumno_contrato = l_id_alumno_contrato_asociado and glosa like l_det||'%'--'Mat%2021-1'
            );
        END IF;
        
    else
        l_id_parent:=null;
        l_id_tiponota:=null;
        l_id_comprobante_ref:=null;
        l_serie_ref:=null;
        l_numero_ref:=null;
    end if;
    
    IF P_ES_VIRTUAL = 'S' THEN
         
          SELECT
                  NVL(ABS(SUM(TOTAL)),0) AS TOTAL, SIGN(NVL(SUM(TOTAL),0)) AS SIGNO INTO L_SALDO, L_SIGNO 
          FROM (
                  SELECT
                          TOTAL
                  FROM VW_SALES_MOV
                  WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = l_id_cliente AND ID_TIPOVENTA IN (1,2,3)
                  UNION ALL
                  SELECT
                          SUM(IMPORTE)*DECODE(SIGN(SUM(IMPORTE)),1,-1,0) AS TOTAL
                  FROM VW_SALES_ADVANCES
                  WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = l_id_cliente
          );
          
          IF L_SIGNO = 0 OR L_SIGNO = 1 THEN
              l_error := 1;
              l_msgerror := 'Alto! Estado de Cuenta en 0';
              GOTO generar_cuota;
          ELSE
              IF L_SALDO < l_imp_comtrato THEN
                  l_error := 1;
                  l_msgerror := 'Alto! Saldo Insuficiente';
                  GOTO generar_cuota;
              END IF;
          END IF;
      
        
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= l_id_comprobante;
        
        if l_contar = 0 then
            l_error := 1;
            l_msgerror := 'Alto! FaltA asignar documento la entidad: '||to_char(P_ID_ENTIDAD)||' el departamento: '||P_ID_DEPTO||' y el comprobante: '||l_id_comprobante;
            GOTO generar_cuota;
        END IF;
        
        SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= l_id_comprobante;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
    ELSE
        L_USER := P_ID_PERSONA; --MATRICULDOR ONLINE
        l_contar := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD, P_ID_DEPTO,l_id_comprobante_ref);
        if l_contar < 1 then
            l_error := 1;
            l_msgerror := 'Alto! No existe un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']'||P_ID_PERSONA||'-'||P_ID_ENTIDAD||'-'||P_ID_DEPTO;
            GOTO generar_cuota;
        elsif l_contar > 1 then
            l_error := 1;
            l_msgerror := 'Alto! Existe mas de un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']';
            GOTO generar_cuota;
        END IF;
        --***********para produccion quitar
        --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
        PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO,l_id_comprobante_ref,l_serie,l_correlativo);
    END IF;
    
    --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
    

    SELECT COUNT(1) INTO l_contar FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
    
    if l_contar = 0 then
        l_error := 1;
        l_msgerror := 'Alto! No existe asignado un contador para la entidad '||to_char(P_ID_ENTIDAD)||' y el departamento: '||P_ID_DEPTO;
        GOTO generar_cuota;
    END IF;
    
    SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
        
   
    
    PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
   
    IF l_id_comprobante = '01' THEN
        l_id_credito:=2;
    END IF;
   
    select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;       
    --crear venta
    INSERT INTO VENTA(
            ID_PERSONA,
            ID_CLIENTE,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_ANHO,
            ID_MES,
            ID_COMPROBANTE, 
            ID_IGV, 
            ID_MONEDA, 
            ID_LEYENDA,
            TIPOCAMBIO,
            SERIE, 
            NUMERO, 
            FECHA, 
            ESTADO,
            GLOSA,
            ID_TIPOTRANSACCION,
            ID_CREDITO,
            ID_VOUCHER,
            ID_CLIENTE_LEGAL,
            ID_TIPOVENTA,
            
            ID_PARENT,
            ID_TIPONOTA,
            ID_COMPROBANTE_REF,
            SERIE_REF,
            NUMERO_REF,
            CUOTA
        )VALUES(
            L_USER,
            l_id_cliente,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_ANHO,
            P_ID_MES,
            l_id_comprobante,
            l_igv,
            l_id_moneda,--SOLES
            '1000',
            l_tc,
            l_serie,--SERIE
            l_numero,--NRO
            SYSDATE, --to_date('26042021 23:59:00','ddmmyyyy hh24:mi:ss')
            1,
            l_glosa,
            l_id_tipo_transaccion,
            l_id_credito,
            l_id_voucher,
            l_id_id_cliente_legal,
            l_id_tipoventa,--P_ID_TIPOVENTA
            
            l_id_parent,
            l_id_tiponota,
            l_id_comprobante_ref,
            l_serie_ref,
            l_numero_ref,
            P_NRO_CUOTA--3RA ARMADA CAMBIAR CADA ARMADA
    )returning ID_VENTA INTO l_id_venta;
    
    
    INSERT INTO VENTA_DETALLE(
        ID_VDETALLE,
        ID_VENTA,
        ID_TIPOIGV,
        DETALLE, 
        CANTIDAD, 
        PRECIO, 
        PRECIO_BASE, 
        BASE, 
        IGV, 
        DESCUENTO, 
        DC,
        IMPORTE, 
        PRECIO_ME, 
        PRECIO_BASE_ME, 
        PRECIO_ALM_ME, 
        BASE_ME, 
        IGV_ME, 
        DESCUENTO_ME, 
        IMPORTE_ME,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
      )
      select
        x.ID_VDETALLE,
        x.ID_VENTA,
        x.ID_TIPOIGV,
        x.DETALLE, 
        x.CANTIDAD, 
        x.PRECIO, 
        x.PRECIO_BASE, 
        x.BASE, 
        x.IGV, 
        x.DESCUENTO, 
        x.DC,
        x.IMPORTE, 
        x.PRECIO_ME, 
        x.PRECIO_BASE_ME, 
        x.PRECIO_ALM_ME, 
        x.BASE_ME, 
        x.IGV_ME, 
        x.DESCUENTO_ME, 
        x.IMPORTE_ME,
        x.ID_ALUMNO_CONTRATO,
        x.ID_ALUMNO_CONTRATO_DET
        from (select 
          1 as ID_VDETALLE,
          l_id_venta as ID_VENTA,
          l_id_tipoigv as ID_TIPOIGV,
          substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100)  as DETALLE ,
          1 as CANTIDAD,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as PRECIO,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as PRECIO_BASE,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as BASE,
          0 as IGV,
          DECODE(a.dc,'C',ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),0) as DESCUENTO,
          case when l_codigo_mod = 'V' and l_creditosvar<0 then  
            case when a.dc='D' then 'C' else 'D' end
          else 
            a.dc
          end as DC,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as IMPORTE,
          0 as PRECIO_ME,
          0 as PRECIO_BASE_ME,
          0 as PRECIO_ALM_ME,
          0 as BASE_ME,
          0 as IGV_ME,
          0 as DESCUENTO_ME,
          0 as IMPORTE_ME,
          a.ID_ALUMNO_CONTRATO,
          a.ID_ALUMNO_CONTRATO_DET,
          B.ORDEN
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        and b.TIPO_COBRO='M'
        and (case when P_CONINTERNADO='S' then 
              'S' 
            else 
              case when b.tipo in('R') then 
                'S' 
              else 
                'N' 
              end  
        end)=P_CONINTERNADO
        AND B.TIENE_HIJO=0
        and B.RESI_MEN=0
        union all
        select 
          1 as ID_VDETALLE,
          l_id_venta as ID_VENTA,
          l_id_tipoigv as ID_TIPOIGV,
          substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100)  as DETALLE ,
          1 as CANTIDAD,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as PRECIO,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as PRECIO_BASE,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as BASE,
          0 as IGV,
          DECODE(a.dc,'C',ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1),0) as DESCUENTO,
          case when l_codigo_mod = 'V' and l_creditosvar<0 then  
            case when a.dc='D' then 'C' else 'D' end
          else 
            a.dc
          end as DC,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as IMPORTE,
          0 as PRECIO_ME,
          0 as PRECIO_BASE_ME,
          0 as PRECIO_ALM_ME,
          0 as BASE_ME,
          0 as IGV_ME,
          0 as DESCUENTO_ME,
          0 as IMPORTE_ME,
          a.ID_ALUMNO_CONTRATO,
          a.ID_ALUMNO_CONTRATO_DET,
          B.ORDEN
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        and b.TIPO_COBRO='M'
        and (case when P_CONINTERNADO='S' then 
              'S' 
            else 
              case when b.tipo in('R') then 
                'S' 
              else 
                'N' 
              end  
        end)=P_CONINTERNADO
        AND B.TIENE_HIJO=0
        and B.RESI_MEN=1
      )x
      ORDER BY dc, ORDEN;
      /*select 
        1,
        l_id_venta,
        l_id_tipoigv,
        substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100) as descripcion ,
        1,
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        0,
        --0,
        --DECODE(a.dc,'C',ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),0),
        DECODE(a.dc,'C',ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),0),
        --a.dc,
        case when l_codigo_mod = 'V' and l_creditosvar<0 then  
          case when a.dc='D' then 'C' else 'D' end
        else 
          a.dc
        end,
        ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        a.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET
      from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
      where a.id_criterio_semestre=b.id_criterio_semestre
      and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
      and b.TIPO_COBRO='M'
      and (case when P_CONINTERNADO='S' then 
            'S' 
          else 
            case when b.tipo in('R') then 
              'S' 
            else 
              'N' 
            end  
      end)=P_CONINTERNADO
      AND B.TIENE_HIJO=0
      ORDER BY a.dc, B.ORDEN;
      */
   
        if  l_codigo_mod = 'V' and l_creditosvar<0 then
            PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA_NC(l_id_venta);
        else
            PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);
        end if;
        ---PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);

        --FORMA DE PAGO
        IF l_id_comprobante = '01' THEN
            SELECT TOTAL INTO L_TOTAL FROM VENTA WHERE ID_VENTA = l_id_venta;
            IF L_ID_PROGRAMA_ESTUDIO = 1 THEN --MEDICINA
                SELECT DISTINCT FECHA_FIN INTO L_FECHA_PAGO FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE = l_id_planpago_semestre AND ORDEN = P_NRO_CUOTA-1 AND CICLO IN (13);--NOT IN( 12,14); -- Solo medicina
            ELSE --todas menos medicina
                SELECT COUNT(1) INTO l_contar FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE = l_id_planpago_semestre AND ORDEN = P_NRO_CUOTA-1;
                IF l_contar > 0 THEN 
                    SELECT MIN(FECHA_FIN) INTO L_FECHA_PAGO FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE = l_id_planpago_semestre AND ORDEN = P_NRO_CUOTA-1;-- AND CICLO NOT IN (10); 
                ELSE
                    SELECT SYSDATE INTO L_FECHA_PAGO FROM DUAL;
                END IF;
            END IF;
            INSERT INTO VENTA_FORMA_PAGO(ID_VENTA,NRO_CUOTA,IMPORTE,FECHA_PAGO)VALUES(l_id_venta,'CUO001',L_TOTAL,L_FECHA_PAGO);
        END IF;

        if  l_codigo_mod = 'V' and l_creditosvar<0 then
            PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_MATNOTAVAR(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,l_id_venta,'N',l_error,l_msgerror);
        else
            PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_CUOTA(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,l_id_venta,'N',l_error,l_msgerror);
        end if;
        --PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_CUOTA(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,l_id_venta,'N',l_error,l_msgerror);

      IF l_error > 0 THEN
          l_msgerror := l_msgerror;
          --ROLLBACK;
          GOTO generar_cuota;
      END IF;
      
        if  l_codigo_mod = 'V' and l_creditosvar<0 then
            PKG_SALES_FINANCES.SP_GENERA_ANTICIPOS_NOTAS(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,L_USER,l_id_venta,l_id_parent,l_error,l_msgerror);
        else
            --ejecuta anticipos con venta falta
          SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
          FROM VW_SALES_ADVANCES
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = P_ID_ANHO
          AND ID_CLIENTE = l_id_cliente;
          
          IF L_TOTAL_ANTICIPO > 0 THEN
              SELECT TOTAL INTO L_V_TOTAL FROM VENTA
              WHERE ID_VENTA = l_id_venta;
              
              IF L_TOTAL_ANTICIPO >= L_V_TOTAL THEN
                  L_IMPORTE_ANTICIPO := L_V_TOTAL;
              ELSE
                  L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
              END IF;
              INSERT INTO MAT_TEST_ANTICIPO(ID_PERSONA,ID_VENTA,IMPORTE,FECHA)VALUES(l_id_cliente,l_id_venta,L_IMPORTE_ANTICIPO,SYSDATE);--PARA VER QUE VENTAS TRAE ANTICIPOS
              PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,L_USER,l_id_venta,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,l_error,l_msgerror,P_TIPO);
              IF l_error > 0 THEN
                l_msgerror := l_msgerror;
                GOTO generar_cuota;
            END IF;
          END IF;
        end if;
    
     --desactivado solo para pruebas
      IF P_ID_ENTIDAD = 7124 THEN
          PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,l_id_comprobante);
          --l_error:=0;
      END IF;
     
    <<generar_cuota>>
    
    P_ID_VENTA:=l_id_venta;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_GENERAR_CUOTA;
  
  PROCEDURE SP_GENERAR_ASIENTO_CUOTA(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number;
        l_id_tipoorigen number:=1; --venta
        l_fondo varchar2(10):='10';
        l_serie varchar2(10);
        l_numero varchar2(20);
        l_fecha DATE;
        l_voucher number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_glosa varchar2(100);
        l_nombre varchar2(100);
    BEGIN
      
      SELECT SERIE, NUMERO, FECHA,ID_VOUCHER, GLOSA, FC_NOMBRE_PERSONA(ID_CLIENTE) INTO l_serie,l_numero,l_fecha, l_voucher, l_glosa, l_nombre FROM VENTA WHERE ID_VENTA=P_ID_VENTA;
      
           
      INSERT INTO CONTA_ASIENTO (
        ID_TIPOORIGEN,
        ID_ORIGEN, 
        FONDO,
        DEPTO,
        CUENTA, 
        CUENTA_CTE,
        RESTRICCION,
        IMPORTE,
        DESCRIPCION,
        MEMO,
        VOUCHER, 
        PARENT_ID,
        AGRUPA
        )
        SELECT 
        l_id_tipoorigen,
        VD.ID_VDETALLE,
        l_fondo,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CUENTAAASI,
        B.ID_CTACTE,
        B.ID_RESTRICCION,
        (CASE WHEN b.TIPO_DC='C' THEN VD.IMPORTE*(-1) ELSE VD.IMPORTE END)*(b.porcentaje/100),
        /*(CASE b.TIPO_DC WHEN 'D' THEN P_ID_ENTIDAD||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
        ELSE
            P_ID_ENTIDAD||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
        END),*/
        DECODE(VD.DC,'D',
            (CASE b.TIPO_DC WHEN 'D' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
            END),
            (CASE b.TIPO_DC WHEN 'C' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||' '||to_char(l_fecha,'DD/MM/YYYY')
            END)
        ),
        (to_char(l_id_tipoorigen) || '-' || to_char(VD.ID_VDETALLE)),
        l_voucher,
        NULL,
        --DECODE(b.TIPO_DC,'C','N','S')
        DECODE(VD.DC,'D',DECODE(b.TIPO_DC,'C','N','S'),DECODE(b.TIPO_DC,'C','S','N')) AS AGRUPA
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b, VENTA_DETALLE VD
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        AND A.ID_ALUMNO_CONTRATO=VD.ID_ALUMNO_CONTRATO
        AND A.ID_ALUMNO_CONTRATO_DET=VD.ID_ALUMNO_CONTRATO_DET
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND VD.ID_VENTA =P_ID_VENTA
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;
                          
      
      SELECT COUNT(1) INTO l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
        --ANALIZAR UREGTNE
        
        if l_contar=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 05';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
          
          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_GENERAR_ASIENTO_CUOTA;
    
    PROCEDURE SP_GENERAR_TRANSF_CUOTA_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_NRO_CUOTA NUMBER,P_ID_TRANSFERENCIA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
    IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      L_DOCUMENTO NUMBER :=0;
      l_tc NUMBER(10,3);
      l_id_moneda number;
      l_id_moneda_tc number;
      l_tipo_alumno varchar2(5);
      L_ID_TRANSFERENCIA NUMBER :=0;
      l_id_tipotransaccion number:= 165; --153;--pendiente
      l_id_dinamica number:= 1516; --743;--pendiente
      l_id_cliente number;
      l_glosa varchar2(100):='';
      l_automatico varchar2(2);
      L_ID_PERSONA_V NUMBER;
      l_id_voucher NUMBER :=0;
      
      l_serie varchar2(5);
      l_correlativo number;
      l_numero varchar2(15);
      l_id_planpago_semestre number;
      l_cuotas number(10,2);  
      l_id number;
      l_id_semestre_programa number;
      l_semestre varchar2(20);
      l_total NUMBER(10,2);
      
        L_TOTAL_ANTICIPO NUMBER(10,2);
        L_IMPORTE_ANTICIPO NUMBER(10,2);
        L_V_TOTAL NUMBER(10,2);
        L_DC VARCHAR2(1) :='C'; --DC PARA ANTICIPOS
        L_CODIGO VARCHAR2(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO
        L_TIPO VARCHAR2(1) := 'T';
        l_nom_nivel_ensenanza varchar2(150):='-';
        l_id_tipoasiento  varchar2(5):='RV';
        l_glosa_vnt VARCHAR2(60);
    BEGIN
        IF P_NRO_CUOTA = 2 THEN
            l_glosa_vnt := '2da Armada ';
        ELSIF P_NRO_CUOTA = 3 THEN
            l_glosa_vnt := '3ra Armada ';
        ELSIF P_NRO_CUOTA = 4 THEN
            l_glosa_vnt := '4ta Armada ';
        ELSIF P_NRO_CUOTA = 5 THEN
            l_glosa_vnt := '5ta Armada ';
        ELSIF P_NRO_CUOTA = 6 THEN
            l_glosa_vnt := '6ta Armada ';
        ELSIF P_NRO_CUOTA = 7 THEN
            l_glosa_vnt := '7ma Armada ';
        ELSIF P_NRO_CUOTA = 8 THEN
            l_glosa_vnt := '8va Armada ';
        ELSE
            l_glosa_vnt := '9na Armada ';
        END IF;
    
      SELECT ID_PERSONA, TIPO_ALUMNO,ID_PLANPAGO_SEMESTRE, ID_SEMESTRE_PROGRAMA
      INTO l_id_cliente,l_tipo_alumno,l_id_planpago_semestre,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      SELECT 
      b.SEMESTRE into l_semestre
      FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
      WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
      AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
      
      IF l_tipo_alumno  = 'B18' THEN
        l_error :=1;
        l_msgerror := 'Alto! El alumno  es de beca 18';
        goto salida_transf_idec_cuota;
      END IF;
      
      select C.CUOTAS into l_cuotas
      from MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      where B.ID_PLANPAGO=C.ID_PLANPAGO
      and b.ID_PLANPAGO_SEMESTRE=l_id_planpago_semestre;
    
      SELECT 
                COUNT(A.ID) INTO l_contar
        FROM CONTA_DOCUMENTO_IP_USER A, CONTA_DOCUMENTO_IP B, CONTA_DOCUMENTO C
        WHERE A.ID_DOCIP = B.ID_DOCIP
        AND B.ID_DOCUMENTO = C.ID_DOCUMENTO
        AND A.ID = P_ID_PERSONA
        AND C.ID_COMPROBANTE = '99'
        AND C.ID_ENTIDAD = P_ID_ENTIDAD
        AND C.ID_DEPTO = P_ID_DEPTO;
        
      IF l_contar = 0 THEN
        l_error :=1;
        l_msgerror := 'Alto! El usuario no tiene asignado un punto de impresión para el tipo de documento: 00';
        goto salida_transf_idec_cuota;
      END IF;
      
      IF P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '1' THEN 
          l_id_tipoasiento:= 'RV';
          l_id_dinamica:= 1516;
      ELSIF P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '5' THEN
          l_id_tipoasiento:= 'RVJ';
          l_id_dinamica:= 11215;
      ELSIF P_ID_ENTIDAD = 7124 and  P_ID_DEPTO = '6' THEN
          l_id_tipoasiento:= 'RVT';
          l_id_dinamica:= 2338;
      ELSIF P_ID_ENTIDAD = 7124 and  P_ID_DEPTO = '8' THEN
          l_id_tipoasiento:= 'RVS';
          l_id_dinamica:= 2338;
      END IF;
      
      SELECT   count(*) into l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;
       
      if l_contar=0 then
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!:Falta configurar Voucher de Transferencia'||to_char(P_ID_ANHO);
           goto salida_transf_idec_cuota;
      end if;  
      
      select AUTOMATICO into l_automatico 
      from CONTA_VOUCHER_CONFIG  
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;  

      if l_automatico='S' then  
          --obtener id del contador para crear el voucher
                   
          SELECT ID_PERSONA INTO L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=P_ID_DEPTO;
    
          PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,7,'','S',L_ID_PERSONA_V,l_id_voucher);
      end if;
      
      if l_id_voucher=0 then
          l_error:=1; --no existe voucher
          l_msgerror:='Alto!: No existe voucher';
          goto salida_transf_idec_cuota;
      end if;
      
      --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,'00',P_ID_ENTIDAD,l_serie,l_correlativo);
      PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,'99',P_ID_ENTIDAD,P_ID_DEPTO,NULL,l_serie,l_correlativo);
      
      IF l_correlativo=0 or l_correlativo is null THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!: No existe serie y número del documento('||l_correlativo||')';
           goto salida_transf_idec_cuota;
      END IF;
      
      SELECT lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
                
      
        l_id_moneda:=7; --SOLES
        l_id_moneda_tc:=9;

     
        --obtiene tipo de cambio del dia
        select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
 
        if l_tc is null then
            l_tc:=0;
        end if;
        
        SELECT 
    D.NOMBRE into l_nom_nivel_ensenanza
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D
    WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
    AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
        
    l_glosa:=substr(l_glosa_vnt||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
    
      
        

       INSERT INTO VENTA_TRANSFERENCIA(
          ID_ENTIDAD,
          ID_DEPTO,
          ID_ANHO,
          ID_MES,
          ID_PERSONA,
          ID_CLIENTE,
          ID_TIPOTRANSACCION,
          ID_DINAMICA,
          ID_MONEDA,
          TIPOCAMBIO,
          SERIE,
          NUMERO,
          FECHA,
          GLOSA,
          ESTADO,
          ID_VOUCHER,
          ID_TIPOORIGEN,
          ES_ANTICIPO,
          ID_TIPOVENTA,
          CUOTA
      )VALUES(
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_ANHO,
          P_ID_MES,
          P_ID_PERSONA,
          l_id_cliente,
          l_id_tipotransaccion,
          l_id_dinamica,
          l_id_moneda,
          l_tc,
          l_serie,
          l_numero,
          SYSDATE,
          l_glosa,
          1,
          l_id_voucher,
          2,
          'N',
          1,
          P_NRO_CUOTA --3RA ARMADA, CAMBIAR PARA CADA ARMADA
        ) RETURNING ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA;
        
        --detalle
        
        SELECT COALESCE(MAX(ID_TDETALLE),0) INTO l_id FROM VENTA_TRANSFERENCIA_DETALLE;
        
        INSERT INTO VENTA_TRANSFERENCIA_DETALLE(
        ID_TDETALLE,
        ID_TRANSFERENCIA,
        DC,
        IMPORTE,
        DETALLE,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
        )           
        
        select 
          (row_number() OVER( ORDER BY A.ID_ALUMNO_CONTRATO ASC ))+l_id  AS items,
          L_ID_TRANSFERENCIA,
          a.dc,
          SUM(a.importe/decode(b.tipo_cobro,'M',l_cuotas,1)),
          l_glosa,
          A.ID_ALUMNO_CONTRATO,
          NULL
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        and b.tipo_cobro='M'
        AND B.TIENE_HIJO=0
        GROUP BY a.dc,A.ID_ALUMNO_CONTRATO
        ORDER BY a.dc; 
        
      
       SELECT
              nvl(sum(decode(dc,'D',(importe),(importe*-1))),0) INTO l_total
      FROM VENTA_TRANSFERENCIA_DETALLE
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;
      
      UPDATE VENTA_TRANSFERENCIA SET
           IMPORTE     =   l_total
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;
        
      --GENNERA ANTICIPO CREDITO AMARRA A LA TRANF
        SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
        FROM VW_SALES_ADVANCES
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_CLIENTE = l_id_cliente;
        IF L_TOTAL_ANTICIPO > 0 THEN
            IF L_TOTAL_ANTICIPO >= l_total THEN
                L_IMPORTE_ANTICIPO := l_total;
            ELSE
                L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
            END IF;
            PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,P_ID_PERSONA,L_ID_TRANSFERENCIA,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,l_error,l_msgerror,L_TIPO);
            IF l_error > 0 THEN
              l_msgerror := l_msgerror;
              GOTO salida_transf_idec_cuota;
          END IF;
        END IF;
      
       PKG_FINANCES_STUDENTS.SP_GEN_ASTO_TRANS_CUOTA_IDEC(P_ID_ALUMNO_CONTRATO,L_ID_TRANSFERENCIA,l_error,l_msgerror) ; 
      
      <<salida_transf_idec_cuota>>
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_GENERAR_TRANSF_CUOTA_IDEC;
    
    PROCEDURE SP_GEN_ASTO_TRANS_CUOTA_IDEC(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_TRANSFERENCIA IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_id_entidad number;
        l_id_depto_transf varchar2(20);
        l_dinamica number:=1516;
        l_id_tipoorigen number:=2;
        l_id_cliente number;
        l_memo varchar2(255);
        l_id_voucher number;
        l_serie varchar2(255);
        l_numero varchar2(255);
        l_glosa varchar2(255);
        
        -- Datos del detalle
        l_id_tdetalle number;
        l_id_venta number;
        --l_id_vdetalle number;
        l_id_articulo number;
        l_id_tipoorigen_vdetalle number;
        l_id_articulo_vdetalle number;
        l_id_vdetalle number;
        l_ddc varchar2(1);
        l_importe number;
        l_detalle varchar2(255);
        
        -- Datos de los asientos de la dinamica
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_unicoctate varchar2(1);
        l_porcentaje number(10,2);
        l_descripcion varchar2(255);
        l_agrupa varchar2(1);
        
        l_importeasiento number(10,2);
        l_importeasiento_me number(10,2);
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        
        -- Validación
        l_cont number;
        
        
        CURSOR CURSOR_TRANSFERENCIA_DETALLE IS		
        --SELECT  ID_TDETALLE,ID_VENTA,ID_ARTICULO,DC, IMPORTE, DETALLE
        select 'D' as DC, sum(case when DC='C' then IMPORTE*(-1) else IMPORTE end) as importe, DETALLE
        FROM VENTA_TRANSFERENCIA_DETALLE
        WHERE ID_TRANSFERENCIA=P_ID_TRANSFERENCIA
        group BY DETALLE;	
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =l_dinamica
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        l_error NUMBER :=0;
        l_msgerror VARCHAR2(100) :='';
        
        l_debito number(10,2);
        l_credito number(10,2);
    BEGIN

        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_TIPOORIGEN, ID_CLIENTE, ID_VOUCHER, SERIE, NUMERO, GLOSA
            INTO l_id_entidad, l_id_depto_transf,l_dinamica, l_id_tipoorigen, l_id_cliente, l_id_voucher, l_serie, l_numero, l_glosa
        FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = P_ID_TRANSFERENCIA;
        
        
                
        
        SELECT (to_char(l_id_tipoorigen) || '-' || to_char(P_ID_TRANSFERENCIA)) INTO l_memo FROM DUAL;
        
        OPEN CURSOR_TRANSFERENCIA_DETALLE;
        FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_ddc,l_importe,l_detalle;
        WHILE CURSOR_TRANSFERENCIA_DETALLE%FOUND LOOP
            
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            WHILE casi%FOUND LOOP
                select (case 
                            when l_id_indicador='IMPORTE' then l_importe
                      else 0 end)*(l_porcentaje)  into l_importeasiento
                from dual;
                l_importeasiento_me := 0;
                
                l_depto:=null;
                l_cuenta_cte:=null;
                
                
                if l_unico='U' then
                    select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif(l_unico='X') then
                    select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                elsif l_unico='S' THEN -- Si es sesión
                    l_depto := l_id_depto_transf;---
                end if;
                
                if l_unicoctate='U' then
                   select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   if l_cont>0 then
                      select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                   end if;
                end if;
                
                --if l_ddc='D' then
                if l_dc = 'C' then
                  -- l_importeasiento:=l_importeasiento;
                  l_importeasiento:=l_importeasiento*(-1);
                -- else
                end if;
                
                select count(*) into l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=P_ID_TRANSFERENCIA
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'C' else 'D' end=l_ddc;
          
        
                 if l_importeasiento<>0 then
                
     
                  if l_cont=0 then
                   

                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    P_ID_TRANSFERENCIA,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                    l_memo,
                    l_id_voucher,
                    null,
                    null,
                    l_agrupa 
                    );
                  else
                  
                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_TRANSFERENCIA
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'C' else 'D' end=l_ddc;
                    
                  end if;
                end if;
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            END LOOP;
            CLOSE casi;

            -- CONTRA PARTIDA
            l_importeasiento := l_importeasiento*-1;
            
            SELECT count(*) INTO l_cont
            FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S';
            
            if l_cont>0 then
              SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
              FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN=P_ID_TRANSFERENCIA AND PRIMARIO='S' AND ROWNUM = 1;
              
              INSERT INTO CONTA_ASIENTO (
                      ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                      CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                      MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                      )VALUES ( 
                      l_id_tipoorigen,
                      P_ID_TRANSFERENCIA,
                      l_fondo,
                      l_depto,
                      l_id_cuentaaasi,
                      l_cuenta_cte,
                      l_id_restriccion,
                      l_importeasiento,
                      '(Trans: '||l_serie||'-'||l_numero||')-'||l_glosa,
                      l_memo,
                      l_id_voucher,
                      null,
                      null,
                      l_agrupa 
                      );
                    
            end if;
            
            FETCH CURSOR_TRANSFERENCIA_DETALLE INTO l_ddc,l_importe,l_detalle;
        END LOOP;
        CLOSE CURSOR_TRANSFERENCIA_DETALLE; 
        
        
        SELECT COUNT(1) INTO l_cont 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN = P_ID_TRANSFERENCIA;
        --ANALIZAR UREGTNE
        
        if l_cont=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 06';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN =P_ID_TRANSFERENCIA;
          
          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      
    END SP_GEN_ASTO_TRANS_CUOTA_IDEC;
    
    PROCEDURE SP_EXECUTE_CUOTA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR,P_ID_SEMESTRE NUMBER,P_ID_PERSONA NUMBER,P_ID_MODO_CONTRATO NUMBER, P_ID_NIVEL_ENSENANZA NUMBER, P_ID_MODALIDAD_ESTUDIO NUMBER,P_ID_PROGRAMAS VARCHAR2,P_ID_SEDE NUMBER,P_ALUMNOS VARCHAR2,PLAN_PAGO NUMBER,P_CUOTA NUMBER,P_ID_PLANPAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2)IS
        L_ID_ALUMNO_CONTRATO NUMBER;
        L_ID_CLIENTE NUMBER;
        
        L_ID_ANHO NUMBER;
        L_ID_ANHO_ACTUAL NUMBER;
        L_ID_MES NUMBER;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL NUMBER;
        
        L_ID_VENTA NUMBER;
        L_ES_VIRTUAL VARCHAR2(1) := 'N';
        L_ID_TIPOVENTA NUMBER;
        L_CONINTERNADO VARCHAR2(1) := 'N';
        
        L_CONTAR NUMBER;
        L_ERROR NUMBER := 0;
        L_MSGERROR VARCHAR2(200) := 'OK';
        L_TIPO_ALUMNO VARCHAR2(4);
        L_ID_SEDE NUMBER;
        
        L_CREDITOSVAR NUMBER;
        L_PROCESA VARCHAR2(1);
        
        S_PERSONAS TABLASTRING; 
        S_PROGRAMAS TABLASTRING;
        S_CONTA INT :=0;
        L_ID_PERSONA NUMBER;
        L_PERSONAS VARCHAR2(4000);
        L_ID_PROGRAMA_ESTUDIO NUMBER;
        L_PROGRAMAS VARCHAR2(4000);
        L_CODIGO VARCHAR2(20);
        ES_VARIACION VARCHAR2(1);
        
        CURSOR C_ALUMNOS IS
        SELECT A.ID_ALUMNO_CONTRATO,A.ID_PERSONA,A.TIPO_ALUMNO,NVL(A.CREDITOSVAR,0)
        FROM DAVID.ACAD_ALUMNO_CONTRATO A JOIN MOISES.PERSONA B ON A.ID_PERSONA = B.ID_PERSONA
        JOIN MOISES.PERSONA_NATURAL_ALUMNO C ON B.ID_PERSONA = C.ID_PERSONA
        JOIN DAVID.ACAD_SEMESTRE_PROGRAMA D ON A.ID_SEMESTRE_PROGRAMA = D.ID_SEMESTRE_PROGRAMA  
        JOIN DAVID.ACAD_MATRICULA_DETALLE MD ON A.ID_MATRICULA_DETALLE = MD.ID_MATRICULA_DETALLE
        JOIN DAVID.VW_ACAD_PROGRAMA_ESTUDIO PS ON PS.ID_PROGRAMA_ESTUDIO = D.ID_PROGRAMA_ESTUDIO
        JOIN MAT_PLANPAGO_SEMESTRE PPS ON PPS.ID_PLANPAGO_SEMESTRE = A.ID_PLANPAGO_SEMESTRE
        JOIN MAT_PLANPAGO PP ON PP.ID_PLANPAGO = PPS.ID_PLANPAGO
        JOIN ORG_SEDE_AREA SA ON SA.ID_SEDEAREA = PS.ID_SEDEAREA
        WHERE D.ID_SEMESTRE = P_ID_SEMESTRE
        AND A.ESTADO = '1'
        AND MD.ID_MODO_CONTRATO = P_ID_MODO_CONTRATO --SOLO EXTRAS Y DIRIGIDOS JULICAC
        --AND C.CODIGO IN ('202116446','202117506','202014411','202012352','202116453','202012277','201220573','201711355','201711534','201912277','201320829')
        --AND PP.CUOTAS = '5' --DECOMENTAR
        --AND PP.CUOTAS <> '1' --SOLO EXTRAS Y DIRIGIDOS -- JULICACA
        --AND A.id_resid_tipo_habitacion is not null --SOLO INTERNOS
        AND PP.CUOTAS = PLAN_PAGO
        AND PP.ID_PLANPAGO = P_ID_PLANPAGO
        AND PS.ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA
        AND PS.ID_MODALIDAD_ESTUDIO = P_ID_MODALIDAD_ESTUDIO    
        --AND A.TIPO_ALUMNO <> 'B18' -- PARA VIRIACION
        AND PS.ID_PROGRAMA_ESTUDIO IN (SELECT ID_PROGRAMA_ESTUDIO FROM TT_PROGRAMAS WHERE ID_SEDE = P_ID_SEDE)
        --AND A.CREDITOSVAR <> 0 --SOLO SE ACTIVA CUANDO ES VARIACION
        AND A.ID_PERSONA NOT IN (SELECT ID_PERSONA FROM TT_ALUMNOS WHERE ID_SEDE = P_ID_SEDE) 
        AND PS.ID_SEDE = P_ID_SEDE 
        --AND PS.ID_PROGRAMA_ESTUDIO IN (245)--= 1-- programa  IN (253,177,215,175,266,275,221,214,216,233,187)--,169,245,250,178,163,176,216,212,207,202,165,233,229,179,266,253,213,175,273,274,170,256)--<> 1--= 246 --NOT IN(214,253,165)--= 17 --SOLO SISTEMAS
        --AND A.CREDITOSVAR <> 0 --SOLO SE ACTIVA CUANDO ES VARIACION
        --AND DAVID.FT_CALCULAR_CICLO_PROGRAMA('2021-1',A.ID_PERSONA,A.ID_PLAN_PROGRAMA) NOT IN(13,14)
        ORDER BY A.ID_ALUMNO_CONTRATO;
        
        BEGIN
            SELECT FC_SPLIT (P_ALUMNOS,'|') INTO S_PERSONAS  FROM DUAL;
            SELECT FC_SPLIT (P_ID_PROGRAMAS,'|') INTO S_PROGRAMAS  FROM DUAL; 
            DELETE TT_ALUMNOS;
            FOR i IN S_PERSONAS.FIRST .. S_PERSONAS.LAST
                LOOP
                    SELECT CAST(S_PERSONAS(i) AS NUMBER) INTO L_ID_PERSONA FROM DUAL;
                    INSERT INTO TT_ALUMNOS(ID_SEDE,ID_PERSONA)VALUES(P_ID_SEDE,L_ID_PERSONA);
            END LOOP;
            S_CONTA := 0;
            DELETE TT_PROGRAMAS;
            FOR i IN S_PROGRAMAS.FIRST .. S_PROGRAMAS.LAST
                LOOP
                    SELECT CAST(S_PROGRAMAS(i) AS NUMBER) INTO L_ID_PROGRAMA_ESTUDIO FROM DUAL;
                    INSERT INTO TT_PROGRAMAS(ID_SEDE,ID_PROGRAMA_ESTUDIO)VALUES(P_ID_SEDE,L_ID_PROGRAMA_ESTUDIO);
            END LOOP;
            
            SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(SYSDATE,'YYYY') ID_ANHO_ACTUAL INTO L_ID_ANHO,L_ID_ANHO_ACTUAL
            FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
            IF L_ID_ANHO = L_ID_ANHO_ACTUAL THEN
                SELECT MAX(ID_MES) ID_MES, TO_NUMBER(TO_CHAR(SYSDATE,'MM')) ID_MES_ACTUAL INTO L_ID_MES,L_ID_MES_ACTUAL
                FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
                IF L_ID_MES = L_ID_MES_ACTUAL THEN
                    OPEN C_ALUMNOS;
                        FETCH C_ALUMNOS INTO L_ID_ALUMNO_CONTRATO,L_ID_CLIENTE,L_TIPO_ALUMNO,L_CREDITOSVAR;
                        WHILE C_ALUMNOS%FOUND LOOP
                        
                            SELECT COUNT(1) INTO L_CONTAR FROM MAT_TEST_SIN_INTERNADO
                            WHERE ID_SEMESTRE = P_ID_SEMESTRE
                            AND ID_PERSONA = L_ID_CLIENTE;
                            --AND INTERNO = 'X';
                            
                            IF L_CONTAR > 0 THEN
                                SELECT COUNT(1) INTO L_CONTAR FROM MAT_TEST_SIN_INTERNADO
                                WHERE ID_SEMESTRE = P_ID_SEMESTRE
                                AND ID_PERSONA = L_ID_CLIENTE
                                AND INTERNO = 'N';
                                IF L_CONTAR > 0 THEN
                                    L_CONINTERNADO := 'N';
                                ELSE
                                    L_CONINTERNADO := 'S';
                                END IF;
                            ELSE
                                L_CONINTERNADO := 'S';
                            END IF;
                            L_CONINTERNADO := 'S';
                            --IF L_CONTAR > 0 THEN
                                --IF L_TIPO_ALUMNO = 'RE' THEN
                                
                                IF P_ID_MODO_CONTRATO <> 4 THEN 
                                    L_PROCESA := 'S';
                                    ES_VARIACION := 'N';
                                ELSE
                                    IF P_ID_MODO_CONTRATO = 4 AND L_CREDITOSVAR <> 0 THEN
                                        L_PROCESA := 'S';
                                        ES_VARIACION := 'S';
                                    ELSE
                                        L_PROCESA := 'N';
                                        ES_VARIACION := 'N';
                                    END IF;
                                END IF;
                                IF L_PROCESA = 'S' THEN
                                    SELECT ID_TIPOVENTA INTO L_ID_TIPOVENTA FROM DAVID.TIPO_NIVEL_ENSENANZA
                                    WHERE ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA;
                                    
                                    PKG_FINANCES_STUDENTS.SP_COBRAR_CUOTA(L_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_PERSONA,L_ES_VIRTUAL,L_ID_TIPOVENTA,L_CONINTERNADO,P_CUOTA,L_ID_VENTA,L_ERROR,L_MSGERROR);
                                    INSERT INTO TEST_CUOTA(ID_PERSONA,ID_VENTA,FECHA,VARIACION,ID_NIVEL_ENS,CUOTA,ID_SEMESTRE)VALUES(L_ID_CLIENTE,L_ID_VENTA,SYSDATE,'S',P_ID_NIVEL_ENSENANZA,5,P_ID_SEMESTRE);
                                    IF L_ERROR > 0 THEN
                                        INSERT INTO TEST_NO_CUOTA(ID_PERSONA,ID_ALUMNO_CONTRATO,ERROR,VARIACION,ID_NIVEL_ENS,CUOTA,FECHA,ID_SEMESTRE)VALUES(L_ID_CLIENTE,L_ID_ALUMNO_CONTRATO,L_MSGERROR,'S',P_ID_NIVEL_ENSENANZA,5,SYSDATE,P_ID_SEMESTRE);
                                        INSERT INTO FIN_CUOTA_QA(ID_USER,ID_PERSONA,ID_ALUMNO_CONTRATO,ID_ENTIDAD,ID_DEPTO,ID_SEMESTRE,ID_NIVEL_ENSENANZA,VARIACION,NRO_CUOTA,ERROR,FECHA)
                                        VALUES(P_ID_PERSONA,L_ID_CLIENTE,L_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_SEMESTRE,P_ID_NIVEL_ENSENANZA,ES_VARIACION,P_CUOTA,L_CODIGO||': '||L_MSGERROR,SYSDATE);
                                    END IF;
                                END IF;
                                
                                --ELSE
                                    --INSERT INTO TEST_NO_CUOTA(ID_PERSONA,ID_ALUMNO_CONTRATO,ERROR,VARIACION,ID_MODO_CONTRATO)VALUES(L_ID_CLIENTE,L_ID_ALUMNO_CONTRATO,L_MSGERROR,'S',P_ID_MODO_CONTRATO);
                                --END IF;
                            --END IF;
                                
                        FETCH C_ALUMNOS INTO L_ID_ALUMNO_CONTRATO,L_ID_CLIENTE,L_TIPO_ALUMNO,L_CREDITOSVAR;
                        END LOOP;
                    CLOSE C_ALUMNOS;
                ELSE
                    L_ERROR := 1;
                    L_MSGERROR := 'ERROR: El mes no esta Activo';
                END IF;
            ELSE
                L_ERROR := 1;
                L_MSGERROR := 'ERROR: El Año no esta Activo';
            END IF;
            
            SELECT COUNT(ID) INTO L_CONTAR FROM FIN_CUOTA_QA WHERE ID_USER = P_ID_PERSONA AND ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO 
            AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA AND TO_CHAR(FECHA,'DDMMYYYY') = TO_CHAR(SYSDATE,'DDMMYYYY');
            
            IF L_CONTAR = 0 THEN
                --L_MSGERROR := 'ERROR: LLEGA A ESTA PUNTO';
                UPDATE MAT_PLANPAGO_SEMESTRE_DET SET EJECUTADO = 'S'
                WHERE ID_PLANPAGO_SEMESTRE IN (
                SELECT ID_PLANPAGO_SEMESTRE FROM MAT_PLANPAGO_SEMESTRE 
                WHERE ID_SEMESTRE_PROGRAMA  IN 
                (SELECT ID_SEMESTRE_PROGRAMA FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE = P_ID_SEMESTRE AND ID_PROGRAMA_ESTUDIO IN (SELECT ID_PROGRAMA_ESTUDIO FROM TT_PROGRAMAS WHERE ID_SEDE = P_ID_SEDE)))
                AND ORDEN = P_CUOTA-1;
            ELSE
                SELECT 1 AS N_ERROR, 'Error: '||ERROR INTO L_ERROR,L_MSGERROR  
                FROM FIN_CUOTA_QA WHERE ID_USER = P_ID_PERSONA AND ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO 
                AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA AND TO_CHAR(FECHA,'DDMMYYYY') = TO_CHAR(SYSDATE,'DDMMYYYY') AND ROWNUM = 1;
            END IF;
        <<SALIDA_VENTA>>
        P_ERROR:=L_ERROR;
        P_MSGERROR:= L_MSGERROR;
    END SP_EXECUTE_CUOTA;
    
    PROCEDURE SP_EXECUTE_CUOTA_NEW(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR,P_ID_PERSONA NUMBER,P_ID_MODO_CONTRATO NUMBER, P_ID_NIVEL_ENSENANZA NUMBER,P_SEMESTRE_PROGRAMA VARCHAR2,P_ALUMNOS VARCHAR2,P_CUOTA NUMBER,P_ID_PLANPAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2)IS
        L_ID_ALUMNO_CONTRATO NUMBER;
        L_ID_CLIENTE NUMBER;
        
        L_ID_ANHO NUMBER;
        L_ID_ANHO_ACTUAL NUMBER;
        L_ID_MES NUMBER;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL NUMBER;
        
        L_ID_VENTA NUMBER;
        L_ES_VIRTUAL VARCHAR2(1) := 'N';
        L_ID_TIPOVENTA NUMBER;
        L_CONINTERNADO VARCHAR2(1) := 'N';
        
        L_CONTAR NUMBER;
        L_ERROR NUMBER := 0;
        L_MSGERROR VARCHAR2(200) := 'OK';
        L_TIPO_ALUMNO VARCHAR2(4);
        L_ID_SEDE NUMBER;
        
        L_CREDITOSVAR NUMBER;
        L_PROCESA VARCHAR2(1);
        
        S_PERSONAS TABLASTRING; 
        S_SEMESTRE_PROGRAMA TABLASTRING;
        S_CONTA INT :=0;
        L_ID_PERSONA NUMBER;
        L_PERSONAS VARCHAR2(4000);
        L_ID_SEMESTRE_PROGRAMA NUMBER;
        L_PROGRAMAS VARCHAR2(4000);
        L_CODIGO VARCHAR2(20);
        ES_VARIACION VARCHAR2(1);
        
        CURSOR C_ALUMNOS IS
        SELECT A.ID_ALUMNO_CONTRATO,A.ID_PERSONA,A.TIPO_ALUMNO,NVL(A.CREDITOSVAR,0) as CREDITOSVAR ,D.ID_SEMESTRE
        FROM DAVID.ACAD_ALUMNO_CONTRATO A JOIN MOISES.PERSONA B ON A.ID_PERSONA = B.ID_PERSONA
        JOIN MOISES.PERSONA_NATURAL_ALUMNO C ON B.ID_PERSONA = C.ID_PERSONA
        JOIN DAVID.ACAD_SEMESTRE_PROGRAMA D ON A.ID_SEMESTRE_PROGRAMA = D.ID_SEMESTRE_PROGRAMA  
        JOIN DAVID.ACAD_MATRICULA_DETALLE MD ON A.ID_MATRICULA_DETALLE = MD.ID_MATRICULA_DETALLE
        JOIN DAVID.VW_ACAD_PROGRAMA_ESTUDIO PS ON PS.ID_PROGRAMA_ESTUDIO = D.ID_PROGRAMA_ESTUDIO
        JOIN MAT_PLANPAGO_SEMESTRE PPS ON PPS.ID_PLANPAGO_SEMESTRE = A.ID_PLANPAGO_SEMESTRE
        JOIN MAT_PLANPAGO PP ON PP.ID_PLANPAGO = PPS.ID_PLANPAGO
        --WHERE D.ID_SEMESTRE = P_ID_SEMESTRE
        WHERE A.ESTADO = '1'
        AND MD.ID_MODO_CONTRATO = P_ID_MODO_CONTRATO --SOLO EXTRAS Y DIRIGIDOS JULICAC
        --AND C.CODIGO IN ('202116446','202117506','202014411','202012352','202116453','202012277','201220573','201711355','201711534','201912277','201320829')
        --AND PP.CUOTAS = '5' --DECOMENTAR
        --AND PP.CUOTAS <> '1' --SOLO EXTRAS Y DIRIGIDOS -- JULICACA
        --AND A.id_resid_tipo_habitacion is not null --SOLO INTERNOS
        --AND PP.CUOTAS = PLAN_PAGO*
        AND PP.ID_PLANPAGO = P_ID_PLANPAGO
        --AND PS.ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA*
        --AND PS.ID_MODALIDAD_ESTUDIO = P_ID_MODALIDAD_ESTUDIO   * 
        --AND A.TIPO_ALUMNO <> 'B18' -- PARA VIRIACION
        AND D.ID_SEMESTRE_PROGRAMA IN (SELECT ID_SEMESTRE_PROGRAMA FROM TT_SEMESTRE_PROGRAMA)
        --AND A.CREDITOSVAR <> 0 --SOLO SE ACTIVA CUANDO ES VARIACION
        AND A.ID_PERSONA NOT IN (SELECT ID_PERSONA FROM TT_ALUMNOS) 
        --AND PS.ID_SEDE = P_ID_SEDE 
        --AND PS.ID_PROGRAMA_ESTUDIO IN (245)--= 1-- programa  IN (253,177,215,175,266,275,221,214,216,233,187)--,169,245,250,178,163,176,216,212,207,202,165,233,229,179,266,253,213,175,273,274,170,256)--<> 1--= 246 --NOT IN(214,253,165)--= 17 --SOLO SISTEMAS
        --AND A.CREDITOSVAR <> 0 --SOLO SE ACTIVA CUANDO ES VARIACION
        --AND DAVID.FT_CALCULAR_CICLO_PROGRAMA('2021-1',A.ID_PERSONA,A.ID_PLAN_PROGRAMA) NOT IN(13,14)
        ORDER BY A.ID_ALUMNO_CONTRATO;
        
        BEGIN
            SELECT FC_SPLIT (P_ALUMNOS,'|') INTO S_PERSONAS  FROM DUAL;
            SELECT FC_SPLIT (P_SEMESTRE_PROGRAMA,'|') INTO S_SEMESTRE_PROGRAMA  FROM DUAL; 
            DELETE TT_ALUMNOS;
            FOR i IN S_PERSONAS.FIRST .. S_PERSONAS.LAST
                LOOP
                    SELECT CAST(S_PERSONAS(i) AS NUMBER) INTO L_ID_PERSONA FROM DUAL;
                    INSERT INTO TT_ALUMNOS(ID_SEDE,ID_PERSONA)VALUES(1,L_ID_PERSONA);
            END LOOP;
            S_CONTA := 0;
            DELETE TT_SEMESTRE_PROGRAMA;
            FOR i IN S_SEMESTRE_PROGRAMA.FIRST .. S_SEMESTRE_PROGRAMA.LAST
                LOOP
                    SELECT CAST(S_SEMESTRE_PROGRAMA(i) AS NUMBER) INTO L_ID_SEMESTRE_PROGRAMA FROM DUAL;
                    INSERT INTO TT_SEMESTRE_PROGRAMA(ID_SEMESTRE_PROGRAMA)VALUES(L_ID_SEMESTRE_PROGRAMA);
            END LOOP;
            
            SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(SYSDATE,'YYYY') ID_ANHO_ACTUAL INTO L_ID_ANHO,L_ID_ANHO_ACTUAL
            FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
            IF L_ID_ANHO = L_ID_ANHO_ACTUAL THEN
                SELECT MAX(ID_MES) ID_MES, TO_NUMBER(TO_CHAR(SYSDATE,'MM')) ID_MES_ACTUAL INTO L_ID_MES,L_ID_MES_ACTUAL
                FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
                IF L_ID_MES = L_ID_MES_ACTUAL THEN
                  FOR cur in C_ALUMNOS LOOP
                    BEGIN
                        SELECT COUNT(1) INTO L_CONTAR FROM MAT_TEST_SIN_INTERNADO
                        WHERE ID_SEMESTRE = cur.ID_SEMESTRE
                        AND ID_PERSONA = cur.id_persona;
                        
                        IF L_CONTAR > 0 THEN
                            SELECT COUNT(1) INTO L_CONTAR FROM MAT_TEST_SIN_INTERNADO
                            WHERE ID_SEMESTRE = cur.ID_SEMESTRE
                            AND ID_PERSONA =  cur.id_persona
                            AND INTERNO = 'N';
                            
                            IF L_CONTAR > 0 THEN
                                L_CONINTERNADO := 'N';
                            ELSE
                                L_CONINTERNADO := 'S';
                            END IF;
                        ELSE
                            L_CONINTERNADO := 'S';
                        END IF;
                        
                        IF P_ID_MODO_CONTRATO <> 4 THEN 
                            L_PROCESA := 'S';
                            ES_VARIACION := 'N';
                        ELSE
                            IF P_ID_MODO_CONTRATO = 4 AND cur.CREDITOSVAR <> 0 THEN
                                L_PROCESA := 'S';
                                ES_VARIACION := 'S';
                            ELSE
                                L_PROCESA := 'N';
                                ES_VARIACION := 'N';
                            END IF;
                        END IF;
                        
                        IF L_PROCESA = 'S' THEN
                            SELECT ID_TIPOVENTA INTO L_ID_TIPOVENTA FROM DAVID.TIPO_NIVEL_ENSENANZA
                            WHERE ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA;
                            
                            PKG_FINANCES_STUDENTS.SP_COBRAR_CUOTA(cur.ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_PERSONA,L_ES_VIRTUAL,L_ID_TIPOVENTA,L_CONINTERNADO,P_CUOTA,L_ID_VENTA,L_ERROR,L_MSGERROR);
                            INSERT INTO TEST_CUOTA(ID_PERSONA,ID_VENTA,FECHA,VARIACION,ID_NIVEL_ENS,CUOTA,ID_SEMESTRE)VALUES(cur.ID_PERSONA,L_ID_VENTA,SYSDATE,'S',P_ID_NIVEL_ENSENANZA,5,cur.ID_SEMESTRE);
                            IF L_ERROR > 0 THEN
                                INSERT INTO TEST_NO_CUOTA(ID_PERSONA,ID_ALUMNO_CONTRATO,ERROR,VARIACION,ID_NIVEL_ENS,CUOTA,FECHA,ID_SEMESTRE)VALUES(cur.ID_PERSONA,cur.ID_ALUMNO_CONTRATO,L_MSGERROR,'S',P_ID_NIVEL_ENSENANZA,5,SYSDATE,cur.ID_SEMESTRE);
                                INSERT INTO FIN_CUOTA_QA(ID_USER,ID_PERSONA,ID_ALUMNO_CONTRATO,ID_ENTIDAD,ID_DEPTO,ID_SEMESTRE,ID_NIVEL_ENSENANZA,VARIACION,NRO_CUOTA,ERROR,FECHA)
                                VALUES(P_ID_PERSONA,cur.ID_PERSONA,cur.ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,cur.ID_SEMESTRE,P_ID_NIVEL_ENSENANZA,ES_VARIACION,P_CUOTA,L_CODIGO||': '||L_MSGERROR,SYSDATE);
                            END IF;
                        END IF;
                    END;
                  END LOOP;
                ELSE
                    L_ERROR := 1;
                    L_MSGERROR := 'ERROR: El mes no esta Activo';
                END IF;
            ELSE
                L_ERROR := 1;
                L_MSGERROR := 'ERROR: El Año no esta Activo';
            END IF;
            
            SELECT COUNT(ID) INTO L_CONTAR FROM FIN_CUOTA_QA WHERE ID_USER = P_ID_PERSONA AND ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO 
            AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA AND TO_CHAR(FECHA,'DDMMYYYY') = TO_CHAR(SYSDATE,'DDMMYYYY');
            
            IF L_CONTAR = 0 THEN
                --L_MSGERROR := 'ERROR: LLEGA A ESTA PUNTO';
                UPDATE MAT_PLANPAGO_SEMESTRE_DET SET EJECUTADO = 'S'
                WHERE ID_PLANPAGO_SEMESTRE IN (
                  SELECT ID_PLANPAGO_SEMESTRE FROM MAT_PLANPAGO_SEMESTRE 
                  WHERE ID_SEMESTRE_PROGRAMA  IN (
                    SELECT ID_SEMESTRE_PROGRAMA FROM TT_SEMESTRE_PROGRAMA 
                  )
                )
                AND ORDEN = P_CUOTA-1;
            ELSE
                SELECT 1 AS N_ERROR, 'Error: '||ERROR INTO L_ERROR,L_MSGERROR  
                FROM FIN_CUOTA_QA WHERE ID_USER = P_ID_PERSONA AND ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO 
                AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA AND TO_CHAR(FECHA,'DDMMYYYY') = TO_CHAR(SYSDATE,'DDMMYYYY') AND ROWNUM = 1;
            END IF;
        <<SALIDA_VENTA>>
        P_ERROR:=L_ERROR;
        P_MSGERROR:= L_MSGERROR;
    END SP_EXECUTE_CUOTA_NEW;
    
     PROCEDURE SP_GENERAR_LISTA_MATRICULA(P_ID_SEMESTRE NUMBER,P_ID_NIVEL_ENSENANZA NUMBER,P_ID_MODALIDAD_ESTUDIO NUMBER,P_ID_SEDE NUMBER,P_ID_MODO_CONTRATO NUMBER,P_ID_PROGRAMA_ESTUDIO VARCHAR2,P_ESTADO VARCHAR2,P_USER  NUMBER,P_CANTIDAD OUT NUMBER) IS
      l_query VARCHAR2(4000):='';
      l_contar number;
    BEGIN
    
      DELETE FROM REP_MATRICULADOS WHERE ID_USER=P_USER;
    
      l_query:='INSERT INTO REP_MATRICULADOS ';
      l_query:=l_query|| ' SELECT ';
      l_query:=l_query|| ' x.ID_ALUMNO_CONTRATO,x.ID_PERSONA,x.ID_PROGRAMA_ESTUDIO,x.ID_TIPO_CONTRATO,x.ID_SEMESTRE_PROGRAMA,x.ID_PLANPAGO_SEMESTRE,x.ID_NIVEL_ENSENANZA,x.ID_PLAN_PROGRAMA,x.ID_MATRICULA_DETALLE,x.ID_COMPROBANTE, ';
      l_query:=l_query|| ' x.ESTADO,x.TOTAL_DEBITO,x.TOTAL_CREDITO,x.TOTAL,x.MATRICULA,x.MENSUAL,x.CONTADO,x.MATRICULA1CUOTA,x.TIPO_ALUMNO,x.ID_ALUMNO_CONTRATO_CLON,x.ID_ALUMNO_CONTRATO_ASOCIADO,x.ID_ENTIDAD,x.ID_DEPTO,x.CODIGO, ';
      l_query:=l_query|| ' x.NOMBRE,x.PATERNO,x.MATERNO,x.NOMBRE_FACULTAD,x.NOMBRE_ESCUELA,x.CUOTAS,x.SEMESTRE,x.ID_SEMESTRE,x.ID_MODO_CONTRATO,x.ID_MODALIDAD_ESTUDIO,x.ID_SEDE,x.PLAN_PAGO ';
      l_query:=l_query|| ' ,null,0,0,:PP_ID_USER,0,NULL,NULL,0,NULL';
      l_query:=l_query|| ' FROM VW_MAT_MATRICULADOS x ';
      l_query:=l_query|| ' WHERE x.ID_SEMESTRE=:PP_ID_SEMESTRE'; 
      l_query:=l_query|| ' AND x.ID_NIVEL_ENSENANZA=:PP_ID_NIVEL_ENSENANZA';
      l_query:=l_query|| ' AND x.ID_MODALIDAD_ESTUDIO=:PP_ID_MODALIDAD_ESTUDIO'; 
      l_query:=l_query|| ' AND x.ID_SEDE=:PP_ID_SEDE'; 
      l_query:=l_query|| ' AND x.ID_MODO_CONTRATO=:PP_ID_MODO_CONTRATO';
      l_query:=l_query|| ' AND x.ESTADO=:PP_ESTADO';
      IF P_ID_PROGRAMA_ESTUDIO IS NOT NULL THEN
        l_query:= l_query||' AND x.ID_PROGRAMA_ESTUDIO IN('||P_ID_PROGRAMA_ESTUDIO||')';
      END IF;
      
      EXECUTE IMMEDIATE l_query USING P_USER,P_ID_SEMESTRE, P_ID_NIVEL_ENSENANZA,P_ID_MODALIDAD_ESTUDIO,P_ID_SEDE,P_ID_MODO_CONTRATO,P_ESTADO;
    
      SELECT COUNT(*) INTO P_CANTIDAD FROM REP_MATRICULADOS WHERE ID_USER=P_USER;
      
      --BECA 18
     
      MERGE INTO REP_MATRICULADOS S 
       USING(
           SELECT 
              A.ID_ALUMNO_CONTRATO,
              A.tipo_alumno,
              SUM((CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)/decode(b.tipo_cobro,'M',A.CUOTAS,1)) AS IMPORTE,
              SUM(CASE WHEN  b.tipo_cobro='U' THEN CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END ELSE 0 END) AS MATRICULAPROV
            FROM REP_MATRICULADOS A,VW_MAT_ALUMNO_CONTRATO_DET B
            WHERE A.ID_ALUMNO_CONTRATO=B.ID_ALUMNO_CONTRATO
            AND A.tipo_alumno='B18'
            AND B.TIENE_HIJO=0
            AND A.ID_USER=P_USER
            GROUP BY A.ID_ALUMNO_CONTRATO,A.tipo_alumno
            ORDER BY A.ID_ALUMNO_CONTRATO
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.PROVISION = T.IMPORTE,
      S.MATRICULAPROV=T.MATRICULAPROV,
      S.TIPO='8'||T.tipo_alumno,
      S.TIPO_OPE='T';
      
      --TARNS  QUE NO ES BECA 18
      MERGE INTO REP_MATRICULADOS S 
       USING(
           SELECT 
              A.ID_ALUMNO_CONTRATO,
               SUM(CASE WHEN  b.tipo_cobro='U' THEN CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END ELSE 0 END) AS MATRICULAPROV
            FROM REP_MATRICULADOS A,VW_MAT_ALUMNO_CONTRATO_DET B
            WHERE A.ID_ALUMNO_CONTRATO=B.ID_ALUMNO_CONTRATO
            AND A.tipo_alumno='B18'
            and a.ID_COMPROBANTE='99'
            AND B.TIENE_HIJO=0
            and a.tipo is null
            AND A.ID_USER=P_USER
            GROUP BY A.ID_ALUMNO_CONTRATO,A.tipo_alumno
            ORDER BY A.ID_ALUMNO_CONTRATO
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.MATRICULAPROV=T.MATRICULAPROV;
     
        --transferencia: tipo alumno = RE y id_comprobante=99
        
        MERGE INTO REP_MATRICULADOS S 
         USING(
             select 
                A.ID_ALUMNO_CONTRATO,T.ID_TRANSFERENCIA,
                SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END) AS IMPORTE
            from REP_MATRICULADOS a, VENTA_TRANSFERENCIA_DETALLE B, VENTA_TRANSFERENCIA T
            where a.id_alumno_contrato=b.id_alumno_contrato
            and b.ID_TRANSFERENCIA=t.ID_TRANSFERENCIA
            and a.tipo_alumno='RE'
            and a.ID_COMPROBANTE='99'
            and a.tipo is null
            and t.cuota=1
            AND A.ID_USER=P_USER
            group by A.ID_ALUMNO_CONTRATO,t.id_transferencia,a.cuotas,a.contado,a.matricula1cuota
            having SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)=case when a.cuotas=1 then a.contado else a.matricula1cuota end
        )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
        WHEN  MATCHED THEN UPDATE SET  
        S.PROVISION = T.IMPORTE,
        S.ID_VENTA=T.ID_TRANSFERENCIA,
        S.TIPO_OPE='T';
        
        --venta tipo alumno=RE
        MERGE INTO REP_MATRICULADOS S 
         USING(
             select 
                A.ID_ALUMNO_CONTRATO,t.id_venta,
                SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END) AS IMPORTE,
                --,coalesce((select sum(x.total) from VW_SALES_MOV x where x.id_venta=t.id_venta and x.tipo='V'),0) as deposito
                SUM(CASE WHEN  dc.tipo_cobro='U' THEN CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END ELSE 0 END) AS MATRICULAPROV
            from REP_MATRICULADOS a, VENTA_DETALLE B, VENTA T,VW_MAT_ALUMNO_CONTRATO_DET DC
            where a.id_alumno_contrato=b.id_alumno_contrato
            and b.id_venta=t.id_venta
            AND B.id_alumno_contrato=DC.id_alumno_contrato
            AND B.id_alumno_contrato_DET=DC.id_alumno_contrato_DET
            AND DC.id_alumno_contrato=a.id_alumno_contrato
            and a.tipo_alumno='RE'
            and a.ID_COMPROBANTE<>'99'
            and a.tipo is null
            and t.cuota=1
            AND A.ID_USER=P_USER
            group by A.ID_ALUMNO_CONTRATO,t.id_venta,a.cuotas,a.contado,a.matricula1cuota
            having SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)=case when a.cuotas=1 then a.contado else a.matricula1cuota end
        )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
        WHEN  MATCHED THEN UPDATE SET  
        S.PROVISION = T.IMPORTE,
        --S.DEPOSITO=T.DEPOSITO
        S.MATRICULAPROV = T.MATRICULAPROV,
        S.ID_VENTA=T.id_venta,
        S.TIPO_OPE='V';
        
        ---RE que hicieron transferencia
        MERGE INTO REP_MATRICULADOS S 
         USING(
             select 
                A.ID_ALUMNO_CONTRATO,T.ID_TRANSFERENCIA,
                SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END) AS IMPORTE
            from REP_MATRICULADOS a, VENTA_TRANSFERENCIA_DETALLE B, VENTA_TRANSFERENCIA T
            where a.id_alumno_contrato=b.id_alumno_contrato
            and b.ID_TRANSFERENCIA=t.ID_TRANSFERENCIA
            and a.tipo_alumno='RE'
            and a.tipo is null
            and t.cuota=1
            and coalesce(a.provision,0)=0
            AND A.ID_USER=P_USER
            group by A.ID_ALUMNO_CONTRATO,t.id_transferencia,a.cuotas,a.contado,a.matricula1cuota
            having SUM(CASE WHEN B.DC='D' THEN B.IMPORTE ELSE B.IMPORTE*(-1) END)=case when a.cuotas=1 then a.contado else a.matricula1cuota end
        )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
        WHEN  MATCHED THEN UPDATE SET  
        S.PROVISION = T.IMPORTE,
        S.ID_VENTA=T.ID_TRANSFERENCIA,
        S.TIPO_OPE='T';
        
        DELETE FROM TT_MATRICULA_DEPOSITO;
        
        INSERT INTO TT_MATRICULA_DEPOSITO
        select a.ID_ALUMNO_CONTRATO,
            CASE WHEN coalesce(sum(b.total),0)=0 THEN 
              A.PROVISION 
            ELSE
              --CASE WHEN coalesce(sum(b.total),0)<0 THEN
                --A.PROVISION
             -- ELSE
                A.PROVISION-coalesce(sum(b.total),0)
             -- END 
           END as deposito
           from REP_MATRICULADOS a,VW_SALES_MOV b
           where a.id_venta=b.id_venta
           and a.TIPO_OPE=b.tipo
           AND A.ID_USER=P_USER
           GROUP BY a.ID_ALUMNO_CONTRATO,A.PROVISION;
           
           
       
       --depositos 
       MERGE INTO REP_MATRICULADOS S 
       USING(
           select A.ID_ALUMNO_CONTRATO,
                  B.DEPOSITO
           from REP_MATRICULADOS a,TT_MATRICULA_DEPOSITO b
           where a.id_alumno_contrato=b.id_alumno_contrato
            AND A.ID_USER=P_USER
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.DEPOSITO=T.DEPOSITO;
     
      
      /*
       CON,   CONTADO	
       COND,  CONTADO_DEUDA	
       MATCD, MAT_CON_DEUDA	
       MEMA,  MENOS_MAT	
       SOMA,  SOLO_MAT	
       MATMA, MAT_MAT_ARMADA	
       MATAR, MAT_ARMADA	
       B18,   BECA18	
       COWE,  CONTAWEB
      */
      
      --Alumnos Maticulados al contado y pagaron todo el contrato
      update REP_MATRICULADOS set
        tipo='1CON'
      where DEPOSITO>=PROVISION
      and cuotas=1
      and PROVISION>0
      AND ID_USER=P_USER
      and tipo is null;
      
      --Alumnos Maticulados al contado y NO pagaron todo el contrato
      update REP_MATRICULADOS set
        tipo='2COND'
      where DEPOSITO<PROVISION
      and cuotas=1
      and PROVISION>0
      AND ID_USER=P_USER
      and tipo is null;  
      
      --Alumnos Matriculados en cuotas y no pagaro nada
      update REP_MATRICULADOS set
        tipo='3MATCD'
      where DEPOSITO=0
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and tipo is null; 
      
       --Alumnos Matriculados en cuotas y pagaron menos de la matricula(mat)
      update REP_MATRICULADOS set
        tipo='4MEMA'
      where DEPOSITO<MATRICULAPROV
      and cuotas<>1
      and DEPOSITO>0
      and PROVISION>0
      AND ID_USER=P_USER
      and tipo is null;
      
      
       --Alumnos Matriculados en cuotas y pagaron solo la matricula(mat)
      update REP_MATRICULADOS set
        tipo='5SOMA'
      where MATRICULAPROV=DEPOSITO
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and tipo is null;
      
      --Alumnos Matriculados en cuotas y pagaron la matricula y una parte de su 1ra Armada
      update REP_MATRICULADOS set
        tipo='6MATMA'
      where DEPOSITO>MATRICULAPROV
      and DEPOSITO<PROVISION
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and tipo is null;
      
      --Alumnos Matriculados en cuotas y pagaron la matricula y toda su primera armada
      update REP_MATRICULADOS set
        tipo='7MATAR'
      where DEPOSITO>=PROVISION
      and cuotas<>1
      and PROVISION>0
      AND ID_USER=P_USER
      and tipo is null;
      
      --SALDO ALUMNO
      MERGE INTO REP_MATRICULADOS S 
       USING(
           select A.ID_ALUMNO_CONTRATO,
                 SUM(B.TOTAL) AS SALDO
           from REP_MATRICULADOS a,VW_MAT_SALDO_ALUMNO b
           where a.ID_ENTIDAD=b.ID_ENTIDAD
           AND SUBSTR(a.ID_DEPTO,1,1)=b.ID_DEPTO
           AND TO_NUMBER(SUBSTR(a.SEMESTRE,1,4))=b.ID_ANHO
           AND a.ID_PERSONA=b.ID_CLIENTE 
           AND a.ID_USER=P_USER
           GROUP BY A.ID_ALUMNO_CONTRATO
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND S.ID_USER=P_USER)
      WHEN  MATCHED THEN UPDATE SET  
      S.SALDO=T.SALDO;
      
      
      UPDATE REP_MATRICULADOS SET
      MOTIVO= CASE TIPO
          WHEN '1CON' THEN 'AL CONTADO DEPOSITO TOTAL'
          WHEN '2COND' THEN 'AL CONTADO CON DEUDA'
          WHEN '3MATCD' THEN 'EN CUOTAS SIN DEPOSITO'
          WHEN '4MEMA' THEN 'EN CUOTAS DEPOSITO MENOR A MATRICULA'
          WHEN '5SOMA' THEN 'EN CUOTAS DEPOSITO SOLO MATRICULA'
          WHEN '6MATMA' THEN 'EN CUOTAS DEPOSITO MENOR A 1RA ARMADA'
          WHEN '7MATAR' THEN 'EN CUOTAS DEPOSITO TOTAL'
          WHEN '8B18' THEN 'BECA 18'
          ELSE ''
        END
     WHERE ID_USER=P_USER;
      
      
      /*
      SELECT 
      CASE WHEN SUM(TOTAL) < 0 THEN ABS(SUM(TOTAL)) ELSE 0 END AS CREDITO,
      CASE WHEN SUM(TOTAL) > 0 THEN (SUM(TOTAL)) ELSE 0 END AS DEBITO
      FROM (
        SELECT 
        TOTAL
        FROM VW_SALES_MOV
        WHERE ID_ENTIDAD = ".$id_entidad."
        AND ID_DEPTO = '".$id_depto."'
        AND ID_ANHO = ".$id_anho."
        AND ID_MES BETWEEN  ".$id_mesDe." AND ".$id_mesA."
        AND ID_CLIENTE = ".$id_persona."
        AND ID_TIPOVENTA IN (1,2,3,4)
        UNION ALL
        SELECT 
        SUM(IMPORTE)*DECODE(SIGN(SUM(IMPORTE)),1,-1,0) AS TOTAL
        FROM VW_SALES_ADVANCES
        WHERE ID_ENTIDAD =  ".$id_entidad."
        AND ID_DEPTO = '".$id_depto."'
        AND ID_ANHO = ".$id_anho."
        AND ID_MES BETWEEN ".$id_mesDe." AND ".$id_mesA."
        AND ID_CLIENTE = ".$id_persona." 
      )
  */
     
    
    END SP_GENERAR_LISTA_MATRICULA;
    PROCEDURE SP_RE_GENERAR_ASIENTO_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER,P_APLAZADO varchar2,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number;
        l_id_tipoorigen number:=1; --venta
        l_fondo varchar2(10):='10';
        l_serie varchar2(10);
        l_numero varchar2(20);
        l_fecha DATE;
        l_voucher number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_glosa varchar2(100);
        l_nombre varchar2(100);
    BEGIN
      
      SELECT SERIE, NUMERO, FECHA,ID_VOUCHER, GLOSA, FC_NOMBRE_PERSONA(ID_CLIENTE) INTO l_serie,l_numero,l_fecha, l_voucher, l_glosa, l_nombre FROM VENTA WHERE ID_VENTA=P_ID_VENTA;
      
      DELETE MAT_ALUMNO_CONTRATO_ASIENTO WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      INSERT INTO MAT_ALUMNO_CONTRATO_ASIENTO(
        ID_ALUMNO_CONTRATO_ASIENTO,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET,
        ID_TIPOPLAN,
        ID_CUENTAAASI,
        ID_RESTRICCION,
        ID_ENTIDAD,
        ID_DEPTO,
        ID_CTACTE,
        PORCENTAJE,
        IMPORTE,
        GLOSA
      )
      SELECT 
        (row_number() OVER( ORDER BY A.ID_CRITERIO_SEMESTRE ASC ))  AS items,
        A.ID_ALUMNO_CONTRATO,
        a.ID_ALUMNO_CONTRATO_DET,
        b.ID_TIPOPLAN,
        B.ID_CUENTAAASI,
        B.ID_RESTRICCION,
        P_ID_ENTIDAD,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CTACTE,
        b.porcentaje,
        (CASE WHEN A.DC='C' THEN A.IMPORTE*(-1) ELSE A.IMPORTE END)*(b.porcentaje/100),
        a.DESCRIPCION
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;

      DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
      
      INSERT INTO CONTA_ASIENTO (
        ID_TIPOORIGEN,
        ID_ORIGEN, 
        FONDO,
        DEPTO,
        CUENTA, 
        CUENTA_CTE,
        RESTRICCION,
        IMPORTE,
        DESCRIPCION,
        MEMO,
        VOUCHER, 
        PARENT_ID,
        AGRUPA
        )
        SELECT 
        l_id_tipoorigen,
        VD.ID_VDETALLE,
        l_fondo,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CUENTAAASI,
        B.ID_CTACTE,
        B.ID_RESTRICCION,
        (CASE WHEN b.TIPO_DC='C' THEN VD.IMPORTE*(-1) ELSE VD.IMPORTE END)*(b.porcentaje/100),
        /*(CASE b.TIPO_DC WHEN 'D' THEN P_ID_ENTIDAD||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
        ELSE
            P_ID_ENTIDAD||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
        END),*/
        DECODE(VD.DC,'D',
            (CASE b.TIPO_DC WHEN 'D' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
            END),
            (CASE b.TIPO_DC WHEN 'C' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||' '||to_char(l_fecha,'DD/MM/YYYY')
            END)
        ),
        (to_char(l_id_tipoorigen) || '-' || to_char(VD.ID_VDETALLE)),
        l_voucher,
        NULL,
        --DECODE(b.TIPO_DC,'C','N','S')
        DECODE(VD.DC,'D',DECODE(b.TIPO_DC,'C','N','S'),DECODE(b.TIPO_DC,'C','S','N')) AS AGRUPA
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b, VENTA_DETALLE VD
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        AND A.ID_ALUMNO_CONTRATO=VD.ID_ALUMNO_CONTRATO
        AND A.ID_ALUMNO_CONTRATO_DET=VD.ID_ALUMNO_CONTRATO_DET
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND VD.ID_VENTA =P_ID_VENTA
        and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND (CURRENT_DATE BETWEEN COALESCE(B.FECHA_INICIO,CURRENT_DATE -1) AND COALESCE(B.FECHA_FIN,CURRENT_DATE +1))
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;
                          
      
      SELECT COUNT(1) INTO l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=l_id_tipoorigen
        AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
        --ANALIZAR UREGTNE
        
        if l_contar=0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento 01';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
          
          if l_credito=0 or l_debito=0 then
             l_error:=1; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=1; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_RE_GENERAR_ASIENTO_MAT;
    
    PROCEDURE SP_NOTA_MAT(P_ID_CLIENTE NUMBER,P_ID_PERSONA NUMBER,P_ID_VENTA NUMBER,P_GLOSA VARCHAR2,P_IMPORTE NUMBER,P_ES_VIRTUAL VARCHAR2, P_ERROR OUT NUMBER, P_MSN OUT VARCHAR2,P_ID_NOTA OUT NUMBER) IS
        L_ID_NOTA NUMBER;
        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(10);
        L_ID_ANHO NUMBER;
        L_ID_MES NUMBER;
        L_ID_COMPROBANTE VARCHAR2(2) := '07';
        L_ID_TIPOVENTA NUMBER := 1; --TIPO VENTA ALUMNOS
        L_ID_MONEDA NUMBER;
        L_ID_TIPONOTA varchar2(2) :='04';
        L_ID_IGV NUMBER := 18;
        L_ID_TIPOORIGEN NUMBER := 1;
        L_ID_COMPROBANTE_REF VARCHAR2(3);
        L_SERIE_REF VARCHAR2(4);
        L_NUMERO_REF VARCHAR2(8);
        L_DC VARCHAR2(1);
        L_ID_TIPOIGV VARCHAR2(2) := '30';
        L_CONT NUMBER;
        L_ERROR NUMBER :=0;
        L_MSN VARCHAR2(200);
        L_ID_DINAMICA NUMBER;
        L_ID_TIPOASIENTO VARCHAR2(5);
        L_ID_TIPOVOUCHER NUMBER := 1;
        L_ID_LEYENDA VARCHAR2(4) :='1000';
        L_ID_VNT NUMBER;
        L_TIPO VARCHAR2(1);
        L_ID_VENTA NUMBER;
        L_ID_SALDO NUMBER;
        L_ID_TRANSFERENCIA NUMBER;
        L_TOTAL NUMBER(10,2);
        L_ID_VDETALLE NUMBER;
        L_ID_PERSONA_V NUMBER;
        L_ID_DOCUMENTO NUMBER;
        --
        L_DEPTO_A VARCHAR2(10);
        L_ID_CUENTAAASI VARCHAR2(20);
        L_CUENTA_TMP VARCHAR2(20);
        L_CUENTA_CTE VARCHAR2(20);
        L_ID_RESTRICCION VARCHAR2(20);
        L_SERIE VARCHAR2(4);
        L_NUMERO VARCHAR2(8);
        L_CORRELATIVO NUMBER;
        L_ID_VOUCHER NUMBER;
        L_USER NUMBER :=4; --MATRICULADOR ONLINE
        L_MEMO VARCHAR2(255);
        
        BEGIN
            L_ERROR :=0; 
            SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_TIPOVENTA,ID_MONEDA,ID_COMPROBANTE,SERIE,NUMERO INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_TIPOVENTA,L_ID_MONEDA,L_ID_COMPROBANTE_REF,L_SERIE_REF,L_NUMERO_REF
            FROM VENTA WHERE ID_VENTA = P_ID_VENTA;
            
            SELECT MAX(ID_MES) ID_MES INTO L_ID_MES
            FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
            
            --VALIDA LA CONFIGURACION DEL VOUCHER
            L_ID_TIPOASIENTO := PKG_SALES.FC_GET_TIPO_ASIENTO(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_TIPOVOUCHER);
            IF L_ID_TIPOASIENTO = 'X' THEN
                L_ERROR:=1;
                L_MSN:='Alto: No existe la configuración de vouchers - TIPO ASIENTO para las ventas, del periodo '||TO_CHAR(L_ID_ANHO);
                GOTO SALIDA_RAPIDA;
            END IF;
            SELECT   COUNT(1) INTO L_CONT FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND ID_MODULO = '13'--modulo ventas
            AND ID_ANHO = L_ID_ANHO AND ID_TIPOASIENTO = L_ID_TIPOASIENTO
            AND AUTOMATICO='S' AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
            IF L_CONT < 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: No existe la configuración de vouchers para las ventas, del periodo '||TO_CHAR(L_ID_ANHO||L_ID_ENTIDAD||L_ID_DEPTO||L_ID_TIPOASIENTO||L_ID_TIPOVOUCHER);
                GOTO SALIDA_RAPIDA;
            ELSIF L_CONT > 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||TO_CHAR(L_ID_ANHO);
                GOTO SALIDA_RAPIDA;
            END IF;
            --CONTADOR 
            SELECT COUNT(1) INTO L_CONT FROM FIN_CONTADOR_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO;
            IF L_CONT = 0 THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSN:='FINALIZAR NOTA: Falta Asignar Contador - Sede por Departamento';
                GOTO SALIDA_RAPIDA;
            END IF;
            
            SELECT ID_PERSONA INTO L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO;
            --CREA EL VOUCHER
            PKG_ACCOUNTING.SP_CREAR_VOUCHER(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,SYSDATE,L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_PERSONA_V,L_ID_VOUCHER);
                
            IF L_ID_COMPROBANTE_REF IS NOT NULL OR L_ID_COMPROBANTE_REF <> '' THEN
                IF LENGTH(L_NUMERO_REF) > 8 THEN 
                     L_ERROR:=1;
                    L_MSN:='Alto: El documento de Referencia debe tener 8 digitos';
                    GOTO SALIDA_RAPIDA;
                END IF;
            END IF;
            IF L_ID_COMPROBANTE_REF <> '01' AND L_ID_COMPROBANTE_REF <> '03' THEN
                IF SUBSTR(L_SERIE_REF,1,1) <> 'B' OR SUBSTR(L_SERIE_REF,1,1) <> 'F' THEN
                    L_ERROR:=1;
                    L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: B100)';
                    GOTO SALIDA_RAPIDA;
                END IF;
            END IF;
            IF (L_ID_COMPROBANTE_REF = '03' AND SUBSTR(L_SERIE_REF,1,1) <> 'B') THEN 
                L_ERROR:=1;
                L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: B100)';
                GOTO SALIDA_RAPIDA;
            END IF;
            IF (L_ID_COMPROBANTE_REF = '01' AND SUBSTR(L_SERIE_REF,1,1) <> 'F') THEN 
                L_ERROR:=1;
                L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: F100)';
                GOTO SALIDA_RAPIDA;
            END IF;
            IF L_ERROR = 0 THEN
                IF L_ID_COMPROBANTE = '07' THEN
                    L_DC := 'C';
                ELSE
                    L_DC := 'D';
                END IF;
                
                IF P_ES_VIRTUAL = 'S' THEN
                    SELECT COUNT(1) INTO L_CONT FROM FIN_DOCUMENTO_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND ID_COMPROBANTE = L_ID_COMPROBANTE AND ID_COMPROBANTE_REF = L_ID_COMPROBANTE_REF;
                    IF L_CONT = 0 THEN
                        L_ERROR := 1;
                        L_MSN := 'Alto! FaltA asignar documento la entidad: '||TO_CHAR(L_ID_ENTIDAD)||' el departamento: '||L_ID_DEPTO||' y el comprobante: '||L_ID_COMPROBANTE;
                        GOTO SALIDA_RAPIDA;
                    END IF;
                    SELECT ID_DOCUMENTO INTO L_ID_DOCUMENTO FROM FIN_DOCUMENTO_DEPTO WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND ID_COMPROBANTE = L_ID_COMPROBANTE AND ID_COMPROBANTE_REF = L_ID_COMPROBANTE_REF;
                    PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(L_ID_DOCUMENTO,L_SERIE,L_CORRELATIVO);
                ELSE
                    L_USER := P_ID_PERSONA; --MATRICULDOR ONLINE
                    L_CONT := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(L_USER,L_ID_COMPROBANTE,L_ID_ENTIDAD, L_ID_DEPTO,L_ID_COMPROBANTE_REF);
                    IF L_CONT < 1 THEN
                        L_ERROR := 1;
                        L_MSN := 'Alto! No existe un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||L_ID_COMPROBANTE||']'||L_USER||'-'||L_ID_ENTIDAD||'-'||L_ID_DEPTO;
                        GOTO SALIDA_RAPIDA;
                    ELSIF L_CONT > 1 THEN
                        L_ERROR := 1;
                        L_MSN := 'Alto! Existe mas de un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||L_ID_COMPROBANTE||']';
                        GOTO SALIDA_RAPIDA;
                    END IF;
                    --***********para produccion quitar
                    PKG_SALES.SP_OBTENER_SERIE_NUMERO(L_USER,L_ID_COMPROBANTE,L_ID_ENTIDAD,L_ID_DEPTO, L_ID_COMPROBANTE_REF, L_SERIE,L_CORRELATIVO);
                END IF;
                SELECT LPAD(TO_CHAR(L_CORRELATIVO),8,'0') INTO L_NUMERO FROM DUAL;
                
                INSERT INTO VENTA(ID_PARENT,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_COMPROBANTE,ID_TIPONOTA,ID_IGV,ID_MONEDA,ID_LEYENDA,ID_TIPOTRANSACCION,ID_TIPOORIGEN,ID_VOUCHER,SERIE,NUMERO,ID_COMPROBANTE_REF,SERIE_REF,
                NUMERO_REF,FECHA,GLOSA,AGRUPADO,GRAVADA,INAFECTA,EXONERADA,GRATUITA,DESCUENTO,DESCUENTO_GLOBAL,DESCUENTO_PORCENTAJE,IMPORTE_ADESCONTAR,IGV,TOTAL,ESTADO,ID_TIPOVENTA)
                VALUES(
                P_ID_VENTA,L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_USER,P_ID_CLIENTE,L_ID_COMPROBANTE,L_ID_TIPONOTA,L_ID_IGV,L_ID_MONEDA,L_ID_LEYENDA,NULL,L_ID_TIPOORIGEN,L_ID_VOUCHER,L_SERIE,L_NUMERO,
                L_ID_COMPROBANTE_REF,L_SERIE_REF,L_NUMERO_REF,SYSDATE,P_GLOSA,'S',0,P_IMPORTE,0,0,0,0,0,0,0,P_IMPORTE,'1',L_ID_TIPOVENTA
                ) RETURNING ID_VENTA INTO L_ID_NOTA;
                
                INSERT INTO VENTA_DETALLE(ID_VENTA,ID_TIPOIGV,ID_DINAMICA,ID_TIPOORIGEN,DETALLE,DC,CANTIDAD,PRECIO,PRECIO_BASE,PRECIO_ALM,BASE,IGV,DESCUENTO,IMPORTE,IMPORTE_ADESCONTAR,DESCUENTO_PORCENTAJE,ITEM)
                VALUES(L_ID_NOTA,L_ID_TIPOIGV,L_ID_DINAMICA,L_ID_TIPOORIGEN,P_GLOSA,L_DC,1,P_IMPORTE,P_IMPORTE,0,P_IMPORTE,0,0,P_IMPORTE,0,0,1)RETURNING ID_VDETALLE INTO L_ID_VDETALLE;
                
                SELECT (TO_CHAR(L_ID_TIPOORIGEN) || '-' || TO_CHAR(L_ID_VDETALLE)) INTO L_MEMO FROM DUAL;
                --DEBITO
                
                IF L_ID_DEPTO = '1' THEN 
                        L_CUENTA_TMP :='3141001'; 
                ELSIF  L_ID_DEPTO = '5' THEN 
                        L_CUENTA_TMP :='3141001'; 
                        --L_CUENTA_TMP :='2162006';
                ELSIF  L_ID_DEPTO = '6' THEN 
                        L_CUENTA_TMP :='3141001';
                END IF;
                
                SELECT COUNT(1) INTO L_CONT
                FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = 1 AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA IN (SELECT ID_VENTA FROM VENTA WHERE ID_VENTA = P_ID_VENTA))
                AND CUENTA = L_CUENTA_TMP AND ROWNUM = 1;
                
                IF L_CONT > 0 THEN
                    SELECT DEPTO,RESTRICCION INTO L_DEPTO_A,L_ID_RESTRICCION
                    FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = 1 AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA IN (SELECT ID_VENTA FROM VENTA WHERE ID_VENTA = P_ID_VENTA))
                    AND CUENTA =  L_CUENTA_TMP  AND ROWNUM = 1;
                END IF;
             
                
                IF L_ID_DEPTO = '1' THEN
                       L_ID_CUENTAAASI :='3149011';
                        L_CUENTA_CTE :='27';
                        L_ID_RESTRICCION :='2';
                ELSIF  L_ID_DEPTO = '5' THEN
                        L_ID_CUENTAAASI :='3149011';
                        L_CUENTA_CTE :='30';
                        L_ID_RESTRICCION :='2';
                ELSIF  L_ID_DEPTO = '6' THEN
                        L_ID_CUENTAAASI :='3149011';
                        L_CUENTA_CTE :='27';
                        L_ID_RESTRICCION :='2';
                END IF;
                
                INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,AGRUPA,PRIMARIO
                    )VALUES (L_ID_TIPOORIGEN,L_ID_VDETALLE,'10',L_DEPTO_A,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,P_IMPORTE,'(Doc: '||L_SERIE||'-'||L_NUMERO||')-'||P_GLOSA,L_MEMO,L_ID_VOUCHER,NULL,'N',NULL);
                --CREDITO
              
                IF L_ID_DEPTO = '1' THEN
                    L_DEPTO_A :='11010101';
                    L_CUENTA_CTE :='2';
                ELSIF  L_ID_DEPTO = '5' THEN
                    L_DEPTO_A :='51010101';
                    L_CUENTA_CTE :='8';
                ELSIF  L_ID_DEPTO = '6' THEN
                    L_DEPTO_A :='61010101';
                    L_CUENTA_CTE :='11';
                END IF;
    
    
                
                L_ID_CUENTAAASI :='1132001'; 
                L_ID_RESTRICCION :='0A';
                INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,PARENT_ID,AGRUPA,PRIMARIO
                    )VALUES (L_ID_TIPOORIGEN,L_ID_VDETALLE,'10',L_DEPTO_A,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,P_IMPORTE*-1,'(Doc: '||L_SERIE||'-'||L_NUMERO||')-'||P_GLOSA,L_MEMO,L_ID_VOUCHER,NULL,'N',NULL);
                    
                IF L_ID_COMPROBANTE = '07' THEN
                    --GENERAR ANTICIPOS SI EL DOC QUE ESTA SIENDO AFECTADO ESTA EN CERO
                    PKG_SALES_FINANCES.SP_GENERA_ANTICIPOS_NOTAS(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_CLIENTE,L_USER,L_ID_NOTA,P_ID_VENTA,L_ERROR,L_MSN);
                END IF;
                
                --GENERA VENTA ELECTRONICA
                IF L_ID_ENTIDAD = 7124 THEN
                    PKG_SALES.SP_VENTA_ELECTRONICA(L_ID_NOTA,L_ID_COMPROBANTE);
                END IF; 
            END IF;
            
            <<SALIDA_RAPIDA>>
            P_ERROR := L_ERROR;
            P_MSN := L_MSN;
            P_ID_NOTA := L_ID_NOTA;
    END SP_NOTA_MAT;
    PROCEDURE SP_EXECUTE_NOTA_MAT(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR,P_ID_SEMESTRE NUMBER,P_ID_PERSONA NUMBER,P_ID_MODO_CONTRATO NUMBER, P_ID_NIVEL_ENSENANZA NUMBER, P_ID_MODALIDAD_ESTUDIO NUMBER,P_ID_ANHO NUMBER,P_ID_PROGRAMAS VARCHAR2,P_ID_SEDE NUMBER,P_ALUMNOS VARCHAR2,PLAN_PAGO NUMBER,P_NRO_CUOTA NUMBER, P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2)IS
        L_ID_ALUMNO_CONTRATO NUMBER;
        L_ID_CLIENTE NUMBER;
        L_ID_NOTA NUMBER;
        L_ID_VENTA NUMBER;
        L_ES_VIRTUAL VARCHAR2(1) := 'N';
        
        L_IMPORTE NUMBER(10,2);
        L_IMP_DSCTO NUMBER(10,2);
        L_GLOSA  VARCHAR2(100) :='Descuento Promocional';
        
        L_SALDO NUMBER(10,2);
        L_SIGNO NUMBER;
        L_TOTAL NUMBER(10,2);
        
        L_CONTAR NUMBER;
        L_ERROR NUMBER := 0;
        L_MSGERROR VARCHAR2(200) := 'OK';
        L_TIPO_ALUMNO VARCHAR2(4);
        L_ID_SEDE NUMBER;
        L_CANT NUMBER;
        
        S_PERSONAS TABLASTRING; 
        S_PROGRAMAS TABLASTRING;
        S_CONTA INT :=0;
        L_ID_PERSONA NUMBER;
        L_PERSONAS VARCHAR2(4000);
        L_ID_PROGRAMA_ESTUDIO NUMBER;
        L_PROGRAMAS VARCHAR2(4000);
        
        CURSOR C_ALUMNOS IS
        SELECT A.ID_ALUMNO_CONTRATO,A.ID_PERSONA,A.TIPO_ALUMNO,NVL(A.IMP_DSCTO*0.4,0)
        FROM DAVID.ACAD_ALUMNO_CONTRATO A JOIN MOISES.PERSONA B ON A.ID_PERSONA = B.ID_PERSONA
        JOIN MOISES.PERSONA_NATURAL_ALUMNO C ON B.ID_PERSONA = C.ID_PERSONA
        JOIN DAVID.ACAD_SEMESTRE_PROGRAMA D ON A.ID_SEMESTRE_PROGRAMA = D.ID_SEMESTRE_PROGRAMA  
        JOIN DAVID.ACAD_MATRICULA_DETALLE MD ON A.ID_MATRICULA_DETALLE = MD.ID_MATRICULA_DETALLE
        JOIN DAVID.VW_ACAD_PROGRAMA_ESTUDIO PS ON PS.ID_PROGRAMA_ESTUDIO = D.ID_PROGRAMA_ESTUDIO
        JOIN MAT_PLANPAGO_SEMESTRE PPS ON PPS.ID_PLANPAGO_SEMESTRE = A.ID_PLANPAGO_SEMESTRE
        JOIN MAT_PLANPAGO PP ON PP.ID_PLANPAGO = PPS.ID_PLANPAGO
        JOIN ORG_SEDE_AREA SA ON SA.ID_SEDEAREA = PS.ID_SEDEAREA
        WHERE D.ID_SEMESTRE = P_ID_SEMESTRE
        AND A.ESTADO = '1'
        AND MD.ID_MODO_CONTRATO = P_ID_MODO_CONTRATO --DESCOMENTAR
        AND PP.CUOTAS = PLAN_PAGO
        AND PS.ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA
        AND PS.ID_MODALIDAD_ESTUDIO = P_ID_MODALIDAD_ESTUDIO
        AND A.TIPO_ALUMNO <> 'B18'
        AND PS.ID_PROGRAMA_ESTUDIO IN (SELECT ID_PROGRAMA_ESTUDIO FROM TT_PROGRAMAS_NC WHERE ID_SEDE = P_ID_SEDE)
        AND A.ID_PERSONA NOT IN (SELECT ID_PERSONA FROM TT_ALUMNOS_NC WHERE ID_SEDE = P_ID_SEDE) 
        AND PS.ID_SEDE = P_ID_SEDE 
        ORDER BY A.ID_ALUMNO_CONTRATO;
        
        BEGIN
            SELECT FC_SPLIT (P_ALUMNOS,'|') INTO S_PERSONAS  FROM DUAL;
            SELECT FC_SPLIT (P_ID_PROGRAMAS,'|') INTO S_PROGRAMAS  FROM DUAL; 
            DELETE TT_ALUMNOS_NC;
            FOR i IN S_PERSONAS.FIRST .. S_PERSONAS.LAST
                LOOP
                    SELECT CAST(S_PERSONAS(i) AS NUMBER) INTO L_ID_PERSONA FROM DUAL;
                    INSERT INTO TT_ALUMNOS_NC(ID_SEDE,ID_PERSONA)VALUES(P_ID_SEDE,L_ID_PERSONA);
            END LOOP;
            S_CONTA := 0;
            DELETE TT_PROGRAMAS_NC;
            FOR i IN S_PROGRAMAS.FIRST .. S_PROGRAMAS.LAST
                LOOP
                    SELECT CAST(S_PROGRAMAS(i) AS NUMBER) INTO L_ID_PROGRAMA_ESTUDIO FROM DUAL;
                    INSERT INTO TT_PROGRAMAS_NC(ID_SEDE,ID_PROGRAMA_ESTUDIO)VALUES(P_ID_SEDE,L_ID_PROGRAMA_ESTUDIO);
            END LOOP;
            
            UPDATE TEST_NC_DSCTO SET REVISADO = 'S' WHERE ID_USER = P_ID_PERSONA;
            
            OPEN C_ALUMNOS;
                FETCH C_ALUMNOS INTO L_ID_ALUMNO_CONTRATO,L_ID_CLIENTE,L_TIPO_ALUMNO,L_IMP_DSCTO;
                WHILE C_ALUMNOS%FOUND LOOP
                
                    SELECT COUNT(1) INTO L_CANT
                    FROM VENTA A JOIN VENTA_DETALLE B ON A.ID_VENTA = B.ID_VENTA 
                    WHERE A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_DEPTO = P_ID_DEPTO 
                    AND A.ID_ANHO = P_ID_ANHO AND ID_CLIENTE = L_ID_CLIENTE AND ESTADO = '1' 
                    AND B.ID_ALUMNO_CONTRATO = L_ID_ALUMNO_CONTRATO AND CUOTA = P_NRO_CUOTA AND A.TOTAL > 0;
                    
                    IF L_CANT > 0 THEN
                    
                        SELECT DISTINCT A.ID_VENTA,A.TOTAL INTO L_ID_VENTA,  L_TOTAL
                        FROM VENTA A JOIN VENTA_DETALLE B ON A.ID_VENTA = B.ID_VENTA 
                        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_DEPTO = P_ID_DEPTO 
                        AND A.ID_ANHO = P_ID_ANHO AND ID_CLIENTE = L_ID_CLIENTE AND ESTADO = '1' 
                        AND B.ID_ALUMNO_CONTRATO = L_ID_ALUMNO_CONTRATO AND CUOTA = P_NRO_CUOTA AND A.TOTAL > 0;
                        
                        
                        IF L_TOTAL > 0 THEN
                            SELECT
                                NVL(ABS(SUM(TOTAL)),0) AS TOTAL, SIGN(NVL(SUM(TOTAL),0)) AS SIGNO INTO L_SALDO, L_SIGNO 
                            FROM (
                                SELECT TOTAL FROM VW_SALES_MOV
                                WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = L_ID_CLIENTE AND ID_TIPOVENTA IN (1,2,3)
                                UNION ALL
                                SELECT SUM(IMPORTE)*DECODE(SIGN(SUM(IMPORTE)),1,-1,0) AS TOTAL
                                FROM VW_SALES_ADVANCES
                                WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = L_ID_CLIENTE
                            );
                            
                            IF L_IMP_DSCTO = 0 THEN
                                L_IMPORTE := ROUND(L_TOTAL*0.1,2);
                            ELSE
                                L_IMPORTE := L_IMP_DSCTO;
                            END IF;
                            
                            IF L_SIGNO = 1 THEN
                                --L_ERROR := 1;
                                --L_MSGERROR := 'Alto! Estado de Cuenta en 0 y/o Alumno con Deuda';
                                --INSERT INTO TEST_DSCTO_MAT VALUES(L_ID_CLIENTE,L_MSGERROR,L_TOTAL,L_IMP_DSCTO,L_SALDO,'N');
                                
                                IF L_SALDO <= (L_IMPORTE+5) THEN --GENERA LA NOTA DE CREDITO
                                    L_ERROR := 0;
                                    L_MSGERROR := 'OK';
                                    PKG_FINANCES_STUDENTS.SP_NOTA_MAT(L_ID_CLIENTE,P_ID_PERSONA,L_ID_VENTA,L_GLOSA,L_IMPORTE,L_ES_VIRTUAL,L_ERROR,L_MSGERROR,L_ID_NOTA);
                                    INSERT INTO TEST_DSCTO_MAT VALUES(L_ID_CLIENTE,L_MSGERROR,L_TOTAL,L_IMPORTE,L_SALDO,'S',SYSDATE);
                                    INSERT INTO TEST_NC_DSCTO(ID_USER,ID_CLIENTE,ID_VENTA,FECHA,MSN,IMP_CUOTA,IMP_DSCTO,SALDO,OK,REVISADO)
                                    VALUES(P_ID_PERSONA,L_ID_CLIENTE,L_ID_NOTA,SYSDATE,L_MSGERROR,L_TOTAL,L_IMPORTE,L_SALDO,'S','N');
                                ELSE 
                                    L_ERROR := 0;
                                    L_MSGERROR := 'Alto! Deuda Mayor al 10%';
                                    INSERT INTO TEST_DSCTO_MAT VALUES(L_ID_CLIENTE,L_MSGERROR,L_TOTAL,L_IMPORTE,L_SALDO,'N',SYSDATE);
                                    INSERT INTO TEST_NC_DSCTO(ID_USER,ID_CLIENTE,ID_VENTA,FECHA,MSN,IMP_CUOTA,IMP_DSCTO,SALDO,OK,REVISADO)
                                    VALUES(P_ID_PERSONA,L_ID_CLIENTE,L_ID_NOTA,SYSDATE,L_MSGERROR,L_TOTAL,L_IMPORTE,L_SALDO,'N','N');
                                END IF;
                            ELSE
                                --GENERA LA NOTA DE CREDITO
                                L_ERROR := 0;
                                L_MSGERROR := 'OK';
                                PKG_FINANCES_STUDENTS.SP_NOTA_MAT(L_ID_CLIENTE,P_ID_PERSONA,L_ID_VENTA,L_GLOSA,L_IMPORTE,L_ES_VIRTUAL,L_ERROR,L_MSGERROR,L_ID_NOTA);
                                INSERT INTO TEST_DSCTO_MAT VALUES(L_ID_CLIENTE,L_MSGERROR,L_TOTAL,L_IMPORTE,L_SALDO*-1,'S',SYSDATE);
                                INSERT INTO TEST_NC_DSCTO(ID_USER,ID_CLIENTE,ID_VENTA,FECHA,MSN,IMP_CUOTA,IMP_DSCTO,SALDO,OK,REVISADO)
                                    VALUES(P_ID_PERSONA,L_ID_CLIENTE,L_ID_NOTA,SYSDATE,L_MSGERROR,L_TOTAL,L_IMPORTE,L_SALDO*-1,'S','N');
                            END IF;
                        ELSE --VENTAS ANULADAS
                            L_ERROR := 0;
                            L_MSGERROR := 'Alto! Venta Anulada';
                            INSERT INTO TEST_DSCTO_MAT VALUES(L_ID_CLIENTE,L_MSGERROR,L_TOTAL,L_IMP_DSCTO,L_SALDO,'N',SYSDATE);
                            INSERT INTO TEST_NC_DSCTO(ID_USER,ID_CLIENTE,ID_VENTA,FECHA,MSN,IMP_CUOTA,IMP_DSCTO,SALDO,OK,REVISADO)
                            VALUES(P_ID_PERSONA,L_ID_CLIENTE,L_ID_NOTA,SYSDATE,L_MSGERROR,L_TOTAL,L_IMP_DSCTO,L_SALDO,'N','N');
                        END IF;
                    ELSE
                        L_ERROR := 0;
                        L_MSGERROR := 'Alto! No Existe Venta';
                        INSERT INTO TEST_DSCTO_MAT VALUES(L_ID_CLIENTE,L_MSGERROR,L_TOTAL,L_IMP_DSCTO,L_SALDO,'N',SYSDATE);
                        INSERT INTO TEST_NC_DSCTO(ID_USER,ID_CLIENTE,ID_VENTA,FECHA,MSN,IMP_CUOTA,IMP_DSCTO,SALDO,OK,REVISADO)
                        VALUES(P_ID_PERSONA,L_ID_CLIENTE,L_ID_NOTA,SYSDATE,L_MSGERROR,L_TOTAL,L_IMP_DSCTO,L_SALDO,'N','N');
                    END IF;
                    
                FETCH C_ALUMNOS INTO L_ID_ALUMNO_CONTRATO,L_ID_CLIENTE,L_TIPO_ALUMNO,L_IMP_DSCTO;
                END LOOP;
            CLOSE C_ALUMNOS;
        P_ERROR:=L_ERROR;
        P_MSGERROR:= L_MSGERROR;
    END SP_EXECUTE_NOTA_MAT;
    
    PROCEDURE SP_GENERAR_ASIENTO_MAT_MANUAL(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD IN NUMBER,P_ID_VENTA IN NUMBER) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number;
        l_id_tipoorigen number:=1; --venta
        l_fondo varchar2(10):='10';
        l_serie varchar2(10);
        l_numero varchar2(20);
        l_fecha DATE;
        l_voucher number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_glosa varchar2(100);
        l_nombre varchar2(100);
    BEGIN
      
      SELECT SERIE, NUMERO, FECHA,ID_VOUCHER, GLOSA, FC_NOMBRE_PERSONA(ID_CLIENTE) INTO l_serie,l_numero,l_fecha, l_voucher, l_glosa, l_nombre FROM VENTA WHERE ID_VENTA=P_ID_VENTA;
      
      INSERT INTO CONTA_ASIENTO (
        ID_TIPOORIGEN,
        ID_ORIGEN, 
        FONDO,
        DEPTO,
        CUENTA, 
        CUENTA_CTE,
        RESTRICCION,
        IMPORTE,
        DESCRIPCION,
        MEMO,
        VOUCHER, 
        PARENT_ID,
        AGRUPA
        )
        SELECT 
        l_id_tipoorigen,
        VD.ID_VDETALLE,
        l_fondo,
        COALESCE(B.ID_DEPTO,A.ID_DEPTO),
        B.ID_CUENTAAASI,
        B.ID_CTACTE,
        B.ID_RESTRICCION,
        (CASE WHEN b.TIPO_DC='C' THEN VD.IMPORTE*(-1) ELSE VD.IMPORTE END)*(b.porcentaje/100),
        DECODE(VD.DC,'D',
            (CASE b.TIPO_DC WHEN 'D' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||to_char(l_fecha,'DD/MM/YYYY')
            END),
            (CASE b.TIPO_DC WHEN 'C' THEN 7124||'-'||'(Doc: '||l_serie||'-'||to_number(l_numero)||')-'||l_glosa||'-'||l_nombre
            ELSE
                7124||' - (Doc: '||l_serie||'-'||l_numero||')-'||CS.NOMBRE||' '||to_char(l_fecha,'DD/MM/YYYY')
            END)
        ),
        (to_char(l_id_tipoorigen) || '-' || to_char(VD.ID_VDETALLE)),
        l_voucher,
        NULL,
        DECODE(VD.DC,'D',DECODE(b.TIPO_DC,'C','N','S'),DECODE(b.TIPO_DC,'C','S','N')) AS AGRUPA
        from VW_MAT_CRITERIO_SEMESTRE CS, mat_alumno_contrato_det a, mat_criterio_semestre_asiento b, VENTA_DETALLE VD
        where CS.id_criterio_semestre=A.id_criterio_semestre
        AND a.id_criterio_semestre=b.id_criterio_semestre
        AND A.ID_ALUMNO_CONTRATO=VD.ID_ALUMNO_CONTRATO
        AND A.ID_ALUMNO_CONTRATO_DET=VD.ID_ALUMNO_CONTRATO_DET
        and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND VD.ID_VENTA =P_ID_VENTA
        --and case when P_APLAZADO='S' then a.aplazado else 'N' end = P_APLAZADO
        AND TO_CHAR(B.FECHA_FIN,'DD/MM/YYYY') = '31/08/2021'
        ORDER BY A.ID_ALUMNO_CONTRATO_DET,A.DC DESC;
                         
        
    END SP_GENERAR_ASIENTO_MAT_MANUAL;
    PROCEDURE SP_GENERAR_ASIENTO_FALTANTE(P_ID_ENTIDAD NUMBER)IS
        L_ID NUMBER;
        L_ID_ANHO NUMBER := 2021;
        L_ID_MES NUMBER  := 1;
        L_ID_MONEDA NUMBER := 7;
        L_ID_CLIENTE NUMBER;
        L_TOTAL NUMBER(10,2);
        L_SALDO NUMBER(10,2);
        L_ID_VENTA NUMBER;
        L_SERIE VARCHAR2(4);
        L_NUMERO VARCHAR2(8);
        L_IMP NUMBER(10,2);
        L_ID_COMPROBANTE VARCHAR2(2) :='00';
        L_GLOSA VARCHAR2(200);
        L_FECHA DATE;
        L_ID_TIPOVENTA NUMBER :=1;
        L_TOTAL_ANTICIPO NUMBER(10,2);
        L_IMPORTE_ANTICIPO   NUMBER(10,2);
        L_TOTAL_ME NUMBER :=0;
        L_DC VARCHAR2(1);
        L_CODIGO VARCHAR2(2);
        L_TIPO VARCHAR2(1);
        L_CANT NUMBER;
        L_MSN VARCHAR2(100);
        L_ERROR NUMBER :=0;
        L_ID_VNT NUMBER;
        L_ID_ALUMNO_CONTRATO NUMBER;
        
        CURSOR C_ALUMNOS IS
        SELECT A.ID_VENTA, B.ID_ALUMNO_CONTRATO
        FROM ELISEO.VENTA A 
        INNER JOIN ELISEO.VENTA_DETALLE B ON B.ID_VENTA = A.ID_VENTA
        WHERE B.ID_ALUMNO_CONTRATO IS NOT NULL AND A.FECHA LIKE '%31/08/21%' AND A.ID_DEPTO='5'
        AND A.ID_VENTA NOT IN (498873,498875,498930,498932)--= 498873
        GROUP BY A.ID_VENTA, A.SERIE, A.NUMERO , A.ID_PERSONA, A.TOTAL, B.ID_ALUMNO_CONTRATO,  A.GLOSA;
            

        BEGIN
            OPEN C_ALUMNOS;
                FETCH C_ALUMNOS INTO L_ID_VENTA,L_ID_ALUMNO_CONTRATO;
                WHILE C_ALUMNOS%FOUND LOOP
                    PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_MAT_MANUAL(L_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,L_ID_VENTA);
                FETCH C_ALUMNOS INTO L_ID_VENTA,L_ID_ALUMNO_CONTRATO;
                END LOOP;
            CLOSE C_ALUMNOS;
    END SP_GENERAR_ASIENTO_FALTANTE;
    
    PROCEDURE SP_LISTAR_DETALLE_CONTRATO(P_ID_ALUMNO_CONTRATO NUMBER,P_DC VARCHAR2,CURSOR OUT SYS_REFCURSOR ) AS
 
      BEGIN
        
        OPEN cursor FOR 
          select 
            x.id_criterio,
            x.id_parent,
            x.nombre,
            x.importe,
            x.dc,
            x.codigo,
            x.orden,
            x.tipo,
            x.ver_hijo,
            level as nivel
          from(
            select
            b.id_criterio,
            b.id_parent,
            b.nombre,
            a.importe,
            a.dc,
            b.codigo,
            b.orden,
            b.ver_hijo,
            --(case when a.dc = 'C' AND b.codigo in('DSCTOCP','DSCTOCPCA') then 'X' else a.dc end) as tipo --Mostraba Cobranza Suspendida
            (case when a.dc = 'C' AND b.codigo in('DSCTOCP','DSCTOCPCA') then a.dc else a.dc end) as tipo
            from eliseo.mat_alumno_contrato_det a, eliseo.vw_mat_criterio_semestre  b
            where a.id_criterio_semestre=b.id_criterio_semestre
            and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            and a.dc like '%'||P_DC||'%'
            and b.id_parent is null
            and coalesce(b.ver_hijo,'N')='N'
            union
            select 
            b.id_criterio,
            b.id_parent,
            b.nombre,
            a.importe,
            a.dc,
            b.codigo,
            b.orden,
            b.ver_hijo,
            (case when a.dc = 'C' AND b.codigo in('DSCTOCP','DSCTOCPCA') then a.dc else a.dc end) as tipo
            from eliseo.mat_alumno_contrato_det a, eliseo.vw_mat_criterio_semestre  b
            where a.id_criterio_semestre=b.id_criterio_semestre
            and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            and a.dc like '%'||P_DC||'%'
            and b.id_parent is null
            and coalesce(b.ver_hijo,'N')='S'
            union
            select 
            b.id_criterio,
            b.id_parent,
            b.nombre,
            a.importe,
            a.dc,
            b.codigo,
            b.orden,
            b.ver_hijo,
            (case when a.dc = 'C' AND b.codigo in('DSCTOCP','DSCTOCPCA') then a.dc else a.dc end) as tipo
            from eliseo.mat_alumno_contrato_det a, eliseo.vw_mat_criterio_semestre  b
            where a.id_criterio_semestre=b.id_criterio_semestre
            and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            and a.dc like '%'||P_DC||'%'
            and coalesce(b.id_parent,0) in(
              select  
              b.id_criterio
              from eliseo.mat_alumno_contrato_det a, eliseo.vw_mat_criterio_semestre  b
              where a.id_criterio_semestre=b.id_criterio_semestre
              and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
              and a.dc like '%'||P_DC||'%'
              and b.id_parent is null
              and coalesce(b.ver_hijo,'N')='S'
            )
            order by orden
          )x
          START WITH x.id_parent is null
          CONNECT BY PRIOR x.id_criterio = coalesce(x.id_parent,0) 
          ORDER SIBLINGS BY x.dc desc,x.orden;
        
      END SP_LISTAR_DETALLE_CONTRATO;
      
       PROCEDURE SP_RESI_RESIDENCIA_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_resid_tipo_habitacion number;
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_desde date;
    l_hasta date;
    l_dias decimal(10,2);
    l_id_plan_programa number;
    l_total number(10,2):=0;
    l_cuotas number(10,2);

  BEGIN
  
    SELECT a.ID_SEMESTRE_PROGRAMA,a.ID_PERSONA,a.ID_PLAN_PROGRAMA, C.CUOTAS
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa,l_cuotas
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_cuotas=1  then
      l_error:=0;
      l_msgerror:='';
      goto resi_resi_mat;
    end if;
    
    
    
    SELECT ID_SEMESTRE INTO l_id_semestre FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      ID_CRITERIO_PROC, --ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    if l_id_criterio is null then
      l_error:=1;
      l_msgerror:='Falta asociar a residencia mensual';
      goto resi_resi_mat;
    end if;
     
    select COUNT(*) INTO l_contar
    from DAVID.Acad_Reserva_Residencia arr
    inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
    inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque --and rh.id_habitacion=1
    --inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion  and Rth.Estado='1'
    inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Resid_Tipo_Habitacion=Rh.Id_Resid_Tipo_Habitacion  and Rth.Estado='1'
    WHERE rth.ID_CRITERIO=l_id_criterio
    AND arr.ID_SEMESTRE=l_id_semestre
    AND arr.ID_PERSONA=l_id_persona
    and arr.ID_PLAN_PROGRAMA=l_id_plan_programa
    AND arr.ESTADO='6';
    
 
    IF l_contar>0 THEN
      if l_contar=1 then
      
        SELECT rth.nombre,rth.ID_RESID_TIPO_HABITACION ,arr.fecha_inicio,arr.fecha_fin
        INTO l_nombre,l_id_resid_tipo_habitacion,l_desde,l_hasta
        from DAVID.Acad_Reserva_Residencia arr
        inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
        inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque --and rh.id_habitacion=1
        --inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion  and Rth.Estado='1'
        inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Resid_Tipo_Habitacion=Rh.Id_Resid_Tipo_Habitacion  and Rth.Estado='1'
        WHERE rth.ID_CRITERIO=l_id_criterio
        AND arr.ID_SEMESTRE=l_id_semestre
        AND arr.ID_PERSONA=l_id_persona
        and arr.ID_PLAN_PROGRAMA=l_id_plan_programa
        AND arr.ESTADO='6';
    
  
        /*--lo va tomar de la tabla DAVID.Acad_Reserva_Residencia
        SELECT MIN(C.FECHA_INICIO) AS FECHA_INICIO,MAX(C.FECHA_FIN) AS FECHA_FIN into l_desde,l_hasta
        FROM VW_MAT_CURSOS_PLAN_ALUMNO A, DAVID.ACAD_CARGA_CURSO_DOCENTE B,DAVID.ACAD_MODULO_DETALLE C
        WHERE A.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ID_MODULO_DETALLE=C.ID_MODULO_DETALLE;
        */
        
        
        if l_desde is null or l_hasta is null then
          l_error:=1;
          l_msgerror:='Falta asignar fecha desde o hasta de permanencia en la residencia';
          goto resi_resi_mat;
        end if;
        
         if l_desde > l_hasta then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor a la fecha hasta de permanencia en la residencia';
          goto resi_resi_mat;
        end if;
    
        --select coalesce(sum((l_hasta -  l_desde)+1),0)+9 into  l_dias  from dual; 
        select coalesce(sum((l_hasta -  l_desde)+1),0) into  l_dias  from dual; 
        
         SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
         
         --l_total:= (l_importe*l_dias)/2;
         l_total:= (l_importe*l_dias)*0.2;
         
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          CANTIDAD,
          UNITARIO,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre||'. '||TO_CHAR(l_desde,'DD/MM/YYYY')||'-'||TO_CHAR(l_hasta,'DD/MM/YYYY')||' '||TO_CHAR(l_dias)||' dias' ,
          l_dc,
          l_dias,
          l_importe,
          l_total,
          l_tipo_valor
          );
          
          update DAVID.ACAD_ALUMNO_CONTRATO SET 
          ID_RESID_TIPO_HABITACION= l_id_resid_tipo_habitacion ,
          DIAS_RESIDENCIA=l_dias
          WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO; 
          
      else
        l_error:=1;
        l_msgerror:='Mas de una residencia Reservada';
      end if;
      
     END IF;
     
    <<resi_resi_mat>>
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_RESI_RESIDENCIA_MAT;
      
  PROCEDURE SP_RESI_RESIDENCIA_MEN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_resid_tipo_habitacion number;
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_desde date;
    l_hasta date;
    l_dias decimal(10,2);
    l_id_plan_programa number;
    l_total number(10,2);
    l_cuotas number(10,2);
  BEGIN
  
     SELECT a.ID_SEMESTRE_PROGRAMA,a.ID_PERSONA,a.ID_PLAN_PROGRAMA, C.CUOTAS
    INTO l_id_semestre_programa,l_id_persona,l_id_plan_programa,l_cuotas
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT ID_SEMESTRE INTO l_id_semestre FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
     
    select COUNT(*) INTO l_contar
    from DAVID.Acad_Reserva_Residencia arr
    inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
    inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque --and rh.id_habitacion=1
    --inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion  and Rth.Estado='1'
    inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Resid_Tipo_Habitacion=Rh.Id_Resid_Tipo_Habitacion  and Rth.Estado='1'
    WHERE rth.ID_CRITERIO=l_id_criterio
    AND arr.ID_SEMESTRE=l_id_semestre
    AND arr.ID_PERSONA=l_id_persona
    and arr.ID_PLAN_PROGRAMA=l_id_plan_programa
    AND arr.ESTADO='6';
    
 
    IF l_contar>0 THEN
      if l_contar=1 then
      
        SELECT rth.nombre,rth.ID_RESID_TIPO_HABITACION ,arr.fecha_inicio,arr.fecha_fin
        INTO l_nombre,l_id_resid_tipo_habitacion,l_desde,l_hasta
        from DAVID.Acad_Reserva_Residencia arr
        inner join DAVID.residencia_habitacion rh on Rh.Id_Habitacion=Arr.Id_Habitacion
        inner join DAVID.Residencia_Bloque rb on Rb.Id_Bloque=Rh.Id_Bloque --and rh.id_habitacion=1
        --inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Tipo_Habitacion=Rh.Id_Tipo_Habitacion  and Rth.Estado='1'
        inner join DAVID.residencia_tipo_habitacion rth on Rth.Id_Residencia=Rb.Id_Residencia and Rth.Id_Resid_Tipo_Habitacion=Rh.Id_Resid_Tipo_Habitacion  and Rth.Estado='1'
        WHERE rth.ID_CRITERIO=l_id_criterio
        AND arr.ID_SEMESTRE=l_id_semestre
        AND arr.ID_PERSONA=l_id_persona
        and arr.ID_PLAN_PROGRAMA=l_id_plan_programa
        AND arr.ESTADO='6';
    
  
        /*--lo va tomar de la tabla DAVID.Acad_Reserva_Residencia
        SELECT MIN(C.FECHA_INICIO) AS FECHA_INICIO,MAX(C.FECHA_FIN) AS FECHA_FIN into l_desde,l_hasta
        FROM VW_MAT_CURSOS_PLAN_ALUMNO A, DAVID.ACAD_CARGA_CURSO_DOCENTE B,DAVID.ACAD_MODULO_DETALLE C
        WHERE A.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
        AND A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ID_MODULO_DETALLE=C.ID_MODULO_DETALLE;
        */
        
        
        if l_desde is null or l_hasta is null then
          l_error:=1;
          l_msgerror:='Falta asignar fecha desde o hasta de permanencia en la residencia';
          goto resi_residencia;
        end if;
        
         if l_desde > l_hasta then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor a la fecha hasta de permanencia en la residencia';
          goto resi_residencia;
        end if;
    
        --select coalesce(sum((l_hasta -  l_desde)+1),0)+9 into  l_dias  from dual; 
        select coalesce(sum((l_hasta -  l_desde)+1),0) into  l_dias  from dual; 
        
         SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
         
         if l_cuotas=1 then
          l_total:= (l_importe*l_dias);
         else
          --l_total:= (l_importe*l_dias)/2;
          l_total:= (l_importe*l_dias)*0.8;
         end if;
         
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          CANTIDAD,
          UNITARIO,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre||'. '||TO_CHAR(l_desde,'DD/MM/YYYY')||'-'||TO_CHAR(l_hasta,'DD/MM/YYYY')||' '||TO_CHAR(l_dias)||' dias' ,
          l_dc,
          l_dias,
          l_importe,
          l_total,
          l_tipo_valor
          );
          
          update DAVID.ACAD_ALUMNO_CONTRATO SET 
          ID_RESID_TIPO_HABITACION= l_id_resid_tipo_habitacion ,
          DIAS_RESIDENCIA=l_dias
          WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO; 
          
      else
        l_error:=1;
        l_msgerror:='Mas de una residencia Reservada';
      end if;
      
     END IF;
     
    <<resi_residencia>>
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_RESI_RESIDENCIA_MEN;
  
  PROCEDURE SP_RESI_LAVANDERIA_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_resid_tipo_habitacion number;
    l_id_criterio number;
    l_importe number(10,2);
    l_tipo_valor	varchar2(2 byte);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_id_semestre_programa NUMBER;
    l_total number(10,2);
    l_cuotas number(10,2);
  begin
    SELECT a.ID_SEMESTRE_PROGRAMA, C.CUOTAS,coalesce(a.DIAS_RESIDENCIA,0),coalesce(a.ID_RESID_TIPO_HABITACION,0)
    INTO l_id_semestre_programa,l_cuotas,l_dias,l_id_resid_tipo_habitacion
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_cuotas=1  then
      l_error:=0;
      l_msgerror:='';
      goto resi_resi_mat;
    end if;
    
        
    if l_id_resid_tipo_habitacion >0 then
    
      --VERIFICA SI TIENE SERVICIO DE LAVANDERIA
      SELECT COUNT(*) INTO l_contar FROM DAVID.RESIDENCIA_CARACTERISTICA A, DAVID.TIPO_CARACTERISTICA_RESIDENCIA B 
      WHERE A.ID_TIPO_CARACT_RESIDENCIA=B.ID_TIPO_CARACT_RESIDENCIA
      AND A.ID_RESID_TIPO_HABITACION=l_id_resid_tipo_habitacion  and a.estado='1'
      AND B.CODIGO='7';
      
      IF l_contar>0 THEN
    
        SELECT 
          ID_CRITERIO,
          IMPORTE,
          DC,
          NOMBRE,
          TIPO_VALOR
          INTO
          l_id_criterio,
          l_importe,
          l_dc,
          l_nombre,
          l_tipo_valor
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
           --l_total:=(l_importe*l_dias)/2;
           l_total:= (l_importe*l_dias)*0.2;
           
           insert into MAT_CONCEPTO_ASIGN_ALUM(
              ID_ALUMNO_CONTRATO,
              ID_CRITERIO_SEMESTRE,
              ITEM,
              ID_SEMESTRE_PROGRAMA,
              DESCRIPCION,
              DC,
              CANTIDAD,
              UNITARIO,
              TOTAL,
              TIPO_VALOR
            )VALUES(
              P_ID_ALUMNO_CONTRATO,
              P_ID_CRITERIO_SEMESTRE,
              l_items,
              l_id_semestre_programa,
              l_nombre||' '||TO_CHAR(l_dias)||' dias',
              l_dc,
              l_dias,
              l_importe,
              l_total,
              l_tipo_valor
        );
      END IF;
    
    end if;
    <<resi_resi_mat>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_RESI_LAVANDERIA_MAT;
  
  PROCEDURE SP_RESI_ALIMENTACION_MAT(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_resid_tipo_habitacion number;
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_id_semestre_programa NUMBER;
    l_total number(10,2);
    l_cuotas number(10,2);
  begin
    SELECT a.ID_SEMESTRE_PROGRAMA, C.CUOTAS,coalesce(a.DIAS_RESIDENCIA,0),coalesce(a.ID_RESID_TIPO_HABITACION,0)
    INTO l_id_semestre_programa,l_cuotas,l_dias,l_id_resid_tipo_habitacion
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    if l_cuotas=1  then
      l_error:=0;
      l_msgerror:='';
      goto resi_resi_mat;
    end if;
    
    if l_id_resid_tipo_habitacion >0 then
      SELECT 
        ID_CRITERIO,
        IMPORTE,
        DC,
        NOMBRE,
        TIPO_VALOR
        INTO
        l_id_criterio,
        l_importe,
        l_dc,
        l_nombre,
        l_tipo_valor
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
      
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
         
         --l_total:=(l_importe*l_dias)/2;
         l_total:= (l_importe*l_dias)*0.2;
         
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          CANTIDAD,
          UNITARIO,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre||' '||TO_CHAR(l_dias)||' dias',
          l_dc,
          l_dias,
          l_importe,
          l_total,
          l_tipo_valor
      );
    
    end if;
    <<resi_resi_mat>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_RESI_ALIMENTACION_MAT;
  
  PROCEDURE SP_RESI_LAVANDERIA_MEN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_resid_tipo_habitacion number;
    l_id_criterio number;
    l_importe number(10,2);
    l_tipo_valor	varchar2(2 byte);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_id_semestre_programa NUMBER;
    l_total number(10,2);
    l_cuotas number(10,2);
  begin
    SELECT a.ID_SEMESTRE_PROGRAMA, C.CUOTAS,coalesce(a.DIAS_RESIDENCIA,0),coalesce(a.ID_RESID_TIPO_HABITACION,0)
    INTO l_id_semestre_programa,l_cuotas,l_dias,l_id_resid_tipo_habitacion
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
        
    if l_id_resid_tipo_habitacion >0 then
    
      --VERIFICA SI TIENE SERVICIO DE LAVANDERIA
      SELECT COUNT(*) INTO l_contar FROM DAVID.RESIDENCIA_CARACTERISTICA A, DAVID.TIPO_CARACTERISTICA_RESIDENCIA B 
      WHERE A.ID_TIPO_CARACT_RESIDENCIA=B.ID_TIPO_CARACT_RESIDENCIA
      AND A.ID_RESID_TIPO_HABITACION=l_id_resid_tipo_habitacion  and a.estado='1'
      AND B.CODIGO='7';
      
      IF l_contar>0 THEN
    
        SELECT 
          ID_CRITERIO,
          IMPORTE,
          DC,
          NOMBRE,
          TIPO_VALOR
          INTO
          l_id_criterio,
          l_importe,
          l_dc,
          l_nombre,
          l_tipo_valor
        FROM VW_MAT_CRITERIO_SEMESTRE
        WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
        
        SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
          if l_cuotas=1 then
            l_total:= (l_importe*l_dias);
          else
            --l_total:= (l_importe*l_dias)/2;
            l_total:= (l_importe*l_dias)*0.8;
          end if;
           
           insert into MAT_CONCEPTO_ASIGN_ALUM(
              ID_ALUMNO_CONTRATO,
              ID_CRITERIO_SEMESTRE,
              ITEM,
              ID_SEMESTRE_PROGRAMA,
              DESCRIPCION,
              DC,
              CANTIDAD,
              UNITARIO,
              TOTAL,
              TIPO_VALOR
            )VALUES(
              P_ID_ALUMNO_CONTRATO,
              P_ID_CRITERIO_SEMESTRE,
              l_items,
              l_id_semestre_programa,
              l_nombre||' '||TO_CHAR(l_dias)||' dias',
              l_dc,
              l_dias,
              l_importe,
              l_total,
              l_tipo_valor
        );
      END IF;
    
    end if;
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_RESI_LAVANDERIA_MEN;
  
  PROCEDURE SP_RESI_ALIMENTACION_MEN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_resid_tipo_habitacion number;
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_id_semestre_programa NUMBER;
    l_total number(10,2);
    l_cuotas number(10,2);
  begin
    SELECT a.ID_SEMESTRE_PROGRAMA, C.CUOTAS,coalesce(a.DIAS_RESIDENCIA,0),coalesce(a.ID_RESID_TIPO_HABITACION,0)
    INTO l_id_semestre_programa,l_cuotas,l_dias,l_id_resid_tipo_habitacion
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    

    
    if l_id_resid_tipo_habitacion >0 then
      SELECT 
        ID_CRITERIO,
        IMPORTE,
        DC,
        NOMBRE,
        TIPO_VALOR
        INTO
        l_id_criterio,
        l_importe,
        l_dc,
        l_nombre,
        l_tipo_valor
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
      
      SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
         WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
         
        if l_cuotas=1 then
          l_total:= (l_importe*l_dias);
        else
          --l_total:= (l_importe*l_dias)/2;
          l_total:= (l_importe*l_dias)*0.8;
        end if;
         
         insert into MAT_CONCEPTO_ASIGN_ALUM(
          ID_ALUMNO_CONTRATO,
          ID_CRITERIO_SEMESTRE,
          ITEM,
          ID_SEMESTRE_PROGRAMA,
          DESCRIPCION,
          DC,
          CANTIDAD,
          UNITARIO,
          TOTAL,
          TIPO_VALOR
          )VALUES(
          P_ID_ALUMNO_CONTRATO,
          P_ID_CRITERIO_SEMESTRE,
          l_items,
          l_id_semestre_programa,
          l_nombre||' '||TO_CHAR(l_dias)||' dias',
          l_dc,
          l_dias,
          l_importe,
          l_total,
          l_tipo_valor
      );
    
    end if;
    
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_RESI_ALIMENTACION_MEN;
   PROCEDURE SP_COPIAR_PLANPAGO_SEMESTRE(P_ID_SEMESTRE_PROGRAMA_ORI NUMBER, P_ID_SEMESTRE_PROGRAMA_DES LONG, P_INDICADOR VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      PP_ID_SEMESTRE_PROGRAMA_DES long:=P_ID_SEMESTRE_PROGRAMA_DES||'|';
      
      l_1 number;
      l_id_semestre_programa_des number;
      l_id_criterio_semestre number;
      cursor curcri is
       SELECT 
            ID_PLANPAGO_SEMESTRE,
            ID_PLANPAGO,
            ID_SEMESTRE_PROGRAMA,
            ESTADO
          FROM MAT_PLANPAGO_SEMESTRE 
          WHERE ID_SEMESTRE_PROGRAMA=P_ID_SEMESTRE_PROGRAMA_ORI
          AND ESTADO='1'
          AND ID_PLANPAGO NOT IN(
            SELECT ID_PLANPAGO
            FROM MAT_PLANPAGO_SEMESTRE 
            WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
          );
        
                 
    BEGIN
    
     
        LOOP
            l_error:=0; 
            l_1 := instr(PP_ID_SEMESTRE_PROGRAMA_DES, '|' );
            exit when nvl(l_1,0) = 0;
            
            select cast(trim(substr(PP_ID_SEMESTRE_PROGRAMA_DES,1, l_1-1)) as number) into l_id_semestre_programa_des from dual;
            
            if P_INDICADOR='D' THEN
            
              SELECT COUNT(*) INTO l_contar FROM DAVID.ACAD_ALUMNO_CONTRATO 
              WHERE ID_PLANPAGO_SEMESTRE IN(
                SELECT ID_PLANPAGO_SEMESTRE FROM MAT_PLANPAGO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              IF l_contar>0 then
                l_error:=1; --descuadre de asiento
                l_msgerror:='Esta asociado a alumno contrato';
                exit when l_contar>0;
              END IF;
              
              DELETE FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE in(
                select  ID_PLANPAGO_SEMESTRE FROM MAT_PLANPAGO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
              );
              
              
              DELETE FROM MAT_PLANPAGO_SEMESTRE WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des;
              
              
             
            END IF; 
            
            FOR cur in curcri LOOP
              BEGIN
              
                SELECT COUNT(*) INTO l_contar FROM MAT_PLANPAGO_SEMESTRE
                WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
                AND ID_PLANPAGO=CUR.ID_PLANPAGO;
                
                IF l_contar=0 THEN
                  INSERT INTO MAT_PLANPAGO_SEMESTRE(
                    ID_PLANPAGO_SEMESTRE,
                    ID_PLANPAGO,
                    ID_SEMESTRE_PROGRAMA,
                    ESTADO
                  )values(
                    0,
                    cur.ID_PLANPAGO,
                    l_id_semestre_programa_des,
                    '1'
                  ) RETURNING ID_PLANPAGO_SEMESTRE INTO l_id_criterio_semestre;
                ELSE
                  SELECT ID_PLANPAGO_SEMESTRE INTO l_id_criterio_semestre FROM MAT_PLANPAGO_SEMESTRE
                  WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_des
                  AND ID_PLANPAGO=CUR.ID_PLANPAGO;
                END IF;
                
                DELETE FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE=l_id_criterio_semestre;
                
                              
                insert into MAT_PLANPAGO_SEMESTRE_DET(
                  ID_PLANPAGO_SEMESTRE_DET,
                  ID_PLANPAGO_SEMESTRE,
                  FECHA_INICIO,
                  FECHA_FIN,
                  ORDEN,
                  EJECUTADO,
                  CICLO
                )
                SELECT 
                  0,
                  ID_PLANPAGO_SEMESTRE,
                  FECHA_INICIO,
                  FECHA_FIN,
                  ORDEN,
                  EJECUTADO,
                  CICLO
                FROM MAT_PLANPAGO_SEMESTRE_DET
                WHERE ID_PLANPAGO_SEMESTRE = cur.ID_PLANPAGO_SEMESTRE;
             
              END;     
            END LOOP;
            
         
            PP_ID_SEMESTRE_PROGRAMA_DES := substr(PP_ID_SEMESTRE_PROGRAMA_DES, l_1+1 ); 
        END LOOP;
      
  
      
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_COPIAR_PLANPAGO_SEMESTRE;
    
     PROCEDURE SP_INS_CUOTA_ALUMNO(P_ID_ALUMNO_CONTRATO NUMBER,P_ID_USER NUMBER, P_ERROR OUT number,P_MSGERROR out varchar) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_cuotas number(10,2);
    l_imp_cuota1 number(10,2);
    l_imp_cuota2 number(10,2);
    l_imp_cuota number(10,2);
    l_codigo_mod varchar2(10);
    l_id_planpago_semestre NUMBER;
    l_id_matricula_detalle NUMBER;
    l_creditosvar number(10,2);
    l_tipo_alumno varchar2(5);
    l_conmat1cuota varchar2(5);
    l_ciclo number;
    l_id_semestre_programa number;
    l_plan_pago_ciclo varchar2(5):='N';
    BEGIN
    
      SELECT C.CUOTAS,COALESCE(A.CREDITOSVAR,0),tipo_alumno,B.ID_PLANPAGO_SEMESTRE,A.id_matricula_detalle, coalesce(c.conmat1cuota,'N'),coalesce(a.ciclo,0) as ciclo, a.id_semestre_programa
      INTO l_cuotas,l_creditosvar,l_tipo_alumno,l_id_planpago_semestre,l_id_matricula_detalle,l_conmat1cuota,l_ciclo,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
      AND B.ID_PLANPAGO=C.ID_PLANPAGO
      AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      IF l_cuotas<>1 THEN
      
        delete from MAT_ALUMNO_CONTRATO_CUOTA where ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
        
         select coalesce(plan_pago_ciclo,'N') into l_plan_pago_ciclo from david.acad_semestre_programa where id_semestre_programa=l_id_semestre_programa;
        
        
        select B.CODIGO INTO l_codigo_mod FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
        WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
        AND A.id_matricula_detalle=l_id_matricula_detalle;
        select
           COALESCE(SUM((CASE WHEN x.DC='C' THEN -1 ELSE 1 END)*( x.IMPORTE)),0)/l_cuotas
           into l_imp_cuota1
          from (select 
            a.importe,
            b.tipo_cobro,
            case when l_codigo_mod = 'V' and l_creditosvar<0 then  
              case when a.dc='D' then 'C' else 'D' end
            else 
              a.dc
            end as DC
          from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
          where a.id_criterio_semestre=b.id_criterio_semestre
          and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
          and b.TIPO_COBRO='M'
          AND B.TIENE_HIJO=0
          and B.RESI_MEN=0
        )x;
  
        select
           COALESCE(SUM((CASE WHEN x.DC='C' THEN -1 ELSE 1 END)*( x.IMPORTE)),0)/(l_cuotas-1) 
           into l_imp_cuota2
          from (select 
            a.importe,
            b.tipo_cobro,
            case when l_codigo_mod = 'V' and l_creditosvar<0 then  
              case when a.dc='D' then 'C' else 'D' end
            else 
              a.dc
            end as DC
          from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
          where a.id_criterio_semestre=b.id_criterio_semestre
          and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
          and b.TIPO_COBRO='M'
          AND B.TIENE_HIJO=0
          and B.RESI_MEN=1
        )x;
        l_imp_cuota:=l_imp_cuota1 + l_imp_cuota2;
        if l_imp_cuota<>0 then
          insert into MAT_ALUMNO_CONTRATO_CUOTA(
          ID_ITEM,
          ID_ALUMNO_CONTRATO,
          ID_PLANPAGO_SEMESTRE_DET,
          FECHA,
          IMPORTE,
          EJECUTADO,
          ID_USER_REG,
          FECHA_REG
          )
          select
          orden,
          P_ID_ALUMNO_CONTRATO,
          id_planpago_semestre_det,
          fecha_inicio,
          l_imp_cuota,
          'N',--case when orden = 1 and l_conmat1cuota='S' then 'S' else 'N' end,
          P_ID_USER,
          sysdate
          from MAT_PLANPAGO_SEMESTRE_DET 
          where id_planpago_semestre=l_id_planpago_semestre 
          and case when l_plan_pago_ciclo='S' then ciclo else 0 end=case when l_plan_pago_ciclo='S' then l_ciclo else 0 end
          order by orden;
        end if;
      END IF;
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END SP_INS_CUOTA_ALUMNO;
    FUNCTION  FC_OBETENER_IMP_CUOTA(P_ID_ALUMNO_CONTRATO NUMBER) RETURN NUMBER AS
    l_cuotas number(10,2);
    l_imp_cuota1 number(10,2);
    l_imp_cuota2 number(10,2);
    l_imp_cuota number(10,2):=0;
    l_codigo_mod varchar2(10);
    l_creditosvar number(10,2);
    BEGIN
      SELECT C.CUOTAS,COALESCE(A.CREDITOSVAR,0)
      INTO l_cuotas,l_creditosvar
      FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
      AND B.ID_PLANPAGO=C.ID_PLANPAGO
      AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
      
      select
       COALESCE(SUM((CASE WHEN x.DC='C' THEN -1 ELSE 1 END)*( x.IMPORTE)),0)/l_cuotas
       into l_imp_cuota1
      from (select 
          a.importe,
          b.tipo_cobro,
          case when l_codigo_mod = 'V' and l_creditosvar<0 then  
            case when a.dc='D' then 'C' else 'D' end
          else 
            a.dc
          end as DC
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        and b.TIPO_COBRO='M'
        AND B.TIENE_HIJO=0
        and B.RESI_MEN=0
      )x;

    select
       COALESCE(SUM((CASE WHEN x.DC='C' THEN -1 ELSE 1 END)*( x.IMPORTE)),0)/(l_cuotas-1) 
       into l_imp_cuota2
      from (select 
        a.importe,
        b.tipo_cobro,
        case when l_codigo_mod = 'V' and l_creditosvar<0 then  
          case when a.dc='D' then 'C' else 'D' end
        else 
          a.dc
        end as DC
      from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
      where a.id_criterio_semestre=b.id_criterio_semestre
      and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
      and b.TIPO_COBRO='M'
      AND B.TIENE_HIJO=0
      and B.RESI_MEN=1
    )x;
    l_imp_cuota:=l_imp_cuota1 + l_imp_cuota2;
            
    RETURN(l_imp_cuota);
            
  END FC_OBETENER_IMP_CUOTA;
  
  PROCEDURE SP_COBRAR_CUOTA_X_CONTRATO(P_ID_ALUMNO_CONTRATO NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_PERSONA NUMBER,P_CUOTA NUMBER,P_ID_VENTA OUT NUMBER, P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2)IS
        L_ID_CLIENTE NUMBER;
        
        L_ID_ANHO NUMBER;
        L_ID_ANHO_ACTUAL NUMBER;
        L_ID_MES NUMBER;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL NUMBER;
        
        L_ID_VENTA NUMBER;
        L_ES_VIRTUAL VARCHAR2(1) := 'N';
        L_ID_TIPOVENTA NUMBER;
        L_CONINTERNADO VARCHAR2(1) := 'N';
        
        L_CONTAR NUMBER;
        L_ERROR NUMBER := 0;
        L_MSGERROR VARCHAR2(200) := 'OK';
        L_TIPO_ALUMNO VARCHAR2(4);
        L_ID_SEDE NUMBER;
        
        L_CREDITOSVAR NUMBER;
        L_PROCESA VARCHAR2(1);
        
        S_PERSONAS TABLASTRING; 
        S_SEMESTRE_PROGRAMA TABLASTRING;
        S_CONTA INT :=0;
        L_ID_PERSONA NUMBER;
        L_PERSONAS VARCHAR2(4000);
        L_ID_SEMESTRE_PROGRAMA NUMBER;
        L_CODIGO VARCHAR2(20);
        ES_VARIACION VARCHAR2(1);
          
        
        L_ID_SEMESTRE NUMBER;
        L_ID_MODO_CONTRATO NUMBER;
        L_ID_NIVEL_ENSENANZA NUMBER;
        
        BEGIN
        
          
          SELECT A.ID_PERSONA,A.TIPO_ALUMNO,NVL(A.CREDITOSVAR,0) as CREDITOSVAR ,D.ID_SEMESTRE,MD.ID_MODO_CONTRATO,PS.ID_NIVEL_ENSENANZA
          INTO L_ID_PERSONA,L_TIPO_ALUMNO,L_CREDITOSVAR,L_ID_SEMESTRE,L_ID_MODO_CONTRATO,L_ID_NIVEL_ENSENANZA
          FROM DAVID.ACAD_ALUMNO_CONTRATO A JOIN MOISES.PERSONA B ON A.ID_PERSONA = B.ID_PERSONA
          JOIN MOISES.PERSONA_NATURAL_ALUMNO C ON B.ID_PERSONA = C.ID_PERSONA
          JOIN DAVID.ACAD_SEMESTRE_PROGRAMA D ON A.ID_SEMESTRE_PROGRAMA = D.ID_SEMESTRE_PROGRAMA  
          JOIN DAVID.ACAD_MATRICULA_DETALLE MD ON A.ID_MATRICULA_DETALLE = MD.ID_MATRICULA_DETALLE
          JOIN DAVID.VW_ACAD_PROGRAMA_ESTUDIO PS ON PS.ID_PROGRAMA_ESTUDIO = D.ID_PROGRAMA_ESTUDIO
          JOIN MAT_PLANPAGO_SEMESTRE PPS ON PPS.ID_PLANPAGO_SEMESTRE = A.ID_PLANPAGO_SEMESTRE
          JOIN MAT_PLANPAGO PP ON PP.ID_PLANPAGO = PPS.ID_PLANPAGO
          WHERE A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
          
          SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(SYSDATE,'YYYY') ID_ANHO_ACTUAL INTO L_ID_ANHO,L_ID_ANHO_ACTUAL
          FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
          IF L_ID_ANHO = L_ID_ANHO_ACTUAL THEN
              SELECT MAX(ID_MES) ID_MES, TO_NUMBER(TO_CHAR(SYSDATE,'MM')) ID_MES_ACTUAL INTO L_ID_MES,L_ID_MES_ACTUAL
              FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
              IF L_ID_MES = L_ID_MES_ACTUAL THEN
                
                 L_CONINTERNADO := 'S';
                
                
                IF L_ID_MODO_CONTRATO <> 4 THEN 
                    L_PROCESA := 'S';
                    ES_VARIACION := 'N';
                ELSE
                    IF L_ID_MODO_CONTRATO = 4 AND L_CREDITOSVAR > 0 THEN
                        L_PROCESA := 'S';
                        ES_VARIACION := 'S';
                    ELSE
                        L_PROCESA := 'N';
                        ES_VARIACION := 'N';
                    END IF;
                END IF;
                
                IF L_PROCESA = 'S' THEN
                    SELECT ID_TIPOVENTA INTO L_ID_TIPOVENTA FROM DAVID.TIPO_NIVEL_ENSENANZA
                    WHERE ID_NIVEL_ENSENANZA = L_ID_NIVEL_ENSENANZA;
                    
                    PKG_FINANCES_STUDENTS.SP_GENERAR_CUOTA_ADELANTO(
                    P_ID_ALUMNO_CONTRATO,
                    P_ID_ENTIDAD,
                    P_ID_DEPTO,
                    L_ID_ANHO,
                    L_ID_MES,
                    P_ID_PERSONA,
                    L_ES_VIRTUAL,
                    L_ID_TIPOVENTA,
                    L_CONINTERNADO,
                    P_CUOTA,
                    L_ID_VENTA,
                    L_ERROR,
                    L_MSGERROR
                    );
                    
                    IF L_ERROR=0 THEN
                      UPDATE MAT_ALUMNO_CONTRATO_CUOTA SET
                      EJECUTADO='S',
                      ID_USER_MOD=P_ID_PERSONA,
                      FECHA_MOD=SYSDATE
                      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
                      AND ID_ITEM=P_CUOTA;
                    END IF;
                    INSERT INTO TEST_CUOTA(ID_PERSONA,ID_VENTA,FECHA,VARIACION,ID_NIVEL_ENS,CUOTA,ID_SEMESTRE)VALUES(L_ID_PERSONA,L_ID_VENTA,SYSDATE,'S',L_ID_NIVEL_ENSENANZA,5,L_ID_SEMESTRE);
                    IF L_ERROR > 0 THEN
                        INSERT INTO TEST_NO_CUOTA(ID_PERSONA,ID_ALUMNO_CONTRATO,ERROR,VARIACION,ID_NIVEL_ENS,CUOTA,FECHA,ID_SEMESTRE)VALUES(L_ID_PERSONA,P_ID_ALUMNO_CONTRATO,L_MSGERROR,'S',L_ID_NIVEL_ENSENANZA,5,SYSDATE,L_ID_SEMESTRE);
                        INSERT INTO FIN_CUOTA_QA(ID_USER,ID_PERSONA,ID_ALUMNO_CONTRATO,ID_ENTIDAD,ID_DEPTO,ID_SEMESTRE,ID_NIVEL_ENSENANZA,VARIACION,NRO_CUOTA,ERROR,FECHA)
                        VALUES(P_ID_PERSONA,L_ID_PERSONA,P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,L_ID_SEMESTRE,L_ID_NIVEL_ENSENANZA,ES_VARIACION,P_CUOTA,L_CODIGO||': '||L_MSGERROR,SYSDATE);
                    END IF;
                END IF;
              ELSE
                L_ERROR := 1;
                L_MSGERROR := 'ERROR: El mes no esta Activo';
              END IF;
          ELSE
              L_ERROR := 1;
              L_MSGERROR := 'ERROR: El Año no esta Activo';
          END IF;
          
        <<SALIDA_VENTA>>
        P_ID_VENTA:=L_ID_VENTA;
        P_ERROR:=L_ERROR;
        P_MSGERROR:= L_MSGERROR;
    END SP_COBRAR_CUOTA_X_CONTRATO;
    PROCEDURE SP_GENERAR_CUOTA_ADELANTO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ES_VIRTUAL VARCHAR2,P_ID_TIPOVENTA number,P_CONINTERNADO VARCHAR2,P_NRO_CUOTA NUMBER,P_ID_VENTA OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) 
  IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_venta number;
    l_id_resp_financiero number;
    l_id_cliente number;
    l_cuotas number(10,2);
    
    l_igv number(10,2);
    l_tc NUMBER(10,3);
    l_id_moneda number;
    l_id_moneda_tc number;
    l_glosa varchar2(80):='';
    
    l_id_tipoasiento varchar2(5);--:='RV';
    l_id_tipovoucher number := 1;
    --l_id_tipoasientodep varchar2(5) := 'MB';
    --l_id_tipovoucherdep number := 5;
    l_id_credito number :=1;
    l_id_voucher NUMBER;
    
    l_serie varchar2(5);
    l_correlativo number;
    l_numero varchar2(15);
    l_id_persona_v number;--pendiente
    l_id_documento NUMBER;
    l_id_tipo_transaccion number:= 1;
    l_id_comprobante varchar2(2);
    l_id_id_cliente_legal number;
    l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
    L_USER NUMBER :=4; --MATRICULADOR ONLINE
    L_TOTAL_ANTICIPO NUMBER(10,2);
    L_IMPORTE_ANTICIPO NUMBER(10,2);
    L_V_TOTAL NUMBER(10,2);
    L_DC VARCHAR2(1) :='C'; --DC PARA ANTICIPOS
    L_CODIGO VARCHAR2(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO

    l_imp_comtrato number(10,2);
    L_SALDO NUMBER(10,2);
    L_SIGNO NUMBER;
    l_id_semestre_programa number;
    l_semestre varchar2(10);
    P_TIPO VARCHAR2(1) := 'V';
    l_nom_nivel_ensenanza varchar2(150):='-';
    l_id_matricula_detalle number;
    l_codigo_mod varchar2(10);
    l_id_modo_contrato number;
    l_modo_nombre VARCHAR2(150 BYTE);
    l_id_tipoventa number;
    l_creditosvar number(10,2);
    l_id_alumno_contrato_asociado number;
    l_id_parent number;
    l_id_tiponota varchar2(5);
    l_id_comprobante_ref varchar2(5);
    l_serie_ref varchar2(10);
    l_numero_ref varchar2(20);
    l_tipo_alumno varchar2(5);
    l_id_modalidad_estudio number;
    l_cod_moda_es varchar2(5);
    
    l_glosa_vnt varchar2(60) := '2da Armada '; --4ta cuota posgrado 
    l_glosa_vnt_var varchar2(60) := '2da Armada Variacion '; 
    l_numero_armada number :=2;
    l_detalle varchar2(20);
    l_det varchar2(10);
    l_id_planpago_semestre NUMBER;
    L_FECHA_PAGO DATE;
    L_TOTAL NUMBER(10,2);
    L_ID_PROGRAMA_ESTUDIO NUMBER;
    L_ID_DINAMICA NUMBER;
  BEGIN
  
    IF P_NRO_CUOTA = 2 THEN
        l_glosa_vnt := '2da Armada ';
        l_glosa_vnt_var := '2da Armada Variación ';
        l_det := '2da';
    ELSIF P_NRO_CUOTA = 3 THEN
        l_glosa_vnt := '3ra Armada ';
        l_glosa_vnt_var := '3ra Armada Variación ';
        l_det := '3ra';
    ELSIF P_NRO_CUOTA = 4 THEN
        l_glosa_vnt := '4ta Armada ';
        l_glosa_vnt_var := '4ta Armada Variación ';
        l_det := '4ta';
    ELSIF P_NRO_CUOTA = 5 THEN
        l_glosa_vnt := '5ta Armada ';
        l_glosa_vnt_var := '5ta Armada Variación ';
        l_det := '5ta';
    ELSIF P_NRO_CUOTA = 6 THEN
        l_glosa_vnt := '6ta Armada ';
        l_glosa_vnt_var := '6ta Armada Variación ';
        l_det := '6ta';
    ELSIF P_NRO_CUOTA = 7 THEN
        l_glosa_vnt := '7ma Armada ';
        l_glosa_vnt_var := '7ma Armada Variación ';
        l_det := '7ma';
    ELSIF P_NRO_CUOTA = 8 THEN
        l_glosa_vnt := '8va Armada ';
        l_glosa_vnt_var := '8va Armada Variación ';
        l_det := '8va';
    ELSIF P_NRO_CUOTA = 1 THEN
        l_glosa_vnt := '1ra Armada ';
        l_glosa_vnt_var := '1ra Armada Variación ';
        l_det := '1ra';
    ELSE
        l_glosa_vnt := '9na Armada ';
        l_glosa_vnt_var := '9na Armada Variación ';
        l_det := '9na';
    END IF; 

    SELECT A.ID_PERSONA,C.CUOTAS,A.ID_CLIENTE_LEGAL,A.ID_COMPROBANTE,DECODE(CUOTAS,'1', CONTADO,MATRICULA1CUOTA) IMP_CONTRATO,a.ID_SEMESTRE_PROGRAMA,A.id_matricula_detalle,COALESCE(A.CREDITOSVAR,0),A.id_alumno_contrato_asociado,tipo_alumno,B.ID_PLANPAGO_SEMESTRE
    INTO l_id_cliente,l_cuotas,l_id_id_cliente_legal,l_id_comprobante,l_imp_comtrato,l_id_semestre_programa,l_id_matricula_detalle,l_creditosvar,l_id_alumno_contrato_asociado,l_tipo_alumno,l_id_planpago_semestre
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_PROGRAMA_ESTUDIO INTO L_ID_PROGRAMA_ESTUDIO
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA = l_id_semestre_programa;
 
    if l_cuotas=1 then
       l_error:=1;
       l_msgerror:='Alto: Es contado ';
       GOTO generar_cuota;
    end if;
    l_id_moneda:=7; --SOLES
    l_id_moneda_tc:=9;
    
    SELECT 
    b.SEMESTRE into l_semestre
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
    WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    select B.CODIGO,b.nombre INTO l_codigo_mod,l_modo_nombre FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;
    

    SELECT 
    D.NOMBRE,d.ID_TIPOVENTA into l_nom_nivel_ensenanza,l_id_tipoventa
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D
    WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
    AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;

    if l_id_tipoventa is null then
      l_id_tipoventa:=1;
    end if;
    
    if l_codigo_mod='E' then
        l_detalle :='Extra ';
    elsif l_codigo_mod='D' then
        l_detalle :='Dirigido ';
    else
        l_detalle :='';
    end if;
    --la glosa para variacion y/o Armada
    if l_codigo_mod='V' then
        l_glosa:=substr(l_glosa_vnt_var||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
    else
        l_glosa:=substr(l_glosa_vnt||l_detalle||l_nom_nivel_ensenanza||' '||l_semestre,0,80);
    end if;
    
    
    select FC_IGV(CURRENT_DATE ) into l_igv from dual;
     
    select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
     
    if l_tc is null then
        l_tc:=0;
    end if;
    
    SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe tipo de Asiento (RV) ';
        GOTO generar_cuota;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||to_char(P_ID_ANHO);
        GOTO generar_cuota;
    end if;
    
    SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
    SELECT   count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO =P_ID_DEPTO
    AND ID_MODULO = '13'--modulo ventas
    AND ID_ANHO = P_ID_ANHO
    and ID_TIPOASIENTO=l_id_tipoasiento
    AND AUTOMATICO='S'
    AND ID_TIPOVOUCHER = l_id_tipovoucher;
            
    if l_contar < 1 then
        l_error:=1;
        l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
        GOTO generar_cuota;
    elsif l_contar > 1 then
        l_error:=1;
        l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(P_ID_ANHO);
        GOTO generar_cuota;
    end if;
    
    
    --valida asiento
    select count(1) into l_contar from (
        select 
        a.id_criterio_semestre,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='D' ) as contard,
        (select count(1) from mat_criterio_semestre_asiento x where x.id_criterio_semestre=a.id_criterio_semestre and x.TIPO_DC='C' ) as contarc
        from mat_alumno_contrato_det a, vw_mat_criterio_semestre b
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO
        and b.tiene_hijo=0 --EXCLUYE A LOS PARENTS CON HIJOS -MARLO
        group by a.id_criterio_semestre
      ) z
    where (z.contard=0 or z.contarc=0 or (z.contard + z.contarc)<=1);
    
    if l_contar > 0 then
    --if l_contar = 0 then --modificado por marlo
        l_error := 1;
        l_msgerror := 'Alto! Falta configurar asiento contable de la venta '||P_ID_ALUMNO_CONTRATO;
        GOTO generar_cuota;
    END IF;
    
    IF l_codigo_mod = 'V' and l_creditosvar<0 then
        select count(1) into l_contar
        from VENTA
        where id_venta in(
        select id_venta from venta_detalle where id_alumno_contrato = l_id_alumno_contrato_asociado and glosa like l_det||'%'--'Mat%2021-1'
        );
        if l_contar = 0 then --modificado por marlo
            l_error := 1;
            l_msgerror := 'Alto! NO hay Documento de Referencia '||P_ID_ALUMNO_CONTRATO;
            GOTO generar_cuota;
        else
            select 
            ID_VENTA,'04',ID_COMPROBANTE,SERIE, NUMERO
            into
            l_id_parent,l_id_tiponota,l_id_comprobante_ref,l_serie_ref,l_numero_ref
            from VENTA
            where id_venta in(
            select id_venta from venta_detalle where id_alumno_contrato = l_id_alumno_contrato_asociado and glosa like l_det||'%'--'Mat%2021-1'
            );
        END IF;
        
    else
        l_id_parent:=null;
        l_id_tiponota:=null;
        l_id_comprobante_ref:=null;
        l_serie_ref:=null;
        l_numero_ref:=null;
    end if;
    
    IF P_ES_VIRTUAL = 'S' THEN
         
          SELECT
                  NVL(ABS(SUM(TOTAL)),0) AS TOTAL, SIGN(NVL(SUM(TOTAL),0)) AS SIGNO INTO L_SALDO, L_SIGNO 
          FROM (
                  SELECT
                          TOTAL
                  FROM VW_SALES_MOV
                  WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = l_id_cliente AND ID_TIPOVENTA IN (1,2,3)
                  UNION ALL
                  SELECT
                          SUM(IMPORTE)*DECODE(SIGN(SUM(IMPORTE)),1,-1,0) AS TOTAL
                  FROM VW_SALES_ADVANCES
                  WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_CLIENTE = l_id_cliente
          );
          
          IF L_SIGNO = 0 OR L_SIGNO = 1 THEN
              l_error := 1;
              l_msgerror := 'Alto! Estado de Cuenta en 0';
              GOTO generar_cuota;
          ELSE
              IF L_SALDO < l_imp_comtrato THEN
                  l_error := 1;
                  l_msgerror := 'Alto! Saldo Insuficiente';
                  GOTO generar_cuota;
              END IF;
          END IF;
      
        
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= l_id_comprobante;
        
        if l_contar = 0 then
            l_error := 1;
            l_msgerror := 'Alto! FaltA asignar documento la entidad: '||to_char(P_ID_ENTIDAD)||' el departamento: '||P_ID_DEPTO||' y el comprobante: '||l_id_comprobante;
            GOTO generar_cuota;
        END IF;
        
        SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= l_id_comprobante;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
    ELSE
        L_USER := P_ID_PERSONA; --MATRICULDOR ONLINE
        l_contar := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD, P_ID_DEPTO,l_id_comprobante_ref);
        if l_contar < 1 then
            l_error := 1;
            l_msgerror := 'Alto! No existe un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']'||P_ID_PERSONA||'-'||P_ID_ENTIDAD||'-'||P_ID_DEPTO;
            GOTO generar_cuota;
        elsif l_contar > 1 then
            l_error := 1;
            l_msgerror := 'Alto! Existe mas de un punto de impresión activo de Ventas para el usuario. [tipo de documento: '||l_id_comprobante||']';
            GOTO generar_cuota;
        END IF;
        --***********para produccion quitar
        --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
        PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO,l_id_comprobante_ref,l_serie,l_correlativo);
    END IF;
    
    --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
    

    SELECT COUNT(1) INTO l_contar FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
    
    if l_contar = 0 then
        l_error := 1;
        l_msgerror := 'Alto! No existe asignado un contador para la entidad '||to_char(P_ID_ENTIDAD)||' y el departamento: '||P_ID_DEPTO;
        GOTO generar_cuota;
    END IF;
    
    SELECT  COUNT(1) INTO l_contar  
    FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
    JOIN TIPO_GRUPO_CONTA C ON C.ID_TIPOGRUPOCONTA = B.ID_TIPOGRUPOCONTA
    JOIN CONTA_ENTIDAD_TRANSACCION D ON D.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION AND D.ID_ENTIDAD = A.ID_ENTIDAD
    WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
    AND A.ID_DEPTO = P_ID_DEPTO
    AND A.ID_ANHO = P_ID_ANHO
    AND A.ID_MODULO = 13
    AND C.CODIGO  = 'VX'
    AND A.ACTIVO = 'S';
    
    if l_contar = 0 then
        l_error := 1;
        l_msgerror := 'Alto! No existe dinanmica para asiento '||to_char(P_ID_ENTIDAD)||' y el departamento: '||P_ID_DEPTO;
        GOTO generar_cuota;
    END IF;
    
    SELECT A.ID_DINAMICA INTO L_ID_DINAMICA
    FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
    JOIN TIPO_GRUPO_CONTA C ON C.ID_TIPOGRUPOCONTA = B.ID_TIPOGRUPOCONTA
    JOIN CONTA_ENTIDAD_TRANSACCION D ON D.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION AND D.ID_ENTIDAD = A.ID_ENTIDAD
    WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
    AND A.ID_DEPTO = P_ID_DEPTO
    AND A.ID_ANHO = P_ID_ANHO
    AND A.ID_MODULO = 13
    AND C.CODIGO  = 'VX'
    AND A.ACTIVO = 'S';

    
    SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
    WHERE ID_ENTIDAD=P_ID_ENTIDAD
    AND ID_DEPTO=P_ID_DEPTO;
        
   
    
    PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
   
    IF l_id_comprobante = '01' THEN
        l_id_credito:=2;
    END IF;
   
    select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;       
    --crear venta
    INSERT INTO VENTA(
            ID_PERSONA,
            ID_CLIENTE,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_ANHO,
            ID_MES,
            ID_COMPROBANTE, 
            ID_IGV, 
            ID_MONEDA, 
            ID_LEYENDA,
            TIPOCAMBIO,
            SERIE, 
            NUMERO, 
            FECHA, 
            ESTADO,
            GLOSA,
            ID_TIPOTRANSACCION,
            ID_CREDITO,
            ID_VOUCHER,
            ID_CLIENTE_LEGAL,
            ID_TIPOVENTA,
            
            ID_PARENT,
            ID_TIPONOTA,
            ID_COMPROBANTE_REF,
            SERIE_REF,
            NUMERO_REF,
            CUOTA
        )VALUES(
            L_USER,
            l_id_cliente,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_ANHO,
            P_ID_MES,
            l_id_comprobante,
            l_igv,
            l_id_moneda,--SOLES
            '1000',
            l_tc,
            l_serie,--SERIE
            l_numero,--NRO
            SYSDATE, --to_date('26042021 23:59:00','ddmmyyyy hh24:mi:ss')
            1,
            l_glosa,
            l_id_tipo_transaccion,
            l_id_credito,
            l_id_voucher,
            l_id_id_cliente_legal,
            l_id_tipoventa,--P_ID_TIPOVENTA
            
            l_id_parent,
            l_id_tiponota,
            l_id_comprobante_ref,
            l_serie_ref,
            l_numero_ref,
            P_NRO_CUOTA--3RA ARMADA CAMBIAR CADA ARMADA
    )returning ID_VENTA INTO l_id_venta;
    
    
    INSERT INTO VENTA_DETALLE(
        ID_VDETALLE,
        ID_VENTA,
        ID_TIPOIGV,
        DETALLE, 
        CANTIDAD, 
        PRECIO, 
        PRECIO_BASE, 
        BASE, 
        IGV, 
        DESCUENTO, 
        DC,
        IMPORTE, 
        PRECIO_ME, 
        PRECIO_BASE_ME, 
        PRECIO_ALM_ME, 
        BASE_ME, 
        IGV_ME, 
        DESCUENTO_ME, 
        IMPORTE_ME,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET,
        ID_DINAMICA
      )
      select
        x.ID_VDETALLE,
        x.ID_VENTA,
        x.ID_TIPOIGV,
        x.DETALLE, 
        x.CANTIDAD, 
        x.PRECIO, 
        x.PRECIO_BASE, 
        x.BASE, 
        x.IGV, 
        x.DESCUENTO, 
        x.DC,
        x.IMPORTE, 
        x.PRECIO_ME, 
        x.PRECIO_BASE_ME, 
        x.PRECIO_ALM_ME, 
        x.BASE_ME, 
        x.IGV_ME, 
        x.DESCUENTO_ME, 
        x.IMPORTE_ME,
        x.ID_ALUMNO_CONTRATO,
        x.ID_ALUMNO_CONTRATO_DET,
        L_ID_DINAMICA
        from (select 
          1 as ID_VDETALLE,
          l_id_venta as ID_VENTA,
          l_id_tipoigv as ID_TIPOIGV,
          substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100)  as DETALLE ,
          1 as CANTIDAD,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as PRECIO,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as PRECIO_BASE,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as BASE,
          0 as IGV,
          DECODE(a.dc,'C',ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1),0) as DESCUENTO,
          case when l_codigo_mod = 'V' and l_creditosvar<0 then  
            case when a.dc='D' then 'C' else 'D' end
          else 
            a.dc
          end as DC,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas,1) as IMPORTE,
          0 as PRECIO_ME,
          0 as PRECIO_BASE_ME,
          0 as PRECIO_ALM_ME,
          0 as BASE_ME,
          0 as IGV_ME,
          0 as DESCUENTO_ME,
          0 as IMPORTE_ME,
          a.ID_ALUMNO_CONTRATO,
          a.ID_ALUMNO_CONTRATO_DET,
          B.ORDEN
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        and b.TIPO_COBRO='M'
        and (case when P_CONINTERNADO='S' then 
              'S' 
            else 
              case when b.tipo in('R') then 
                'S' 
              else 
                'N' 
              end  
        end)=P_CONINTERNADO
        AND B.TIENE_HIJO=0
        and B.RESI_MEN=0
        union all
        select 
          1 as ID_VDETALLE,
          l_id_venta as ID_VENTA,
          l_id_tipoigv as ID_TIPOIGV,
          substr(case when a.descripcion<>b.nombre then b.nombre||': '||a.descripcion else a.descripcion end,0,100)  as DETALLE ,
          1 as CANTIDAD,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as PRECIO,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as PRECIO_BASE,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as BASE,
          0 as IGV,
          DECODE(a.dc,'C',ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1),0) as DESCUENTO,
          case when l_codigo_mod = 'V' and l_creditosvar<0 then  
            case when a.dc='D' then 'C' else 'D' end
          else 
            a.dc
          end as DC,
          ABS(a.importe)/decode(b.tipo_cobro,'M',l_cuotas-1,1) as IMPORTE,
          0 as PRECIO_ME,
          0 as PRECIO_BASE_ME,
          0 as PRECIO_ALM_ME,
          0 as BASE_ME,
          0 as IGV_ME,
          0 as DESCUENTO_ME,
          0 as IMPORTE_ME,
          a.ID_ALUMNO_CONTRATO,
          a.ID_ALUMNO_CONTRATO_DET,
          B.ORDEN
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        and b.TIPO_COBRO='M'
        and (case when P_CONINTERNADO='S' then 
              'S' 
            else 
              case when b.tipo in('R') then 
                'S' 
              else 
                'N' 
              end  
        end)=P_CONINTERNADO
        AND B.TIENE_HIJO=0
        and B.RESI_MEN=1
      )x
      ORDER BY dc, ORDEN;
     

        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);


        --FORMA DE PAGO
        IF l_id_comprobante = '01' THEN
            SELECT TOTAL INTO L_TOTAL FROM VENTA WHERE ID_VENTA = l_id_venta;
            IF L_ID_PROGRAMA_ESTUDIO = 1 THEN --MEDICINA
                SELECT DISTINCT FECHA_FIN INTO L_FECHA_PAGO FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE = l_id_planpago_semestre AND ORDEN = P_NRO_CUOTA-1 AND CICLO IN (13);--NOT IN( 12,14); -- Solo medicina
            ELSE --todas menos medicina
                SELECT COUNT(1) INTO l_contar FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE = l_id_planpago_semestre AND ORDEN = P_NRO_CUOTA-1;
                IF l_contar > 0 THEN 
                    SELECT MIN(FECHA_FIN) INTO L_FECHA_PAGO FROM MAT_PLANPAGO_SEMESTRE_DET WHERE ID_PLANPAGO_SEMESTRE = l_id_planpago_semestre AND ORDEN = P_NRO_CUOTA-1;-- AND CICLO NOT IN (10); 
                ELSE
                    SELECT SYSDATE INTO L_FECHA_PAGO FROM DUAL;
                END IF;
            END IF;
            INSERT INTO VENTA_FORMA_PAGO(ID_VENTA,NRO_CUOTA,IMPORTE,FECHA_PAGO)VALUES(l_id_venta,'CUO001',L_TOTAL,L_FECHA_PAGO);
        END IF;

        PKG_SALES.SP_GENERAR_ASIENTO(l_id_venta,l_error,l_msgerror);
        --PKG_FINANCES_STUDENTS.SP_GENERAR_ASIENTO_CUOTA(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,l_id_venta,'N',l_error,l_msgerror);
        

      IF l_error > 0 THEN
          l_msgerror := l_msgerror;
          --ROLLBACK;
          GOTO generar_cuota;
      END IF;
  
          
     --desactivado solo para pruebas
      IF P_ID_ENTIDAD = 7124 THEN
          --PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,l_id_comprobante);
          l_error:=0;
      END IF;
     
    <<generar_cuota>>
    
    P_ID_VENTA:=l_id_venta;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_GENERAR_CUOTA_ADELANTO;
  
  PROCEDURE SP_DESC_ALUMNO_CU(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  IS
    l_items number;
    l_contar number:=0;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio number;
    l_importe number(10,2);
    l_dc varchar2(5);
    l_dias decimal(10,2);
    l_nombre varchar2(150 byte);
    l_tipo_valor varchar2(2 byte);
    l_tipo_dscto varchar2(3 byte);
    l_id_semestre_act number;
  BEGIN
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA 
    INTO l_id_semestre_programa,l_id_persona
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
        ID_CRITERIO,
        DC,
        NOMBRE,
        TIPO_DSCTO,
        IMPORTE,
        TIPO_VALOR
        INTO
        l_id_criterio,
        l_dc,
        l_nombre,
        l_tipo_dscto,
        l_importe,
        l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    /*
    select COUNT(*) INTO l_contar  
    from DAVID.Acad_Alumno_Plan aap, DAVID.Vw_Plan_Programa vpp 
    WHERE Vpp.Id_Plan_Programa=Aap.Id_Plan_Programa 
    and vpp.Id_facultad Between 8 and 12
    AND id_persona=l_id_persona 
    and graduado=1;
*/
      
    SELECT COUNT(*) INTO l_contar 
    FROM JOSE.MAT_CONTRATO WHERE ID_ALUMNO = l_id_persona AND ID_ANHO = 2024 AND ESTADO = '1' AND ID_INSTITUCION = 58;

    IF l_contar = 0 THEN
        -- VERIFICAR SI EL ALUMNO ESTA REGISTRADO COMO MATRICULADO (PARA ALUMNO A PARTIR DEL 2025)
        -- SI NO ESTA REGISTRAR MANUALMENTE EN MAT_ALUMNO_COLEGIO
        SELECT COUNT(*) INTO l_contar
            FROM ELISEO.MAT_ALUMNO_COLEGIO MAC WHERE MAC.ID_INSTITUCION = 58
        AND MAC.ANHO = 2025 AND MAC.ESTADO= '1' AND MAC.ID_PERSONA = l_id_persona;

    END IF;




    IF l_contar>0 THEN

       SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
       WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
     
    END IF;

    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  END SP_DESC_ALUMNO_CU;
  
  PROCEDURE SP_MAT_BECA18_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_ciclo number:=0;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ciclo
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      nombre
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    if l_tipo_proceso = 'P' then
      
      SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
      WHERE a.ID_SEMESTRE_PROGRAMA =l_id_semestre_programa
      AND a.ID_CRITERIO=l_id_criterio
      AND a.CICLO= l_ciclo;
      
      IF l_contar>0 THEN
        if l_contar=1 then
          SELECT a.IMPORTE,to_char(a.CICLO) INTO l_importe,l_nombre 
          FROM MAT_CICLO_COSTO a
          WHERE a.ID_SEMESTRE_PROGRAMA =l_id_semestre_programa
          AND a.ID_CRITERIO=l_id_criterio
          AND a.CICLO= l_ciclo;
          
          if coalesce(l_importe,0)=0 then
            l_error:=1;
            l_msgerror:='Costo por ciclo de matrícula igual a cero';
          else
           SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
           insert into MAT_CONCEPTO_ASIGN_ALUM(
            ID_ALUMNO_CONTRATO,
            ID_CRITERIO_SEMESTRE,
            ITEM,
            ID_SEMESTRE_PROGRAMA,
            DESCRIPCION,
            DC,
            TOTAL,
            TIPO_VALOR
            )VALUES(
            P_ID_ALUMNO_CONTRATO,
            P_ID_CRITERIO_SEMESTRE,
            l_items,
            l_id_semestre_programa,
            'Matrícula ciclo '||l_nombre,
            l_dc,
            l_importe,
            l_tipo_valor
            );
          end if;
        ELSE
          l_error:=1;
          l_msgerror:='Esta asignado más de un costo por ciclo de matrícula';
        END IF;
      ELSE
          l_error:=1;
          l_msgerror:='No esta asignado costo por ciclo de matrícula: '||P_ID_CRITERIO_SEMESTRE;
      END IF;
    else
      if l_importe>0 then
       SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
           WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
           
       insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        TOTAL,
        TIPO_VALOR
        )VALUES(
        P_ID_ALUMNO_CONTRATO,
        P_ID_CRITERIO_SEMESTRE,
        l_items,
        l_id_semestre_programa,
        l_nombre,
        l_dc,
        l_importe,
        l_tipo_valor
        );
      else
        l_error:=1;
        l_msgerror:='No esta asignado costo por ciclo de matrícula';
      end if;
    end if;
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
    
  end SP_MAT_BECA18_CICLO;
  
  PROCEDURE SP_ENSE_REGULAR_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_nombre varchar2(150 byte);

    l_dc varchar2(1);
    l_creditos number(10,2);
    l_costo  number(10,2);
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,CICLO
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
       
     select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_enseregular;
    end if;
    
    SELECT  COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza';
      goto salida_enseregular;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza, importe cero';
      goto salida_enseregular;
    end if;
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
     )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null
    );
        
    <<salida_enseregular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_REGULAR_CICLO;
  
  PROCEDURE SP_ENSE_REGULAR_PLAN_PKG_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
  
    l_nombre varchar2(150 byte);


    l_dc varchar2(1);
    l_creditos number(10,2);
    l_costo  number(10,2);
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ciclo
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
        
    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_enseregular;
    end if;
    
    SELECT  COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.CICLO=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza';
      goto salida_enseregular;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.CICLO=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza, importe cero';
      goto salida_enseregular;
    end if;
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_CICLO_COSTO a
    WHERE a.CICLO=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
     )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_costo,
    l_tipo_valor,
    null
    );
        
    <<salida_enseregular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_REGULAR_PLAN_PKG_CICLO;
  
  PROCEDURE SP_ENSE_EXTRA_DIRI_PLAN_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_costo  number(10,2);
    l_id_criterio_proc NUMBER;
    l_id_criterio_semestre number;
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ciclo
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      id_criterio_proc
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_id_criterio_proc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    
    SELECT 
    count(*)
    INTO
    l_contar
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    if l_contar<>1 then
      l_error:=1;
      l_msgerror:='No esta asignado a enseñanza regular';
      goto salida_ens_ed_plan;
    end if;
    
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio_proc;
    
  
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo por ciclo de enseñanza';
      goto salida_ens_ed_plan;
    end if;
    
    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_ens_ed_plan;
    end if;
    
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio_proc
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza, importe cero';
      goto salida_ens_ed_plan;
    end if;
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio_proc;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
     )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    (l_costo*(1+(l_importe/100))), --l_costo
    (l_creditos*(l_costo*(1+(l_importe/100)))),--l_creditos*l_costo,
    l_tipo_valor,
    null
    );
        
    <<salida_ens_ed_plan>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_EXTRA_DIRI_PLAN_CICLO;
  
  PROCEDURE SP_ENSE_BECA18_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_costo	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);

    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
    l_ciclo NUMBER;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ciclo
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, coalesce(sum(CREDITO),0)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo por ciclo de enseñanza B18';
      goto salida_ensebeca18;
    end if;

    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      l_error:=1;
      l_msgerror:='Cantidad de créditos igual a cero';
      goto salida_ensebeca18;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE  a.ciclo=l_ciclo
    and A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza B18, importe cero';
      goto salida_ensebeca18;
    end if;
    
    
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
   
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN
    )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null
    );
           
    <<salida_ensebeca18>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_BECA18_CICLO;
  
  PROCEDURE SP_ENSE_CURSO_APLAZADO_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
    l_costo number(10,2);
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ciclo
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    SELECT 
      ID_CRITERIO_PROC,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND ID_CARGA_CURSO IN(
        SELECT
           A.ID_CARGA_CURSO
        FROM DAVID.ACAD_CURSO_ALUMNO A, DAVID.VW_ACAD_CARGA_ACADEMICA B
        WHERE A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ORIGEN='O'
        AND A.ID_PERSONA=l_id_persona
        AND B.ID_SEMESTRE=l_id_semestre_act
        AND B.ID_CURSO_DETALLE  IN(  --LO QUE NO SE HA REPROBADO
          SELECT Y.CURSO_EQUIV
          FROM DAVID.ACAD_CURSO_ALUMNO X,
          DAVID.VW_CURSO_EQUIVALENTE Y
          WHERE X.ID_CURSO_DETALLE=Y.ID_CURSO_DETALLE
          AND X.ID_PERSONA=l_id_persona
          AND X.ID_TIPO_CONDICION=2
        )
    )
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    

    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_items=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo por plan de enseñanza';
      goto salida_curaplazado;
    end if;


    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por plan de enseñanza, importe cero';
      goto salida_curaplazado;
    end if;
    
     select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN,
      APLAZADO
    )values( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null,
    'S'
    );    
    <<salida_curaplazado>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_ENSE_CURSO_APLAZADO_CICLO;
  
  PROCEDURE SP_DESC_CRED_PRAC_BECA18_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_costo	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
    l_id_criterio_proc NUMBER;
    l_id_criterio_semestre number;
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ciclo
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
     SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    
    SELECT 
      TIPO_PROCESO,
      TIPO_VALOR,
      DC,
      NOMBRE,
      id_criterio_proc
      INTO
      l_tipo_proceso,
      l_tipo_valor,
      l_dc,
      l_nombre,
      l_id_criterio_proc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    SELECT 
    count(*)
    INTO
    l_contar
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    if l_contar<>1 then
      goto salida_desc_cp_b18;
    end if;
    
    SELECT 
    ID_CRITERIO_SEMESTRE
    INTO
    l_id_criterio_semestre
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND ID_CRITERIO=l_id_criterio_proc;
    
    SELECT 
    id_criterio
    INTO
    l_id_criterio
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CP)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND DESCUENTO_CREDITO='S'
    AND  ID_CARGA_CURSO IN(
      SELECT
           A.ID_CARGA_CURSO
        FROM DAVID.ACAD_CURSO_ALUMNO A, DAVID.VW_ACAD_CARGA_ACADEMICA B
        WHERE A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ORIGEN='O'
        AND A.ID_PERSONA=l_id_persona
        AND B.ID_SEMESTRE=l_id_semestre_act
        AND B.ID_CURSO_DETALLE NOT IN(  --LO QUE NO SE HA REPROBADO
          SELECT Y.CURSO_EQUIV
          FROM DAVID.ACAD_CURSO_ALUMNO X,
          DAVID.VW_CURSO_EQUIVALENTE Y
          WHERE X.ID_CURSO_DETALLE=Y.ID_CURSO_DETALLE
          AND X.ID_PERSONA=l_id_persona
          AND X.ID_TIPO_CONDICION=2
        )
    )
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    
    
    
    select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    if l_creditos=0 then
      goto salida_desc_cp_b18;
    end if;
    
      
     SELECT  COUNT(*) into  l_CONTAR  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_CONTAR=0 then
      goto salida_desc_cp_b18;
    end if;
       
     SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
   
    
    SELECT COALESCE(MAX(ITEM),0)  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN,
      CREDITOS,
      UNITARIO_CRED
    )VALUES(
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null,
    l_creditos,
    l_costo
    );
           
    <<salida_desc_cp_b18>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRED_PRAC_BECA18_CICLO;
  
  PROCEDURE SP_DESC_CRE_PRA_CUR_APZA_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_id_semestre_act NUMBER;
    l_creditos number(10,2);
    l_costo number(10,2);
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PERSONA,ciclo
    INTO l_id_semestre_programa,l_id_persona,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT ID_SEMESTRE INTO l_id_semestre_act FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;
    
    SELECT 
      ID_CRITERIO_PROC,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR,
      DC
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    DELETE FROM TT_CURSOS_X_PLAN;
    
    INSERT INTO TT_CURSOS_X_PLAN(
      ID_ALUMNO_CONTRATO,
      ID_SEMESTRE_PROGRAMA,
      ID_PROGRAMA_ESTUDIO,
      ID_PLAN,
      NOM_PLAN,
      NOM_ESCUELA,
      ID_SEMESTRE,
      CREDITOS
    )
    SELECT ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE, sum(CREDITO)  as CREDITOS
    FROM VW_MAT_CURSOS_PLAN_ALUMNO
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND ID_CARGA_CURSO IN(
        SELECT
           A.ID_CARGA_CURSO
        FROM DAVID.ACAD_CURSO_ALUMNO A, DAVID.VW_ACAD_CARGA_ACADEMICA B
        WHERE A.ID_CARGA_CURSO=B.ID_CARGA_CURSO
        AND B.ORIGEN='O'
        AND A.ID_PERSONA=l_id_persona
        AND B.ID_SEMESTRE=l_id_semestre_act
        AND B.ID_CURSO_DETALLE  IN(  --LO QUE NO SE HA REPROBADO
          SELECT Y.CURSO_EQUIV
          FROM DAVID.ACAD_CURSO_ALUMNO X,
          DAVID.VW_CURSO_EQUIVALENTE Y
          WHERE X.ID_CURSO_DETALLE=Y.ID_CURSO_DETALLE
          AND X.ID_PERSONA=l_id_persona
          AND X.ID_TIPO_CONDICION=2
        )
    )  AND DESCUENTO_CREDITO='S'
    group by ID_ALUMNO_CONTRATO,ID_SEMESTRE_PROGRAMA,ID_PROGRAMA_ESTUDIO,ID_PLAN,NOMBRE,NOMBRE_ESCUELA,ID_SEMESTRE
    ORDER BY CREDITOS;
    
    

    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='No esta asignado costo por ciclo de enseñanza';
      goto salida_desc_cred_apzdo;
    end if;

    select count(*) into l_contar1 from TT_CURSOS_X_PLAN;
    
    if l_contar1=0 then
      l_error:=1;
      l_msgerror:='Cantidad de creidtos no existe';
      goto salida_desc_cred_apzdo;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza, importe cero';
      goto salida_desc_cred_apzdo;
    end if;
    
     select coalesce(sum(CREDITOS),0) into l_creditos from TT_CURSOS_X_PLAN;
    
    SELECT  coalesce(IMPORTE,0) into  l_costo  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    
    insert into MAT_CONCEPTO_ASIGN_ALUM(
      ID_ALUMNO_CONTRATO,
      ID_CRITERIO_SEMESTRE,
      ITEM,
      ID_SEMESTRE_PROGRAMA,
      DESCRIPCION,
      DC,
      CANTIDAD,
      UNITARIO,
      TOTAL,
      TIPO_VALOR,
      ID_PLAN,
      APLAZADO,
      CREDITOS,
      UNITARIO_CRED
    )values( 
    P_ID_ALUMNO_CONTRATO,
    P_ID_CRITERIO_SEMESTRE,
    l_items, 
    l_id_semestre_programa,
    l_nombre,
    l_dc,
    l_creditos,
    l_costo,
    l_creditos*l_costo,
    l_tipo_valor,
    null,
    'S',
    l_creditos,
    l_costo
    );    
    <<salida_desc_cred_apzdo>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRE_PRA_CUR_APZA_CICLO;
  
  PROCEDURE SP_VARIACION_REGULAR_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_id_criterio_semestre number;
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ciclo
    INTO l_id_semestre_programa,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO
      l_id_criterio,
      l_nombre,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    select 
      count(*) into l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;
    
    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        into 
        l_id_criterio_semestre
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='Más de un criterio asignado para cobro de enseñanza';
        goto salida_var_regular;

    end if;
    
    
    SELECT 
      ID_CRITERIO,
      --IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR
      INTO
      l_id_criterio,
      --l_importe,
      l_tipo_proceso,
      l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    --=====
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza';
      goto salida_var_regular;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza, importe cero';
      goto salida_var_regular;
    end if;
    
    SELECT  coalesce(IMPORTE,0) into  l_importe  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    --=====
    
    /*
    SELECT coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
    WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
    and ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    */
   
   select
            sum(credito_variados)   INTO l_creditos
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO );
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    if l_creditos<>0 then
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      l_creditos,
      l_importe,
      l_creditos*l_importe,
      l_tipo_valor,
      null);
    end if;
        
    <<salida_var_regular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_VARIACION_REGULAR_CICLO;
  
  PROCEDURE SP_DESC_CRED_ASIG_REG(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
 is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_id_criterio_semestre number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA
    INTO l_id_semestre_programa
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO
      l_id_criterio,
      l_nombre,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    select 
      count(*) into l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;
    
    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        into 
        l_id_criterio_semestre
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='Más de un criterio asignado para descuento por crédito asignados';
        goto salida_desc_cre_asig;

    end if;
    
    
    SELECT 
      ID_CRITERIO,
      IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR
      INTO
      l_id_criterio,
      l_importe,
      l_tipo_proceso,
      l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    /*
    SELECT coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
    WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
    and ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;*/
   
    select
            sum(credito_variados)   INTO l_creditos
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO 
            AND aacc.Id_Tipo_Movimiento_Var=2
            and cur.codigo='UI01'
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO 
            and cur.codigo='UI01'
            );
          
    
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    if l_creditos<>0 then
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      l_creditos,
      l_importe,
      l_creditos*l_importe,
      l_tipo_valor,
      null);
    end if;
        
    <<salida_desc_cre_asig>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRED_ASIG_REG;
  PROCEDURE SP_DESC_CRED_ASIG_REG_PLAN(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_id_criterio_semestre number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ID_PLAN_PROGRAMA
    INTO l_id_semestre_programa,l_id_plan_programa
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO
      l_id_criterio,
      l_nombre,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    select 
      count(*) into l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;
    
    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        into 
        l_id_criterio_semestre
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='Más de un criterio asignado para cobro de enseñanza';
        goto salida_var_regular;

    end if;
    
    
    SELECT 
      ID_CRITERIO,
      --IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR
      INTO
      l_id_criterio,
      --l_importe,
      l_tipo_proceso,
      l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    --=====
    SELECT ID_PLAN INTO l_id_plan from DAVID.ACAD_PLAN_PROGRAMA WHERE ID_PLAN_PROGRAMA=l_id_plan_programa;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo de enseñanza para algunos planes, importe cero';
      goto salida_var_regular;
    end if;
    
    SELECT  coalesce(IMPORTE,0) into  l_importe  FROM MAT_PLAN_COSTO a
    WHERE a.id_plan=l_id_plan
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    --=====
    
    /*
    SELECT coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
    WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
    and ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    */
   
   select
            sum(credito_variados)   INTO l_creditos
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            and cur.codigo='UI01'
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO 
            and cur.codigo='UI01'
            );
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    if l_creditos<>0 then
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      l_creditos,
      l_importe,
      l_creditos*l_importe,
      l_tipo_valor,
      null);
    end if;
        
    <<salida_var_regular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRED_ASIG_REG_PLAN;
  
   PROCEDURE SP_DESC_CRED_ASIG_REG_CICLO(P_ID_ALUMNO_CONTRATO IN NUMBER,P_ID_CRITERIO_SEMESTRE IN NUMBER,P_TIPO_ALUMNO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
  is
    l_items number;
    l_contar number;
    l_contar1 number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_semestre_programa number;
    l_id_persona number;
    
    l_id_criterio	number;
    l_importe	number(10,2);
    l_tipo_proceso	varchar2(2 byte);
    l_tipo_valor	varchar2(2 byte);
    l_id_semestre number;
    l_nombre varchar2(150 byte);
    l_id_plan_programa number;
    l_id_plan number;
    l_dc varchar2(1);
    l_creditos number(10,2);
    l_id_criterio_semestre number;
    l_ciclo number;
  begin
  
    SELECT ID_SEMESTRE_PROGRAMA,ciclo
    INTO l_id_semestre_programa,l_ciclo
    FROM DAVID.VW_ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
    
    SELECT 
      ID_CRITERIO_PROC,
      NOMBRE,
      DC
      INTO
      l_id_criterio,
      l_nombre,
      l_dc
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=P_ID_CRITERIO_SEMESTRE;
    
    select 
      count(*) into l_contar
    from MAT_CRITERIO_SEMESTRE
    WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    and id_criterio=l_id_criterio;
    
    if l_contar=1 then
      select 
        ID_CRITERIO_SEMESTRE
        into 
        l_id_criterio_semestre
      from VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      and id_criterio=l_id_criterio;
    else
        l_error:=1;
        l_msgerror:='Más de un criterio asignado para cobro de enseñanza';
        goto salida_var_regular;

    end if;
    
    
    SELECT 
      ID_CRITERIO,
      --IMPORTE,
      TIPO_PROCESO,
      TIPO_VALOR
      INTO
      l_id_criterio,
      --l_importe,
      l_tipo_proceso,
      l_tipo_valor
    FROM VW_MAT_CRITERIO_SEMESTRE
    WHERE ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;
    
    --=====
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    
    if l_contar=0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza';
      goto salida_var_regular;
    end if;
    
    SELECT COUNT(*) INTO l_contar  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio
    AND coalesce(a.IMPORTE,0)<=0 ;
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar costo por ciclo de enseñanza, importe cero';
      goto salida_var_regular;
    end if;
    
    SELECT  coalesce(IMPORTE,0) into  l_importe  FROM MAT_CICLO_COSTO a
    WHERE a.ciclo=l_ciclo
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND a.ID_CRITERIO=l_id_criterio;
    --=====
    
    /*
    SELECT coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  INTO l_creditos
    FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
    WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
    and ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    */
   
   select
            sum(credito_variados)   INTO l_creditos
            FROM 
            (
            select
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(Aacc.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            and cur.codigo='UI01'
            union 
            all
            select
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,1,acd.credito,0)),0) credito_insertados,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,acd.credito,0)),0) credito_removidos,
            coalesce(sum(decode(acv.Id_Tipo_Movimiento_Var,2,(acd.credito*-1),acd.credito)),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            inner join DAVID.Acad_Curso cur on cur.Id_Curso=acd.Id_Curso
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO 
            and cur.codigo='UI01'
            );
    
    
    
    SELECT COALESCE(MAX(ITEM),0)+1  INTO l_items FROM MAT_CONCEPTO_ASIGN_ALUM
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    
    if l_creditos<>0 then
    
      insert into MAT_CONCEPTO_ASIGN_ALUM(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ITEM,
        ID_SEMESTRE_PROGRAMA,
        DESCRIPCION,
        DC,
        CANTIDAD,
        UNITARIO,
        TOTAL,
        TIPO_VALOR,
        ID_PLAN
      )
      VALUES( 
      P_ID_ALUMNO_CONTRATO,
      P_ID_CRITERIO_SEMESTRE,
      l_items, 
      l_id_semestre_programa,
      l_nombre,
      l_dc,
      l_creditos,
      l_importe,
      l_creditos*l_importe,
      l_tipo_valor,
      null);
    end if;
        
    <<salida_var_regular>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;
  END SP_DESC_CRED_ASIG_REG_CICLO;
    
END PKG_FINANCES_STUDENTS;