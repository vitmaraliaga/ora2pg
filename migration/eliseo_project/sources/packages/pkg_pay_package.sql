-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_PAY AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  PROCEDURE  SP_VERIFICA_ALUMNO_UPEU (
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  );
  PROCEDURE SP_DEPOSITO_ALUMNO_UPEU_VISA(	   
	   P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2) ;
     
  PROCEDURE SP_VENTAS_DEPOSITAR(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_PERSONA NUMBER,
        P_IMPORE NUMBER,
        P_VENTAS OUT VARCHAR2,
        P_VENTAS_IMP out VARCHAR2,
        P_TIPO out VARCHAR2
        );
  PROCEDURE SP_CREAR_DEPOSITO_ALUM_VISA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_TIPO VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_ID_VALE INT default null);
                              
  PROCEDURE  SP_VERIFICA_ALUMNOIDDNI(
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_ID_COMPROBANTE VARCHAR2,
      P_RUC VARCHAR2,
      P_RAZONSOCIAL VARCHAR2,
      P_DIRECCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  );
  
   PROCEDURE SP_DEPOSITO_ALUMNOIDDNI_VISA(	   
	   P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2);
     
  PROCEDURE SP_VENTAS_ALUMNOIDDNI(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_CANTIDAD NUMBER DEFAULT NULL,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     );
     
     PROCEDURE SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD NUMBER,
                              P_ID_DEPTO VARCHAR2,
                              P_ID_ANHO NUMBER,
                              P_ID_MES NUMBER,
                              P_ID_MEDIOPAGO VARCHAR2,
                              P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,
                              P_VENTAS  VARCHAR2,
                              P_IMP_VENTAS VARCHAR2,
                              P_TIPO VARCHAR2,
                              P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,
                              P_ID_DINAMICA NUMBER,
                              P_ID_TIPOTARJETA NUMBER,
                              P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,
                              P_FECHA_OP DATE,
                              P_IMPORTE NUMBER,
                              P_IMPORTE_TARJETA NUMBER,
                              P_IMPORTE_TRANS NUMBER,
                              P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,
                              P_GLOSA VARCHAR2,
                              P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,
                              P_ID_TIPOASIENTO VARCHAR2,
                              P_ID_CANAL NUMBER,
                              P_ERROR out NUMBER,
                              P_MSGERROR out VARCHAR2);
                              
    PROCEDURE SP_DEPOSITO_ALUMNO_VISA_ACAD(	   
        P_ID_ORDEN 	    NUMBER,	
        P_IMPORTE   		    NUMBER,	
        P_IP   			      VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2
        );
      
    PROCEDURE SP_VENTAS_ACADEMICAS(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_REGISTRO  	VARCHAR2,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
     );
      PROCEDURE SP_VALIDA_DEPOSITO(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_COD_TRANSACCION VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_ID_PERSONA NUMBER,
        P_ID_DINAMICA OUT NUMBER,
        P_GLOSA OUT VARCHAR2,
        P_ERROR OUT NUMBER,
        P_MSGERROR out varchar2
        );
    PROCEDURE SP_VALIDA_DEP_ALUMNOIDDNI(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_ID_DINAMICA NUMBER,
        P_ID_COMPROBANTE VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_ID_PERSONA NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR out varchar2
        );
    PROCEDURE SP_DEPOSITO_ADMISION(	 
        P_ID_ORDEN 	    NUMBER,	
        P_IMPORTE   		    NUMBER,	
        P_IP   			      VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2     
	   );
    PROCEDURE SP_DEPOSITO_DIVERSO(P_ID_ORDEN NUMBER,P_IMPORTE NUMBER,P_IP VARCHAR2,P_ID OUT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
    PROCEDURE SP_CREAR_DEPOSITO_DIVERSO(
                              P_ID_ENTIDAD NUMBER,
                              P_ID_DEPTO VARCHAR2,
                              P_ID_ANHO NUMBER,
                              P_ID_MES NUMBER,
                              P_ID_MEDIOPAGO VARCHAR2,
                              P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,
                              P_VENTAS  VARCHAR2,
                              P_IMP_VENTAS VARCHAR2,
                              P_TIPO VARCHAR2,
                              P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,
                              P_ID_DINAMICA NUMBER,
                              P_ID_TIPOTARJETA NUMBER,
                              P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,
                              P_FECHA_OP DATE,
                              P_IMPORTE NUMBER,
                              P_IMPORTE_TARJETA NUMBER,
                              P_IMPORTE_TRANS NUMBER,
                              P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,
                              P_GLOSA VARCHAR2,
                              P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,
                              P_ID_TIPOASIENTO VARCHAR2,
                              P_ID_CANAL NUMBER,
                              P_ID_ORIGEN NUMBER,
                              P_ERROR out NUMBER,
                              P_MSGERROR out VARCHAR2
      );
    PROCEDURE SP_DEPOSITO_MUSICA(	 
        P_ID_ORDEN 	    NUMBER,	
        P_IMPORTE   		    NUMBER,	
        P_IP   			      VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2     
	   );
	PROCEDURE  SP_VERIFICA_CLIENTE(
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_ID_COMPROBANTE VARCHAR2,
      P_RUC VARCHAR2,
      P_RAZONSOCIAL VARCHAR2,
      P_DIRECCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  );
  PROCEDURE  SP_DEPOSITO_VENTA_EDA(
      P_ID_DINAMICA NUMBER,
      P_OPERACION VARCHAR2,
      P_IMPORTE NUMBER,
      P_COD_TARJETA VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_IP VARCHAR2,
      P_ID OUT VARCHAR2,
      P_ERROR OUT NUMBER,
      P_MSGERROR OUT VARCHAR2    
  );
  PROCEDURE SP_DEPOSITO_CLIENTE_PUBLICO(	 
        P_ID_ORDEN 	    NUMBER,	
        P_IMPORTE   		    NUMBER,	
        P_IP   			      VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2     
	   );
    PROCEDURE SP_FINALIZAR_VENTA_PUBLICO(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_VENTA INTEGER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP OUT VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR OUT varchar2
     );
  PROCEDURE SP_VENTAS_TRAMITE_DEP(	 
        P_ID_ORDEN NUMBER,	
        P_IMPORTE NUMBER,	
        P_IP VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2     
	   ) ;
  PROCEDURE SP_VENTAS_TRAMITE(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_ID_TRAMITE_PAGO  NUMBER,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     );
     
  PROCEDURE  SP_VERIFICA_ALUMNO_TRAMITE (
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_ID_CLIENTE_LEGAL NUMBER,
      P_ID_COMPROBANTE VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  );
  PROCEDURE SP_VALIDA_DEPOSITO_TRAM(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_ID_COMPROBANTE VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR out varchar2
        );
  PROCEDURE  SP_VERIFICA_ALUMNOEAD(
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_ID_COMPROBANTE VARCHAR2,
      P_RUC VARCHAR2,
      P_RAZONSOCIAL VARCHAR2,
      P_DIRECCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR);
  PROCEDURE SP_DEPOSITO_ALUMNOEAD_VISA(	 
     P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2     
	   ) ;
  PROCEDURE SP_VENTAS_ALUMNOEAD(
       P_ID_ORDEN 	    NUMBER,
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_CANTIDAD NUMBER DEFAULT NULL,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     );
   PROCEDURE SP_GENERAR_ASIENTO_VENTA_EAD(P_ID_VENTA NUMBER, P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
   
   PROCEDURE SP_DEPOSITO_RESEARCH_VISA(	 
     P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2     
	   ) ;
     
     PROCEDURE SP_VENTAS_RESEARCH(
       P_ID_ORDEN 	    NUMBER,
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_CANTIDAD NUMBER DEFAULT NULL,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     );
     
END PKG_PAY;


CREATE OR REPLACE PACKAGE BODY        PKG_PAY AS
  PROCEDURE  SP_VERIFICA_ALUMNO_UPEU (
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  )
  
  
  IS
    l_per_email VARCHAR2(100);
    l_eap VARCHAR2(1000);
    l_codigo VARCHAR2(100);
    l_dni VARCHAR2(35);
    l_materno VARCHAR2(100);
    l_paterno VARCHAR2(100);
    l_nombre VARCHAR2(100);
    l_id_tipodocumento number;
    l_id_persona number;
    l_contar integer;
    l_valida varchar2(1):='N';
    l_msgerror varchar2(200):='No existe datos';
    l_error number:=0;
    l_id_anho number;
    l_id_mes number;
    l_id_user number:=205662;---crear

    
    l_tipodocumento varchar2(50);
    l_glosa varchar2(150);
    l_id_dinamica number;
    
    l_id_persona_ju number;
    l_razonsocial varchar2(500);
    l_ruc varchar2(15);
    l_id_comprobante varchar2(2);
  BEGIN
    
      select 
      count(1) into l_contar
      FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B, MOISES.PERSONA_NATURAL_ALUMNO C
      WHERE A.ID_PERSONA = B.ID_PERSONA
      AND  B.ID_PERSONA = C.ID_PERSONA
      AND A.ID_PERSONA=P_ID_PERSONA;
      
      
        
      if l_contar>0 then
      
        l_valida :='S';
        l_msgerror:='';
                
        SELECT 
        A.NOMBRE,
        A.PATERNO,
        A.MATERNO,
        B.NUM_DOCUMENTO AS DNI,
        C.CODIGO,
        A.ID_PERSONA AS ID_PERSONAL,
        FT_ALUMNO_EAP(A.ID_PERSONA) AS EAP,
        B.CORREO AS EMAIL_EXTERNO,
        B.id_tipodocumento
        into l_nombre,l_paterno,l_materno,l_dni,l_codigo,l_id_persona,l_eap,l_per_email,l_id_tipodocumento
        FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B, MOISES.PERSONA_NATURAL_ALUMNO C
        WHERE A.ID_PERSONA = B.ID_PERSONA
        AND  B.ID_PERSONA = C.ID_PERSONA
        AND A.ID_PERSONA=P_ID_PERSONA;
        
        select count(1) into l_contar from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        
        if l_contar=1 then
          select siglas into l_tipodocumento from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        end if;
        select 
        to_number(to_char(sysdate,'YYYY')), 
        to_number(to_char(sysdate,'MM'))
        into
        l_id_anho,
        l_id_mes
        from dual;
        
        PKG_PAY.SP_VALIDA_DEPOSITO(P_ID_ENTIDAD,P_ID_DEPTO,P_COD_TRANSACCION,l_id_anho,l_id_mes,l_id_user,l_id_dinamica,l_glosa, l_error,l_msgerror);

        if l_error=1 then
          l_valida:='N';
        end if;
       
      end if;
     
 
       OPEN cursor FOR
      select
        l_valida  as valida,
        l_id_persona as id_persona,
        l_id_persona as id_persona_visa,
        l_per_email as email_visa,
        l_eap as eap,
        l_codigo as codigo,
        l_dni as num_documento,
        l_paterno||' '||l_materno as apellidos,
        l_paterno||' '||l_materno as apellidos_visa,
        l_nombre as nombres,
        l_paterno as paterno,
        l_materno as materno,
        l_nombre as nombres_visa,
        l_tipodocumento as tipodocumento,
        l_ruc AS  ruc,
        l_razonsocial as razonsocial,
        l_msgerror  as msgerror,
        l_glosa as glosa,
        l_id_dinamica as id_dinamica,
        l_id_persona_ju as id_cliente,
        l_id_comprobante as id_comprobante
      from dual;
      
    
    END SP_VERIFICA_ALUMNO_UPEU;
    
     PROCEDURE SP_DEPOSITO_ALUMNO_UPEU_VISA(
     P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2
     )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(3000):=null;
     l_ventas_imp varchar2(3000):=null;
     l_tipo varchar2(3000):=null;
     l_id_tipotransaccion integer:=166;
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(100);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(500);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     
     n_importe number;
     l_id_canal number;
     
     begin
        
        select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         id_canal
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        IF l_id_moneda IS NULL THEN
          l_id_moneda:=7;
        END IF;
        
        select 
        to_number(to_char(sysdate,'YYYY')), 
        to_number(to_char(sysdate,'MM')),
        sysdate,
        'DEPÓSITO CON VISA'
        into
        l_id_anho,
        l_id_mes,
        l_fecha,
        l_glosa
        from dual;  
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO 
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9  and coalesce(cos_denominacional,0)>0
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          l_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
        
        
        --valida vouche
      
        SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = l_id_anho
        AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
        if l_contar < 1 then
            l_error:=1;
            l_msgerror:='Alto: No existe tipo de Asiento (RV) ';
            GOTO salida_dep;
        elsif l_contar > 1 then
            l_error:=1;
            l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||to_char(l_id_anho);
            GOTO salida_dep;
        end if;
        
        SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = l_id_anho
        AND ID_TIPOVOUCHER = l_id_tipovoucher;
    

      
          
        
        SELECT count(1) into l_contar  
        FROM CONTA_DINAMICA
        WHERE ID_DINAMICA=P_ID_DINAMICA;
        
        if l_contar>0 then
          SELECT id_tipotransaccion into l_id_tipotransaccion  
          FROM CONTA_DINAMICA
          WHERE ID_DINAMICA=P_ID_DINAMICA;
        else
          l_error:=1;
          l_msgerror:='Alto: No esta configurado tipo de transacción';
          GOTO salida_dep;
        end if;
        
        
        SELECT  count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO =P_ID_DEPTO
        AND ID_MODULO = '14'--modulo tesoreria
        AND ID_ANHO = l_id_anho
        and ID_TIPOASIENTO=l_id_tipoasiento
        AND AUTOMATICO='S'
        AND ID_TIPOVOUCHER = l_id_tipovoucher;
                
        if l_contar < 1 then
            l_error:=1;
            l_msgerror:='Alto: No existe la configuración de vouchers para los depositos, del periodo '||to_char(l_id_anho);
            GOTO salida_dep;
        elsif l_contar > 1 then
            l_error:=1;
            l_msgerror:='Alto: Existe más de una configuración de vouchers para los Depositos, del periodo '||to_char(l_id_anho);
            GOTO salida_dep;
        end if;
        
        
        PKG_PAY.SP_VENTAS_DEPOSITAR(
                P_ID_ENTIDAD,
                P_ID_DEPTO,
                l_id_anho,
                P_ID_PERSONA,
                n_importe,--P_IMPORTE
                l_ventas,
                l_ventas_imp,
                l_tipo
        );
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
          
        end if;
        
        
        PKG_PAY.SP_CREAR_DEPOSITO_ALUM_VISA(P_ID_ENTIDAD,P_ID_DEPTO,l_id_anho,l_id_mes,l_id_mediopago,l_id_user,
                                  P_ID_PERSONA,l_ventas,l_ventas_imp,l_tipo,l_id_tipotransaccion,l_id_moneda,
                                  P_ID_DINAMICA,l_id_tipotarjeta,null,P_OPERACION,l_fecha,0,
                                  n_importe,--P_IMPORTE
                                  0,l_importe_me,l_tipocambio,l_glosa,null, null,l_id_tipoasiento,l_id_canal,
                                  l_error,l_msgerror);
        IF l_error <> 0 THEN
            ROLLBACK;
        END IF;
                              
       <<salida_dep>>
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
     end SP_DEPOSITO_ALUMNO_UPEU_VISA;
     
     PROCEDURE SP_VENTAS_DEPOSITAR(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_PERSONA NUMBER,
        P_IMPORE NUMBER,
        P_VENTAS OUT VARCHAR2,
        P_VENTAS_IMP out VARCHAR2,
        P_TIPO out VARCHAR2
        ) IS
        L_VENTAS VARCHAR2(3000):=NULL;
        L_VENTA_IMP VARCHAR2(3000):=NULL;
        L_TIPO VARCHAR2(3000):=NULL;
        cursor curventa is SELECT 
        id_venta,
        sum(total) as total,
        tipo
        FROM VW_SALES_MOV
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_CLIENTE = P_ID_PERSONA
        AND ID_TIPOVENTA IN (1,2,3,4) 
        group by id_venta,tipo
        having sum(TOTAL)>0
        order by tipo,id_venta;    

        l_i number:=0;
        l_importe number(10,2);
        l_saldo number(10,2);
    BEGIN
      l_importe:= P_IMPORE;
      FOR cur in curventa LOOP
        BEGIN
          if l_importe>0 then
            if l_importe>cur.total then
              l_saldo:=cur.total;
            else
              --l_saldo:=cur.total - l_importe;
              l_saldo:=l_importe;
            end if;
            if l_i=0 then
              L_VENTAS:=to_char(cur.id_venta);
              L_VENTA_IMP:=to_char(l_saldo);
              L_TIPO:=cur.tipo;
            else
              L_VENTAS:=L_VENTAS||'|'||to_char(cur.id_venta);
              L_VENTA_IMP:=L_VENTA_IMP||'|'||to_char(l_saldo);
              L_TIPO:=L_TIPO||'|'||cur.tipo;
            end if;
            l_importe:= l_importe - cur.total;
            if l_importe<=0 then
              Exit when l_importe<=0;
            end if;
            l_i:=l_i +1 ;
          end if;
          
        END;     
      END LOOP;
      P_VENTAS:=L_VENTAS;
      --L_VENTA_IMP:=L_VENTAS;
      P_VENTAS_IMP:=L_VENTA_IMP;
      P_TIPO:=L_TIPO;
    END SP_VENTAS_DEPOSITAR;
    
    PROCEDURE SP_CREAR_DEPOSITO_ALUM_VISA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_TIPO VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_ID_VALE INT default null) IS
                              
        l_serie varchar2(4);
        l_numero varchar2(8);
        l_deposito number:=0;
        l_estado varchar2(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher number :=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_correlativo number :=0;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_automatico varchar2(2);
        l_contar number;
        l_fecha date;
        --l_id_ctabancaria number;
        l_importedet number(10,2);
        l_importeasiento number(10,2);
        l_importeasiento_banco number(10,2);
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(100);
        l_id_ddetalle NUMBER;
        l_tipo_tarjeta varchar2(30);
        l_cod_dinamica_ant varchar2(5);
        L_ID_DOCUMENTO number;
        L_ID_TIPODEPOSITO NUMBER := 1; --DEPOSITOS ALUMNOS
        L_ID_DINAMICA NUMBER;
        BEGIN
            select sysdate into l_fecha from dual;
            IF P_ID_VALE = 0 THEN
                L_ID_VALE := NULL;
            ELSE
                L_ID_VALE := P_ID_VALE;
            END IF;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
            
            SELECT ID_DOCUMENTO into L_ID_DOCUMENTO FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_COMPROBANTE = l_id_comprobante;
            
            --obtiene numero y serie y actualiza correlativo
            --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
            PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(L_ID_DOCUMENTO,l_serie,l_correlativo);
          
            if l_correlativo=0 or l_correlativo is null then
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||')';
            else
                --obtener voucher
                select count(1) into l_contar from CONTA_VOUCHER_CONFIG  
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                and ID_ANHO=P_ID_ANHO
                and id_tipovoucher = 5; 
          
                if l_contar>0  then
                    select AUTOMATICO into l_automatico from CONTA_VOUCHER_CONFIG  
                    where ID_ENTIDAD=P_ID_ENTIDAD 
                    and ID_DEPTO= P_ID_DEPTO
                    and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                    and ID_ANHO=P_ID_ANHO
                    and id_tipovoucher = 5; -- 5= tipo voucher ingresos   

                    if l_automatico='S' then
                        PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,P_ID_TIPOASIENTO,5,null, 'S', P_ID_PERSONA, l_id_voucher);
                    end if;
                end if;
            end if;
      
            if l_id_voucher=0 then
                l_error:=2; --no existe voucher
                l_msgerror:='Depósito: No existe voucher '||P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-'||P_ID_TIPOASIENTO||'-'||P_ID_ANHO||''||l_automatico;
            end if;
      
      --goto salida_rapida;
      if l_error=0 then
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        if l_contar>0 then
           SELECT NOMBRE INTO l_tipo_tarjeta FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
          
        end if;
        
        
        SELECT 
                (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Visa Oline:'||l_serie||'-'||to_number(l_numero)||'-'||l_tipo_tarjeta||'-Oper-'||P_OPERACION||'-'||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                WHEN '001' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||': Dep.-'||l_tipo_tarjeta||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||l_serie||'-'||TO_NUMBER(l_numero)||'-'||SUBSTR(P_GLOSA,1,20)
                ELSE 'DEPOSITO CLIENTES' END )
                 as GLOSA INTO L_GLOSA
        FROM DUAL;
        
        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_VALE,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_TIPODEPOSITO,
          ID_CANAL
        )VALUES( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          l_id_voucher, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_VALE,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          l_serie,
          l_numero,
          l_fecha,
          P_IMPORTE_TARJETA, 
          P_IMPORTE_ME,
          P_TIPOCAMBIO,
          --P_GLOSA, 
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          l_estado,
          P_FECHA_OP,
          P_OPERACION,
          L_ID_TIPODEPOSITO,
          P_ID_CANAL
        ) RETURNING ID_DEPOSITO INTO l_deposito;
        
        SELECT A.ID_DINAMICA INTO L_ID_DINAMICA FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 13
        AND C.CODIGO = 'AN' --ANTICIPOS
        AND A.ACTIVO = 'S';
                
        if coalesce(length(P_VENTAS),0)>0 and l_error=0 then
            PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE(l_deposito,P_VENTAS,P_IMP_VENTAS,P_TIPO,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
            select coalesce(sum(importe),0) into l_importedet from caja_deposito_detalle
            where id_deposito=l_deposito;
            if P_IMPORTE_TARJETA>l_importedet then
                select coalesce(max(ID_DDETALLE),0)+1 into l_id_ddetalle from CAJA_DEPOSITO_DETALLE;
                insert into CAJA_DEPOSITO_DETALLE(--ID_DDETALLE,
                ID_DEPOSITO,ID_VENTA,IMPORTE,IMPORTE_ME)values(--l_id_ddetalle,
                l_deposito,NULL,P_IMPORTE_TARJETA-l_importedet,0);
                
                l_cod_dinamica_ant:='AN';-- anticipo a favor del cliente
                --SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_CLIENTE NUMBER,P_ID_PERSONA NUMBER,P_ID_VENTA NUMBER,P_IMPORTE NUMBER,P_DC VARCHAR2,P_CODIGO VARCHAR2,P_ERROR OUT NUMBER, P_MSN OUT VARCHAR2)
                PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(
                  P_ID_ENTIDAD,
                  P_ID_DEPTO,
                  P_ID_ANHO,
                  P_ID_MES,
                  P_ID_CLIENTE,
                  P_ID_PERSONA,
                  l_deposito,
                  P_IMPORTE_TARJETA-l_importedet,
                  'D',
                  l_cod_dinamica_ant,
                  l_error, 
                  l_msgerror
              );
                --genera el asiento del anticipo
                
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,L_ID_DINAMICA,P_ID_CTABANCARIA,0,P_IMPORTE_TARJETA-l_importedet,0,L_GLOSA,l_error,l_msgerror);
            end if;
        else
    
          select coalesce(max(ID_DDETALLE),0)+1 into l_id_ddetalle from CAJA_DEPOSITO_DETALLE;
            insert into CAJA_DEPOSITO_DETALLE(
            --ID_DDETALLE,
            ID_DEPOSITO,
            ID_VENTA,
            IMPORTE,
            IMPORTE_ME
          )values(
            --l_id_ddetalle,
            l_deposito,
            NULL,
            P_IMPORTE_TARJETA,
            0
          );
            --insert Anticipo
            l_cod_dinamica_ant:='AN';-- anticipo a favor del cliente
            PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,l_deposito,P_IMPORTE_TARJETA,'D',l_cod_dinamica_ant,l_error,l_msgerror);
            PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,L_ID_DINAMICA,P_ID_CTABANCARIA,0,P_IMPORTE_TARJETA,0,L_GLOSA,l_error,l_msgerror);
        end if;
        /*
        l_importeasiento:=P_IMPORTE;
        
        if coalesce(P_IMPORTE_TARJETA,0)>0 then
            l_importeasiento:=0;
        end if;
        
        if coalesce(P_IMPORTE_TRANS,0)>0 then
            l_importeasiento:=0;
        end if;*/
        
         IF L_IMPORTEDET > 0 THEN
            l_importeasiento_banco:=L_IMPORTEDET;
        ELSE
            l_importeasiento_banco:=0;
        END IF;
        
        --L_IMPORTEASIENTO:=P_IMPORTE;
        
        IF COALESCE(P_IMPORTE_TARJETA,0)>0 THEN
            l_importeasiento:=0;
        END IF;
        
        IF COALESCE(P_IMPORTE_TRANS,0)>0 THEN
            l_importeasiento:=0;
        END IF;
        if l_error=0  then
            IF l_importedet > 0 THEN
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,0,l_importedet,0,L_GLOSA,l_error,l_msgerror);
            END IF;
        end if;
        
      end if;

      <<salida_rapida>>
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_ALUM_VISA;
  
  PROCEDURE  SP_VERIFICA_ALUMNOIDDNI(
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_ID_COMPROBANTE VARCHAR2,
      P_RUC VARCHAR2,
      P_RAZONSOCIAL VARCHAR2,
      P_DIRECCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  ) IS
  
    l_per_email VARCHAR2(100);
    l_eap VARCHAR2(1000);
    l_codigo VARCHAR2(100);
    l_dni VARCHAR2(35);
    l_materno VARCHAR2(100);
    l_paterno VARCHAR2(100);
    l_nombre VARCHAR2(100);
    l_id_tipodocumento number;
    l_contar integer;
    l_valida varchar2(1):='N';
    l_msgerror varchar2(200):='No existe datos';
    l_error number:=0;
    l_id_persona number;
    l_id_virtual number;
    l_tipodocumento varchar2(50);
    l_id_persona_ju number;
    l_razonsocial varchar2(500);
    l_glosa varchar2(150);
    l_id_dinamica number;
    l_id_anho number;
    l_id_mes number;
    l_id_user number:=205662;---crear
    l_id number;
    l_id_emp number;
  BEGIN
  
  
       l_id_dinamica:= to_number(P_COD_TRANSACCION);
        
        
        select 
        to_number(to_char(sysdate,'YYYY')), 
        to_number(to_char(sysdate,'MM'))
        into
        l_id_anho,
        l_id_mes
        from dual;
        
        select count(1) into l_contar from CONTA_DINAMICA where id_dinamica=l_id_dinamica;
        if l_contar=0 then
          l_msgerror:='No existe código de transacción';
          l_error:=1;
          GOTO salida_validadniid;
        end if;
        
        select nombre into l_glosa from CONTA_DINAMICA where id_dinamica=l_id_dinamica;
        
     
        
        PKG_PAY.SP_VALIDA_DEP_ALUMNOIDDNI(P_ID_ENTIDAD,P_ID_DEPTO,l_id_dinamica,P_ID_COMPROBANTE,l_id_anho,l_id_mes,l_id_user, l_error,l_msgerror);

        if l_error=1 then
          GOTO salida_validadniid;
        end if;
  
      select 
      count(1) into l_contar
      FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B
      WHERE A.ID_PERSONA = B.ID_PERSONA
      AND A.ID_PERSONA=P_ID_PERSONA;
      
      l_id_persona:=P_ID_PERSONA;
      
      if l_contar=0 then
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        
        IF l_contar=1 THEN
          select 
          ID_PERSONA into l_id_persona
          FROM MOISES.PERSONA_DOCUMENTO
          WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA
        WHERE  ID_PERSONA=l_id_persona;
        
        if l_contar=0 then
          select coalesce(max(id_persona),0) +1 into l_id from MOISES.persona;
    
          INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE,
                  PATERNO,
                  MATERNO
              )VALUES(
                  l_id,
                  P_NOMBRE,
                  P_PATERNO,
                  P_MATERNO
          )returning ID_PERSONA INTO l_id_persona;
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_NATURAL
        WHERE  ID_PERSONA=l_id_persona;
        
        if l_contar=0 then
          INSERT INTO MOISES.PERSONA_NATURAL(
                  ID_PERSONA,
                  ID_TIPOPAIS,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  SEXO,
                  CORREO
              )VALUES(
                  l_id_persona,
                  176,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  --P_SEXO,
                  DECODE(P_SEXO,6,2,P_SEXO),--AUMENTADO MARLO
                  P_CORREO
          );
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  ID_PERSONA=l_id_persona;
        if l_contar=0 then
            INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES(
                  l_id_persona,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  1
          );
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_VIRTUAL
        WHERE  ID_PERSONA=l_id_persona;
        
        if l_contar=0 and P_CORREO is not null then
          INSERT INTO MOISES.PERSONA_VIRTUAL(
                  ID_VIRTUAL,
                  ID_PERSONA,
                  ID_TIPOVIRTUAL,
                  DIRECCION,
                  ES_ACTIVO
                )VALUES(
                    1,
                    l_id_persona,
                    1,
                    P_CORREO,
                    1
            );
        end if;
        
       -- ELSE
          
        --END IF;
        
      END IF;
        
        l_valida :='S';
        l_msgerror:='';
                
        SELECT 
        A.NOMBRE,
        A.PATERNO,
        A.MATERNO,
        B.NUM_DOCUMENTO AS DNI,
        C.CODIGO,
        FT_ALUMNO_EAP(A.ID_PERSONA) AS EAP,
        B.CORREO AS EMAIL_EXTERNO,
        B.id_tipodocumento
        into l_nombre,
        l_paterno,
        l_materno,
        l_dni,
        l_codigo,
        l_eap,
        l_per_email,
        l_id_tipodocumento
        FROM MOISES.PERSONA A  
        INNER JOIN MOISES.PERSONA_NATURAL B
        ON A.ID_PERSONA = B.ID_PERSONA
        LEFT JOIN MOISES.PERSONA_NATURAL_ALUMNO C
        ON B.ID_PERSONA = C.ID_PERSONA
        WHERE A.ID_PERSONA=l_id_persona;
        
        
        select count(*) into l_contar
        from MOISES.PERSONA_DOCUMENTO
        where ID_PERSONA=l_id_persona
        and es_activo=1;
        
        if l_contar>0 then
          select ID_TIPODOCUMENTO,NUM_DOCUMENTO into l_id_tipodocumento,l_dni
          from MOISES.PERSONA_DOCUMENTO
          where ID_PERSONA=l_id_persona
          and es_activo=1
          and rownum=1
          order by ID_TIPODOCUMENTO;
           
        end if;
        
        
               
        select count(1) into l_contar from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        
        if l_contar=1 then
          select siglas into l_tipodocumento from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        end if;
        
        select count(*) into l_contar
        from MOISES.PERSONA_VIRTUAL
        where ID_PERSONA=l_id_persona
        and es_activo=1;
        
        if l_contar>0 then
          select DIRECCION into l_per_email
          from MOISES.PERSONA_VIRTUAL
          where ID_PERSONA=l_id_persona
          and es_activo=1
          and rownum=1
          order by ID_VIRTUAL desc;
           
        end if;
        
        if P_ID_COMPROBANTE='01' then
        
          if P_RUC is null then
            l_msgerror:='Es factura, debe registrar RUC';
            l_error:=1;
            GOTO salida_validadniid;
          end if;
          
          select count(*) into l_contar from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc=P_RUC;
          
          if l_contar>0 then
            select a.nombre into l_razonsocial from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc=P_RUC;
          else
          
            if P_RAZONSOCIAL is null then
              l_msgerror:='Es factura, debe registrar Razon Social';
              l_error:=1;
              GOTO salida_validadniid;
            end if;
            
            l_razonsocial:=P_RAZONSOCIAL;
            
            if P_DIRECCION is null then
              l_msgerror:='Es factura, debe registrar Dirección';
              l_error:=1;
              GOTO salida_validadniid;
            end if;
            
            select coalesce(max(id_persona),0) +1 into l_id_emp from MOISES.persona;

          
             INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE
              )VALUES(
                  l_id_emp,
                  P_RAZONSOCIAL
             )returning ID_PERSONA INTO l_id_persona_ju;
             
             insert into MOISES.PERSONA_JURIDICA(
                      ID_RUC,
                      ID_PERSONA,
                      ID_TIPOESTADO,
                      ID_TIPOCONDICION,
                      ID_TIPOCONTRIBUYENTE,
                      ID_TIPOACTIVIDADECONOMICA,
                      ID_TIPOPAIS,
                      FEC_REGISTRO,
                      FEC_INICIO,
                      FEC_BAJA,
                      ES_RUS
              )values(
                    P_RUC,
                    l_id_persona_ju,
                    11,
                    1,
                    2,
                    290,
                    176,
                    null,
                    null,
                    null,
                    null
             );
             
             insert into MOISES.PERSONA_DIRECCION(
                ID_PERSONA,
                ID_TIPODIRECCION,
                DIRECCION,
                ES_ACTIVO
            )VALUES(
                l_id_persona_ju,
                5,
                P_DIRECCION,
                1
            );
            
            INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES(
                  l_id_persona_ju,
                  6,
                  P_RUC,
                  1
           );
   
          end if;
   
        end if;
        
       
       
      <<salida_validadniid>>
  
    OPEN cursor FOR
    
     select
        l_valida  as valida,
        l_id_persona as id_persona,
        l_id_persona as id_persona_visa,
        l_per_email as email_visa,
        l_eap as eap,
        l_codigo as codigo,
        l_dni as num_documento,
        l_paterno||' '||l_materno as apellidos,
        l_paterno||' '||l_materno as apellidos_visa,
        l_nombre as nombres,
        l_paterno as paterno,
        l_materno as materno,
        l_nombre as nombres_visa,
        l_tipodocumento as tipodocumento,
        P_RUC AS  ruc,
        l_razonsocial as razonsocial,
        l_msgerror  as msgerror,
        l_glosa as glosa,
        l_id_dinamica as id_dinamica,
        l_id_persona_ju as id_cliente,
        P_ID_COMPROBANTE as id_comprobante
      from dual;
      
     
  END SP_VERIFICA_ALUMNOIDDNI;
  
  PROCEDURE SP_DEPOSITO_ALUMNOIDDNI_VISA(	 
     P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2     
	   )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(500);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal NUMBER;
     L_CANTIDAD NUMBER(10,2):=1;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         ID_CANAL
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        SELECT COUNT(1) INTO l_contar FROM JONAS.EVENTO_EVENTO_PARTICIPANTE WHERE ID_EVENTO_PARTICIPANTE = P_ID_ORIGEN;
        IF l_contar >= 1 THEN
            SELECT NVL(CANTIDAD,1) INTO L_CANTIDAD FROM JONAS.EVENTO_EVENTO_PARTICIPANTE WHERE ID_EVENTO_PARTICIPANTE = P_ID_ORIGEN;
        END IF;
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9 and coalesce(cos_denominacional,0)>0
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_depalumniddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_depalumniddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
            
          

        if P_ID_COMPROBANTE<>'00' then
          PKG_PAY.SP_VENTAS_ALUMNOIDDNI(
                   P_ID_PERSONA,	
                   P_OPERACION,
                   P_ID_ENTIDAD,
                   P_ID_DEPTO,
                   l_id_anho ,
                   l_id_mes, 
                   n_importe,	
                   P_IP,
                   P_ID_DINAMICA,
                   P_ID_CLIENTE,
                   P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,
                   l_id_moneda,
                   l_tipocambio,
                   n_importe_me,
                   L_CANTIDAD,
                   l_ventas,
                   l_ventas_imp,
                   l_error,
                   l_msgerror
          );
          
          if coalesce(length(l_ventas),0)>0 then
            select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
          end if;
          
          SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;
        else
          l_id_dinamica_dep:=P_ID_DINAMICA;
        end if;
        
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;

        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              l_id_dinamica_dep,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              l_error,
                              l_msgerror
                            );
                                      
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
     end SP_DEPOSITO_ALUMNOIDDNI_VISA;
    PROCEDURE SP_VENTAS_ALUMNOIDDNI(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_CANTIDAD NUMBER DEFAULT NULL,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     ) is
     l_error number:=0;
     l_msgerror varchar2(200):='';
     
     L_USER NUMBER :=4; --MATRICULADOR ONLINE
     l_igv number(10,2);
     l_tc NUMBER(10,3);
     l_id_moneda number;
     l_id_moneda_tc number;
     l_id_documento NUMBER;
     
     l_serie varchar2(5);
     l_correlativo number;
     l_numero varchar2(15);
     l_glosa varchar2(200):='';
     l_nom_dinamica varchar(150);
     l_id_tipo_transaccion number;
     l_id_credito number:=1;
     l_id_tipovoucher number := 1;
     l_id_persona_v number;
     l_id_voucher NUMBER;
     l_id_tipoventa number:=6;---configurar
     l_id_tipoasiento varchar2(5);--:='RV';
     
     l_id_parent number;
     l_id_tiponota varchar2(5);
     l_id_comprobante_ref varchar2(5);
     l_serie_ref varchar2(10);
     l_numero_ref varchar2(20);
     
     l_id_venta number; 
     
     l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
     
     l_gravado varchar2(2);
     l_precio number(10,2);
     l_igv_item number(10,2);
     l_precio_base number(10,2);
     l_base number(10,2);
     l_importe number(10,2);
     l_contar integer;
     l_id_cliente_legal number;
     
     
     N_PRECIO_ME number(10,2);
     N_PRECIO_BASE_ME number(10,2); 
     N_PRECIO_ALM_ME number(10,2); 
     N_BASE_ME number(10,2); 
     N_IGV_ME number(10,2); 
     N_DESCUENTO_ME number(10,2);
     N_IMPORTE_ME number(10,2);
     
     N_IMPORTE number(10,2):=0;
     
     l_importe_me number(10,2);
     L_PRECIO_EVENTO NUMBER(10,2);
    
     begin
       l_id_tipoventa:=P_ID_TIPOVENTA;
       l_id_moneda:=P_ID_MONEDA; --SOLES
       l_id_moneda_tc:=9;
       select FC_IGV(CURRENT_DATE ) into l_igv from dual;
       
       --select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
       l_tc:=P_TC;
     
      if l_tc is null then
          l_tc:=0;
      end if;
      
      N_IMPORTE:= P_IMPORTE;

      N_IMPORTE_ME:=P_IMPORTE_ME;

      
      if P_ID_COMPROBANTE='01' then
        l_id_cliente_legal:=P_ID_CLIENTE;
      else
        l_id_cliente_legal:=null;
      end if;
      
      
        SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= P_ID_COMPROBANTE;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
        select nombre,ID_TIPOTRANSACCION,ID_TIPOIGV,IMPORTE into l_nom_dinamica,l_id_tipo_transaccion,l_id_tipoigv,L_PRECIO_EVENTO from conta_dinamica where id_dinamica=P_ID_DINAMICA;
        
        IF P_ID_CLIENTE IS NOT NULL AND P_ID_COMPROBANTE = '01' THEN 
            l_glosa:=substr('Venta Online '||l_nom_dinamica,0,80);
        ELSIF P_ID_CLIENTE IS NULL AND P_ID_COMPROBANTE = '03' THEN 
            l_glosa:=substr('Venta Online '||l_nom_dinamica,0,80);
        ELSE
            l_glosa:=substr(l_nom_dinamica,0,80);
            L_USER := P_ID_CLIENTE;
        END IF;
      
      SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
      SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_DEPTO=P_ID_DEPTO;
    
      
      PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
      
      
      l_id_parent:=null;
      l_id_tiponota:=null;
      l_id_comprobante_ref:=null;
      l_serie_ref:=null;
      l_numero_ref:=null;
      
      select count(1) into l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      if l_contar>0 then
          select GRAVADO into l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      end if;
      
        --crear venta
      INSERT INTO VENTA(
              ID_PERSONA,
              ID_CLIENTE,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_ANHO,
              ID_MES,
              ID_COMPROBANTE, 
              ID_IGV, 
              ID_MONEDA, 
              ID_LEYENDA,
              TIPOCAMBIO,
              SERIE, 
              NUMERO, 
              FECHA, 
              ESTADO,
              GLOSA,
              ID_TIPOTRANSACCION,
              ID_CREDITO,
              ID_VOUCHER,
              ID_CLIENTE_LEGAL,
              ID_TIPOVENTA,
              ID_PARENT,
              ID_TIPONOTA,
              ID_COMPROBANTE_REF,
              SERIE_REF,
              NUMERO_REF
          )VALUES(
              L_USER,
              P_ID_PERSONA,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_ANHO,
              P_ID_MES,
              P_ID_COMPROBANTE,
              l_igv,
              l_id_moneda,--SOLES
              '1000',
              l_tc,
              l_serie,--SERIE
              l_numero,--NRO
              SYSDATE,
              1,
              l_glosa,
              l_id_tipo_transaccion,
              l_id_credito,
              l_id_voucher,
              l_id_cliente_legal,
              l_id_tipoventa,--P_ID_TIPOVENTA
              l_id_parent,
              l_id_tiponota,
              l_id_comprobante_ref,
              l_serie_ref,
              l_numero_ref
      )returning ID_VENTA INTO l_id_venta;
      
      
      l_igv:=l_igv/100;
    
      --SOLES
      --l_precio:=N_IMPORTE;
      l_precio := L_PRECIO_EVENTO;
      l_precio_base:=l_precio;
      l_importe:=N_IMPORTE;
      l_base:=l_importe;
      l_igv_item:=0;
      if l_gravado in('G') then
          l_precio_base:=round(l_precio/(1+l_igv),2);
          l_base:=round(l_importe/(1+l_igv),2);
          l_igv_item:=l_importe-l_base;
      end if;
      
      --DOALES
      IF l_id_moneda=9 then
        N_PRECIO_ME:=N_IMPORTE_ME;
        N_PRECIO_BASE_ME:=N_PRECIO_ME;
        l_importe_me:=N_PRECIO_ME;
        N_BASE_ME:=l_importe_me;
        N_IGV_ME:=0;
        if l_gravado in('G') then
            N_PRECIO_BASE_ME:=round(N_PRECIO_ME/(1+l_igv),2);
            N_BASE_ME:=round(l_importe_me/(1+l_igv),2);
            N_IGV_ME:=l_importe_me-N_BASE_ME;
        end if;
      end if;
      
      
        
            
      INSERT INTO VENTA_DETALLE(
          ID_VDETALLE,
          ID_VENTA,
          ID_TIPOIGV,
          DETALLE, 
          CANTIDAD, 
          PRECIO, 
          PRECIO_BASE, 
          BASE, 
          IGV, 
          DESCUENTO, 
          DC,
          IMPORTE, 
          PRECIO_ME, 
          PRECIO_BASE_ME, 
          PRECIO_ALM_ME, 
          BASE_ME, 
          IGV_ME, 
          DESCUENTO_ME, 
          IMPORTE_ME,
          ID_DINAMICA
        )values(
          1,
          l_id_venta,
          l_id_tipoigv,
          l_nom_dinamica ,
          1,
          l_precio,
          l_precio_base,
          l_base,
          l_igv_item,
          0,
          'D',
          N_IMPORTE,
          N_PRECIO_ME, 
          N_PRECIO_BASE_ME, 
          N_PRECIO_ALM_ME, 
          N_BASE_ME, 
          N_IGV_ME, 
          N_DESCUENTO_ME, 
          N_IMPORTE_ME,
          P_ID_DINAMICA
        ); 
        
           
        
        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);
        
        --GENERAR ASIENTO
        PKG_SALES.SP_GENERAR_ASIENTO(l_id_venta,l_error,l_msgerror);
        IF l_error > 0 THEN
            l_msgerror := l_msgerror;
            GOTO salida_ventaalumniddni;
        END IF;
        
        IF P_ID_ENTIDAD = 7124 THEN
            PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,P_ID_COMPROBANTE);
          --l_error:=0;
        END IF;
       
       <<salida_ventaalumniddni>>
       P_VENTAS:=TO_CHAR(l_id_venta);
       IF l_id_moneda = 9 THEN
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE_ME);
       ELSE
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE);
       END IF;
       
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
     end SP_VENTAS_ALUMNOIDDNI;
     
     PROCEDURE SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD NUMBER,
                              P_ID_DEPTO VARCHAR2,
                              P_ID_ANHO NUMBER,
                              P_ID_MES NUMBER,
                              P_ID_MEDIOPAGO VARCHAR2,
                              P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,
                              P_VENTAS  VARCHAR2,
                              P_IMP_VENTAS VARCHAR2,
                              P_TIPO VARCHAR2,
                              P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,
                              P_ID_DINAMICA NUMBER,
                              P_ID_TIPOTARJETA NUMBER,
                              P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,
                              P_FECHA_OP DATE,
                              P_IMPORTE NUMBER,
                              P_IMPORTE_TARJETA NUMBER,
                              P_IMPORTE_TRANS NUMBER,
                              P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,
                              P_GLOSA VARCHAR2,
                              P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,
                              P_ID_TIPOASIENTO VARCHAR2,
                              P_ID_CANAL number,
                              P_ERROR out NUMBER,
                              P_MSGERROR out VARCHAR2) IS
                              
        l_serie varchar2(4);
        l_numero varchar2(8);
        l_deposito number:=0;
        l_estado varchar2(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher number :=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_correlativo number :=0;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_automatico varchar2(2);
        l_contar number;
        l_fecha date;
        --l_id_ctabancaria number;
        l_importedet number(10,2);
        l_importeasiento number(10,2);
        l_importeasiento_banco number(10,2);
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(100);
        l_id_ddetalle NUMBER;
        l_tipo_tarjeta varchar2(30);
        l_cod_dinamica_ant varchar2(5);
        L_ID_DOCUMENTO number;
        L_ID_TIPODEPOSITO NUMBER := 1; --DEPOSITOS ALUMNOS
        L_ID_DINAMICA NUMBER;
        n_importe_asiento number(10,2):=0;
        L_IMPORTE_DEP number(10,2):=0;
        L_BANCO VARCHAR2(20);
        BEGIN
        
            IF P_ID_TIPOTRANSACCION = 11 THEN
                L_ID_TIPODEPOSITO := 5;
            END IF;
            
            select sysdate into l_fecha from dual;
            
            IF P_ID_MEDIOPAGO = '008' THEN
                L_IMPORTE_DEP := P_IMPORTE;
            ELSE
                L_IMPORTE_DEP := P_IMPORTE_TARJETA;
            END IF;
            
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
            
            SELECT ID_DOCUMENTO into L_ID_DOCUMENTO FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_COMPROBANTE = l_id_comprobante;
            
            --obtiene numero y serie y actualiza correlativo
            --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
            PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(L_ID_DOCUMENTO,l_serie,l_correlativo);
          
            if l_correlativo=0 or l_correlativo is null then
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||')';
            else
                --obtener voucher
                select count(1) into l_contar from CONTA_VOUCHER_CONFIG  
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                and ID_ANHO=P_ID_ANHO
                and id_tipovoucher = 5; 
          
                if l_contar>0  then
                    select AUTOMATICO into l_automatico from CONTA_VOUCHER_CONFIG  
                    where ID_ENTIDAD=P_ID_ENTIDAD 
                    and ID_DEPTO= P_ID_DEPTO
                    and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                    and ID_ANHO=P_ID_ANHO
                    and id_tipovoucher = 5; -- 5= tipo voucher ingresos   

                    if l_automatico='S' then
                        PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,P_ID_TIPOASIENTO,5,null, 'S', P_ID_PERSONA, l_id_voucher);
                    end if;
                end if;
            end if;
      
            if l_id_voucher=0 then
                l_error:=2; --no existe voucher
                l_msgerror:='Depósito: No existe voucher '||P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-'||P_ID_TIPOASIENTO||'-'||P_ID_ANHO||''||l_automatico;
                goto salida_depvisaalumiddni;
            end if;
      
     
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        if l_contar>0 then
           SELECT NOMBRE INTO l_tipo_tarjeta FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        end if;
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
        ON A.ID_BANCO = B.ID_BANCO
        WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        IF l_contar > 0 THEN
            SELECT B.SIGLA INTO L_BANCO FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
            ON A.ID_BANCO = B.ID_BANCO
            WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        END IF;
        
        SELECT 
                (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Visa Oline:'||l_serie||'-'||to_number(l_numero)||'-'||l_tipo_tarjeta||'-Oper-'||P_OPERACION||'-'||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                ELSE 
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||': Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||SUBSTR(P_GLOSA,1,20)
                END )
                 as GLOSA INTO L_GLOSA
        FROM DUAL;
        
        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_VALE,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_TIPODEPOSITO,
          ID_CANAL
        )VALUES( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          l_id_voucher, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_VALE,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          l_serie,
          l_numero,
          l_fecha,
          L_IMPORTE_DEP, 
          P_IMPORTE_ME,
          P_TIPOCAMBIO,
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          l_estado,
          P_FECHA_OP,
          P_OPERACION,
          L_ID_TIPODEPOSITO,
          P_ID_CANAL
        ) RETURNING ID_DEPOSITO INTO l_deposito;
        
        
        if coalesce(length(P_VENTAS),0)>0 then
         
          PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE(l_deposito,P_VENTAS,P_IMP_VENTAS,P_TIPO,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
        end if;
        n_importe_asiento:=P_IMPORTE_TARJETA;
        --if P_ID_MONEDA=9 then
          --n_importe_asiento:=P_IMPORTE_TARJETA*P_TIPOCAMBIO;
          --n_importe_asiento:=P_IMPORTE_ME;
        --end if;
      
        --PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,0,n_importe_asiento,0,L_GLOSA,l_error,l_msgerror);
        
        IF P_ID_MEDIOPAGO = '008' THEN
            PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP,0,0,L_GLOSA,l_error,l_msgerror);
        ELSE
            PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP,0,L_GLOSA,l_error,l_msgerror);
        END IF;
 
        <<salida_depvisaalumiddni>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_ALUMNOIDDNI;
  
   PROCEDURE SP_DEPOSITO_ALUMNO_VISA_ACAD(	
        P_ID_ORDEN 	    NUMBER,	
        P_IMPORTE   		    NUMBER,	
        P_IP   			      VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2        
        )
        IS
        l_id_anho number;
        l_id_mes number;
        l_id_mediopago varchar2(5):='006';
        l_id_user number:=2;                  --cajero Visa Net Online C/E
        l_ventas varchar2(100):=null;
        l_ventas_imp varchar2(100):=null;
        l_tipo varchar2(100):='V';
        l_id_tipotransaccion number;---POR DEFINIR
        l_contar number:=0;
        l_id_moneda number:=7;
        l_fecha date;
        l_importe_me number:=0;
        l_tipocambio number:=0;
        l_glosa varchar2(200);
        l_id_tipoasiento varchar2(5) := 'MB';

        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_tipovoucher number := 5;
        l_id_tipotarjeta number;
        l_id_dinamica_dep number;
        l_serie_numero varchar2(30);
        L_TOTAL NUMBER;
        L_ID_DINAMICA NUMBER;
        
       P_ID_PERSONA 	    NUMBER;
       P_OPERACION		    VARCHAR2(100);
       P_ID_ENTIDAD       NUMBER;
       P_ID_DEPTO         VARCHAR2(10);
       P_ID_DINAMICA  	NUMBER;
       P_COD_TARJETA   VARCHAR2(10);
       P_ID_ORIGEN        VARCHAR2(500);
       P_ID_CLIENTE  NUMBER;
       P_ID_COMPROBANTE VARCHAR2(20);
       P_ID_TIPOVENTA NUMBER;
       
       n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal number;
     
        BEGIN
        
           select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         id_canal
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9  and coalesce(cos_denominacional,0)>0
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
        
          
            SELECT  to_number(to_char(sysdate,'YYYY')),  to_number(to_char(sysdate,'MM')), sysdate, 'DEPOSITO CON VISA'
            INTO l_id_anho, l_id_mes, l_fecha, l_glosa
            FROM dual;  
          
            --voucher de venta
            SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = l_id_anho AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
            IF l_contar < 1 THEN
                l_error:=1;
                l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
                GOTO salida_depalumniddni;
            ELSIF l_contar > 1 THEN
                l_error:=1;
                l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
                GOTO salida_depalumniddni;
            END IF;
          
            SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = l_id_anho
            AND ID_TIPOVOUCHER = l_id_tipovoucher;

            IF P_ID_COMPROBANTE<>'00' THEN
                --dbms_output.put_line(P_ID_PERSONA||'|'||P_OPERACION||'|'||P_ID_ENTIDAD||'|'||P_ID_DEPTO||'|'||l_id_anho||'|'||l_id_mes||'|'||P_IMPORTE||'|'||P_IP||'|'||P_ID_ORIGEN||'|'||P_ID_CLIENTE||'|'||P_ID_COMPROBANTE||'|'||P_ID_TIPOVENTA||'|'||l_id_moneda);
                PKG_PAY.SP_VENTAS_ACADEMICAS(P_ID_PERSONA,P_OPERACION,P_ID_ENTIDAD,P_ID_DEPTO,l_id_anho,l_id_mes,P_IMPORTE,P_IP,P_ID_ORIGEN,P_ID_CLIENTE,P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,l_id_moneda,l_ventas,l_ventas_imp,l_error,l_msgerror);
          
                if coalesce(length(l_ventas),0)>0 then
                    select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
                end if;
                --PARA LA DINAMICA DE DEPOSITO OBTEEMOS LA PRIMERA
                SELECT 
                D.ID_DINAMICA INTO L_ID_DINAMICA
                FROM TRAMITE_REGISTRO A JOIN TRAMITE_DETALLE B ON A.ID_REGISTRO = B.ID_REGISTRO
                JOIN TRAMITE_CATALOGO C ON B.ID_TRAMITE = C.ID_TRAMITE
                JOIN CONTA_DINAMICA D ON D.ID_DINAMICA = C.ID_DINAMICA
                WHERE A.ID_REGISTRO = P_ID_ORIGEN
                AND ROWNUM = 1;
                SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=L_ID_DINAMICA;
            ELSE
                l_id_dinamica_dep:=P_ID_DINAMICA;
            END IF;
        
            SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
            if l_contar>0 then
                SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
            end if;
        
            SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;
        
            PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(P_ID_ENTIDAD,P_ID_DEPTO,l_id_anho,l_id_mes,l_id_mediopago,l_id_user,P_ID_PERSONA,l_ventas,l_ventas_imp,l_tipo,l_id_tipotransaccion,
                l_id_moneda,l_id_dinamica_dep,l_id_tipotarjeta,null,P_OPERACION,l_fecha,0,n_importe,0,n_importe_me,l_tipocambio,l_glosa,null,null,l_id_tipoasiento,l_id_canal,l_error,l_msgerror
            );
            
            IF l_error = 0 THEN
                SELECT SUM(IMPORTE) INTO L_TOTAL FROM TRAMITE_DETALLE WHERE ID_REGISTRO = P_ID_ORIGEN;
                UPDATE TRAMITE_REGISTRO SET ID_VENTA = l_ventas,TOTAL = L_TOTAL, ESTADO = 1 WHERE ID_REGISTRO = P_ID_ORIGEN;

                
            END IF;                       
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
    END SP_DEPOSITO_ALUMNO_VISA_ACAD;
    
    PROCEDURE SP_VENTAS_ACADEMICAS(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_REGISTRO  	VARCHAR2,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     ) is
     l_error number:=0;
     l_msgerror varchar2(200):='';
     
     L_USER NUMBER :=4; --MATRICULADOR ONLINE
     l_igv number(10,2);
     l_tc NUMBER(10,3);
     l_id_moneda number;
     l_id_moneda_tc number;
     l_id_documento NUMBER;
     
     l_serie varchar2(5);
     l_correlativo number;
     l_numero varchar2(15);
     l_glosa varchar2(200):='';
     l_nom_dinamica varchar(150);
     l_id_tipo_transaccion number;
     l_id_credito number:=1;
     l_id_tipovoucher number := 1;
     l_id_persona_v number;
     l_id_voucher NUMBER;
     l_id_tipoventa number:=6;---configurar
     l_id_tipoasiento varchar2(5);--:='RV';
     
     l_id_parent number;
     l_id_tiponota varchar2(5);
     l_id_comprobante_ref varchar2(5);
     l_serie_ref varchar2(10);
     l_numero_ref varchar2(20);
     
     l_id_venta number; 
     
     l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
     
     l_gravado varchar2(2);
     l_precio number(10,2);
     l_igv_item number(10,2);
     l_precio_base number(10,2);
     l_base number(10,2);
     l_importe number(10,2);
     l_contar integer;
     l_id_cliente_legal number;
     l_imp number(10,2);
     L_ID_DINAMICA NUMBER;
     L_ID_TRAMITE_DETALLE NUMBER;
     L_ID_TRAMITE NUMBER;
     L_PASO NUMBER;
     
     N_PRECIO_ME number(10,2);
     N_PRECIO_BASE_ME number(10,2); 
     N_PRECIO_ALM_ME number(10,2); 
     N_BASE_ME number(10,2); 
     N_IGV_ME number(10,2); 
     N_DESCUENTO_ME number(10,2);
     N_IMPORTE_ME number(10,2);
     
     L_IMPORTE_ME number(10,2);
    
    CURSOR C_TRAMITE IS	
    SELECT 
        B.ID_TRAMITE_DETALLE,B.ID_TRAMITE,D.ID_DINAMICA,D.NOMBRE,B.IMPORTE,D.ID_TIPOIGV
    FROM TRAMITE_REGISTRO A JOIN TRAMITE_DETALLE B ON A.ID_REGISTRO = B.ID_REGISTRO
    JOIN TRAMITE_CATALOGO C ON B.ID_TRAMITE = C.ID_TRAMITE
    JOIN CONTA_DINAMICA D ON D.ID_DINAMICA = C.ID_DINAMICA
    WHERE A.ID_REGISTRO = to_number(P_ID_REGISTRO);
    
         BEGIN
   
            l_id_tipoventa:=P_ID_TIPOVENTA;
            l_id_moneda:=P_ID_MONEDA; --7; --SOLES
            l_id_moneda_tc:=9;
            select FC_IGV(CURRENT_DATE ) into l_igv from dual;
       
            --select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
            select cos_denominacional into l_tc from ELISEO.TIPO_CAMBIO
            where id_moneda=9 
            and  fecha =(
              select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9  and coalesce(cos_denominacional,0)>0
            );
     
            if l_tc is null then
                l_tc:=0;
            end if;
            
            IF l_id_moneda = 9 and  l_tc = 0 THEN
                l_error :=1;
                l_msgerror := 'Error: Actualice el Tipo de Cambio para hoy';
                GOTO salida_ventaalumniddni;
            END IF;
      
            if P_ID_COMPROBANTE='01' then
                l_id_cliente_legal:=P_ID_CLIENTE;
            else
                l_id_cliente_legal:=null;
            end if;
            
            SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO
            AND ID_COMPROBANTE= P_ID_COMPROBANTE;
              
            PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
        
            select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
            --select nombre,ID_TIPOTRANSACCION,ID_TIPOIGV into l_nom_dinamica,l_id_tipo_transaccion,l_id_tipoigv from conta_dinamica where id_dinamica=P_ID_DINAMICA;
        
            l_glosa:='Venta Online Tramites Academicos';
      
            SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = P_ID_ANHO AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
            SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
            WHERE ID_ENTIDAD=P_ID_ENTIDAD  AND ID_DEPTO=P_ID_DEPTO;
      
            PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
      
            l_id_parent:=null;
            l_id_tiponota:=null;
            l_id_comprobante_ref:=null;
            l_serie_ref:=null;
            l_numero_ref:=null;
      
            
      
            --crear venta
            INSERT INTO VENTA (ID_PERSONA,ID_CLIENTE,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_COMPROBANTE,ID_IGV,ID_MONEDA,ID_LEYENDA,TIPOCAMBIO,SERIE,NUMERO,FECHA,ESTADO,GLOSA,
                                ID_TIPOTRANSACCION,ID_CREDITO,ID_VOUCHER,ID_CLIENTE_LEGAL,ID_TIPOVENTA,ID_PARENT,ID_TIPONOTA,ID_COMPROBANTE_REF,SERIE_REF,NUMERO_REF)
            VALUES (L_USER,P_ID_PERSONA,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_COMPROBANTE,l_igv,l_id_moneda,'1000',l_tc,l_serie,l_numero,SYSDATE,1,l_glosa,
             l_id_tipo_transaccion,l_id_credito,l_id_voucher,l_id_cliente_legal,l_id_tipoventa, l_id_parent,l_id_tiponota,l_id_comprobante_ref,l_serie_ref,l_numero_ref)
            RETURNING ID_VENTA INTO l_id_venta;      
      
            l_igv:=l_igv/100;
            
            OPEN C_TRAMITE;
                FETCH C_TRAMITE INTO L_ID_TRAMITE_DETALLE,L_ID_TRAMITE,L_ID_DINAMICA,l_nom_dinamica,l_imp,l_id_tipoigv;
                WHILE C_TRAMITE%FOUND LOOP
                
                    select count(1) into l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                    if l_contar>0 then
                        select GRAVADO into l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                    end if;
                    
                    if l_id_moneda = 9 then
                        l_precio:=l_imp*l_tc;
                    else
                        l_precio:=l_imp;
                    end if;
                    
                    
                    l_precio_base:=l_precio;
                    l_importe:=l_precio;
                    l_base:=l_importe;
                    l_igv_item:=0;
                    if l_gravado in('G') then
                        l_precio_base:=round(l_precio/(1+l_igv),2);
                        l_base:=round(l_importe/(1+l_igv),2);
                        l_igv_item:=l_importe-l_base;
                    end if;
                    
                    --DOLARES
                    IF l_id_moneda=9 then
                        N_PRECIO_ME:=l_imp;
                        N_PRECIO_BASE_ME:=N_PRECIO_ME;
                        L_IMPORTE_ME:=N_PRECIO_ME;
                        N_BASE_ME:=L_IMPORTE_ME;
                        N_IGV_ME:=0;
                        if l_gravado in('G') then
                            N_PRECIO_BASE_ME:=round(N_PRECIO_ME/(1+l_igv),2);
                            N_BASE_ME:=round(L_IMPORTE_ME/(1+l_igv),2);
                            N_IGV_ME:=L_IMPORTE_ME-N_BASE_ME;
                        end if;
                    end if;
                    
                    INSERT INTO VENTA_DETALLE(ID_VDETALLE,ID_VENTA,ID_TIPOIGV,DETALLE,CANTIDAD,PRECIO,PRECIO_BASE,BASE,IGV,DESCUENTO,DC,IMPORTE,
                    PRECIO_ME,PRECIO_BASE_ME,PRECIO_ALM_ME,BASE_ME,IGV_ME,DESCUENTO_ME,IMPORTE_ME,ID_DINAMICA
                    )VALUES(1,l_id_venta,l_id_tipoigv,l_nom_dinamica,1,l_precio,l_precio_base,l_base,l_igv_item,0,'D',l_importe,
                    N_PRECIO_ME,N_PRECIO_BASE_ME,0,N_BASE_ME,N_IGV_ME,0,L_IMPORTE_ME,L_ID_DINAMICA);
                    
                    --SELECT ID_TRAMITE_PASOS INTO L_ID_TRAMITE_PASOS  FROM TRAMITE_PASOS WHERE ID_TRAMITE = L_ID_TRAMITE AND ORDEN = 1; --ORRDE = 1 INDICA EL 1ER PASO
                    --ORDEN 1 DEL FLUJO INDICA EL FLUJO BASE Y EL ORRDEN = 1 INDICA EL 1ER PASO 
                    SELECT ID_PASO INTO L_PASO FROM TRAMITE_FLUJO A JOIN TRAMITE_FLUJO_PASO B ON A.ID_FLUJO = B.ID_FLUJO WHERE A.ID_TRAMITE = L_ID_TRAMITE AND A.ORDEN = 1 AND B.ORDEN = 1;
                    
                    INSERT INTO TRAMITE_PROCESO(ID_TRAMITE_DETALLE,ID_PASO,ID_USER,FECHA) VALUES(L_ID_TRAMITE_DETALLE,L_PASO,P_ID_PERSONA,SYSDATE);
                    
                    UPDATE TRAMITE_DETALLE SET ID_PASO_ACTUAL = L_PASO WHERE ID_TRAMITE_DETALLE =  L_ID_TRAMITE_DETALLE;
                    
                    FETCH C_TRAMITE INTO L_ID_TRAMITE_DETALLE,L_ID_TRAMITE,L_ID_DINAMICA,l_nom_dinamica,l_imp,l_id_tipoigv;
                END LOOP;
            CLOSE C_TRAMITE;
        
            PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);
        
            --GENERAR ASIENTO
            PKG_SALES.SP_GENERAR_ASIENTO(l_id_venta,l_error,l_msgerror);
            IF l_error > 0 THEN
                l_msgerror := l_msgerror;
                GOTO salida_ventaalumniddni;
            END IF;
        
            IF P_ID_ENTIDAD = 7124 THEN
                PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,P_ID_COMPROBANTE);
              --l_error:=0;
            END IF;
       
       <<salida_ventaalumniddni>>
       P_VENTAS:=TO_CHAR(l_id_venta);
       P_VENTAS_IMP:=TO_CHAR(P_IMPORTE);
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
    END SP_VENTAS_ACADEMICAS;
    
     PROCEDURE SP_VALIDA_DEPOSITO(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_COD_TRANSACCION VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_ID_PERSONA NUMBER,
        P_ID_DINAMICA OUT NUMBER,
        P_GLOSA OUT VARCHAR2,
        P_ERROR OUT NUMBER,
        P_MSGERROR out varchar2
        )
    IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_tipoasiento varchar2(5) := 'MB';
        l_id_tipovoucher number := 5;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_serie varchar2(4);
        l_correlativo number :=0;
        l_contar number:=0;
        
        L_ID_TIPOCOMPROBANTET VARCHAR2(4) := '99'; --TRANSFERENCIAS DE VENTAS
        L_ID_TIPOASIENTOT VARCHAR2(5):='RV';
        L_ID_TIPOVOUCHERT NUMBER := 7;
        l_id_dinamica number:=0;
        l_glosa varchar2(150);
       
    BEGIN
        
        --valida transacción
        
        SELECT count(1) into l_contar  FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 14
        AND C.CODIGO = P_COD_TRANSACCION
        AND A.ACTIVO = 'S';
      
        
        if l_contar=0 then
          l_error:=1;
          l_msgerror:='Alto: No esta configurado tipo de transacción';
          GOTO salida_val;
        else
          if l_contar>1 then
            l_error:=1;
            l_msgerror:='Alto: Hay mas de un tipo de transacción';
            GOTO salida_val;
          end if;
        end if;
        
        SELECT a.id_dinamica,a.nombre into l_id_dinamica,l_glosa  
        FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 14
        AND C.CODIGO = P_COD_TRANSACCION
        AND A.ACTIVO = 'S';
        
        
        select count(1) into l_contar from CONTA_DINAMICA_ASIENTO WHERE ID_DINAMICA=l_id_dinamica;
        
        IF l_contar<=1 THEN
            l_error:=1;
            l_msgerror:='Alto: Falta configurar dinámica asiento  ('||TO_CHAR(l_id_dinamica)||')';
            GOTO salida_val;
        END IF;
        
      --valida vouche
      
      SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
      if l_contar < 1 then
          l_error:=1;
          l_msgerror:='Alto: No existe tipo de Asiento (RV) ';
          GOTO salida_val;
      elsif l_contar > 1 then
          l_error:=1;
          l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||to_char(P_ID_ANHO);
          GOTO salida_val;
      end if;
      
      SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
    
      
    
      
      SELECT  count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '14'--modulo tesoreria
      AND ID_ANHO = P_ID_ANHO
      and ID_TIPOASIENTO=l_id_tipoasiento
      AND AUTOMATICO='S'
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
              
      if l_contar < 1 then
          l_error:=1;
          l_msgerror:='Alto: No existe la configuración de vouchers para los depositos, del periodo '||to_char(P_ID_ANHO);
          GOTO salida_val;
      elsif l_contar > 1 then
          l_error:=1;
          l_msgerror:='Alto: Existe más de una configuración de vouchers para los Depositos, del periodo '||to_char(P_ID_ANHO);
          GOTO salida_val;
      end if;
      
      --serie y numero
      
      /*select count(*) into l_contar 
      from CONTA_DOCUMENTO_IP a, CONTA_DOCUMENTO_IP_USER b, CONTA_DOCUMENTO c
      where a.ID_DOCIP=b.ID_DOCIP
      and a.id_documento=c.id_documento
      and b.id=P_ID_PERSONA
      and c.ID_ENTIDAD=P_ID_ENTIDAD
      and c.id_comprobante=l_id_comprobante;*/
      
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_COMPROBANTE = l_id_comprobante;
      
      if l_contar=0 then
          l_error:=1;
          l_msgerror:='Alto: No existe serie y número de documento ('||l_id_comprobante||')';
          GOTO salida_val;
      end if;
      
      
      
      
      IF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '1' THEN
          L_ID_TIPOASIENTOT := 'RV';
      ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '5' THEN
          L_ID_TIPOASIENTOT := 'RVJ';
      ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '6' THEN
          L_ID_TIPOASIENTOT := 'RVT';
      END IF;

      --transferencia voucher
      SELECT   COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOASIENTO = L_ID_TIPOASIENTOT
      AND AUTOMATICO = 'S'
      AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHERT;
      
      IF l_contar < 1 THEN
          l_error:=1;
          l_msgerror:='Alto: No existe la configuración de vouchers para las Transf., del periodo '||TO_CHAR(P_ID_ANHO)||' - '||P_ID_ENTIDAD||' - '||P_ID_DEPTO||' - '||L_ID_TIPOASIENTOT||' - '||L_ID_TIPOVOUCHERT;                
          GOTO salida_val;
      ELSIF l_contar > 1 THEN
          L_ERROR:=1;
          l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||TO_CHAR(P_ID_ANHO);
          GOTO salida_val;
      END IF;
            
      --valida se esta asignado contador
      SELECT COUNT(1) INTO l_contar FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO;
      
      IF l_contar = 0 THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto: Falta Asignar Contador - Sede por Departamento';
          GOTO salida_val;
      END IF;
      
     --VALIDA PARA ANTICIPOS EL COMPROBANTE SE DEFINE FIJO POR DEPTO
          SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_COMPROBANTE = L_ID_TIPOCOMPROBANTET;
          
          IF l_contar = 0 THEN
              l_error:=1; --no existe serie y numero del documento
              l_msgerror:='Alto: Falta configurar el Comprobante de Transferencia';
              GOTO salida_val;
          END IF;
      --VALIDA ASIENTO CONTABLE CONFIGURADO PARA ANTICIPOS
            SELECT COUNT(1) INTO l_contar FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
            ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
            JOIN TIPO_GRUPO_CONTA C
            ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
            AND A.ID_DEPTO = P_ID_DEPTO
            AND A.ID_ANHO = P_ID_ANHO
            AND A.ID_MODULO = 13
            AND C.CODIGO = 'AN' --ANTICIPOS
            AND A.ACTIVO = 'S';
            IF l_contar = 0 THEN
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Alto: Falta configurar el asiento de anticipos';
                GOTO salida_val;
                if l_contar>1 then
                  l_error:=1;
                  l_msgerror:='Alto: Hay mas de un asiento de anticipos';
                  GOTO salida_val;
                end if;
            END IF;
         
       <<salida_val>>
       P_ID_DINAMICA:=l_id_dinamica;
       P_GLOSA:=l_glosa; 
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
       
      
    END SP_VALIDA_DEPOSITO;
    
    PROCEDURE SP_VALIDA_DEP_ALUMNOIDDNI(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_ID_DINAMICA NUMBER,
        P_ID_COMPROBANTE VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_ID_PERSONA NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR out varchar2
        ) is
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        l_id_tipoasiento varchar2(5) := 'MB';
        l_id_tipovoucher number := 5;
        l_serie varchar2(4);
        l_correlativo number :=0;
        l_contar number:=0;
        L_ID_TIPOASIENTOT VARCHAR2(5):='RV';
        l_id_dinamica_dep number :=0;
        l_id_tipovoucher_venta number := 1;
    begin
       
        if P_ID_COMPROBANTE='00' then
      
          select count(1) into l_contar from CONTA_DINAMICA_ASIENTO WHERE ID_DINAMICA=P_ID_DINAMICA;
          
          IF l_contar<=1 THEN
              l_error:=1;
              l_msgerror:='Alto: Falta configurar los asientos de la dinámica  ('||TO_CHAR(P_ID_DINAMICA)||')';
              GOTO salida_valalumiddni;
          END IF;
        else
          
          select count(1) into l_contar from CONTA_DINAMICA_ASIENTO WHERE ID_DINAMICA=P_ID_DINAMICA;
          
          IF l_contar<=1 THEN
              l_error:=1;
              l_msgerror:='Alto: Falta configurar los asientos de la dinámica  ('||TO_CHAR(P_ID_DINAMICA)||')';
              GOTO salida_valalumiddni;
          END IF;
          
          select id_parent into l_id_dinamica_dep from CONTA_DINAMICA  where id_dinamica=P_ID_DINAMICA;
          
          
          select count(1) into l_contar from CONTA_DINAMICA_ASIENTO WHERE ID_DINAMICA=l_id_dinamica_dep;
          
          IF l_contar<=1 THEN
              l_error:=1;
              l_msgerror:='Alto: Falta configurar los asientos de la dinámica depósito  ('||TO_CHAR(l_id_dinamica_dep)||')';
              GOTO salida_valalumiddni;
          END IF;
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = P_ID_ANHO
          AND ID_TIPOVOUCHER = l_id_tipovoucher_venta;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_valalumiddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(P_ID_ANHO);
              GOTO salida_valalumiddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = P_ID_ANHO
          AND ID_TIPOVOUCHER = l_id_tipovoucher_venta;
          
          SELECT   count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO =P_ID_DEPTO
          AND ID_MODULO = '13'--modulo ventas
          AND ID_ANHO = P_ID_ANHO
          and ID_TIPOASIENTO=l_id_tipoasiento
          AND AUTOMATICO='S'
          AND ID_TIPOVOUCHER = l_id_tipovoucher_venta;
                  
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe tipo de Asiento (RV) ';
              GOTO salida_valalumiddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||to_char(P_ID_ANHO);
              GOTO salida_valalumiddni;
          end if;
          
          
        end if;
        
      --valida vouche
      
      --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = P_ID_ANHO
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_valalumiddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(P_ID_ANHO);
              GOTO salida_valalumiddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = P_ID_ANHO
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
      
      
      SELECT  count(1) into l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '14'--modulo tesoreria
      AND ID_ANHO = P_ID_ANHO
      and ID_TIPOASIENTO=l_id_tipoasiento
      AND AUTOMATICO='S'
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
              
      if l_contar < 1 then
          l_error:=1;
          l_msgerror:='Alto: No existe la configuración de vouchers para los depósitos, en el periodo '||to_char(P_ID_ANHO);
          GOTO salida_valalumiddni;
      elsif l_contar > 1 then
          l_error:=1;
          l_msgerror:='Alto: Existe más de una configuración de vouchers para los depósitos, en el periodo '||to_char(P_ID_ANHO);
          GOTO salida_valalumiddni;
      end if;
      
     
      
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_COMPROBANTE = P_ID_COMPROBANTE;
      
      if l_contar=0 then
          l_error:=1;
          l_msgerror:='Alto: No esta configurado el documento para el tipo de comprobante: (FIN: '||P_ID_COMPROBANTE||')';
          GOTO salida_valalumiddni;
      ELSIF l_contar > 1 THEN
          L_ERROR:=1;
          l_msgerror:='Alto: Existe más de una configuración de documento para el tipo de comprobante: (FIN: '||P_ID_COMPROBANTE||')';
          GOTO salida_valalumiddni;
      END IF;
      
    
      
      --valida se esta asignado contador
      SELECT COUNT(1) INTO l_contar FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO;
      
     if l_contar = 0 then
          l_error:=1; 
          l_msgerror:='Alto: No existe asignado un contador para la entidad: ' || P_ID_ENTIDAD || ' y el departamento: ' || P_ID_DEPTO;
          GOTO salida_valalumiddni;
      end if;
      
       <<salida_valalumiddni>>
      
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
      
    end SP_VALIDA_DEP_ALUMNOIDDNI;
    PROCEDURE SP_DEPOSITO_ADMISION(	 
        P_ID_ORDEN NUMBER,	
        P_IMPORTE NUMBER,	
        P_IP VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2     
	   )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(100);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal number;
     L_CANTIDAD NUMBER(10,2):=1;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         id_canal
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_depalumniddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_depalumniddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
            
          

        if P_ID_COMPROBANTE<>'00' then
          PKG_PAY.SP_VENTAS_ALUMNOIDDNI(
                   P_ID_PERSONA,	
                   P_OPERACION,
                   P_ID_ENTIDAD,
                   P_ID_DEPTO,
                   l_id_anho ,
                   l_id_mes, 
                   n_importe,	
                   P_IP,
                   P_ID_DINAMICA,
                   P_ID_CLIENTE,
                   P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,
                   l_id_moneda,
                   l_tipocambio,
                   n_importe_me,
                   L_CANTIDAD,
                   l_ventas,
                   l_ventas_imp,
                   l_error,
                   l_msgerror
          );
          
          if coalesce(length(l_ventas),0)>0 then
            select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
          end if;
          
          SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;
        else
          l_id_dinamica_dep:=P_ID_DINAMICA;
        end if;
        
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;

        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              l_id_dinamica_dep,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              l_error,
                              l_msgerror
                            );
        
        --EJECUTA PROCEDIMIENTO DEL POSTULANTE
        CALEB.pcd_postulante_paso_pago(P_ID_ORIGEN);   
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
     end SP_DEPOSITO_ADMISION;
     PROCEDURE SP_DEPOSITO_DIVERSO(P_ID_ORDEN NUMBER,P_IMPORTE NUMBER,P_IP VARCHAR2,P_ID OUT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(100);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal number;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         id_canal
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_depalumniddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_depalumniddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;

        PKG_PAY.SP_CREAR_DEPOSITO_DIVERSO(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              P_ID_DINAMICA,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              P_ID_ORIGEN,
                              l_error,
                              l_msgerror
                            );
                                      
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
    END SP_DEPOSITO_DIVERSO;
    PROCEDURE SP_CREAR_DEPOSITO_DIVERSO(
                              P_ID_ENTIDAD NUMBER,
                              P_ID_DEPTO VARCHAR2,
                              P_ID_ANHO NUMBER,
                              P_ID_MES NUMBER,
                              P_ID_MEDIOPAGO VARCHAR2,
                              P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,
                              P_VENTAS  VARCHAR2,
                              P_IMP_VENTAS VARCHAR2,
                              P_TIPO VARCHAR2,
                              P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,
                              P_ID_DINAMICA NUMBER,
                              P_ID_TIPOTARJETA NUMBER,
                              P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,
                              P_FECHA_OP DATE,
                              P_IMPORTE NUMBER,
                              P_IMPORTE_TARJETA NUMBER,
                              P_IMPORTE_TRANS NUMBER,
                              P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,
                              P_GLOSA VARCHAR2,
                              P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,
                              P_ID_TIPOASIENTO VARCHAR2,
                              P_ID_CANAL NUMBER,
                              P_ID_ORIGEN NUMBER,
                              P_ERROR out NUMBER,
                              P_MSGERROR out VARCHAR2) IS
                              
        l_serie varchar2(4);
        l_numero varchar2(8);
        l_deposito number:=0;
        l_estado varchar2(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher number :=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_correlativo number :=0;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_automatico varchar2(2);
        l_contar number;
        l_fecha date;
        --l_id_ctabancaria number;
        l_importedet number(10,2);
        l_importeasiento number(10,2);
        l_importeasiento_banco number(10,2);
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(100);
        l_id_ddetalle NUMBER;
        l_tipo_tarjeta varchar2(30);
        l_cod_dinamica_ant varchar2(5);
        L_ID_DOCUMENTO number;
        L_ID_TIPODEPOSITO NUMBER := 5; --DEPOSITOS CLIENTES
        L_ID_DINAMICA NUMBER;
        n_importe_asiento number(10,2):=0;
        L_IMPORTE_DEP number(10,2):=0;
        L_BANCO VARCHAR2(20);
        BEGIN
            select sysdate into l_fecha from dual;
            
            IF P_ID_MEDIOPAGO = '008' THEN
                L_IMPORTE_DEP := P_IMPORTE;
            ELSE
                L_IMPORTE_DEP := P_IMPORTE_TARJETA;
            END IF;
            
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
            
            SELECT ID_DOCUMENTO into L_ID_DOCUMENTO FROM FIN_DOCUMENTO_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_COMPROBANTE = l_id_comprobante;
            
            --obtiene numero y serie y actualiza correlativo
            --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
            PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(L_ID_DOCUMENTO,l_serie,l_correlativo);
          
            if l_correlativo=0 or l_correlativo is null then
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||')';
            else
                --obtener voucher
                select count(1) into l_contar from CONTA_VOUCHER_CONFIG  
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                and ID_ANHO=P_ID_ANHO
                and id_tipovoucher = 5; 
          
                if l_contar>0  then
                    select AUTOMATICO into l_automatico from CONTA_VOUCHER_CONFIG  
                    where ID_ENTIDAD=P_ID_ENTIDAD 
                    and ID_DEPTO= P_ID_DEPTO
                    and ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                    and ID_ANHO=P_ID_ANHO
                    and id_tipovoucher = 5; -- 5= tipo voucher ingresos   

                    if l_automatico='S' then
                        PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,P_ID_TIPOASIENTO,5,null, 'S', P_ID_PERSONA, l_id_voucher);
                    end if;
                end if;
            end if;
      
            if l_id_voucher=0 then
                l_error:=2; --no existe voucher
                l_msgerror:='Depósito: No existe voucher '||P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-'||P_ID_TIPOASIENTO||'-'||P_ID_ANHO||''||l_automatico;
                goto salida_depvisaalumiddni;
            end if;
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        if l_contar>0 then
           SELECT NOMBRE INTO l_tipo_tarjeta FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        end if;
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
        ON A.ID_BANCO = B.ID_BANCO
        WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        IF l_contar > 0 THEN
            SELECT B.SIGLA INTO L_BANCO FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
            ON A.ID_BANCO = B.ID_BANCO
            WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        END IF;
        
        SELECT 
                (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Visa Oline:'||l_serie||'-'||to_number(l_numero)||'-'||l_tipo_tarjeta||'-Oper-'||P_OPERACION||'-'||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                ELSE 
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||': Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||SUBSTR(P_GLOSA,1,20)
                END )
                 as GLOSA INTO L_GLOSA
        FROM DUAL;
        
        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_VALE,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_TIPODEPOSITO,
          ID_CANAL,
          ID_ORIGEN
        )VALUES( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          l_id_voucher, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_VALE,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          l_serie,
          l_numero,
          l_fecha,
          L_IMPORTE_DEP, 
          P_IMPORTE_ME,
          P_TIPOCAMBIO,
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          l_estado,
          P_FECHA_OP,
          P_OPERACION,
          L_ID_TIPODEPOSITO,
          P_ID_CANAL,
          P_ID_ORIGEN
        ) RETURNING ID_DEPOSITO INTO l_deposito;
        
        
        if coalesce(length(P_VENTAS),0)>0 then
          PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE(l_deposito,P_VENTAS,P_IMP_VENTAS,P_TIPO,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
        end if;
        
        IF P_ID_MEDIOPAGO = '008' THEN
            PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP,0,0,L_GLOSA,l_error,l_msgerror);
        ELSE
            PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP,0,L_GLOSA,l_error,l_msgerror);
        END IF;
 
        <<salida_depvisaalumiddni>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_DEPOSITO_DIVERSO;
    PROCEDURE SP_DEPOSITO_MUSICA(	 
        P_ID_ORDEN NUMBER,	
        P_IMPORTE NUMBER,	
        P_IP VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2     
	   )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(100);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal number;
     L_CANTIDAD NUMBER(10,2):=1;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         id_canal
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        --and id_moneda_main = 7
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_depalumniddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_depalumniddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
            
          

        if P_ID_COMPROBANTE<>'00' then
          PKG_PAY.SP_VENTAS_ALUMNOIDDNI(
                   P_ID_PERSONA,	
                   P_OPERACION,
                   P_ID_ENTIDAD,
                   P_ID_DEPTO,
                   l_id_anho ,
                   l_id_mes, 
                   n_importe,	
                   P_IP,
                   P_ID_DINAMICA,
                   P_ID_CLIENTE,
                   P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,
                   l_id_moneda,
                   l_tipocambio,
                   n_importe_me,
                   L_CANTIDAD,
                   l_ventas,
                   l_ventas_imp,
                   l_error,
                   l_msgerror
          );
          
          if coalesce(length(l_ventas),0)>0 then
            select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
          end if;
          
          SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;
        else
          l_id_dinamica_dep:=P_ID_DINAMICA;
        end if;
        
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;

        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              l_id_dinamica_dep,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              l_error,
                              l_msgerror
                            );
        
        --EJECUTA PROCEDIMIENTO DEL POSTULANTE
        --CALEB.pcd_postulante_paso_pago(P_ID_ORIGEN);   
        INSERT INTO FIN_ALUMNO_MUSICA(ID_PERSONA,ID_VENTA,FECHA)VALUES(P_ID_PERSONA,to_number(l_ventas),SYSDATE);
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
    end SP_DEPOSITO_MUSICA;
    PROCEDURE  SP_VERIFICA_CLIENTE(
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_ID_COMPROBANTE VARCHAR2,
      P_RUC VARCHAR2,
      P_RAZONSOCIAL VARCHAR2,
      P_DIRECCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  ) IS
  
    l_per_email VARCHAR2(100);
    l_eap VARCHAR2(1000);
    l_codigo VARCHAR2(100);
    l_dni VARCHAR2(35);
    l_materno VARCHAR2(100);
    l_paterno VARCHAR2(100);
    l_nombre VARCHAR2(100);
    l_id_tipodocumento number;
    l_contar integer;
    l_valida varchar2(1):='N';
    l_msgerror varchar2(200):='No existe datos';
    l_error number:=0;
    l_id_persona number;
    l_id_virtual number;
    l_tipodocumento varchar2(50);
    l_id_persona_ju number;
    l_razonsocial varchar2(500);
    l_glosa varchar2(150);
    l_id_dinamica number;
    l_id_anho number;
    l_id_mes number;
    l_id_user number:=205662;---crear
    l_id number;
    l_id_emp number;
    l_nombre_visa VARCHAR2(100);
    BEGIN
  
        l_id_dinamica:= to_number(P_COD_TRANSACCION);
        
        select 
            to_number(to_char(sysdate,'YYYY')), 
            to_number(to_char(sysdate,'MM'))
            into
            l_id_anho,
            l_id_mes
        from dual;

        select count(1) into l_contar from CONTA_DINAMICA where id_dinamica=l_id_dinamica;
        if l_contar=0 then
            l_msgerror:='No existe código de transacción';
            l_error:=1;
            GOTO salida_validadniid;
        end if;

        select nombre into l_glosa from CONTA_DINAMICA where id_dinamica=l_id_dinamica;

        PKG_PAY.SP_VALIDA_DEP_ALUMNOIDDNI(P_ID_ENTIDAD,P_ID_DEPTO,l_id_dinamica,P_ID_COMPROBANTE,l_id_anho,l_id_mes,l_id_user, l_error,l_msgerror);

        if l_error=1 then
            GOTO salida_validadniid;
        end if;
  
        IF P_ID_COMPROBANTE<>'01' THEN
            select 
                count(1) into l_contar
            FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B
            WHERE A.ID_PERSONA = B.ID_PERSONA
            AND A.ID_PERSONA=P_ID_PERSONA;
              
            l_id_persona:=P_ID_PERSONA;
              
            IF l_contar=0 THEN
                
                select 
                    count(1) into l_contar
                FROM MOISES.PERSONA_DOCUMENTO
                WHERE  NUM_DOCUMENTO=P_NUM_DOCUMENTO;
                
                IF l_contar=1 THEN
                    SELECT 
                    ID_PERSONA into l_id_persona
                    FROM MOISES.PERSONA_DOCUMENTO
                    WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;
                ELSE
                    select coalesce(max(id_persona),0) +1 into l_id from MOISES.persona;
             
                    INSERT INTO MOISES.PERSONA(
                          ID_PERSONA,
                          NOMBRE,
                          PATERNO,
                          MATERNO
                      )VALUES(
                          l_id,
                          P_NOMBRE,
                          P_PATERNO,
                          P_MATERNO
                    )returning ID_PERSONA INTO l_id_persona;
                  
                    INSERT INTO MOISES.PERSONA_NATURAL(
                          ID_PERSONA,
                          ID_TIPOPAIS,
                          ID_TIPODOCUMENTO,
                          NUM_DOCUMENTO,
                          SEXO,
                          CORREO
                      )VALUES(
                          l_id_persona,
                          176,
                          P_ID_TIPODOCUMENTO,
                          P_NUM_DOCUMENTO,
                          --P_SEXO,
                          DECODE(P_SEXO,6,2,P_SEXO),--AUMENTADO MARLO
                          P_CORREO
                    );
                  
                    INSERT INTO MOISES.PERSONA_DOCUMENTO(
                          ID_PERSONA,
                          ID_TIPODOCUMENTO,
                          NUM_DOCUMENTO,
                          ES_ACTIVO
                    )VALUES(
                          l_id_persona,
                          P_ID_TIPODOCUMENTO,
                          P_NUM_DOCUMENTO,
                          1
                    );

                    INSERT INTO MOISES.PERSONA_VIRTUAL(
                        ID_VIRTUAL,
                        ID_PERSONA,
                        ID_TIPOVIRTUAL,
                        DIRECCION,
                        ES_ACTIVO
                      )VALUES(
                          1,
                          l_id_persona,
                          1,
                          P_CORREO,
                          1
                    );
                  
                END IF;
                
            END IF;
        
            l_valida :='S';
            l_msgerror:='';
                    
            SELECT 
            A.NOMBRE,
            A.PATERNO,
            A.MATERNO,
            B.NUM_DOCUMENTO AS DNI,
            C.CODIGO,
            FT_ALUMNO_EAP(A.ID_PERSONA) AS EAP,
            B.CORREO AS EMAIL_EXTERNO,
            B.id_tipodocumento
            into l_nombre,
            l_paterno,
            l_materno,
            l_dni,
            l_codigo,
            l_eap,
            l_per_email,
            l_id_tipodocumento
            FROM MOISES.PERSONA A  
            INNER JOIN MOISES.PERSONA_NATURAL B
            ON A.ID_PERSONA = B.ID_PERSONA
            LEFT JOIN MOISES.PERSONA_NATURAL_ALUMNO C
            ON B.ID_PERSONA = C.ID_PERSONA
            WHERE A.ID_PERSONA=l_id_persona;
            l_nombre_visa := l_nombre;
                
            select count(1) into l_contar
            from MOISES.PERSONA_DOCUMENTO
            where ID_PERSONA=l_id_persona
            and es_activo=1;
                
            if l_contar>0 then
                select ID_TIPODOCUMENTO,NUM_DOCUMENTO into l_id_tipodocumento,l_dni
                from MOISES.PERSONA_DOCUMENTO
                where ID_PERSONA=l_id_persona
                and es_activo=1
                and rownum=1
                order by ID_TIPODOCUMENTO;
            end if;
                       
            select count(1) into l_contar from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
                
            if l_contar=1 then
                select siglas into l_tipodocumento from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
            end if;
                
            
        END IF;
        
        select count(1) into l_contar
        from MOISES.PERSONA_VIRTUAL
        where ID_PERSONA=l_id_persona
        and es_activo=1;
            
        if l_contar>0 then
            select DIRECCION into l_per_email
            from MOISES.PERSONA_VIRTUAL
            where ID_PERSONA=l_id_persona
            and es_activo=1
            and rownum=1
            order by ID_VIRTUAL desc;
        --ELSE
            --l_per_email := 'aniversario@upeu.edu.pe';
        end if;
        
        IF P_ID_COMPROBANTE='01' THEN
        
            if P_RUC is null then
                l_tipodocumento := 'RUC';
                l_msgerror:='Es factura, debe registrar RUC';
                l_error:=1;
                GOTO salida_validadniid;
            end if;
          
            --select count(1) into l_contar from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc=P_RUC;
            
            SELECT COUNT(1) INTO l_contar FROM (
                SELECT A.ID_PERSONA,B.ID_RUC
                FROM MOISES.PERSONA A, MOISES.PERSONA_JURIDICA B 
                WHERE A.ID_PERSONA=B.ID_PERSONA 
                AND B.ID_RUC=P_RUC
                UNION ALL
                SELECT ID_PERSONA, NUM_DOCUMENTO 
                FROM MOISES.PERSONA_NATURAL WHERE NUM_DOCUMENTO = P_RUC
            );
          
            IF l_contar>0 THEN
                select count(1) into l_contar from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc = P_RUC;
                if l_contar > 0 then
                    select a.id_persona, a.nombre into l_id_persona,l_razonsocial 
                    from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc = P_RUC;
                    l_id_persona_ju := l_id_persona;
                    l_nombre := l_razonsocial;
                    --l_paterno := l_razonsocial;
                    l_codigo := P_RUC;
                    l_nombre_visa := '';
                else
                    select a.id_persona, a.nombre into l_id_persona,l_razonsocial 
                    from moises.persona a, moises.persona_natural b where a.id_persona=b.id_persona and b.num_documento = P_RUC;
                    l_id_persona_ju := l_id_persona;
                    l_nombre := l_razonsocial;
                    --l_paterno := l_razonsocial;
                    l_codigo := P_RUC;
                    l_nombre_visa := '';
                end if;
                
                l_valida :='S';
                l_msgerror:='';
            ELSE
          
                if P_RAZONSOCIAL is null then
                    l_msgerror:='Es factura, debe registrar Razon Social';
                    l_error:=1;
                    GOTO salida_validadniid;
                end if;
            
                l_razonsocial:=P_RAZONSOCIAL;
            
                if P_DIRECCION is null then
                    l_msgerror:='Es factura, debe registrar Dirección';
                    l_error:=1;
                    GOTO salida_validadniid;
                end if;
            
                select coalesce(max(id_persona),0) +1 into l_id_emp from MOISES.persona;

          
                INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE
                )VALUES(
                  l_id_emp,
                  P_RAZONSOCIAL
                )returning ID_PERSONA INTO l_id_persona_ju;
             
                INSERT INTO MOISES.PERSONA_JURIDICA(
                      ID_RUC,
                      ID_PERSONA,
                      ID_TIPOESTADO,
                      ID_TIPOCONDICION,
                      ID_TIPOCONTRIBUYENTE,
                      ID_TIPOACTIVIDADECONOMICA,
                      ID_TIPOPAIS,
                      FEC_REGISTRO,
                      FEC_INICIO,
                      FEC_BAJA,
                      ES_RUS
                )VALUES(
                    P_RUC,
                    l_id_persona_ju,
                    11,
                    1,
                    2,
                    290,
                    176,
                    null,
                    null,
                    null,
                    null
                );
             
                INSERT INTO MOISES.PERSONA_DIRECCION(
                    ID_PERSONA,
                    ID_TIPODIRECCION,
                    DIRECCION,
                    ES_ACTIVO
                )VALUES(
                    l_id_persona_ju,
                    5,
                    P_DIRECCION,
                    1
                );
            
                INSERT INTO MOISES.PERSONA_DOCUMENTO(
                      ID_PERSONA,
                      ID_TIPODOCUMENTO,
                      NUM_DOCUMENTO,
                      ES_ACTIVO
                  )VALUES(
                      l_id_persona_ju,
                      6,
                      P_RUC,
                      1
                );
   
            END IF;

        END IF;
       
        <<salida_validadniid>>
  
        OPEN cursor FOR
    
        select
            l_valida  as valida,
            l_id_persona as id_persona,
            l_id_persona as id_persona_visa,
            l_per_email as email_visa,
            l_eap as eap,
            l_codigo as codigo,
            l_dni as num_documento,
            l_paterno||' '||l_materno as apellidos,
            l_paterno||' '||l_materno as apellidos_visa,
            l_nombre as nombres,
            l_paterno as paterno,
            l_materno as materno,
            l_nombre_visa as nombres_visa,
            l_tipodocumento as tipodocumento,
            P_RUC AS  ruc,
            l_razonsocial as razonsocial,
            l_msgerror  as msgerror,
            l_glosa as glosa,
            l_id_dinamica as id_dinamica,
            l_id_persona_ju as id_cliente,
            P_ID_COMPROBANTE as id_comprobante
        from dual;
      
     
  END SP_VERIFICA_CLIENTE;
  PROCEDURE  SP_DEPOSITO_VENTA_EDA(
      P_ID_DINAMICA NUMBER,
      P_OPERACION VARCHAR2,
      P_IMPORTE NUMBER,
      P_COD_TARJETA VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_IP VARCHAR2,
      P_ID OUT VARCHAR2,
      P_ERROR OUT NUMBER,
      P_MSGERROR OUT VARCHAR2    
  ) IS
  
    L_ID_PERSONA INTEGER;
    L_ID_ENTIDAD INTEGER := 7124;
    L_ID_DEPTO VARCHAR2(10) := '1';
    L_ID_ANHO INTEGER;
    L_ID_MES INTEGER;
    L_ID_DINAMICA INTEGER := 100;
    L_ID_DINAMICA_DEP INTEGER;
    L_ID_COMPROBANTE VARCHAR2(2) := '03';
    L_ID_TIPOVENTA NUMBER := 6;
    L_ID_MONEDA NUMBER := 7;
    L_TIPOCAMBIO NUMBER(10,2) := 0;
    L_GLOSA VARCHAR2(50);
    L_IMPORTE_ME NUMBER(10,2) :=0;
    L_SERIE_NUMERO VARCHAR2(30);
    L_ID_MEDIOPAGO VARCHAR2(5):='006';
    L_ID_USER NUMBER:=2; --cajero Visa Net Online C/E
    L_VENTAS VARCHAR2(100):=NULL;
    L_VENTAS_IMP VARCHAR2(100):=NULL;
    L_TIPO varchar2(100):='V';
    L_ID_TIPOTRANSACCION number;
    L_CONTAR NUMBER:=0;
    L_FECHA DATE;
    L_ID_TIPOASIENTO varchar2(5) := 'MB';
    L_ERROR NUMBER:=0;
    L_MSGERROR VARCHAR2(200):='';
    L_ID NUMBER;
    L_ID_TIPOTARJETA INTEGER;
    L_CANTIDAD NUMBER(10,2):=1;
    
    BEGIN
    
        SELECT 
            to_number(to_char(sysdate,'YYYY')), 
            to_number(to_char(sysdate,'MM')),
            sysdate,
            'DEPÓSITO CON VISA' 
            INTO L_ID_ANHO, L_ID_MES, L_FECHA, L_GLOSA
        FROM DUAL;

        SELECT COUNT(1) INTO L_CONTAR FROM CONTA_DINAMICA WHERE ID_DINAMICA = P_ID_DINAMICA;
        IF L_CONTAR=0 THEN
            L_MSGERROR:='No existe código de transacción';
            L_ERROR:=1;
            GOTO salida_validadniid;
        END IF;

        PKG_PAY.SP_VALIDA_DEP_ALUMNOIDDNI(L_ID_ENTIDAD,L_ID_DEPTO,P_ID_DINAMICA,L_ID_COMPROBANTE,L_ID_ANHO,L_ID_MES,L_ID_USER, L_ERROR,L_MSGERROR);

        IF L_ERROR=1 then
            GOTO salida_validadniid;
        END IF;
        
        --CREAR PERSONA
        --L_ID_PERSONA
        SELECT 
            COUNT(1) INTO L_CONTAR
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  NUM_DOCUMENTO = P_NUM_DOCUMENTO;
        
        IF L_CONTAR=1 THEN
            SELECT 
                    ID_PERSONA INTO L_ID_PERSONA
            FROM MOISES.PERSONA_DOCUMENTO
            WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        ELSE
            SELECT COALESCE(MAX(ID_PERSONA),0) +1 INTO L_ID FROM MOISES.PERSONA;
     
            INSERT INTO MOISES.PERSONA( ID_PERSONA, NOMBRE, PATERNO, MATERNO)VALUES( L_ID, P_NOMBRE, P_PATERNO, P_MATERNO
            )RETURNING ID_PERSONA INTO L_ID_PERSONA;
          
            INSERT INTO MOISES.PERSONA_NATURAL( ID_PERSONA, ID_TIPOPAIS, ID_TIPODOCUMENTO, NUM_DOCUMENTO, SEXO, CORREO
              )VALUES( L_ID_PERSONA, 176, P_ID_TIPODOCUMENTO, P_NUM_DOCUMENTO, DECODE(P_SEXO,'M',1,2), P_CORREO );
          
            INSERT INTO MOISES.PERSONA_DOCUMENTO( ID_PERSONA, ID_TIPODOCUMENTO, NUM_DOCUMENTO, ES_ACTIVO
            )VALUES( L_ID_PERSONA, P_ID_TIPODOCUMENTO, P_NUM_DOCUMENTO, 1 );

            INSERT INTO MOISES.PERSONA_VIRTUAL( ID_VIRTUAL, ID_PERSONA, ID_TIPOVIRTUAL, DIRECCION, ES_ACTIVO)VALUES( 1,  L_ID_PERSONA, 1, P_CORREO, 1 );
                  
        END IF;
        
        --CREAR LA VENTA
        PKG_PAY.SP_VENTAS_ALUMNOIDDNI(
                   L_ID_PERSONA,	
                   P_OPERACION,
                   L_ID_ENTIDAD,
                   L_ID_DEPTO,
                   L_ID_ANHO ,
                   L_ID_MES, 
                   P_IMPORTE,	
                   P_IP,
                   P_ID_DINAMICA,
                   L_ID_PERSONA,
                   L_ID_COMPROBANTE,
                   L_ID_TIPOVENTA,
                   L_ID_MONEDA,
                   L_TIPOCAMBIO,
                   L_IMPORTE_ME,
                   L_CANTIDAD,
                   L_VENTAS,
                   L_VENTAS_IMP,
                   L_ERROR,
                   L_MSGERROR
          );
          
        IF L_ERROR=1 then
            GOTO salida_validadniid;
        END IF;
        
        IF COALESCE(LENGTH(L_VENTAS),0)>0 THEN
            SELECT SERIE||'-'||NUMERO INTO L_SERIE_NUMERO FROM VENTA WHERE ID_VENTA = TO_NUMBER(L_VENTAS);
        END IF;
          
        --CREAR EL DEPOSITO
        SELECT COUNT(1) INTO L_CONTAR FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;
        
        IF L_CONTAR>0 THEN
           SELECT ID_TIPOTARJETA INTO L_ID_TIPOTARJETA FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;
        END IF;
        
        SELECT ID_PARENT INTO L_ID_DINAMICA_DEP FROM CONTA_DINAMICA WHERE ID_DINAMICA = P_ID_DINAMICA;
        
        SELECT ID_TIPOTRANSACCION INTO L_ID_TIPOTRANSACCION FROM CONTA_DINAMICA WHERE ID_DINAMICA = L_ID_DINAMICA_DEP;
        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              L_ID_ENTIDAD,
                              L_ID_DEPTO,
                              L_ID_ANHO,
                              L_ID_MES,
                              L_ID_MEDIOPAGO,
                              L_ID_USER,
                              L_ID_PERSONA,
                              L_VENTAS,
                              L_VENTAS_IMP,
                              L_TIPO,
                              L_ID_TIPOTRANSACCION,
                              L_ID_MONEDA,
                              L_ID_DINAMICA_DEP,
                              L_ID_TIPOTARJETA,
                              null,
                              P_OPERACION,
                              L_FECHA,
                              0,
                              P_IMPORTE,
                              0,
                              L_IMPORTE_ME,
                              L_TIPOCAMBIO,
                              L_GLOSA,
                              null,
                              null,
                              L_ID_TIPOASIENTO,
                              7,
                              L_ERROR,
                              L_MSGERROR
                            );
        <<salida_validadniid>>
        P_ID:=l_serie_numero;
        P_ERROR:=L_ERROR;
        P_MSGERROR:=L_MSGERROR;
  
    END SP_DEPOSITO_VENTA_EDA;
    PROCEDURE SP_DEPOSITO_CLIENTE_PUBLICO(	 
     P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2     
	   )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(100);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal number;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         id_canal
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_depalumniddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_depalumniddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
            
          

        if P_ID_COMPROBANTE<>'00' then
          PKG_PAY.SP_FINALIZAR_VENTA_PUBLICO(
                   P_ID_PERSONA,	
                   P_OPERACION,
                   P_ID_ENTIDAD,
                   P_ID_DEPTO,
                   l_id_anho ,
                   l_id_mes, 
                   n_importe,	
                   P_IP,
                   P_ID_DINAMICA,
                   P_ID_CLIENTE,
                   P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,
                   P_ID_ORIGEN,
                   l_id_moneda,
                   l_tipocambio,
                   n_importe_me,
                   l_ventas,
                   l_ventas_imp,
                   l_error,
                   l_msgerror
          );
          
          if coalesce(length(l_ventas),0)>0 then
            select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
          end if;
          
          SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;
        else
          l_id_dinamica_dep:=P_ID_DINAMICA;
        end if;
        
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;

        PKG_PAY.SP_CREAR_DEPOSITO_DIVERSO(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              l_id_dinamica_dep,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              P_ID_ORIGEN,
                              l_error,
                              l_msgerror
                            );
                                      
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
    END SP_DEPOSITO_CLIENTE_PUBLICO;
    PROCEDURE SP_FINALIZAR_VENTA_PUBLICO(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_VENTA INTEGER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP OUT VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR OUT varchar2
       
     ) is
     l_error number:=0;
     l_msgerror varchar2(200):='';
     
     L_USER NUMBER :=4; --MATRICULADOR ONLINE
     l_igv number(10,2);
     l_tc NUMBER(10,3);
     l_id_moneda number;
     l_id_moneda_tc number;
     L_ID_DOCUMENTO NUMBER;
     
     L_SERIE VARCHAR2(5);
     L_CORRELATIVO NUMBER;
     L_NUMERO VARCHAR2(15);
     L_GLOSA varchar2(200):='';
     l_nom_dinamica varchar(150);
     L_ID_TIPO_TRANSACCION number;
     L_ID_CREDITO number:=1;
     l_id_tipovoucher number := 1;
     l_id_persona_v number;
     L_ID_VOUCHER NUMBER;
     l_id_tipoventa number:=6;---configurar
     l_id_tipoasiento varchar2(5);--:='RV';
     
     l_id_parent number;
     l_id_tiponota varchar2(5);
     l_id_comprobante_ref varchar2(5);
     l_serie_ref varchar2(10);
     l_numero_ref varchar2(20);
     
     l_id_venta number; 
     
     l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
     
     l_gravado varchar2(2);
     l_precio number(10,2);
     l_igv_item number(10,2);
     l_precio_base number(10,2);
     l_base number(10,2);
     l_importe number(10,2);
     l_contar integer;
     l_id_cliente_legal number;
     
     
     N_PRECIO_ME number(10,2);
     N_PRECIO_BASE_ME number(10,2); 
     N_PRECIO_ALM_ME number(10,2); 
     N_BASE_ME number(10,2); 
     N_IGV_ME number(10,2); 
     N_DESCUENTO_ME number(10,2);
     N_IMPORTE_ME number(10,2);
     
     N_IMPORTE number(10,2):=0;
     
     l_importe_me number(10,2);
     
     L_ID_COMPROBANTE VARCHAR2(3);
     L_ID_ALMACEN INTEGER;
     CONTA INTEGER;
     L_ID_VDETALLE NUMBER(10);
     L_ID_ORDEN INTEGER;
     
    CURSOR VENTA_DET IS
    SELECT ID_VDETALLE 
    FROM VENTA_DETALLE
    WHERE ID_VENTA = P_ID_VENTA
    ORDER BY ID_VDETALLE;
    
    BEGIN
        SELECT ID_COMPROBANTE INTO L_ID_COMPROBANTE FROM VENTA WHERE ID_VENTA = P_ID_VENTA;

        SELECT MAX(ID_ALMACEN) INTO L_ID_ALMACEN FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA;

        SELECT ID_DOCUMENTO INTO L_ID_DOCUMENTO FROM INVENTARIO_ALMACEN_DOCUMENTO 
        WHERE ID_ALMACEN = L_ID_ALMACEN AND ID_COMPROBANTE = L_ID_COMPROBANTE;

    
    
        l_id_tipoventa:=P_ID_TIPOVENTA;
        l_id_moneda:=P_ID_MONEDA; --SOLES
        l_id_moneda_tc:=9;
        select FC_IGV(CURRENT_DATE ) into l_igv from dual;

        --select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
        l_tc:=P_TC;

        if l_tc is null then
          l_tc:=0;
        end if;

        N_IMPORTE:= P_IMPORTE;

        N_IMPORTE_ME:=P_IMPORTE_ME;


        if P_ID_COMPROBANTE='01' then
            l_id_cliente_legal:=P_ID_CLIENTE;
        else
            l_id_cliente_legal:=null;
        end if;
      
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(L_ID_DOCUMENTO,L_SERIE,L_CORRELATIVO);
        
        SELECT LPAD(TO_CHAR(L_CORRELATIVO),8,'0') INTO L_NUMERO FROM DUAL;
        
        select nombre,ID_TIPOTRANSACCION,ID_TIPOIGV into l_nom_dinamica,L_ID_TIPO_TRANSACCION,l_id_tipoigv from conta_dinamica where id_dinamica=P_ID_DINAMICA;
        
      L_GLOSA:=substr('Venta Online '||l_nom_dinamica,0,80);
      
      SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
      SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_DEPTO=P_ID_DEPTO;
    
      
      PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,L_ID_VOUCHER);
      
      
      l_id_parent:=null;
      l_id_tiponota:=null;
      l_id_comprobante_ref:=null;
      l_serie_ref:=null;
      l_numero_ref:=null;
      
      select count(1) into l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      if l_contar>0 then
          select GRAVADO into l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      end if;
      
         --Actualiza la Venta venta
        UPDATE VENTA SET 
            SERIE               =   L_SERIE, 
            NUMERO              =   L_NUMERO, 
            FECHA               =   SYSDATE, 
            ESTADO              =   '1',
            GLOSA               =   L_GLOSA,
            ID_TIPOTRANSACCION  =   L_ID_TIPO_TRANSACCION,
            ID_VOUCHER          =   L_ID_VOUCHER
        WHERE ID_VENTA = P_ID_VENTA;
        
        -- GENERA ITEM NUMERO DE LOS DETALLES
        CONTA := 1;
        OPEN VENTA_DET;
            FETCH VENTA_DET INTO L_ID_VDETALLE;
            WHILE VENTA_DET%FOUND LOOP
            
                UPDATE VENTA_DETALLE SET ITEM = CONTA
                WHERE ID_VENTA = P_ID_VENTA
                AND ID_VDETALLE = L_ID_VDETALLE;
                CONTA := CONTA+1;
            FETCH VENTA_DET INTO L_ID_VDETALLE;
            END LOOP;
        CLOSE VENTA_DET;
        
        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(P_ID_VENTA);
        
        SELECT ID_ORDEN INTO L_ID_ORDEN FROM VENTA_ORDEN WHERE ID_VENTA = P_ID_VENTA;

        INSERT INTO VENTA_ORDEN_DETALLE (ID_ORDEN,ID_VDETALLE,ID_ARTICULO,CANTIDAD,ENTREGADO)
        SELECT L_ID_ORDEN,ID_VDETALLE,ID_ARTICULO,CANTIDAD,'N'
        FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA;
        
        UPDATE VENTA_ORDEN SET ESTADO = '1' WHERE ID_ORDEN = L_ID_ORDEN;
        
        IF L_ID_ALMACEN IS NOT NULL THEN
            PKG_SALES.SP_KARDEX_VENTA(P_ID_VENTA);
        END IF;
        
        --GENERAR ASIENTO
        PKG_SALES.SP_GENERAR_ASIENTO(P_ID_VENTA,l_error,l_msgerror);
        IF l_error > 0 THEN
            l_msgerror := l_msgerror;
            GOTO salida_ventaalumniddni;
        END IF;
        
        IF P_ID_ENTIDAD = 7124 THEN
            PKG_SALES.SP_VENTA_ELECTRONICA(P_ID_VENTA,P_ID_COMPROBANTE);
          --l_error:=0;
        END IF;
       
       <<salida_ventaalumniddni>>
       P_VENTAS:=TO_CHAR(P_ID_VENTA);
       IF l_id_moneda = 9 THEN
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE_ME);
       ELSE
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE);
       END IF;
       
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
    END SP_FINALIZAR_VENTA_PUBLICO;
    
    PROCEDURE SP_VENTAS_TRAMITE_DEP(	 
        P_ID_ORDEN NUMBER,	
        P_IMPORTE NUMBER,	
        P_IP VARCHAR2,
        P_ID OUT VARCHAR2,
        P_ERROR OUT number,
        P_MSGERROR out varchar2     
	   )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(100);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     L_ID_DINAMICA NUMBER;
     l_id_canal NUMBER;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         null,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         ID_CANAL
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        
        update DAVID.TR_TRAMITE_PAGO set
        ID_VENTA=to_number(l_ventas),
        PAGADO=1
       where ID_TRAMITE_PAGO=to_number(P_ID_ORIGEN);
       
        select 
        ID_CLIENTE_LEGAL INTO P_ID_CLIENTE
        from DAVID.TR_TRAMITE_PAGO 
        where ID_TRAMITE_PAGO=to_number(P_ID_ORIGEN);
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_tramite;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_tramite;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
             


        PKG_PAY.SP_VENTAS_TRAMITE(
                 P_ID_PERSONA,	
                 P_OPERACION,
                 P_ID_ENTIDAD,
                 P_ID_DEPTO,
                 l_id_anho ,
                 l_id_mes, 
                 n_importe,	
                 P_IP,
                 P_ID_DINAMICA,
                 P_ID_CLIENTE,
                 P_ID_COMPROBANTE,
                 P_ID_TIPOVENTA,
                 l_id_moneda,
                 l_tipocambio,
                 n_importe_me,
                 to_number(P_ID_ORIGEN),
                 l_ventas,
                 l_ventas_imp,
                 l_error,
                 l_msgerror
        );
        
        if l_error <> 0 then
              GOTO salida_tramite;
       end if;
          
        if coalesce(length(l_ventas),0)>0 then
          select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
        end if;
        
        select 
        ID_DINAMICA INTO L_ID_DINAMICA
        from DAVID.TR_TRAMITE_DETALLE_PAGO 
        where ID_TRAMITE_PAGO=to_number(P_ID_ORIGEN)
        AND ROWNUM = 1;
        
        
        SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=L_ID_DINAMICA;

      
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;
        
      
        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              l_id_dinamica_dep,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              l_error,
                              l_msgerror
                            );
        
       update DAVID.TR_TRAMITE_PAGO set
        ID_VENTA=to_number(l_ventas),
        PAGADO=1
       where ID_TRAMITE_PAGO=to_number(P_ID_ORIGEN);
                
       <<salida_tramite>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
     end SP_VENTAS_TRAMITE_DEP;
     
     PROCEDURE SP_VENTAS_TRAMITE(
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_ID_TRAMITE_PAGO  NUMBER,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     ) is
     l_error number:=0;
     l_msgerror varchar2(200):='';
     
     L_USER NUMBER :=4; --MATRICULADOR ONLINE
     l_igv number(10,2);
     l_tc NUMBER(10,3);
     l_id_moneda number;
     l_id_moneda_tc number;
     l_id_documento NUMBER;
     
     l_serie varchar2(5);
     l_correlativo number;
     l_numero varchar2(15);
     l_glosa varchar2(200):='';
     l_nom_dinamica varchar(150);
     l_id_tipo_transaccion number:=187;--211; --dev  187 prod;
     l_id_credito number:=1;
     l_id_tipovoucher number := 1;
     l_id_persona_v number;
     l_id_voucher NUMBER;
     l_id_tipoventa number:=6;---configurar
     l_id_tipoasiento varchar2(5);--:='RV';
     
     l_id_parent number;
     l_id_tiponota varchar2(5);
     l_id_comprobante_ref varchar2(5);
     l_serie_ref varchar2(10);
     l_numero_ref varchar2(20);
     
     l_id_venta number; 
     
     l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
     
     l_gravado varchar2(2);
     l_precio number(10,2);
     l_igv_item number(10,2);
     l_precio_base number(10,2);
     l_base number(10,2);
     l_importe number(10,2);
     l_contar integer;
     l_id_cliente_legal number;
     
     
     N_PRECIO_ME number(10,2);
     N_PRECIO_BASE_ME number(10,2); 
     N_PRECIO_ALM_ME number(10,2); 
     N_BASE_ME number(10,2); 
     N_IGV_ME number(10,2); 
     N_DESCUENTO_ME number(10,2);
     N_IMPORTE_ME number(10,2);
     
     N_IMPORTE number(10,2):=0;
     
     l_importe_me number(10,2);
    
     begin
       l_id_tipoventa:=P_ID_TIPOVENTA;
       l_id_moneda:=P_ID_MONEDA; --SOLES
       l_id_moneda_tc:=9;
       select FC_IGV(CURRENT_DATE ) into l_igv from dual;
       
       --select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
       l_tc:=P_TC;
     
      if l_tc is null then
          l_tc:=0;
      end if;
      
      N_IMPORTE:= P_IMPORTE;

      N_IMPORTE_ME:=P_IMPORTE_ME;

      
      if P_ID_COMPROBANTE='01' then
        l_id_cliente_legal:=P_ID_CLIENTE;
      else
        l_id_cliente_legal:=null;
      end if;
      
      
        SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= P_ID_COMPROBANTE;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
       -- select nombre,ID_TIPOTRANSACCION,ID_TIPOIGV into l_nom_dinamica,l_id_tipo_transaccion,l_id_tipoigv from conta_dinamica where id_dinamica=P_ID_DINAMICA;
        
      l_glosa:='Venta Online de trámites documentarias';
      
      SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
      SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_DEPTO=P_ID_DEPTO;
    
      
      PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
      
      
      l_id_parent:=null;
      l_id_tiponota:=null;
      l_id_comprobante_ref:=null;
      l_serie_ref:=null;
      l_numero_ref:=null;
      
      select count(1) into l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      if l_contar>0 then
          select GRAVADO into l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      end if;
      
        --crear venta
      INSERT INTO VENTA(
              ID_PERSONA,
              ID_CLIENTE,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_ANHO,
              ID_MES,
              ID_COMPROBANTE, 
              ID_IGV, 
              ID_MONEDA, 
              ID_LEYENDA,
              TIPOCAMBIO,
              SERIE, 
              NUMERO, 
              FECHA, 
              ESTADO,
              GLOSA,
              ID_TIPOTRANSACCION,
              ID_CREDITO,
              ID_VOUCHER,
              ID_CLIENTE_LEGAL,
              ID_TIPOVENTA,
              ID_PARENT,
              ID_TIPONOTA,
              ID_COMPROBANTE_REF,
              SERIE_REF,
              NUMERO_REF
          )VALUES(
              L_USER,
              P_ID_PERSONA,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_ANHO,
              P_ID_MES,
              P_ID_COMPROBANTE,
              l_igv,
              l_id_moneda,--SOLES
              '1000',
              l_tc,
              l_serie,--SERIE
              l_numero,--NRO
              SYSDATE,
              1,
              l_glosa,
              l_id_tipo_transaccion,
              l_id_credito,
              l_id_voucher,
              l_id_cliente_legal,
              l_id_tipoventa,--P_ID_TIPOVENTA
              l_id_parent,
              l_id_tiponota,
              l_id_comprobante_ref,
              l_serie_ref,
              l_numero_ref
      )returning ID_VENTA INTO l_id_venta;
      
         
        
            
      INSERT INTO VENTA_DETALLE(
          ID_VDETALLE,
          ID_VENTA,
          ID_TIPOIGV,
          DETALLE, 
          CANTIDAD, 
          PRECIO, 
          PRECIO_BASE, 
          BASE, 
          IGV, 
          DESCUENTO, 
          DC,
          IMPORTE, 
          PRECIO_ME, 
          PRECIO_BASE_ME, 
          PRECIO_ALM_ME, 
          BASE_ME, 
          IGV_ME, 
          DESCUENTO_ME, 
          IMPORTE_ME,
          ID_DINAMICA
        )
        select 
        1,
        l_id_venta,
        l_id_tipoigv,
        TT.NOMBRE,
        A.CANTIDAD,
        A.PRECIO_UNIT,
        A.PRECIO_UNIT,
        A.SUBTOTAL,
        0,
        0,
        'D',
        A.SUBTOTAL,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        A.ID_DINAMICA
        from DAVID.TR_TRAMITE_DETALLE_PAGO A,DAVID.TR_TRAMITE_PERSONA TP, DAVID.TR_TIPO_TRAMITE TT
        where A.ID_TRAMITE_PERSONA = TP.ID_TRAMITE_PERSONA
        AND TP.ID_TIPO_TRAMITE=TT.ID_TIPO_TRAMITE
        AND A.ID_TRAMITE_PAGO=P_ID_TRAMITE_PAGO
        ORDER BY A.ID_TRAMITE_DETALLE_PAGO;
                   
        
        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);
        
        --GENERAR ASIENTO
        PKG_SALES.SP_GENERAR_ASIENTO(l_id_venta,l_error,l_msgerror);
        IF l_error > 0 THEN
            l_msgerror := l_msgerror;
            GOTO salida_venta_tra;
        END IF;
        
        IF P_ID_ENTIDAD = 7124 THEN
            PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,P_ID_COMPROBANTE);
          --l_error:=0;
        END IF;
       

       P_VENTAS:=TO_CHAR(l_id_venta);
       IF l_id_moneda = 9 THEN
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE_ME);
       ELSE
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE);
       END IF;
       <<salida_venta_tra>>
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
     end SP_VENTAS_TRAMITE;
     
     PROCEDURE  SP_VERIFICA_ALUMNO_TRAMITE (
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_ID_CLIENTE_LEGAL NUMBER,
      P_ID_COMPROBANTE VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  )
  
  
  IS
    l_per_email VARCHAR2(100);
    l_eap VARCHAR2(1000);
    l_codigo VARCHAR2(100);
    l_dni VARCHAR2(35);
    l_materno VARCHAR2(100);
    l_paterno VARCHAR2(100);
    l_nombre VARCHAR2(100);
    l_id_tipodocumento number;
    l_id_persona number;
    l_contar integer;
    l_valida varchar2(1):='N';
    l_msgerror varchar2(200):='No existe datos';
    l_error number:=0;
    l_id_anho number;
    l_id_mes number;
    l_id_user number:=205662;---crear

    
    l_tipodocumento varchar2(50);
    l_glosa varchar2(150);
    l_id_dinamica number;
    
    l_id_persona_ju number;
    l_razonsocial varchar2(500);
    l_ruc varchar2(15);
    l_id_comprobante varchar2(2);
  BEGIN
    
      select 
      count(1) into l_contar
      FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B, MOISES.PERSONA_NATURAL_ALUMNO C
      WHERE A.ID_PERSONA = B.ID_PERSONA
      AND  B.ID_PERSONA = C.ID_PERSONA
      AND A.ID_PERSONA=P_ID_PERSONA;
      
      
        
      if l_contar>0 then
      
        l_valida :='S';
        l_msgerror:='';
                
        SELECT 
        A.NOMBRE,
        A.PATERNO,
        A.MATERNO,
        B.NUM_DOCUMENTO AS DNI,
        C.CODIGO,
        A.ID_PERSONA AS ID_PERSONAL,
        FT_ALUMNO_EAP(A.ID_PERSONA) AS EAP,
        B.CORREO AS EMAIL_EXTERNO,
        B.id_tipodocumento
        into l_nombre,l_paterno,l_materno,l_dni,l_codigo,l_id_persona,l_eap,l_per_email,l_id_tipodocumento
        FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B, MOISES.PERSONA_NATURAL_ALUMNO C
        WHERE A.ID_PERSONA = B.ID_PERSONA
        AND  B.ID_PERSONA = C.ID_PERSONA
        AND A.ID_PERSONA=P_ID_PERSONA;
        
        select count(1) into l_contar from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        
        if l_contar=1 then
          select siglas into l_tipodocumento from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        end if;
        select 
        to_number(to_char(sysdate,'YYYY')), 
        to_number(to_char(sysdate,'MM'))
        into
        l_id_anho,
        l_id_mes
        from dual;
        
        IF P_ID_COMPROBANTE='01' THEN
          IF P_ID_CLIENTE_LEGAL IS NULL THEN
            l_error:=1;
            l_valida:='N';
            l_msgerror:='Es factura, debe registrar RUC';
            GOTO SALIDA_VALIDA;
          END IF;
        END IF;
        
 
        
        PKG_PAY.SP_VALIDA_DEPOSITO_TRAM(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_COMPROBANTE,l_id_anho, l_error,l_msgerror);

        if l_error=1 then
          l_valida:='N';
        end if;
       
      end if;
     
      <<SALIDA_VALIDA>>
       OPEN cursor FOR
      select
        l_valida  as valida,
        l_id_persona as id_persona,
        l_id_persona as id_persona_visa,
        l_per_email as email_visa,
        l_eap as eap,
        l_codigo as codigo,
        l_dni as num_documento,
        l_paterno||' '||l_materno as apellidos,
        l_paterno||' '||l_materno as apellidos_visa,
        l_nombre as nombres,
        l_paterno as paterno,
        l_materno as materno,
        l_nombre as nombres_visa,
        l_tipodocumento as tipodocumento,
        l_ruc AS  ruc,
        l_razonsocial as razonsocial,
        l_msgerror  as msgerror,
        l_glosa as glosa,
        l_id_dinamica as id_dinamica,
        P_ID_CLIENTE_LEGAL as id_cliente,
        P_ID_COMPROBANTE as id_comprobante
      from dual;
      
    
    END SP_VERIFICA_ALUMNO_TRAMITE;
    
    PROCEDURE SP_VALIDA_DEPOSITO_TRAM(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO   VARCHAR2,
        P_ID_COMPROBANTE VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR out varchar2
        )
    IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_tipoasiento varchar2(5) := 'MB';
        l_id_tipovoucher number := 1;--5;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_serie varchar2(4);
        l_correlativo number :=0;
        l_contar number:=0;
        
        L_ID_TIPOCOMPROBANTET VARCHAR2(4) := '99'; --TRANSFERENCIAS DE VENTAS
        L_ID_TIPOASIENTOT VARCHAR2(5):='RV';
        L_ID_TIPOVOUCHERT NUMBER := 7;
        l_id_dinamica number:=0;
        l_glosa varchar2(150);
       
    BEGIN
        
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= P_ID_COMPROBANTE;
        
        IF l_contar=0 THEN
          l_error:=1;
          l_msgerror:='Alto: No esta configurado documento para entidad y departamento';
          GOTO salida_val;
        END IF;
        
        
      SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
       IF l_contar=0 THEN
          l_error:=1;
          l_msgerror:='Alto: No esta configurado vocuhcer de venta para entidad y departamento';
          GOTO salida_val;
        END IF;
        
        l_id_tipovoucher:= 5;
        
      SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
       IF l_contar=0 THEN
          l_error:=1;
          l_msgerror:='Alto: No esta configurado vocuhcer de deposito para entidad y departamento';
          GOTO salida_val;
        END IF; 
      --valida vouche
      
         
        SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_COMPROBANTE = l_id_comprobante;
      
      if l_contar=0 then
          l_error:=1;
          l_msgerror:='Alto: No existe serie y número de documento ('||l_id_comprobante||')';
          GOTO salida_val;
      end if;
      
      SELECT COUNT(1) INTO l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_COMPROBANTE = P_ID_COMPROBANTE;
      
      if l_contar=0 then
          l_error:=1;
          l_msgerror:='Alto: No existe serie y número de documento ('||P_ID_COMPROBANTE||')';
          GOTO salida_val;
      end if;
      
                 
      --valida se esta asignado contador
      SELECT COUNT(1) INTO l_contar FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO;
      
      IF l_contar = 0 THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto: Falta Asignar Contador - Sede por Departamento';
          GOTO salida_val;
      END IF;
     
         
       <<salida_val>>
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
       
      
    END SP_VALIDA_DEPOSITO_TRAM;
    PROCEDURE  SP_VERIFICA_ALUMNOEAD(
      P_ID_PERSONA NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO VARCHAR2,
      P_COD_TRANSACCION VARCHAR2,
      P_ID_TIPODOCUMENTO NUMBER,
      P_NUM_DOCUMENTO VARCHAR2,
      P_PATERNO VARCHAR2,
      P_MATERNO VARCHAR2,
      P_NOMBRE VARCHAR2,
      P_SEXO VARCHAR2,
      P_CORREO VARCHAR2,
      P_ID_COMPROBANTE VARCHAR2,
      P_RUC VARCHAR2,
      P_RAZONSOCIAL VARCHAR2,
      P_DIRECCION VARCHAR2,
      cursor       OUT SYS_REFCURSOR
  ) IS
  
    l_per_email VARCHAR2(100);
    l_eap VARCHAR2(1000);
    l_codigo VARCHAR2(100);
    l_dni VARCHAR2(35);
    l_materno VARCHAR2(100);
    l_paterno VARCHAR2(100);
    l_nombre VARCHAR2(100);
    l_id_tipodocumento number;
    l_contar integer;
    l_valida varchar2(1):='N';
    l_msgerror varchar2(200):='No existe datos';
    l_error number:=0;
    l_id_persona number;
    l_id_virtual number;
    l_tipodocumento varchar2(50);
    l_id_persona_ju number;
    l_razonsocial varchar2(500);
    l_glosa varchar2(150);
    l_id_dinamica number;
    l_id_anho number;
    l_id_mes number;
    l_id_user number:=205662;---crear
    l_id number;
    l_id_emp number;
  BEGIN
         
        select 
        to_number(to_char(sysdate,'YYYY')), 
        to_number(to_char(sysdate,'MM'))
        into
        l_id_anho,
        l_id_mes
        from dual;
        
        select count(1) into l_contar from CONTA_DINAMICA 
        where codigo=P_COD_TRANSACCION
        and id_anho=l_id_anho
        and id_entidad=P_ID_ENTIDAD
        and id_depto=P_ID_DEPTO
        and id_modulo=13;
        
        
        if l_contar=0 then
          l_msgerror:='No existe código de dinámica';
          l_error:=1;
          GOTO salida_validadniid;
        else
          if l_contar>1 then
            l_msgerror:='Hay más de uno con código de dinámica';
            l_error:=1;
            GOTO salida_validadniid;
          end if;
        end if;
        
        select id_dinamica into l_id_dinamica from CONTA_DINAMICA 
        where codigo=P_COD_TRANSACCION
        and id_anho=l_id_anho
        and id_entidad=P_ID_ENTIDAD
        and id_depto=P_ID_DEPTO
        and id_modulo=13;
    
        
        PKG_PAY.SP_VALIDA_DEP_ALUMNOIDDNI(P_ID_ENTIDAD,P_ID_DEPTO,l_id_dinamica,P_ID_COMPROBANTE,l_id_anho,l_id_mes,l_id_user, l_error,l_msgerror);

        if l_error=1 then
          GOTO salida_validadniid;
        end if;
  
      select 
      count(1) into l_contar
      FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B
      WHERE A.ID_PERSONA = B.ID_PERSONA
      AND A.ID_PERSONA=P_ID_PERSONA;
      
      l_id_persona:=P_ID_PERSONA;
      
      if l_contar=0 then
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        
        IF l_contar=1 THEN
          select 
          ID_PERSONA into l_id_persona
          FROM MOISES.PERSONA_DOCUMENTO
          WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA
        WHERE  ID_PERSONA=l_id_persona;
        
        if l_contar=0 then
          select coalesce(max(id_persona),0) +1 into l_id from MOISES.persona;
    
          INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE,
                  PATERNO,
                  MATERNO
              )VALUES(
                  l_id,
                  P_NOMBRE,
                  P_PATERNO,
                  P_MATERNO
          )returning ID_PERSONA INTO l_id_persona;
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_NATURAL
        WHERE  ID_PERSONA=l_id_persona;
        
        if l_contar=0 then
          INSERT INTO MOISES.PERSONA_NATURAL(
                  ID_PERSONA,
                  ID_TIPOPAIS,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  SEXO,
                  CORREO
              )VALUES(
                  l_id_persona,
                  176,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  --P_SEXO,
                  DECODE(P_SEXO,6,2,P_SEXO),--AUMENTADO MARLO
                  P_CORREO
          );
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  ID_PERSONA=l_id_persona;
        if l_contar=0 then
            INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES(
                  l_id_persona,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  1
          );
        end if;
        
        select 
        count(1) into l_contar
        FROM MOISES.PERSONA_VIRTUAL
        WHERE  ID_PERSONA=l_id_persona;
        
        if l_contar=0 and P_CORREO is not null then
          INSERT INTO MOISES.PERSONA_VIRTUAL(
                  ID_VIRTUAL,
                  ID_PERSONA,
                  ID_TIPOVIRTUAL,
                  DIRECCION,
                  ES_ACTIVO
                )VALUES(
                    1,
                    l_id_persona,
                    1,
                    P_CORREO,
                    1
            );
        end if;
        
       -- ELSE
          
        --END IF;
        
      END IF;
        
        l_valida :='S';
        l_msgerror:='';
                
        SELECT 
        A.NOMBRE,
        A.PATERNO,
        A.MATERNO,
        B.NUM_DOCUMENTO AS DNI,
        C.CODIGO,
        FT_ALUMNO_EAP(A.ID_PERSONA) AS EAP,
        B.CORREO AS EMAIL_EXTERNO,
        B.id_tipodocumento
        into l_nombre,
        l_paterno,
        l_materno,
        l_dni,
        l_codigo,
        l_eap,
        l_per_email,
        l_id_tipodocumento
        FROM MOISES.PERSONA A  
        INNER JOIN MOISES.PERSONA_NATURAL B
        ON A.ID_PERSONA = B.ID_PERSONA
        LEFT JOIN MOISES.PERSONA_NATURAL_ALUMNO C
        ON B.ID_PERSONA = C.ID_PERSONA
        WHERE A.ID_PERSONA=l_id_persona;
        
        
        select count(*) into l_contar
        from MOISES.PERSONA_DOCUMENTO
        where ID_PERSONA=l_id_persona
        and es_activo=1;
        
        if l_contar>0 then
          select ID_TIPODOCUMENTO,NUM_DOCUMENTO into l_id_tipodocumento,l_dni
          from MOISES.PERSONA_DOCUMENTO
          where ID_PERSONA=l_id_persona
          and es_activo=1
          and rownum=1
          order by ID_TIPODOCUMENTO;
           
        end if;
        
        
               
        select count(1) into l_contar from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        
        if l_contar=1 then
          select siglas into l_tipodocumento from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        end if;
        
        select count(*) into l_contar
        from MOISES.PERSONA_VIRTUAL
        where ID_PERSONA=l_id_persona
        and es_activo=1;
        
        if l_contar>0 then
          select DIRECCION into l_per_email
          from MOISES.PERSONA_VIRTUAL
          where ID_PERSONA=l_id_persona
          and es_activo=1
          and rownum=1
          order by ID_VIRTUAL desc;
           
        end if;
        
        if P_ID_COMPROBANTE='01' then
        
          if P_RUC is null then
            l_msgerror:='Es factura, debe registrar RUC';
            l_error:=1;
            GOTO salida_validadniid;
          end if;
          
          select count(*) into l_contar from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc=P_RUC;
          
          if l_contar>0 then
            select a.nombre into l_razonsocial from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc=P_RUC;
          else
          
            if P_RAZONSOCIAL is null then
              l_msgerror:='Es factura, debe registrar Razon Social';
              l_error:=1;
              GOTO salida_validadniid;
            end if;
            
            l_razonsocial:=P_RAZONSOCIAL;
            
            if P_DIRECCION is null then
              l_msgerror:='Es factura, debe registrar Dirección';
              l_error:=1;
              GOTO salida_validadniid;
            end if;
            
            select coalesce(max(id_persona),0) +1 into l_id_emp from MOISES.persona;

          
             INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE
              )VALUES(
                  l_id_emp,
                  P_RAZONSOCIAL
             )returning ID_PERSONA INTO l_id_persona_ju;
             
             insert into MOISES.PERSONA_JURIDICA(
                      ID_RUC,
                      ID_PERSONA,
                      ID_TIPOESTADO,
                      ID_TIPOCONDICION,
                      ID_TIPOCONTRIBUYENTE,
                      ID_TIPOACTIVIDADECONOMICA,
                      ID_TIPOPAIS,
                      FEC_REGISTRO,
                      FEC_INICIO,
                      FEC_BAJA,
                      ES_RUS
              )values(
                    P_RUC,
                    l_id_persona_ju,
                    11,
                    1,
                    2,
                    290,
                    176,
                    null,
                    null,
                    null,
                    null
             );
             
             insert into MOISES.PERSONA_DIRECCION(
                ID_PERSONA,
                ID_TIPODIRECCION,
                DIRECCION,
                ES_ACTIVO
            )VALUES(
                l_id_persona_ju,
                5,
                P_DIRECCION,
                1
            );
            
            INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES(
                  l_id_persona_ju,
                  6,
                  P_RUC,
                  1
           );
   
          end if;
   
        end if;
        
       
       
      <<salida_validadniid>>
  
    OPEN cursor FOR
    
     select
        l_valida  as valida,
        l_id_persona as id_persona,
        l_id_persona as id_persona_visa,
        l_per_email as email_visa,
        l_eap as eap,
        l_codigo as codigo,
        l_dni as num_documento,
        l_paterno||' '||l_materno as apellidos,
        l_paterno||' '||l_materno as apellidos_visa,
        l_nombre as nombres,
        l_paterno as paterno,
        l_materno as materno,
        l_nombre as nombres_visa,
        l_tipodocumento as tipodocumento,
        P_RUC AS  ruc,
        l_razonsocial as razonsocial,
        l_msgerror  as msgerror,
        l_glosa as glosa,
        l_id_dinamica as id_dinamica,
        l_id_persona_ju as id_cliente,
        P_ID_COMPROBANTE as id_comprobante
      from dual;
      
     
  END SP_VERIFICA_ALUMNOEAD;
  
  PROCEDURE SP_DEPOSITO_ALUMNOEAD_VISA(	 
     P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2     
	   )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(500);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal NUMBER;
     L_CANTIDAD NUMBER(10,2):=1;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         ID_CANAL
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9 and coalesce(cos_denominacional,0)>0
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_depalumniddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_depalumniddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
            
          

        if P_ID_COMPROBANTE<>'00' then
          PKG_PAY.SP_VENTAS_ALUMNOEAD(
                   P_ID_ORDEN,
                   P_ID_PERSONA,	
                   P_OPERACION,
                   P_ID_ENTIDAD,
                   P_ID_DEPTO,
                   l_id_anho ,
                   l_id_mes, 
                   n_importe,	
                   P_IP,
                   P_ID_DINAMICA,
                   P_ID_CLIENTE,
                   P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,
                   l_id_moneda,
                   l_tipocambio,
                   n_importe_me,
                   L_CANTIDAD,
                   l_ventas,
                   l_ventas_imp,
                   l_error,
                   l_msgerror
          );
          
          if coalesce(length(l_ventas),0)>0 then
            select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
          end if;
          
          SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;
        else
          l_id_dinamica_dep:=P_ID_DINAMICA;
        end if;
        
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;

        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              l_id_dinamica_dep,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              l_error,
                              l_msgerror
                            );
                                      
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
     end SP_DEPOSITO_ALUMNOEAD_VISA;
     
     PROCEDURE SP_VENTAS_ALUMNOEAD(
       P_ID_ORDEN 	    NUMBER,
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_CANTIDAD NUMBER DEFAULT NULL,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     ) is
     l_error number:=0;
     l_msgerror varchar2(200):='';
     
     L_USER NUMBER :=4; --MATRICULADOR ONLINE
     l_igv number(10,2);
     l_tc NUMBER(10,3);
     l_id_moneda number;
     l_id_moneda_tc number;
     l_id_documento NUMBER;
     
     l_serie varchar2(5);
     l_correlativo number;
     l_numero varchar2(15);
     l_glosa varchar2(200):='';
     l_nom_dinamica varchar(150);
     l_id_tipo_transaccion number;
     l_id_credito number:=1;
     l_id_tipovoucher number := 1;
     l_id_persona_v number;
     l_id_voucher NUMBER;
     l_id_tipoventa number:=6;---configurar
     l_id_tipoasiento varchar2(5);--:='RV';
     
     l_id_parent number;
     l_id_tiponota varchar2(5);
     l_id_comprobante_ref varchar2(5);
     l_serie_ref varchar2(10);
     l_numero_ref varchar2(20);
     
     l_id_venta number; 
     
     l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
     
     l_gravado varchar2(2);
     l_precio number(10,2);
     l_igv_item number(10,2);
     l_precio_base number(10,2);
     l_base number(10,2);
     l_importe number(10,2);
     l_contar integer;
     l_id_cliente_legal number;
     
     
     N_PRECIO_ME number(10,2);
     N_PRECIO_BASE_ME number(10,2); 
     N_PRECIO_ALM_ME number(10,2); 
     N_BASE_ME number(10,2); 
     N_IGV_ME number(10,2); 
     N_DESCUENTO_ME number(10,2);
     N_IMPORTE_ME number(10,2);
     
     N_IMPORTE number(10,2):=0;
     
     l_importe_me number(10,2);
     L_PRECIO_EVENTO NUMBER(10,2);
     
    CURSOR curdet IS 
    select 
    to_number(PARAMETRO) as id_sedearea,
    to_number(VALOR) as importe,
    VALOR1 as glosa
    from ELISEO.PAY_ORDEN_PARAM
    where id_orden=P_ID_ORDEN
    order by ID_ORDEN_PARAM;
    
    l_id_depto_ead varchar2(10):='';
    
     begin
       l_id_tipoventa:=P_ID_TIPOVENTA;
       l_id_moneda:=P_ID_MONEDA; --SOLES
       l_id_moneda_tc:=9;
       select FC_IGV(CURRENT_DATE ) into l_igv from dual;
       
       --select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
       l_tc:=P_TC;
     
      if l_tc is null then
          l_tc:=0;
      end if;
      
      N_IMPORTE:= P_IMPORTE;

      N_IMPORTE_ME:=P_IMPORTE_ME;

      
      if P_ID_COMPROBANTE='01' then
        l_id_cliente_legal:=P_ID_CLIENTE;
      else
        l_id_cliente_legal:=null;
      end if;
      
      
        SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= P_ID_COMPROBANTE;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
        select nombre,ID_TIPOTRANSACCION,ID_TIPOIGV into l_nom_dinamica,l_id_tipo_transaccion,l_id_tipoigv from conta_dinamica where id_dinamica=P_ID_DINAMICA;
        
        IF P_ID_CLIENTE IS NOT NULL AND P_ID_COMPROBANTE = '01' THEN 
            l_glosa:=substr('Venta Online '||l_nom_dinamica,0,80);
        ELSIF P_ID_CLIENTE IS NULL AND P_ID_COMPROBANTE = '03' THEN 
            l_glosa:=substr('Venta Online '||l_nom_dinamica,0,80);
        ELSE
            l_glosa:=substr(l_nom_dinamica,0,80);
            L_USER := P_ID_CLIENTE;
        END IF;
      
      SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
      SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_DEPTO=P_ID_DEPTO;
    
      
      PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
      
      
      l_id_parent:=null;
      l_id_tiponota:=null;
      l_id_comprobante_ref:=null;
      l_serie_ref:=null;
      l_numero_ref:=null;
      
      select count(1) into l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      if l_contar>0 then
          select GRAVADO into l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      end if;
      
        --crear venta
      INSERT INTO VENTA(
              ID_PERSONA,
              ID_CLIENTE,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_ANHO,
              ID_MES,
              ID_COMPROBANTE, 
              ID_IGV, 
              ID_MONEDA, 
              ID_LEYENDA,
              TIPOCAMBIO,
              SERIE, 
              NUMERO, 
              FECHA, 
              ESTADO,
              GLOSA,
              ID_TIPOTRANSACCION,
              ID_CREDITO,
              ID_VOUCHER,
              ID_CLIENTE_LEGAL,
              ID_TIPOVENTA,
              ID_PARENT,
              ID_TIPONOTA,
              ID_COMPROBANTE_REF,
              SERIE_REF,
              NUMERO_REF
          )VALUES(
              L_USER,
              P_ID_PERSONA,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_ANHO,
              P_ID_MES,
              P_ID_COMPROBANTE,
              l_igv,
              l_id_moneda,--SOLES
              '1000',
              l_tc,
              l_serie,--SERIE
              l_numero,--NRO
              SYSDATE,
              1,
              l_glosa,
              l_id_tipo_transaccion,
              l_id_credito,
              l_id_voucher,
              l_id_cliente_legal,
              l_id_tipoventa,--P_ID_TIPOVENTA
              l_id_parent,
              l_id_tiponota,
              l_id_comprobante_ref,
              l_serie_ref,
              l_numero_ref
      )returning ID_VENTA INTO l_id_venta;
      
      
      l_igv:=l_igv/100;
      
      FOR cur in curdet LOOP
      BEGIN
        --SOLES
        --l_precio:=N_IMPORTE;
        N_IMPORTE:= cur.importe;
        l_precio := cur.importe;
        l_precio_base:=l_precio;
        l_importe:=cur.importe;
        l_base:=l_importe;
        l_igv_item:=0;
        if l_gravado in('G') then
            l_precio_base:=round(l_precio/(1+l_igv),2);
            l_base:=round(l_importe/(1+l_igv),2);
            l_igv_item:=l_importe-l_base;
        end if;
        
        --DOALES
        IF l_id_moneda=9 then
          N_PRECIO_ME:=N_IMPORTE_ME;
          N_PRECIO_BASE_ME:=N_PRECIO_ME;
          l_importe_me:=N_PRECIO_ME;
          N_BASE_ME:=l_importe_me;
          N_IGV_ME:=0;
          if l_gravado in('G') then
              N_PRECIO_BASE_ME:=round(N_PRECIO_ME/(1+l_igv),2);
              N_BASE_ME:=round(l_importe_me/(1+l_igv),2);
              N_IGV_ME:=l_importe_me-N_BASE_ME;
          end if;
        end if;
        l_id_depto_ead:=null;
        select count(1) into l_contar from ORG_SEDE_AREA where id_sedearea=cur.id_sedearea;
        if l_contar>0 then
          select id_depto into l_id_depto_ead from ORG_SEDE_AREA where id_sedearea=cur.id_sedearea;
        end if;
        
          
              
        INSERT INTO VENTA_DETALLE(
            ID_VDETALLE,
            ID_VENTA,
            ID_TIPOIGV,
            DETALLE, 
            CANTIDAD, 
            PRECIO, 
            PRECIO_BASE, 
            BASE, 
            IGV, 
            DESCUENTO, 
            DC,
            IMPORTE, 
            PRECIO_ME, 
            PRECIO_BASE_ME, 
            PRECIO_ALM_ME, 
            BASE_ME, 
            IGV_ME, 
            DESCUENTO_ME, 
            IMPORTE_ME,
            ID_DINAMICA,
            ID_DEPTO_ASI
          )values(
            1,
            l_id_venta,
            l_id_tipoigv,
            cur.glosa ,
            1,
            l_precio,
            l_precio_base,
            l_base,
            l_igv_item,
            0,
            'D',
            N_IMPORTE,
            N_PRECIO_ME, 
            N_PRECIO_BASE_ME, 
            N_PRECIO_ALM_ME, 
            N_BASE_ME, 
            N_IGV_ME, 
            N_DESCUENTO_ME, 
            N_IMPORTE_ME,
            P_ID_DINAMICA,
            l_id_depto_ead
          ); 
        
      END;
      END LOOP;    
        
        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);
        
        UPDATE VENTA SET
          TOTAL=N_IMPORTE,
          TOTAL_ME=N_IMPORTE_ME
        WHERE ID_VENTA=l_id_venta;
        
        --GENERAR ASIENTO
        PKG_PAY.SP_GENERAR_ASIENTO_VENTA_EAD(l_id_venta,l_error,l_msgerror);
        IF l_error > 0 THEN
            l_msgerror := l_msgerror;
            GOTO salida_ventaalumniddni;
        END IF;
        
        IF P_ID_ENTIDAD = 7124 THEN
            PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,P_ID_COMPROBANTE);
          --l_error:=0;
        END IF;
       
       <<salida_ventaalumniddni>>
       P_VENTAS:=TO_CHAR(l_id_venta);
       IF l_id_moneda = 9 THEN
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE_ME);
       ELSE
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE);
       END IF;
       
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
     end SP_VENTAS_ALUMNOEAD;
     
     PROCEDURE SP_GENERAR_ASIENTO_VENTA_EAD(P_ID_VENTA NUMBER, P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_id_vdetalle number;
        l_dinamica number;
        l_asiento number;
        l_detalle varchar2(400);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importeasiento_me number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher number;
        --l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_id_depto_venta varchar2(20);
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_tipoorigen number;
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        l_primario varchar2(1);
        l_id_cliente number;
        l_id_tipoigv varchar2(2);
        l_otros_cargos number(10,2);
        l_id_comprobante varchar2(2);
        L_ID_ANHO NUMBER;
        L_ID_ALMACEN NUMBER;
        L_ID_ARTICULO NUMBER;
        l_depto_asi varchar2(10);
        
        CURSOR cdet IS		
        SELECT  ID_VDETALLE,ID_ARTICULO,ID_DINAMICA,ID_TIPOORIGEN, DETALLE,BASE+NVL(DESCUENTO,0),IGV,DESCUENTO,IMPORTE,NVL(CANTIDAD,1)*PRECIO_ALM,ID_TIPOIGV,NVL(OTROS_CARGOS,0),
        BASE_ME+NVL(DESCUENTO_ME,0),IGV_ME,DESCUENTO_ME,IMPORTE_ME,NVL(CANTIDAD,1)*PRECIO_ALM_ME,NVL(OTROS_CARGOS_ME,0),ID_DEPTO_ASI
        FROM VENTA_DETALLE
        WHERE ID_VENTA=P_ID_VENTA
        ORDER BY ID_VDETALLE;	
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,--a.DC,
        (CASE  WHEN l_id_comprobante = '07' AND a.DC = 'C' THEN 'D' WHEN l_id_comprobante = '07' AND a.DC = 'D' THEN 'C' 
        ELSE a.DC END) AS DC,
        a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.primario
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        --AND coalesce(d.ID_PARENT,0)=0
        AND a.ID_DINAMICA =l_dinamica
        AND a.activo = 'S'
        --AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.ID_ASIENTO,a.DC desc; -- ESTE ORDEN es clave para que se orden los asientos
        

        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, PRIMARIO 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;
        
        l_base_me number(10,2);
        l_igv_me number(10,2);
        l_descuento_me number(10,2);
        l_importe_me number(10,2);
        l_precio_alm_me number(10,2);
        l_otros_cargos_me number(10,2);
        
     BEGIN
     
      SELECT  count(1) into l_contar
      FROM VENTA_DETALLE
      WHERE ID_VENTA=P_ID_VENTA
      and ID_DEPTO_ASI is null;

     if l_contar>0 then
          l_error:=1; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: no tiene aisgnado departamento';
          goto fin_asiento;
     end if;
     
      l_fondo:='10';
     --OBTIENE DATOS DE LA VENTA
      select ID_ENTIDAD,ID_DEPTO,ID_VOUCHER,ID_COMPROBANTE,SERIE, case when NUMERO='-' then NUMERO else to_char(to_number(NUMERO)) end,FECHA,ID_CLIENTE
      --,ID_TIPOORIGEN
                into l_id_entidad,l_id_depto_venta, l_voucher,l_id_comprobante,l_serie,l_numero,l_fecha,l_id_cliente
                --, l_id_tipoorigen 
      from VENTA where ID_VENTA=P_ID_VENTA;
      
        SELECT DISTINCT A.ID_ANHO,B.ID_ALMACEN INTO L_ID_ANHO, L_ID_ALMACEN
        FROM VENTA A JOIN VENTA_DETALLE B ON A.ID_VENTA = B.ID_VENTA WHERE A.ID_VENTA = P_ID_VENTA;


     --DETALLE
      OPEN cdet;
      FETCH cdet INTO l_id_vdetalle,L_ID_ARTICULO, l_dinamica,l_id_tipoorigen, l_detalle,l_base,l_igv,l_descuento,l_importe,l_precio_alm,l_id_tipoigv,l_otros_cargos,l_base_me,l_igv_me,l_descuento_me,l_importe_me,l_precio_alm_me,l_otros_cargos_me,l_depto_asi;

      WHILE cdet%FOUND LOOP
      
            SELECT (to_char(l_id_tipoorigen) || '-' || to_char(l_id_vdetalle)) INTO l_memo FROM DUAL;
        
            ---DENAMICA ASIENTO
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;
            WHILE casi%FOUND LOOP
            
                select (case when l_id_indicador='COSTO_ALM' then l_precio_alm
                            when l_id_indicador='BASE' then l_base
                            when l_id_indicador='IGV' then l_igv
                            when l_id_indicador='DESCUENTO' then l_descuento
                            when l_id_indicador='IMPORTE' then l_importe
                            when l_id_indicador='PRECIO_TOTAL' then l_importe
                            when l_id_indicador='ICBPER' then l_otros_cargos
                      else 0 end)*(l_porcentaje)  into l_importeasiento
                from dual;
                select (case when l_id_indicador='COSTO_ALM' then l_precio_alm_me
                            when l_id_indicador='BASE' then l_base_me
                            when l_id_indicador='IGV' then l_igv_me
                            when l_id_indicador='DESCUENTO' then l_descuento_me
                            when l_id_indicador='IMPORTE' then l_importe_me
                            when l_id_indicador='PRECIO_TOTAL' then l_importe_me
                            when l_id_indicador='ICBPER' then l_otros_cargos_me
                      else 0 end)*(l_porcentaje)  into l_importeasiento_me
                from dual;
                
                if l_id_indicador = 'COSTO_ALM' and l_dc = 'C' then
                    l_descripcion := l_descripcion||'-'||l_detalle;
                end if;
                
                l_depto:=null;
                l_cuenta_cte:=null;
                
                if l_unico='U' then
                  select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif(l_unico='M') then
                   SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                   if l_buscar>0 then
                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                     select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                     select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                   else
                    l_depto:=l_deptos;
                   end if;
                elsif(l_unico='X') then
                   select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                elsif(l_unico='E') then
                   SELECT eliseo.FC_DEPTO_ALUMNO(l_id_cliente, l_id_depto_venta) into l_depto FROM DUAL;
                elsif(l_unico='G') then
                   SELECT eliseo.FC_DEPTO_ALUMNO_ESCUELA(l_id_cliente, l_id_depto_venta) into l_depto FROM DUAL;
                elsif l_unico='P' THEN 
                   l_depto := l_depto_asi;
                elsif l_unico='S' THEN -- Si es sesión
                    l_depto := l_id_depto_venta;---
                end if;
                
                if l_unicoctate='U' then
                  select  count(1) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                  if l_cont>0 then
                    if l_id_tipoigv = '10' and l_id_indicador = 'BASE' then --GARVADA = CTA_CTE = 4 (10) - bazar
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif l_id_tipoigv = '20' and l_id_indicador = 'BASE' then --EXONERAD = CTA_CTE = 5 (20) -bazar
                        l_cuenta_cte := '5';
                    elsif l_id_tipoigv = '30' and l_id_indicador = 'BASE' then --INAFECTA = CTA_CTE = 1 (30) -bazar
                        l_cuenta_cte := '1';
                    else
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    end if;
                  end if;
                elsif(l_unicoctate='M') then
                   SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                   if l_buscar>0 then
                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                     select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                     select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                   else
                    l_cuenta_cte:=l_ctates;
                   end if;
                elsif(l_unicoctate='X') then
                    IF l_id_entidad = 9415 THEN -- ENTIDAD ACES PERU
                        IF l_id_comprobante = '01' THEN  --RUC
                            SELECT MAX(RUC) into l_cuenta_cte FROM (
                                SELECT ID_RUC AS RUC FROM MOISES.VW_PERSONA_JURIDICA WHERE ID_PERSONA=l_id_cliente
                                UNION ALL
                                SELECT NUM_DOCUMENTO AS RUC FROM MOISES.VW_PERSONA_NATURAL WHERE ID_PERSONA=l_id_cliente AND ID_TIPODOCUMENTO = 6
                            );
                        ELSIF l_id_comprobante = '03' THEN --DNI
                            SELECT NUM_DOCUMENTO into l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL WHERE ID_PERSONA=l_id_cliente AND ID_TIPODOCUMENTO NOT IN (6, 97, 98); 
                        END IF;
                    ELSE
                        select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                    END IF;
                elsif (l_unicoctate = 'A') then
                    SELECT ID_CTACTE INTO l_cuenta_cte
                    FROM INVENTARIO_ALMACEN_ARTICULO WHERE ID_ALMACEN = L_ID_ALMACEN AND ID_ARTICULO = L_ID_ARTICULO AND ID_ANHO = L_ID_ANHO;
                end if;
                
                if l_dc='C' then
                  l_importeasiento:=l_importeasiento*(-1);
                  l_importeasiento_me:=l_importeasiento_me*(-1);
                end if;
                
                
                select count(1) into l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=l_id_vdetalle
                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'D' else 'C' end=l_dc;

                if l_importeasiento<>0 then
                
                  if l_cont=0 then
                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    --REF_ID,
                    AGRUPA,
                    PRIMARIO,
                    IMPORTE_ME
                    )VALUES ( 
                    l_id_tipoorigen,
                    l_id_vdetalle,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Doc: '||l_serie||'-'||l_numero||')-'||l_descripcion,
                    l_memo,
                    l_voucher,
                    null,
                    --l_ref_id,
                    l_agrupa,
                    l_primario,
                    l_importeasiento_me
                    );
                  else
                    l_msgerror:='';

                    
                  end if;
                end if;
                  --DESTINO
                  OPEN casides;
                  FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,
                  l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;
                  WHILE casides%FOUND LOOP
                  
                  
                    select (case when l_id_indicadord='COSTO_ALM' then l_precio_alm
                              when l_id_indicadord='BASE' then l_base
                              when l_id_indicadord='IGV' then l_igv
                              when l_id_indicadord='DESCUENTO' then l_descuento
                              when l_id_indicadord='IMPORTE' then l_importe
                        else 0 end)*(l_porcentaje)  into l_importeasiento
                   from dual;
                   
                    select (case when l_id_indicadord='COSTO_ALM' then l_precio_alm_me
                              when l_id_indicadord='BASE' then l_base_me
                              when l_id_indicadord='IGV' then l_igv_me
                              when l_id_indicadord='DESCUENTO' then l_descuento_me
                              when l_id_indicadord='IMPORTE' then l_importe_me
                        else 0 end)*(l_porcentaje)  into l_importeasiento_me
                   from dual;
                   
                    l_depto:=null;
                    l_cuenta_cte:=null;
                  
                    if l_unicod='U' then
                      select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                    elsif(l_unicod='M') then
                       SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into l_depto from dual;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif(l_unicod='X') then
                       select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                    end if;
                    
                    if l_unicoctated='U' then
                      select  count(1) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      if l_cont>0 then
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      end if;

                    elsif(l_unicoctated='M') then
                       SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into l_cuenta_cte from dual;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif(l_unicoctated='X') then
                      select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                    elsif(l_unicoctated='A') then
                        SELECT ID_CTACTE INTO l_cuenta_cte 
                        FROM INVENTARIO_ALMACEN_ARTICULO WHERE ID_ALMACEN = L_ID_ALMACEN AND ID_ARTICULO = L_ID_ARTICULO AND ID_ANHO = L_ID_ANHO;
                    end if;
                    
                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                      l_importeasiento_me:=l_importeasiento_me*(-1);
                    end if;
                    if l_importeasiento<>0 then
                    
                      select count(1) into l_cont from CONTA_ASIENTO
                      where ID_TIPOORIGEN=l_id_tipoorigen
                      and ID_ORIGEN=l_id_vdetalle
                      and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                      and CUENTA =l_id_cuentaaasid
                      and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                      and case when importe>0 then 'D' else 'C' end=l_dc;
                      
                      
                                      
                    
                      IF l_agrupa='S' and l_cont>0 THEN
                        
                        l_msgerror:='';
                      ELSE
                        INSERT INTO CONTA_ASIENTO (
                        ID_TIPOORIGEN,
                        ID_ORIGEN, 
                        FONDO,
                        DEPTO,
                        CUENTA, 
                        CUENTA_CTE,
                        RESTRICCION,
                        IMPORTE,
                        DESCRIPCION,
                        MEMO,
                        VOUCHER, 
                        PARENT_ID,
                        IMPORTE_ME
                        --REF_ID
                        )VALUES ( 
                        l_id_tipoorigen,
                        l_id_vdetalle,
                        l_fondo,
                        l_depto,
                        l_id_cuentaaasi,
                        l_cuenta_cte,
                        l_id_restriccion,
                        l_importeasiento,
                        case when l_agrupa='N' then  l_detalle||' - (Doc: '||l_serie||'-'||l_numero||')-'||to_char(l_fecha,'DD/MM/YYYY') else l_descripcion||' - (Doc: '||l_serie||'-'||l_numero||')-'||FC_MES_NAME(to_char(l_fecha,'MM')) end,
                        l_memo,
                        l_voucher,
                        null,
                        l_importeasiento_me
                        --l_ref_id 
                        );
                      END IF;
                    
                      
                    end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,
                    l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;
                  END LOOP;
                  CLOSE casides; 
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;
                
              END LOOP;
              CLOSE casi; 

            FETCH cdet INTO l_id_vdetalle,L_ID_ARTICULO,l_dinamica,l_id_tipoorigen, l_detalle,l_base,l_igv,l_descuento,l_importe,l_precio_alm,l_id_tipoigv,l_otros_cargos,l_base_me,l_igv_me,l_descuento_me,l_importe_me,l_precio_alm_me,l_otros_cargos_me,l_depto_asi;

        END LOOP;
        CLOSE cdet; 
        
        
        SELECT COUNT(1) INTO l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=L_ID_TIPOORIGEN
        AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
        --ANALIZAR UREGTNE
        
        if l_contar=0 then
          l_error:=3; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
          
          if l_credito=0 or l_debito=0 then
             l_error:=4; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero '||l_credito||'-'||l_debito;
          else
             if l_credito<>l_credito then
              l_error:=5; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        <<fin_asiento>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

     END SP_GENERAR_ASIENTO_VENTA_EAD;
     
     PROCEDURE SP_DEPOSITO_RESEARCH_VISA(	 
     P_ID_ORDEN 	    NUMBER,	
	   P_IMPORTE   		    NUMBER,	
	   P_IP   			      VARCHAR2,
     P_ID OUT VARCHAR2,
     P_ERROR OUT number,
     P_MSGERROR out varchar2     
	   )  
     IS
     l_id_anho number;
     l_id_mes number;
     l_id_mediopago varchar2(5):='006';
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_id_moneda number:=7;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200);
     l_id_tipoasiento varchar2(5) := 'MB';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_tipotarjeta number;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     P_ID_PERSONA 	    NUMBER;
	   P_OPERACION		    VARCHAR2(100);
     P_ID_ENTIDAD       NUMBER;
     P_ID_DEPTO         VARCHAR2(10);
	   P_ID_DINAMICA  	NUMBER;
     P_COD_TARJETA   VARCHAR2(10);
     P_ID_ORIGEN        VARCHAR2(500);
     P_ID_CLIENTE  NUMBER;
     P_ID_COMPROBANTE VARCHAR2(20);
     P_ID_TIPOVENTA NUMBER;
     n_importe number(10,2):=0;
     n_importe_me number(10,2):=0;
     l_id_canal NUMBER;
     L_CANTIDAD NUMBER(10,2):=1;
     begin
     
         select
         ID_PERSONA,
         to_char(NUM_ORDEN),
         ID_ENTIDAD,
         ID_DEPTO,
         ID_DINAMICA,
         COD_TARJETA,
         ID_ORIGEN,
         ID_CLIENTE,
         ID_COMPROBANTE,
         ID_TIPOVENTA,
         ID_MONEDA,
         ID_CANAL
         into 
         P_ID_PERSONA,	
         P_OPERACION,
         P_ID_ENTIDAD,
         P_ID_DEPTO,
         P_ID_DINAMICA,
         P_COD_TARJETA,
         P_ID_ORIGEN,
         P_ID_CLIENTE,
         P_ID_COMPROBANTE,
         P_ID_TIPOVENTA,
         l_id_moneda,
         l_id_canal
        from pay_orden where id_orden=P_ID_ORDEN;
        
        /*SELECT COUNT(1) INTO l_contar FROM JONAS.EVENTO_EVENTO_PARTICIPANTE WHERE ID_EVENTO_PARTICIPANTE = P_ID_ORIGEN;
        IF l_contar >= 1 THEN
            SELECT NVL(CANTIDAD,1) INTO L_CANTIDAD FROM JONAS.EVENTO_EVENTO_PARTICIPANTE WHERE ID_EVENTO_PARTICIPANTE = P_ID_ORIGEN;
        END IF;*/
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9 and coalesce(cos_denominacional,0)>0
        );
        
        n_importe:=P_IMPORTE;
          
        if l_id_moneda=9 then
          n_importe:=P_IMPORTE * l_tipocambio;
          n_importe_me:=P_IMPORTE;
        else
          l_tipocambio:=0;
        end if;
          
          select 
          to_number(to_char(sysdate,'YYYY')), 
          to_number(to_char(sysdate,'MM')),
          sysdate,
          'DEPÓSITO CON VISA'
          into
          l_id_anho,
          l_id_mes,
          l_fecha,
          l_glosa
          from dual;  
          
          --voucher de venta
          SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
          if l_contar < 1 then
              l_error:=1;
              l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
              GOTO salida_depalumniddni;
          elsif l_contar > 1 then
              l_error:=1;
              l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(l_id_anho);
              GOTO salida_depalumniddni;
          end if;
          
          SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_ANHO = l_id_anho
          AND ID_TIPOVOUCHER = l_id_tipovoucher;
        
            
          

        if P_ID_COMPROBANTE<>'00' then
          PKG_PAY.SP_VENTAS_RESEARCH(
                   P_ID_ORDEN,
                   P_ID_PERSONA,	
                   P_OPERACION,
                   P_ID_ENTIDAD,
                   P_ID_DEPTO,
                   l_id_anho ,
                   l_id_mes, 
                   n_importe,	
                   P_IP,
                   P_ID_DINAMICA,
                   P_ID_CLIENTE,
                   P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,
                   l_id_moneda,
                   l_tipocambio,
                   n_importe_me,
                   L_CANTIDAD,
                   l_ventas,
                   l_ventas_imp,
                   l_error,
                   l_msgerror
          );
          
          if coalesce(length(l_ventas),0)>0 then
            select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
          end if;
          
          SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;
        else
          l_id_dinamica_dep:=P_ID_DINAMICA;
        end if;
        
        
        SELECT COUNT(1) INTO l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        if l_contar>0 then
           SELECT id_tipotarjeta INTO l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
        end if;
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;

        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              l_id_anho,
                              l_id_mes,
                              l_id_mediopago,
                              l_id_user,
                              P_ID_PERSONA,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              l_id_moneda,
                              l_id_dinamica_dep,
                              l_id_tipotarjeta,
                              null,
                              P_OPERACION,
                              l_fecha,
                              0,
                              n_importe,
                              0,
                              n_importe_me,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              l_id_tipoasiento,
                              l_id_canal,
                              l_error,
                              l_msgerror
                            );
                                      
       --actualiza origen                               
      update esther.dgi_investigador_pay
      set id_venta = to_number(l_ventas),
          importe = n_importe,
          estado='1'
      where id_investigador_pay = to_number(P_ID_ORIGEN); 
      
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
     end SP_DEPOSITO_RESEARCH_VISA;
     
      PROCEDURE SP_VENTAS_RESEARCH(
       P_ID_ORDEN 	    NUMBER,
       P_ID_PERSONA 	    NUMBER,	
       P_OPERACION		    VARCHAR2,
       P_ID_ENTIDAD       NUMBER,
       P_ID_DEPTO         VARCHAR2,
       P_ID_ANHO 	        NUMBER,
       P_ID_MES           NUMBER, 
       P_IMPORTE   		    NUMBER,	
       P_IP   			      VARCHAR2,
       P_ID_DINAMICA  	NUMBER,
       P_ID_CLIENTE  NUMBER,
       P_ID_COMPROBANTE VARCHAR2,
       P_ID_TIPOVENTA NUMBER,
       P_ID_MONEDA NUMBER,
       P_TC NUMBER,
       P_IMPORTE_ME  NUMBER,
       P_CANTIDAD NUMBER DEFAULT NULL,
       P_VENTAS OUT VARCHAR2,
       P_VENTAS_IMP out VARCHAR2,
       P_ERROR OUT number,
       P_MSGERROR out varchar2
       
     ) is
     l_error number:=0;
     l_msgerror varchar2(200):='';
     
     L_USER NUMBER :=4; --MATRICULADOR ONLINE
     l_igv number(10,2);
     l_tc NUMBER(10,3);
     l_id_moneda number;
     l_id_moneda_tc number;
     l_id_documento NUMBER;
     
     l_serie varchar2(5);
     l_correlativo number;
     l_numero varchar2(15);
     l_glosa varchar2(200):='';
     l_nom_dinamica varchar(150);
     l_id_tipo_transaccion number;
     l_id_credito number:=1;
     l_id_tipovoucher number := 1;
     l_id_persona_v number;
     l_id_voucher NUMBER;
     l_id_tipoventa number:=6;---configurar
     l_id_tipoasiento varchar2(5);--:='RV';
     
     l_id_parent number;
     l_id_tiponota varchar2(5);
     l_id_comprobante_ref varchar2(5);
     l_serie_ref varchar2(10);
     l_numero_ref varchar2(20);
     
     l_id_venta number; 
     
     l_id_tipoigv varchar2(5):='30'; --VENTA INAFECTA
     
     l_gravado varchar2(2);
     l_precio number(10,2);
     l_igv_item number(10,2);
     l_precio_base number(10,2);
     l_base number(10,2);
     l_importe number(10,2);
     l_contar integer;
     l_id_cliente_legal number;
     
     
     N_PRECIO_ME number(10,2);
     N_PRECIO_BASE_ME number(10,2); 
     N_PRECIO_ALM_ME number(10,2); 
     N_BASE_ME number(10,2); 
     N_IGV_ME number(10,2); 
     N_DESCUENTO_ME number(10,2);
     N_IMPORTE_ME number(10,2);
     
     N_IMPORTE number(10,2):=0;
     
     l_importe_me number(10,2);
     L_PRECIO_EVENTO NUMBER(10,2);
     
     l_id_programa_estudio number;
     l_id_depto_asiento varchar2(10):='';
     l_id_sede_area number;
     begin
       l_id_tipoventa:=P_ID_TIPOVENTA;
       l_id_moneda:=P_ID_MONEDA; --SOLES
       l_id_moneda_tc:=9;
       select FC_IGV(CURRENT_DATE ) into l_igv from dual;
       
        select 
        count(1) into l_contar
        from ELISEO.PAY_ORDEN_PARAM
        where id_orden=P_ID_ORDEN
        and PARAMETRO is not null;
        
        if l_contar=0 then
           l_error:=1; --no se ha generado el asiento
           l_msgerror:='VENTA 1: no tiene asignado departamento/nivel';
           goto salida_venta_search;
        end if;
        
        select 
        to_number(valor) into l_id_sede_area
        from ELISEO.PAY_ORDEN_PARAM
        where id_orden=P_ID_ORDEN
        and PARAMETRO is not null;

       --select count(1) into l_contar from david.acad_programa_estudio a, ORG_SEDE_AREA b
       --where a.ID_SEDEAREA=b.ID_SEDEAREA
       --and ID_PROGRAMA_ESTUDIO=  l_id_programa_estudio;
       
       select count(1) into l_contar from ORG_SEDE_AREA 
       where ID_SEDEAREA=l_id_sede_area;
       
       if l_contar=0 then
           l_error:=1; --no se ha generado el asiento
           l_msgerror:='VENTA 2: no tiene asignado departamento/nivel';
           goto salida_venta_search;
       end if;
       
       --select b.id_depto into l_id_depto_asiento from david.acad_programa_estudio a, ORG_SEDE_AREA b
       --where a.ID_SEDEAREA=b.ID_SEDEAREA
       --and ID_PROGRAMA_ESTUDIO=  l_id_programa_estudio;
       select id_depto into l_id_depto_asiento from ORG_SEDE_AREA 
       where ID_SEDEAREA=l_id_sede_area;
        
       --select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into l_tc from dual;
       l_tc:=P_TC;
     
      if l_tc is null then
          l_tc:=0;
      end if;
      
      N_IMPORTE:= P_IMPORTE;

      N_IMPORTE_ME:=P_IMPORTE_ME;

      
      if P_ID_COMPROBANTE='01' then
        l_id_cliente_legal:=P_ID_CLIENTE;
      else
        l_id_cliente_legal:=null;
      end if;
      
      
        SELECT ID_DOCUMENTO INTO l_id_documento FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_DEPTO=P_ID_DEPTO
        AND ID_COMPROBANTE= P_ID_COMPROBANTE;
              
        PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento,l_serie,l_correlativo);
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
        select nombre,ID_TIPOTRANSACCION,ID_TIPOIGV,IMPORTE into l_nom_dinamica,l_id_tipo_transaccion,l_id_tipoigv,L_PRECIO_EVENTO from conta_dinamica where id_dinamica=P_ID_DINAMICA;
        
        IF P_ID_CLIENTE IS NOT NULL AND P_ID_COMPROBANTE = '01' THEN 
            l_glosa:=substr('Venta Online '||l_nom_dinamica,0,80);
        ELSIF P_ID_CLIENTE IS NULL AND P_ID_COMPROBANTE = '03' THEN 
            l_glosa:=substr('Venta Online '||l_nom_dinamica,0,80);
        ELSE
            l_glosa:=substr(l_nom_dinamica,0,80);
            L_USER := P_ID_CLIENTE;
        END IF;
      
      SELECT ID_TIPOASIENTO INTO l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;
      
      SELECT ID_PERSONA INTO l_id_persona_v FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_DEPTO=P_ID_DEPTO;
    
      
      PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,l_id_tipovoucher,'','S',l_id_persona_v,l_id_voucher);
      
      
      l_id_parent:=null;
      l_id_tiponota:=null;
      l_id_comprobante_ref:=null;
      l_serie_ref:=null;
      l_numero_ref:=null;
      
      select count(1) into l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      if l_contar>0 then
          select GRAVADO into l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
      end if;
      
        --crear venta
      INSERT INTO VENTA(
              ID_PERSONA,
              ID_CLIENTE,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_ANHO,
              ID_MES,
              ID_COMPROBANTE, 
              ID_IGV, 
              ID_MONEDA, 
              ID_LEYENDA,
              TIPOCAMBIO,
              SERIE, 
              NUMERO, 
              FECHA, 
              ESTADO,
              GLOSA,
              ID_TIPOTRANSACCION,
              ID_CREDITO,
              ID_VOUCHER,
              ID_CLIENTE_LEGAL,
              ID_TIPOVENTA,
              ID_PARENT,
              ID_TIPONOTA,
              ID_COMPROBANTE_REF,
              SERIE_REF,
              NUMERO_REF
          )VALUES(
              L_USER,
              P_ID_PERSONA,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_ANHO,
              P_ID_MES,
              P_ID_COMPROBANTE,
              l_igv,
              l_id_moneda,--SOLES
              '1000',
              l_tc,
              l_serie,--SERIE
              l_numero,--NRO
              SYSDATE,
              1,
              l_glosa,
              l_id_tipo_transaccion,
              l_id_credito,
              l_id_voucher,
              l_id_cliente_legal,
              l_id_tipoventa,--P_ID_TIPOVENTA
              l_id_parent,
              l_id_tiponota,
              l_id_comprobante_ref,
              l_serie_ref,
              l_numero_ref
      )returning ID_VENTA INTO l_id_venta;
      
      
      l_igv:=l_igv/100;
    
      --SOLES
      --l_precio:=N_IMPORTE;
      l_precio := L_PRECIO_EVENTO;
      l_precio_base:=l_precio;
      l_importe:=N_IMPORTE;
      l_base:=l_importe;
      l_igv_item:=0;
      if l_gravado in('G') then
          l_precio_base:=round(l_precio/(1+l_igv),2);
          l_base:=round(l_importe/(1+l_igv),2);
          l_igv_item:=l_importe-l_base;
      end if;
      
      --DOALES
      IF l_id_moneda=9 then
        N_PRECIO_ME:=N_IMPORTE_ME;
        N_PRECIO_BASE_ME:=N_PRECIO_ME;
        l_importe_me:=N_PRECIO_ME;
        N_BASE_ME:=l_importe_me;
        N_IGV_ME:=0;
        if l_gravado in('G') then
            N_PRECIO_BASE_ME:=round(N_PRECIO_ME/(1+l_igv),2);
            N_BASE_ME:=round(l_importe_me/(1+l_igv),2);
            N_IGV_ME:=l_importe_me-N_BASE_ME;
        end if;
      end if;
      
      
        
            
      INSERT INTO VENTA_DETALLE(
          ID_VDETALLE,
          ID_VENTA,
          ID_TIPOIGV,
          DETALLE, 
          CANTIDAD, 
          PRECIO, 
          PRECIO_BASE, 
          BASE, 
          IGV, 
          DESCUENTO, 
          DC,
          IMPORTE, 
          PRECIO_ME, 
          PRECIO_BASE_ME, 
          PRECIO_ALM_ME, 
          BASE_ME, 
          IGV_ME, 
          DESCUENTO_ME, 
          IMPORTE_ME,
          ID_DINAMICA,
          ID_DEPTO_ASI
        )values(
          1,
          l_id_venta,
          l_id_tipoigv,
          l_nom_dinamica ,
          1,
          l_precio,
          l_precio_base,
          l_base,
          l_igv_item,
          0,
          'D',
          N_IMPORTE,
          N_PRECIO_ME, 
          N_PRECIO_BASE_ME, 
          N_PRECIO_ALM_ME, 
          N_BASE_ME, 
          N_IGV_ME, 
          N_DESCUENTO_ME, 
          N_IMPORTE_ME,
          P_ID_DINAMICA,
          l_id_depto_asiento
        ); 
        
           
        
        PKG_FINANCES_STUDENTS.SP_ACTUALIZAR_TOTAL_VENTA(l_id_venta);
        
        --GENERAR ASIENTO
        --PKG_SALES.SP_GENERAR_ASIENTO(l_id_venta,l_error,l_msgerror);
        PKG_PAY.SP_GENERAR_ASIENTO_VENTA_EAD(l_id_venta,l_error,l_msgerror);
        IF l_error > 0 THEN
            l_msgerror := l_msgerror;
            GOTO salida_venta_search;
        END IF;
        
        IF P_ID_ENTIDAD = 7124 THEN
            PKG_SALES.SP_VENTA_ELECTRONICA(l_id_venta,P_ID_COMPROBANTE);
          --l_error:=0;
        END IF;
       
       <<salida_venta_search>>
       P_VENTAS:=TO_CHAR(l_id_venta);
       IF l_id_moneda = 9 THEN
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE_ME);
       ELSE
        P_VENTAS_IMP:=TO_CHAR(P_IMPORTE);
       END IF;
       
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
     end SP_VENTAS_RESEARCH;
END PKG_PAY;