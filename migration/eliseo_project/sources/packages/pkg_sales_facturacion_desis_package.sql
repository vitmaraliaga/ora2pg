-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_SALES_FACTURACION_DESIS
AS
-- Package header
FUNCTION FC_VENTA(
	P_ID_VENTA IN NUMBER
) RETURN XMLType;

FUNCTION FC_NOTA_CREDITO(
	P_ID_VENTA IN NUMBER
) RETURN XMLType;

PROCEDURE SP_VENTA_ELECTRONICA_DESIS(
	P_ID_VENTA IN NUMBER
);
END PKG_SALES_FACTURACION_DESIS;


CREATE OR REPLACE PACKAGE BODY        PKG_SALES_FACTURACION_DESIS
AS
-- Package body

FUNCTION FC_VENTA(P_ID_VENTA IN NUMBER) RETURN XMLType IS
        S_XML       XMLType;
        S_TIPODOC       VARCHAR2(3);
        L_ID_TIPOVENTA NUMBER;

        S_ID_RUC      VARCHAR2(20);
        S_RAZON_SOCIAL     VARCHAR2(100);
        S_ID_PERSONA_LEGAL     VARCHAR2(100);

       	L_IndMntNeto VARCHAR2(1);


    BEGIN  
	    SELECT COALESCE(MAX(M.ID_RUC),''),COALESCE(MAX(M.NOMBRE),''),COALESCE(MAX(E.ID_PERSONA),0) INTO S_ID_RUC,S_RAZON_SOCIAL,S_ID_PERSONA_LEGAL 
	    FROM VENTA V, CONTA_ENTIDAD E, CONTA_EMPRESA M
	    WHERE V.ID_ENTIDAD = E.ID_ENTIDAD
	    AND E.ID_EMPRESA = M.ID_EMPRESA
	    AND V.ID_VENTA = P_ID_VENTA;

	   	SELECT B.COD_ELECTRONICO ,A.ID_TIPOVENTA INTO S_TIPODOC, L_ID_TIPOVENTA 
	  	FROM VENTA A
	  	INNER JOIN ELISEO.TIPO_COMPROBANTE B ON A.ID_COMPROBANTE = B.ID_COMPROBANTE
	  	WHERE A.ID_VENTA=P_ID_VENTA;
    	IF S_TIPODOC='39' OR S_TIPODOC='41' THEN
    		IF S_TIPODOC = '41' THEN 
    			SELECT XMLTYPE('<?xml version="1.0" encoding="ISO-8859-1"?>'||
						XMLELEMENT("DTE", XMLATTRIBUTES('1.0' AS "version"),
							XMLELEMENT("Documento",-- XMLATTRIBUTES('F1T39' AS "ID"),
								XMLELEMENT("Encabezado",
									XMLELEMENT("IdDoc",
										XMLELEMENT("TipoDTE", S_TIPODOC),-- Boleta Exenta Electrónica
										XMLELEMENT("Folio", V.NUMERO),
										XMLELEMENT("FchEmis", TO_CHAR(V.FECHA,'YYYY-MM-DD')),
										XMLELEMENT("IndServicio", 3)--,
										--XMLELEMENT("IndMntNeto", CASE WHEN  V.IGV > 0  THEN 2 ELSE 0 END)
									),
									XMLELEMENT("Emisor",
										XMLELEMENT("RUTEmisor", S_ID_RUC),--XMLELEMENT("RUTEmisor", S_ID_RUC)
										XMLELEMENT("RznSocEmisor",S_RAZON_SOCIAL),
										--XMLELEMENT("GiroEmisor",''),-- Giro del negocio del Emisor
										XMLELEMENT("DirOrigen",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(S_ID_PERSONA_LEGAL)),'Sin Direccion'),'-','')),
										XMLELEMENT("CmnaOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,1),'')),
										XMLELEMENT("CiudadOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,3),''))
									),
									XMLELEMENT("Receptor",
										XMLELEMENT("RUTRecep",  NVL(FC_DOCUMENTO_CLIENTE(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-')),
										--XMLELEMENT("CdgIntRecep",''),
										XMLELEMENT("RznSocRecep",FC_NOMBRE_PERSONA(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),
										XMLELEMENT("Contacto",trim(coalesce(FC_EMAIL(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'it.upn@outlook.com'))),
										XMLELEMENT("DirRecep",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),'Sin Direccion'),'-','')),
										XMLELEMENT("CmnaRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),1),'')),
										XMLELEMENT("CiudadRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),3),''))
									),
									XMLELEMENT("Totales",
										XMLELEMENT("MntNeto", ROUND(0-COALESCE(V.DESCUENTO,0),0)),--MntNeto=(Monto Total detalle con IndExe=0)-Descuentos GLOBAL + recargos
										XMLELEMENT("MntExe", ROUND(V.TOTAL,0)),-- Valor exento de la boleta electrónica; MntExe= suma de los detalles con IndExe=1
										XMLELEMENT("IVA", 0),-- el valor IVA "Impuesto al Valor Agregado";IVA=MntNeto*19%
										XMLELEMENT("MntTotal", ROUND(V.TOTAL-COALESCE(V.DESCUENTO,0),0)),-- Valor total de la boleta electrónica
										XMLELEMENT("MontoNF", 0)--, -- la suma de los montos de bienes o servicios no facturables de la boleta electrónica
									)
								),
								XMLAgg(
									XMLElement("Detalle", 
										XMLElement("NroLinDet", rownum), 
										XMLELEMENT("CdgItem",
												XMLELEMENT("TpoCodigo", 'INT1'),-- tipo de código que la empresa utiliza en el producto, DEFAULT = INT1
												XMLELEMENT("VlrCodigo", '')-- código del producto o servicio
											),
										XMLElement("IndExe", 1), -- DEBATIR,0 = Producto o servicio es afecto a IVA, 1 = Producto o servicio es exento de IVA, etc
										--XMLElement("RUTMandante", ''),-- RUT del Mandante si la venta o servicio es por cuenta de otro 
										XMLElement("NmbItem", TVD.GLOSA), -- nombre del producto o servicio
										--XMLElement("DscItem", ''), -- descripcion adicional del producto o servicio 
										XMLElement("QtyItem", TVD.CANTIDAD), -- cantidad del producto o servicio
										XMLElement("UnmdItem", TVD.UNIDADMEDIDA), -- unidad de medida del producto
										XMLElement("PrcItem", TVD.PRECIO), -- precio del producto o servicio
										XMLElement("MontoItem", TVD.IMPORTE)-- valor o monto final de la linea de detalle
									)
								ORDER BY TVD.ORDEN),
								XMLElement("DscRcgGlobal", 
									XMLElement("NroLinDR", 1),
									XMLElement("TpoMov", 'D'), -- D = Descuento, R = Recargo
									XMLElement("GlosaDR", 'Descuentos'),-- Breve descripción del descuento / recargo 
									XMLElement("TpoValor", '$'), -- % = porcentaje, $ = valor en moneda nacional
									XMLElement("ValorDR", COALESCE(V.DESCUENTO,0)), -- valor del descuento / recargo
									XMLElement("IndExeDR", 0) -- Indicador de exención de un descuento/recargo. 0 = Descuento/Recargo se aplica a Ítems afectos a IVA, etc.
								)
							)
						)
					) AS XML INTO S_XML
					FROM (SELECT P_ID_VENTA AS ID_VENTA ,T.* 
						FROM (SELECT DISTINCT 1 AS ORDEN,'CUOTA CANCELADA'||CASE WHEN IA.NOMBRE IS NULL THEN '' ELSE ': ' END||UPPER(REGEXP_REPLACE(LISTAGG(IA.NOMBRE, ', ')
							WITHIN GROUP (ORDER BY IA.ID_ARTICULO) over (partition by VD.ID_VENTA),'([^,]+)(,\1)*(,|$)', '\1\3')) AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,0 AS IMPORTE
							FROM VENTA_DETALLE VD 
							LEFT JOIN INVENTARIO_ARTICULO IA ON VD.ID_ARTICULO = IA.ID_ARTICULO 
							AND VD.ID_ARTICULO IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1)
							--LEFT JOIN JOSE.VW_FINANZAS_ARTICULO VFA ON D.ID_ARTICULO =C.ID_ARTICULO 
							WHERE VD.ID_VENTA = P_ID_VENTA
							UNION ALL 
							SELECT 2 AS ORDEN,'MONTO MENSUALIDAD A CANCELAR' AS GLOSA, 
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, COALESCE(SUM(VD.IMPORTE),0) AS PRECIO,COALESCE(SUM(VD.IMPORTE),0) AS EXENTO,COALESCE(SUM(VD.IMPORTE),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							AND VD.ID_ARTICULO IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1)
							UNION ALL 
							SELECT 3 AS ORDEN,'MONTO REBAJADO POR CONCEPTO DE EXENCION' AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,COALESCE(SUM(VD.DESCUENTO),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							UNION ALL 
							SELECT 4 AS ORDEN,'INTERESES MORATORIOS' AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,COALESCE(SUM(VD.OTROS_CARGOS),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							UNION ALL 
							SELECT 5 AS ORDEN,'OTROS COBROS' AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, COALESCE(SUM(VD.IMPORTE),0) AS PRECIO,COALESCE(SUM(VD.IMPORTE),0) AS EXENTO,COALESCE(SUM(VD.IMPORTE),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							AND VD.ID_ARTICULO NOT IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1))T) TVD
					INNER JOIN ELISEO.VENTA V ON TVD.ID_VENTA = V.ID_VENTA 
					WHERE V.ID_VENTA = P_ID_VENTA
					GROUP BY V.ID_VENTA,V.FECHA,V.GRAVADA,V.INAFECTA,V.IGV,V.EXONERADA,V.TOTAL,V.DESCUENTO,V.NUMERO,v.ID_CLIENTE_LEGAL,v.ID_CLIENTE;

				ELSE 

					SELECT XMLTYPE('<?xml version="1.0" encoding="ISO-8859-1"?>'||
						XMLELEMENT("DTE", XMLATTRIBUTES('1.0' AS "version"),
						XMLELEMENT("Documento",-- XMLATTRIBUTES('F1T39' AS "ID"),
							XMLELEMENT("Encabezado",
								XMLELEMENT("IdDoc",
									XMLELEMENT("TipoDTE", S_TIPODOC),-- Boleta electrónica
									XMLELEMENT("Folio", V.NUMERO),
									XMLELEMENT("FchEmis", TO_CHAR(V.FECHA,'YYYY-MM-DD')),
									XMLELEMENT("IndServicio", 3)--,
									--XMLELEMENT("IndMntNeto", CASE WHEN  V.IGV > 0  THEN 2 ELSE 0 END)
								),
								XMLELEMENT("Emisor",
									XMLELEMENT("RUTEmisor", S_ID_RUC),--XMLELEMENT("RUTEmisor", S_ID_RUC)
									XMLELEMENT("RznSocEmisor",S_RAZON_SOCIAL),
									--XMLELEMENT("GiroEmisor",''),-- Giro del negocio del Emisor
									XMLELEMENT("DirOrigen",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(S_ID_PERSONA_LEGAL)),'Sin Direccion'),'-','')),
									XMLELEMENT("CmnaOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,1),'')),
									XMLELEMENT("CiudadOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,3),''))
								),
								XMLELEMENT("Receptor",
									XMLELEMENT("RUTRecep",  NVL(FC_DOCUMENTO_CLIENTE(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-')),
									--XMLELEMENT("CdgIntRecep",''),
									XMLELEMENT("RznSocRecep",FC_NOMBRE_PERSONA(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),
									XMLELEMENT("Contacto",trim(coalesce(FC_EMAIL(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'it.upn@outlook.com'))),
									XMLELEMENT("DirRecep",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),'Sin Direccion'),'-','')),
									XMLELEMENT("CmnaRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),1),'')),
									XMLELEMENT("CiudadRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),3),''))
								),
								XMLELEMENT("Totales",
									XMLELEMENT("MntNeto", ROUND(V.TOTAL,0)),--MntNeto=(Monto Total detalle con IndExe=0)-Descuentos GLOBAL + recargos
									XMLELEMENT("MntExe", ROUND(V.INAFECTA,0)),-- Valor exento de la boleta electrónica; MntExe= suma de los detalles con IndExe=1
									XMLELEMENT("IVA", ROUND(V.IGV,0)),-- el valor IVA "Impuesto al Valor Agregado";IVA=MntNeto*19%
									XMLELEMENT("MntTotal", ROUND(V.TOTAL+V.IGV,0)),-- Valor total de la boleta electrónica
									XMLELEMENT("MontoNF", ROUND(V.EXONERADA,0))--, -- la suma de los montos de bienes o servicios no facturables de la boleta electrónica
								)
							),
							XMLAgg(
								XMLElement("Detalle", 
									XMLElement("NroLinDet", rownum), 
									XMLELEMENT("CdgItem",
											XMLELEMENT("TpoCodigo", 'INT1'),-- tipo de código que la empresa utiliza en el producto, DEFAULT = INT1
											XMLELEMENT("VlrCodigo", '')-- código del producto o servicio
										),
									XMLElement("IndExe", CASE WHEN  VD.IGV > 0 THEN 0 ELSE 1 END), -- DEBATIR,0 = Producto o servicio es afecto a IVA, 1 = Producto o servicio es exento de IVA, etc
									--XMLElement("RUTMandante", ''),-- RUT del Mandante si la venta o servicio es por cuenta de otro 
									XMLElement("NmbItem", VD.DETALLE), -- nombre del producto o servicio
									--XMLElement("DscItem", ''), -- descripcion adicional del producto o servicio 
									XMLElement("QtyItem", VD.CANTIDAD), -- cantidad del producto o servicio
									XMLElement("UnmdItem", 'UN'), -- unidad de medida del producto
									XMLElement("PrcItem", VD.PRECIO), -- precio del producto o servicio
									XMLElement("MontoItem", VD.IMPORTE)-- valor o monto final de la linea de detalle
								)
							)
					)--,
						--XMLElement("DscRcgGlobal", 
						--	XMLElement("NroLinDR", 1),
						--	XMLElement("TpoMov", 'D'), -- D = Descuento, R = Recargo
						--	XMLElement("GlosaDR", ''),-- Breve descripción del descuento / recargo 
						--	XMLElement("TpoValor", '%'), -- % = porcentaje, $ = valor en moneda nacional
						--	XMLElement("ValorDR", V.DE), -- valor del descuento / recargo
						--	XMLElement("IndExeDR", 0) -- Indicador de exención de un descuento/recargo. 0 = Descuento/Recargo se aplica a Ítems afectos a IVA, etc.
						--)
					)
				) AS XML INTO S_XML
				FROM ELISEO.VENTA_DETALLE VD
				INNER JOIN ELISEO.VENTA V ON VD.ID_VENTA = V.ID_VENTA 
				WHERE VD.ID_VENTA = P_ID_VENTA
				GROUP BY V.ID_VENTA,V.FECHA,V.GRAVADA,V.INAFECTA,V.IGV,V.EXONERADA,V.TOTAL,V.DESCUENTO_GLOBAL,V.NUMERO,v.ID_CLIENTE_LEGAL,v.ID_CLIENTE;
	    	END IF;
		ELSIF S_TIPODOC='33' OR S_TIPODOC='34' THEN
    		SELECT XMLTYPE('<?xml version="1.0" encoding="ISO-8859-1"?>'||
				XMLELEMENT("DTE", XMLATTRIBUTES('1.0' AS "version"),
					XMLELEMENT("Documento",-- XMLATTRIBUTES('F1T39' AS "ID"),
						XMLELEMENT("Encabezado",
							XMLELEMENT("IdDoc",
								XMLELEMENT("TipoDTE", S_TIPODOC),-- Factura electrónica
								XMLELEMENT("Folio", V.NUMERO),-- consultar-----si se envía 0 de autogenera el folio
								XMLELEMENT("FchEmis", TO_CHAR(V.FECHA,'YYYY-MM-DD')),-- Fecha de emisión
								XMLELEMENT("IndServicio", 3)--,-- 3=Boleta de Ventas y Servicios.   Debatir como va ser 
								--XMLELEMENT("IndMntNeto", 0)--, 0=Líneas de Detalle indicadas en Montos Brutos.
								--XMLELEMENT("PeriodoDesde", TO_CHAR(V.FECHA,'YYYY-MM-DD')),-- Solo si es IndServicio=1, que es "Boleta de Servicios Periódicos".
								--XMLELEMENT("PeriodoHasta", TO_CHAR(V.FECHA,'YYYY-MM-DD')),-- Solo si es IndServicio=1, que es "Boleta de Servicios Periódicos".
								--XMLELEMENT("FchVenc", TO_CHAR(V.FECHA,'YYYY-MM-DD'))-- Solo si es IndServicio=2, que es "Boleta de Servicios Periódicos Domiciliarios".
							),
							XMLELEMENT("Emisor",
								XMLELEMENT("RUTEmisor", S_ID_RUC),--XMLELEMENT("RUTEmisor", S_ID_RUC)
								XMLELEMENT("RznSocEmisor",S_RAZON_SOCIAL),
								--XMLELEMENT("GiroEmisor",''),-- Giro del negocio del Emisor
								XMLELEMENT("DirOrigen",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(S_ID_PERSONA_LEGAL)),'Sin Direccion'),'-','')),-- Direccion legal del emisor
								XMLELEMENT("CmnaOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,1),'')),-- Comuna legal del emisor
								XMLELEMENT("CiudadOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,3),''))-- Ciudad legal del emisor
							),
							XMLELEMENT("Receptor",
								XMLELEMENT("RUTRecep",  NVL(FC_DOCUMENTO_CLIENTE(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-')),--XMLELEMENT("RUTRecep", NVL(FC_DOCUMENTO_CLIENTE(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-'))
								--XMLELEMENT("CdgIntRecep",''),-- Este campo es utilizado para identificar de manera adicional al cliente, basado en una codificación interna.
								XMLELEMENT("RznSocRecep",FC_NOMBRE_PERSONA(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),
								XMLELEMENT("Contacto",trim(coalesce(FC_EMAIL(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'it.upn@outlook.com'))),-- Correo electrónico del cliente
								XMLELEMENT("DirRecep",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),'Sin Direccion'),'-','')),-- Direccion legal del cliente
								XMLELEMENT("CmnaRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),1),'')),-- Comuna legal del cliente
								XMLELEMENT("CiudadRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),3),''))-- Ciudad legal del cliente
							),
							XMLELEMENT("Totales",
								XMLELEMENT("MntNeto", ROUND(V.TOTAL,0)),--MntNeto=(Monto Total detalle con IndExe=0)-Descuentos GLOBAL + recargos;1000
								XMLELEMENT("MntExe", 0),-- Valor exento de la boleta electrónica; MntExe= suma de los detalles con IndExe=1;0
								XMLELEMENT("TasaIVA", 19),-- el valor de la TASA IVA "Impuesto al Valor Agregado";TasaIVA=19%;19
								XMLELEMENT("IVA",190),-- el valor IVA "Impuesto al Valor Agregado";IVA=MntNeto*19%;190
								XMLELEMENT("MntTotal", ROUND(V.TOTAL+190,0)),-- Valor total de la boleta electrónica (Total = Neto + Exento + IVA + Impuesto - Retencion - CredEC);1190
								XMLELEMENT("MontoNF", 0)--, -- la suma de los montos de bienes o servicios no facturables de la boleta electrónica;0
								--XMLELEMENT("TotalPeriodo", 0),-- TotalPeriodo = MntTotal + MontoNF
								--XMLELEMENT("SaldoAnterior", 0),-- saldo anterior de un periodo
								--XMLELEMENT("VlrPagar", 0)-- valor cobrado de la transacción realizada
							)
						),
						XMLAgg(
							XMLElement("Detalle", 
								XMLElement("NroLinDet", rownum), 
								XMLELEMENT("CdgItem",
										XMLELEMENT("TpoCodigo", 'INT1'),-- tipo de código que la empresa utiliza en el producto, DEFAULT = INT1
										XMLELEMENT("VlrCodigo", '')-- código del producto o servicio
									),
								XMLElement("IndExe", 1), -- DEBATIR,0 = Producto o servicio es afecto a IVA, 1 = Producto o servicio es exento de IVA, etc
								--XMLElement("RUTMandante", ''),-- RUT del Mandante si la venta o servicio es por cuenta de otro 
								XMLElement("NmbItem", VD.DETALLE), -- nombre del producto o servicio
								--XMLElement("DscItem", ''), -- descripcion adicional del producto o servicio 
								XMLElement("QtyItem", VD.CANTIDAD), -- cantidad del producto o servicio
								XMLElement("UnmdItem", 'UN'), -- unidad de medida del producto
								XMLElement("PrcItem", VD.PRECIO), -- precio del producto o servicio
								XMLElement("MontoItem", VD.IMPORTE)-- valor o monto final de la linea de detalle
							)
						)--,
				)--,
					--XMLAgg(
					--	XMLElement("DscRcgGlobal", 
					--		XMLElement("NroLinDR", rownum),
					--		XMLElement("TpoMov", 'D'), -- D = Descuento, R = Recargo
					--		XMLElement("GlosaDR", ''),-- Breve descripción del descuento / recargo 
					--		XMLElement("TpoValor", '%'), -- % = porcentaje, $ = valor en moneda nacional
					--		XMLElement("ValorDR", 12), -- valor del descuento / recargo
					--		XMLElement("IndExeDR", 0) -- Indicador de exención de un descuento/recargo. 0 = Descuento/Recargo se aplica a Ítems afectos a IVA, etc.
					--	)
					--)
				)
			) AS XML INTO S_XML
			FROM ELISEO.VENTA_DETALLE VD
			INNER JOIN ELISEO.VENTA V ON VD.ID_VENTA = V.ID_VENTA 
			WHERE VD.ID_VENTA = P_ID_VENTA
			GROUP BY V.ID_VENTA,V.FECHA,V.GRAVADA,V.INAFECTA,V.IGV,V.EXONERADA,V.TOTAL,V.DESCUENTO_GLOBAL,V.NUMERO,v.ID_CLIENTE_LEGAL,v.ID_CLIENTE;
		END IF;	
	RETURN(S_XML);
    END;

    FUNCTION FC_NOTA_CREDITO(P_ID_VENTA IN NUMBER) RETURN XMLType IS
        S_XML       XMLType;
        S_TIPODOC       VARCHAR2(3);
        L_ID_TIPOVENTA NUMBER;

        S_ID_RUC      VARCHAR2(20);
        S_RAZON_SOCIAL     VARCHAR2(100);
        S_ID_PERSONA_LEGAL     VARCHAR2(100);

       	L_IndMntNeto VARCHAR2(1);
 	BEGIN 
       SELECT COALESCE(MAX(M.ID_RUC),''),COALESCE(MAX(M.NOMBRE),''),COALESCE(MAX(E.ID_PERSONA),0) INTO S_ID_RUC,S_RAZON_SOCIAL,S_ID_PERSONA_LEGAL 
	    FROM VENTA V, CONTA_ENTIDAD E, CONTA_EMPRESA M
	    WHERE V.ID_ENTIDAD = E.ID_ENTIDAD
	    AND E.ID_EMPRESA = M.ID_EMPRESA
	    AND V.ID_VENTA = P_ID_VENTA;

	   	SELECT B.COD_ELECTRONICO ,A.ID_TIPOVENTA INTO S_TIPODOC, L_ID_TIPOVENTA 
	  	FROM VENTA A
	  	INNER JOIN ELISEO.TIPO_COMPROBANTE B ON A.ID_COMPROBANTE = B.ID_COMPROBANTE
	  	WHERE A.ID_VENTA=P_ID_VENTA;
	   	SELECT XMLTYPE('<?xml version="1.0" encoding="ISO-8859-1"?>'||
			XMLELEMENT("DTE", XMLATTRIBUTES('1.0' AS "version"),
				XMLELEMENT("Documento",-- XMLATTRIBUTES('F1T39' AS "ID"),
					XMLELEMENT("Encabezado",
						XMLELEMENT("IdDoc",
							XMLELEMENT("TipoDTE", S_TIPODOC),-- Nota de crédito electrónica
							XMLELEMENT("Folio", V.NUMERO),
							XMLELEMENT("FchEmis", TO_CHAR(V.FECHA,'YYYY-MM-DD')),
							XMLELEMENT("IndServicio", 3)--,
							--XMLELEMENT("IndMntNeto", CASE WHEN  V.IGV > 0  THEN 2 ELSE 0 END)
						),
						XMLELEMENT("Emisor",
							XMLELEMENT("RUTEmisor", S_ID_RUC),--XMLELEMENT("RUTEmisor", S_ID_RUC)
							XMLELEMENT("RznSocEmisor",S_RAZON_SOCIAL),
							--XMLELEMENT("GiroEmisor",''),-- Giro del negocio del Emisor
							XMLELEMENT("DirOrigen",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(S_ID_PERSONA_LEGAL)),'Sin Direccion'),'-','')),
							XMLELEMENT("CmnaOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,1),'')),
							XMLELEMENT("CiudadOrigen",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(S_ID_PERSONA_LEGAL,3),''))
						),
						XMLELEMENT("Receptor",
							XMLELEMENT("RUTRecep",  NVL(FC_DOCUMENTO_CLIENTE(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-')),
							--XMLELEMENT("CdgIntRecep",''),
							XMLELEMENT("RznSocRecep",FC_NOMBRE_PERSONA(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),
							XMLELEMENT("Contacto",trim(coalesce(FC_EMAIL(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'it.upn@outlook.com'))),
							XMLELEMENT("DirRecep",REGEXP_REPLACE(nvl(TRIM(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_DIRECCION(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),'Sin Direccion'),'-','')),
							XMLELEMENT("CmnaRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),1),'')),
							XMLELEMENT("CiudadRecep",NVL(ELISEO.PKG_SALES_FACTURACION.FC_CLIENTE_UBIGEO(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),3),''))
						),
						XMLELEMENT("Totales",
							XMLELEMENT("MntNeto", ROUND(V.TOTAL,0)),--MntNeto=(Monto Total detalle con IndExe=0)-Descuentos GLOBAL + recargos
							XMLELEMENT("TasaIVA", 0),-- el valor TasaIVA "Impuesto al Valor Agregado";TasaIVA=19%
							XMLELEMENT("IVA", 0),-- el valor IVA "Impuesto al Valor Agregado";IVA=MntNeto*19%
							XMLELEMENT("MntTotal", ROUND(V.TOTAL,0))-- Valor total de la boleta electrónica+IGV=
						)
					),
					XMLAgg(
						XMLElement("Detalle", 
							XMLElement("NroLinDet", rownum), 
							XMLELEMENT("CdgItem",
									XMLELEMENT("TpoCodigo", 'INT1'),-- tipo de código que la empresa utiliza en el producto, DEFAULT = INT1
									XMLELEMENT("VlrCodigo", '')-- código del producto o servicio
								), 
							XMLElement("NmbItem", TVD.GLOSA), -- nombre del producto o servicio
							XMLElement("QtyItem", TVD.CANTIDAD), -- cantidad del producto o servicio
							XMLElement("UnmdItem", TVD.UNIDADMEDIDA), -- unidad de medida del producto
							XMLElement("PrcItem", TVD.PRECIO), -- precio del producto o servicio
							XMLElement("MontoItem", TVD.IMPORTE)-- valor o monto final de la linea de detalle
						)
					ORDER BY TVD.ORDEN),
					XMLElement("Referencia", 
						XMLElement("NroLinRef", 1), 
						XMLElement("TpoDocRef",(SELECT COD_ELECTRONICO FROM ELISEO.TIPO_COMPROBANTE WHERE ID_COMPROBANTE=V.ID_COMPROBANTE_REF AND ROWNUM=1)),
						XMLElement("FolioRef", V.NUMERO_REF),
						XMLElement("FchRef", TO_CHAR(VP.FECHA,'YYYY-MM-DD')), --es obligatorio
						XMLElement("CodRef", (SELECT CODIGO FROM ELISEO.TIPO_NOTA_DC WHERE ID_TIPONOTA=V.ID_TIPONOTA AND ROWNUM=1)),
						XMLElement("RazonRef", V.GLOSA)
					),
					XMLElement("Adicional",
						XMLElement("NodosA", 
							XMLElement("A1", ''),
							XMLElement("A2", ''),
							XMLElement("A3", 1),
							XMLElement("A4", ''),
							XMLElement("A5", ''),
							XMLElement("A6", '')
						)
					)
				)
			)
		) AS XML INTO S_XML
		FROM (SELECT P_ID_VENTA AS ID_VENTA ,T.* 
				FROM (SELECT DISTINCT 1 AS ORDEN,'CUOTA CANCELADA'||CASE WHEN IA.NOMBRE IS NULL THEN '' ELSE ': ' END||UPPER(REGEXP_REPLACE(LISTAGG(IA.NOMBRE, ', ')
					WITHIN GROUP (ORDER BY IA.ID_ARTICULO) over (partition by VD.ID_VENTA),'([^,]+)(,\1)*(,|$)', '\1\3')) AS GLOSA,
					'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,0 AS IMPORTE
					FROM VENTA_DETALLE VD 
					LEFT JOIN INVENTARIO_ARTICULO IA ON VD.ID_ARTICULO = IA.ID_ARTICULO
					AND VD.ID_ARTICULO IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1)
					--LEFT JOIN JOSE.VW_FINANZAS_ARTICULO VFA ON D.ID_ARTICULO =C.ID_ARTICULO 
					WHERE VD.ID_VENTA = P_ID_VENTA
					UNION ALL 
					SELECT 2 AS ORDEN,'MONTO MENSUALIDAD A CANCELAR' AS GLOSA, 
					'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, COALESCE(SUM(VD.IMPORTE),0) AS PRECIO,COALESCE(SUM(VD.IMPORTE),0) AS EXENTO,COALESCE(SUM(VD.IMPORTE),0) AS IMPORTE
					FROM VENTA_DETALLE VD 
					WHERE VD.ID_VENTA = P_ID_VENTA
					AND VD.ID_ARTICULO IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1)
					UNION ALL 
					SELECT 3 AS ORDEN,'MONTO REBAJADO POR CONCEPTO DE EXENCION' AS GLOSA,
					'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,COALESCE(SUM(VD.DESCUENTO),0) AS IMPORTE
					FROM VENTA_DETALLE VD 
					WHERE VD.ID_VENTA = P_ID_VENTA
					UNION ALL 
					SELECT 4 AS ORDEN,'INTERESES MORATORIOS' AS GLOSA,
					'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,COALESCE(SUM(VD.OTROS_CARGOS),0) AS IMPORTE
					FROM VENTA_DETALLE VD 
					WHERE VD.ID_VENTA = P_ID_VENTA
					UNION ALL 
					SELECT 5 AS ORDEN,'OTROS COBROS' AS GLOSA,
					'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, COALESCE(SUM(VD.IMPORTE),0) AS PRECIO,COALESCE(SUM(VD.IMPORTE),0) AS EXENTO,COALESCE(SUM(VD.IMPORTE),0) AS IMPORTE
					FROM VENTA_DETALLE VD 
					WHERE VD.ID_VENTA = P_ID_VENTA
					AND VD.ID_ARTICULO NOT IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1))T) TVD
		INNER JOIN ELISEO.VENTA V ON TVD.ID_VENTA = V.ID_VENTA 
		INNER JOIN ELISEO.VENTA VP ON VP.ID_VENTA = V.ID_PARENT  
		WHERE V.ID_VENTA = P_ID_VENTA
		GROUP BY V.ID_VENTA,V.FECHA,V.GRAVADA,V.INAFECTA,V.IGV,V.EXONERADA,V.TOTAL,V.DESCUENTO_GLOBAL,V.NUMERO,V.ID_CLIENTE_LEGAL,V.ID_CLIENTE,V.ID_COMPROBANTE_REF,V.NUMERO_REF,VP.FECHA,V.GLOSA,V.ID_TIPONOTA;

		RETURN(S_XML);
    END;

    PROCEDURE SP_VENTA_ELECTRONICA_DESIS(P_ID_VENTA IN NUMBER) IS
        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(11);
        L_RUC VARCHAR2(11);
        L_ID_COMPROBANTE VARCHAR2(3);
        L_SERIE VARCHAR2(4);
        L_NUMERO VARCHAR2(8);
        L_XML XMLtype;
        L_EMISOR_ID NUMBER:=1; --EMPRESA CON RUC UPeU
        L_HASH VARCHAR2(50);
        L_ORIGENID NUMBER := 0;
        L_TIPOEMISORID VARCHAR2(20);
        L_TIPODTE NUMBER;
       	L_COUNT NUMBER;

    BEGIN  


        select coalesce(max(origenid),0) into L_ORIGENID from eliseo.VENTA_ELECTRONICA_DESIS ved
        where origenid = P_ID_VENTA;

        IF L_ORIGENID = 0 THEN 
        --IF 7 = 7 THEN 

            SELECT 
                    A.ID_ENTIDAD,A.ID_DEPTO, B.COD_ELECTRONICO ,A.SERIE,A.NUMERO INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_COMPROBANTE,L_SERIE,L_NUMERO
            FROM VENTA A
	  		INNER JOIN ELISEO.TIPO_COMPROBANTE B ON A.ID_COMPROBANTE = B.ID_COMPROBANTE
            WHERE A.ID_VENTA = P_ID_VENTA;

            SELECT B.ID_RUC, EMISORID, TIPOEMISORID INTO L_RUC, L_EMISOR_ID, L_TIPOEMISORID
            FROM CONTA_ENTIDAD A, CONTA_EMPRESA B
            WHERE A.ID_EMPRESA = B.ID_EMPRESA
            AND A.ID_ENTIDAD = L_ID_ENTIDAD;

            IF L_ID_COMPROBANTE IN ('39','41','33','34') THEN
                SELECT PKG_SALES_FACTURACION_DESIS.FC_VENTA(P_ID_VENTA) INTO L_XML FROM DUAL;
            END IF;
            IF L_ID_COMPROBANTE = '61' THEN 
                SELECT PKG_SALES_FACTURACION_DESIS.FC_NOTA_CREDITO(P_ID_VENTA) INTO L_XML FROM DUAL;
            END IF;
            --IF L_ID_COMPROBANTE = '08' THEN 
                --SELECT PKG_SALES_FACTURACION_DESIS.FC_NOTA_DEBITO(P_ID_VENTA) INTO L_XML FROM DUAL;
            --END IF;
            --FACTURACION ELECTRONICA LAMB

            IF L_TIPOEMISORID = 'DESIS' THEN

            	SELECT COUNT(1) INTO L_COUNT FROM ELISEO.VENTA_ELECTRONICA_DESIS 
            	WHERE ORIGENID = P_ID_VENTA AND TIPODTE=L_ID_COMPROBANTE AND FOLIO=L_NUMERO;
            	IF L_COUNT>0 THEN 
            		UPDATE ELISEO.VENTA_ELECTRONICA_DESIS SET 
            		EMISORID=L_EMISOR_ID,COMPROBANTE=L_XML.GETCLOBVAL()
            		WHERE ORIGENID = P_ID_VENTA AND TIPODTE=L_ID_COMPROBANTE AND FOLIO=L_NUMERO;
            	ELSE 
		             INSERT INTO VENTA_ELECTRONICA_DESIS(EMISORID,ORIGENID,FECHA,TIPODTE,FOLIO,COMPROBANTE, PROCESADO, ENVIADO,ESTADO)
		             VALUES(L_EMISOR_ID,P_ID_VENTA,SYSDATE,L_ID_COMPROBANTE,L_NUMERO,L_XML.GETCLOBVAL(), 0, 0,1);
	            END IF;

            END IF;

        END IF;


    END SP_VENTA_ELECTRONICA_DESIS;
END PKG_SALES_FACTURACION_DESIS;