-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE PKG_PRESUPUESTO AS
  PROCEDURE SP_PREGRADO_CONCEPTO_PRECIO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_PREGRADO_PROYECCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_PROESAD_PROYECCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_POSGRADO_PROYECCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ID_DEPTO VARCHAR2,P_ID_EAP NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_DELETE_POSGRADO_PROYECCCION(P_ID_PROYECCION NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_PREGRADO_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_PROESAD_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_POSGRADO_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_ADMISION_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_PREGRADO_PRESUPUESTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_PERSONA NUMBER,P_ID_PSTONEGOCIO NUMBER,P_ID_EJE NUMBER, P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  
  PROCEDURE SP_RESIDENCIA_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_RESIDENCIA_CONCEPTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  
  PROCEDURE SP_CONSERVATORIO_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_CONSERVATORIO_CONCEPTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  
  PROCEDURE SP_IDIOMAS_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_IDIOMAS_CONCEPTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  
  PROCEDURE SP_ADD_BUDGET_DETAILS(P_ID_PRESUPUESTO NUMBER,P_ID_ACTIVIDAD NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_DEPTO_ASIENTO VARCHAR2,P_DESCRIPCION VARCHAR2,P_CANTIDAD NUMBER,P_PUNIDAD NUMBER,
        P_A NUMBER,  P_B NUMBER,  P_C NUMBER, P_D NUMBER, P_E NUMBER, P_F NUMBER, P_G NUMBER);
  PROCEDURE SP_ELIMINAR_PRESUPUESTO(P_ID_PRESUPUESTO NUMBER,P_ID_PERSONA NUMBER);
  PROCEDURE SP_ELIMINAR_PRESUPUESTO_USER(P_ID_PRESUPUESTO NUMBER,P_ID_PERSONA NUMBER);
  PROCEDURE SP_ASIENTO_PRESUPUESTO(P_ID_PRESUPUESTO NUMBER,P_ID_PERSONA NUMBER);
  PROCEDURE SP_VALIDA_PRESUPUESTO(P_ID_PRESUPUESTO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) ;
  PROCEDURE SP_GENERAR_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_TIPO VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_ACTUALIZAR_TIPOCONCEPTO(P_ID_CONCEPTO_PRECIO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GEN_PRESUPUESTO_DET_DIST(P_ID_PRESUPUESTO NUMBER);
  PROCEDURE SP_GEN_PSTO_DET_DIST_AUXI(P_ID_PRESUPUESTO NUMBER);
  PROCEDURE SP_VALIDA_GEN_PRESUPUESTO(P_ID_EVENTO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
END PKG_PRESUPUESTO;


CREATE OR REPLACE PACKAGE BODY        PKG_PRESUPUESTO AS
  PROCEDURE SP_PREGRADO_CONCEPTO_PRECIO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_evento number;
  BEGIN
  
    SELECT COALESCE(MAX(ID_CONCEPTO_PRECIO),0) INTO l_contar FROM PSTO_PREGRADO_CONCEPTO_PRECIO;
    
    select id_evento  into l_id_evento from psto_evento where id_auxiliar=P_ID_AUXILIAR;
    
  
    INSERT INTO PSTO_PREGRADO_CONCEPTO_PRECIO(
      ID_CONCEPTO_PRECIO,
      ID_ACTIVIDAD, 
      ID_ENTIDAD,
      ID_DEPTO_PADRE,
      ID_ANHO,
      IMPORTE_I,
      IMPORTE_II,
      IMPORTE_BECA_I,
      IMPORTE_BECA_II,
      TIPO,
      ID_AUXILIAR
    )
    SELECT 
      ROWNUM + l_contar AS ID_CONCEPTO_PRECIO,
      M.ID_ACTIVIDAD, 
      P_ID_ENTIDAD,
      P_ID_DEPTO_PADRE,
      P_ID_ANHO,
      M.IMPORTEUNIT1,
      M.IMPORTEUNIT2,
      M.IMPORTEUNIT1,
      M.IMPORTEUNIT2,
      M.TIPO,
      P_ID_AUXILIAR
    FROM (
      SELECT 
      CASE WHEN A.ESDESCUENTO='S' THEN 'D' ELSE 'M' END AS TIPO,
      A.ID_ACTIVIDAD, 
      P_ID_ENTIDAD,
      coalesce(A.IMPORTEUNIT1,0) as IMPORTEUNIT1,
      coalesce(A.IMPORTEUNIT2,0) as IMPORTEUNIT2
      FROM PSTO_ACTIVIDAD A
      WHERE A.ESTADO='1'
      AND ID_EVENTO=l_id_evento
      AND A.ID_ACTIVIDAD NOT IN(
        SELECT B.ID_ACTIVIDAD FROM PSTO_PREGRADO_CONCEPTO_PRECIO B
        WHERE B.ID_ENTIDAD=P_ID_ENTIDAD
        AND B.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND B.ID_ANHO=P_ID_ANHO
        AND B.ID_AUXILIAR=P_ID_AUXILIAR
      )  ORDER BY A.ID_ACTIVIDAD
    )M;
    
  
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_PREGRADO_CONCEPTO_PRECIO;
  PROCEDURE SP_PREGRADO_PROYECCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_depto varchar2(20);
    l_ciclos number;
    l_ciclo number;
    l_afecta varchar2(1);
    l_id_proyeccion number;
    l_incremento number:=0;
    l_incremento_n number:=0;
    l_afecta_incremento varchar2(1);
    
    l_cantidad_i number; 
    l_cantidad_ii number;
    l_credito_i number;
    l_credito_ii number;
    l_disercion_i number; 
    l_disercion_ii number;
    l_ciclo_menos number;
    l_anho_menos number;
    l_eap varchar2(20);
    l_horas_i number:=0;
    l_horas_ii number:=0;
    CURSOR curdepto IS		
        /*SELECT ID_DEPTO,CICLOS,CASE WHEN LOWER(NOMBRE) LIKE '%beca 18%' then 'N' else 'S' end,EAP
        FROM VW_PTO_DEPTOS
        WHERE ID_ENTIDAD=P_ID_ENTIDAD
        AND TIPO='IP'
        AND SUBSTR(ID_DEPTO,1,1)=P_ID_DEPTO_PADRE
        ORDER BY  FAC, ID_DEPTO;	*/
        SELECT A.ID_DEPTO,COALESCE(C.CICLO,0),CASE WHEN C.ID_TIPO_DEPTO ='BE' then 'N' else 'S' end,COALESCE(A.ID_EAP_DEPTO,A.ID_DEPTO) AS  ID_EAP_DEPTO
        FROM PSTO_AREA_DEPTO A, PSTO_EAP_AREA_DEPTO B,PSTO_EAP C,PSTO_AREA D
        WHERE A.ID_AREA=D.ID_AREA
        AND A.ID_AREA_DEPTO=B.ID_AREA_DEPTO
        AND B.ID_EAP=C.ID_EAP
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND C.ID_TIPO_DEPTO IN('EP','BE')
        AND D.ID_TIPO_AREA='FA'
        AND D.ID_DEPTO=P_ID_DEPTO_PADRE
        ORDER BY COALESCE(A.ID_EAP_DEPTO,A.ID_DEPTO),A.ID_DEPTO;
        
  BEGIN
    
    OPEN curdepto;
    FETCH curdepto INTO l_id_depto,l_ciclos,l_afecta,l_eap;
    
    WHILE curdepto%FOUND LOOP
      l_ciclo:=1;
      
      WHILE l_ciclo <= l_ciclos
      LOOP
          l_ciclo_menos:=l_ciclo - 1;
          l_anho_menos:=P_ID_ANHO - 1;
          l_afecta_incremento:=l_afecta;
          
          SELECT COUNT(*) INTO l_contar FROM PSTO_PREGRADO_PROYECCCION
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=l_id_depto
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND CICLO=l_ciclo
          AND ID_AUXILIAR=P_ID_AUXILIAR;
          
          if l_contar=0 then  
            if l_ciclo=1 then
                l_disercion_i:=0;
                l_disercion_ii:=0;
                l_incremento_n:=l_incremento;
            else
            
                SELECT FC_PORCENTAJE_DISERCION_ACAD(P_ID_ENTIDAD,l_eap,P_ID_ANHO,l_ciclo) INTO l_disercion_i FROM DUAL;
                SELECT FC_PORCENTAJE_DISERCION_ACAD(P_ID_ENTIDAD,l_eap,P_ID_ANHO,l_ciclo) INTO l_disercion_ii FROM DUAL;
                
                --l_disercion_i:=0;
                --l_disercion_ii:=0;
                
                l_incremento_n:=0;
            end if;
            
            if (l_ciclo=1 or l_ciclo=2) and l_afecta='N' then  --solo I y II ciclo
              l_afecta_incremento:='N';
              l_cantidad_i:=0;
              l_cantidad_ii:=0;
            else
              l_afecta_incremento:='S';
              
              IF l_ciclo>1 THEN 
                SELECT FC_CANTIDAD_ALUMNO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-2',l_ciclo_menos,l_afecta) INTO l_cantidad_i FROM DUAL;
                
                SELECT CANTIDAD_I INTO l_cantidad_ii FROM PSTO_PREGRADO_PROYECCCION
                WHERE ID_ENTIDAD=P_ID_ENTIDAD
                AND ID_DEPTO=l_id_depto
                AND ID_ANHO=P_ID_ANHO
                AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
                AND CICLO=l_ciclo_menos
                AND ID_AUXILIAR=P_ID_AUXILIAR;
                
                --l_cantidad_i:=0; 
                --l_cantidad_ii:=0;
              ELSE
                l_cantidad_i:=0; 
                l_cantidad_ii:=0;
              END IF;
            end if;
            
            
            SELECT FC_CANTIDAD_CREDITO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-1',l_ciclo) INTO l_credito_i FROM DUAL;
            SELECT FC_CANTIDAD_CREDITO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-2',l_ciclo) INTO l_credito_ii FROM DUAL;
            --l_credito_i:=0;
            --l_credito_ii:=0;
          
            select coalesce(max(ID_PROYECCION),0)+1 into l_id_proyeccion from PSTO_PREGRADO_PROYECCCION;
          
            insert into PSTO_PREGRADO_PROYECCCION(
                  ID_PROYECCION, 
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_ANHO,
                  ID_DEPTO_PADRE, 
                  CICLO,
                  INCREMENTO,
                  AFECTA_INCREMENTO,
                  CANTIDAD_I, 
                  CANTIDAD_II,
                  CREDITO_I,
                  CREDITO_II,
                  HORAS_I,
                  HORAS_II,
                  DISERCION_I, 
                  DISERCION_II,
                  BECA,
                  ID_AUXILIAR
              )values(
                  l_id_proyeccion, 
                  P_ID_ENTIDAD,
                  l_id_depto,
                  P_ID_ANHO,
                  P_ID_DEPTO_PADRE, 
                  l_ciclo,
                  l_incremento_n,
                  l_afecta_incremento,
                  l_cantidad_i, 
                  l_cantidad_ii,
                  l_credito_i,
                  l_credito_ii,
                  l_horas_i,
                  l_horas_ii,
                  l_disercion_i,
                  l_disercion_ii,
                  CASE WHEN l_afecta='N' THEN 'S' ELSE 'N' END,
                  P_ID_AUXILIAR
              );
         end if;
         l_ciclo := l_ciclo +1;
      END LOOP;
      
    
      FETCH curdepto INTO l_id_depto,l_ciclos,l_afecta,l_eap;

    END LOOP;
    CLOSE curdepto; 
        
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
    
  END SP_PREGRADO_PROYECCION;
  
  PROCEDURE SP_PROESAD_PROYECCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_depto varchar2(20);
    l_ciclos number;
    l_ciclo number;
    l_id_proyeccion number;
    l_incremento number:=0;
    l_incremento_n number:=0;
    l_afecta_incremento varchar2(1);
    l_sede_lima varchar2(1);
    l_cantidad_i number; 
    l_cantidad_ii number;
    l_credito_i number;
    l_credito_ii number;
    l_disercion_i number; 
    l_disercion_ii number;
    l_ciclo_menos number;
    l_anho_menos number;
    l_eap varchar2(20);
    l_id_eap number;
    l_afecta varchar(1):='S';
    l_horas_i number:=0;
    l_horas_ii number:=0;
    CURSOR curdepto IS	
        
        /*SELECT A.ID_DEPTO,A.CICLOS,A.EAP,B.ID_EAP,case when A.ID_DEPTO='13060202' THEN 'S' ELSE 'N' END AS SEDE
        FROM VW_PTO_DEPTOS A, PSTO_EAP  B
        WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.TIPO='PR'
        AND SUBSTR(A.ID_DEPTO,1,1)=P_ID_DEPTO_PADRE
        AND B.PROESAD='1'
        ORDER BY  A.FAC, A.ID_DEPTO,B.ID_EAP;*/
        
        SELECT A.ID_DEPTO,COALESCE(C.CICLO,0),COALESCE(A.ID_EAP_DEPTO,A.ID_DEPTO) AS  ID_EAP_DEPTO, B.ID_EAP_DEPTO_AREA,COALESCE(B.SEDE_PRINCIPAL,'N') AS SEDE_PRINCIPAL
        FROM PSTO_AREA_DEPTO A, PSTO_EAP_AREA_DEPTO B,PSTO_EAP C,PSTO_AREA D
        WHERE A.ID_AREA=D.ID_AREA
        AND A.ID_AREA_DEPTO=B.ID_AREA_DEPTO
        AND B.ID_EAP=C.ID_EAP
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_TIPO_DEPTO IN('EP')
        AND D.ID_TIPO_AREA='PR'
        AND D.ID_DEPTO=P_ID_DEPTO_PADRE
        ORDER BY COALESCE(A.ID_EAP_DEPTO,A.ID_DEPTO),A.ID_DEPTO,C.ID_EAP;
        
                
  BEGIN
    
    OPEN curdepto;
    FETCH curdepto INTO l_id_depto,l_ciclos,l_eap,l_id_eap,l_sede_lima;
    
    WHILE curdepto%FOUND LOOP
      l_ciclo:=1;
      
      WHILE l_ciclo <= l_ciclos
      LOOP
          l_ciclo_menos:=l_ciclo - 1;
          l_anho_menos:=P_ID_ANHO - 1;
          l_afecta_incremento:='S';
          
          SELECT COUNT(*) INTO l_contar FROM PSTO_PREGRADO_PROYECCCION
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=l_id_depto
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_EAP_DEPTO_AREA=l_id_eap
          AND CICLO=l_ciclo
          AND ID_AUXILIAR=P_ID_AUXILIAR;
          
          if l_contar=0 then  
            if l_ciclo=1 then
                l_disercion_i:=0;
                l_disercion_ii:=0;
                l_incremento_n:=l_incremento;
            else
            
                SELECT FC_PORCENTAJE_DISERCION_ACAD(P_ID_ENTIDAD,l_eap,P_ID_ANHO,l_ciclo) INTO l_disercion_i FROM DUAL;
                SELECT FC_PORCENTAJE_DISERCION_ACAD(P_ID_ENTIDAD,l_eap,P_ID_ANHO,l_ciclo) INTO l_disercion_ii FROM DUAL;
                
                --l_disercion_i:=0;
                --l_disercion_ii:=0;
                
                l_incremento_n:=0;
            end if;
            
            if (l_ciclo=1 or l_ciclo=2) and l_afecta='N' then  --solo I y II ciclo
              l_afecta_incremento:='N';
              l_cantidad_i:=0;
              l_cantidad_ii:=0;
            else
              l_afecta_incremento:='S';
              
              IF l_ciclo>1 THEN 
                SELECT FC_CANTIDAD_ALUMNO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-2',l_ciclo_menos,l_afecta) INTO l_cantidad_i FROM DUAL;
                
                SELECT CANTIDAD_I INTO l_cantidad_ii FROM PSTO_PREGRADO_PROYECCCION
                WHERE ID_ENTIDAD=P_ID_ENTIDAD
                AND ID_DEPTO=l_id_depto
                AND ID_ANHO=P_ID_ANHO
                AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
                AND CICLO=l_ciclo_menos
                AND ID_AUXILIAR=P_ID_AUXILIAR
                AND ID_EAP_DEPTO_AREA=l_id_eap;
                --l_cantidad_i:=0; 
                --l_cantidad_ii:=0;
              ELSE
                l_cantidad_i:=0; 
                l_cantidad_ii:=0;
              END IF;
            end if;
            
            
            SELECT FC_CANTIDAD_CREDITO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-1',l_ciclo) INTO l_credito_i FROM DUAL;
            SELECT FC_CANTIDAD_CREDITO_ACAD(P_ID_ENTIDAD,l_eap,l_anho_menos||'-2',l_ciclo) INTO l_credito_ii FROM DUAL;
            --l_credito_i:=0;
            --l_credito_ii:=0;
          
            select coalesce(max(ID_PROYECCION),0)+1 into l_id_proyeccion from PSTO_PREGRADO_PROYECCCION;
          
            insert into PSTO_PREGRADO_PROYECCCION(
                  ID_PROYECCION, 
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_ANHO,
                  ID_DEPTO_PADRE, 
                  CICLO,
                  INCREMENTO,
                  AFECTA_INCREMENTO,
                  CANTIDAD_I, 
                  CANTIDAD_II,
                  CREDITO_I,
                  CREDITO_II,
                  HORAS_I,
                  HORAS_II,
                  DISERCION_I, 
                  DISERCION_II,
                  BECA,
                  ID_AUXILIAR,
                  ID_EAP_DEPTO_AREA
              )values(
                  l_id_proyeccion, 
                  P_ID_ENTIDAD,
                  l_id_depto,
                  P_ID_ANHO,
                  P_ID_DEPTO_PADRE, 
                  l_ciclo,
                  l_incremento_n,
                  l_afecta_incremento,
                  l_cantidad_i, 
                  l_cantidad_ii,
                  l_credito_i,
                  l_credito_ii,
                  l_horas_i,
                  l_horas_ii,
                  l_disercion_i,
                  l_disercion_ii,
                  l_sede_lima,
                  P_ID_AUXILIAR,
                  l_id_eap
              );
         end if;
         l_ciclo := l_ciclo +1;
      END LOOP;
      
    
      FETCH curdepto INTO l_id_depto,l_ciclos,l_eap,l_id_eap,l_sede_lima;

    END LOOP;
    CLOSE curdepto; 
        
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
    
  END SP_PROESAD_PROYECCION;
  PROCEDURE SP_POSGRADO_PROYECCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ID_DEPTO VARCHAR2,P_ID_EAP NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_nombre varchar2(255);
      l_id_proyeccion number;
      l_id_pregrado_proceso number;
  BEGIN
  
      SELECT NOMBRE INTO l_nombre FROM CONTA_ENTIDAD_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO;
     
      SELECT COUNT(*) INTO l_contar FROM PSTO_PREGRADO_PROYECCCION
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND ID_DEPTO=P_ID_DEPTO
      AND ID_EAP=P_ID_EAP
      AND ID_AUXILIAR=P_ID_AUXILIAR;
      
      IF l_contar=0 THEN
      
        select coalesce(max(ID_PROYECCION),0)+1 into l_id_proyeccion from PSTO_PREGRADO_PROYECCCION;

        insert into PSTO_PREGRADO_PROYECCCION(
                  ID_PROYECCION,
                  ID_ENTIDAD,
                  ID_DEPTO,
                  ID_ANHO,
                  ID_DEPTO_PADRE,
                  CICLO,
                  INCREMENTO,
                  AFECTA_INCREMENTO,
                  CANTIDAD_I,
                  CANTIDAD_II,
                  CREDITO_I,
                  CREDITO_II,
                  DISERCION_I,
                  DISERCION_II,
                  HORAS_I,
                  HORAS_II,
                  BECA,
                  ID_AUXILIAR,
                  ID_EAP_DEPTO_AREA,
                  ID_EAP,
                  NOM_DEPTO
                )values(
                  l_id_proyeccion,
                  P_ID_ENTIDAD,
                  P_ID_DEPTO,
                  P_ID_ANHO,
                  P_ID_DEPTO_PADRE,
                  0,--CICLO,
                  NULL,--INCREMENTO,
                  NULL,--AFECTA_INCREMENTO,
                  0,--CANTIDAD_I,
                  0,--CANTIDAD_II,
                  0,--CREDITO_I,
                  0,--CREDITO_II,
                  0,--DISERCION_I,
                  0,--DISERCION_II,
                  0,--HORAS_I,
                  0,--HORAS_II,
                  NULL,--BECA,
                  P_ID_AUXILIAR,
                  NULL,--ID_EAP_DEPTO_AREA,
                  P_ID_EAP,
                  l_nombre
                );
                
    
    
          ----PROCESO PREGRADO
          
          SELECT COUNT(*) INTO l_contar FROM PSTO_PREGRADO_PROCESO  
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_DEPTO=P_ID_DEPTO
          AND ID_AUXILIAR=P_ID_AUXILIAR;
          
          IF l_contar=0 THEN
          
            SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0)+1 INTO l_id_pregrado_proceso FROM PSTO_PREGRADO_PROCESO;
        
            INSERT INTO PSTO_PREGRADO_PROCESO(
              ID_PREGRADO_PROCESO,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_ANHO,
              ID_DEPTO_PADRE,
              ARMADA,
              IMP_MAT,
              CREDITO_1,
              CREDITO_2_5,
              TOTALCREDITO_1_I,
              TOTALCREDITO_2_5_I,
              TOTAL_ALUMNO_I,
              TOTALCREDITO_1_II,
              TOTALCREDITO_2_5_II,
              TOTAL_ALUMNO_II,
              TOTAL_HORAS_I ,
              TOTAL_HORAS_II ,
              CONVOCA,
              ID_AUXILIAR,
              NOM_DEPTO
            )values(
              l_id_pregrado_proceso,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_ANHO,
              P_ID_DEPTO_PADRE,
              0,--ARMADA,
              0,--IMP_MAT,
              0,--CREDITO_1,
              0,--CREDITO_2_5,
              0,--TOTALCREDITO_1_I,
              0,--TOTALCREDITO_2_5_I,
              0,--TOTAL_ALUMNO_I,
              0,--TOTALCREDITO_1_II,
              0,--TOTALCREDITO_2_5_II,
              0,--TOTAL_ALUMNO_II,
              0,--TOTAL_HORAS_I ,
              0,--TOTAL_HORAS_II ,
              null,--CONVOCA,
              P_ID_AUXILIAR,
              l_nombre
            );
            
            
            INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
            ID_PREGRADO_PROCESO, 
            ID_CONCEPTO_PRECIO, 
            IMPORTE_I, 
            IMPORTE_II, 
            TOTAL_I, 
            TOTAL_II,
            TIPO
            )
            
             SELECT 
              P.ID_PREGRADO_PROCESO,
              C.ID_CONCEPTO_PRECIO,
              0 AS IMPORTE_I,
              0 AS IMPORTE_II,
              0 AS TOTAL_I,
              0 AS TOTAL_II,
              C.TIPO
              FROM PSTO_PREGRADO_CONCEPTO_PRECIO C,PSTO_PREGRADO_PROCESO P
              WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
              AND C.ID_ANHO=P.ID_ANHO
              AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
              AND C.ID_ENTIDAD=P_ID_ENTIDAD
              AND C.ID_ANHO=P_ID_ANHO
              AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
              AND P.ID_PREGRADO_PROCESO=l_id_pregrado_proceso
              AND C.ID_AUXILIAR=P.ID_AUXILIAR
              AND P.ID_AUXILIAR=P_ID_AUXILIAR	
              ORDER BY P.ID_DEPTO,P.CONVOCA,C.ID_ACTIVIDAD;
                    
        end if;        
      ELSE
        l_error:=1;
        l_msgerror:='Ya esta asignado '||l_nombre;
      END IF;
      
      P_ERROR:=l_error;
      P_MSGERROR:=SUBSTR(l_msgerror,1,155);
      
  END SP_POSGRADO_PROYECCION;
  
  
  PROCEDURE SP_DELETE_POSGRADO_PROYECCCION(P_ID_PROYECCION NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    L_ID_ENTIDAD NUMBER;
    L_ID_ANHO NUMBER;
    L_ID_DEPTO_PADRE  varchar2(10);
    L_ID_DEPTO varchar2(10);
    L_ID_EAP NUMBER;
    L_ID_AUXILIAR NUMBER;
   BEGIN
          SELECT 
          ID_ENTIDAD,
          ID_ANHO,
          ID_DEPTO_PADRE,
          ID_DEPTO,
          ID_EAP,
          ID_AUXILIAR
          INTO
          L_ID_ENTIDAD,
          L_ID_ANHO,
          L_ID_DEPTO_PADRE,
          L_ID_DEPTO,
          L_ID_EAP,
          L_ID_AUXILIAR
          FROM PSTO_PREGRADO_PROYECCCION
          WHERE ID_PROYECCION=P_ID_PROYECCION;
         
          
          SELECT COUNT(*) INTO l_contar FROM PSTO_PREGRADO_PROYECCCION
          WHERE ID_ENTIDAD=L_ID_ENTIDAD
          AND ID_ANHO=L_ID_ANHO
          AND ID_DEPTO_PADRE=L_ID_DEPTO_PADRE
          AND ID_DEPTO=L_ID_DEPTO
          AND ID_AUXILIAR=L_ID_AUXILIAR;
          
          IF l_contar=1 THEN
          
              DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO 
              WHERE ID_PREGRADO_PROCESO IN(
                  SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO  
                  WHERE ID_ENTIDAD=L_ID_ENTIDAD
                  AND ID_ANHO=L_ID_ANHO
                  AND ID_DEPTO_PADRE=L_ID_DEPTO_PADRE
                  AND ID_DEPTO=L_ID_DEPTO
                  AND ID_AUXILIAR=L_ID_AUXILIAR
              );
          
              DELETE FROM PSTO_PREGRADO_PROCESO  
              WHERE ID_ENTIDAD=L_ID_ENTIDAD
              AND ID_ANHO=L_ID_ANHO
              AND ID_DEPTO_PADRE=L_ID_DEPTO_PADRE
              AND ID_DEPTO=L_ID_DEPTO
              AND ID_AUXILIAR=L_ID_AUXILIAR;
            
          END IF;
   
          DELETE FROM PSTO_PREGRADO_PROYECCCION  WHERE ID_PROYECCION=P_ID_PROYECCION;
          
          PKG_PRESUPUESTO.SP_POSGRADO_PROCESO(L_ID_ENTIDAD,L_ID_DEPTO_PADRE, L_ID_ANHO ,L_ID_AUXILIAR ,l_error,l_msgerror);
          
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
      
   END SP_DELETE_POSGRADO_PROYECCCION;
  
  PROCEDURE SP_PREGRADO_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
  
  BEGIN 
    
  
    DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO
    WHERE ID_PREGRADO_PROCESO IN(
      SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND ID_AUXILIAR=P_ID_AUXILIAR	
    ) AND TIPO IN('E','M') ;
  
  
     	
  
    SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0) INTO l_contar FROM PSTO_PREGRADO_PROCESO;
    
    
    ----PROCESO PREGRADO
    
    INSERT INTO PSTO_PREGRADO_PROCESO(
      ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      ARMADA,
      IMP_MAT,
      CREDITO_1,
      CREDITO_2_5,
      TOTALCREDITO_1_I,
      TOTALCREDITO_2_5_I,
      TOTAL_ALUMNO_I,
      TOTALCREDITO_1_II,
      TOTALCREDITO_2_5_II,
      TOTAL_ALUMNO_II,
      TOTAL_HORAS_I ,
      TOTAL_HORAS_II ,
      CONVOCA,
      ID_AUXILIAR
    )

    SELECT 
      ROWNUM + l_contar AS ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      5,
      0,
      0,
      0,
      CREDITO1_I,
      CREDITO2A5_I,
      CANTIDAD_I,
      CREDITO1_II,
      CREDITO2A5_II,
      CANTIDAD_II,
      HORAS_I ,
      HORAS_II ,
      CONVOCA,
      P_ID_AUXILIAR
      FROM(
        SELECT 
        A.ID_ENTIDAD,
        A.ID_DEPTO,
        A.ID_ANHO,
        A.ID_DEPTO_PADRE,
        A.CREDITO1_I,
        A.CREDITO2A5_I,
        A.CANTIDAD_I,
        A.CREDITO1_II,
        A.CREDITO2A5_II,
        A.CANTIDAD_II,
        A.HORAS_I,
        A.HORAS_II,
        A.CONVOCA
        FROM VW_PROYECCION_PROCESO A
        WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND A.ID_AUXILIAR=P_ID_AUXILIAR
        AND A.ID_DEPTO NOT IN(
          SELECT T.ID_DEPTO FROM PSTO_PREGRADO_PROCESO T
          WHERE T.ID_ENTIDAD=P_ID_ENTIDAD
          AND T.ID_ANHO=P_ID_ANHO
          AND T.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND T.ID_AUXILIAR=P_ID_AUXILIAR
          AND COALESCE(T.CONVOCA,'-')=COALESCE(A.CONVOCA,'-')
        )
        
    )M
    ORDER BY M.ID_DEPTO,M.CONVOCA;
    
    
      MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING (SELECT 
              A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              A.CREDITO1_I,
              A.CREDITO2A5_I,
              A.CANTIDAD_I,
              A.CREDITO1_II,
              A.CREDITO2A5_II,
              A.CANTIDAD_II,
              A.HORAS_I,
              A.HORAS_II,
              A.CONVOCA,
              A.ID_AUXILIAR
              FROM VW_PROYECCION_PROCESO A
              WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
              AND A.ID_ANHO=P_ID_ANHO
              AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
              AND A.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_ENTIDAD=t.ID_ENTIDAD and C.ID_DEPTO=t.ID_DEPTO and C.ID_ANHO=t.ID_ANHO and coalesce(C.CONVOCA,'-')=coalesce(t.CONVOCA,'-') and C.ID_DEPTO_PADRE=t.ID_DEPTO_PADRE and C.ID_AUXILIAR=t.ID_AUXILIAR )
        WHEN  MATCHED THEN UPDATE SET  
          C.TOTALCREDITO_1_I=t.CREDITO1_I, 
          C.TOTALCREDITO_1_II=t.CREDITO1_II, 
          C.TOTALCREDITO_2_5_I=t.CREDITO2A5_I,
          C.TOTAL_ALUMNO_I=t.CANTIDAD_I,
          C.TOTALCREDITO_2_5_II=t.CREDITO2A5_II,
          C.TOTAL_ALUMNO_II=t.CANTIDAD_II,
          C.TOTAL_HORAS_I=t.HORAS_I,
          C.TOTAL_HORAS_II=t.HORAS_II;
    
      
    INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
    ID_PREGRADO_PROCESO, 
    ID_CONCEPTO_PRECIO, 
    IMPORTE_I, 
    IMPORTE_II, 
    TOTAL_I, 
    TOTAL_II,
    TIPO
    )
    
     SELECT 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_I ELSE IMPORTE_BECA_I END AS IMPORTE_I,
      CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_II ELSE IMPORTE_BECA_II END AS IMPORTE_II,
      (CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_I ELSE IMPORTE_BECA_I END)*TOTAL_ALUMNO_I AS TOTAL_I,
      (CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_II ELSE IMPORTE_BECA_II END)*TOTAL_ALUMNO_II AS TOTAL_II,
      C.TIPO
      FROM PSTO_PREGRADO_CONCEPTO_PRECIO C,PSTO_PREGRADO_PROCESO P
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='M'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	
      and (CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_I ELSE IMPORTE_BECA_I END +
      CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_II ELSE IMPORTE_BECA_II END +
      (CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_I ELSE IMPORTE_BECA_I END)*TOTAL_ALUMNO_I +
      (CASE WHEN P.CONVOCA IS NULL THEN IMPORTE_II ELSE IMPORTE_BECA_II END)*TOTAL_ALUMNO_II )>0
      ORDER BY P.ID_DEPTO,P.CONVOCA,C.ID_ACTIVIDAD;
      
      
      MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING (SELECT 
              X.ID_PREGRADO_PROCESO,
              M.IMPORTE_I,
              M.IMPORTE_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN
                (
                  SELECT 
                    COALESCE(SUM(D.IMPORTE_I),0) AS IMPORTE_I,SUM(D.IMPORTE_II) AS IMPORTE_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  AND D.TIPO='M'
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  C.IMP_MAT=t.IMPORTE_I;
        
    
      
      ---ENSEÑANZA
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
      ID_PREGRADO_PROCESO, 
      ID_CONCEPTO_PRECIO, 
      IMPORTE_I, 
      IMPORTE_II, 
      TOTAL_I, 
      TOTAL_II,
      TIPO
      )
      select 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      P.CREDITO_2_5 AS IMPORTE_I,
      P.CREDITO_2_5 AS IMPORTE_II,
      P.CREDITO_1*P.TOTALCREDITO_1_I + P.CREDITO_2_5*P.TOTALCREDITO_2_5_I AS TOTAL_I,
      P.CREDITO_1*P.TOTALCREDITO_1_II + P.CREDITO_2_5*P.TOTALCREDITO_2_5_II AS TOTAL_II,
      C.TIPO
      from PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO C
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='E'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	;
      
      
      
      ---DESCUENTO
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
      ID_PREGRADO_PROCESO, 
      ID_CONCEPTO_PRECIO, 
      IMPORTE_I, 
      IMPORTE_II, 
      TOTAL_I, 
      TOTAL_II,
      TIPO
      )
      select 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      0 AS IMPORTE_I,
      0 AS IMPORTE_II,
      0 AS TOTAL_I,
      0 AS TOTAL_II,
      C.TIPO
      from PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO C
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='D'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	
      AND C.ID_CONCEPTO_PRECIO NOT IN(
        SELECT X.ID_CONCEPTO_PRECIO  FROM PSTO_PREGRADO_PROCESO_CONCEPTO X
        WHERE X.ID_PREGRADO_PROCESO=P.ID_PREGRADO_PROCESO

      );
      
  
    
      
  
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_PREGRADO_PROCESO;
  
  
  PROCEDURE SP_PROESAD_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    
    
    
  BEGIN
  
      
    DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO
    WHERE ID_PREGRADO_PROCESO IN(
      SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND ID_AUXILIAR=P_ID_AUXILIAR	
    ) AND TIPO IN('M','E');
  
  
  
    SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0) INTO l_contar FROM PSTO_PREGRADO_PROCESO;
    
    
    ----PROCESO PREGRADO
    
    INSERT INTO PSTO_PREGRADO_PROCESO(
      ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      ARMADA,
      IMP_MAT,
      CREDITO_1,
      CREDITO_2_5,
      TOTALCREDITO_1_I,
      TOTALCREDITO_2_5_I,
      TOTAL_ALUMNO_I,
      TOTALCREDITO_1_II,
      TOTALCREDITO_2_5_II,
      TOTAL_ALUMNO_II,
      TOTAL_HORAS_I ,
      TOTAL_HORAS_II ,
      CONVOCA,
      ID_AUXILIAR
    )

    SELECT 
      ROWNUM + l_contar AS ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      4,
      0,
      0,
      0,
      0,
      0,
      CANTIDAD_I,
      0,
      0,
      CANTIDAD_II,
      HORAS_I,
      HORAS_II,
      BECA as CONVOCA,
      P_ID_AUXILIAR
      FROM(
        SELECT 
        A.ID_ENTIDAD,
        A.ID_DEPTO,
        A.ID_ANHO,
        A.ID_DEPTO_PADRE,
        COALESCE(SUM(A.CANTIDAD_I),0) AS CANTIDAD_I,
        COALESCE(SUM(A.CANTIDAD_II),0) AS CANTIDAD_II,
        COALESCE(SUM(A.HORAS_I),0) AS HORAS_I,
        COALESCE(SUM(A.HORAS_II),0) AS HORAS_II,
        A.BECA
        FROM PSTO_PREGRADO_PROYECCCION A
        WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND (A.CANTIDAD_I+A.CANTIDAD_II)>0
        AND A.ID_AUXILIAR=P_ID_AUXILIAR
        AND A.ID_DEPTO NOT IN(
          SELECT T.ID_DEPTO FROM PSTO_PREGRADO_PROCESO T
          WHERE T.ID_ENTIDAD=P_ID_ENTIDAD
          AND T.ID_ANHO=P_ID_ANHO
          AND T.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND T.ID_AUXILIAR=P_ID_AUXILIAR
          AND COALESCE(T.CONVOCA,'-')=COALESCE(A.BECA,'-')
        )
        GROUP BY A.ID_ENTIDAD,
        A.ID_DEPTO,
        A.ID_ANHO,
        A.ID_DEPTO_PADRE,
        A.BECA
        
    )M
    ORDER BY M.ID_DEPTO;
    

    MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING (SELECT 
              A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              COALESCE(SUM(A.CANTIDAD_I),0) AS CANTIDAD_I,
              COALESCE(SUM(A.CANTIDAD_II),0) AS CANTIDAD_II,
              COALESCE(SUM(A.HORAS_I),0) AS HORAS_I,
              COALESCE(SUM(A.HORAS_II),0) AS HORAS_II,
              A.BECA,
              A.ID_AUXILIAR
              FROM PSTO_PREGRADO_PROYECCCION A
              WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
              AND A.ID_ANHO=P_ID_ANHO
              AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
              AND (A.CANTIDAD_I+A.CANTIDAD_II)>0
              AND A.ID_AUXILIAR=P_ID_AUXILIAR
              GROUP BY A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              A.BECA,
              A.ID_AUXILIAR
            )t
        ON (C.ID_ENTIDAD=t.ID_ENTIDAD and C.ID_DEPTO=t.ID_DEPTO and C.ID_ANHO=t.ID_ANHO and coalesce(C.CONVOCA,'-')=coalesce(t.BECA,'-') and C.ID_DEPTO_PADRE=t.ID_DEPTO_PADRE and C.ID_AUXILIAR=t.ID_AUXILIAR )
        WHEN  MATCHED THEN UPDATE SET  
          C.TOTAL_ALUMNO_I=t.CANTIDAD_I,
          C.TOTAL_ALUMNO_II=t.CANTIDAD_II,
          C.TOTAL_HORAS_I=t.HORAS_I,
          C.TOTAL_HORAS_II=t.HORAS_II;
    
    
    INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
    ID_PREGRADO_PROCESO, 
    ID_CONCEPTO_PRECIO, 
    IMPORTE_I, 
    IMPORTE_II, 
    TOTAL_I, 
    TOTAL_II,
    TIPO
    )
    
     SELECT 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      CASE WHEN P.CONVOCA='S'  THEN IMPORTE_I ELSE IMPORTE_BECA_I END AS IMPORTE_I,
      CASE WHEN P.CONVOCA='S'  THEN IMPORTE_II ELSE IMPORTE_BECA_II END AS IMPORTE_II,
      (CASE WHEN P.CONVOCA='S'  THEN IMPORTE_I ELSE IMPORTE_BECA_I END)*TOTAL_ALUMNO_I AS TOTAL_I,
      (CASE WHEN P.CONVOCA='S'  THEN IMPORTE_II ELSE IMPORTE_BECA_II END)*TOTAL_ALUMNO_II AS TOTAL_II,
      C.TIPO
      FROM PSTO_PREGRADO_CONCEPTO_PRECIO C,PSTO_PREGRADO_PROCESO P
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='M'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	
      ORDER BY P.ID_DEPTO,P.CONVOCA,C.ID_ACTIVIDAD;
      
      MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING (SELECT 
              X.ID_PREGRADO_PROCESO,
              M.IMPORTE_I,
              M.IMPORTE_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN
                (
                  SELECT 
                    COALESCE(SUM(D.IMPORTE_I),0) AS IMPORTE_I,SUM(D.IMPORTE_II) AS IMPORTE_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  AND D.TIPO='M'
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  C.IMP_MAT=t.IMPORTE_I;
        
  
      
      ---ENSEÑANZA
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
      ID_PREGRADO_PROCESO, 
      ID_CONCEPTO_PRECIO, 
      IMPORTE_I, 
      IMPORTE_II, 
      TOTAL_I, 
      TOTAL_II,
      TIPO
      )
      select 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      P.CREDITO_1 AS IMPORTE_I,
      P.CREDITO_1 AS IMPORTE_II,
      P.CREDITO_1*P.ARMADA*P.TOTAL_ALUMNO_I   AS TOTAL_I,
      P.CREDITO_1*P.ARMADA*P.TOTAL_ALUMNO_II   AS TOTAL_II,
      C.TIPO
      from PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO C
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='E'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR;
      
      ---DESCUENTO
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
      ID_PREGRADO_PROCESO, 
      ID_CONCEPTO_PRECIO, 
      IMPORTE_I, 
      IMPORTE_II, 
      TOTAL_I, 
      TOTAL_II,
      TIPO
      )
      select 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      0 AS IMPORTE_I,
      0 AS IMPORTE_II,
      0 AS TOTAL_I,
      0 AS TOTAL_II,
      C.TIPO
      from PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO C
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.TIPO='D'
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	
      AND C.ID_CONCEPTO_PRECIO NOT IN(
        SELECT X.ID_CONCEPTO_PRECIO  FROM PSTO_PREGRADO_PROCESO_CONCEPTO X
        WHERE X.ID_PREGRADO_PROCESO=P.ID_PREGRADO_PROCESO

      );
      
      
       
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_PROESAD_PROCESO;
  
  PROCEDURE SP_POSGRADO_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    

  BEGIN
  
    MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING (SELECT 
              A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              COALESCE(SUM(A.CANTIDAD_I),0) AS CANTIDAD_I,
              COALESCE(SUM(A.CANTIDAD_II),0) AS CANTIDAD_II,
              COALESCE(SUM(A.HORAS_I),0) AS HORAS_I,
              COALESCE(SUM(A.HORAS_II),0) AS HORAS_II,
              A.BECA,
              A.ID_AUXILIAR
              FROM PSTO_PREGRADO_PROYECCCION A
              WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
              AND A.ID_ANHO=P_ID_ANHO
              AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
              --AND (A.CANTIDAD_I+A.CANTIDAD_II)>0
              AND A.ID_AUXILIAR=P_ID_AUXILIAR
              GROUP BY A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              A.BECA,
              A.ID_AUXILIAR
            )t
        ON (C.ID_ENTIDAD=t.ID_ENTIDAD and C.ID_DEPTO=t.ID_DEPTO and C.ID_ANHO=t.ID_ANHO and coalesce(C.CONVOCA,'-')=coalesce(t.BECA,'-') and C.ID_DEPTO_PADRE=t.ID_DEPTO_PADRE and C.ID_AUXILIAR=t.ID_AUXILIAR )
        WHEN  MATCHED THEN UPDATE SET  
          C.TOTAL_ALUMNO_I=t.CANTIDAD_I,
          C.TOTAL_ALUMNO_II=t.CANTIDAD_II,
          C.TOTAL_HORAS_I=t.HORAS_I,
          C.TOTAL_HORAS_II=t.HORAS_II;
    
    
      MERGE INTO PSTO_PREGRADO_PROCESO_CONCEPTO C 
      USING (
         SELECT 
         D.IMPORTE_I * P.TOTAL_ALUMNO_I AS TOTAL_I,
         D.IMPORTE_I * P.TOTAL_ALUMNO_II AS TOTAL_II,
         D.ID_PREGRADO_PROCESO,
         D.ID_CONCEPTO_PRECIO,
         R.TIPO
         FROM PSTO_PREGRADO_PROCESO_CONCEPTO D,PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO R
         WHERE D.ID_PREGRADO_PROCESO=P.ID_PREGRADO_PROCESO
         AND D.ID_CONCEPTO_PRECIO=R.ID_CONCEPTO_PRECIO
         AND P.ID_ENTIDAD=P_ID_ENTIDAD
         AND P.ID_ANHO=P_ID_ANHO
         AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
         AND P.ID_AUXILIAR=P_ID_AUXILIAR
         AND D.TIPO NOT IN('D','S')
      )t
      ON(C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO AND C.ID_CONCEPTO_PRECIO=t.ID_CONCEPTO_PRECIO)
      WHEN  MATCHED THEN UPDATE SET
      C.TOTAL_I=t.TOTAL_I,
      C.TOTAL_II=t.TOTAL_II,
      C.TIPO=t.TIPO;
      
       /*
       M:Matrícula
       E:Enseñanza
       D:Descuento,
       O:Otros
       */
      MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING (SELECT 
              X.ID_PREGRADO_PROCESO,
              M.MAT_I,
              M.MAT_II,
              M.ENSE_I,
              M.ENSE_II, 
              M.DESC_I,
              M.DESC_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN
                (
                  SELECT 
                    COALESCE(SUM(CASE WHEN D.TIPO='M' THEN D.TOTAL_I ELSE 0 END),0) AS MAT_I,
                    COALESCE(SUM(CASE WHEN D.TIPO='M' THEN D.TOTAL_II ELSE 0 END),0) AS MAT_II,
                    COALESCE(SUM(CASE WHEN D.TIPO='E' THEN D.TOTAL_I ELSE 0 END),0) AS ENSE_I,
                    COALESCE(SUM(CASE WHEN D.TIPO='E' THEN D.TOTAL_II ELSE 0 END),0) AS ENSE_II,
                    COALESCE(SUM(CASE WHEN D.TIPO='D' THEN D.TOTAL_I ELSE 0 END),0) AS DESC_I,
                    COALESCE(SUM(CASE WHEN D.TIPO='D' THEN D.TOTAL_II ELSE 0 END),0) AS DESC_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  AND D.TIPO IN('M','E','D')
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  
        C.TOTAL_ENSE_I=t.ENSE_I,
        C.TOTAL_ENSE_II=t.ENSE_II,
        C.TOTAL_MAT_I=t.MAT_I,
        C.TOTAL_MAT_II=t.MAT_II,
        C.TOTAL_DES_I=t.DESC_I,
        C.TOTAL_DES_II=t.DESC_II;
       
      

    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_POSGRADO_PROCESO;
  
   
  PROCEDURE SP_ADMISION_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    
    
    
  BEGIN
  
  
    SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0) INTO l_contar FROM PSTO_PREGRADO_PROCESO;
    
    
    ----PROCESO PREGRADO
    
    INSERT INTO PSTO_PREGRADO_PROCESO(
      ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      ARMADA,
      IMP_MAT,
      CREDITO_1,
      CREDITO_2_5,
      TOTALCREDITO_1_I,
      TOTALCREDITO_2_5_I,
      TOTAL_ALUMNO_I,
      TOTALCREDITO_1_II,
      TOTALCREDITO_2_5_II,
      TOTAL_ALUMNO_II,
      CONVOCA,
      ID_AUXILIAR,
      ID_EAP_DEPTO_AREA
    )

    SELECT 
      ROWNUM + l_contar AS ID_PREGRADO_PROCESO,
      P_ID_ENTIDAD,
      ID_DEPTO,
      P_ID_ANHO,
      P_ID_DEPTO_PADRE,
      1,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      0,
      ID_TIPO_DEPTO as CONVOCA,
      P_ID_AUXILIAR,
      ID_EAP_DEPTO_AREA
      FROM(
      
        SELECT ID_DEPTO,ID_EAP_DEPTO_AREA,ID_TIPO_DEPTO FROM VW_DPTO_EAP 
        WHERE ID_TIPO_DEPTO IN('AD','CE')
        AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_EAP_DEPTO_AREA NOT IN(
           SELECT ID_EAP_DEPTO_AREA FROM PSTO_PREGRADO_PROCESO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_AUXILIAR=P_ID_AUXILIAR	
        )
        ORDER BY ID_EAP
                
    )M
    ORDER BY M.ID_EAP_DEPTO_AREA;
    
  
   
  
    DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO
    WHERE ID_PREGRADO_PROCESO IN(
      SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND ID_AUXILIAR=P_ID_AUXILIAR	
    );
  

    INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
    ID_PREGRADO_PROCESO, 
    ID_CONCEPTO_PRECIO, 
    IMPORTE_I, 
    IMPORTE_II, 
    TOTAL_I, 
    TOTAL_II
    )
    
     SELECT 
      P.ID_PREGRADO_PROCESO,
      C.ID_CONCEPTO_PRECIO,
      P.CREDITO_1,
      P.CREDITO_1,
      CASE WHEN (P.CONVOCA='AD' AND C.TIPO='M') OR (P.CONVOCA='CE' AND C.TIPO='E') THEN   P.CREDITO_1*TOTAL_ALUMNO_I ELSE 0 END ,
      CASE WHEN (P.CONVOCA='AD' AND C.TIPO='M') OR (P.CONVOCA='CE' AND C.TIPO='E') THEN   P.CREDITO_1*TOTAL_ALUMNO_II ELSE 0 END 
      FROM PSTO_PREGRADO_CONCEPTO_PRECIO C,PSTO_PREGRADO_PROCESO P
      WHERE C.ID_ENTIDAD=P.ID_ENTIDAD
      AND C.ID_ANHO=P.ID_ANHO
      AND C.ID_DEPTO_PADRE=P.ID_DEPTO_PADRE
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND C.ID_AUXILIAR=P.ID_AUXILIAR
      AND P.ID_AUXILIAR=P_ID_AUXILIAR	
      ORDER BY P.ID_DEPTO,P.CONVOCA,C.ID_ACTIVIDAD;
      
      
      MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING (SELECT 
              X.ID_PREGRADO_PROCESO,
              X.TOTAL_ENSE_I,
              X.TOTAL_ENSE_II,
              X.TOTAL_MAT_I,
              X.TOTAL_MAT_II,
              M.ENSE_I,
              M.ENSE_II,
              M.MAT_I,
              M.MAT_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN
                (
                  SELECT 
                    SUM(CASE WHEN P.CONVOCA='AD' THEN D.TOTAL_I ELSE 0 END) AS MAT_I,
                    SUM(CASE WHEN P.CONVOCA='AD' THEN D.TOTAL_II ELSE 0 END) AS MAT_II,
                    SUM(CASE WHEN P.CONVOCA='CE' THEN D.TOTAL_I ELSE 0 END) AS ENSE_I,
                    SUM(CASE WHEN P.CONVOCA='CE' THEN D.TOTAL_II ELSE 0 END) AS ENSE_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  C.TOTAL_ENSE_I=t.ENSE_I,  C.TOTAL_ENSE_II=t.ENSE_II,C.TOTAL_MAT_I=t.MAT_I,C.TOTAL_MAT_II=t.MAT_II;
      
                
     
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_ADMISION_PROCESO;
  
  PROCEDURE SP_PREGRADO_PRESUPUESTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_PERSONA NUMBER,P_ID_PSTONEGOCIO NUMBER,P_ID_EJE NUMBER, P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_contact number;
    l_contact1 number;
    l_id_presupuesto number;
    l_id_evento number;
    l_descripcion varchar2(300);
    l_total_ingreso number(10,2);
    l_total_gasto number(10,2);
    l_id_presupuesto_del number;
    l_identificador varchar2(5);
  BEGIN
  
   
    
    SELECT D.id_evento into l_id_evento
    FROM PSTO_PREGRADO_PROCESO_CONCEPTO A,
    PSTO_PREGRADO_CONCEPTO_PRECIO B,
    PSTO_PREGRADO_PROCESO C,
    PSTO_ACTIVIDAD D
    WHERE A.ID_CONCEPTO_PRECIO=B.ID_CONCEPTO_PRECIO
    AND A.ID_PREGRADO_PROCESO=C.ID_PREGRADO_PROCESO
    AND B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
    AND C.ID_ENTIDAD=P_ID_ENTIDAD
    AND C.ID_ANHO=P_ID_ANHO
    AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
    AND B.ID_AUXILIAR=C.ID_AUXILIAR
    AND B.ID_AUXILIAR=P_ID_AUXILIAR
    GROUP BY D.id_evento;
    
    
    SELECT  NOMBRE INTO l_descripcion  FROM PSTO_EVENTO WHERE ID_EVENTO=l_id_evento;
    
    
    select 
      COUNT(*) INTO l_contar
      FROM PSTO_PREGRADO_PROCESO_CONCEPTO A,PSTO_PREGRADO_CONCEPTO_PRECIO B,PSTO_PREGRADO_PROCESO C,PSTO_ACTIVIDAD D
      WHERE A.ID_CONCEPTO_PRECIO=B.ID_CONCEPTO_PRECIO
      AND A.ID_PREGRADO_PROCESO=C.ID_PREGRADO_PROCESO
      AND B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
      AND (A.TOTAL_I+A.TOTAL_II)>0
      AND C.ID_ENTIDAD=P_ID_ENTIDAD
      AND C.ID_ANHO=P_ID_ANHO
      AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND B.ID_AUXILIAR=C.ID_AUXILIAR
      AND B.ID_AUXILIAR=P_ID_AUXILIAR
      AND (COALESCE(D.ID_DEPTO,C.ID_DEPTO) IS NULL OR D.ID_TIPOPLAN IS NULL OR D.ID_CUENTAAASI IS NULL OR D.ID_RESTRICCION IS NULL);
    
    if l_contar>0 then
      l_error:=1;
      l_msgerror:='Falta asignar departamento ó cuenta contable denominacional a la actividad de evento '||l_descripcion;
    end if;
    
    if l_error=0 then
      SELECT COUNT(*) INTO l_contact
      FROM PSTO_ACTIVIDAD 
      WHERE ID_EVENTO=l_id_evento;
      
      SELECT COUNT(*) INTO l_contact1
      FROM PSTO_ACTIVIDAD 
      WHERE ID_ACTIVIDAD IN(
        SELECT A.ID_ACTIVIDAD FROM PSTO_ACTIVIDAD A, PSTO_ACTIVIDAD_DIST B
        WHERE A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
        AND A.ID_EVENTO=l_id_evento
        GROUP BY A.ID_ACTIVIDAD
      );
      
      if l_contact<>l_contact1 then
        l_error:=1;
        l_msgerror:='Falta asignar distribución mensual. ';
      end if;
    end if;
    if l_error=0 then
      SELECT  COUNT(*) INTO l_contar FROM PSTO_PRESUPUESTO 
      WHERE ID_EVENTO=l_id_evento
      AND ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_ANHO=P_ID_ANHO
      AND ESTADO='2';
      
      
        
      if l_contar>0 then
        l_error:=1;
        l_msgerror:='Ya esta aprobado presupuesto del evento '||l_descripcion||' para el año ' ||to_char(P_ID_ANHO);
      else
      
        
        SELECT  COUNT(*) INTO l_contar FROM PSTO_PRESUPUESTO 
        WHERE ID_EVENTO=l_id_evento
        AND ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_ANHO=P_ID_ANHO
        AND ESTADO='1';
        
        IF l_contar>0 THEN
          SELECT ID_PRESUPUESTO into l_id_presupuesto_del FROM PSTO_PRESUPUESTO 
          WHERE ID_EVENTO=l_id_evento
          AND ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ESTADO='1';
          
          PKG_PRESUPUESTO.SP_ELIMINAR_PRESUPUESTO(l_id_presupuesto_del,P_ID_PERSONA);
          
        END IF;
        
         SELECT COALESCE(MAX(ID_PRESUPUESTO),0)+1 INTO l_id_presupuesto FROM PSTO_PRESUPUESTO;
        --CABECERA
        insert into PSTO_PRESUPUESTO(
          ID_PRESUPUESTO, 
          ID_ENTIDAD,
          ID_ANHO, 
          ID_EVENTO,
          ID_PSTONEGOCIO,
          ID_EJE,
          ID_DEPTO,
          ID_PERSONA,
          DESCRIPCION,
          FECHA, 
          ESTADO
        )values(
          l_id_presupuesto,
          P_ID_ENTIDAD,
          P_ID_ANHO,
          l_id_evento,
          P_ID_PSTONEGOCIO,
          P_ID_EJE,
          P_ID_DEPTO_PADRE,
          P_ID_PERSONA,
          l_descripcion,
          sysdate,
          '1'
        );
    
        --DETALLE
        INSERT INTO PSTO_PRESUPUESTO_DET(
            ID_PRESUPUESTO_DET,
            ID_PRESUPUESTO,
            ID_ACTIVIDAD,
            ID_ENTIDAD, 
            ID_DEPTO, 
            ID_DEPTO_ASIENTO,
            TIPO,
            DESCRIPCION,
            CANTIDAD,
            PUNIDAD,
            A, 
            B, 
            C,
            D, 
            E,
            F, 
            G,
            TOTAL,
            ID_TIPOPLAN,
            ID_CUENTAAASI,
            ID_RESTRICCION,
            ID_CTACTE,
            ID_TIPOCTACTE,
            ID_ENTIDAD_CTACTE
          )
        SELECT
            ROWNUM AS ID_PRESUPUESTO_DET, 
            l_id_presupuesto AS ID_PRESUPUESTO,
            M.ID_ACTIVIDAD,
            M.ID_ENTIDAD,
            M.ID_DEPTO,
            M.ID_DEPTO_ASIENTO,
            M.TIPO,
            M.DESCRIPCION,
            M.CANTIDAD,
            M.PUNIDAD,
            M.A,
            M.B,
            M.C, 
            M.D,
            M.E, 
            M.F,
            M.G,
            M.TOTAL,
            M.ID_TIPOPLAN,
            M.ID_CUENTAAASI,
            M.ID_RESTRICCION,
            M.ID_CTACTE,
            M.ID_TIPOCTACTE,
            M.ID_ENTIDAD_CTACTE
        FROM(
            select 
            B.ID_ACTIVIDAD,
            C.ID_ENTIDAD,
            C.ID_DEPTO,
            COALESCE(D.ID_DEPTO,C.ID_DEPTO) AS ID_DEPTO_ASIENTO,
            D.TIPO,
            D.NOMBRE AS DESCRIPCION,
            0 AS CANTIDAD,
            0 AS PUNIDAD,
            SUM(COALESCE(A.TOTAL_I,0)) AS A,
            SUM(COALESCE(A.TOTAL_II,0)) AS B,
            0 AS C,
            0 AS D, 
            0  AS E, 
            0 AS  F,
            0 AS G,
            COALESCE(SUM(COALESCE(A.TOTAL_I,0)+COALESCE(A.TOTAL_II,0)),0) AS TOTAL,
            D.ID_TIPOPLAN,
            D.ID_CUENTAAASI,
            D.ID_RESTRICCION,
            D.ID_CTACTE,
            D.ID_TIPOCTACTE,
            D.ID_ENTIDAD_CTACTE
            FROM PSTO_PREGRADO_PROCESO_CONCEPTO A,PSTO_PREGRADO_CONCEPTO_PRECIO B,PSTO_PREGRADO_PROCESO C,PSTO_ACTIVIDAD D
            WHERE A.ID_CONCEPTO_PRECIO=B.ID_CONCEPTO_PRECIO
            AND A.ID_PREGRADO_PROCESO=C.ID_PREGRADO_PROCESO
            AND B.ID_ACTIVIDAD=D.ID_ACTIVIDAD
            AND (A.TOTAL_I+A.TOTAL_II)>0
            AND C.ID_ENTIDAD=P_ID_ENTIDAD
            AND C.ID_ANHO=P_ID_ANHO
            AND C.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
            AND B.ID_AUXILIAR=C.ID_AUXILIAR
            AND B.ID_AUXILIAR=P_ID_AUXILIAR
            GROUP BY B.ID_ACTIVIDAD,
            C.ID_ENTIDAD,
            C.ID_DEPTO,
            COALESCE(D.ID_DEPTO,C.ID_DEPTO),
            D.TIPO,
            D.NOMBRE,
            D.ID_TIPOPLAN,
            D.ID_CUENTAAASI,
            D.ID_RESTRICCION,
            D.ID_CTACTE,
            D.ID_TIPOCTACTE,
            D.ID_ENTIDAD_CTACTE
            
        )M;
        
        
        MERGE INTO PSTO_PRESUPUESTO_DET C 
        USING (SELECT 
                A.ID_PRESUPUESTO,
                A.ID_PRESUPUESTO_DET,
                B.NOMBRE
                FROM PSTO_PRESUPUESTO_DET A,CONTA_ENTIDAD_DEPTO B
                WHERE A.ID_ENTIDAD=B.ID_ENTIDAD
                AND A.ID_DEPTO=B.ID_DEPTO
                AND A.ID_PRESUPUESTO=l_id_presupuesto
              )t
          ON (C.ID_PRESUPUESTO=t.ID_PRESUPUESTO and C.ID_PRESUPUESTO_DET=t.ID_PRESUPUESTO_DET and C.ID_PRESUPUESTO=l_id_presupuesto)
          WHEN  MATCHED THEN UPDATE SET  
            C.DEPTO_NOMBRE=t.NOMBRE;
            
        MERGE INTO PSTO_PRESUPUESTO_DET C 
        USING (SELECT 
                A.ID_PRESUPUESTO,
                A.ID_PRESUPUESTO_DET,
                B.NOMBRE
                FROM PSTO_PRESUPUESTO_DET A,CONTA_ENTIDAD_DEPTO B
                WHERE A.ID_ENTIDAD=B.ID_ENTIDAD
                AND A.ID_DEPTO_ASIENTO=B.ID_DEPTO
                AND A.ID_PRESUPUESTO=l_id_presupuesto
              )t
          ON (C.ID_PRESUPUESTO=t.ID_PRESUPUESTO and C.ID_PRESUPUESTO_DET=t.ID_PRESUPUESTO_DET and C.ID_PRESUPUESTO=l_id_presupuesto)
          WHEN  MATCHED THEN UPDATE SET  
            C.DEPTO_ASIENTO_NOMBRE=t.NOMBRE;
        
  
        select 
        coalesce(sum(case when tipo='I' then TOTAL else 0 end),0),
        coalesce(sum(case when tipo='G' then TOTAL else 0 end),0)
        into 
        l_total_ingreso,
        l_total_gasto
        from  PSTO_PRESUPUESTO_DET
        where ID_PRESUPUESTO=l_id_presupuesto;
        
        
        
        
        MERGE INTO PSTO_PRESUPUESTO_DET C 
        USING (SELECT 
                A.ID_PRESUPUESTO,
                A.ID_PRESUPUESTO_DET,
                A.TOTAL,
                A.A,
                A.B
                FROM PSTO_PRESUPUESTO_DET A,PSTO_ACTIVIDAD B
                WHERE A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
                AND A.ID_PRESUPUESTO=l_id_presupuesto
                AND A.TIPO='I'
                AND COALESCE(B.ESDESCUENTO,'N')='S'
              )t
        ON (C.ID_PRESUPUESTO=t.ID_PRESUPUESTO and C.ID_PRESUPUESTO_DET=t.ID_PRESUPUESTO_DET AND C.ID_PRESUPUESTO=l_id_presupuesto)
        WHEN  MATCHED THEN UPDATE SET 
        C.A = t.A*(-1),
        C.B = t.B*(-1),
        C.TOTAL = t.TOTAL*(-1);
         
        
        update PSTO_PRESUPUESTO set
        TOTAL_INGRESO=l_total_ingreso,
        TOTAL_GASTO=l_total_gasto
        where ID_PRESUPUESTO=l_id_presupuesto;
        
        SELECT IDENTIFICADOR INTO l_identificador  FROM PSTO_AUXILIAR WHERE ID_AUXILIAR=P_ID_AUXILIAR;
     
        
        IF l_identificador in('RG','RE','PR') then
           PKG_PRESUPUESTO.SP_GEN_PSTO_DET_DIST_AUXI(l_id_presupuesto);
        else
           PKG_PRESUPUESTO.SP_GEN_PRESUPUESTO_DET_DIST(l_id_presupuesto);
        end if;
        
       
        
        PKG_PRESUPUESTO.SP_ASIENTO_PRESUPUESTO(l_id_presupuesto,P_ID_PERSONA);
        
        select count(*) into l_contar from psto_auxiliar_anho
        where id_auxiliar=P_ID_AUXILIAR
        and id_anho=P_ID_ANHO;
      
        if l_contar=0 then
          insert into psto_auxiliar_anho(id_anho,id_auxiliar,estado) values(P_ID_ANHO,P_ID_AUXILIAR,'01');
        else
          update psto_auxiliar_anho set estado='01'
          where id_auxiliar=P_ID_AUXILIAR
          and id_anho=P_ID_ANHO;
        end if;
  
      end if;
    end if;
    
  
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
    
  END SP_PREGRADO_PRESUPUESTO;
  
  PROCEDURE SP_RESIDENCIA_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    BEGIN
    
      SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0) INTO l_contar FROM PSTO_PREGRADO_PROCESO;
      
      INSERT INTO PSTO_PREGRADO_PROCESO(
      ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      ID_EAP_DEPTO_AREA,
      ID_AUXILIAR,
      TOTAL_ENSE_I,--CUOTA I 
      TOTAL_ENSE_II, --CUOTA II
      IMP_MAT,--Costo Diario Resid
      CREDITO_1,--Costo Diario Alim
      CREDITO_2_5,--Costo Diario Lavandería
      TOTAL_HORAS_I,-- DIAS I
      TOTAL_HORAS_II,--DIAS II
      TOTAL_ALUMNO_I,
      TOTAL_ALUMNO_II
      )
      SELECT 
        ROWNUM + l_contar AS ID_PREGRADO_PROCESO,
        P_ID_ENTIDAD, 
        ID_DEPTO,
        P_ID_ANHO,
        P_ID_DEPTO_PADRE,
        ID_EAP_DEPTO_AREA,
        P_ID_AUXILIAR,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      FROM(
        SELECT
        ID_EAP_DEPTO_AREA,
        ID_DEPTO,
        ID_EAP
        FROM VW_DPTO_EAP 
        WHERE ID_TIPO_DEPTO='RE' 
        AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_EAP_DEPTO_AREA NOT IN(
          SELECT ID_EAP_DEPTO_AREA FROM PSTO_PREGRADO_PROCESO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_AUXILIAR=P_ID_AUXILIAR
        ) AND ESTADO='1'
        )
        ORDER BY ID_DEPTO,ID_EAP_DEPTO_AREA;
              
        
        PKG_PRESUPUESTO.SP_RESIDENCIA_CONCEPTO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
        
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;

    END SP_RESIDENCIA_PROCESO;
    
    PROCEDURE SP_RESIDENCIA_CONCEPTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    
    l_pregrado_proceso number;
    l_cuota_i number(10,2);
    l_cuota_ii number(10,2);
    l_res_i number(10,2);
    l_res_ii number(10,2);
    l_alim_i number(10,2);
    l_alim_ii number(10,2);
    l_lav_i number(10,2);
    l_lav_ii number(10,2);
    
      /*TOTAL_ENSE_I,--CUOTA I 
      TOTAL_ENSE_II, --CUOTA II
      IMP_MAT,--Costo Diario Resid
      CREDITO_1,--Costo Diario Alim
      CREDITO_2_5,--Costo Diario Lavandería
      TOTAL_HORAS_I,-- DIAS I
      TOTAL_HORAS_II,--DIAS II*/
      
      
       
      
    CURSOR cproc IS	
      SELECT 
        ID_PREGRADO_PROCESO,
        TOTAL_ENSE_I*TOTAL_ALUMNO_I AS CUOTA_I,
        TOTAL_ENSE_II*TOTAL_ALUMNO_II AS CUOTA_II,
        IMP_MAT*TOTAL_HORAS_I*TOTAL_ALUMNO_I AS RESIDENCIA_I,
        IMP_MAT*TOTAL_HORAS_II*TOTAL_ALUMNO_II AS RESIDENCIA_II,
        CREDITO_1*TOTAL_HORAS_I*TOTAL_ALUMNO_I AS ALIMENTACION_I,
        CREDITO_1*TOTAL_HORAS_II*TOTAL_ALUMNO_II AS ALIMENTACION_II,
        CREDITO_2_5*TOTAL_HORAS_I*TOTAL_ALUMNO_I AS LAVANDERIA_I,
        CREDITO_2_5*TOTAL_HORAS_II*TOTAL_ALUMNO_II AS LAVANDERIA_II
      FROM PSTO_PREGRADO_PROCESO
      WHERE ID_ENTIDAD=P_ID_ENTIDAD
      AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
      AND ID_ANHO=P_ID_ANHO
      AND ID_AUXILIAR=P_ID_AUXILIAR;
          
    BEGIN
    
       
      
        DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO
        WHERE ID_PREGRADO_PROCESO IN(
          SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_AUXILIAR=P_ID_AUXILIAR	
        );
        
        OPEN cproc;
        FETCH cproc INTO l_pregrado_proceso,l_cuota_i,l_cuota_ii,l_res_i,l_res_ii,l_alim_i,l_alim_ii,l_lav_i,l_lav_ii;
    
        WHILE cproc%FOUND LOOP
        
          --CUOTA ALUMNO
           INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
              ID_PREGRADO_PROCESO, 
              ID_CONCEPTO_PRECIO, 
              IMPORTE_I, 
              IMPORTE_II, 
              TOTAL_I, 
              TOTAL_II
          )
          SELECT
          l_pregrado_proceso,
          ID_CONCEPTO_PRECIO,
          0,
          0,
          l_cuota_i,
          l_cuota_ii
          FROM PSTO_PREGRADO_CONCEPTO_PRECIO 
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_ANHO=P_ID_ANHO
          AND ID_AUXILIAR=P_ID_AUXILIAR
          AND TIPO='M';
          
          --RESIDENCIA
           INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
              ID_PREGRADO_PROCESO, 
              ID_CONCEPTO_PRECIO, 
              IMPORTE_I, 
              IMPORTE_II, 
              TOTAL_I, 
              TOTAL_II
          )
          SELECT
          l_pregrado_proceso,
          ID_CONCEPTO_PRECIO,
          0,
          0,
          l_res_i,
          l_res_ii
          FROM PSTO_PREGRADO_CONCEPTO_PRECIO 
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_ANHO=P_ID_ANHO
          AND ID_AUXILIAR=P_ID_AUXILIAR
          AND TIPO='RE';
          
          --alimentacion
           INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
              ID_PREGRADO_PROCESO, 
              ID_CONCEPTO_PRECIO, 
              IMPORTE_I, 
              IMPORTE_II, 
              TOTAL_I, 
              TOTAL_II
          )
          SELECT
          l_pregrado_proceso,
          ID_CONCEPTO_PRECIO,
          0,
          0,
          l_alim_i,
          l_alim_ii
          FROM PSTO_PREGRADO_CONCEPTO_PRECIO 
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_ANHO=P_ID_ANHO
          AND ID_AUXILIAR=P_ID_AUXILIAR
          AND TIPO='SA';
          
          --lavanderia
           INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
              ID_PREGRADO_PROCESO, 
              ID_CONCEPTO_PRECIO, 
              IMPORTE_I, 
              IMPORTE_II, 
              TOTAL_I, 
              TOTAL_II
          )
          SELECT
          l_pregrado_proceso,
          ID_CONCEPTO_PRECIO,
          0,
          0,
          l_lav_i,
          l_lav_ii
          FROM PSTO_PREGRADO_CONCEPTO_PRECIO 
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_ANHO=P_ID_ANHO
          AND ID_AUXILIAR=P_ID_AUXILIAR
          AND TIPO='SL';
            
          FETCH cproc INTO l_pregrado_proceso,l_cuota_i,l_cuota_ii,l_res_i,l_res_ii,l_alim_i,l_alim_ii,l_lav_i,l_lav_ii;
    
        END LOOP;
        CLOSE cproc;
        
  
      
    END SP_RESIDENCIA_CONCEPTO;
    
    
    
    PROCEDURE SP_CONSERVATORIO_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    BEGIN
     
     SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0) INTO l_contar FROM PSTO_PREGRADO_PROCESO;
     
          
      INSERT INTO PSTO_PREGRADO_PROCESO(
      ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      ID_EAP_DEPTO_AREA,
      ID_AUXILIAR,
      ARMADA, 
      IMP_MAT, --matricula
      CREDITO_1,--precio
      TOTAL_ALUMNO_I,
      TOTAL_ALUMNO_II
      )
      SELECT 
        ROWNUM + l_contar AS ID_PREGRADO_PROCESO,
        P_ID_ENTIDAD, 
        ID_DEPTO,
        P_ID_ANHO,
        P_ID_DEPTO_PADRE,
        ID_EAP_DEPTO_AREA,
        P_ID_AUXILIAR,
        0,
        0,
        0,
        0,
        0
      FROM(
        SELECT
        ID_EAP_DEPTO_AREA,
        ID_DEPTO,
        ID_EAP
        FROM VW_DPTO_EAP 
        WHERE ID_TIPO_DEPTO='CS' 
        AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_EAP_DEPTO_AREA NOT IN(
          SELECT ID_EAP_DEPTO_AREA FROM PSTO_PREGRADO_PROCESO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_AUXILIAR=P_ID_AUXILIAR
        ) AND ESTADO='1'
        )
        ORDER BY ID_DEPTO,ID_EAP_DEPTO_AREA;
        
        
        
        MERGE INTO PSTO_PREGRADO_PROCESO C 
        USING (SELECT 
              X.ID_PREGRADO_PROCESO,
              M.ENSE_I,
              M.ENSE_II,
              M.MAT_I,
              M.MAT_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN
                (
                  SELECT 
                    SUM(CASE WHEN P.CONVOCA='M' THEN D.TOTAL_I ELSE 0 END) AS MAT_I,
                    SUM(CASE WHEN P.CONVOCA='M' THEN D.TOTAL_II ELSE 0 END) AS MAT_II,
                    SUM(CASE WHEN P.CONVOCA='E' THEN D.TOTAL_I ELSE 0 END) AS ENSE_I,
                    SUM(CASE WHEN P.CONVOCA='E' THEN D.TOTAL_II ELSE 0 END) AS ENSE_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  C.TOTAL_ENSE_I=t.ENSE_I,  C.TOTAL_ENSE_II=t.ENSE_II,C.TOTAL_MAT_I=t.MAT_I,C.TOTAL_MAT_II=t.MAT_II;
        
        
        
        SP_CONSERVATORIO_CONCEPTO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);

      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;

    END SP_CONSERVATORIO_PROCESO;
    
    PROCEDURE SP_CONSERVATORIO_CONCEPTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
     l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    BEGIN
    
        DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO
        WHERE ID_PREGRADO_PROCESO IN(
          SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_AUXILIAR=P_ID_AUXILIAR	
        );
    
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
              ID_PREGRADO_PROCESO, 
              ID_CONCEPTO_PRECIO, 
              IMPORTE_I, 
              IMPORTE_II, 
              TOTAL_I, 
              TOTAL_II
          )
          
        select 
        A.ID_PREGRADO_PROCESO,
        B.ID_CONCEPTO_PRECIO,
        A.IMP_MAT AS IMPORTE_I, 
        A.IMP_MAT AS IMPORTE_II,
        A.IMP_MAT*TOTAL_ALUMNO_I AS TOTAL_I,
        A.IMP_MAT*TOTAL_ALUMNO_II AS TOTAL_II
        FROM  PSTO_PREGRADO_PROCESO A, PSTO_PREGRADO_CONCEPTO_PRECIO B
        WHERE  A.ID_ENTIDAD=B.ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=B.ID_DEPTO_PADRE
        AND A.ID_ANHO=B.ID_ANHO
        AND A.ID_AUXILIAR=B.ID_AUXILIAR
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_AUXILIAR=P_ID_AUXILIAR
        AND B.TIPO='M'
        UNION ALL
        select 
        A.ID_PREGRADO_PROCESO,
        B.ID_CONCEPTO_PRECIO,
        A.CREDITO_1 AS IMPORTE_I, 
        A.CREDITO_1 AS IMPORTE_II,
        A.ARMADA*A.CREDITO_1*TOTAL_ALUMNO_I AS TOTAL_I,
        A.ARMADA*A.CREDITO_1*TOTAL_ALUMNO_II AS TOTAL_II
        FROM  PSTO_PREGRADO_PROCESO A, PSTO_PREGRADO_CONCEPTO_PRECIO B
        WHERE  A.ID_ENTIDAD=B.ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=B.ID_DEPTO_PADRE
        AND A.ID_ANHO=B.ID_ANHO
        AND A.ID_AUXILIAR=B.ID_AUXILIAR
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_AUXILIAR=P_ID_AUXILIAR 
        AND B.TIPO='E'
        ORDER BY A.ID_PREGRADO_PROCESO,
        B.ID_CONCEPTO_PRECIO;
      
    END  SP_CONSERVATORIO_CONCEPTO;
    
    PROCEDURE SP_IDIOMAS_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    BEGIN
     
     SELECT COALESCE(MAX(ID_PREGRADO_PROCESO),0) INTO l_contar FROM PSTO_PREGRADO_PROCESO;
     
          
      INSERT INTO PSTO_PREGRADO_PROCESO(
      ID_PREGRADO_PROCESO,
      ID_ENTIDAD,
      ID_DEPTO,
      ID_ANHO,
      ID_DEPTO_PADRE,
      ID_EAP_DEPTO_AREA,
      ID_AUXILIAR,
      ARMADA, 
      IMP_MAT, --MATERIAL EDUCATIVO M
      CREDITO_1,--ENSEÑNZA E
      CREDITO_2_5,--CUOTA ALUMNO CA
      TOTAL_ALUMNO_I,
      TOTAL_ALUMNO_II
      )
      SELECT 
        ROWNUM + l_contar AS ID_PREGRADO_PROCESO,
        P_ID_ENTIDAD, 
        ID_DEPTO,
        P_ID_ANHO,
        P_ID_DEPTO_PADRE,
        ID_EAP_DEPTO_AREA,
        P_ID_AUXILIAR,
        1,
        0,
        0,
        0,
        0,
        0
      FROM(
        SELECT
        ID_EAP_DEPTO_AREA,
        ID_DEPTO,
        ID_EAP
        FROM VW_DPTO_EAP 
        WHERE ID_TIPO_DEPTO='ID' 
        AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND ID_ENTIDAD=P_ID_ENTIDAD
        AND ID_EAP_DEPTO_AREA NOT IN(
          SELECT ID_EAP_DEPTO_AREA FROM PSTO_PREGRADO_PROCESO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_AUXILIAR=P_ID_AUXILIAR
        ) AND ESTADO='1'
        )
        ORDER BY ID_DEPTO,ID_EAP_DEPTO_AREA;
        
        SP_IDIOMAS_CONCEPTO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
        
        
         MERGE INTO PSTO_PREGRADO_PROCESO C 
        USING (SELECT 
              X.ID_PREGRADO_PROCESO,
              M.ENSE_I,
              M.ENSE_II,
              M.MAT_I,
              M.MAT_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN
                (
                  SELECT 
                    SUM(CASE WHEN P.CONVOCA='M' THEN D.TOTAL_I ELSE 0 END) AS MAT_I,
                    SUM(CASE WHEN P.CONVOCA='M' THEN D.TOTAL_II ELSE 0 END) AS MAT_II,
                    SUM(CASE WHEN P.CONVOCA='E' THEN D.TOTAL_I ELSE 0 END) AS ENSE_I,
                    SUM(CASE WHEN P.CONVOCA='E' THEN D.TOTAL_II ELSE 0 END) AS ENSE_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  C.TOTAL_ENSE_I=t.ENSE_I,  C.TOTAL_ENSE_II=t.ENSE_II,C.TOTAL_MAT_I=t.MAT_I,C.TOTAL_MAT_II=t.MAT_II;

      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;

    END SP_IDIOMAS_PROCESO;
    
    PROCEDURE SP_IDIOMAS_CONCEPTO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
     l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    BEGIN
    
        DELETE FROM PSTO_PREGRADO_PROCESO_CONCEPTO
        WHERE ID_PREGRADO_PROCESO IN(
          SELECT ID_PREGRADO_PROCESO FROM PSTO_PREGRADO_PROCESO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_ANHO=P_ID_ANHO
          AND ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
          AND ID_AUXILIAR=P_ID_AUXILIAR	
        );
    
      INSERT INTO PSTO_PREGRADO_PROCESO_CONCEPTO(
              ID_PREGRADO_PROCESO, 
              ID_CONCEPTO_PRECIO, 
              IMPORTE_I, 
              IMPORTE_II, 
              TOTAL_I, 
              TOTAL_II
          )
          
        select 
        A.ID_PREGRADO_PROCESO,
        B.ID_CONCEPTO_PRECIO,
        A.IMP_MAT AS IMPORTE_I, 
        A.IMP_MAT AS IMPORTE_II,
        A.IMP_MAT*TOTAL_ALUMNO_I AS TOTAL_I,
        A.IMP_MAT*TOTAL_ALUMNO_II AS TOTAL_II
        FROM  PSTO_PREGRADO_PROCESO A, PSTO_PREGRADO_CONCEPTO_PRECIO B
        WHERE  A.ID_ENTIDAD=B.ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=B.ID_DEPTO_PADRE
        AND A.ID_ANHO=B.ID_ANHO
        AND A.ID_AUXILIAR=B.ID_AUXILIAR
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_AUXILIAR=P_ID_AUXILIAR 
        AND B.TIPO='M'
        UNION ALL
        select 
        A.ID_PREGRADO_PROCESO,
        B.ID_CONCEPTO_PRECIO,
        A.CREDITO_2_5 AS IMPORTE_I, 
        A.CREDITO_2_5 AS IMPORTE_II,
        A.CREDITO_2_5*TOTAL_ALUMNO_I AS TOTAL_I,
        A.CREDITO_2_5*TOTAL_ALUMNO_II AS TOTAL_II
        FROM  PSTO_PREGRADO_PROCESO A, PSTO_PREGRADO_CONCEPTO_PRECIO B
        WHERE  A.ID_ENTIDAD=B.ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=B.ID_DEPTO_PADRE
        AND A.ID_ANHO=B.ID_ANHO
        AND A.ID_AUXILIAR=B.ID_AUXILIAR
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_AUXILIAR=P_ID_AUXILIAR
        AND B.TIPO='CA'
        UNION ALL
        select 
        A.ID_PREGRADO_PROCESO,
        B.ID_CONCEPTO_PRECIO,
        A.CREDITO_1 AS IMPORTE_I, 
        A.CREDITO_1 AS IMPORTE_II,
        (A.CREDITO_1*TOTAL_ALUMNO_I)-((A.IMP_MAT*TOTAL_ALUMNO_I)+(A.CREDITO_2_5*TOTAL_ALUMNO_I)) AS TOTAL_I,
        (A.CREDITO_1*TOTAL_ALUMNO_II)-((A.IMP_MAT*TOTAL_ALUMNO_II)+(A.CREDITO_2_5*TOTAL_ALUMNO_II)) AS TOTAL_II
        FROM  PSTO_PREGRADO_PROCESO A, PSTO_PREGRADO_CONCEPTO_PRECIO B
        WHERE  A.ID_ENTIDAD=B.ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=B.ID_DEPTO_PADRE
        AND A.ID_ANHO=B.ID_ANHO
        AND A.ID_AUXILIAR=B.ID_AUXILIAR
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
        AND A.ID_ANHO=P_ID_ANHO
        AND A.ID_AUXILIAR=P_ID_AUXILIAR 
        AND B.TIPO='E'
        ORDER BY A.ID_PREGRADO_PROCESO,
        B.ID_CONCEPTO_PRECIO;
      
    END  SP_IDIOMAS_CONCEPTO;
    
      
    PROCEDURE SP_ADD_BUDGET_DETAILS(P_ID_PRESUPUESTO NUMBER,P_ID_ACTIVIDAD NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_DEPTO_ASIENTO VARCHAR2,P_DESCRIPCION VARCHAR2,P_CANTIDAD NUMBER,P_PUNIDAD NUMBER,
      P_A NUMBER,  P_B NUMBER,  P_C NUMBER, P_D NUMBER, P_E NUMBER, P_F NUMBER, P_G NUMBER) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_id_presupuesto_det number;
      l_tipo varchar2(2);
      l_id_evento number;
      l_formula varchar2(300);
      l_total_ingreso number(10,2);
      l_total_gasto number(10,2);
      l_esdescuento varchar2(2);
      l_depto varchar2(10);
      l_nombre varchar2(255);
      l_nombre_asiento varchar2(255);
      l_id_tipoplan number; 
      l_id_cuentaaasi varchar2(10 byte); 
      l_id_restriccion varchar2(50 byte); 
      l_id_ctacte varchar2(50 byte);
      l_id_tipoctacte varchar2(10 byte); 
      l_id_entidad_ctacte number;

    BEGIN
    
            
      SELECT COALESCE(MAX(ID_PRESUPUESTO_DET),0)+1 INTO l_id_presupuesto_det FROM PSTO_PRESUPUESTO_DET WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO;
      
      SELECT 
      TIPO,
      ID_EVENTO,coalesce(ESDESCUENTO,'N') ,
      ID_TIPOPLAN,
      ID_CUENTAAASI,
      ID_RESTRICCION,
      ID_CTACTE,
      ID_TIPOCTACTE,
      ID_ENTIDAD_CTACTE
      INTO l_tipo,
      l_id_evento,
      l_esdescuento,
      l_id_tipoplan,
      l_id_cuentaaasi,
      l_id_restriccion, 
      l_id_ctacte,
      l_id_tipoctacte,
      l_id_entidad_ctacte
      FROM  PSTO_ACTIVIDAD WHERE ID_ACTIVIDAD=P_ID_ACTIVIDAD;
      
      SELECT NOMBRE into l_nombre FROM CONTA_ENTIDAD_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO;
      
      SELECT NOMBRE into l_nombre_asiento FROM CONTA_ENTIDAD_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO_ASIENTO;
      
      INSERT INTO PSTO_PRESUPUESTO_DET(
        ID_PRESUPUESTO_DET,
        ID_PRESUPUESTO,
        ID_ACTIVIDAD,
        ID_ENTIDAD, 
        ID_DEPTO, 
        ID_DEPTO_ASIENTO,
        TIPO,
        DESCRIPCION,
        CANTIDAD,
        PUNIDAD,
        A, 
        B, 
        C,
        D, 
        E,
        F, 
        G,
        TOTAL,
        DEPTO_NOMBRE,
        DEPTO_ASIENTO_NOMBRE,
        ID_TIPOPLAN,
        ID_CUENTAAASI,
        ID_RESTRICCION,
        ID_CTACTE,
        ID_TIPOCTACTE,
        ID_ENTIDAD_CTACTE
      )VALUES(
        l_id_presupuesto_det,
        P_ID_PRESUPUESTO,
        P_ID_ACTIVIDAD,
        P_ID_ENTIDAD, 
        P_ID_DEPTO, 
        P_ID_DEPTO_ASIENTO,
        l_tipo,
        P_DESCRIPCION,
        P_CANTIDAD,
        P_PUNIDAD,
        P_A, 
        P_B, 
        P_C,
        P_D, 
        P_E,
        P_F, 
        P_G,
        0.00,
        l_nombre,
        l_nombre_asiento,
        l_id_tipoplan,
        l_id_cuentaaasi,
        l_id_restriccion, 
        l_id_ctacte,
        l_id_tipoctacte,
        l_id_entidad_ctacte
      );
      
      SELECT FORMULA INTO l_formula  FROM  PSTO_EVENTO WHERE ID_EVENTO=l_id_evento;
      
      if l_formula is null then
        l_formula:='0';
      end if;
      
      EXECUTE IMMEDIATE 'UPDATE PSTO_PRESUPUESTO_DET SET TOTAL='||l_formula||' WHERE ID_PRESUPUESTO_DET=:DETALLE AND ID_PRESUPUESTO=:PRESUPUESTO'  
      USING l_id_presupuesto_det,P_ID_PRESUPUESTO;
      
      if l_esdescuento='S' and l_tipo='I' then
        UPDATE PSTO_PRESUPUESTO_DET SET TOTAL=(-1)*TOTAL 
        WHERE ID_PRESUPUESTO_DET=l_id_presupuesto_det 
        AND ID_PRESUPUESTO=P_ID_PRESUPUESTO;
     end if;
      
      select 
      coalesce(sum(case when tipo='I' then TOTAL else 0 end),0),
      coalesce(sum(case when tipo='G' then TOTAL else 0 end),0)
      into 
      l_total_ingreso,
      l_total_gasto
      from  PSTO_PRESUPUESTO_DET
      where ID_PRESUPUESTO=P_ID_PRESUPUESTO;
      
      update PSTO_PRESUPUESTO set
      TOTAL_INGRESO=l_total_ingreso,
      TOTAL_GASTO=l_total_gasto
      where ID_PRESUPUESTO=P_ID_PRESUPUESTO;
    
    END SP_ADD_BUDGET_DETAILS;
    
    PROCEDURE SP_ELIMINAR_PRESUPUESTO(P_ID_PRESUPUESTO NUMBER,P_ID_PERSONA NUMBER) IS
    BEGIN
        INSERT INTO PSTO_PRESUPUESTO_ELIMINAR(
            ID,
            ID_PRESUPUESTO,
            ID_ENTIDAD, 
            ID_ANHO, 
            ID_EVENTO,
            ID_PSTONEGOCIO,
            ID_EJE,
            ID_DEPTO,
            ID_PERSONA,
            DESCRIPCION,
            FECHA, 
            TOTAL_INGRESO,
            TOTAL_GASTO, 
            ESTADO,
            MOTIVO,
            ID_PERONA_ELIM, 
            FECHA_ELIM 
            )
        SELECT 
            TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),
            ID_PRESUPUESTO,
            ID_ENTIDAD, 
            ID_ANHO, 
            ID_EVENTO,
            ID_PSTONEGOCIO,
            ID_EJE,
            ID_DEPTO,
            ID_PERSONA,
            DESCRIPCION,
            FECHA, 
            TOTAL_INGRESO,
            TOTAL_GASTO, 
            ESTADO,
            MOTIVO,
            P_ID_PERSONA,
            SYSDATE
          FROM PSTO_PRESUPUESTO
        WHERE ID_PRESUPUESTO = P_ID_PRESUPUESTO;
        
        DELETE FROM PSTO_ASIENTO_DET
                WHERE ID_ASIENTO IN(
                    SELECT ID_ASIENTO FROM PSTO_ASIENTO WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO 
                );
        
        
        DELETE FROM PSTO_ASIENTO
                WHERE ID_PRESUPUESTO = P_ID_PRESUPUESTO;
     
        DELETE FROM PSTO_PRESUPUESTO_DET_DIST
        WHERE ID_PRESUPUESTO  = P_ID_PRESUPUESTO;
        
        DELETE FROM PSTO_PRESUPUESTO_DET
                WHERE ID_PRESUPUESTO = P_ID_PRESUPUESTO;
  
        
        DELETE  FROM PSTO_PRESUPUESTO
                WHERE ID_PRESUPUESTO = P_ID_PRESUPUESTO;
                
    END SP_ELIMINAR_PRESUPUESTO;
    
    PROCEDURE SP_ELIMINAR_PRESUPUESTO_USER(P_ID_PRESUPUESTO NUMBER,P_ID_PERSONA NUMBER) IS
    BEGIN
      
        INSERT INTO PSTO_PRESUPUESTO_ELIMINAR(
            ID,
            ID_PRESUPUESTO,
            ID_ENTIDAD, 
            ID_ANHO, 
            ID_EVENTO,
            ID_PSTONEGOCIO,
            ID_EJE,
            ID_DEPTO,
            ID_PERSONA,
            DESCRIPCION,
            FECHA, 
            TOTAL_INGRESO,
            TOTAL_GASTO, 
            ESTADO,
            MOTIVO,
            ID_PERONA_ELIM, 
            FECHA_ELIM 
            )
        SELECT 
            TO_CHAR(SYSDATE,'YYYYMMDDHH24MISS'),
            ID_PRESUPUESTO,
            ID_ENTIDAD, 
            ID_ANHO, 
            ID_EVENTO,
            ID_PSTONEGOCIO,
            ID_EJE,
            ID_DEPTO,
            ID_PERSONA,
            DESCRIPCION,
            FECHA, 
            TOTAL_INGRESO,
            TOTAL_GASTO, 
            ESTADO,
            MOTIVO,
            P_ID_PERSONA,
            SYSDATE
          FROM PSTO_PRESUPUESTO
        WHERE ID_PRESUPUESTO = P_ID_PRESUPUESTO
        AND ESTADO ='0';
        
        
        DELETE FROM PSTO_ASIENTO_DET
        WHERE ID_ASIENTO IN(
            SELECT ID_ASIENTO FROM PSTO_ASIENTO 
            WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO   
            AND ESTADO ='0'
        );
                
        DELETE FROM PSTO_ASIENTO
        WHERE ID_PRESUPUESTO = P_ID_PRESUPUESTO
        AND ESTADO ='0';
        
        DELETE FROM PSTO_PRESUPUESTO_DET_DIST
        WHERE ID_PRESUPUESTO  IN(
            SELECT ID_PRESUPUESTO FROM PSTO_PRESUPUESTO 
            WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO   
            AND ESTADO ='0'
        );  
        
        DELETE FROM PSTO_PRESUPUESTO_DET
        WHERE ID_PRESUPUESTO  IN(
            SELECT ID_PRESUPUESTO FROM PSTO_PRESUPUESTO 
            WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO   
            AND ESTADO ='0'
        );      

        DELETE  FROM PSTO_PRESUPUESTO
        WHERE ID_PRESUPUESTO = P_ID_PRESUPUESTO
        AND ESTADO ='0';
                
    END SP_ELIMINAR_PRESUPUESTO_USER;
    
    PROCEDURE SP_ASIENTO_PRESUPUESTO(P_ID_PRESUPUESTO NUMBER,P_ID_PERSONA NUMBER) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_id_asiento number;
      l_id_entidad number;
      l_id_anho number;
      l_id_persona number;
      l_descripcion varchar2(200);
      l_total_ingreso number(10,2);
      l_total_gasto number(10,2);
      l_id_evento number;
      l_tipo_asiento varchar2(2);
    BEGIN
    
       SELECT count(*) into l_contar FROM PSTO_ASIENTO WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO  AND ESTADO='1';
       
       SELECT ID_ENTIDAD,ID_ANHO,DESCRIPCION,ID_EVENTO into l_id_entidad,l_id_anho,l_descripcion ,l_id_evento
       FROM PSTO_PRESUPUESTO WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO;
       
       SELECT COALESCE(TIPO_ASIENTO,'S') INTO l_tipo_asiento FROM PSTO_EVENTO WHERE ID_EVENTO=l_id_evento;
       
       if l_contar=0 then
           SELECT COALESCE(MAX(ID_ASIENTO),0)+1 INTO l_id_asiento FROM PSTO_ASIENTO;
           
           insert into PSTO_ASIENTO(
            ID_ASIENTO, 
            ID_ENTIDAD,
            ID_PRESUPUESTO,
            ID_ANHO,
            ID_PERSONA,
            DESCRIPCION,
            FECHA,
            ESTADO
           )values(
           l_id_asiento,
           l_id_entidad,
           P_ID_PRESUPUESTO,
           l_id_anho,
           P_ID_PERSONA,
           l_descripcion,
           sysdate,
           '1'
           );
       else
           SELECT ID_ASIENTO  INTO l_id_asiento FROM PSTO_ASIENTO WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO  AND ESTADO='1';
          
           DELETE FROM PSTO_ASIENTO_DET   WHERE ID_ASIENTO=l_id_asiento;
           
           update PSTO_ASIENTO set
           ID_PERSONA=l_id_persona,
           DESCRIPCION=l_descripcion,
           FECHA=sysdate
           where ID_ASIENTO=l_id_asiento;
           
        end if;
        
        
        insert into PSTO_ASIENTO_DET(
          ID_ASIENTO_DET,
          ID_ASIENTO, 
          ID_ENTIDAD,
          ID_DEPTO,
          TIPO, 
          ID_MES,
          ID_TIPOPLAN,
          ID_CUENTAAASI,
          ID_RESTRICCION,
          ID_CTACTE,
          ID_TIPOCTACTE,
          GLOSA,
          IMPORTE
        )
        SELECT 
         ROWNUM  AS ID_ASIENTO_DET,
          l_id_asiento,
          M.ID_ENTIDAD,
          M.ID_DEPTO_ASIENTO,
          M.TIPO,
          M.ID_MES,
          M.ID_TIPOPLAN,
          M.ID_CUENTAAASI,
          M.ID_RESTRICCION,
          M.ID_CTACTE,
          M.ID_TIPOCTACTE, 
          M.NOMBRE,
          M.TOTAL
          FROM(
          select 
            a.ID_ENTIDAD,
            a.ID_DEPTO_ASIENTO,
            a.TIPO,
            d.ID_MES,
            a.ID_TIPOPLAN,
            a.ID_CUENTAAASI,
            a.ID_RESTRICCION,
            a.ID_CTACTE,
            a.ID_TIPOCTACTE, 
            CASE WHEN l_tipo_asiento='S' THEN c.NOMBRE ELSE b.NOMBRE END as NOMBRE,
            COALESCE(sum(d.IMPORTE),0) AS TOTAL
            from PSTO_PRESUPUESTO_DET a,PSTO_PRESUPUESTO_DET_DIST d, PSTO_ACTIVIDAD b,PSTO_EVENTO C
            WHERE a.ID_PRESUPUESTO=D.ID_PRESUPUESTO
            AND a.ID_PRESUPUESTO_DET=D.ID_PRESUPUESTO_DET
            AND a.ID_ACTIVIDAD=b.ID_ACTIVIDAD
            AND b.ID_EVENTO=c.ID_EVENTO
            AND a.ID_PRESUPUESTO=P_ID_PRESUPUESTO
            AND a.TOTAL<>0
            GROUP BY a.ID_ENTIDAD,
            a.ID_DEPTO_ASIENTO,
            a.TIPO,
            d.ID_MES,
            a.ID_TIPOPLAN,
            a.ID_CUENTAAASI,
            a.ID_RESTRICCION,
            a.ID_CTACTE,
            a.ID_TIPOCTACTE, 
            CASE WHEN l_tipo_asiento='S' THEN c.NOMBRE ELSE b.NOMBRE END
            
        )M;
          
         select 
        coalesce(sum(case when tipo='I' then IMPORTE else 0 end),0),
        coalesce(sum(case when tipo='G' then IMPORTE else 0 end),0)
        into 
        l_total_ingreso,
        l_total_gasto
        from  PSTO_ASIENTO_DET
        where ID_ASIENTO=l_id_asiento;
        
        update PSTO_ASIENTO set
        TOTAL_INGRESO=l_total_ingreso,
        TOTAL_GASTO=l_total_gasto
        where ID_ASIENTO=l_id_asiento;        
                
    END SP_ASIENTO_PRESUPUESTO;
    
    PROCEDURE SP_VALIDA_PRESUPUESTO(P_ID_PRESUPUESTO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_estado varchar2(2);
      l_estado_asi varchar2(2);
      l_msg varchar2(200):='';
    BEGIN
       SELECT ESTADO,case when ESTADO='0' then 'Anulado' when ESTADO='2' then 'Aprobado'  end 
       into l_estado,l_msg FROM PSTO_PRESUPUESTO WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO ;
       
       if l_estado<>'1' then
          l_error:=1;
          l_msgerror:='Presupuesto '||l_msg;
       end if;
       
       if l_error=0 then
       
         SELECT count(*) into l_contar FROM PSTO_ASIENTO WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO and ESTADO='2' ;
         
         if l_contar>0 then
            l_error:=1;
            l_msgerror:='Asiento Aprobado';
         end if;
       end if;
       
       
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
    END SP_VALIDA_PRESUPUESTO;
    PROCEDURE SP_GENERAR_PROCESO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO_PADRE VARCHAR2,P_ID_ANHO NUMBER,P_ID_AUXILIAR NUMBER,P_TIPO VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;

    BEGIN
    
      --PKG_PRESUPUESTO.SP_PREGRADO_CONCEPTO_PRECIO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
      if P_TIPO='RE' then 
        SP_RESIDENCIA_PROCESO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
      ELSIF P_TIPO='CS' THEN
        SP_CONSERVATORIO_PROCESO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
      ELSIF P_TIPO='PG' THEN
        SP_PREGRADO_CONCEPTO_PRECIO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR ,l_error,l_msgerror);
      ELSIF P_TIPO='ID' THEN
        SP_IDIOMAS_PROCESO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE ,P_ID_ANHO ,P_ID_AUXILIAR,l_error,l_msgerror);
      else
      
        SP_PREGRADO_CONCEPTO_PRECIO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR ,l_error,l_msgerror);
        if P_TIPO='PR' then
          SP_PROESAD_PROYECCION(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
          SP_PROESAD_PROCESO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
        else
          SP_PREGRADO_PROYECCION(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
          SP_PREGRADO_PROCESO(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO,P_ID_AUXILIAR,l_error,l_msgerror);
        end if;
     end if; 
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
    END SP_GENERAR_PROCESO;
    
    PROCEDURE SP_ACTUALIZAR_TIPOCONCEPTO(P_ID_CONCEPTO_PRECIO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_id_entidad number;
      l_id_anho number;
      l_id_depto_padre varchar2(10);
      l_id_auxiliar number;
      l_msg varchar2(200):='';
    BEGIN
       
       
      SELECT ID_ENTIDAD,ID_ANHO,ID_DEPTO_PADRE,ID_AUXILIAR 
      INTO l_id_entidad,l_id_anho,l_id_depto_padre,l_id_auxiliar
      FROM PSTO_PREGRADO_CONCEPTO_PRECIO
      WHERE ID_CONCEPTO_PRECIO=P_ID_CONCEPTO_PRECIO;
       
      MERGE INTO PSTO_PREGRADO_PROCESO_CONCEPTO C 
      USING (
         SELECT 
         P.ID_PREGRADO_PROCESO,
         D.ID_CONCEPTO_PRECIO,
         R.TIPO
         FROM PSTO_PREGRADO_PROCESO_CONCEPTO D,PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO R
         WHERE D.ID_PREGRADO_PROCESO=P.ID_PREGRADO_PROCESO
         AND D.ID_CONCEPTO_PRECIO=R.ID_CONCEPTO_PRECIO
         AND P.ID_ENTIDAD=l_id_entidad
         AND P.ID_ANHO=l_id_anho
         AND P.ID_DEPTO_PADRE=l_id_depto_padre
         AND P.ID_AUXILIAR=l_id_auxiliar
      )t
      ON(C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO AND C.ID_CONCEPTO_PRECIO=t.ID_CONCEPTO_PRECIO)
      WHEN  MATCHED THEN UPDATE SET
      C.TIPO=t.TIPO;
       
       
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
    END SP_ACTUALIZAR_TIPOCONCEPTO;
  
    PROCEDURE SP_GEN_PRESUPUESTO_DET_DIST(P_ID_PRESUPUESTO NUMBER) IS

      l_id_actividad number;
      l_tipo_dist varchar2(10);
      l_total number(10,2);
      l_importe number(10,2);
      l_meses number;
      l_id_presupuesto_det number;
      
      CURSOR cur IS 
      SELECT  ID_PRESUPUESTO_DET 
      FROM PSTO_PRESUPUESTO_DET 
      WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO 
      AND COALESCE(TOTAL,0)<>0
      ORDER BY ID_PRESUPUESTO_DET;
      
    BEGIN
       
      
      DELETE FROM PSTO_PRESUPUESTO_DET_DIST WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO;
      
      OPEN cur;
          FETCH cur INTO l_id_presupuesto_det;
                
          WHILE cur%FOUND LOOP
      
            SELECT A.ID_ACTIVIDAD,B.TIPO_DIST,A.TOTAL
            INTO l_id_actividad,l_tipo_dist,l_total
            FROM PSTO_PRESUPUESTO_DET A ,PSTO_ACTIVIDAD B
            WHERE A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
            AND A.ID_PRESUPUESTO_DET=l_id_presupuesto_det 
            AND A.ID_PRESUPUESTO=P_ID_PRESUPUESTO;
            
            select count(*) INTO l_meses from PSTO_ACTIVIDAD_DIST WHERE ID_ACTIVIDAD=l_id_actividad; 
            
            if l_tipo_dist='PR' then
              l_importe:=l_total/l_meses;
            end if;
            
            INSERT INTO PSTO_PRESUPUESTO_DET_DIST(
            ID_PRESUPUESTO_DET,
            ID_PRESUPUESTO,
            ID_MES,
            IMPORTE,
            PORCENTAJE,
            MESES
            )
            SELECT 
            A.ID_PRESUPUESTO_DET,
            A.ID_PRESUPUESTO,
            B.ID_MES,
            CASE WHEN l_tipo_dist='PR' THEN l_importe ELSE  A.TOTAL*(B.PORCENTAJE/100) END AS IMPORTE,
            CASE WHEN l_tipo_dist='PO' THEN PORCENTAJE ELSE  0 END PORCENTAJE,
            CASE WHEN l_tipo_dist='PR' THEN l_meses ELSE  0 END
            FROM  PSTO_PRESUPUESTO_DET A, PSTO_ACTIVIDAD_DIST B 
            where A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
            AND A.ID_PRESUPUESTO=P_ID_PRESUPUESTO
            AND A.ID_PRESUPUESTO_DET=l_id_presupuesto_det
            ORDER BY B.ID_MES ;
            
        FETCH cur INTO l_id_presupuesto_det;
                  
      END LOOP;
      CLOSE cur; 
      
    END SP_GEN_PRESUPUESTO_DET_DIST;
    
    
    PROCEDURE SP_GEN_PSTO_DET_DIST_AUXI(P_ID_PRESUPUESTO NUMBER) IS

      l_id_actividad number;
      l_tipo_dist varchar2(10);
      l_total number(10,2);
      l_importe number(10,2);
      l_totalA number(10,2);
      l_totalB number(10,2);
      l_meses number;
      l_id_presupuesto_det number;
      
      CURSOR cur IS 
      SELECT  ID_PRESUPUESTO_DET 
      FROM PSTO_PRESUPUESTO_DET 
      WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO 
      AND COALESCE(TOTAL,0)<>0
      ORDER BY ID_PRESUPUESTO_DET;
      
    BEGIN
       
      
      DELETE FROM PSTO_PRESUPUESTO_DET_DIST WHERE ID_PRESUPUESTO=P_ID_PRESUPUESTO;
      
      OPEN cur;
          FETCH cur INTO l_id_presupuesto_det;
                
          WHILE cur%FOUND LOOP
      
            SELECT A.ID_ACTIVIDAD,B.TIPO_DIST,A.TOTAL,A.A,A.B
            INTO l_id_actividad,l_tipo_dist,l_total,l_totalA,l_totalB
            FROM PSTO_PRESUPUESTO_DET A ,PSTO_ACTIVIDAD B
            WHERE A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
            AND A.ID_PRESUPUESTO_DET=l_id_presupuesto_det 
            AND A.ID_PRESUPUESTO=P_ID_PRESUPUESTO;
            
            ---PRIMER SEMESTRE
            select count(*) INTO l_meses from PSTO_ACTIVIDAD_DIST WHERE ID_ACTIVIDAD=l_id_actividad AND ID_MES IN(1,2,3,4,5,6); 
            
            if l_tipo_dist='PR' then
              l_importe:=l_totalA/l_meses;
            end if;
            
            INSERT INTO PSTO_PRESUPUESTO_DET_DIST(
            ID_PRESUPUESTO_DET,
            ID_PRESUPUESTO,
            ID_MES,
            IMPORTE,
            PORCENTAJE,
            MESES
            )
            SELECT 
            A.ID_PRESUPUESTO_DET,
            A.ID_PRESUPUESTO,
            B.ID_MES,
            CASE WHEN l_tipo_dist='PR' THEN l_importe ELSE  A.A*(B.PORCENTAJE/100) END AS IMPORTE,
            CASE WHEN l_tipo_dist='PO' THEN PORCENTAJE ELSE  0 END PORCENTAJE,
            CASE WHEN l_tipo_dist='PR' THEN l_meses ELSE  0 END
            FROM  PSTO_PRESUPUESTO_DET A, PSTO_ACTIVIDAD_DIST B 
            where A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
            AND A.ID_PRESUPUESTO=P_ID_PRESUPUESTO
            AND A.ID_PRESUPUESTO_DET=l_id_presupuesto_det
            AND B.ID_MES IN(1,2,3,4,5,6)
            ORDER BY B.ID_MES ;
            
            ---SEGUNDO SEMESTRE
            select count(*) INTO l_meses from PSTO_ACTIVIDAD_DIST WHERE ID_ACTIVIDAD=l_id_actividad AND ID_MES IN(7,8,9,10,11,12); 
            
            if l_tipo_dist='PR' then
              l_importe:=l_totalB/l_meses;
            end if;
            
            INSERT INTO PSTO_PRESUPUESTO_DET_DIST(
            ID_PRESUPUESTO_DET,
            ID_PRESUPUESTO,
            ID_MES,
            IMPORTE,
            PORCENTAJE,
            MESES
            )
            SELECT 
            A.ID_PRESUPUESTO_DET,
            A.ID_PRESUPUESTO,
            B.ID_MES,
            CASE WHEN l_tipo_dist='PR' THEN l_importe ELSE  A.B*(B.PORCENTAJE/100) END AS IMPORTE,
            CASE WHEN l_tipo_dist='PO' THEN PORCENTAJE ELSE  0 END PORCENTAJE,
            CASE WHEN l_tipo_dist='PR' THEN l_meses ELSE  0 END
            FROM  PSTO_PRESUPUESTO_DET A, PSTO_ACTIVIDAD_DIST B 
            where A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
            AND A.ID_PRESUPUESTO=P_ID_PRESUPUESTO
            AND A.ID_PRESUPUESTO_DET=l_id_presupuesto_det
            AND B.ID_MES IN(7,8,9,10,11,12)
            ORDER BY B.ID_MES ;
            
        FETCH cur INTO l_id_presupuesto_det;
                  
      END LOOP;
      CLOSE cur; 
      
    END SP_GEN_PSTO_DET_DIST_AUXI;
    
    PROCEDURE SP_VALIDA_GEN_PRESUPUESTO(P_ID_EVENTO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_contar number;
      l_contar1 number;
      l_msg varchar2(200):='';
    BEGIN
       
        
        SELECT COUNT(*) INTO l_contar
        FROM PSTO_ACTIVIDAD 
        WHERE ID_EVENTO=P_ID_EVENTO
        AND ID_DEPTO IS NULL;
      
        /*if l_contar>0 then  -- Ahora se asigna al momento de generar presupuesto
         l_error:=1;
         l_msgerror:='Falta asignar departamento. ';
        end if;*/
       
        SELECT COUNT(*) INTO l_contar
        FROM PSTO_ACTIVIDAD 
        WHERE ID_EVENTO=P_ID_EVENTO
        AND (ID_TIPOPLAN IS NULL OR ID_CUENTAAASI IS NULL OR ID_RESTRICCION IS NULL);
      
        if l_contar>0 then
         l_error:=1;
         l_msgerror:=l_msgerror||'Falta asignar cuenta contable denominacional. ';
        end if;
        
        SELECT COUNT(*) INTO l_contar
        FROM PSTO_ACTIVIDAD 
        WHERE ID_EVENTO=P_ID_EVENTO;
        
        SELECT COUNT(*) INTO l_contar1
        FROM PSTO_ACTIVIDAD 
        WHERE ID_ACTIVIDAD IN(
          SELECT A.ID_ACTIVIDAD FROM PSTO_ACTIVIDAD A, PSTO_ACTIVIDAD_DIST B
          WHERE A.ID_ACTIVIDAD=B.ID_ACTIVIDAD
          AND A.ID_EVENTO=P_ID_EVENTO
          GROUP BY A.ID_ACTIVIDAD
        );
        
        if l_contar<>l_contar1 then
          l_error:=1;
          l_msgerror:=l_msgerror||'Falta asignar distribución mensual. ';
        end if;
       
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
    END SP_VALIDA_GEN_PRESUPUESTO;
    
   
    
END PKG_PRESUPUESTO;