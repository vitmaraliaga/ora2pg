-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_MANAGEMENT_REPORTS
AS
-- Package header
	PROCEDURE SP_IU_SETTING_CTRL_MENSUAL(P_ID_EMPRESA VARCHAR2,
	P_ID_ENTIDAD VARCHAR2,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,
	P_ID_MES NUMBER,P_ID_TIPOARCHIVO NUMBER,P_FECHA_LIMITE DATE,
	P_TIENE_PUNTAJE VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
	
	-- PROCEDIMIENTO PARA REALIZAR EL COPIADO DE ARCHIVOS CONFIGURADOS
	PROCEDURE SP_CV_SETTING_CTRL_MENSUAL(P_IDS_ARCHIVO_MENSUAL VARCHAR2,
	P_ID_MES_INI NUMBER, P_ID_MES_FIN NUMBER,P_ID_ANHO NUMBER,
	P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);

	-- PROCEDIMIENTO PARA REALIZAR EL COPIADO DE ARCHIVOS CONFIGURADOS
	PROCEDURE SP_CVP_SETTING_CTRL_MENSUAL(P_ID_ARCHIVO_MENSUAL VARCHAR2,
	P_ID_MES_INI NUMBER, P_ID_MES_FIN NUMBER,P_ID_ANHO NUMBER,
	P_FECHA_LIMITE DATE,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);

	--Obtener el total de archivos configurados
	FUNCTION FC_TOTAL_ARCHIVOS(P_ID_EMPRESA IN NUMBER, 
   	P_ID_ANHO IN NUMBER,P_ID_MES IN NUMBER, P_ID_TIPOARCHIVO IN NUMBER,
   	P_ID_ENTIDAD IN NUMBER, P_ID_DEPTO IN VARCHAR2) RETURN NUMBER;
    --Obtener el total de gastos esenciales sin depresiaciÃ³n
    FUNCTION FC_GASTOS_ESENCIALES_SNDEPR(P_ID_ENTIDAD IN NUMBER,P_ID_ANHO IN NUMBER,
   	P_ID_MES IN NUMBER) RETURN NUMBER;
   --Obtener el total de gastos esenciales
    FUNCTION FC_GASTOS_ESENCIALES(P_ID_ENTIDAD IN NUMBER,P_ID_ANHO IN NUMBER,
   	P_ID_MES IN NUMBER) RETURN NUMBER;

END PKG_MANAGEMENT_REPORTS;


CREATE OR REPLACE PACKAGE BODY        PKG_MANAGEMENT_REPORTS
AS
-- Package body
PROCEDURE SP_IU_SETTING_CTRL_MENSUAL(P_ID_EMPRESA VARCHAR2,
	P_ID_ENTIDAD VARCHAR2,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,
	P_ID_MES NUMBER,P_ID_TIPOARCHIVO NUMBER,P_FECHA_LIMITE DATE,
	P_TIENE_PUNTAJE VARCHAR2, P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS 
	L_ID_EMPRESA VARCHAR2(100):= NULL;
	L_ID_ENTIDAD VARCHAR2(100) := NULL;
	L_ID_DEPTO VARCHAR2(100):= NULL;
	L_COUNT NUMBER  := 0;
	L_ERROR NUMBER  := 0;
    L_MSGERROR VARCHAR2(100) :='';
   
	BEGIN
		L_ID_EMPRESA := P_ID_EMPRESA;
		L_ID_ENTIDAD := P_ID_ENTIDAD;
		L_ID_DEPTO := P_ID_DEPTO;
		IF (P_ID_EMPRESA =null OR P_ID_EMPRESA ='*' OR P_ID_EMPRESA ='all') THEN
            
            DELETE FROM ARCHIVO_MENSUAL 
            WHERE ID_EMPRESA IS NULL AND ID_ANHO = P_ID_ANHO AND ID_MES = P_ID_MES
            AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO 
            AND NOT EXISTS (SELECT 1 FROM ARCHIVO_MENSUAL_DETALLE amd 
            WHERE amd.ID_ARCHIVO_MENSUAL = ARCHIVO_MENSUAL.ID_ARCHIVO_MENSUAL
            );
            L_ID_EMPRESA:=null;
        END IF;
       
        IF (P_ID_ENTIDAD =null OR P_ID_ENTIDAD ='*' OR P_ID_ENTIDAD ='all') THEN 
            IF (P_ID_EMPRESA!=null and P_ID_EMPRESA!='*' and  P_ID_EMPRESA!='all') THEN 
                DELETE FROM ARCHIVO_MENSUAL 
            	WHERE ID_ANHO = P_ID_ANHO AND ID_MES = P_ID_MES
            	AND ID_EMPRESA = P_ID_EMPRESA
            	AND ID_ENTIDAD IS NULL
            	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO
	            AND NOT EXISTS (SELECT 1 FROM ARCHIVO_MENSUAL_DETALLE amd 
	            WHERE amd.ID_ARCHIVO_MENSUAL = ARCHIVO_MENSUAL.ID_ARCHIVO_MENSUAL
	            );
            END IF;
            L_ID_ENTIDAD:=null;
        END IF;
       
        IF(P_ID_DEPTO=null OR P_ID_DEPTO='*' OR P_ID_DEPTO='all') THEN
            IF(P_ID_ENTIDAD!=null and P_ID_ENTIDAD!='*' and  P_ID_ENTIDAD!='all') THEN 
                
                DELETE FROM ARCHIVO_MENSUAL 
            	WHERE ID_ANHO = P_ID_ANHO 
            	AND ID_MES = P_ID_MES
            	AND ID_ENTIDAD IN (P_ID_ENTIDAD)
            	AND ID_DEPTO IS NULL
            	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO
            	AND NOT EXISTS (SELECT 1 FROM ARCHIVO_MENSUAL_DETALLE amd 
	            WHERE amd.ID_ARCHIVO_MENSUAL = ARCHIVO_MENSUAL.ID_ARCHIVO_MENSUAL
	            );
            END IF;
            L_ID_DEPTO:= null;
           
        END IF;
       
       IF (L_ID_ENTIDAD = null) THEN
       		
       		IF L_ID_EMPRESA IS NULL THEN
		       	    SELECT count(*) INTO L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE ID_EMPRESA IS NULL
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			ELSE 
					SELECT count(*) INTO L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			END IF;
		
			IF L_COUNT > 0 THEN
			       IF L_ID_EMPRESA IS NULL THEN
			       
					    UPDATE ARCHIVO_MENSUAL 
			       		SET ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA IS NULL
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			       ELSE
			       		UPDATE ARCHIVO_MENSUAL 
			       		SET ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			       END IF; 
			ELSE
			
				INSERT INTO  ARCHIVO_MENSUAL(ID_EMPRESA,
		       		ID_ENTIDAD,
		       		ID_DEPTO,
		       		ID_ANHO,
		       		ID_MES,
		       		ID_TIPOARCHIVO,
		       		FECHA_LIMITE,
		       		TIENE_PUNTAJE)
		       		VALUES (L_ID_EMPRESA, 
		       		L_ID_ENTIDAD, 
		       		L_ID_DEPTO, 
		       		P_ID_ANHO,
		       		P_ID_MES,
		       		P_ID_TIPOARCHIVO,
		       		P_FECHA_LIMITE,
		       		P_TIENE_PUNTAJE);
			END IF;
       ELSE 
       
	       	FOR DATOS IN (SELECT regexp_substr(L_ID_ENTIDAD,'[^,]+', 1, level) ID_ENTIDAD from dual
	  			connect by regexp_substr(L_ID_ENTIDAD, '[^,]+', 1, level) is not null 
	        )
	        LOOP
		       
		       IF L_ID_EMPRESA IS NULL THEN
		       	    SELECT count(*) INTO L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE ID_EMPRESA IS NULL
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
		       ELSIF L_ID_ENTIDAD IS NULL THEN
		       		SELECT count(*) INTO L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
		       		AND ID_ENTIDAD IS NULL
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			   ELSIF L_ID_DEPTO IS NULL THEN
			  		SELECT count(*) INTO L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
		       		AND ID_ENTIDAD = DATOS.ID_ENTIDAD
		       		AND ID_DEPTO IS NULL
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			   ELSIF L_ID_DEPTO IS NOT NULL THEN
			   		SELECT count(*) INTO L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
		       		AND ID_ENTIDAD = DATOS.ID_ENTIDAD
		       		AND ID_DEPTO = L_ID_DEPTO
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			   END IF;
		       
		       
		       
		       	IF L_COUNT > 0 THEN
			       IF L_ID_EMPRESA IS NULL THEN
			       
					    UPDATE ARCHIVO_MENSUAL 
			       		SET ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA IS NULL
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
				       
			       ELSIF L_ID_ENTIDAD IS NULL THEN
			       
				       	UPDATE ARCHIVO_MENSUAL 
			       		SET ID_EMPRESA = L_ID_EMPRESA,
			       		ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND ID_ENTIDAD IS NULL
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			       	
				   ELSIF L_ID_DEPTO IS NULL THEN
				       
				       	UPDATE ARCHIVO_MENSUAL 
			       		SET ID_EMPRESA = L_ID_EMPRESA,
			       		ID_ENTIDAD = DATOS.ID_ENTIDAD,
			       		ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND ID_ENTIDAD = L_ID_ENTIDAD
			       		AND ID_DEPTO IS NULL
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
				   ELSIF L_ID_DEPTO IS NOT NULL THEN
				       	UPDATE ARCHIVO_MENSUAL 
			       		SET ID_EMPRESA = L_ID_EMPRESA,
			       		ID_ENTIDAD = DATOS.ID_ENTIDAD,
			       		ID_DEPTO = L_ID_DEPTO,
			       		ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND ID_ENTIDAD = DATOS.ID_ENTIDAD
			       		AND ID_DEPTO = L_ID_DEPTO
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
				   END IF;
		       		
		       	
		       	ELSE 
		       		INSERT INTO  ARCHIVO_MENSUAL(ID_EMPRESA,
		       		ID_ENTIDAD,
		       		ID_DEPTO,
		       		ID_ANHO,
		       		ID_MES,
		       		ID_TIPOARCHIVO,
		       		FECHA_LIMITE,
		       		TIENE_PUNTAJE)
		       		VALUES (L_ID_EMPRESA, 
		       		DATOS.ID_ENTIDAD, 
		       		L_ID_DEPTO, 
		       		P_ID_ANHO,
		       		P_ID_MES,
		       		P_ID_TIPOARCHIVO,
		       		P_FECHA_LIMITE,
		       		P_TIENE_PUNTAJE
		       	);
		       	
		       	END IF;
	        
	        END LOOP DATOS;
	       
       
       END IF;
       

	P_ERROR := L_ERROR;
    P_MSGERROR := L_MSGERROR;
   	END SP_IU_SETTING_CTRL_MENSUAL;
   
	
   	PROCEDURE SP_CV_SETTING_CTRL_MENSUAL(P_IDS_ARCHIVO_MENSUAL VARCHAR2,
	P_ID_MES_INI NUMBER, P_ID_MES_FIN NUMBER,P_ID_ANHO NUMBER,
	P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
	
	L_COUNT NUMBER  := 0;
	L_ERROR NUMBER  := 0;
    L_MSGERROR VARCHAR2(100) :='';
   	L_ID_MES NUMBER;
   
   	L_FECHA_LIMITE date;
    L_COUNT_EXIST NUMBER  := 0;
   
	BEGIN
	IF P_ID_MES_FIN IS NULL OR P_ID_MES_FIN = 0 THEN

    	FOR ARCHIVO_MENSUAL IN (SELECT * FROM ELISEO.ARCHIVO_MENSUAL am
		INNER JOIN (SELECT regexp_substr(P_IDS_ARCHIVO_MENSUAL,'[^,]+', 1, level) ID_ARCHIVO_MENSUAL 
		from dual connect by regexp_substr(P_IDS_ARCHIVO_MENSUAL, '[^,]+', 1, level) 
		is not NULL)p ON am.ID_ARCHIVO_MENSUAL = p.ID_ARCHIVO_MENSUAL)
        LOOP
        	
			SELECT REPLACE( TO_CHAR( TO_DATE(ARCHIVO_MENSUAL.FECHA_LIMITE, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS'), 
			CONCAT(CONCAT('-',lpad(TO_CHAR(EXTRACT (MONTH FROM TO_DATE(ARCHIVO_MENSUAL.FECHA_LIMITE, 'YYYY-MM-DD HH24:MI:SS'))),2,0)),'-'),
			('-'||lpad (P_ID_MES_INI,2,0)||'-')) INTO L_FECHA_LIMITE
			FROM dual;
		
			SELECT FC_TOTAL_ARCHIVOS(ARCHIVO_MENSUAL.ID_EMPRESA,
			P_ID_ANHO, P_ID_MES_INI, ARCHIVO_MENSUAL.ID_TIPOARCHIVO,
			ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO) INTO L_COUNT_EXIST
			FROM dual; 
			
			IF L_COUNT_EXIST = 0 THEN 
				<<INSERT_ARCHIVO_MENSUAL>>
	        	BEGIN
		        	INSERT INTO ELISEO.ARCHIVO_MENSUAL(
		        	ID_EMPRESA,ID_ANHO,ID_MES,ID_TIPOARCHIVO,
		        	FECHA_LIMITE,ID_ENTIDAD,ID_DEPTO)
		        	VALUES(ARCHIVO_MENSUAL.ID_EMPRESA,
		        	P_ID_ANHO,P_ID_MES_INI,
		        	ARCHIVO_MENSUAL.ID_TIPOARCHIVO, L_FECHA_LIMITE, 
		        	ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO);
	        	EXCEPTION WHEN OTHERS THEN
	            L_ERROR := 1;
	            L_MSGERROR := 'Registro Fallido. Copia Archivo Mensual';
	            RETURN ;
	        	END INSERT_ARCHIVO_MENSUAL;
        	END IF;
        END LOOP ARCHIVO_MENSUAL;
    
    
    
		
	ELSE
		FOR ARCHIVO_MENSUAL IN (
		SELECT * FROM ELISEO.ARCHIVO_MENSUAL am
		INNER JOIN (SELECT regexp_substr(P_IDS_ARCHIVO_MENSUAL,'[^,]+', 1, level) ID_ARCHIVO_MENSUAL 
		from dual connect by regexp_substr(P_IDS_ARCHIVO_MENSUAL, '[^,]+', 1, level) 
		is not NULL)p ON am.ID_ARCHIVO_MENSUAL = p.ID_ARCHIVO_MENSUAL 
        )
        LOOP
        
			FOR meses IN (
			SELECT ID_MES FROM ELISEO.CONTA_MES cm WHERE ID_MES 
			BETWEEN P_ID_MES_INI AND P_ID_MES_FIN ORDER BY cm.ID_MES desc 
			)
			LOOP
				 
				SELECT REPLACE( TO_CHAR( TO_DATE(ARCHIVO_MENSUAL.FECHA_LIMITE, 'YYYY-MM-DD HH24:MI:SS'), 'YYYY-MM-DD HH24:MI:SS'), 
				CONCAT(CONCAT('-',lpad(TO_CHAR(EXTRACT (MONTH FROM TO_DATE(ARCHIVO_MENSUAL.FECHA_LIMITE, 'YYYY-MM-DD HH24:MI:SS'))),2,0)),'-'),
				('-'||lpad (meses.ID_MES,2,0)||'-')) INTO L_FECHA_LIMITE
				FROM dual;
				
				SELECT FC_TOTAL_ARCHIVOS(ARCHIVO_MENSUAL.ID_EMPRESA,
				P_ID_ANHO, meses.ID_MES, ARCHIVO_MENSUAL.ID_TIPOARCHIVO,
				ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO) INTO L_COUNT_EXIST
				FROM dual; 
			
				IF L_COUNT_EXIST = 0 THEN
					<<INSERT_ARCHIVO_MENSUAL_OP2>>
	        		BEGIN
						INSERT INTO ELISEO.ARCHIVO_MENSUAL(
			        	ID_EMPRESA,ID_ANHO,ID_MES,ID_TIPOARCHIVO,
			        	FECHA_LIMITE,ID_ENTIDAD,ID_DEPTO)
			        	VALUES(ARCHIVO_MENSUAL.ID_EMPRESA,
			        	P_ID_ANHO,meses.ID_MES,
			        	ARCHIVO_MENSUAL.ID_TIPOARCHIVO, L_FECHA_LIMITE, 
			        	ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO);
		        	EXCEPTION WHEN OTHERS THEN
	            	L_ERROR := 1;
	            	L_MSGERROR := 'Registro Fallido. Copia Archivo Mensual OP2';
	            	RETURN ;
	        		END INSERT_ARCHIVO_MENSUAL_OP2;
        		END IF;

			END LOOP meses;
        
        END LOOP ARCHIVO_MENSUAL;
	END IF;
	P_ERROR := L_ERROR;
    P_MSGERROR := L_MSGERROR;
   	END SP_CV_SETTING_CTRL_MENSUAL;
  
   
   PROCEDURE SP_CVP_SETTING_CTRL_MENSUAL(P_ID_ARCHIVO_MENSUAL VARCHAR2,
	P_ID_MES_INI NUMBER, P_ID_MES_FIN NUMBER,P_ID_ANHO NUMBER, 
	P_FECHA_LIMITE DATE, P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
	
	L_COUNT NUMBER  := 0;
	L_ERROR NUMBER  := 0;
    L_MSGERROR VARCHAR2(100) :='';
   	L_ID_MES NUMBER;
   
   	L_FECHA_LIMITE date;
    L_COUNT_EXIST NUMBER  := 0;
   	L_COUNT_MESES NUMBER  := 0;
   
	BEGIN
		L_FECHA_LIMITE := P_FECHA_LIMITE;
	IF P_ID_MES_FIN IS NULL OR P_ID_MES_FIN = 0 THEN

    	FOR ARCHIVO_MENSUAL IN (SELECT * FROM ELISEO.ARCHIVO_MENSUAL am 
    	WHERE am.ID_ARCHIVO_MENSUAL = P_ID_ARCHIVO_MENSUAL)
        LOOP
		
			SELECT FC_TOTAL_ARCHIVOS(ARCHIVO_MENSUAL.ID_EMPRESA,
			P_ID_ANHO, P_ID_MES_INI, ARCHIVO_MENSUAL.ID_TIPOARCHIVO,
			ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO) INTO L_COUNT_EXIST
			FROM dual; 
			
			IF L_COUNT_EXIST = 0 THEN 
				<<INSERT_ARCHIVO_MENSUAL>>
	        	BEGIN
		        	INSERT INTO ELISEO.ARCHIVO_MENSUAL(
		        	ID_EMPRESA,ID_ANHO,ID_MES,ID_TIPOARCHIVO,
		        	FECHA_LIMITE,ID_ENTIDAD,ID_DEPTO,TIENE_PUNTAJE)
		        	VALUES(ARCHIVO_MENSUAL.ID_EMPRESA,
		        	P_ID_ANHO,P_ID_MES_INI,
		        	ARCHIVO_MENSUAL.ID_TIPOARCHIVO, P_FECHA_LIMITE, 
		        	ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO, ARCHIVO_MENSUAL.TIENE_PUNTAJE);
	        	EXCEPTION WHEN OTHERS THEN
	            L_ERROR := 1;
	            L_MSGERROR := 'Registro Fallido. Copia Archivo Mensual';
	            RETURN ;
	        	END INSERT_ARCHIVO_MENSUAL;
        	END IF;
        END LOOP ARCHIVO_MENSUAL;
    
    
    
		
	ELSE
		FOR ARCHIVO_MENSUAL IN (SELECT * FROM ELISEO.ARCHIVO_MENSUAL am 
		WHERE am.ID_ARCHIVO_MENSUAL = P_ID_ARCHIVO_MENSUAL
        )
        LOOP
        
			FOR meses IN (
			SELECT ID_MES FROM ELISEO.CONTA_MES cm WHERE ID_MES 
			BETWEEN P_ID_MES_INI AND P_ID_MES_FIN ORDER BY cm.ID_MES ASC
			)
			LOOP
				IF  L_COUNT_MESES >= 1  THEN
					SELECT ADD_MONTHS(TO_DATE(L_FECHA_LIMITE, 'YYYY-MM-DD HH24:MI:SS'),  1) X_FECHA_LIMITE INTO L_FECHA_LIMITE 
					FROM DUAL;
				END IF;
	            	
				
				
				SELECT FC_TOTAL_ARCHIVOS(ARCHIVO_MENSUAL.ID_EMPRESA,
				P_ID_ANHO, meses.ID_MES, ARCHIVO_MENSUAL.ID_TIPOARCHIVO,
				ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO) INTO L_COUNT_EXIST
				FROM dual; 
			
				IF L_COUNT_EXIST = 0 THEN
					<<INSERT_ARCHIVO_MENSUAL_OP2>>
	        		BEGIN
						INSERT INTO ELISEO.ARCHIVO_MENSUAL(
			        	ID_EMPRESA,ID_ANHO,ID_MES,ID_TIPOARCHIVO,
			        	FECHA_LIMITE,ID_ENTIDAD,ID_DEPTO,TIENE_PUNTAJE)
			        	VALUES(ARCHIVO_MENSUAL.ID_EMPRESA,
			        	P_ID_ANHO,meses.ID_MES,
			        	ARCHIVO_MENSUAL.ID_TIPOARCHIVO, L_FECHA_LIMITE, 
			        	ARCHIVO_MENSUAL.ID_ENTIDAD, ARCHIVO_MENSUAL.ID_DEPTO, ARCHIVO_MENSUAL.TIENE_PUNTAJE);
		        	EXCEPTION WHEN OTHERS THEN
	            	L_ERROR := 1;
	            	L_MSGERROR := 'Registro Fallido. Copia Archivo Mensual OP2';
	            	RETURN ;
	        		END INSERT_ARCHIVO_MENSUAL_OP2;
        		END IF;
        		L_COUNT_MESES := L_COUNT_MESES + 1;
			END LOOP meses;
        
        END LOOP ARCHIVO_MENSUAL;
	END IF;
	P_ERROR := L_ERROR;
    P_MSGERROR := L_MSGERROR;
   	END SP_CVP_SETTING_CTRL_MENSUAL;
   
   
   	FUNCTION FC_TOTAL_ARCHIVOS(P_ID_EMPRESA IN NUMBER, 
   	P_ID_ANHO IN NUMBER,P_ID_MES IN NUMBER, P_ID_TIPOARCHIVO IN NUMBER,
   	P_ID_ENTIDAD IN NUMBER, P_ID_DEPTO IN VARCHAR2) RETURN NUMBER IS
    L_CANTIDAD NUMBER :=0;
    BEGIN
    
	    IF P_ID_DEPTO IS NULL OR P_ID_DEPTO = 0 THEN
			SELECT count(*) INTO L_CANTIDAD 
			FROM ELISEO.ARCHIVO_MENSUAL am
			WHERE am.ID_EMPRESA = P_ID_EMPRESA
			AND am.ID_ANHO = P_ID_ANHO 
			AND am.ID_MES = P_ID_MES
			AND am.ID_TIPOARCHIVO = P_ID_TIPOARCHIVO
			AND am.ID_ENTIDAD = P_ID_ENTIDAD
			AND am.ID_DEPTO IS NULL;
	    ELSE 
			SELECT count(*) INTO L_CANTIDAD 
			FROM ELISEO.ARCHIVO_MENSUAL am
			WHERE am.ID_EMPRESA = P_ID_EMPRESA
			AND am.ID_ANHO = P_ID_ANHO 
			AND am.ID_MES = P_ID_MES
			AND am.ID_TIPOARCHIVO = P_ID_TIPOARCHIVO
			AND am.ID_ENTIDAD = P_ID_ENTIDAD
			AND am.ID_DEPTO = P_ID_DEPTO;
	    END IF;
        
        RETURN (L_CANTIDAD);
    END;
   
   
    FUNCTION FC_GASTOS_ESENCIALES_SNDEPR(P_ID_ENTIDAD IN NUMBER,P_ID_ANHO IN NUMBER,
   	P_ID_MES IN NUMBER) RETURN NUMBER IS
   	L_SALDO number(10,2):=0.00;
   	BEGIN
	  
	   SELECT sum(GA.SALDO) INTO L_SALDO FROM (	
	   SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO 
				        FROM (SELECT ID_ANHO,ID_MES, NVL(SALDO,0) AS SALDO
						        FROM (SELECT ID_ANHO,ID_MES,SAL1+SAL2+SAL3+SAL4+SAL5+SAL6+SAL7+SAL8+SAL9+SAL10+SAL11+SAL12 AS SALDO
						                FROM (SELECT ID_ANHO,ID_MES,SUM(SALDO) AS SAL1,
						                    LAG(SUM(SALDO), 1, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL2,
						                    LAG(SUM(SALDO), 2, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL3,
						                    LAG(SUM(SALDO), 3, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL4,
						                    LAG(SUM(SALDO), 4, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL5,
						                    LAG(SUM(SALDO), 5, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL6,
						                    LAG(SUM(SALDO), 6, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL7,
						                    LAG(SUM(SALDO), 7, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL8,
						                    LAG(SUM(SALDO), 8, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL9,
						                    LAG(SUM(SALDO), 9, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL10,
						                    LAG(SUM(SALDO), 10, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL11,
						                    LAG(SUM(SALDO), 11, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL12
						                    FROM (SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO
						                            FROM (SELECT GAOP.ID_ANHO,GAOP.ID_MES, SUM(GAOP.SALDO) AS SALDO 
						                                FROM (SELECT ID_ANHO,ID_MES,SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '41%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, -1*SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '419%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, -1*SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '4123%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        )GAOP
						                                GROUP BY GAOP.ID_ANHO,GAOP.ID_MES)      
						                            GROUP BY ID_ANHO,ID_MES
						                            )
						                    GROUP BY ID_ANHO,ID_MES
						                    )
						                 WHERE TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0))=TO_NUMBER(P_ID_ANHO || LPAD(P_ID_MES,2,0)) 
						                )GODA
						
						        UNION ALL
						            ----subvenciones netas otros fondos (suma los doce ultimos meses y si sale negativo su saldo sera = 0)
						        SELECT ID_ANHO,ID_MES, CASE WHEN SALDO <0 THEN 0 ELSE NVL(SALDO, 0) END SALDO 
						        FROM (SELECT ID_ANHO,ID_MES,SAL1+SAL2+SAL3+SAL4+SAL5+SAL6+SAL7+SAL8+SAL9+SAL10+SAL11+SAL12 AS SALDO
						                FROM (SELECT ID_ANHO,ID_MES,SUM(SALDO) AS SAL1,
						                    LAG(SUM(SALDO), 1, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL2,
						                    LAG(SUM(SALDO), 2, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL3,
						                    LAG(SUM(SALDO), 3, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL4,
						                    LAG(SUM(SALDO), 4, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL5,
						                    LAG(SUM(SALDO), 5, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL6,
						                    LAG(SUM(SALDO), 6, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL7,
						                    LAG(SUM(SALDO), 7, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL8,
						                    LAG(SUM(SALDO), 8, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL9,
						                    LAG(SUM(SALDO), 9, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL10,
						                    LAG(SUM(SALDO), 10, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL11,
						                    LAG(SUM(SALDO), 11, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL12
						                    FROM (SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO
						                            FROM (SELECT SN.ID_ANHO,SN.ID_MES, SUM(SN.SALDO) AS SALDO 
						                                FROM(SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '419%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '319%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                    )SN
						                                GROUP BY SN.ID_ANHO,SN.ID_MES
						                                )      
						                            GROUP BY ID_ANHO,ID_MES
						                            )
						                    GROUP BY ID_ANHO,ID_MES
						                    )
						                 WHERE TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0))=TO_NUMBER(P_ID_ANHO || LPAD(P_ID_MES,2,0)) 
						                )SN1
						
						        UNION ALL
						            --TRANS netas otros fondos (suma los doce ultimos meses y si sale negativo su saldo sera = 0)
						        SELECT ID_ANHO,ID_MES, CASE WHEN SALDO <0 THEN 0 ELSE NVL(SALDO,0) END SALDO
						        FROM (SELECT ID_ANHO,ID_MES,SAL1+SAL2+SAL3+SAL4+SAL5+SAL6+SAL7+SAL8+SAL9+SAL10+SAL11+SAL12 AS SALDO
						                FROM (SELECT ID_ANHO,ID_MES,SUM(SALDO) AS SAL1,
						                    LAG(SUM(SALDO), 1, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL2,
						                    LAG(SUM(SALDO), 2, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL3,
						                    LAG(SUM(SALDO), 3, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL4,
						                    LAG(SUM(SALDO), 4, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL5,
						                    LAG(SUM(SALDO), 5, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL6,
						                    LAG(SUM(SALDO), 6, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL7,
						                    LAG(SUM(SALDO), 7, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL8,
						                    LAG(SUM(SALDO), 8, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL9,
						                    LAG(SUM(SALDO), 9, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL10,
						                    LAG(SUM(SALDO), 10, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL11,
						                    LAG(SUM(SALDO), 11, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL12
						                    FROM (SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO
						                            FROM (SELECT TNOF.ID_ANHO,TNOF.ID_MES, SUM(TNOF.SALDO) AS SALDO 
						                                FROM(SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI = 6400001
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD =P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI = 6300001
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        )TNOF
						                                GROUP BY TNOF.ID_ANHO,TNOF.ID_MES
						                                )      
						                            GROUP BY ID_ANHO,ID_MES
						                            )
						                    GROUP BY ID_ANHO,ID_MES
						                    )
						                 WHERE TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0))=TO_NUMBER(P_ID_ANHO || LPAD(P_ID_MES,2,0)) 
						                )TNOF1
						                )GROUP BY ID_ANHO,ID_MES
						               )GA;
						   
			RETURN (L_SALDO);
        END;
       
       
    FUNCTION FC_GASTOS_ESENCIALES(P_ID_ENTIDAD IN NUMBER,P_ID_ANHO IN NUMBER,
   	P_ID_MES IN NUMBER) RETURN NUMBER IS
   	L_SALDO number(10,2):=0.00;
   	BEGIN
	  
	   SELECT sum(GA.SALDO) INTO L_SALDO FROM (	
	   SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO 
				        FROM (SELECT ID_ANHO,ID_MES, NVL(SALDO,0) AS SALDO
						        FROM (SELECT ID_ANHO,ID_MES,SAL1+SAL2+SAL3+SAL4+SAL5+SAL6+SAL7+SAL8+SAL9+SAL10+SAL11+SAL12 AS SALDO
						                FROM (SELECT ID_ANHO,ID_MES,SUM(SALDO) AS SAL1,
						                    LAG(SUM(SALDO), 1, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL2,
						                    LAG(SUM(SALDO), 2, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL3,
						                    LAG(SUM(SALDO), 3, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL4,
						                    LAG(SUM(SALDO), 4, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL5,
						                    LAG(SUM(SALDO), 5, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL6,
						                    LAG(SUM(SALDO), 6, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL7,
						                    LAG(SUM(SALDO), 7, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL8,
						                    LAG(SUM(SALDO), 8, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL9,
						                    LAG(SUM(SALDO), 9, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL10,
						                    LAG(SUM(SALDO), 10, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL11,
						                    LAG(SUM(SALDO), 11, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL12
						                    FROM (SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO
						                            FROM (SELECT GAOP.ID_ANHO,GAOP.ID_MES, SUM(GAOP.SALDO) AS SALDO 
						                                FROM (SELECT ID_ANHO,ID_MES,SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '41%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, -1*SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '419%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, -1*SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '4123%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        )GAOP
						                                GROUP BY GAOP.ID_ANHO,GAOP.ID_MES
						                                
						                                UNION ALL
                                                        SELECT ID_ANHO,ID_MES,SUM(COS_VALOR) AS SALDO
                                                        FROM VW_CONTA_DIARIO
                                                        WHERE ID_ENTIDAD =P_ID_ENTIDAD
                                                        AND ID_FONDO IN (10,25)
                                                        AND ID_TIPOASIENTO NOT IN ('EA')
                                                        AND ID_CUENTAAASI LIKE '4123%'
                                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
                                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
                                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
                                                        GROUP BY ID_ANHO,ID_MES
						                                )      
						                            GROUP BY ID_ANHO,ID_MES
						                            )
						                    GROUP BY ID_ANHO,ID_MES
						                    )
						                 WHERE TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0))=TO_NUMBER(P_ID_ANHO || LPAD(P_ID_MES,2,0)) 
						                )GODA
						
						        UNION ALL
						            ----subvenciones netas otros fondos (suma los doce ultimos meses y si sale negativo su saldo sera = 0)
						        SELECT ID_ANHO,ID_MES, CASE WHEN SALDO <0 THEN 0 ELSE NVL(SALDO, 0) END SALDO 
						        FROM (SELECT ID_ANHO,ID_MES,SAL1+SAL2+SAL3+SAL4+SAL5+SAL6+SAL7+SAL8+SAL9+SAL10+SAL11+SAL12 AS SALDO
						                FROM (SELECT ID_ANHO,ID_MES,SUM(SALDO) AS SAL1,
						                    LAG(SUM(SALDO), 1, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL2,
						                    LAG(SUM(SALDO), 2, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL3,
						                    LAG(SUM(SALDO), 3, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL4,
						                    LAG(SUM(SALDO), 4, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL5,
						                    LAG(SUM(SALDO), 5, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL6,
						                    LAG(SUM(SALDO), 6, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL7,
						                    LAG(SUM(SALDO), 7, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL8,
						                    LAG(SUM(SALDO), 8, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL9,
						                    LAG(SUM(SALDO), 9, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL10,
						                    LAG(SUM(SALDO), 10, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL11,
						                    LAG(SUM(SALDO), 11, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL12
						                    FROM (SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO
						                            FROM (SELECT SN.ID_ANHO,SN.ID_MES, SUM(SN.SALDO) AS SALDO 
						                                FROM(SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '419%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI LIKE '319%'
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                    )SN
						                                GROUP BY SN.ID_ANHO,SN.ID_MES
						                                )      
						                            GROUP BY ID_ANHO,ID_MES
						                            )
						                    GROUP BY ID_ANHO,ID_MES
						                    )
						                 WHERE TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0))=TO_NUMBER(P_ID_ANHO || LPAD(P_ID_MES,2,0)) 
						                )SN1
						
						        UNION ALL
						            --TRANS netas otros fondos (suma los doce ultimos meses y si sale negativo su saldo sera = 0)
						        SELECT ID_ANHO,ID_MES, CASE WHEN SALDO <0 THEN 0 ELSE NVL(SALDO,0) END SALDO
						        FROM (SELECT ID_ANHO,ID_MES,SAL1+SAL2+SAL3+SAL4+SAL5+SAL6+SAL7+SAL8+SAL9+SAL10+SAL11+SAL12 AS SALDO
						                FROM (SELECT ID_ANHO,ID_MES,SUM(SALDO) AS SAL1,
						                    LAG(SUM(SALDO), 1, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL2,
						                    LAG(SUM(SALDO), 2, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL3,
						                    LAG(SUM(SALDO), 3, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL4,
						                    LAG(SUM(SALDO), 4, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL5,
						                    LAG(SUM(SALDO), 5, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL6,
						                    LAG(SUM(SALDO), 6, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL7,
						                    LAG(SUM(SALDO), 7, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL8,
						                    LAG(SUM(SALDO), 8, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL9,
						                    LAG(SUM(SALDO), 9, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL10,
						                    LAG(SUM(SALDO), 10, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL11,
						                    LAG(SUM(SALDO), 11, 0) OVER (ORDER BY ID_ANHO,ID_MES) AS SAL12
						                    FROM (SELECT ID_ANHO,ID_MES,ROUND(SUM(SALDO),2) AS SALDO
						                            FROM (SELECT TNOF.ID_ANHO,TNOF.ID_MES, SUM(TNOF.SALDO) AS SALDO 
						                                FROM(SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD = P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI = 6400001
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        UNION ALL
						                                        SELECT ID_ANHO,ID_MES, SUM(COS_VALOR)  AS SALDO
						                                        FROM VW_CONTA_DIARIO_ALL
						                                        WHERE ID_ENTIDAD =P_ID_ENTIDAD
						                                        AND ID_FONDO =10
						                                        AND ID_TIPOASIENTO NOT IN ('BB','EA')
						                                        AND ID_CUENTAAASI = 6300001
						                                        AND TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0)) BETWEEN 
						                                        TO_NUMBER(TO_NUMBER(P_ID_ANHO)-1 || LPAD('01',2,0)) 
						                                        AND TO_NUMBER(P_ID_ANHO||LPAD(TO_NUMBER(P_ID_MES),2,0))
						                                        GROUP BY ID_ANHO,ID_MES
						                                        )TNOF
						                                GROUP BY TNOF.ID_ANHO,TNOF.ID_MES
						                                )      
						                            GROUP BY ID_ANHO,ID_MES
						                            )
						                    GROUP BY ID_ANHO,ID_MES
						                    )
						                 WHERE TO_NUMBER(ID_ANHO||LPAD(ID_MES,2,0))=TO_NUMBER(P_ID_ANHO || LPAD(P_ID_MES,2,0)) 
						                )TNOF1
						                )GROUP BY ID_ANHO,ID_MES
						               )GA;
						   
			RETURN (L_SALDO);
        END;
   
END PKG_MANAGEMENT_REPORTS;