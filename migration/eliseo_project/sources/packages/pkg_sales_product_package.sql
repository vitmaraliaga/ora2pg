-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_SALES_PRODUCT AS
    PROCEDURE SP_VALIDAR_VENTA(P_ID_PERSONA NUMBER,P_ID_COMPROBANTE VARCHAR2,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_GENERAR_VENTA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_SUCURSAL NUMBER,P_ID_COMPROBANTE VARCHAR2,P_ID_MONEDA NUMBER,P_ID_CREDITO NUMBER,P_ID_ALMACEN NUMBER,P_FECHA_PAGO VARCHAR2 DEFAULT NULL,P_ID_VENTA OUT NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_VENTA_END(P_ID_VENTA NUMBER,P_ID_CREDITO NUMBER,P_EFECTIVO NUMBER, P_CREDITO NUMBER, P_TARJETA NUMBER, P_ID_TIPO_TARJETA NUMBER, P_OPERACION VARCHAR2,
        P_ERROR OUT number,P_MSGERROR out VARCHAR2, P_ES_AUTOCONSUMO VARCHAR2 DEFAULT NULL, P_TARJETA2 NUMBER DEFAULT NULL, P_ID_TIPO_TARJETA2 NUMBER DEFAULT NULL, P_OPERACION2 VARCHAR2 DEFAULT NULL,
        P_ID_CTABANCARIA NUMBER DEFAULT NULL,P_ID_CTABANCARIA2 NUMBER DEFAULT NULL,P_FECHA_PAGO DATE DEFAULT NULL);
    PROCEDURE SP_CREAR_VENTA_DETALLE_INVEN(P_ID_VENTA NUMBER,P_ID_ARTICULO VARCHAR2,P_ID_ALMACEN NUMBER,P_CANTIDAD NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
END PKG_SALES_PRODUCT;


CREATE OR REPLACE PACKAGE BODY        PKG_SALES_PRODUCT AS

    PROCEDURE SP_VALIDAR_VENTA(P_ID_PERSONA NUMBER,P_ID_COMPROBANTE VARCHAR2,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2)IS
        L_DOCUMENTO NUMBER :=0; 
        L_CONTAR NUMBER;
        L_ID_TIPOVOUCHER NUMBER := 1;
        L_ID_TIPOASIENTO VARCHAR2(5);
        L_ID_PERSONA_CONTADOR NUMBER;
        l_id_comprobante_ref varchar2(3);
        L_ERROR NUMBER := 0;
        L_MSGERROR VARCHAR2(200) := '';
        l_id_tipoasientodep varchar2(5) := 'RV';
    
        BEGIN
            SELECT PKG_SALES.FC_DOCUMENTO_IMPRESION_USER(P_ID_PERSONA,P_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO) INTO L_DOCUMENTO FROM DUAL;
            IF L_DOCUMENTO = 0 THEN
                L_ERROR :=1;
                L_MSGERROR := 'Alto! El usuario no tiene asignado un punto de impresión para el tipo de documento: ' || P_ID_COMPROBANTE;
                GOTO SALIDA_RAPIDA;
            END IF; 
            
            SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
            
            IF L_CONTAR < 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: No existe tipo de Asiento (RV) ';
                GOTO SALIDA_RAPIDA;
            ELSIF L_CONTAR > 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||TO_CHAR(P_ID_ANHO);
                GOTO SALIDA_RAPIDA;
            END IF;
            
            SELECT ID_TIPOASIENTO INTO L_ID_TIPOASIENTO FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER; 
            
            SELECT   COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO
            AND ID_MODULO = '13'--modulo ventas
            AND ID_ANHO = P_ID_ANHO AND ID_TIPOASIENTO = L_ID_TIPOASIENTO
            AND AUTOMATICO = 'S' AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
                    
            IF L_CONTAR < 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: No existe la configuración de vouchers para las ventas, del periodo '||TO_CHAR(P_ID_ANHO)||' - '||P_ID_ENTIDAD||' - '||P_ID_DEPTO||' - '||L_ID_TIPOASIENTO||' - '||L_ID_TIPOVOUCHER;
                GOTO SALIDA_RAPIDA;
            ELSIF L_CONTAR > 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||TO_CHAR(P_ID_ANHO);
                GOTO SALIDA_RAPIDA;
            END IF;
            
            SELECT ID_PERSONA INTO L_ID_PERSONA_CONTADOR FROM FIN_CONTADOR_DEPTO WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO;
            
            IF L_ID_PERSONA_CONTADOR IS NULL THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: No existe asignado un contador para la entidad: ' || P_ID_ENTIDAD || ' y el departamento: ' || P_ID_DEPTO;
                GOTO SALIDA_RAPIDA;
            END IF;
            
            L_CONTAR := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(P_ID_PERSONA,P_ID_COMPROBANTE,P_ID_ENTIDAD, P_ID_DEPTO,L_ID_COMPROBANTE_REF);
            IF L_CONTAR < 1 THEN
                L_ERROR := 1;
                L_MSGERROR := 'Alto! No existe un punto de impresión activo de transferencias para el usuario. [tipo de documento: '||P_ID_COMPROBANTE||']';
                GOTO SALIDA_RAPIDA;
            ELSIF L_CONTAR > 1 THEN
                L_ERROR := 1;
                L_MSGERROR := 'Alto! Existe mas de un punto de impresión activo de transferencias para el usuario. [tipo de documento: '||P_ID_COMPROBANTE||']';
                GOTO SALIDA_RAPIDA;
            END IF;
            
            ---vouvher dep
            SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
                    
            IF L_CONTAR < 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: No existe tipo de Asiento (MB) ';
                GOTO SALIDA_RAPIDA;
            ELSIF L_CONTAR > 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: Existe más de una configuración de Tipo de Asiento (MB) '||TO_CHAR(P_ID_ANHO);
                GOTO SALIDA_RAPIDA;
            END IF;
            
            L_ID_TIPOVOUCHER := 5;--tipo voucher de depósitos
            
             SELECT ID_TIPOASIENTO INTO l_id_tipoasientodep FROM CONTA_VOUCHER_CONFIG
             WHERE ID_ENTIDAD = P_ID_ENTIDAD
             AND ID_DEPTO = P_ID_DEPTO
             AND ID_ANHO = P_ID_ANHO
             AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
            
            SELECT  COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO
            AND ID_MODULO = '14'--modulo tesoreria
            AND ID_ANHO = P_ID_ANHO AND ID_TIPOASIENTO = L_ID_TIPOASIENTODEP
            AND AUTOMATICO = 'S' AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
                    
            IF L_CONTAR < 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: No existe la configuración de vouchers para los depositos, del periodo '||TO_CHAR(P_ID_ANHO);
                GOTO SALIDA_RAPIDA;
            ELSIF L_CONTAR > 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: Existe más de una configuración de vouchers para los Depositos, del periodo '||TO_CHAR(P_ID_ANHO);
                GOTO SALIDA_RAPIDA;
            END IF;
            
        <<SALIDA_RAPIDA>>
        
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;
              
    END SP_VALIDAR_VENTA;
    
    PROCEDURE SP_GENERAR_VENTA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_SUCURSAL NUMBER,P_ID_COMPROBANTE VARCHAR2,P_ID_MONEDA NUMBER,P_ID_CREDITO NUMBER,P_ID_ALMACEN NUMBER,P_FECHA_PAGO VARCHAR2 DEFAULT NULL,P_ID_VENTA OUT NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
           
            L_IGV NUMBER(10,2);
            L_TC NUMBER(10,3);
            L_ID_MONEDA_TC NUMBER;
            L_AUTOMATICO VARCHAR2(2);
            L_ID_VOUCHER NUMBER;
            L_CONTAR NUMBER;
            L_ID_TIPOTRANSACCION NUMBER :=5;--ventas de almacen por defecto regustra y configurar solo un asiento por lamacen
            
            L_ID_SUCURSAL NUMBER;
            
            L_ID_VENTA NUMBER;
            l_id_comprobante_ref varchar2(3);
            L_ID_PERSONA_CONTADOR NUMBER;
            L_ID_TIPOASIENTO VARCHAR2(5);
            L_ID_TIPOVOUCHER NUMBER := 1;
            L_SERIE VARCHAR2(5);
            L_CORRELATIVO NUMBER;
            l_glosa varchar2(255);
            l_numero varchar2(15);
            L_ID_TIPOVENTA NUMBER := 6; --VETAS DIVERSAS SERVICIOS ACADEMICOS
            l_total_me number:=0;
            l_total number:=0;
            L_ERROR NUMBER;
            L_MSGERROR VARCHAR2(100) :='';
        BEGIN
                L_ERROR := 0;
                L_ID_MONEDA_TC:=9;
              
                --obtiene IGV de la fecha actual
                SELECT FC_IGV(CURRENT_DATE ) INTO L_IGV FROM DUAL;
              
                --obtiene tipo de cambio del dia
                SELECT FC_TIPOCAMBIO(L_ID_MONEDA_TC,CURRENT_DATE,'D' ) INTO L_TC FROM DUAL;
                   
                IF L_TC IS NULL THEN
                    L_TC:=0;
                END IF;
                L_ID_SUCURSAL:=P_ID_SUCURSAL;
                IF P_ID_SUCURSAL=0 THEN
                    L_ID_SUCURSAL:=NULL;
                END IF;
                
                PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,P_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO, L_ID_COMPROBANTE_REF, L_SERIE,L_CORRELATIVO);
                
                SELECT ID_PERSONA INTO L_ID_PERSONA_CONTADOR FROM FIN_CONTADOR_DEPTO WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO;
                
                SELECT ID_TIPOASIENTO INTO L_ID_TIPOASIENTO FROM CONTA_VOUCHER_CONFIG
                WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
                
                PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,SYSDATE,L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_PERSONA_CONTADOR,L_ID_VOUCHER);
                
                SELECT COUNT(1) INTO  L_CONTAR FROM INVENTARIO_ALMACEN WHERE ID_ALMACEN = P_ID_ALMACEN;
                
                IF L_CONTAR > 0 THEN
                    SELECT NOMBRE INTO L_GLOSA  FROM INVENTARIO_ALMACEN WHERE ID_ALMACEN = P_ID_ALMACEN;
                END IF;
               
                SELECT LPAD(TO_CHAR(L_CORRELATIVO),8,'0') INTO L_NUMERO FROM DUAL;
                
                INSERT INTO VENTA (ID_ENTIDAD,
                                   ID_DEPTO,
                                   ID_ANHO,
                                   ID_MES,
                                   ID_PERSONA,
                                   ID_CLIENTE,
                                   ID_SUCURSAL,
                                   ID_VOUCHER,
                                   ID_COMPROBANTE,
                                   ID_IGV,
                                   ID_MONEDA,
                                   ID_LEYENDA,
                                   ID_CREDITO,
                                   TIPOCAMBIO,
                                   ID_TIPOTRANSACCION,
                                   SERIE,
                                   NUMERO,
                                   FECHA,
                                   GLOSA,
                                   ESTADO,
                                   ID_TIPOVENTA)
                     VALUES (P_ID_ENTIDAD,
                             P_ID_DEPTO,
                             P_ID_ANHO,
                             P_ID_MES,
                             P_ID_PERSONA,
                             P_ID_CLIENTE,
                             L_ID_SUCURSAL,
                             L_ID_VOUCHER,
                             P_ID_COMPROBANTE,
                             L_IGV,
                             P_ID_MONEDA,
                             '1000',
                             P_ID_CREDITO,
                             L_TC,
                             L_ID_TIPOTRANSACCION,
                             L_SERIE,
                             L_NUMERO,
                             SYSDATE,
                             'VENTAS '||L_GLOSA,
                             0,
                             L_ID_TIPOVENTA)
                  RETURNING ID_VENTA INTO L_ID_VENTA;
                  
                IF P_ID_COMPROBANTE = '01' THEN
                    IF P_ID_CREDITO = 2 THEN
                        INSERT INTO VENTA_FORMA_PAGO(ID_VENTA,NRO_CUOTA,IMPORTE,IMPORTE_ME,FECHA_PAGO,DETALLE)VALUES(L_ID_VENTA,'CUO001',l_total,l_total_me,TO_DATE(P_FECHA_PAGO,'YYYY/MM/DD'),P_FECHA_PAGO);
                    END IF;
                END IF;
                    

                P_ID_VENTA := L_ID_VENTA;
                P_ERROR := L_ERROR;
                P_MSGERROR := L_MSGERROR;
            
        EXCEPTION
            WHEN OTHERS THEN
                P_MSGERROR := 'ERROR AL REGISTRAR LA VENTA: '||SQLCODE||' -ERROR- '||SQLERRM || '-'||P_ID_COMPROBANTE;
                P_ERROR :=1;
              
    END SP_GENERAR_VENTA;
    
    PROCEDURE SP_VENTA_END(P_ID_VENTA NUMBER,P_ID_CREDITO NUMBER,P_EFECTIVO NUMBER, P_CREDITO NUMBER, P_TARJETA NUMBER, P_ID_TIPO_TARJETA NUMBER, P_OPERACION VARCHAR2,
        P_ERROR OUT number,P_MSGERROR out VARCHAR2, P_ES_AUTOCONSUMO VARCHAR2 DEFAULT NULL, P_TARJETA2 NUMBER DEFAULT NULL, P_ID_TIPO_TARJETA2 NUMBER DEFAULT NULL, P_OPERACION2 VARCHAR2 DEFAULT NULL,
        P_ID_CTABANCARIA NUMBER DEFAULT NULL,P_ID_CTABANCARIA2 NUMBER DEFAULT NULL,P_FECHA_PAGO DATE DEFAULT NULL) IS
        L_SERIE VARCHAR2(5);
        L_CORRELATIVO NUMBER;
        L_NUMERO VARCHAR2(15);
        L_ID_COMPROBANTE VARCHAR2(3);
        L_ID_ENTIDAD NUMBER;
        L_ID_PERSONA NUMBER;
        L_ERROR NUMBER:=0;
        L_MSGERROR VARCHAR2(200):='';
        L_ID_VOUCHER NUMBER;
        L_ID_ANHO NUMBER;
        L_ID_MES NUMBER;
        L_ID_DEPTO VARCHAR2(10);
        L_CONTAR NUMBER;
        L_AUTOMATICO VARCHAR2(2);
        --L_ID_LEYENDA VARCHAR2(10):='1000';
        L_ID_CLIENTE NUMBER;
        L_ID_MONEDA NUMBER;
        L_FECHA DATE;
        L_IMPORTE NUMERIC(10,2);
        L_IMPORTE_ME NUMERIC(10,2);
        L_TIPOCAMBIO NUMERIC(10,3);
        L_GLOSA VARCHAR2(255);
        L_ID_DINAMICA NUMBER;
        L_TIPOASIENTO VARCHAR2(8);
        L_ID_CTABANCARIA NUMBER;
        L_ID_MEDIOPAGO VARCHAR2(5);
        L_ID_TIPOTRANSACCION INTEGER;
        L_ID_TIPOTRANSACCIONDEP INTEGER;
        L_VENTAS VARCHAR2(100);
        L_IMP_VENTAS VARCHAR2(100);
        L_TOTAL NUMBER(10,2):=0;
        L_TOTAL_ME NUMBER:=0;
        L_SUM_TOTAL NUMBER(10,2):=0;
        L_ESTADO NUMBER:=0;
        L_SERIE_NUMERO VARCHAR2(50);
        L_ID_TIPOASIENTO VARCHAR2(5):='RV';
        L_ID_TIPOVOUCHER NUMBER := 1;
        L_ID_TIPOASIENTODEP VARCHAR2(5) := 'MB';
        L_ID_TIPOVOUCHERDEP NUMBER := 5;
        L_ID_COMPROBANTE_REF VARCHAR2(3);

        L_ID_ALMACEN NUMBER;
        L_ID_PERSONA_V NUMBER;
        
        L_ID_VDETALLE NUMBER(10);
        CONTA NUMBER(10) :=0;
        L_ID_DOCUMENTO NUMBER:=56; --NUMERO Y SERIE DE LA VENTA DE AUTOCONSUMO PARA UPEU
        L_ID_AMACEN NUMBER;
        
        L_POLITICA NUMBER ;
        L_CONTA_POL NUMBER;
        L_ID_TIPOVENTA NUMBER := 6; --VETAS DIVERSAS SERVICIOS ACADEMICOS
        L_ID_DEPOSITO NUMBER;
        L_ID_CANAL INTEGER := 1;--VENTANILA
        
        CURSOR VENTA_DET IS
        SELECT ID_VDETALLE 
        FROM VENTA_DETALLE
        WHERE ID_VENTA = P_ID_VENTA
        ORDER BY ID_VDETALLE;
        
        BEGIN
            
            SELECT COUNT(1) INTO L_CONTAR FROM VENTA WHERE ID_VENTA=P_ID_VENTA;
            IF L_CONTAR < 1 THEN
                L_ERROR:=1;
                L_MSGERROR:='Alto: Realice nuevamente la Venta (RV) ';
                GOTO SALIDA_RAPIDA;
            END IF;
            
            SELECT ID_PERSONA,ID_ENTIDAD,ID_COMPROBANTE,ID_ANHO,ID_MES ,ID_DEPTO,ID_CLIENTE,ID_MONEDA,FECHA,TIPOCAMBIO,ID_TIPOTRANSACCION,TOTAL,TOTAL_ME,ESTADO,SERIE||'-'||NUMERO,GLOSA,ID_COMPROBANTE_REF
            INTO L_ID_PERSONA,L_ID_ENTIDAD,L_ID_COMPROBANTE,L_ID_ANHO,L_ID_MES,L_ID_DEPTO,L_ID_CLIENTE,L_ID_MONEDA,L_FECHA,L_TIPOCAMBIO,L_ID_TIPOTRANSACCION,L_TOTAL,L_TOTAL_ME,L_ESTADO,L_SERIE_NUMERO,L_GLOSA,L_ID_COMPROBANTE_REF
            FROM VENTA WHERE ID_VENTA=P_ID_VENTA;
        
            SELECT COALESCE(P_EFECTIVO,0)+COALESCE(TO_NUMBER(P_CREDITO),0)+COALESCE(P_TARJETA,0)+COALESCE(P_TARJETA2,0) INTO L_SUM_TOTAL FROM DUAL;
        
            IF L_ESTADO=1 THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSGERROR:='Finalizar venta: Ya esta generado la venta '||L_SERIE_NUMERO;
                GOTO SALIDA_RAPIDA;
            END IF;
        
            IF L_SUM_TOTAL<>L_TOTAL AND COALESCE(P_ID_CREDITO,1)=1 THEN
                L_ERROR:=1; --
                L_MSGERROR:='Finalizar venta: Importe total del documento es diferente al importe de pago(efectivo+credito+tarjeta+tarjeta2): '||P_ID_VENTA||': '||P_EFECTIVO||'-'||P_CREDITO||'-'||P_TARJETA||'-'||P_TARJETA2||'-'||L_SUM_TOTAL||'-'||L_TOTAL;
                GOTO SALIDA_RAPIDA;
            END IF;
            
            --================================================DEPOSITOS========================================================
            IF L_ID_CLIENTE = 0 OR L_ID_CLIENTE IS NULL THEN
                    L_ID_CLIENTE :=1;--cliente varios registrado en persona
            END IF;
            
            --REGISTRO EL KARDEX DEL ARTICULO
            SELECT COUNT(1) INTO L_CONTAR FROM VENTA A JOIN VENTA_DETALLE B ON A.ID_VENTA = B.ID_VENTA WHERE A.ID_VENTA = P_ID_VENTA;
            
            IF L_CONTAR > 0 THEN
                SELECT DISTINCT B.ID_ALMACEN INTO L_ID_AMACEN FROM VENTA A JOIN VENTA_DETALLE B ON A.ID_VENTA = B.ID_VENTA WHERE A.ID_VENTA = P_ID_VENTA;
            END IF;
            
            SELECT COUNT(ID_POLITICA) INTO L_CONTA_POL FROM VENTA_POLITICA  WHERE ID_ALMACEN = L_ID_AMACEN ;
            
            IF L_CONTA_POL =  0 THEN
                 L_POLITICA := 5; -- en caso de q algun almacen no usa politica asignamos por defecto a politica 5 = bazar
            ELSE
                SELECT ID_POLITICA INTO L_POLITICA FROM VENTA_POLITICA WHERE ID_ALMACEN = L_ID_AMACEN ;
            END IF;
            
            SELECT COUNT(1) INTO L_CONTAR FROM VENTA_POLITICA_PERSONA
            WHERE ID_POLITICA = L_POLITICA AND ID_PERSONA = L_ID_CLIENTE AND CREDITO = '1' AND ACTIVO = '1';
                
            IF L_CONTAR = 0 AND TO_NUMBER(P_CREDITO) > 0 THEN
                L_ERROR := 1; -- No existe voucher
                L_MSGERROR := 'Alto: Esta intentado pagar al crédito y el cliente no tiene crédito disponible.';
                GOTO SALIDA_RAPIDA;
            END IF;
            
            IF P_EFECTIVO=0 AND TO_NUMBER(P_CREDITO)=0  AND P_TARJETA=0 AND P_ID_CREDITO = 1 THEN
                L_ERROR := 1;
                L_MSGERROR := 'Alto: No esta haciendo ningún depósito (Efectivo=0, Crédito=0, Tarjeta=0).';
                GOTO SALIDA_RAPIDA;
            END IF;
            
            ------------------------------------------------------------------------------------------------------
            IF L_ERROR=0 THEN
                -- CREACIÓN DEL VOUCHER
                -- Obtiene numero y serie y actualiza correlativo
                
                IF P_ES_AUTOCONSUMO = 'S' THEN
                    --22-BAZAR
                    --23-COMEDOR
                    --25-CAFETIN
                    
                    --JULIACA
                    --67-CAFETIN
                    --112-COMEDOR
                    
                    IF L_ID_AMACEN = 22 THEN --BAZAR B125
                        L_ID_DOCUMENTO := 56;
                    ELSIF L_ID_AMACEN = 23 THEN --COMEDOR B126
                        L_ID_DOCUMENTO := 98;
                    ELSIF L_ID_AMACEN = 25 THEN--CAFETIN B127
                        L_ID_DOCUMENTO := 99;
                    ELSIF L_ID_AMACEN = 67 THEN --CAFETIN JU B5
                        L_ID_DOCUMENTO := 316;
                    ELSIF L_ID_AMACEN = 112 THEN -- COMERDOR JU B5
                        L_ID_DOCUMENTO := 316;
                    ELSIF L_ID_AMACEN = 67 THEN --TEXTILERIA JU
                        L_ID_DOCUMENTO := 316;
                    ELSE --PANIFICADORA JU B5
                        L_ID_DOCUMENTO := 316;
                    END IF;
                    PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(L_ID_DOCUMENTO,L_SERIE,L_CORRELATIVO);
                END IF;
                
                UPDATE VENTA SET ESTADO = 1 WHERE ID_VENTA = P_ID_VENTA;
                    
    
                --GENERAR ASIENTO
                --PKG_SALES.SP_GENERAR_ASIENTO(P_ID_VENTA,l_error,l_msgerror);
                
                --VALIDA SI EL ASIENTO ES MANUAL
                SELECT COUNT(1) INTO L_CONTAR FROM VENTA_ASIENTO WHERE ID_VENTA = P_ID_VENTA;
                
                IF L_CONTAR > 0 THEN
                    --GENERAR ASIENTO MANUAL
                    PKG_SALES.SP_GENERAR_ASIENTO_MANUAL(P_ID_VENTA,L_ERROR,L_MSGERROR);
                ELSE
                    --GENERAR ASIENTO DE DINAMICA
                    PKG_SALES.SP_GENERAR_ASIENTO(P_ID_VENTA,L_ERROR,L_MSGERROR);
                END IF;
                IF L_ERROR > 0 THEN
                    L_MSGERROR := L_MSGERROR;
                    GOTO SALIDA_RAPIDA;
                END IF;
                
                --GENERA VENTA ELECTRONICA
                IF L_ID_ENTIDAD = 7124 THEN
                    PKG_SALES.SP_VENTA_ELECTRONICA(P_ID_VENTA,L_ID_COMPROBANTE);
                    --l_error:=0;
                END IF;
                IF L_ID_ENTIDAD = 9415 THEN
                    PKG_SALES.SP_VENTA_ELECTRONICA_ACES(P_ID_VENTA,L_ID_COMPROBANTE);
                    --l_error:=0;
                END IF;
                IF L_ID_AMACEN IS NOT NULL THEN
                    PKG_SALES.SP_KARDEX_VENTA(P_ID_VENTA);
                END IF;
                
                -- GENERA ITEM NUMERO DE LOS DETALLES
                CONTA := 1;
                OPEN VENTA_DET;
                    FETCH VENTA_DET INTO L_ID_VDETALLE;
                    WHILE VENTA_DET%FOUND LOOP
                    
                        UPDATE VENTA_DETALLE SET ITEM = CONTA
                        WHERE ID_VENTA = P_ID_VENTA
                        AND ID_VDETALLE = L_ID_VDETALLE;
                        CONTA := CONTA+1;
                    FETCH VENTA_DET INTO L_ID_VDETALLE;
                    END LOOP;
                CLOSE VENTA_DET;
                
                --------------------------

                IF P_ID_CREDITO = 1 THEN --SI LA VENTA ES AL CONTADO (EFECTIVO, TARJETA O CREDITO PERDONAL)
                    SELECT COUNT(1) INTO L_CONTAR FROM CONTA_DINAMICA
                    WHERE ID_DINAMICA IN(
                      SELECT D.ID_PARENT FROM VENTA_DETALLE A,CONTA_DINAMICA D
                      WHERE A.ID_DINAMICA=D.ID_DINAMICA
                      AND A.ID_VENTA=P_ID_VENTA
                      AND COALESCE(D.ID_PARENT,0)<>0
                    ) AND ID_ENTIDAD=L_ID_ENTIDAD;
                    
               
                    IF L_CONTAR=0 THEN
                        L_ERROR:=1;
                        L_MSGERROR:='Alto: No existe una dinàmica configurada para el depósito, relacionada como hijo de la dinámica de la venta.';
                        GOTO SALIDA_RAPIDA;
                    END IF;
                    
                    SELECT ID_DINAMICA, ID_TIPOTRANSACCION INTO L_ID_DINAMICA, L_ID_TIPOTRANSACCIONDEP FROM CONTA_DINAMICA
                    WHERE ID_DINAMICA IN(
                     SELECT D.ID_PARENT FROM VENTA_DETALLE A,CONTA_DINAMICA D
                     WHERE A.ID_DINAMICA=D.ID_DINAMICA
                     AND A.ID_VENTA=P_ID_VENTA
                     AND COALESCE(D.ID_PARENT,0)<>0
                    ) 
                    AND ID_ENTIDAD=L_ID_ENTIDAD 
                    AND ROWNUM=1;
                    
                   
                    
                    SELECT ID_TIPOASIENTO INTO L_ID_TIPOASIENTODEP FROM CONTA_VOUCHER_CONFIG
                    WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND ID_ANHO = L_ID_ANHO AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHERDEP;
            
                    
                
                    IF P_EFECTIVO>0 THEN  -- solo genera deposito  008-efectivo, 4-DEPOSITOS CLIENTES
                        L_IMPORTE:=P_EFECTIVO;
                        L_IMPORTE_ME:=0;
                        IF L_ID_MONEDA='9' THEN
                            L_IMPORTE:=P_EFECTIVO*L_TIPOCAMBIO;
                            L_IMPORTE_ME:=P_EFECTIVO;
                        END IF;
                        L_TIPOASIENTO:=L_ID_TIPOASIENTODEP;--'MB';
                        SELECT TO_CHAR(P_ID_VENTA),TO_CHAR(P_EFECTIVO) INTO L_VENTAS,L_IMP_VENTAS FROM DUAL;        
                        L_ID_MEDIOPAGO := '008'; --solo genera deposito  008-efectivo, 4-DEPOSITOS CLIENTES
                        PKG_CAJA.SP_CREAR_DEPOSITO(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,'008',L_ID_PERSONA,
                                      L_ID_CLIENTE,L_VENTAS,L_IMP_VENTAS,L_ID_TIPOTRANSACCIONDEP,L_ID_MONEDA,L_ID_DINAMICA,NULL,NULL,
                                      NULL,NULL,L_IMPORTE,0,0,L_IMPORTE_ME,L_TIPOCAMBIO,L_GLOSA,NULL,
                                      NULL,L_TIPOASIENTO,L_ID_CANAL,L_ERROR,L_MSGERROR,NULL,L_ID_DEPOSITO);
                    END IF;
                
                    IF P_CREDITO>0 THEN  --genera transferencia
                        L_IMPORTE:=TO_NUMBER(P_CREDITO);
                        L_IMPORTE_ME:=0;
                        IF L_ID_MONEDA='9' THEN
                            L_IMPORTE:=TO_NUMBER(P_CREDITO)*L_TIPOCAMBIO;
                            L_IMPORTE_ME:=TO_NUMBER(P_CREDITO);
                        END IF;
                        L_TIPOASIENTO:=L_ID_TIPOASIENTODEP;--'MB';
                        L_ID_MEDIOPAGO := '999'; --999	OTROS MEDIOS DE PAGO  13	CREDITO PERSONAL
                        SELECT TO_CHAR(P_ID_VENTA),TO_CHAR(P_CREDITO) INTO L_VENTAS,L_IMP_VENTAS FROM DUAL;
                        PKG_CAJA.SP_CREAR_DEPOSITO(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_MEDIOPAGO,L_ID_PERSONA,
                                      L_ID_CLIENTE,L_VENTAS,L_IMP_VENTAS,L_ID_TIPOTRANSACCIONDEP,L_ID_MONEDA,L_ID_DINAMICA,NULL,NULL,
                                      NULL,NULL,L_IMPORTE,0,L_IMPORTE,L_IMPORTE_ME,L_TIPOCAMBIO,L_GLOSA,NULL,
                                      NULL,L_TIPOASIENTO,L_ID_CANAL,L_ERROR,L_MSGERROR,NULL,L_ID_DEPOSITO);
                    END IF;
                
                    IF P_TARJETA>0 THEN  --genera desposito y deposito a banco
                        L_IMPORTE:=P_TARJETA;
                        L_IMPORTE_ME:=0;
                        IF L_ID_MONEDA='9' THEN
                            L_IMPORTE:=P_TARJETA*L_TIPOCAMBIO;
                            L_IMPORTE_ME:=P_TARJETA;
                        END IF;
                        L_TIPOASIENTO:=L_ID_TIPOASIENTODEP;--'MB';
                        --999	OTROS MEDIOS DE PAGO 
                        IF P_ID_TIPO_TARJETA IS NULL OR P_ID_TIPO_TARJETA = 0 THEN
                            L_ID_MEDIOPAGO:='001';  -- 006	TARJETA DE CREDITO 
                        ELSE
                            L_ID_MEDIOPAGO:='006';  -- 006	TARJETA DE CREDITO 
                        END IF;
                        SELECT TO_CHAR(P_ID_VENTA),TO_CHAR(P_TARJETA) INTO L_VENTAS,L_IMP_VENTAS FROM DUAL;   
                                                 
                        PKG_CAJA.SP_CREAR_DEPOSITO(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_MEDIOPAGO,L_ID_PERSONA,
                                      L_ID_CLIENTE,L_VENTAS,L_IMP_VENTAS,L_ID_TIPOTRANSACCIONDEP,L_ID_MONEDA,L_ID_DINAMICA,P_ID_TIPO_TARJETA,P_ID_CTABANCARIA,
                                      P_OPERACION,L_FECHA,L_IMPORTE,L_IMPORTE,0,L_IMPORTE_ME,L_TIPOCAMBIO,L_GLOSA,NULL,
                                      NULL,L_TIPOASIENTO,L_ID_CANAL,L_ERROR,L_MSGERROR,NULL,L_ID_DEPOSITO);
                    END IF;
                    IF P_TARJETA2>0 THEN  --genera desposito y deposito a banco
                        L_IMPORTE:=P_TARJETA2;
                        L_IMPORTE_ME:=0;
                        IF L_ID_MONEDA='9' THEN
                            L_IMPORTE:=P_TARJETA2*L_TIPOCAMBIO;
                            L_IMPORTE_ME:=P_TARJETA2;
                        END IF;
                        L_TIPOASIENTO:=L_ID_TIPOASIENTODEP;--'MB';
                        --999	OTROS MEDIOS DE PAGO 
                        L_ID_MEDIOPAGO:='006';  -- 006	TARJETA DE CREDITO 
                        SELECT TO_CHAR(P_ID_VENTA),TO_CHAR(P_TARJETA2) INTO L_VENTAS,L_IMP_VENTAS FROM DUAL;   
                                                 
                        PKG_CAJA.SP_CREAR_DEPOSITO(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_MEDIOPAGO,L_ID_PERSONA,
                                      L_ID_CLIENTE,L_VENTAS,L_IMP_VENTAS,L_ID_TIPOTRANSACCIONDEP,L_ID_MONEDA,L_ID_DINAMICA,P_ID_TIPO_TARJETA2,P_ID_CTABANCARIA2,
                                      P_OPERACION2,L_FECHA,L_IMPORTE,L_IMPORTE,0,L_IMPORTE_ME,L_TIPOCAMBIO,L_GLOSA,NULL,
                                      NULL,L_TIPOASIENTO,L_ID_CANAL,L_ERROR,L_MSGERROR,NULL,L_ID_DEPOSITO);
                    END IF;
                END IF; 
                --genera stock y movimiento
            END IF;  
        
        <<SALIDA_RAPIDA>>
        P_ERROR:=L_ERROR;
        P_MSGERROR:=L_MSGERROR;
      
    END SP_VENTA_END;

    PROCEDURE SP_CREAR_VENTA_DETALLE_INVEN(P_ID_VENTA NUMBER,P_ID_ARTICULO VARCHAR2,P_ID_ALMACEN NUMBER,P_CANTIDAD NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(10);
        L_ID_ANHO NUMBER;
        L_ID_CLIENTE NUMBER;
        L_ID_POLITICA NUMBER;
        L_ID_DINAMICA NUMBER;
        l_cont number;
        l_precio number(10,2);
        l_igv number(10,2);
        l_igv_item number(10,2);
        l_precio_base number(10,2);
        l_precio_alm number(10,2);
        l_base number(10,2);
        l_descuento number(10,2):=0;
        l_totaldescuento number(10,2):=0;
        l_importe number(10,2);
        l_tc number(10,3);
        l_id_tipoigv number;
        l_gravado varchar2(2);
        l_precio_me number(10,2);
        l_igv_me number(10,2);
        l_precio_base_me number(10,2);
        l_precio_alm_me number(10,2);
        l_base_me number(10,2);
        l_descuento_me number(10,2);
        l_importe_me number(10,2);
        l_id_moneda number;
        l_contar number;
        L_DETALLE VARCHAR2(255);
        L_STOCK number(10,2);
        L_STOCK_T number(10,2);
        L_COSTO_ST NUMBER(10,2);
        L_MSN VARCHAR2(200):='';
        L_CONTA NUMBER;
        
        L_NOMBRE_MODULO VARCHAR2(255);
        L_NOMBRE_ALMACEN VARCHAR2(255);
        L_CODIGO VARCHAR2(8);
        l_otros_cargos number(10,2) :=0;
        l_otros_cargos_me number(10,2) :=0;
        L_CANTIDAD NUMBER(10,2);
        L_ID_ALMACEN_P NUMBER;
        L_ID_ALM NUMBER;
        
        L_CANTIDAD_REAL NUMBER(10,2);
        
        --L_ID_TRANSFERENCIA NUMBER :=0;
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(255) :='';
        L_CANT NUMBER;
        BEGIN
          
            --obtiene igv,TC
            SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_IGV,TIPOCAMBIO,ID_MONEDA,ID_CLIENTE INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,l_igv,l_tc,l_id_moneda,l_id_cliente 
            FROM venta WHERE id_venta=P_ID_VENTA;
            
            SELECT NOMBRE,SUBSTR(CODIGO,9,16) INTO L_DETALLE, L_CODIGO FROM INVENTARIO_ARTICULO WHERE ID_ARTICULO = P_ID_ARTICULO;
            
            SELECT NOMBRE INTO L_NOMBRE_ALMACEN FROM INVENTARIO_ALMACEN WHERE ID_ALMACEN = P_ID_ALMACEN;
            SELECT NOMBRE INTO L_NOMBRE_MODULO FROM LAMB_MODULO WHERE ID_MODULO = 13;
            
            --OBTENGO EL ALMACEN PARENT
            SELECT ID_PARENT INTO L_ID_ALMACEN_P FROM INVENTARIO_ALMACEN
            WHERE ID_ALMACEN = P_ID_ALMACEN;
            
            IF L_ID_ALMACEN_P IS NULL THEN
                L_ID_ALM := P_ID_ALMACEN;
            ELSE
                L_ID_ALM := L_ID_ALMACEN_P;
            END IF;
        
            
            SELECT COUNT(1) INTO l_contar 
            FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
            JOIN TIPO_GRUPO_CONTA C ON C.ID_TIPOGRUPOCONTA = B.ID_TIPOGRUPOCONTA
            JOIN CONTA_ENTIDAD_TRANSACCION D ON D.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION AND D.ID_ENTIDAD = A.ID_ENTIDAD
            WHERE A.ID_ENTIDAD = L_ID_ENTIDAD
            AND A.ID_DEPTO = L_ID_DEPTO
            AND A.ID_ANHO = L_ID_ANHO
            AND A.ID_MODULO = 13
            AND A.ID_ALMACEN = L_ID_ALM
            AND C.CODIGO  = 'VI'
            AND A.ACTIVO = 'S';
            
            IF l_contar > 1 THEN
                L_ERROR:=1;
                L_MSGERROR := 'Alto, Hay mas de una dinámica contable para la venta en el almacén: ' ||L_NOMBRE_ALMACEN|| ', y el módulo: ' ||L_NOMBRE_MODULO||', Cant. Dina.'||l_contar;
                GOTO salida_rapida;
            ELSIF l_contar = 0 THEN 
                L_ERROR:=1;
                L_MSGERROR := 'Alto, No existe una dinámica contable para la venta en el almacén: ' ||L_NOMBRE_ALMACEN|| ', y el módulo: '||L_NOMBRE_MODULO||', Cant. Dina.'||l_contar;
                GOTO salida_rapida;
            END IF;
            
            SELECT COUNT(1) into l_contar 
            FROM INVENTARIO_ARTICULO
            WHERE ID_ARTICULO = P_ID_ARTICULO
            AND ID_UNIDADMEDIDA IS NULL;
            
            IF l_contar > 0 THEN
                L_ERROR:=1;
                L_MSGERROR := 'Alto, EL PRODUCTO no tiene Unidad de medida';
                GOTO salida_rapida;
            END IF;
                    
            IF L_ERROR = 0 THEN
                                        
                    SELECT A.ID_DINAMICA INTO L_ID_DINAMICA
                    FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
                    JOIN TIPO_GRUPO_CONTA C ON C.ID_TIPOGRUPOCONTA = B.ID_TIPOGRUPOCONTA
                    JOIN CONTA_ENTIDAD_TRANSACCION D ON D.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION AND D.ID_ENTIDAD = A.ID_ENTIDAD
                    WHERE A.ID_ENTIDAD = L_ID_ENTIDAD
                    AND A.ID_DEPTO = L_ID_DEPTO
                    AND A.ID_ANHO = L_ID_ANHO
                    AND A.ID_MODULO = 13
                    AND A.ID_ALMACEN = L_ID_ALM
                    AND C.CODIGO  = 'VI'
                    AND A.ACTIVO = 'S';
                    
                    PKG_INVENTORIES.SP_ARTICULO_STOCK(P_ID_ALMACEN,P_ID_ARTICULO,L_ID_ANHO,L_STOCK,L_COSTO_ST,L_MSN);
                    PKG_INVENTORIES.SP_ARTICULO_STOCK_TEMP(P_ID_ALMACEN,P_ID_ARTICULO,L_ID_ANHO,L_STOCK_T,L_MSN);
                    
                    IF L_STOCK > 0 THEN
                        IF L_STOCK < 1 THEN 
                            --P_CANTIDAD := L_STOCK;
                            L_CANTIDAD_REAL := L_STOCK;
                        ELSE
                            L_CANTIDAD_REAL := P_CANTIDAD;
                        END IF;
                        IF (L_STOCK-L_STOCK_T) >= L_CANTIDAD_REAL THEN
                            --obtiene precio del almacen
                            PKG_SALES.SP_PRECIO_ARTICULO(l_id_cliente,P_ID_ALMACEN,P_ID_ARTICULO,L_ID_ANHO,l_id_tipoigv,l_precio_alm,l_precio,l_descuento);
                            
                            IF l_precio > 0 THEN
                                if l_precio_alm is null then
                                    l_precio_alm:=0;
                                end if;
                             
                                select count(1) into l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                                if l_contar>0 then
                                    select GRAVADO into l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                                end if;
                                
                                --IF L_CODIGO = '24111503' THEN --CODIGO PARA IMPUESTO DE BOLSAS
                                IF L_CODIGO IN ('24111586','24111587') THEN 
                                    l_precio := l_precio - 0.5;
                                    l_otros_cargos := L_CANTIDAD_REAL * 0.5;
                                END IF;
                              
                                l_igv:=l_igv/100;
                                l_totaldescuento:=l_descuento*L_CANTIDAD_REAL;
                                --l_precio:=P_PRECIO;
                                l_precio_base:=l_precio;
                                l_importe:=((l_precio+l_otros_cargos)*L_CANTIDAD_REAL)-(l_totaldescuento);
                                --l_precio_alm:=l_precio_alm;
                                l_base:=l_importe;
                                l_igv_item:=0;
                                if l_gravado in('G') then
                                    l_precio_base:=l_precio/(1+l_igv);
                                    l_base:=(l_importe-l_otros_cargos)/(1+l_igv);
                                    l_igv_item:=(l_importe-l_otros_cargos)-l_base;
                                end if;
                                l_descuento:=l_totaldescuento;
                                l_precio_me:=0;
                                l_precio_base_me:=0;
                                l_precio_alm_me:=0;
                                l_base_me:=0;
                                l_igv_me:=0;
                                l_descuento_me:=0;
                                l_importe_me:=0; 
                                l_otros_cargos_me :=0; 
                              
                                if l_id_moneda=9 then
                                    --l_totaldescuento:=l_descuento*P_CANTIDAD;
                                    --l_totaldescuento:=l_totaldescuento/l_tc;
                                    l_totaldescuento:=l_totaldescuento/l_tc;
                                    l_precio_me:=l_precio/l_tc;
                                    l_precio_base_me:=l_precio_base/l_tc;
                                    l_importe_me:=l_importe/l_tc;
                                    l_precio_alm_me:=l_precio_alm/l_tc;
                                    l_base_me:=l_base/l_tc;
                                    l_igv_me:=l_igv_item/l_tc;
                                    l_descuento_me:=l_totaldescuento;
                                    l_otros_cargos_me := l_otros_cargos/l_tc;
                                end if;
                                SELECT COUNT(1) INTO L_CANT FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA AND ID_ARTICULO = P_ID_ARTICULO;
                                IF L_CANT > 0 THEN
                                    SELECT ID_VDETALLE,CANTIDAD INTO l_cont, L_CANTIDAD FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA AND ID_ARTICULO = P_ID_ARTICULO;
                                    PKG_SALES.SP_UPDATE_VENTA_DETALLE_INVEN(P_ID_VENTA,l_cont,L_CANTIDAD_REAL+L_CANTIDAD,L_ERROR,L_MSGERROR);
                                    IF L_ERROR > 0 THEN
                                        GOTO salida_rapida;
                                    END IF;
                                ELSE
                                    SELECT COALESCE(MAX(ID_VDETALLE),0)+1 INTO l_cont FROM VENTA_DETALLE;

                                    INSERT INTO VENTA_DETALLE(
                                    ID_VDETALLE,ID_VENTA,ID_TIPOIGV,ID_ARTICULO,ID_ALMACEN,ID_DINAMICA,DETALLE,CANTIDAD,PRECIO,PRECIO_BASE,PRECIO_ALM,BASE,IGV,DESCUENTO,IMPORTE,PRECIO_ME,PRECIO_BASE_ME,PRECIO_ALM_ME,BASE_ME,IGV_ME,DESCUENTO_ME,IMPORTE_ME,OTROS_CARGOS,OTROS_CARGOS_ME
                                    )VALUES(
                                    l_cont,P_ID_VENTA,l_id_tipoigv,P_ID_ARTICULO,P_ID_ALMACEN,L_ID_DINAMICA,L_DETALLE,L_CANTIDAD_REAL,l_precio,l_precio_base,l_precio_alm,l_base,l_igv_item,l_descuento,l_importe,l_precio_me,l_precio_base_me,l_precio_alm_me,l_base_me,l_igv_me,l_descuento_me,l_importe_me,l_otros_cargos,l_otros_cargos_me
                                    );
                                    PKG_SALES.SP_ACTUALIZAR_TOTAL_VENTA(P_ID_VENTA);
                                END IF;
                                L_ERROR:=0;
                            ELSE
                                L_ERROR:=1; --PRECIO ES MENOR A 0
                                L_MSGERROR := 'PRECIO ES MENOR A 0';
                            END IF;
                        ELSE
                            L_ERROR := 1;
                            L_MSGERROR := 'Stock Insuficiente: '||L_STOCK;
                        END IF;
                    ELSE 
                        L_ERROR := 1;
                        L_MSGERROR := 'Stock Insuficiente: '||L_STOCK;
                    END IF;
            END IF;
            
        <<salida_rapida>>
        
        P_ERROR:= L_ERROR;
        P_MSGERROR :=L_MSGERROR;
  
    END SP_CREAR_VENTA_DETALLE_INVEN;
   
END PKG_SALES_PRODUCT;