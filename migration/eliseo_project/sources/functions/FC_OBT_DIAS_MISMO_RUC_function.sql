-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

FUNCTION        FC_OBT_DIAS_MISMO_RUC(P_ID_ENTIDAD NUMBER, P_ID_PERSONA NUMBER, FECHA_INI DATE, FECHA_FIN DATE) RETURN NUMBER
IS
l_contar int:=0;
total_meses number(10,2):=0.00;
contador int:=0;
anho number;
mes number;
fecha_ini_temp date;
fecha_fin_temp date;
fecha_ini_gen DATE;
fecha_fin_gen DATE;
total_meses_vacios number:=0;
dias number:=0;

BEGIN

		SELECT COUNT(*) INTO l_contar
		FROM APS_EMPLEADO 
		WHERE ID_PERSONA=P_ID_PERSONA AND FC_EMPRESA_RUC(ID_ENTIDAD) = FC_EMPRESA_RUC(P_ID_ENTIDAD) AND ESTADO IS NOT NULL
			AND FEC_ENTIDAD < FECHA_FIN AND (FEC_TERMINO IS NULL OR (FEC_TERMINO BETWEEN FECHA_INI AND FECHA_FIN OR FEC_TERMINO >= FECHA_FIN));

		IF l_contar > 0 THEN
			IF l_contar = 1 THEN
				SELECT RECORDS.SALIDA,RECORDS.INGRESO,MONTHS_BETWEEN(RECORDS.SALIDA+1, RECORDS.INGRESO) INTO fecha_fin_gen,fecha_ini_gen,total_meses
				FROM (
					SELECT ID_ENTIDAD, FEC_ENTIDAD, FEC_INICIO, FEC_TERMINO, ESTADO ,
						(CASE WHEN FEC_ENTIDAD > FECHA_INI THEN FEC_ENTIDAD ELSE FECHA_INI END ) AS INGRESO,
						(CASE WHEN FEC_TERMINO IS NULL THEN FECHA_FIN WHEN FEC_TERMINO IS NOT NULL AND FEC_TERMINO > FECHA_FIN THEN FECHA_FIN ELSE FEC_TERMINO END) AS SALIDA
					FROM APS_EMPLEADO 
					WHERE ID_PERSONA=P_ID_PERSONA AND FC_EMPRESA_RUC(ID_ENTIDAD) = FC_EMPRESA_RUC(P_ID_ENTIDAD) AND ESTADO IS NOT NULL
						AND FEC_ENTIDAD < FECHA_FIN AND (FEC_TERMINO IS NULL OR (FEC_TERMINO BETWEEN FECHA_INI AND FECHA_FIN OR FEC_TERMINO >= FECHA_FIN))
				) RECORDS;
			ELSE
				FOR ITEM IN (SELECT ID_ENTIDAD, FEC_ENTIDAD, FEC_INICIO, FEC_TERMINO, ESTADO 
					FROM APS_EMPLEADO 
					WHERE ID_PERSONA=P_ID_PERSONA AND FC_EMPRESA_RUC(ID_ENTIDAD) = FC_EMPRESA_RUC(P_ID_ENTIDAD) AND ESTADO IS NOT NULL
						AND FEC_ENTIDAD < FECHA_FIN AND (FEC_TERMINO IS NULL OR (FEC_TERMINO BETWEEN FECHA_INI AND FECHA_FIN OR FEC_TERMINO >= FECHA_FIN))
						ORDER BY FEC_ENTIDAD,ID_CONTRATO)
				LOOP
					contador := contador + 1;
					IF contador = 1 THEN
						fecha_ini_temp 	:= (CASE WHEN ITEM.FEC_ENTIDAD > FECHA_INI THEN ITEM.FEC_ENTIDAD ELSE FECHA_INI END);
						fecha_fin_temp 	:= (CASE WHEN ITEM.FEC_TERMINO IS NULL THEN FECHA_FIN 
																		 WHEN ITEM.FEC_TERMINO IS NOT NULL AND ITEM.FEC_TERMINO > FECHA_FIN THEN FECHA_FIN ELSE ITEM.FEC_TERMINO END);

						total_meses 		:= MONTHS_BETWEEN(fecha_fin_temp + 1, fecha_ini_temp);
					ELSE
						IF (ITEM.FEC_ENTIDAD NOT BETWEEN fecha_ini_temp AND fecha_fin_temp) AND (ITEM.FEC_INICIO NOT BETWEEN fecha_ini_temp AND fecha_fin_temp) THEN		
							IF (ITEM.FEC_ENTIDAD = fecha_fin_temp + 1) OR (ITEM.FEC_INICIO = fecha_fin_temp + 1) THEN
								fecha_ini_temp 	:= (CASE WHEN ITEM.FEC_ENTIDAD = fecha_fin_temp + 1  THEN ITEM.FEC_ENTIDAD ELSE ITEM.FEC_INICIO END);
								fecha_fin_temp 	:= (CASE WHEN ITEM.FEC_TERMINO IS NULL THEN FECHA_FIN ELSE ITEM.FEC_TERMINO END);

								total_meses 		:= total_meses + MONTHS_BETWEEN(fecha_fin_temp + 1, fecha_ini_temp);
							ELSE
								fecha_ini_temp 	:= (CASE WHEN ITEM.FEC_ENTIDAD > FECHA_INI THEN ITEM.FEC_ENTIDAD ELSE FECHA_INI END);
								fecha_fin_temp 	:= (CASE WHEN ITEM.FEC_TERMINO IS NULL THEN FECHA_FIN 
																			 WHEN ITEM.FEC_TERMINO IS NOT NULL AND ITEM.FEC_TERMINO > FECHA_FIN THEN FECHA_FIN ELSE ITEM.FEC_TERMINO END);
								total_meses := MONTHS_BETWEEN(fecha_fin_temp + 1, fecha_ini_temp);
								--fecha_ini_temp 	:= ITEM.FEC_ENTIDAD;
								--fecha_fin_temp 	:= (CASE WHEN ITEM.FEC_TERMINO IS NULL THEN FECHA_FIN ELSE ITEM.FEC_TERMINO END);
							END IF;
						END IF;
					fecha_fin_gen := fecha_fin_temp;
					END IF;
				END LOOP;
			END IF;
		END IF;
	IF l_contar>1 THEN 
		dias:=CEIL((total_meses - TRUNC(total_meses))* 30);
	ELSE
		dias:=fecha_fin_gen - ADD_MONTHS(fecha_ini_gen, TRUNC(total_meses));
	END IF;
	RETURN CASE WHEN dias<=0 THEN 0 ELSE dias END;
END;

