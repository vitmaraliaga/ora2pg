-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE                PKG_BENEFITS AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */
  PROCEDURE SP_GENERAR_PERIODO_VAC_MASIVO(P_ID_ENTIDAD  IN NUMBER, P_ID_DEPTO_PARENT IN VARCHAR2,P_ID_AREA IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ID_DEPTO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GEN_PERIODO_VAC_MASIVO_UPN(P_ID_ENTIDAD IN NUMBER,P_ID_AREA IN NUMBER,P_ID_PERFIL_PUESTO IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_PERIODO_VAC_TRAB(P_ID_TRABAJADOR IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ITEM IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GEN_PERIODO_VAC_TRAB_UPN(P_ID_TRABAJADOR IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ITEM IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GEN_PERIODO_VAC_TRAB_ADEL(P_ID_TRABAJADOR IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ITEM IN NUMBER,P_ID_PERIODO_VAC_TRAB OUT varchar2, P_ERROR OUT  number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ROL_VACACIONAL(P_ID_ROL_VACACION IN varchar2, P_ID_PERIODO_VAC_TRAB IN varchar2,P_FECHA_INI IN DATE,P_FECHA_FIN IN DATE,P_OPC IN VARCHAR2,P_ID_USER_REG IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ROL_VACACIONAL_UPN(P_ID_ROL_VACACION IN varchar2,P_ID_PARENT IN varchar2, P_ID_PERIODO_VAC_TRAB IN varchar2,P_FECHA_INI IN DATE,P_FECHA_FIN IN DATE,P_OPC IN VARCHAR2,P_ID_USER_REG IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_ROL_VACACIONAL_HIST(P_ID_PERIODO_VAC_TRAB IN varchar2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_VAC_ADELANTO(P_ID_PERIODO_VAC IN NUMBER, P_ID_SOL_VAC_ADEL_DET IN NUMBER,P_ID_TRABAJADOR NUMBER,P_FECHA_INI IN DATE,P_FECHA_FIN IN DATE,P_ID_USER_REG IN NUMBER,P_ITEM IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_REP_VACACIONAL(P_ID_ROL_VACACION_REP IN varchar2,P_ID_ROL_VACACION IN long, P_FECHA_INI IN long,P_FECHA_FIN IN long,P_MOTIVO_REPRO IN long, P_OPC IN long,P_ID_USER_REG IN NUMBER,P_GTH varchar2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_REGISTRAR_LICENCIA_PERMISO(
        P_ID_CONCEPTO_PERM_LIC NUMBER, 	P_ID_ENTIDAD NUMBER, 
        P_ID_DEPTO VARCHAR2, P_ID_AREA NUMBER, 
        P_ID_TRABAJADOR NUMBER, P_PERIODO VARCHAR2, 
        P_MOTIVO VARCHAR2,	P_FECHA_DESDE DATE, 
	      P_FECHA_HASTA DATE, P_ID_TIPO_INST_ATENCION NUMBER,
        P_NOMBRE_INST VARCHAR2,P_CODIGOCITT VARCHAR2,
        P_CODIGONIT VARCHAR2,"P_CODIGOVIVA" VARCHAR2,
        P_ID_USER_REG	NUMBER, P_ID_TRABAJADOR_GRUPO VARCHAR2,
        P_AMBIENTE VARCHAR2,P_ERROR OUT number,
        P_MSGERROR out varchar2, P_ID_LICENCIA_PERMISO_NEW OUT	NUMBER
        ) ;
  PROCEDURE SP_CONTROL_VACACION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_CONTROL_PERMISO_LIC(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_REPVAC(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_PERIODO_VAC NUMBER,P_ID_AREA VARCHAR2,P_DATO VARCHAR2,P_ESTADO VARCHAR2,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_VALIDAR_PERMISO_LIC(
  P_ID_ENTIDAD NUMBER,
  P_ID_CONCEPTO_PERM_LIC NUMBER,
  P_ID_TRABAJADOR NUMBER,
  P_FECHA_DESDE DATE, 
  P_FECHA_HASTA DATE,
  CURSOR OUT SYS_REFCURSOR
  );
  PROCEDURE SP_REPORTE_PERMISO_LIC(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_TIPO_PERM_LIC NUMBER,
        P_ID_CONCEPTO_PERM_LIC VARCHAR2,
        P_ID_TRABAJADOR NUMBER,
        P_TIPO VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_FECHA_DESDE DATE, 
        P_FECHA_HASTA DATE,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREA VARCHAR2,
        P_ID_USER NUMBER,
        P_OPCION VARCHAR2,
        CURSOR OUT SYS_REFCURSOR
        ) ;
  PROCEDURE SP_REPORTE_PERMISO_LIC_DET(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_CONCEPTO_PERM_LIC NUMBER,
        P_ID_TIPO_SUSPENSION NUMBER,
        P_ID_TRABAJADOR NUMBER,
        P_TIPO VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_FECHA_DESDE DATE, 
        P_FECHA_HASTA DATE,
        P_PERIODO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREA VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        ) ;
PROCEDURE SP_REPORTE_PERMISO_LIC_TRAB(
        P_ID_TRABAJADOR NUMBER,
        P_TIPO VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_FECHA_DESDE DATE, 
        P_FECHA_HASTA DATE,
        CURSOR OUT SYS_REFCURSOR
        );
PROCEDURE SP_REPORTE_HIJO_TRABAJADOR(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIEMPO_TRABAJO NUMBER,
        P_ID_SITUACION_TRABAJADOR VARCHAR2,
        P_ID_AREA NUMBER,
        P_ID_AREAS VARCHAR2,
        P_SEXO NUMBER,
        P_EDAD_DESDE NUMBER,
        P_EDAD_HASTA NUMBER,
        P_DESDE DATE, 
        P_HASTA DATE,
        P_DATO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        );
   PROCEDURE SP_REPORTE_AYUDAS_EDUCATIVAS(
      P_ID_ENTIDAD NUMBER, 
      P_ID_SITUACION_TRABAJADOR VARCHAR2, 
      P_ID_CONDICION_LABORAL VARCHAR2,
      P_DATO VARCHAR2,
      P_ANHO_DESDES NUMBER, 
      P_ANHO_HASTA NUMBER, 
      CURSOR OUT SYS_REFCURSOR );
END PKG_BENEFITS;


CREATE OR REPLACE PACKAGE BODY                               PKG_BENEFITS AS
  PROCEDURE SP_GENERAR_PERIODO_VAC_MASIVO(P_ID_ENTIDAD  IN NUMBER, P_ID_DEPTO_PARENT IN VARCHAR2,P_ID_AREA IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ID_DEPTO VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_error1 number:=0;
        l_msgerror1 varchar2(200):='';
        l_i integer:=0;
         cursor curPER is
         SELECT 
              ID_TRABAJADOR
            FROM MOISES.TRABAJADOR 
            WHERE ID_SEDEAREA IN(
              SELECT ID_SEDEAREA FROM ELISEO.VW_SEDE_AREA 
              WHERE ID_AREA=P_ID_AREA AND ID_ENTIDAD = CASE WHEN P_ID_ENTIDAD = 0 THEN (SELECT ID_ENTIDAD FROM ENOC.PLLA_PERIODO_VAC WHERE ID_PERIODO_VAC = P_ID_PERIODO_VAC) ELSE P_ID_ENTIDAD END
              AND 1 = CASE WHEN P_ID_DEPTO_PARENT = '0' THEN 1 ELSE CASE WHEN P_ID_DEPTO_PARENT = ID_DEPTO_PADRE THEN 1 ELSE 0 END END
              --AND ID_DEPTO LIKE P_ID_DEPTO_PARENT||'%'
            )
            AND ID_SITUACION_TRABAJADOR='1'
            AND fecha_inicio is not null
            AND ID_TRABAJADOR NOT IN(
              SELECT ID_PERSONA
              FROM PLLA_PERIODO_VAC_TRAB 
              WHERE ID_PERIODO_VAC=P_ID_PERIODO_VAC
            );
            
            
            cursor curPERDEPTO is
         SELECT 
              ID_TRABAJADOR
            FROM MOISES.TRABAJADOR 
            WHERE ID_SEDEAREA IN(
              SELECT ID_SEDEAREA FROM ELISEO.VW_SEDE_AREA 
              WHERE ID_ENTIDAD = CASE WHEN P_ID_ENTIDAD = 0 THEN (SELECT ID_ENTIDAD FROM ENOC.PLLA_PERIODO_VAC WHERE ID_PERIODO_VAC = P_ID_PERIODO_VAC) ELSE P_ID_ENTIDAD END
              AND 1 = CASE WHEN P_ID_DEPTO = '0' THEN 1 ELSE CASE WHEN P_ID_DEPTO = ID_DEPTO_PADRE THEN 1 ELSE 0 END END
              --ID_DEPTO LIKE P_ID_DEPTO||'%'
            )
            AND ID_SITUACION_TRABAJADOR='1'
            AND fecha_inicio is not null
            AND ID_TRABAJADOR NOT IN(
              SELECT ID_PERSONA
              FROM PLLA_PERIODO_VAC_TRAB 
              WHERE ID_PERIODO_VAC=P_ID_PERIODO_VAC
            );
            
        BEGIN
        
        IF P_ID_DEPTO IS NOT NULL THEN
          FOR cur in curPERDEPTO LOOP
            BEGIN
              PKG_BENEFITS.SP_GENERAR_PERIODO_VAC_TRAB(cur.id_trabajador,P_ID_PERIODO_VAC,l_i,l_error1,l_msgerror1);
              l_i:=l_i + 1;
            END;     
          END LOOP;

        ELSE
          FOR cur in curPER LOOP
            BEGIN
              PKG_BENEFITS.SP_GENERAR_PERIODO_VAC_TRAB(cur.id_trabajador,P_ID_PERIODO_VAC,l_i,l_error1,l_msgerror1);
              l_i:=l_i + 1;
            END;     
          END LOOP;
        END IF;
        
        if l_i=0 then
          l_error:=1;
          l_msgerror:='No hay datos para generar';
        end if;
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
        END SP_GENERAR_PERIODO_VAC_MASIVO;
        
       PROCEDURE SP_GEN_PERIODO_VAC_MASIVO_UPN(P_ID_ENTIDAD IN NUMBER,P_ID_AREA IN NUMBER,P_ID_PERFIL_PUESTO IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_error1 number:=0;
        l_msgerror1 varchar2(200):='';
        l_i integer:=0;
         cursor curPER is
         SELECT 
              t.ID_TRABAJADOR
            FROM MOISES.TRABAJADOR  t
            WHERE t.ID_SEDEAREA IN(
              SELECT sa.ID_SEDEAREA FROM ELISEO.VW_SEDE_AREA sa
              WHERE CASE WHEN P_ID_AREA = 0 THEN 1 ELSE CASE WHEN sa.ID_AREA=P_ID_AREA THEN 1 ELSE 0 END END = 1
              AND sa.ID_ENTIDAD = CASE WHEN P_ID_ENTIDAD = 0 THEN (SELECT ID_ENTIDAD FROM ENOC.PLLA_PERIODO_VAC WHERE ID_PERIODO_VAC = P_ID_PERIODO_VAC) ELSE P_ID_ENTIDAD END
            )
            AND t.ID_SITUACION_TRABAJADOR='1'
            AND t.fecha_inicio is not NULL
            AND CASE WHEN P_ID_PERFIL_PUESTO = 0 THEN 1 ELSE CASE WHEN ID_PERFIL_PUESTO = P_ID_PERFIL_PUESTO THEN 1 ELSE 0 END END = 1
            AND NOT EXISTS(
              SELECT 1
              FROM PLLA_PERIODO_VAC_TRAB pvt
              WHERE pvt.ID_PERIODO_VAC=P_ID_PERIODO_VAC
              AND pvt.ID_TRABAJADOR = t.ID_TRABAJADOR
            );
          
        BEGIN
          FOR cur in curPER LOOP
            BEGIN
              PKG_BENEFITS.SP_GENERAR_PERIODO_VAC_TRAB(cur.id_trabajador,P_ID_PERIODO_VAC,l_i,l_error1,l_msgerror1);
              l_i:=l_i + 1;
            END;     
          END LOOP;
        
        if l_i=0 then
          l_error:=1;
          l_msgerror:='No hay datos para generar';
        end if;
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
        END SP_GEN_PERIODO_VAC_MASIVO_UPN;
       
        PROCEDURE SP_GENERAR_PERIODO_VAC_TRAB(P_ID_TRABAJADOR IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ITEM IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_fecha_inicio date;
        l_fecha_fin_previsto date;
        l_inicio date;
        l_fin date;
        l_anho_inicio number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number:=0;
        l_contar1 number:=0;
        l_dias number:=0;
        l_id_periodo_vac_trab varchar(25):='';
        l_dias_anho number:=0;
        l_meses_cal  number(10,2):=0;
       	l_id_tipo_tiempo_trabajo number:=0;
        BEGIN
          select fecha_inicio, fecha_fin_previsto,id_tipo_tiempo_trabajo into l_fecha_inicio,l_fecha_fin_previsto,l_id_tipo_tiempo_trabajo from moises.trabajador  where id_trabajador=P_ID_TRABAJADOR;
          
          select ANHO_INICIO into l_anho_inicio from plla_periodo_vac  where ID_PERIODO_VAC=P_ID_PERIODO_VAC;
          
          select count(*) into l_contar from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC=P_ID_PERIODO_VAC and id_trabajador=P_ID_TRABAJADOR;
          
           select count(*) into l_contar1 from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC>P_ID_PERIODO_VAC and id_trabajador=P_ID_TRABAJADOR;
          
          if l_contar=0 and l_contar1=0 then   
            if l_fecha_fin_previsto is null then
              
              l_inicio := to_date(to_char(l_fecha_inicio,'DD-MM')||'-'||to_char(l_anho_inicio),'dd/mm/yyyy');
              select (l_inicio + interval '1' year)-1 into l_fin from dual; -- to_date(to_char(add_months(l_inicio,12)-1 ,'DD-MM')||'-'||to_char(l_anho_inicio+1),'dd/mm/yyyy');
              
              if to_number(to_char(l_fecha_inicio,'YYYY'))>l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='1-En este periodo no le corresponde vacaciones.';
                 GOTO salida_vactrab; 
              end if;
              /*
              if to_number(to_char(sysdate,'YYYY'))<l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='2-No corresponde';
                 GOTO salida_vactrab; 
              end if;
              */
              
              select to_date(to_char(sysdate,'DD-MM-YYYY'),'dd/mm/yyyy') - l_fecha_inicio into l_dias from dual;
              if l_dias<360 then
                 l_error:=1;
                 l_msgerror:='3-Debe haber laborado como mínimo 12 meses para gozar de vacaciones.';
                 GOTO salida_vactrab; 
              end if;
            else    
              
              if to_number(to_char(l_fecha_inicio,'YYYY'))>l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='4-En este periodo no le corresponde vacaciones.';
                 GOTO salida_vactrab; 
              end if;
              
              if to_number(to_char(l_fecha_fin_previsto,'YYYY'))<l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='5-En este periodo no le corresponde vacaciones.';
                 GOTO salida_vactrab; 
              end if;
              
              --select to_date(l_fecha_fin_previsto, 'dd/mm/yyyy') -  to_date(l_fecha_inicio, 'dd/mm/yyyy') into l_dias from dual;
              select l_fecha_fin_previsto - l_fecha_inicio into l_dias from dual;
              
              if l_dias>=360 then
                l_inicio := to_date(to_char(l_fecha_inicio,'DD-MM')||'-'||to_char(l_anho_inicio),'dd/mm/yyyy');
                select l_inicio - l_fecha_inicio into l_dias from dual;
                if l_dias<360 then
                   l_error:=1;
                   l_msgerror:='6-En este periodo todavia no le corresponde vacaciones.';
                   GOTO salida_vactrab; 
                end if;
                select (l_inicio + interval '1' year)-1 into l_fin from dual; --l_fin    := to_date(to_char(add_months(l_inicio,12)-1 ,'DD-MM')||'-'||to_char(l_anho_inicio+1),'dd/mm/yyyy');
                select to_date(to_char(sysdate,'DD-MM-YYYY'),'dd/mm/yyyy') - l_fecha_inicio into l_dias from dual;
                if l_dias<360 then
                   l_error:=1;
                   l_msgerror:='7-En este periodo todavia no le corresponde vacaciones.';
                   GOTO salida_vactrab; 
                end if;
              else
                l_error:=1;
                l_msgerror:='8-Debe haber laborado como mínimo 12 meses para gozar de vacaciones.';
                 GOTO salida_vactrab; 
              end if;
            end if;
          else
            if l_contar1>0 then
              l_error:=1;
              l_msgerror:='No se puede registrar al periodo anterior';
              GOTO salida_vactrab; 
            else
              l_error:=1;
              l_msgerror:='Ya esta registrado para el periodo';
              GOTO salida_vactrab; 
            end if;
            
          end if;
          
          if l_error =0 then
          
           
            select (l_fin - l_inicio)+1 into l_dias_anho from dual;
            
            SELECT l_dias_anho/30 INTO l_meses_cal FROM DUAL;

           
            SELECT floor((l_meses_cal*30)/12) into l_dias_anho FROM DUAL;
            
            if l_dias_anho>30 then
              l_dias_anho:=30;
            end if;
           
           	--Verificamos la jornada laboral del trabajador es tiempo parcial -->por Ulices julca -->2025
            SELECT COUNT(*) INTO l_contar FROM MOISES.TIPO_TIEMPO_TRABAJO
            WHERE CODIGO = 'TP' AND ID_TIPO_TIEMPO_TRABAJO = l_id_tipo_tiempo_trabajo;
           	
           	IF l_contar > 0 THEN 
           		l_dias_anho:=6;--Si laboró 12 meses le corresponde 6 dias de vacaciones
           	END IF;
            
            select to_char(sysdate,'YYYYMMDDhh24miss')||to_char(P_ITEM) into l_id_periodo_vac_trab from dual; 
            insert into PLLA_PERIODO_VAC_TRAB(
              ID_PERIODO_VAC_TRAB,
              ID_PERIODO_VAC,
              ID_TRABAJADOR,
              PERIODO_INI,
              PERIODO_FIN,
              TOTAL_DIAS,
              TOTAL_DIAS_EFECT,
              ID_ESTADO_VAC_TRAB,
              DIAS_ANHO
            )values(
              l_id_periodo_vac_trab,
              P_ID_PERIODO_VAC,
              P_ID_TRABAJADOR,
              l_inicio,
              l_fin,
              0,
              0,
              '01',
              l_dias_anho
            );
          end if;
          <<salida_vactrab>>
          P_ERROR:=l_error;
          P_MSGERROR:= l_msgerror;
          
        END SP_GENERAR_PERIODO_VAC_TRAB;
       
       
       	PROCEDURE SP_GEN_PERIODO_VAC_TRAB_UPN(P_ID_TRABAJADOR IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ITEM IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_fecha_inicio date;
        l_fecha_fin_previsto date;
        l_inicio date;
        l_fin date;
        l_anho_inicio number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number:=0;
        l_contar1 number:=0;
        l_dias number:=0;
        l_id_periodo_vac_trab varchar(25):='';
        l_dias_anho number:=0;
        l_meses_cal  number(10,2):=0;
       	l_id_tipo_tiempo_trabajo number:=0;
       	l_id_condicion_laboral varchar(5):='';
       	l_es_vacacion_interna number:=0; --Esto es para los misiones y empleados
        BEGIN
          select fecha_inicio, fecha_fin_previsto,id_tipo_tiempo_trabajo,id_condicion_laboral
         	into l_fecha_inicio,l_fecha_fin_previsto,l_id_tipo_tiempo_trabajo,l_id_condicion_laboral 
         	from moises.trabajador  where id_trabajador=P_ID_TRABAJADOR;
          
          select ANHO_INICIO into l_anho_inicio from plla_periodo_vac  where ID_PERIODO_VAC=P_ID_PERIODO_VAC;
          
          select count(*) into l_contar from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC=P_ID_PERIODO_VAC and id_trabajador=P_ID_TRABAJADOR;
          
           select count(*) into l_contar1 from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC>P_ID_PERIODO_VAC and id_trabajador=P_ID_TRABAJADOR;
          
          if l_contar=0 and l_contar1=0 then   
            if l_fecha_fin_previsto is null then
              
              l_inicio := to_date(to_char(l_fecha_inicio,'DD-MM')||'-'||to_char(l_anho_inicio),'dd/mm/yyyy');
              select (l_inicio + interval '1' year)-1 into l_fin from dual; -- to_date(to_char(add_months(l_inicio,12)-1 ,'DD-MM')||'-'||to_char(l_anho_inicio+1),'dd/mm/yyyy');
              
              if to_number(to_char(l_fecha_inicio,'YYYY'))>l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='1-En este periodo no le corresponde vacaciones.';
                 GOTO salida_vactrab; 
              end if;
              /*
              if to_number(to_char(sysdate,'YYYY'))<l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='2-No corresponde';
                 GOTO salida_vactrab; 
              end if;
              */
              
              select to_date(to_char(sysdate,'DD-MM-YYYY'),'dd/mm/yyyy') - l_fecha_inicio into l_dias from dual;
              if l_dias<360 THEN
              	IF l_id_condicion_laboral NOT IN ('M','E') THEN 
                 l_error:=1;
                 l_msgerror:='3-Debe haber laborado como mínimo 12 meses para gozar de vacaciones.';
                 GOTO salida_vactrab;
                END IF;
               	l_es_vacacion_interna:=1;
              end if;
            else    
              
              if to_number(to_char(l_fecha_inicio,'YYYY'))>l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='4-En este periodo no le corresponde vacaciones.';
                 GOTO salida_vactrab; 
              end if;
              
              if to_number(to_char(l_fecha_fin_previsto,'YYYY'))<l_anho_inicio then
                 l_error:=1;
                 l_msgerror:='5-En este periodo no le corresponde vacaciones.';
                 GOTO salida_vactrab; 
              end if;
              
              --select to_date(l_fecha_fin_previsto, 'dd/mm/yyyy') -  to_date(l_fecha_inicio, 'dd/mm/yyyy') into l_dias from dual;
              select l_fecha_fin_previsto - l_fecha_inicio into l_dias from dual;
              
              if l_dias>=360 then
                l_inicio := to_date(to_char(l_fecha_inicio,'DD-MM')||'-'||to_char(l_anho_inicio),'dd/mm/yyyy');
                select l_inicio - l_fecha_inicio into l_dias from dual;
                if l_dias<360 then
                   l_error:=1;
                   l_msgerror:='6-En este periodo todavia no le corresponde vacaciones.';
                   GOTO salida_vactrab; 
                end if;
                select (l_inicio + interval '1' year)-1 into l_fin from dual; --l_fin    := to_date(to_char(add_months(l_inicio,12)-1 ,'DD-MM')||'-'||to_char(l_anho_inicio+1),'dd/mm/yyyy');
                select to_date(to_char(sysdate,'DD-MM-YYYY'),'dd/mm/yyyy') - l_fecha_inicio into l_dias from dual;
                if l_dias<360 then
                  	IF l_id_condicion_laboral NOT IN ('M','E') THEN 
	                 l_error:=1;
	                 l_msgerror:='3-En este periodo todavia no le corresponde vacaciones.';
	                 GOTO salida_vactrab; 
	                END IF;
	               	l_es_vacacion_interna:=1;
                end if;
              ELSE
              	IF l_id_condicion_laboral IN ('M','E') THEN 
              		select to_date(to_char(sysdate,'DD-MM-YYYY'),'dd/mm/yyyy') - l_fecha_inicio into l_dias from dual;
                	if l_dias>=360 then
		                l_error:=1;
		                l_msgerror:='8-Debe haber laborado como mínimo 12 meses para gozar de vacaciones.';
		                GOTO salida_vactrab; 
	                end if;
	               	l_es_vacacion_interna:=1;
	            ELSE
	            	l_error:=1;
	                l_msgerror:='8-Debe haber laborado como mínimo 12 meses para gozar de vacaciones.';
	                GOTO salida_vactrab; 
                end if;
              end if;
            end if;
          else
            if l_contar1>0 then
              l_error:=1;
              l_msgerror:='No se puede registrar al periodo anterior';
              GOTO salida_vactrab; 
            else
              l_error:=1;
              l_msgerror:='Ya esta registrado para el periodo';
              GOTO salida_vactrab; 
            end if;
            
          end if;
          
          if l_error =0 then
          
           
            select (l_fin - l_inicio)+1 into l_dias_anho from dual;
            
            SELECT l_dias_anho/30 INTO l_meses_cal FROM DUAL;

           
            SELECT floor((l_meses_cal*30)/12) into l_dias_anho FROM DUAL;
            
            if l_dias_anho>30 then
              l_dias_anho:=30;
            end if;
           
           	--Verificamos la jornada laboral del trabajador es tiempo parcial -->por Ulices julca -->2025
            SELECT COUNT(*) INTO l_contar FROM MOISES.TIPO_TIEMPO_TRABAJO
            WHERE CODIGO = 'TP' AND ID_TIPO_TIEMPO_TRABAJO = l_id_tipo_tiempo_trabajo;
           	
           	IF l_contar > 0 THEN 
           		l_dias_anho:=6;--Si laboró 12 meses le corresponde 6 dias de vacaciones
           	END IF;
            
            select to_char(sysdate,'YYYYMMDDhh24miss')||to_char(P_ITEM) into l_id_periodo_vac_trab from dual; 
            insert into PLLA_PERIODO_VAC_TRAB(
              ID_PERIODO_VAC_TRAB,
              ID_PERIODO_VAC,
              ID_TRABAJADOR,
              PERIODO_INI,
              PERIODO_FIN,
              TOTAL_DIAS,
              TOTAL_DIAS_EFECT,
              ID_ESTADO_VAC_TRAB,
              DIAS_ANHO,
              es_interno
            )values(
              l_id_periodo_vac_trab,
              P_ID_PERIODO_VAC,
              P_ID_TRABAJADOR,
              l_inicio,
              l_fin,
              0,
              0,
              '01',
              l_dias_anho,
              l_es_vacacion_interna
            );
          end if;
          <<salida_vactrab>>
          P_ERROR:=l_error;
          P_MSGERROR:= l_msgerror;
          
        END SP_GEN_PERIODO_VAC_TRAB_UPN;
        
        
        PROCEDURE SP_GEN_PERIODO_VAC_TRAB_ADEL(P_ID_TRABAJADOR IN NUMBER, P_ID_PERIODO_VAC IN NUMBER,P_ITEM IN NUMBER,P_ID_PERIODO_VAC_TRAB OUT varchar2, P_ERROR OUT  number,P_MSGERROR out varchar2) IS
        l_fecha_inicio date;
        l_fecha_fin_previsto date;
        l_inicio date;
        l_fin date;
        l_anho_inicio number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number:=0;
        l_contar1 number:=0;
        l_dias number:=0;
        l_id_periodo_vac_trab varchar(25):='';
          l_dias_anho number:=0;
        l_meses_cal  number(10,2):=0;
       	l_id_tipo_tiempo_trabajo number:=0;
        BEGIN
          select fecha_inicio, fecha_fin_previsto,id_tipo_tiempo_trabajo into l_fecha_inicio,l_fecha_fin_previsto,l_id_tipo_tiempo_trabajo from moises.trabajador  where id_trabajador=P_ID_TRABAJADOR;
          
          select ANHO_INICIO into l_anho_inicio from plla_periodo_vac  where ID_PERIODO_VAC=P_ID_PERIODO_VAC;
          
          select count(*) into l_contar from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC=P_ID_PERIODO_VAC and ID_TRABAJADOR=P_ID_TRABAJADOR;
          
           select count(*) into l_contar1 from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC>P_ID_PERIODO_VAC and ID_TRABAJADOR=P_ID_TRABAJADOR;
          
          if l_contar=0 and l_contar1=0 then   
            if l_fecha_fin_previsto is null then
              
              l_inicio := to_date(to_char(l_fecha_inicio,'DD-MM')||'-'||to_char(l_anho_inicio),'dd/mm/yyyy');
              select (l_inicio + interval '1' year)-1 into l_fin from dual;--l_fin    := to_date(to_char(add_months(l_inicio,12)-1 ,'DD-MM')||'-'||to_char(l_anho_inicio+1),'dd/mm/yyyy');
            else    
              
              if to_number(to_char(l_fecha_inicio,'YYYY'))>l_anho_inicio then
                 l_msgerror:='No corresponde';
                 GOTO salida_vactrab_ade; 
              end if;
              
              if to_number(to_char(l_fecha_fin_previsto,'YYYY'))<l_anho_inicio then
                 l_msgerror:='No corresponde';
                 GOTO salida_vactrab_ade; 
              end if;
              
              --select to_date(l_fecha_fin_previsto, 'dd/mm/yyyy') -  to_date(l_fecha_inicio, 'dd/mm/yyyy') into l_dias from dual;
              select l_fecha_fin_previsto - l_fecha_inicio into l_dias from dual;
              
              
              l_inicio := to_date(to_char(l_fecha_inicio,'DD-MM')||'-'||to_char(l_anho_inicio),'dd/mm/yyyy');
              select (l_inicio + interval '1' year)-1 into l_fin from dual;--l_fin    := to_date(to_char(add_months(l_inicio,12)-1 ,'DD-MM')||'-'||to_char(l_anho_inicio+1),'dd/mm/yyyy');
              
            end if;
          else
            if l_contar1>0 then
              l_error:=1;
              l_msgerror:='No se puede registrar al periodo anterior';
              GOTO salida_vactrab_ade; 
            end if;
            if l_contar>0 then
              l_error:=0;
              select ID_PERIODO_VAC_TRAB into l_id_periodo_vac_trab from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC=P_ID_PERIODO_VAC and ID_TRABAJADOR=P_ID_TRABAJADOR;
              GOTO salida_vactrab_ade; 
            end if;
            
          end if;
          
          if l_error =0 then
          
           
            select (l_fin - l_inicio)+1 into l_dias_anho from dual;
            
            SELECT l_dias_anho/30 INTO l_meses_cal FROM DUAL;

           
            SELECT floor((l_meses_cal*30)/12) into l_dias_anho FROM DUAL;
            
           	if l_dias_anho>30 then
              l_dias_anho:=30;
            end if;
           
           	--Verificamos la jornada laboral del trabajador es tiempo parcial -->por Ulices julca -->2025
            SELECT COUNT(*) INTO l_contar FROM MOISES.TIPO_TIEMPO_TRABAJO
            WHERE CODIGO = 'TP' AND ID_TIPO_TIEMPO_TRABAJO = l_id_tipo_tiempo_trabajo;
           	
           	IF l_contar > 0 THEN 
           		l_dias_anho:=6;--Si laboró 12 meses le corresponde 6 dias de vacaciones
           	END IF;
           
            select to_char(sysdate,'YYYYMMDDhh24miss')||to_char(P_ITEM) into l_id_periodo_vac_trab from dual; 
            insert into PLLA_PERIODO_VAC_TRAB(
              ID_PERIODO_VAC_TRAB,
              ID_PERIODO_VAC,
              ID_TRABAJADOR,
              PERIODO_INI,
              PERIODO_FIN,
              TOTAL_DIAS,
              TOTAL_DIAS_EFECT,
              ID_ESTADO_VAC_TRAB,
              DIAS_ANHO
            )values(
              l_id_periodo_vac_trab,
              P_ID_PERIODO_VAC,
              P_ID_TRABAJADOR,
              l_inicio,
              l_fin,
              0,
              0,
              '01',
              l_dias_anho
            );
          end if;
          <<salida_vactrab_ade>>
          P_ID_PERIODO_VAC_TRAB:=l_id_periodo_vac_trab;
          P_ERROR:=l_error;
          P_MSGERROR:= l_msgerror;
          
        END SP_GEN_PERIODO_VAC_TRAB_ADEL;
        
        PROCEDURE SP_GENERAR_ROL_VACACIONAL(P_ID_ROL_VACACION IN varchar2, P_ID_PERIODO_VAC_TRAB IN varchar2,P_FECHA_INI IN DATE,P_FECHA_FIN IN DATE,P_OPC IN VARCHAR2,P_ID_USER_REG IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
        IS
        l_id_rol_vacacion varchar2(30); 
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_total_dias number:=0;
        l_dias number:=0;
        l_id_periodo_vac number;
        l_minp1 number:=0;
        l_minp2 number:=0;
        l_contar1 number:=0;
        l_contar2 number:=0;
        l_diasqueda number:=0;
        l_id_tipo_suspension number;
        l_dias_anho number:=0;
        l_dias_queda number:=0;
        BEGIN
        
         if P_OPC='D' then
          delete from PLLA_ROL_VACACIONAL where ID_ROL_VACACION=P_ID_ROL_VACACION;
         else
           if P_FECHA_FIN<P_FECHA_INI then
                l_error:=1;
                l_msgerror:='Fecha fin no debe ser menor a la fecha inicio';
                GOTO salida_rol_vac;
           end if;
            
            select (P_FECHA_FIN -  P_FECHA_INI)+1 into l_dias from dual;
            
            select ID_PERIODO_VAC ,
            case when P_FECHA_INI<PERIODO_INI then 1 else 0 end,
            case when P_FECHA_FIN>PERIODO_FIN then 1 else 0 end,
            DIAS_ANHO
            into l_id_periodo_vac ,l_contar1,l_contar2,l_dias_anho
            from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB;
            
            if l_error=0 then
              if l_contar1>0 then
                  l_error:=1;
                  l_msgerror:='Fecha inicio no debe ser menor a la fecha inicial del periodo del trabajador';
                  GOTO salida_rol_vac;
              else
                if l_contar2>0 then
                    l_error:=1;
                    l_msgerror:='Fecha fin no debe ser mayor a la fecha final del periodo del trabajador';
                    GOTO salida_rol_vac;
                end if;
              end if;
            end if;
            
            if l_error=0 then
              select count(*) into  l_contar1 from PLLA_ROL_VACACIONAL 
              where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB
              and (TO_DATE(TO_CHAR(P_FECHA_INI, 'MM/DD/YYYY'), 'MM/DD/YYYY') between FECHA_INI and FECHA_FIN)
              and condicion='P'
              and ID_ROL_VACACION<>P_ID_ROL_VACACION;
              
              if l_contar1>0 then
                  l_error:=1;
                  l_msgerror:='Hay cruce con la fecha de inicio';
                  GOTO salida_rol_vac;
              end if;
              
              select count(*) into  l_contar1 from PLLA_ROL_VACACIONAL 
              where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB
              and (TO_DATE(TO_CHAR(P_FECHA_FIN, 'MM/DD/YYYY'), 'MM/DD/YYYY') between FECHA_INI and FECHA_FIN)
              and condicion='P'
              and ID_ROL_VACACION<>P_ID_ROL_VACACION;
              
              if l_contar1>0 then
                  l_error:=1;
                  l_msgerror:='Hay cruce con la fecha fin';
                  GOTO salida_rol_vac;
              end if;
            
            end if;
            
            if l_error=0 then
              select MIN_DIAS_PERIODO1, MIN_DIAS_PERIODO2 into l_minp1, l_minp2 from PLLA_PERIODO_VAC where ID_PERIODO_VAC= l_id_periodo_vac;
              
              select coalesce(sum((FECHA_fin -  FECHA_INI)+1),0) into  l_total_dias  from PLLA_ROL_VACACIONAL 
              where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB and condicion='P'
              and ID_ROL_VACACION<>P_ID_ROL_VACACION;
              
              
              if (l_total_dias+l_dias)>l_dias_anho then
                  l_error:=1;
                  l_msgerror:='Total dias no debe exceder '||to_char(l_dias_anho)||' días, actual: '||to_char(l_total_dias+l_dias);
                  GOTO salida_rol_vac;
              end if;
              
              if l_dias<l_minp1 then
                  l_error:=1;
                  l_msgerror:='En el periodo  se debe registrar como mínimo '||to_char(l_minp1)||' días';
                  GOTO salida_rol_vac;
              end if;
              l_dias_queda:= l_dias_anho - (l_total_dias + l_dias);
              
              if l_dias_queda<7 and l_dias_queda>0 then
                l_error:=1;
                l_msgerror:='No debe quedar disponible menos de 7 dias,  disponible '||to_char(l_dias_queda)||' días';
                GOTO salida_rol_vac;
              end if;
              
              /*l_dias_queda:= l_dias_anho - 7;
              --if l_total_dias>23 then
              if l_total_dias>l_dias_queda then
                --l_diasqueda:= 30 - l_total_dias;
                l_diasqueda:= l_dias_anho - l_total_dias;
                if l_diasqueda<>l_dias then
                    l_error:=1;
                    l_msgerror:='Se debe registra los dias restantes ('||to_char(l_diasqueda)||') días';
                    GOTO salida_rol_vac;
                end if;
              else
                
                if l_dias<l_minp1 then
                    l_error:=1;
                    l_msgerror:='En el periodo  se debe registrar como mínimo '||to_char(l_minp1)||' días';
                    GOTO salida_rol_vac;
                end if;
              end if;*/
              
              /*if l_total_dias>0 and l_total_dias<15 then
                if l_dias<l_minp1 then
                  l_error:=1;
                  l_msgerror:='En el periodo 1 se debe registrar como mínimo '||to_char(l_minp1)||' días';
                else
                  if (l_total_dias+l_dias)>15 then
                    l_error:=1;
                    l_msgerror:='En el periodo 1 se debe registrar como mínimo '||to_char(l_minp1)||' días';
                  end if;
                end if;
              else
                if l_total_dias = 0 then
                  if l_dias<l_minp1 then
                    l_error:=1;
                    l_msgerror:='En el periodo 1 se debe registrar como mínimo '||to_char(l_minp1)||' días';
                  
                  end if;
                else
                  if l_dias<l_minp2 then
                    l_error:=1;
                    l_msgerror:='En el periodo 2 se debe registrar como mínimo '||to_char(l_minp2)||' días';
                  end if;
                end if;
              end if;*/
            end if;
            
          
            
            if l_error=0 then
            
              select id_tipo_suspension into l_id_tipo_suspension from plla_tipo_suspension where codsunat='23';
            
              if P_OPC='I' then
              
              

                l_id_rol_vacacion:= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS');
                insert into PLLA_ROL_VACACIONAL(
                  ID_ROL_VACACION,
                  ID_PERIODO_VAC_TRAB,
                  FECHA_INI,
                  FECHA_FIN,
                  DIAS,
                  DIAS_EFECT,
                  CONDICION,
                  ID_ESTADO_ROL_VAC,
                  FECHA_REGISTRA,
                  ID_USER_REG,
                  ID_TIPO_SUSPENSION,
                  ID_TIPO_ROL_VAC
                )values(
                  l_id_rol_vacacion,
                  P_ID_PERIODO_VAC_TRAB,
                  P_FECHA_INI,
                  P_FECHA_FIN,
                  (P_FECHA_FIN -  P_FECHA_INI)+1,
                  0,
                  'P',
                  '01',
                  SYSDATE,
                  P_ID_USER_REG,
                  l_id_tipo_suspension,
                  'R'
                );
              else
                update PLLA_ROL_VACACIONAL set
                FECHA_INI=P_FECHA_INI,
                FECHA_FIN=P_FECHA_FIN,
                DIAS = (P_FECHA_FIN -  P_FECHA_INI)+1,
                FECHA_REGISTRA=SYSDATE,
                ID_USER_REG=P_ID_USER_REG
                where ID_ROL_VACACION=P_ID_ROL_VACACION;
                
                l_id_rol_vacacion:=P_ID_ROL_VACACION;
                
              end if;
             
              
              
          end if;
        end if;
         select coalesce(sum((FECHA_fin -  FECHA_INI)+1),0) into  l_total_dias  from PLLA_ROL_VACACIONAL 
          where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB and condicion='P';
          
          update PLLA_PERIODO_VAC_TRAB set
          total_dias=l_total_dias
          where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB;
            
        <<salida_rol_vac>> 
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
        END SP_GENERAR_ROL_VACACIONAL;
       
       PROCEDURE SP_GENERAR_ROL_VACACIONAL_UPN(P_ID_ROL_VACACION IN varchar2,P_ID_PARENT IN varchar2, P_ID_PERIODO_VAC_TRAB IN varchar2,P_FECHA_INI IN DATE,P_FECHA_FIN IN DATE,P_OPC IN VARCHAR2,P_ID_USER_REG IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
        IS
        l_id_rol_vacacion varchar2(30); 
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_total_dias number:=0;
        l_dias_anho number:=0;
        l_dias number:=0;
        l_id_periodo_vac number;
        l_id_trabajador number;
        l_minp1 number:=0;
        l_minp2 number:=0;
        l_contar1 number:=0;
        l_contar2 number:=0;
        l_diasqueda number:=0;
        l_id_tipo_suspension number;
       	l_id_parent varchar2(25); 
       
       	l_es_interno NUMBER:=0;
		l_id_tipo_rol_vac varchar(2):='R';
       
        BEGIN
	        
	     l_id_parent := P_ID_PARENT;
	     IF P_ID_PARENT = '' THEN 
	     	l_id_parent := NULL;
	     END IF;
        
         if P_OPC='D' THEN
        	SELECT ID_PARENT INTO l_id_parent FROM ENOC.PLLA_ROL_VACACIONAL WHERE ID_ROL_VACACION=P_ID_ROL_VACACION;
        	SELECT COUNT(*) INTO l_contar1 FROM ENOC.PLLA_ROL_VACACIONAL WHERE ID_PARENT = l_id_parent;

         	IF l_id_parent IS NOT NULL AND l_contar1 = 1 THEN 
         		l_error:=1;
                l_msgerror:='No se puede eliminar, porque existe una reprogramación que se debe completar.';
                GOTO salida_rol_vac;
         	END IF;
         
         	delete from ENOC.PLLA_ROL_VACACIONAL_HIST where ID_ROL_VACACION=P_ID_ROL_VACACION;
          	delete from ENOC.PLLA_ROL_VACACIONAL where ID_ROL_VACACION=P_ID_ROL_VACACION;
         
         else
           if P_FECHA_FIN<P_FECHA_INI then
                l_error:=1;
                l_msgerror:='Fecha fin no debe ser menor a la fecha inicio';
                GOTO salida_rol_vac;
           end if;
            
            select (P_FECHA_FIN -  P_FECHA_INI)+1 into l_dias from dual;
            
            select ID_PERIODO_VAC ,
            case when P_FECHA_INI<PERIODO_INI then 1 else 0 end,
            case when P_FECHA_FIN>PERIODO_FIN then 1 else 0 END,
            dias_anho,
            id_trabajador,
            es_interno
            into l_id_periodo_vac ,l_contar1,l_contar2,l_dias_anho,l_id_trabajador,l_es_interno
            from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB;
            
            if l_error=0 then
              if l_contar1>0 then
                  l_error:=1;
                  l_msgerror:='Fecha inicio no debe ser menor a la fecha inicial del periodo del trabajador';
                  GOTO salida_rol_vac;
              else
                if l_contar2>0 then
                    l_error:=1;
                    l_msgerror:='Fecha fin no debe ser mayor a la fecha final del periodo del trabajador';
                    GOTO salida_rol_vac;
                end if;
              end if;
            end if;
            
            if l_error=0 then
              select count(*) into  l_contar1 from PLLA_ROL_VACACIONAL 
              where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB
              and (TO_DATE(TO_CHAR(P_FECHA_INI, 'MM/DD/YYYY'), 'MM/DD/YYYY') between FECHA_INI and FECHA_FIN)
              and condicion='P'
              and ID_ROL_VACACION<>P_ID_ROL_VACACION;
              
              if l_contar1>0 then
                  l_error:=1;
                  l_msgerror:='Hay cruce con la fecha de inicio';
                  GOTO salida_rol_vac;
              end if;
              
              select count(*) into  l_contar1 from PLLA_ROL_VACACIONAL 
              where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB
              and (TO_DATE(TO_CHAR(P_FECHA_FIN, 'MM/DD/YYYY'), 'MM/DD/YYYY') between FECHA_INI and FECHA_FIN)
              and condicion='P'
              and ID_ROL_VACACION<>P_ID_ROL_VACACION;
              
              if l_contar1>0 then
                  l_error:=1;
                  l_msgerror:='Hay cruce con la fecha fin';
                  GOTO salida_rol_vac;
              end if;
            
            end if;
            
            if l_error=0 then
              select MIN_DIAS_PERIODO1, MIN_DIAS_PERIODO2 into l_minp1, l_minp2 from PLLA_PERIODO_VAC where ID_PERIODO_VAC= l_id_periodo_vac;
              
              select coalesce(sum((FECHA_fin -  FECHA_INI)+1),0) into  l_total_dias  from PLLA_ROL_VACACIONAL 
              where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB and condicion='P'
              and ID_ROL_VACACION<>P_ID_ROL_VACACION;
              
             --Contamos cuantos registros ya existen
             select count(*) into l_contar1 from PLLA_ROL_VACACIONAL 
	              where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB
	              and condicion='P'
	              and ID_ROL_VACACION<>P_ID_ROL_VACACION;
	             
              if l_total_dias>23 then
                l_diasqueda:= 30 - l_total_dias;
                if l_diasqueda<>l_dias then
                    l_error:=1;
                    l_msgerror:='Se debe registra los dias restantes ('||to_char(l_diasqueda)||') días';
                    GOTO salida_rol_vac;
                end if;
              else
                
                if l_dias<l_minp1 AND l_dias_anho >= l_minp1 AND l_contar1= 0 then
                    l_error:=1;
                    l_msgerror:='En el periodo se debe registrar como mínimo '||to_char(l_minp1)||' días';
                    GOTO salida_rol_vac;
                end if;
              end if;
             
             --Validar si el periodo inicial es mayor a 7 dias, entonces debe registrarse como minimo un sabado y un domingo
             
             IF l_minp1 >=7 AND l_dias_anho >= l_minp1 AND l_contar1 = 0 THEN 
             	SELECT COUNT(*) INTO l_contar1
				FROM (
				  SELECT P_FECHA_INI + LEVEL - 1 AS days
				  FROM DUAL
				  CONNECT BY LEVEL <= P_FECHA_FIN - P_FECHA_INI + 1
				)
				WHERE TO_CHAR(days,'D','NLS_DATE_LANGUAGE=ENGLISH') IN (7, 1);
				IF l_contar1 < 2 THEN 
					l_error:=1;
                    l_msgerror:='En el periodo inicial se debe registrar como mínimo un sábado y un domingo';
                    GOTO salida_rol_vac;
				end IF;
             END IF;
            
            IF l_total_dias + l_dias = l_dias_anho THEN 
				-- Calcular el número total de sábados
				SELECT COALESCE(sum(T.TOTAL),0) into l_contar1 FROM (SELECT 
				    TRUNC((FECHA_FIN - NEXT_DAY(FECHA_INI - 1, 7)) / 7) + 
				    CASE 
					WHEN NEXT_DAY(FECHA_INI - 1, 7) <= FECHA_FIN THEN 1 ELSE 0 END  AS TOTAL
				FROM PLLA_ROL_VACACIONAL
				where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB and condicion='P'
				and ID_ROL_VACACION<>P_ID_ROL_VACACION)T;
			 
				SELECT l_contar1 + COUNT(*) INTO l_contar1
				FROM (
				  SELECT P_FECHA_INI + LEVEL - 1 AS days
				  FROM DUAL
				  CONNECT BY LEVEL <= P_FECHA_FIN - P_FECHA_INI + 1
				)
				WHERE TO_CHAR(days,'D','NLS_DATE_LANGUAGE=ENGLISH') IN (7);
				IF l_contar1 < 4 AND l_dias_anho > 6 THEN 
					l_error:=1;
				    l_msgerror:='Dentro de los 30 dias programados debe incluir como mímino 4 sábados y 4 domingos';
				    GOTO salida_rol_vac;
				end IF; 
				IF l_contar1 < 1 AND l_dias_anho <= 6 THEN 
					l_error:=1;
				    l_msgerror:='Dentro de los 6 dias programados debe incluir como mímino 1 sábados y 1 domingos';
				    GOTO salida_rol_vac;
				end IF;
				-- Calcular el número total de domingos
				SELECT COALESCE(sum(T.TOTAL),0) into l_contar1 FROM (SELECT 
				TRUNC((FECHA_FIN - NEXT_DAY(FECHA_INI - 1, 1)) / 7) + 
				CASE 
				    WHEN NEXT_DAY(FECHA_INI - 1, 1) <= FECHA_FIN THEN 1 ELSE 0 END AS TOTAL
				FROM PLLA_ROL_VACACIONAL
				where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB and condicion='P'
				and ID_ROL_VACACION<>P_ID_ROL_VACACION)T;
			 
				SELECT l_contar1 + COUNT(*) INTO l_contar1
				FROM (
				  SELECT P_FECHA_INI + LEVEL - 1 AS days
				  FROM DUAL
				  CONNECT BY LEVEL <= P_FECHA_FIN - P_FECHA_INI + 1
				)
				WHERE TO_CHAR(days,'D','NLS_DATE_LANGUAGE=ENGLISH') IN (1);
				IF l_contar1 < 4 AND l_dias_anho > 6 THEN 
					l_error:=1;
				    l_msgerror:='Dentro de los 30 dias programados debe incluir como mímino 4 sábados y 4 domingos';
			        GOTO salida_rol_vac;
				end IF;
				IF l_contar1 < 1 AND l_dias_anho <= 6 THEN 
					l_error:=1;
				    l_msgerror:='Dentro de los 6 dias programados debe incluir como mímino 1 sábados y 1 domingos';
			        GOTO salida_rol_vac;
				end IF;
			END IF;
              
              /*if l_total_dias>0 and l_total_dias<15 then
                if l_dias<l_minp1 then
                  l_error:=1;
                  l_msgerror:='En el periodo 1 se debe registrar como mínimo '||to_char(l_minp1)||' días';
                else
                  if (l_total_dias+l_dias)>15 then
                    l_error:=1;
                    l_msgerror:='En el periodo 1 se debe registrar como mínimo '||to_char(l_minp1)||' días';
                  end if;
                end if;
              else
                if l_total_dias = 0 then
                  if l_dias<l_minp1 then
                    l_error:=1;
                    l_msgerror:='En el periodo 1 se debe registrar como mínimo '||to_char(l_minp1)||' días';
                  
                  end if;
                else
                  if l_dias<l_minp2 then
                    l_error:=1;
                    l_msgerror:='En el periodo 2 se debe registrar como mínimo '||to_char(l_minp2)||' días';
                  end if;
                end if;
              end if;*/
            end if;
            
            if l_error=0 then
              if (l_total_dias+l_dias)>30 then
                  l_error:=1;
                  l_msgerror:='Total dias no debe exceder 30 días, actual: '||to_char(l_total_dias+l_dias);
                  GOTO salida_rol_vac;
              end if;
            end if;
           
           	--Validar si no existen permisos dentro de un tramo de vacaciones
           	select count(*) into l_contar1 from ENOC.PLLA_LICENCIA_PERMISO plp  
            where ID_TRABAJADOR = l_id_trabajador
            AND ID_ESTADO_LICA_PER = '03'
            AND ((P_FECHA_INI >=FECHA_DESDE AND P_FECHA_INI <=FECHA_HASTA)
           	OR (P_FECHA_FIN >=FECHA_DESDE AND P_FECHA_FIN <=FECHA_HASTA));
           
           	IF l_contar1 > 0 THEN 
           		l_error:=1;
	            l_msgerror:='Existe un(a) permiso/licencia aprobado que hace un cruce con este periodo.';
	            GOTO salida_rol_vac;
           	END IF;
            
            if l_error=0 then
            
              select id_tipo_suspension into l_id_tipo_suspension from plla_tipo_suspension where codsunat='23';
            
              if P_OPC='I' then
              
                l_id_rol_vacacion:= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || LPAD(TO_CHAR(ENOC.PLLA_ROL_VACACIONAL_ITEM_PK.NEXTVAL), 6, '0');
                
               IF l_es_interno = 1 THEN 
               	l_id_tipo_rol_vac :='I';
               END IF;
               insert into PLLA_ROL_VACACIONAL(
                  ID_ROL_VACACION,
                  ID_PERIODO_VAC_TRAB,
                  FECHA_INI,
                  FECHA_FIN,
                  DIAS,
                  DIAS_EFECT,
                  CONDICION,
                  ID_ESTADO_ROL_VAC,
                  FECHA_REGISTRA,
                  ID_USER_REG,
                  ID_TIPO_SUSPENSION,
                  ID_TIPO_ROL_VAC,
                  ID_PARENT
                )values(
                  l_id_rol_vacacion,
                  P_ID_PERIODO_VAC_TRAB,
                  P_FECHA_INI,
                  P_FECHA_FIN,
                  (P_FECHA_FIN -  P_FECHA_INI)+1,
                  0,
                  'P',
                  '01',
                  SYSDATE,
                  P_ID_USER_REG,
                  l_id_tipo_suspension,
                  l_id_tipo_rol_vac,
                  l_id_parent
                );
              else
                update PLLA_ROL_VACACIONAL set
                FECHA_INI=P_FECHA_INI,
                FECHA_FIN=P_FECHA_FIN,
                DIAS = (P_FECHA_FIN -  P_FECHA_INI)+1,
                FECHA_REGISTRA=SYSDATE,
                ID_USER_REG=P_ID_USER_REG
                where ID_ROL_VACACION=P_ID_ROL_VACACION;
                
                l_id_rol_vacacion:=P_ID_ROL_VACACION;
                
              end if;
             
            --Agregamos en la tabla historial
         	BEGIN
              ENOC.PKG_BENEFITS.SP_GENERAR_ROL_VACACIONAL_HIST(P_ID_PERIODO_VAC_TRAB,l_error,l_msgerror);
            END; 
              
          end if;
        end if;
         select coalesce(sum((FECHA_fin -  FECHA_INI)+1),0) into  l_total_dias  from PLLA_ROL_VACACIONAL 
          where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB and condicion='P';
          
          update PLLA_PERIODO_VAC_TRAB set
          total_dias=l_total_dias
          where ID_PERIODO_VAC_TRAB=P_ID_PERIODO_VAC_TRAB;
            
        <<salida_rol_vac>> 
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
        END SP_GENERAR_ROL_VACACIONAL_UPN;
       
       --Creado por la UPN
       PROCEDURE SP_GENERAR_ROL_VACACIONAL_HIST(P_ID_PERIODO_VAC_TRAB IN varchar2,P_ERROR OUT number,P_MSGERROR out varchar2)
        IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
       
        l_grupo number;
        l_total_dias number:=0;
        l_dias_anho number:=0;
       	l_dias_reg number:=0;
        l_dias number:=0;
        BEGIN
        
	    	--Verificamos si hay un grupo incompleto, para tomar eso
		    SELECT max(GRUPO) INTO l_grupo FROM (SELECT c.ID_PERIODO_VAC_TRAB,c.DIAS_ANHO,a.GRUPO
			FROM ENOC.PLLA_ROL_VACACIONAL_HIST a 
			INNER JOIN ENOC.PLLA_ROL_VACACIONAL b ON a.ID_ROL_VACACION = b.ID_ROL_VACACION 
			INNER JOIN ENOC.PLLA_PERIODO_VAC_TRAB c ON b.ID_PERIODO_VAC_TRAB = c.ID_PERIODO_VAC_TRAB 
			WHERE c.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
			GROUP BY c.ID_PERIODO_VAC_TRAB,c.DIAS_ANHO,a.GRUPO
			HAVING c.DIAS_ANHO!=sum(b.DIAS));
			
			--Validamos si es null y tomamos el maximo mas uno grupo
			IF l_grupo IS NULL THEN 
				SELECT COALESCE(max(a.GRUPO),0)+1 INTO l_grupo
				FROM ENOC.PLLA_ROL_VACACIONAL_HIST a 
				INNER JOIN ENOC.PLLA_ROL_VACACIONAL b ON a.ID_ROL_VACACION = b.ID_ROL_VACACION 
				WHERE b.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
			END IF;
			
			--Obtenemos algunos datos del periodo vac trab
		
			SELECT DIAS_ANHO,TOTAL_DIAS INTO l_dias_anho,l_total_dias FROM ENOC.PLLA_PERIODO_VAC_TRAB ppvt 
			WHERE ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
		
			--obtenemos cuanto ya fue registrado en hist
			SELECT COALESCE(sum(b.DIAS),0) INTO l_dias_reg
			FROM ENOC.PLLA_ROL_VACACIONAL_HIST a 
			INNER JOIN ENOC.PLLA_ROL_VACACIONAL b ON a.ID_ROL_VACACION = b.ID_ROL_VACACION 
			WHERE b.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
			AND a.GRUPO = l_grupo;
			
		
			--registramos si los que aun no fueron registrados en _hist
		
			SELECT l_dias_reg + COALESCE(SUM(a.DIAS),0) INTO l_dias FROM ENOC.PLLA_ROL_VACACIONAL a
			WHERE NOT EXISTS (
				SELECT 1 FROM ENOC.PLLA_ROL_VACACIONAL_HIST x WHERE x.ID_ROL_VACACION = a.ID_ROL_VACACION 
			)
			AND a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
		
			IF l_dias <= l_dias_anho THEN
				INSERT INTO ENOC.PLLA_ROL_VACACIONAL_HIST
				SELECT a.ID_ROL_VACACION,l_grupo AS grupo FROM ENOC.PLLA_ROL_VACACIONAL a
				WHERE NOT EXISTS (
					SELECT 1 FROM ENOC.PLLA_ROL_VACACIONAL_HIST x WHERE x.ID_ROL_VACACION = a.ID_ROL_VACACION 
				)
				AND a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
			ELSIF l_dias > l_dias_anho THEN
				INSERT INTO ENOC.PLLA_ROL_VACACIONAL_HIST
				SELECT a.ID_ROL_VACACION,l_grupo AS grupo FROM ENOC.PLLA_ROL_VACACIONAL a
				WHERE NOT EXISTS (
					SELECT 1 FROM ENOC.PLLA_ROL_VACACIONAL_HIST x WHERE x.ID_ROL_VACACION = a.ID_ROL_VACACION 
				)
				AND a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
				AND a.ID_PARENT IS NULL;
				--Sumamos mas 1, y agregamos el siguiente grupo
				l_grupo := l_grupo +1;
			
				INSERT INTO ENOC.PLLA_ROL_VACACIONAL_HIST
				SELECT a.ID_ROL_VACACION,l_grupo AS grupo FROM ENOC.PLLA_ROL_VACACIONAL a
				WHERE a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
				AND a.CONDICION = 'P';
				
			END IF;
		
        <<salida_rol_vac>> 
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
        END SP_GENERAR_ROL_VACACIONAL_HIST;
        
        
        PROCEDURE SP_GENERAR_VAC_ADELANTO(P_ID_PERIODO_VAC IN NUMBER, P_ID_SOL_VAC_ADEL_DET IN NUMBER,P_ID_TRABAJADOR NUMBER,P_FECHA_INI IN DATE,P_FECHA_FIN IN DATE,P_ID_USER_REG IN NUMBER,P_ITEM IN NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
        IS
        l_id_rol_vacacion varchar2(30); 
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_total_dias number:=0;
        l_dias number:=0;
        l_id_periodo_vac number;
        l_minp1 number:=0;
        l_minp2 number:=0;
        l_contar1 number:=0;
        l_contar2 number:=0;
        l_diasqueda number:=0;
        l_id_tipo_suspension number;

        l_id_periodo_vac_trab varchar2(25);
        l_dias_anho number:=0;
        BEGIN

           if P_FECHA_FIN<P_FECHA_INI then
                l_error:=1;
                l_msgerror:='Fecha fin no debe ser menor a la fecha inicio';
                GOTO salida_gen_vac_ade;
           end if;
            
            select (P_FECHA_FIN -  P_FECHA_INI)+1 into l_dias from dual;
            
            PKG_BENEFITS.SP_GEN_PERIODO_VAC_TRAB_ADEL(P_ID_TRABAJADOR, P_ID_PERIODO_VAC,1,l_id_periodo_vac_trab, l_error,l_msgerror);
            
            IF l_error<>0 THEN
              GOTO salida_gen_vac_ade;
            END IF;
 
            select count(*) into  l_contar1 from ENOC.VW_ROL_VACACIONAL 
            where ID_TRABAJADOR = P_ID_TRABAJADOR
            and (TO_DATE(TO_CHAR(P_FECHA_INI, 'MM/DD/YYYY'), 'MM/DD/YYYY') between FECHA_INI and FECHA_FIN)
            and condicion='P';
            
            if l_contar1>0 then
                l_error:=1;
                l_msgerror:='Hay cruce con la fecha de inicio';
                GOTO salida_gen_vac_ade;
            end if;
            
            
            select count(*) into  l_contar1 from ENOC.VW_ROL_VACACIONAL 
            where ID_TRABAJADOR = P_ID_TRABAJADOR
            and (TO_DATE(TO_CHAR(P_FECHA_FIN, 'MM/DD/YYYY'), 'MM/DD/YYYY') between FECHA_INI and FECHA_FIN)
            and condicion='P';
            
            if l_contar1>0 then
                l_error:=1;
                l_msgerror:='Hay cruce con la fecha fin';
                GOTO salida_gen_vac_ade;
            end if;
            

            select MIN_DIAS_PERIODO1, MIN_DIAS_PERIODO2 into l_minp1, l_minp2 from PLLA_PERIODO_VAC where ID_PERIODO_VAC= P_ID_PERIODO_VAC;
            
            select coalesce(sum((FECHA_fin -  FECHA_INI)+1),0) into  l_total_dias  from PLLA_ROL_VACACIONAL 
            where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab and condicion='P';
            
            select  DIAS_ANHO  into l_dias_anho  from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab;
            
            if l_total_dias>23 then
              l_diasqueda:= 30 - l_total_dias;
              /*if l_diasqueda<>l_dias then
                  l_error:=1;
                  l_msgerror:='Se debe registra los dias restantes ('||to_char(l_diasqueda)||') días';
                  GOTO salida_gen_vac_ade;
              end if;*/
            else
              
              if l_dias<l_minp1 then
                  l_error:=0;
                 -- l_msgerror:='En el periodo  se debe registrar como mínimo '||to_char(l_minp1)||' días';
                  --GOTO salida_gen_vac_ade;
              end if;
            end if;
              
            
            
            
            --if (l_total_dias+l_dias)>30 then
            if (l_total_dias+l_dias)>l_dias_anho then
                l_error:=1;
                l_msgerror:='Total dias no debe exceder '||l_dias_anho||', actual: '||to_char(l_total_dias+l_dias);
                GOTO salida_gen_vac_ade;
            end if;
            
            
           
            
            select id_tipo_suspension into l_id_tipo_suspension from plla_tipo_suspension where codsunat='23';
          
    
              l_id_rol_vacacion:= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')||to_char(P_ITEM);
              insert into PLLA_ROL_VACACIONAL(
                ID_ROL_VACACION,
                ID_PERIODO_VAC_TRAB,
                FECHA_INI,
                FECHA_FIN,
                DIAS,
                DIAS_EFECT,
                CONDICION,
                ID_ESTADO_ROL_VAC,
                FECHA_REGISTRA,
                ID_USER_REG,
                ID_TIPO_SUSPENSION,
                ID_TIPO_ROL_VAC,
                ID_SOL_VAC_ADEL_DET
              )values(
                l_id_rol_vacacion,
                l_id_periodo_vac_trab,
                P_FECHA_INI,
                P_FECHA_FIN,
                (P_FECHA_FIN -  P_FECHA_INI)+1,
                0,
                'P',
                '01',
                SYSDATE,
                P_ID_USER_REG,
                l_id_tipo_suspension,
                'A',
                P_ID_SOL_VAC_ADEL_DET
              );
           
          
          
          select coalesce(sum((FECHA_fin -  FECHA_INI)+1),0) into  l_total_dias  from PLLA_ROL_VACACIONAL 
          where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab and  condicion='P';
          
          update PLLA_PERIODO_VAC_TRAB set
          total_dias=l_total_dias
          where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab;
         
         <<salida_gen_vac_ade>>
       
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
        END SP_GENERAR_VAC_ADELANTO;
        
        
       
       PROCEDURE SP_GENERAR_REP_VACACIONAL(P_ID_ROL_VACACION_REP IN varchar2,P_ID_ROL_VACACION IN long, P_FECHA_INI IN long,P_FECHA_FIN IN long,P_MOTIVO_REPRO IN long, P_OPC IN long,P_ID_USER_REG IN NUMBER,P_GTH varchar2,P_ERROR OUT number,P_MSGERROR out varchar2) is
        l_fecha_ini date;
        l_fecha_ini_rep date;
        l_fecha_fin date;
        l_contar integer;
        l_dias integer;
        l_rdias integer:=0;
        l_trdias integer:=0;
        l_id_periodo_vac_trab varchar2(30);
        l_id_rol_vacacion varchar2(30);
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_minp1 number:=0;
        l_minp2 number:=0;
        l_contar1 integer;
        l_contar2 integer;
        l_opc varchar(2);
        l_total_dias integer:=0;
        l_id_periodo_vac integer;
        
        l_1 number; 
        l_2 number;
        l_3 number;
        l_4 number;
        l_5 number;
        l_x number:=1;
        l_esta number:=0;
        l_dias_efec number:=0;
        l_motivo_repro varchar2(200);
        
        l_id_tipo_rol_vac varchar2(2);
        
         PP_ID_ROL_VACACION long:=P_ID_ROL_VACACION||'*';
         PP_FECHA_INI  long:=P_FECHA_INI ||'*';
         PP_FECHA_FIN long:=P_FECHA_FIN||'*';
         PP_OPC long:=P_OPC||'*';
         PP_MOTIVO_REPRO long:=P_MOTIVO_REPRO||'*';
   
        begin
        
          select  ID_PERIODO_VAC_TRAB,(FECHA_fin -  FECHA_INI)+1,FECHA_INI,coalesce(DIAS_EFECT,0) into  l_id_periodo_vac_trab,l_dias,l_fecha_ini_rep,l_dias_efec from PLLA_ROL_VACACIONAL where ID_ROL_VACACION=P_ID_ROL_VACACION_REP;
          
          if CURRENT_DATE > (l_fecha_ini_rep +1) then
              l_error:=1;
              l_msgerror:='No se puede reprogramar, la fecha actual es mayor a fecha inicio';
          else
            if l_dias_efec>0 then
              l_error:=1;
              l_msgerror:='Ya se ha generado días afectivas';
            end if;
          end if;
          
          if l_error=0 then
          
            select ID_PERIODO_VAC  into l_id_periodo_vac 
            from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab;
            
            select MIN_DIAS_PERIODO1, MIN_DIAS_PERIODO2 into l_minp1, l_minp2 from PLLA_PERIODO_VAC where ID_PERIODO_VAC= l_id_periodo_vac;
             
            
            
            loop
              l_1 := instr(PP_ID_ROL_VACACION, '*' );
              l_2 := instr(PP_FECHA_INI, '*' );
              l_3 := instr(PP_FECHA_FIN, '*');
              exit when nvl(l_1,0) = 0;
              
              
                  select cast(substr(PP_FECHA_INI,1, l_2-1) as date),cast(substr(PP_FECHA_FIN,1, l_3-1) as date) into l_fecha_ini, l_fecha_fin from dual;
                  
                  select
                  case when l_fecha_ini<PERIODO_INI then 1 else 0 end,
                  case when l_fecha_fin>PERIODO_FIN then 1 else 0 end
                  into l_contar1,l_contar2
                  from PLLA_PERIODO_VAC_TRAB where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab;
                  
                  if l_contar1>0 then
                      l_error:=1;
                      l_msgerror:='Fecha inicio no debe ser menor a la fecha inicial del periodo del trabjador';
                      Exit when l_contar1>0;
                  else
                    if l_contar2>0 then
                        l_error:=1;
                        l_msgerror:='Fecha fin no debe ser mayor a la fecha final del periodo del trabjador';
                        Exit when l_contar2>0;
                    end if;
                  end if;
                  select (l_fecha_fin -  l_fecha_ini)+1 into l_rdias from dual;
                  if P_GTH='S' then
                    l_minp1:=1;
                  end if;
                  if l_rdias<l_minp1 then
                      l_error:=1;
                      l_msgerror:='En el periodo  se debe registrar como mínimo '||to_char(l_minp1)||' días';
                      Exit when l_rdias<l_minp1;
                  end if;
                  
                  select count(*) into  l_contar1 from PLLA_ROL_VACACIONAL 
                  where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab
                  and (TO_DATE(TO_CHAR(l_fecha_ini, 'MM/DD/YYYY'), 'MM/DD/YYYY') between FECHA_INI and FECHA_fin)
                  and ID_ROL_VACACION not in(trim(substr(PP_ID_ROL_VACACION,1, l_1-1)),P_ID_ROL_VACACION_REP);
                  
                  if l_contar1>0 then
                      l_error:=1;
                      l_msgerror:='Fecha inicio debe inciar despues de la fecha termino del registro anterior';
                      Exit when l_contar1>0;
                  end if;
                  
                        
                  if CURRENT_DATE> (l_fecha_ini +1) then
                      l_error:=1;
                      l_msgerror:='Fecha inicio  debe ser mayor a fecha actual';
                      Exit when l_fecha_ini>CURRENT_DATE;
                  end if;
  
                  l_trdias:=l_trdias + l_rdias;
                  
                  PP_ID_ROL_VACACION := substr(PP_ID_ROL_VACACION, l_1+1 ); 
                  PP_FECHA_INI := substr(PP_FECHA_INI, l_2+1 ); 
                  PP_FECHA_FIN := substr(PP_FECHA_FIN, l_3+1 );
                  
     
              END LOOP;
          end if;
          
          if l_error=0 then
            if l_trdias<>l_dias then
              l_error:=1;
              l_msgerror:='Total días son diferentes entre programado y reprogramado';
            end if;
          end if;
          PP_ID_ROL_VACACION :=P_ID_ROL_VACACION||'*';
          PP_FECHA_INI  :=P_FECHA_INI||'*';
          PP_FECHA_FIN :=P_FECHA_FIN||'*';
          PP_MOTIVO_REPRO :=P_MOTIVO_REPRO||'*';
          
          if l_error=0 then
          
              delete from PLLA_ROL_VACACIONAL where ID_PARENT = P_ID_ROL_VACACION_REP;
              
              select ID_TIPO_ROL_VAC into l_id_tipo_rol_vac from PLLA_ROL_VACACIONAL where ID_ROL_VACACION=P_ID_ROL_VACACION_REP;
             
              LOOP
                l_1 := instr(PP_ID_ROL_VACACION, '*' );
                l_2 := instr(PP_FECHA_INI, '*' );
                l_3 := instr(PP_FECHA_FIN, '*');
                l_4 := instr(PP_OPC, '*');
                l_4 := instr(PP_OPC, '*');
                l_5 := instr(PP_MOTIVO_REPRO, '*');
                exit when nvl(l_1,0) = 0;
                l_opc := 'I';--trim(substr(PP_OPC,1, l_4-1)); 
                
                select cast(substr(PP_FECHA_INI,1, l_2-1) as date),cast(substr(PP_FECHA_FIN,1, l_3-1) as date),substr(PP_MOTIVO_REPRO,1, l_5-1) into l_fecha_ini, l_fecha_fin,l_motivo_repro from dual;
                if l_fecha_ini is not null then
                  if l_opc='I' then
                    l_id_rol_vacacion:= TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')||to_char(l_x);
                    
                    
                    insert into PLLA_ROL_VACACIONAL(
                      ID_ROL_VACACION,
                      ID_PERIODO_VAC_TRAB,
                      FECHA_INI,
                      FECHA_FIN,
                      DIAS,
                      DIAS_EFECT,
                      CONDICION,
                      ID_ESTADO_ROL_VAC,
                      FECHA_REGISTRA,
                      ID_USER_REG,
                      ID_PARENT,
                      MOTIVO_REPRO,
                      ID_TIPO_ROL_VAC
                    )values(
                      l_id_rol_vacacion,
                      l_id_periodo_vac_trab,
                      l_fecha_ini,
                      l_fecha_fin,
                      (l_fecha_fin -  l_fecha_ini)+1,
                      0,
                      'P',
                      '01',
                      SYSDATE,
                      P_ID_USER_REG,
                      P_ID_ROL_VACACION_REP,
                      l_motivo_repro,
                      l_id_tipo_rol_vac
                    );
                    l_x:=l_x + 1;
                  else
                    update PLLA_ROL_VACACIONAL set
                    FECHA_INI=l_fecha_ini,
                    FECHA_FIN=l_fecha_fin,
                    DIAS = (l_fecha_fin -  l_fecha_ini)+1,
                    MOTIVO_REPRO=l_motivo_repro,
                    FECHA_REGISTRA=SYSDATE,
                    ID_USER_REG=P_ID_USER_REG
                    where ID_ROL_VACACION=trim(substr(PP_ID_ROL_VACACION,1, l_1-1));
  
                  end if;
                  l_esta:= l_esta + 1;
                 end if;
                 PP_ID_ROL_VACACION := substr(PP_ID_ROL_VACACION, l_1+1 ); 
                 PP_FECHA_INI := substr(PP_FECHA_INI, l_2+1 ); 
                 PP_FECHA_FIN := substr(PP_FECHA_FIN, l_3+1 );
                 PP_OPC := substr(PP_OPC, l_4+1 ); 
                 PP_MOTIVO_REPRO := substr(PP_MOTIVO_REPRO, l_5+1 ); 
                 
              END LOOP;
              
              if l_esta>0 then
                update PLLA_ROL_VACACIONAL set
                CONDICION='R'
                where ID_ROL_VACACION=P_ID_ROL_VACACION_REP;
              else
                update PLLA_ROL_VACACIONAL set
                CONDICION='P'
                where ID_ROL_VACACION=P_ID_ROL_VACACION_REP;
              end if;
              
              select coalesce(sum((FECHA_fin -  FECHA_INI)+1),0) into  l_total_dias  from PLLA_ROL_VACACIONAL 
              where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab
              and CONDICION = 'P';
              
              update PLLA_PERIODO_VAC_TRAB set
              total_dias=l_total_dias
              where ID_PERIODO_VAC_TRAB=l_id_periodo_vac_trab;

          end if;  
          
          P_ERROR:=l_error;
          P_MSGERROR:= l_msgerror;
          
        end SP_GENERAR_REP_VACACIONAL;
        
        PROCEDURE SP_REGISTRAR_LICENCIA_PERMISO(
        P_ID_CONCEPTO_PERM_LIC NUMBER, 	P_ID_ENTIDAD NUMBER, 
        P_ID_DEPTO VARCHAR2, P_ID_AREA NUMBER, 
        P_ID_TRABAJADOR NUMBER, P_PERIODO VARCHAR2, 
        P_MOTIVO VARCHAR2,	P_FECHA_DESDE DATE, 
	      P_FECHA_HASTA DATE, P_ID_TIPO_INST_ATENCION NUMBER,
        P_NOMBRE_INST VARCHAR2,P_CODIGOCITT VARCHAR2,
        P_CODIGONIT VARCHAR2,"P_CODIGOVIVA" VARCHAR2,
        P_ID_USER_REG	NUMBER, P_ID_TRABAJADOR_GRUPO VARCHAR2,
        P_AMBIENTE VARCHAR2,P_ERROR OUT number,--P_AMBIENTE  A: administracion, P:Portal
        P_MSGERROR out varchar2, P_ID_LICENCIA_PERMISO_NEW OUT	NUMBER
        ) 
        is
          l_error number:=0;
          l_msgerror varchar2(200):='';
          l_id_licencia_permiso number;
          l_contar number;
          l_dias number:=0;
          l_horas number:=0;
          l_id_licencia_permiso_estado number;
          PP_ID_TRABAJADOR long:=P_ID_TRABAJADOR_GRUPO||'*';
          l_1 number;
          l_id_licencia_permiso_det number;
          l_id_trabajador number;
          l_id_area number;
          l_engrupo varchar2(5);
          l_min_dias number;
          l_max_dias number;
          l_max_dias_anho number;
          l_dias_max number;
          l_codigo varchar2(10);
          l_dias_desmed number:=0;
          l_fecha_fin_desmed date;
          l_dias_subs number:=0;
          l_fecha_ini_subs date;
          l_fecha_fin_subs date;
          l_s number;
        BEGIN
        
        SELECT 
        coalesce(ENGRUPO,'N'),
        coalesce(MIN_DIAS,0),
        coalesce(MAX_DIAS,0),
        coalesce(MAX_DIAS_ANHO,0),
        CODIGO
        INTO 
        l_engrupo,
        l_min_dias,
        l_max_dias,
        l_max_dias_anho,
        l_codigo
        FROM PLLA_CONCEPTO_PERM_LIC 
        WHERE ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC;
        
        
        if l_engrupo = 'N' then
        
          select count(*) into l_contar from PLLA_LICENCIA_PERMISO
          where ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC
          and ID_ESTADO_LICA_PER in('01','02')
          and ID_TRABAJADOR = P_ID_TRABAJADOR;
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay solicitudes pendientes de aprobación por jefe de Área ó DTH';
              GOTO salida_final;
          end if; 
          
        end if;
        
 
   
        if P_FECHA_HASTA < P_FECHA_DESDE then
          l_error:=1;
          l_msgerror:='Fecha hasta es menor que fecha desde';
           GOTO salida_final;
        end if;
        
        --vacacion
        
        select count(*) into  l_contar from ENOC.VW_ROL_VACACIONAL
        where ID_TRABAJADOR=P_ID_TRABAJADOR
        and (TO_DATE(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY'), 'MM/DD/YYYY') between TO_DATE(TO_CHAR(FECHA_INI, 'MM/DD/YYYY'), 'MM/DD/YYYY') and TO_DATE(TO_CHAR(FECHA_FIN, 'MM/DD/YYYY'), 'MM/DD/YYYY'))
        AND CONDICION ='P';
        
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Hay cruce con vacaciones';
            GOTO salida_final;
        end if;
        
        select count(*) into  l_contar from ENOC.VW_ROL_VACACIONAL
        where ID_TRABAJADOR=P_ID_TRABAJADOR
        and (TO_DATE(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY'), 'MM/DD/YYYY') between TO_DATE(TO_CHAR(FECHA_INI, 'MM/DD/YYYY'), 'MM/DD/YYYY') and TO_DATE(TO_CHAR(FECHA_FIN, 'MM/DD/YYYY'), 'MM/DD/YYYY'))
        AND CONDICION ='P';
        
        
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Hay cruce con vacaciones';
            GOTO salida_final;
        end if;
        
        --fin vacacion
        
        if P_PERIODO='D' then
          select count(*) into  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (TO_DATE(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY'), 'MM/DD/YYYY') between TO_DATE(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'), 'MM/DD/YYYY') and TO_DATE(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'), 'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN('00','04');
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha desde';
              GOTO salida_final;
          end if;
          
          select count(*) into  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (TO_DATE(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY'), 'MM/DD/YYYY') between TO_DATE(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'), 'MM/DD/YYYY') and TO_DATE(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'), 'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN('00','04');
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha hasta';
              GOTO salida_final;
          end if;
        else
           --agregado para validar
          select count(*) into  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (TO_DATE(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY'), 'MM/DD/YYYY') between TO_DATE(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'), 'MM/DD/YYYY') and TO_DATE(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'), 'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN('00','04')
          AND PERIODO='D';
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha desde';
              GOTO salida_final;
          end if;
          
          select count(*) into  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (TO_DATE(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY'), 'MM/DD/YYYY') between TO_DATE(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'), 'MM/DD/YYYY') and TO_DATE(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'), 'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN('00','04')
          AND PERIODO='D';
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha hasta';
              GOTO salida_final;
          end if;
          --fin validar
          select count(*) into  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (TO_DATE(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS') between FECHA_DESDE and FECHA_HASTA)
          AND ID_ESTADO_LICA_PER NOT IN('00','04');
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la hora desde';
              GOTO salida_final;
          end if;
          
          select count(*) into  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (TO_DATE(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY HH24:MI:SS'), 'MM/DD/YYYY HH24:MI:SS') between FECHA_DESDE and FECHA_HASTA)
          AND ID_ESTADO_LICA_PER NOT IN('00','04');
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la hora hasta';
              GOTO salida_final;
          end if;
        end if;      
        
        if P_PERIODO='D' then
          select  (P_FECHA_HASTA -  P_FECHA_DESDE)+1 into  l_dias from dual;
        else
          select round((P_FECHA_HASTA -  P_FECHA_DESDE)*24,2) into l_horas from dual;
          l_dias:=1;
          if l_horas = 0 then
            l_error:=1;
            l_msgerror:='Cantidad de horas es igual a 0(cero) ';
            GOTO salida_final;
          end if;
        end if;
        
        
        if l_min_dias>0 then
          if l_dias<l_min_dias then
            l_error:=1;
            l_msgerror:='Mínimo de días a registrar es  '||to_char(l_min_dias);
            GOTO salida_final;
          end if;
        end if;
        
        if l_max_dias>0 then
          if l_dias>l_max_dias then
            l_error:=1;
            l_msgerror:='Máximo de días a registrar es  '||to_char(l_max_dias);
            GOTO salida_final;
          end if;
        end if;
        
        if l_max_dias_anho>0 AND  l_codigo <> 'DESC_MED' then
        
          IF l_codigo IN('PERM_SGOCE','PERM_COMP') THEN
            select COALESCE(SUM(A.CANTIDAD),0) INTO l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P,PLLA_CONCEPTO_PERM_LIC C  
            WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
            AND P.ID_CONCEPTO_PERM_LIC=C.ID_CONCEPTO_PERM_LIC
            AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
            AND P.ID_ENTIDAD = P_ID_ENTIDAD
            AND C.CODIGO IN('PERM_SGOCE','PERM_COMP')
            AND A.ID_ANHO = TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY'))
            AND P.ID_ESTADO_LICA_PER NOT IN('00','04');
            
            if P_AMBIENTE='P' then
             if (l_dias_max+l_dias)>l_max_dias_anho then
              l_error:=1;
              l_msgerror:='Máximo de días a registrar por año es  '||to_char(l_max_dias_anho);
              GOTO salida_final;
            end if;
           end if;
          ELSE
            select COALESCE(SUM(A.CANTIDAD),0) INTO l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P  
            WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
            AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
            AND P.ID_ENTIDAD = P_ID_ENTIDAD
            AND P.ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC
            AND A.ID_ANHO = TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY'))
            AND P.ID_ESTADO_LICA_PER NOT IN('00','04');
            
            if (l_dias_max+l_dias)>l_max_dias_anho then
              l_error:=1;
              l_msgerror:='Máximo de días a registrar por año es  '||to_char(l_max_dias_anho);
              GOTO salida_final;
            end if;
          
          END IF;
          
          
        end if;
        
       IF l_codigo = 'DESC_MED' THEN
          select COALESCE(SUM(A.CANTIDAD),0) INTO l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P  
          WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
          AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
          AND P.ID_ENTIDAD = P_ID_ENTIDAD
          AND P.ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC
          AND A.ID_ANHO = TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY'))
          AND P.ID_ESTADO_LICA_PER NOT IN('00','04');
          
          IF (l_dias_max+l_dias)>l_max_dias_anho THEN
            
              l_s := (l_dias_max+l_dias) - l_max_dias_anho;
              l_dias_desmed:= l_dias - l_s;
              l_dias_subs:= l_s;
              
              if l_dias_desmed<0 then
                l_dias_desmed:= 0;
                l_dias_subs:= l_dias;
              end if;
              
              l_fecha_ini_subs:= P_FECHA_DESDE+l_dias_desmed;
              l_fecha_fin_subs:= P_FECHA_HASTA;
              
              if l_dias_desmed>0 then
               l_fecha_fin_desmed:=P_FECHA_HASTA - l_dias_subs;
              end if;
              
          ELSE
              l_dias_desmed:= l_dias;
              l_dias_subs:= 0;
              l_fecha_fin_desmed:=P_FECHA_HASTA;
  
          END IF;
            
         

       END IF;
        
            
  
         select COALESCE(MAX(ID_LICENCIA_PERMISO),0) +1 INTO   l_id_licencia_permiso from PLLA_LICENCIA_PERMISO;
         
          
         INSERT INTO PLLA_LICENCIA_PERMISO(
            ID_LICENCIA_PERMISO,
            ID_CONCEPTO_PERM_LIC,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_AREA,
            ID_TRABAJADOR,
            PERIODO,
            MOTIVO,
            FECHA_DESDE,
            FECHA_HASTA,
            DIAS,
            HORAS,
            ID_USER_REG,
            FECHA_REG,
            ID_ESTADO_LICA_PER,
            ID_TIPO_INST_ATENCION,
            NOMBRE_INST,
            CODIGOCITT,
            CODIGONIT,
            CODIGOVIVA,
            DIAS_DESMED,
            FECHA_FIN_DESMED,
            DIAS_SUBS,
            FECHA_INI_SUBS,
            FECHA_FIN_SUBS
         )VALUES(
            l_id_licencia_permiso,
            P_ID_CONCEPTO_PERM_LIC,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_AREA,
            case when l_engrupo='N' then P_ID_TRABAJADOR else null end,
            P_PERIODO,
            P_MOTIVO,
            P_FECHA_DESDE,
            P_FECHA_HASTA,
            l_dias,
            l_horas,
            P_ID_USER_REG,
            sysdate,
            '01',
            case when P_ID_TIPO_INST_ATENCION=0 then null else P_ID_TIPO_INST_ATENCION end,
            P_NOMBRE_INST,
            P_CODIGOCITT,
            P_CODIGONIT,
            P_CODIGOVIVA,
            l_dias_desmed,
            l_fecha_fin_desmed,
            l_dias_subs,
            l_fecha_ini_subs,
            l_fecha_fin_subs
         );
         
        
         --CANTIDAD DIAS POR AÑO
         
          IF l_max_dias_anho>0 THEN
          
            IF TO_CHAR(P_FECHA_DESDE,'YYYY') = TO_CHAR(P_FECHA_HASTA,'YYYY') THEN
              INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
              ID_LICENCIA_PERMISO,
              ID_ANHO,
              CANTIDAD,
              ID_USER_REG,
              FECHA_REG
              )VALUES(
              l_id_licencia_permiso,
              TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY')),
              l_dias,
              P_ID_USER_REG,
              sysdate
              );
            ELSE
              if l_dias_subs =0 then
                select  (TRUNC(LAST_DAY(P_FECHA_DESDE)) -  P_FECHA_DESDE)+1 into  l_dias from dual;
                INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
                ID_LICENCIA_PERMISO,
                ID_ANHO,
                CANTIDAD,
                ID_USER_REG,
                FECHA_REG
                )VALUES(
                l_id_licencia_permiso,
                TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY')),
                l_dias,
                P_ID_USER_REG,
                sysdate
                );
                
                select  (P_FECHA_HASTA - TRUNC(P_FECHA_HASTA, 'MM'))+1 into  l_dias from dual;
                INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
                ID_LICENCIA_PERMISO,
                ID_ANHO,
                CANTIDAD,
                ID_USER_REG,
                FECHA_REG
                )VALUES(
                l_id_licencia_permiso,
                TO_NUMBER(TO_CHAR(P_FECHA_HASTA,'YYYY')),
                l_dias,
                P_ID_USER_REG,
                sysdate
                );
              
              else
                INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
                ID_LICENCIA_PERMISO,
                ID_ANHO,
                CANTIDAD,
                ID_USER_REG,
                FECHA_REG
                )VALUES(
                l_id_licencia_permiso,
                TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY')),
                l_dias,
                P_ID_USER_REG,
                sysdate
                );
                
                
              end if;
              
            END IF;
            
            if l_dias_subs >0 then
            
               UPDATE PLLA_LICENCIA_PERMISO SET
                  ID_ESTADO_SUBSIDIO='01'
                  WHERE ID_LICENCIA_PERMISO=l_id_licencia_permiso;
                  
               select COALESCE(MAX(ID_LICENCIA_PERMISO_EST_SUB),0) +1 INTO   l_id_licencia_permiso_estado from PLLA_LICENCIA_PERMISO_EST_SUB;
         
                 INSERT INTO PLLA_LICENCIA_PERMISO_EST_SUB(
                  ID_LICENCIA_PERMISO_EST_SUB,
                  ID_LICENCIA_PERMISO,
                  ID_ESTADO_SUBSIDIO,
                  COMENTARIO,
                  ID_USER_REG,
                  FECHA_REG
                 )VALUES(
                  l_id_licencia_permiso_estado,
                  l_id_licencia_permiso,
                  '01',
                  null,
                  P_ID_USER_REG,
                  sysdate
                 );
                 
                 
            END IF;
         END IF;
         --FIN CANTIDAD DIAS POR AÑO
         
         
         select COALESCE(MAX(ID_LICENCIA_PERMISO_ESTADO),0) +1 INTO   l_id_licencia_permiso_estado from PLLA_LICENCIA_PERMISO_ESTADO;
         
         INSERT INTO PLLA_LICENCIA_PERMISO_ESTADO(
           ID_LICENCIA_PERMISO_ESTADO,
           ID_LICENCIA_PERMISO,
           ID_ESTADO_LICA_PER,
           COMENTARIO,
           ID_USER_REG,
           FECHA_REG
         )VALUES(
          l_id_licencia_permiso_estado,
          l_id_licencia_permiso,
          '01',
          null,
          P_ID_USER_REG,
          sysdate
         );
         
        --detalle
        if l_engrupo='S' then
          loop
              l_1 := instr(PP_ID_TRABAJADOR, '*' );
              exit when nvl(l_1,0) = 0;
              
              select to_number(trim(substr(PP_ID_TRABAJADOR,1, l_1-1))) into l_id_trabajador from dual;
              
              select COALESCE(MAX(ID_LICENCIA_PERMISO_DET),0) +1 INTO   l_id_licencia_permiso_det from PLLA_LICENCIA_PERMISO_DET;
              
              select b.id_area into l_id_area from moises.trabajador a, ELISEO.ORG_SEDE_AREA b where a.id_sedearea=b.id_sedearea and  a.id_trabajador=l_id_trabajador;
              
              insert into ENOC.PLLA_LICENCIA_PERMISO_DET(
                ID_LICENCIA_PERMISO_DET,
                ID_LICENCIA_PERMISO,
                ID_TRABAJADOR,
                ID_AREA
              )values(
              l_id_licencia_permiso_det,
              l_id_licencia_permiso,
              l_id_trabajador,
              l_id_area
              );
              
              PP_ID_TRABAJADOR := substr(PP_ID_TRABAJADOR, l_1+1 ); 
          end loop;
        end if;
        --fun detalle
         <<salida_final>>
     
         P_ID_LICENCIA_PERMISO_NEW :=l_id_licencia_permiso;
         
         P_ERROR:=l_error;
         P_MSGERROR:= l_msgerror;
     
        END SP_REGISTRAR_LICENCIA_PERMISO;
        
        PROCEDURE SP_CONTROL_VACACION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        l_id_control_asistencia varchar2(25);
        l_item number;
          
        l_fec_actual_vac date;
        l_fec_desde_vac date;
        l_fec_hasta_vac date;
        
        l_fecha_ini_vac date;
        l_fecha_fin_vac date;
        l_id_trabajador_vac number;
        l_id_sedearea number;
        l_id_rol_vacacion varchar2(25);
        l_id_motivo_asist varchar2(2):='V';
        l_contar number;
        
        l_fecha_inicio_vac date;
        
        CURSOR curvac IS
        SELECT A.FECHA_INI,A.FECHA_FIN,B.ID_TRABAJADOR,A.ID_ROL_VACACION,D.ID_SEDEAREA 
        FROM PLLA_ROL_VACACIONAL A,
        PLLA_PERIODO_VAC_TRAB B, 
        PLLA_PERIODO_VAC C, 
        MOISES.TRABAJADOR D, 
        ELISEO.ORG_SEDE_AREA E
        WHERE A.ID_PERIODO_VAC_TRAB = B.ID_PERIODO_VAC_TRAB
        AND B.ID_PERIODO_VAC = C.ID_PERIODO_VAC
        AND B.ID_TRABAJADOR =D.ID_TRABAJADOR
        AND D.ID_SEDEAREA=E.ID_SEDEAREA
        AND C.ID_ENTIDAD=P_ID_ENTIDAD
        AND E.ID_DEPTO LIKE P_ID_DEPTO||'%'
        AND case when P_ID_TRABAJADOR=0 then 0 else D.ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND A.CONDICION ='P'
        AND B.ID_ESTADO_VAC_TRAB='02'
        AND ((TO_NUMBER(TO_CHAR(A.FECHA_INI,'YYYY'))= P_ID_ANHO AND TO_NUMBER(TO_CHAR(A.FECHA_INI,'MM'))= P_ID_MES) OR
        (TO_NUMBER(TO_CHAR(A.FECHA_FIN,'YYYY'))= P_ID_ANHO AND TO_NUMBER(TO_CHAR(A.FECHA_FIN,'MM'))= P_ID_MES))
        order by D.ID_TRABAJADOR, A.FECHA_INI ;
      
      BEGIN
      
      l_fec_actual_vac:= current_date;
      l_fec_desde_vac := to_date(to_char(P_ID_ANHO)||'-'||to_char(P_ID_MES)||'-01','YYYY-MM-DD');
      
      if l_fec_desde_vac>l_fec_actual_vac then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor que fecha actual';
          GOTO salida_vac;
      end if;
      
      delete from PLLA_CONTROL_ASISTENCIA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
      and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
      AND ID_SEDEAREA IN(
        SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
      );
      
      OPEN curvac;
      FETCH curvac INTO l_fecha_ini_vac,l_fecha_fin_vac,l_id_trabajador_vac,l_id_rol_vacacion,l_id_sedearea;
    
      WHILE curvac%FOUND LOOP
 
        if l_fecha_ini_vac<l_fecha_ini_vac then
          l_fec_desde_vac:= to_date(to_char(P_ID_ANHO)||'-'||to_char(P_ID_MES)||'-01','YYYY-MM-DD');
        else
          l_fec_desde_vac:=l_fecha_ini_vac;
        end if;
        
        if l_fecha_fin_vac>l_fec_actual_vac then
          l_fec_hasta_vac := l_fec_actual_vac;
        else
          l_fec_hasta_vac := l_fecha_fin_vac;
        end if;
        
        WHILE l_fec_desde_vac<=l_fec_hasta_vac LOOP
        
          select count(*) into l_contar  from  PLLA_CONTROL_ASISTENCIA where id_trabajador = l_id_trabajador_vac and  to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_vac,'YYYY-MM-DD') and ID_MOTIVO_ASIST in('FA','V','PL');
          
          if l_contar = 0 then
            select coalesce(max(ITEM),0) +1 into l_item from PLLA_CONTROL_ASISTENCIA where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_vac,'YYYY-MM-DD') and ID_MOTIVO_ASIST=l_id_motivo_asist;
            l_id_control_asistencia:=to_char(l_fec_desde_vac,'YYYYMMDD')||l_id_motivo_asist||to_char(l_item);
            
            
            
            insert into PLLA_CONTROL_ASISTENCIA(
                ID_CONTROL_ASISTENCIA,
                ITEM,
                ID_TRABAJADOR,
                ID_SEDEAREA,
                ID_MOTIVO_ASIST,
                FECHA,
                ID_ROL_VACACION,
                ID_USER_REG,
                FECHA_REG
              )VALUES(
                l_id_control_asistencia,
                l_item,
                l_id_trabajador_vac,
                l_id_sedearea,
                l_id_motivo_asist,
                l_fec_desde_vac,
                l_id_rol_vacacion,
                P_ID_USER_REG,
                sysdate
              );
              
              update PLLA_ASISTENCIA 
              set  ID_MOTIVO_ASIST = l_id_motivo_asist
              where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_vac,'YYYY-MM-DD')
              and id_trabajador=l_id_trabajador_vac;
            end if;
            l_fec_desde_vac:= l_fec_desde_vac +1;
          END LOOP;

        FETCH curvac INTO l_fecha_ini_vac,l_fecha_fin_vac,l_id_trabajador_vac,l_id_rol_vacacion,l_id_sedearea;
                  
      END LOOP;
      CLOSE curvac;
      
      <<salida_vac>>
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
      
      END SP_CONTROL_VACACION;
      
      PROCEDURE SP_CONTROL_PERMISO_LIC(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        l_id_control_asistencia varchar2(25);
        l_item number;
          
        l_fec_actual_lm date;
        l_fec_desde_lm date;
        l_fec_hasta_lm date;
        
        l_fecha_ini_lm date;
        l_fecha_fin_lm date;
        l_id_tarabajador_lm number;
        l_id_sedearea number;
        l_id_licencia_permiso varchar2(25);
        l_id_motivo_asist varchar2(2):='PL';
        l_tipo varchar2(2);
        
        l_id_lic_per varchar2(25);
        l_id_perm_esp varchar2(25);
        l_contar number;
        
        
        CURSOR curperlic IS
        SELECT A.FECHA_DESDE,A.FECHA_HASTA,A.ID_TRABAJADOR,A.ID_LICENCIA_PERMISO,t.ID_SEDEAREA,'LP' AS TIPO
        FROM ENOC.VW_LICENCIA_PERMISO A,
         moises.trabajador t
        WHERE  A.id_trabajador=t.id_trabajador
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.PERIODO='D'
        AND A.ID_ESTADO_LICA_PER='03'
        AND A.ENGRUPO='N'
        AND case when P_ID_TRABAJADOR=0 then 0 else t.ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ((TO_NUMBER(TO_CHAR(A.FECHA_DESDE,'YYYY'))= P_ID_ANHO AND TO_NUMBER(TO_CHAR(A.FECHA_DESDE,'MM'))= P_ID_MES) OR
        (TO_NUMBER(TO_CHAR(A.FECHA_HASTA,'YYYY'))= P_ID_ANHO AND TO_NUMBER(TO_CHAR(A.FECHA_HASTA,'MM'))= P_ID_MES))
        UNION ALL
        SELECT A.FECHA_DESDE,A.FECHA_HASTA,B.ID_TRABAJADOR,A.ID_LICENCIA_PERMISO,t.ID_SEDEAREA,'LP' AS TIPO
        FROM ENOC.VW_LICENCIA_PERMISO A,
        PLLA_LICENCIA_PERMISO_DET B,
        moises.trabajador t
        WHERE A.ID_LICENCIA_PERMISO =  B.ID_LICENCIA_PERMISO
        AND B.id_trabajador=t.id_trabajador
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.PERIODO='D'
        AND A.ID_ESTADO_LICA_PER='03'
        AND A.ENGRUPO='S'
        AND case when P_ID_TRABAJADOR=0 then 0 else B.ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ((TO_NUMBER(TO_CHAR(A.FECHA_DESDE,'YYYY'))= P_ID_ANHO AND TO_NUMBER(TO_CHAR(A.FECHA_DESDE,'MM'))= P_ID_MES) OR
        (TO_NUMBER(TO_CHAR(A.FECHA_HASTA,'YYYY'))= P_ID_ANHO AND TO_NUMBER(TO_CHAR(A.FECHA_HASTA,'MM'))= P_ID_MES))
        order by ID_TRABAJADOR, FECHA_DESDE,TIPO ;
      
      BEGIN
      
      l_fec_actual_lm:= current_date;
      l_fec_desde_lm := to_date(to_char(P_ID_ANHO)||'-'||to_char(P_ID_MES)||'-01','YYYY-MM-DD');
      
      if l_fec_desde_lm>l_fec_actual_lm then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor que fecha actual';
          GOTO salida_licper;
      end if;
      
      delete from PLLA_CONTROL_ASISTENCIA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
      and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
      AND ID_SEDEAREA IN(
        SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
      );
      
      OPEN curperlic;
      FETCH curperlic INTO l_fecha_ini_lm,l_fecha_fin_lm,l_id_tarabajador_lm,l_id_licencia_permiso,l_id_sedearea,l_tipo;
    
      WHILE curperlic%FOUND LOOP
        if l_tipo ='LP' then
          l_id_lic_per :=l_id_licencia_permiso;
          l_id_perm_esp :=null;
        else
          l_id_lic_per :=null;
          l_id_perm_esp :=l_id_licencia_permiso;
        end if;
        
        if l_fecha_ini_lm<l_fecha_ini_lm then
          l_fec_desde_lm:=to_date(to_char(P_ID_ANHO)||'-'||to_char(P_ID_MES)||'-01','YYYY-MM-DD');
        else
          l_fec_desde_lm:=l_fecha_ini_lm;
        end if;
        
        if l_fecha_fin_lm>l_fec_desde_lm then
          l_fec_hasta_lm := l_fec_actual_lm;
        else
          l_fec_hasta_lm := l_fecha_fin_lm;
        end if;
        
        
        WHILE l_fec_desde_lm<=l_fec_hasta_lm LOOP
        
          select count(*) into l_contar  from  PLLA_CONTROL_ASISTENCIA where id_trabajador = l_id_tarabajador_lm and  to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_lm,'YYYY-MM-DD') and ID_MOTIVO_ASIST in('FA','V','PL');
          
          if l_contar = 0 then
        
            select coalesce(max(ITEM),0) +1 into l_item from PLLA_CONTROL_ASISTENCIA where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_lm,'YYYY-MM-DD') and ID_MOTIVO_ASIST=l_id_motivo_asist;
            l_id_control_asistencia:=to_char(l_fec_desde_lm,'YYYYMMDD')||l_id_motivo_asist||to_char(l_item);
            
            
            insert into PLLA_CONTROL_ASISTENCIA(
                ID_CONTROL_ASISTENCIA,
                ITEM,
                ID_TRABAJADOR,
                ID_SEDEAREA,
                ID_MOTIVO_ASIST,
                FECHA,
                ID_LICENCIA_PERMISO,
                --ID_PERMISO_ESPECIAL,
                ID_USER_REG,
                FECHA_REG
              )VALUES(
                l_id_control_asistencia,
                l_item,
                 l_id_tarabajador_lm,
                l_id_sedearea,
                l_id_motivo_asist,
                l_fec_desde_lm,
                l_id_lic_per,
                --l_id_perm_esp,
                P_ID_USER_REG,
                sysdate
              );
              
              update PLLA_ASISTENCIA 
              set  ID_MOTIVO_ASIST = l_id_motivo_asist
              where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_lm,'YYYY-MM-DD')
              and id_trabajador=l_id_tarabajador_lm;
              
              l_fec_desde_lm:= l_fec_desde_lm +1;
          end if;
          END LOOP;

        FETCH curperlic INTO l_fecha_ini_lm,l_fecha_fin_lm,l_id_tarabajador_lm,l_id_licencia_permiso,l_id_sedearea,l_tipo;
                  
      END LOOP;
      CLOSE curperlic;
    
      <<salida_licper>>
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
      
      
      END SP_CONTROL_PERMISO_LIC;
      
      PROCEDURE SP_GENERAR_REPVAC(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_PERIODO_VAC NUMBER,P_ID_AREA varchar2,P_DATO VARCHAR2,P_ESTADO VARCHAR2,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        l_query VARCHAR2(4000):='';
        l_fecha_ini date;
        l_fecha_fin date;
        l_fecha_ini_eje date;
        cursor curtrab is
        select 
          PERSONA,
          ID_TRABAJADOR,
          ID_PERSONA,
          PERIODO_INI,
          PERIODO_FIN,
          AREA,
          PUESTO
        from TT_REP_VACACION
        order by ID_TRABAJADOR;
        
        l_vac varchar2(2):='N';
        
      BEGIN
          delete from TT_REP_VACACION;
          DELETE FROM PLLA_REP_VACACION WHERE ID_USER=P_ID_USER;
    
           l_query:='INSERT INTO TT_REP_VACACION ';
           l_query:=l_query|| 'select ';
           l_query:=l_query|| 'a.paterno ||'' ''|| a.materno ||'' ''|| a.nombre as persona, ';
           l_query:=l_query|| 'b.id_trabajador,a.id_persona, ';
           l_query:=l_query|| 'min(b.periodo_ini) as periodo_ini, ';
           l_query:=l_query|| 'max(b.periodo_fin) as periodo_fin, ';
           l_query:=l_query|| 'd.nombre as area, ';
           l_query:=l_query|| 'p.nombre as puesto ';
           l_query:=l_query|| 'from vw_trabajador a, ';
           l_query:=l_query|| 'plla_periodo_vac_trab b, ';
           l_query:=l_query|| 'eliseo.org_sede_area c, ';
           l_query:=l_query|| 'eliseo.org_area d, ';
           l_query:=l_query|| 'plla_puesto p ';
           l_query:=l_query|| 'where a.id_trabajador=b.id_trabajador ';
           l_query:=l_query|| 'and a.id_sedearea=c.id_sedearea ';
           l_query:=l_query|| 'and c.id_area=d.id_area ';
           l_query:=l_query|| 'and a.id_puesto=p.id_puesto ';
           l_query:=l_query|| 'and c.id_entidad=:S_ID_ENTIDAD ';
           --l_query:=l_query|| 'and c.id_depto like '''||P_ID_DEPTO||'%'' ';
           l_query:=l_query|| 'and 1 = case when '''||P_ID_DEPTO||'''=''0'' then 1 else case when c.id_depto like '''||P_ID_DEPTO||'%'' then 1 else 0 end end ';
           if P_ESTADO is not null then
             l_query:=l_query|| 'and b.ID_ESTADO_VAC_TRAB = '''||P_ESTADO||''' ';
           end if;
           l_query:=l_query|| 'and b.ID_PERIODO_VAC_TRAB in( ';
             l_query:=l_query|| 'select x.ID_PERIODO_VAC_TRAB from PLLA_ROL_VACACIONAL x ';
             l_query:=l_query|| 'where x.condicion=''P'' ';
             l_query:=l_query|| 'and (to_number(to_char(x.FECHA_INI,''YYYY''))='||to_char(P_ID_PERIODO_VAC)||' or to_number(to_char(x.FECHA_fin,''YYYY''))='||to_char(P_ID_PERIODO_VAC)||')';
           l_query:=l_query|| ') ';
           
           IF P_ID_AREA IS NOT NULL and P_ID_AREA <> '0' THEN
            l_query:=l_query|| 'and c.id_area in ('||P_ID_AREA||')';
           END IF;
           IF P_DATO IS NOT NULL THEN
             l_query:=l_query|| ' and (upper(a.nombre) like upper(''%'||P_DATO||'%'') ';
             l_query:=l_query|| 'or upper(a.nombre ||'' ''|| a.paterno ) like upper(''%'||P_DATO||'%'') ';
             l_query:=l_query|| 'or upper(a.paterno ||'' ''|| a.materno ) like upper(''%'||P_DATO||'%'') ';
             l_query:=l_query|| 'or upper(a.nombre ||'' ''|| a.paterno ||'' ''|| a.materno ) like upper(''%'||P_DATO||'%'') ';
             l_query:=l_query|| 'or a.num_documento like ''%'||P_DATO||'%'') ';
           END IF;
           
           l_query:=l_query|| ' group by a.paterno,a.materno,a.nombre, b.id_trabajador,a.id_persona, d.nombre,p.nombre';
           
           --dbms_output.put_line(l_query);
               
          EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD;--, P_ID_DEPTO;
          
          SELECT COUNT(*) INTO l_contar FROM TT_REP_VACACION;
          
          if l_contar>0 then
          
           -- select min(PERIODO_INI) , max(PERIODO_FIN) into l_fecha_ini,l_fecha_fin from TT_REP_VACACION;
            
            select to_date('01-01-'||to_char(P_ID_PERIODO_VAC),'dd/mm/yyyy') , to_date('31-12-'||to_char(P_ID_PERIODO_VAC),'dd/mm/yyyy') 
            into l_fecha_ini,l_fecha_fin 
            from dual;
            
            /*l_fecha_ini_eje:=l_fecha_ini;
            WHILE l_fecha_ini<=l_fecha_fin LOOP
              INSERT INTO TT_REP_FECHA_VAC(FECHA)VALUES(l_fecha_ini);
              l_fecha_ini:= l_fecha_ini + 1;
            END LOOP;
            */
            
            --l_msgerror:='01-01-'||to_char(P_ID_PERIODO_VAC)||' - '||'31-12-'||to_char(P_ID_PERIODO_VAC)||'vvvv';
            
            FOR cur in curtrab LOOP
              BEGIN
                l_fecha_ini_eje:=l_fecha_ini;
                
                WHILE l_fecha_ini_eje<=l_fecha_fin LOOP
                
                  /*if l_fecha_ini_eje<cur.PERIODO_INI or l_fecha_ini_eje>cur.PERIODO_FIN then
                    l_vac:='N';
                  else*/
                    select case when  count(*)>0 then '1' else '0' end 
                    into l_vac
                    from PLLA_ROL_VACACIONAL a, plla_periodo_vac_trab b 
                    where a.ID_PERIODO_VAC_TRAB =b.ID_PERIODO_VAC_TRAB
                    and b.id_trabajador=cur.id_trabajador
                    and a.CONDICION='P'
                    and (l_fecha_ini_eje between FECHA_INI and FECHA_FIN);
                  --end if;
                  insert into PLLA_REP_VACACION(
                    ID_TRABAJADOR,
                    ID_PERSONA,
                    NOMBRE_PERSONA,
                    AREA,
                    PUESTO,
                    ANHO,
                    MES,
                    DIA,
                    VACACION,
                    ID_USER,
                    PERIODO,
                    NOM_DIAS,
                    FECHA
                  )values(
                    cur.id_trabajador,
                    cur.id_persona,
                    cur.persona,
                    cur.area,
                    cur.puesto,
                    to_number(to_char(l_fecha_ini_eje,'YYYY')),
                    to_number(to_char(l_fecha_ini_eje,'MM')),
                    to_number(to_char(l_fecha_ini_eje,'DD')),
                    l_vac,
                    P_ID_USER,
                    to_char(cur.PERIODO_INI,'DD/MM/YYYY')||'-'|| to_char(cur.PERIODO_FIN,'DD/MM/YYYY'),
                    substr(to_char(l_fecha_ini_eje, 'DAY', 'NLS_DATE_LANGUAGE=SPANISH'),1,2),
                    l_fecha_ini_eje
                  );
                  
                  l_fecha_ini_eje:= l_fecha_ini_eje + 1;
                END LOOP;
              end;
            END LOOP;
          end if;
          
    
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_GENERAR_REPVAC;
      
      PROCEDURE SP_VALIDAR_PERMISO_LIC(
        P_ID_ENTIDAD NUMBER,
        P_ID_CONCEPTO_PERM_LIC NUMBER,
        P_ID_TRABAJADOR NUMBER,
        P_FECHA_DESDE DATE, 
        P_FECHA_HASTA DATE,
        CURSOR OUT SYS_REFCURSOR
        ) IS
          l_contar number;
          l_dias number:=0;
          l_horas number:=0;
          l_min_dias number:=0;
          l_max_dias number:=0;
          l_max_dias_anho number:=0;
          l_dias_max number:=0;
          l_codigo varchar2(10);
          l_dias_desmed number:=0;
          l_fecha_fin_desmed date;
          l_dias_subs number:=0;
          l_fecha_ini_subs date;
          l_fecha_fin_subs date;
          l_s number:=0;
        
      BEGIN
        
        SELECT 
        coalesce(MIN_DIAS,0),
        coalesce(MAX_DIAS,0),
        coalesce(MAX_DIAS_ANHO,0),
        CODIGO
        INTO 
        l_min_dias,
        l_max_dias,
        l_max_dias_anho,
        l_codigo
        FROM PLLA_CONCEPTO_PERM_LIC 
        WHERE ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC;
        
        IF P_FECHA_HASTA IS NOT NULL AND P_FECHA_DESDE IS NOT NULL THEN
         select  (P_FECHA_HASTA -  P_FECHA_DESDE)+1 into  l_dias from dual;
        END IF;
        
        IF P_FECHA_DESDE IS NOT NULL THEN
          IF l_codigo IN('PERM_SGOCE','PERM_COMP') THEN
              select COALESCE(SUM(A.CANTIDAD),0) INTO l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P,PLLA_CONCEPTO_PERM_LIC C  
              WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
              AND P.ID_CONCEPTO_PERM_LIC=C.ID_CONCEPTO_PERM_LIC
              AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
              AND P.ID_ENTIDAD = P_ID_ENTIDAD
              AND C.CODIGO IN('PERM_SGOCE','PERM_COMP')
              AND A.ID_ANHO = TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY'))
              AND P.ID_ESTADO_LICA_PER NOT IN('00','04');
          ELSE
              select COALESCE(SUM(A.CANTIDAD),0) INTO l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P  
              WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
              AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
              AND P.ID_ENTIDAD = P_ID_ENTIDAD
              AND P.ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC
              AND A.ID_ANHO = TO_NUMBER(TO_CHAR(P_FECHA_DESDE,'YYYY'))
              AND P.ID_ESTADO_LICA_PER NOT IN('00','04');
          END IF;
        END IF;
        IF P_FECHA_HASTA IS NOT NULL AND P_FECHA_DESDE IS NOT NULL THEN
          IF l_codigo = 'DESC_MED' THEN
           
            IF (l_dias_max+l_dias)>l_max_dias_anho THEN
            
              l_s := (l_dias_max+l_dias) - l_max_dias_anho;
              l_dias_desmed:= l_dias - l_s;
              l_dias_subs:= l_s;
              if l_dias_desmed<0 then
                l_dias_desmed:= 0;
                l_dias_subs:= l_dias;
              end if;
              
              l_fecha_ini_subs:= P_FECHA_DESDE+l_dias_desmed;
              l_fecha_fin_subs:= P_FECHA_HASTA;
              
              if l_dias_desmed>0 then
               l_fecha_fin_desmed:=P_FECHA_HASTA - l_dias_subs;
              end if;
              
            ELSE
              l_dias_desmed:= l_dias;
              l_dias_subs:= 0;
              l_fecha_fin_desmed:=P_FECHA_HASTA;
  
            END IF;
  
         END IF;
       END IF;
       OPEN cursor FOR 
       select l_dias_max AS DIAS_ACUMULADO,l_dias_desmed AS DIAS_DESMED, l_fecha_fin_desmed AS FECHA_FIN_DESMES,l_dias_subs AS DIAS_SUBS,
       l_fecha_ini_subs AS FECHA_INI_SUBS,l_fecha_fin_subs AS FECHA_FIN_SUBS,l_dias_max+l_dias as TOTAL_DIA ,l_max_dias_anho as MAX_DIAS_ANHO
       FROM DUAL ;
      END SP_VALIDAR_PERMISO_LIC;
      
     
      
      PROCEDURE SP_REPORTE_PERMISO_LIC(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_TIPO_PERM_LIC NUMBER,
        P_ID_CONCEPTO_PERM_LIC VARCHAR2,
        P_ID_TRABAJADOR NUMBER,
        P_TIPO VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_FECHA_DESDE DATE, 
        P_FECHA_HASTA DATE,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREA VARCHAR2,
        P_ID_USER NUMBER,
        P_OPCION VARCHAR2,--A:antiguo: N: nuevo
        CURSOR OUT SYS_REFCURSOR
        ) IS
          
          l_desdes date;
          l_hasta date;
          l_mes varchar2(5);
          l_trab varchar2(100):='';
          l_columna varchar2(1500):='';
          l_query varchar2(4000):='';
          l_where varchar2(1500):='';
          l_id_tipo_nivel_vista number;
      BEGIN
      
      IF P_TIPO='RA' THEN
        l_desdes:=P_FECHA_DESDE;
        l_hasta:=P_FECHA_HASTA;
      ELSE
        select to_date('01-'||to_char(P_ID_MES)||'-'||to_char(P_ID_ANHO),'dd/mm/yyyy'),  TRUNC(LAST_DAY(to_date('01-'||to_char(P_ID_MES)||'-'||to_char(P_ID_ANHO),'dd/mm/yyyy'))) 
        into l_desdes,l_hasta
        from dual;
        
        if P_ID_MES <10 then
          l_mes:='0'||to_char(P_ID_MES);
        else
          l_mes:=to_char(P_ID_MES);
        end if;
        
      END IF;
      
        if P_RESTRINGIDO='S' then
          select id_tipo_nivel_vista into l_id_tipo_nivel_vista from eliseo.lamb_acceso_nivel where id_acceso_nivel=P_ID_ACCESO_NIVEL;
        end if;
      
      
        l_trab:='a.id_trabajador,';
        l_columna:='a.id_tipo_suspension,a.id_entidad,';
        l_columna:=l_columna|| 'a.id_depto,';
        l_columna:=l_columna|| 'a.id_licencia_permiso,';
        l_columna:=l_columna|| 'a.id_tipo_perm_lic,';
        l_columna:=l_columna|| 'a.id_concepto_perm_lic,';
        l_columna:=l_columna|| 'a.tipo_perm_lic,';
        l_columna:=l_columna|| 'a.nombre, ';
        l_columna:=l_columna|| 'a.codsunat,';
        l_columna:=l_columna|| 'a.periodo,';
        l_columna:=l_columna|| 'a.id_estado_lica_per,';
        l_columna:=l_columna|| 'a.fecha_desde,';
        l_columna:=l_columna|| 'a.fecha_hasta,';
        --l_columna:=l_columna|| 'CASE WHEN a.fecha_desde<:S_DESDE THEN :S_DESDE ELSE a.fecha_desde END,';
        --l_columna:=l_columna|| 'CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END,';
        l_columna:=l_columna|| 'CASE WHEN a.fecha_desde<:S_DESDE THEN :S_DESDE ELSE a.fecha_desde END,';
        l_columna:=l_columna|| 'CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END,';
        l_columna:=l_columna|| 'a.dias,';
        l_columna:=l_columna|| 'a.horas,';
        --l_columna:=l_columna|| 'CASE WHEN a.periodo=''H'' THEN 0 ELSE ';
        l_columna:=l_columna|| '((CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END) -  (CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END))+1, ';
        --l_columna:=l_columna|| 'END,';
        
        l_columna:=l_columna|| 'a.horas ';
        

        if P_ID_DEPTO is not null then
          l_where:=l_where||'and a.id_depto='''||P_ID_DEPTO||''' ';
        end if;
        if P_ID_TIPO_PERM_LIC > 0 then
          l_where:=l_where||'and a.id_tipo_perm_lic='||to_char(P_ID_TIPO_PERM_LIC)||' ';
        end if;
        if P_ID_CONCEPTO_PERM_LIC is not null then
          l_where:=l_where||'and a.id_concepto_perm_lic in('||to_char(P_ID_CONCEPTO_PERM_LIC)||') ';
        end if;
 
       l_query:='insert into ENOC.TT_LICENCIA_PERMISO(';
       l_query:=l_query|| 'ID_TRABAJADOR,ID_TIPO_SUSPENSION,ID_ENTIDAD,ID_DEPTO,ID_LICENCIA_PERMISO,ID_TIPO_PERM_LIC,ID_CONCEPTO_PERM_LIC,TIPO_PERM_LIC,NOMBRE,CODSUNAT,PERIODO,ID_ESTADO_LICA_PER,FECHA_DESDE,FECHA_HASTA,FECHA_DESDE_PROC,FECHA_HASTA_PROC,DIAS,HORAS,DIAS_PROC,HORAS_PROC) ';
       l_query:=l_query|| 'select ';
       l_query:=l_query|| l_trab || l_columna;
       l_query:=l_query|| 'from ENOC.VW_LICENCIA_PERMISO_REP a, moises.trabajador t, eliseo.vw_sede_area sa ';
       l_query:=l_query|| 'where a.id_trabajador=t.id_trabajador ';
       l_query:=l_query|| 'and t.id_sedearea=sa.id_sedearea ';
       l_query:=l_query|| 'and a.id_entidad=:S_ID_ENTIDAD ';
       l_query:=l_query|| 'and a.engrupo=''N'' ';
       l_query:=l_query|| 'and a.id_estado_lica_per not in(''00'',''04'') ';
       if P_ID_TRABAJADOR > 0 then
          l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
       end if;
       l_query:=l_query|| l_where;
       --IF P_TIPO='RA' THEN
        --l_query:=l_query||'and ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) ';
        --l_query:=l_query||'and ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ';
        l_query:=l_query||'and ( ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) or ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ) ';
       /*ELSE
        l_query:=l_query||'and (to_char(a.fecha_desde,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''' or to_char(a.fecha_hasta,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''') ';
       END IF;*/
       
       if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and sa.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||')';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and sa.id_area in('||P_ID_AREA||')';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
          end if;
        end if;
        
        if P_RESTRINGIDO='U' then
          l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
        end if;
       
       
       l_query:=l_query|| ' union all ';
       l_trab:='b.id_trabajador,';
       l_query:=l_query|| 'select ';
       l_query:=l_query|| l_trab || l_columna;
       l_query:=l_query|| 'from ENOC.VW_LICENCIA_PERMISO_REP a, enoc.plla_licencia_permiso_det b, moises.trabajador t, eliseo.vw_sede_area sa  ';
       l_query:=l_query|| 'where a.id_licencia_permiso=b.id_licencia_permiso ';
       l_query:=l_query|| 'and b.id_trabajador=t.id_trabajador ';
       l_query:=l_query|| 'and t.id_sedearea=sa.id_sedearea ';
       l_query:=l_query|| 'and a.id_entidad=:S_ID_ENTIDAD ';
       l_query:=l_query|| 'and a.engrupo=''S'' ';
       l_query:=l_query|| 'and a.id_estado_lica_per not in(''00'',''04'') ';
       if P_ID_TRABAJADOR > 0 then
          l_query:=l_query||'and b.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
       end if;
       l_query:=l_query|| l_where;
       /*IF P_TIPO='RA' THEN
        l_query:=l_query||'and ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) '; 
        --l_query:=l_query||'and ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ';
       ELSE
        l_query:=l_query||'and (to_char(a.fecha_desde,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''' or to_char(a.fecha_hasta,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''') ';
       END IF;*/
       l_query:=l_query||'and ( ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) or ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ) ';
       
       if P_RESTRINGIDO='S' then
         
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and sa.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||')';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and sa.id_area in('||P_ID_AREA||')';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and b.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
          end if;
        end if;
        
        if P_RESTRINGIDO='U' then
          l_query:=l_query||'and b.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
        end if;
       
       /*IF P_TIPO='RA' THEN
        EXECUTE IMMEDIATE l_query USING l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta,
        l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta;
       else
        EXECUTE IMMEDIATE l_query USING l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,--l_desdes, l_hasta,
        l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD;--,l_desdes, l_hasta;
       end if;*/
       
       EXECUTE IMMEDIATE l_query USING l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta,l_desdes, l_hasta,
        l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta,l_desdes, l_hasta;
     if P_OPCION='N' then
      OPEN cursor FOR 
      select 
      a.id_entidad,
      a.id_depto,
      a.id_trabajador,
      b.id_persona, 
      b.apellidonombre, 
      td.siglas, 
      b.num_documento, 
      a.id_tipo_perm_lic,
      a.id_concepto_perm_lic,
      a.tipo_perm_lic,
      a.nombre, 
      a.codsunat,
      b.id_condicion_laboral,
      cl.nombre as condicion_laboral,
      b.id_tipo_tiempo_trabajo,
      tt.nombre as tiempo_trabajo,
      a.periodo,
      pp.puesto,
      sa.nombre as area,
      b.ID_TIPODOCUMENTO,
      a.horas,
      a.dias,
      a.id_tipo_suspension,
      case when a.periodo='H' then to_char(a.FECHA_DESDE,'DD/MM/YYYY HH24:MI') else  to_char(a.FECHA_DESDE,'DD/MM/YYYY') end  as FECHA_DESDE,
      case when a.periodo='H' then to_char(a.FECHA_HASTA,'HH24:MI') else  to_char(a.FECHA_HASTA,'DD/MM/YYYY') end  as FECHA_HASTA,
      case when a.periodo='H'  then 'Horas' else 'Días' end as  nomperiodo,
      a.ID_ESTADO_LICA_PER,
      est.nombre as estado_nombre
      from ENOC.TT_LICENCIA_PERMISO a inner join enoc.vw_trabajador b 
      on a.id_trabajador=b.id_trabajador
      inner join moises.tipo_documento td
      on td.ID_TIPODOCUMENTO=b.ID_TIPODOCUMENTO
      inner join enoc.vw_perfil_puesto pp
      on pp.id_perfil_puesto=b.id_perfil_puesto
      inner join eliseo.vw_sede_area sa
      on sa.id_sedearea=b.id_sedearea
      inner join moises.condicion_laboral cl
      on cl.id_condicion_laboral=b.id_condicion_laboral
      inner join moises.tipo_tiempo_trabajo tt
      on tt.id_tipo_tiempo_trabajo=b.id_tipo_tiempo_trabajo
      inner join enoc.PLLA_ESTADO_LICA_PER est
      on est.ID_ESTADO_LICA_PER=a.ID_ESTADO_LICA_PER
      order by a.FECHA_DESDE,b.apellidonombre;
      
     else 
      OPEN cursor FOR 
      select 
      a.id_entidad,
      a.id_depto,
      a.id_trabajador,
      b.id_persona, 
      b.apellidonombre, 
      td.siglas, 
      b.num_documento, 
      a.id_tipo_perm_lic,
      a.id_concepto_perm_lic,
      a.tipo_perm_lic,
      a.nombre, 
      a.codsunat,
      b.id_condicion_laboral,
      cl.nombre as condicion_laboral,
      b.id_tipo_tiempo_trabajo,
      tt.nombre as tiempo_trabajo,
      a.periodo,
      pp.puesto,
      sa.nombre as area,
      b.ID_TIPODOCUMENTO,
      sum(a.horas) as horas,
      sum(a.dias) as dias,
      sum(a.horas_proc) as horas_proc,
      --sum(a.dias_proc) as dias_proc,
      sum(
      case when a.periodo='H' then a.dias else
      (a.FECHA_HASTA_PROC- a.FECHA_DESDE_PROC)+1
      end 
      ) as dias_proc,
      a.id_tipo_suspension
      from ENOC.TT_LICENCIA_PERMISO a inner join enoc.vw_trabajador b 
      on a.id_trabajador=b.id_trabajador
      inner join moises.tipo_documento td
      on td.ID_TIPODOCUMENTO=b.ID_TIPODOCUMENTO
      inner join enoc.vw_perfil_puesto pp
      on pp.id_perfil_puesto=b.id_perfil_puesto
      inner join eliseo.vw_sede_area sa
      on sa.id_sedearea=b.id_sedearea
      inner join moises.condicion_laboral cl
      on cl.id_condicion_laboral=b.id_condicion_laboral
      inner join moises.tipo_tiempo_trabajo tt
      on tt.id_tipo_tiempo_trabajo=b.id_tipo_tiempo_trabajo
      group by
      a.id_entidad,
      a.id_depto,
      a.id_trabajador,
      b.id_persona, 
      b.apellidonombre, 
      td.siglas, 
      b.num_documento, 
      a.id_tipo_perm_lic,
      a.id_concepto_perm_lic,
      a.tipo_perm_lic,
      a.nombre, 
      a.codsunat,
      b.id_condicion_laboral,
      cl.nombre,
      b.id_tipo_tiempo_trabajo,
      tt.nombre,
      a.periodo,
      pp.puesto,
      sa.nombre,
      b.ID_TIPODOCUMENTO,
      a.id_tipo_suspension
      order by b.apellidonombre;
      end if;
      END SP_REPORTE_PERMISO_LIC;  
      
      PROCEDURE SP_REPORTE_PERMISO_LIC_DET(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_CONCEPTO_PERM_LIC NUMBER,
        P_ID_TIPO_SUSPENSION NUMBER,
        P_ID_TRABAJADOR NUMBER,
        P_TIPO VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_FECHA_DESDE DATE, 
        P_FECHA_HASTA DATE,
        P_PERIODO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREA VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        ) AS
         l_desdes date;
          l_hasta date;
          l_mes varchar2(5);
          l_trab varchar2(100):='';
          l_columna varchar2(1500):='';
          l_query varchar2(4000):='';
          l_where varchar2(1500):='';
          l_id_tipo_nivel_vista number;
      BEGIN
      
      IF P_TIPO='RA' THEN
        l_desdes:=P_FECHA_DESDE;
        l_hasta:=P_FECHA_HASTA;
      ELSE
        select to_date('01-'||to_char(P_ID_MES)||'-'||to_char(P_ID_ANHO),'dd/mm/yyyy'),  TRUNC(LAST_DAY(to_date('01-'||to_char(P_ID_MES)||'-'||to_char(P_ID_ANHO),'dd/mm/yyyy'))) 
        into l_desdes,l_hasta
        from dual;
        
        if P_ID_MES <10 then
          l_mes:='0'||to_char(P_ID_MES);
        else
          l_mes:=to_char(P_ID_MES);
        end if;
        
      END IF;
      
        if P_RESTRINGIDO='S' then
          select id_tipo_nivel_vista into l_id_tipo_nivel_vista from eliseo.lamb_acceso_nivel where id_acceso_nivel=P_ID_ACCESO_NIVEL;
        end if;
      
      
        l_trab:='a.id_trabajador,';
        l_columna:='a.id_licencia_permiso,';
        l_columna:=l_columna|| 'a.id_tipo_perm_lic,';
        l_columna:=l_columna|| 'a.id_concepto_perm_lic,';
        l_columna:=l_columna|| 'a.tipo_perm_lic,';
        l_columna:=l_columna|| 'a.nombre, ';
        l_columna:=l_columna|| 'a.codsunat,';
        l_columna:=l_columna|| 'a.periodo,';
        l_columna:=l_columna|| 'a.id_estado_lica_per,';
        l_columna:=l_columna|| 'a.fecha_desde_real,';
        l_columna:=l_columna|| 'a.fecha_hasta_real,';
        --l_columna:=l_columna|| 'CASE WHEN a.fecha_desde<:S_DESDE THEN :S_DESDE ELSE a.fecha_desde END,';
        --l_columna:=l_columna|| 'CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END,';
        l_columna:=l_columna|| 'CASE WHEN a.fecha_desde<:S_DESDE THEN :S_DESDE ELSE a.fecha_desde END,';
        l_columna:=l_columna|| 'CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END,';
        l_columna:=l_columna|| 'a.dias_real,';
        l_columna:=l_columna|| 'a.horas,';
        --l_columna:=l_columna|| 'CASE WHEN a.periodo=''H'' THEN 0 ELSE ';
        l_columna:=l_columna|| '((CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END) -  (CASE WHEN a.fecha_hasta>:S_HASTA THEN :S_HASTA ELSE a.fecha_hasta END))+1, ';
        --l_columna:=l_columna|| 'END,';
        
        l_columna:=l_columna|| 'a.horas, ';
        l_columna:=l_columna|| 'a.ADJUNTO, ';
        l_columna:=l_columna|| 'a.ADJUNTOCITT, ';
        l_columna:=l_columna|| 'a.ADJUNTOVOUCHER, ';
        l_columna:=l_columna|| 'a.ADJUNTONIT, ';
        l_columna:=l_columna|| 'a.ADJUNTOVIVA, ';
        l_columna:=l_columna|| 'a.ADJUNTOPAGO ';
        

        if P_ID_DEPTO is not null then
          l_where:=l_where||'and a.id_depto='''||P_ID_DEPTO||''' ';
        end if;
        if P_ID_CONCEPTO_PERM_LIC>0 then
          l_where:=l_where||'and a.id_concepto_perm_lic in('||to_char(P_ID_CONCEPTO_PERM_LIC)||') ';
        end if;
        
         if P_ID_TIPO_SUSPENSION>0 then
          l_where:=l_where||'and a.ID_TIPO_SUSPENSION in('||to_char(P_ID_TIPO_SUSPENSION)||') ';
        end if;
        
        if P_PERIODO IS NOT NULL then
          l_where:=l_where||'and a.PERIODO in('''||to_char(P_PERIODO)||''') ';
        end if;
        
        
 
       l_query:='insert into ENOC.TT_LICENCIA_PERMISO(';
       l_query:=l_query|| 'ID_TRABAJADOR,ID_LICENCIA_PERMISO,ID_TIPO_PERM_LIC,ID_CONCEPTO_PERM_LIC,TIPO_PERM_LIC,NOMBRE,CODSUNAT,PERIODO,ID_ESTADO_LICA_PER,FECHA_DESDE,FECHA_HASTA, FECHA_DESDE_PROC,FECHA_HASTA_PROC,';
       l_query:=l_query|| 'DIAS,HORAS,DIAS_PROC,HORAS_PROC,ADJUNTO,ADJUNTOCITT,ADJUNTOVOUCHER,ADJUNTONIT,ADJUNTOVIVA,ADJUNTOPAGO) ';
       l_query:=l_query|| 'select ';
       l_query:=l_query|| l_trab || l_columna;
       l_query:=l_query|| 'from ENOC.VW_LICENCIA_PERMISO_REP a, moises.trabajador t, eliseo.vw_sede_area sa ';
       l_query:=l_query|| 'where a.id_trabajador=t.id_trabajador ';
       l_query:=l_query|| 'and t.id_sedearea=sa.id_sedearea ';
       l_query:=l_query|| 'and a.id_entidad=:S_ID_ENTIDAD ';
       l_query:=l_query|| 'and a.engrupo=''N'' ';
       l_query:=l_query|| 'and a.id_estado_lica_per not in(''00'',''04'') ';
       if P_ID_TRABAJADOR > 0 then
          l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
       end if;
       l_query:=l_query|| l_where;
       --IF P_TIPO='RA' THEN
        --l_query:=l_query||'and ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) ';
        --l_query:=l_query||'and ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ';
       /*ELSE
        l_query:=l_query||'and (to_char(a.fecha_desde,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''' or to_char(a.fecha_hasta,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''') ';
       END IF;*/
        l_query:=l_query||'and ( ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) or ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ) ';
       
       if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and sa.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||')';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and sa.id_area in('||P_ID_AREA||')';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
          end if;
        end if;
        
        if P_RESTRINGIDO='U' then
          l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
        end if;
       
       
       l_query:=l_query|| ' union all ';
       l_trab:='b.id_trabajador,';
       l_query:=l_query|| 'select ';
       l_query:=l_query|| l_trab || l_columna;
       l_query:=l_query|| 'from ENOC.VW_LICENCIA_PERMISO_REP a, enoc.plla_licencia_permiso_det b, moises.trabajador t, eliseo.vw_sede_area sa  ';
       l_query:=l_query|| 'where a.id_licencia_permiso=b.id_licencia_permiso ';
       l_query:=l_query|| 'and b.id_trabajador=t.id_trabajador ';
       l_query:=l_query|| 'and t.id_sedearea=sa.id_sedearea ';
       l_query:=l_query|| 'and a.id_entidad=:S_ID_ENTIDAD ';
       l_query:=l_query|| 'and a.engrupo=''S'' ';
       l_query:=l_query|| 'and a.id_estado_lica_per not in(''00'',''04'') ';
       if P_ID_TRABAJADOR > 0 then
          l_query:=l_query||'and b.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
       end if;
       l_query:=l_query|| l_where;
       --IF P_TIPO='RA' THEN
        --l_query:=l_query||'and ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) ';
        --l_query:=l_query||'and ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ';
       /*ELSE
        l_query:=l_query||'and (to_char(a.fecha_desde,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''' or to_char(a.fecha_hasta,''MMYYYY'')='''||l_mes||to_char(P_ID_ANHO)||''') ';
       END IF;*/
        l_query:=l_query||'and ( ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) or ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ) ';
       
       if P_RESTRINGIDO='S' then
         
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and sa.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||')';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and sa.id_area in('||P_ID_AREA||')';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and b.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
        end if;
        
        if P_RESTRINGIDO='U' then
          l_query:=l_query||'and b.id_trabajador='||to_char(P_ID_USER)||' ';
        end if;
        
        EXECUTE IMMEDIATE l_query USING l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta,l_desdes, l_hasta,
        l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta,l_desdes, l_hasta;
       
       /*IF P_TIPO='RA' THEN
        EXECUTE IMMEDIATE l_query USING l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta,
        l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,l_desdes, l_hasta,l_desdes, l_hasta;

       else
        EXECUTE IMMEDIATE l_query USING l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD,--l_desdes, l_hasta,
        l_desdes,l_desdes, l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,l_hasta,  P_ID_ENTIDAD;--,l_desdes, l_hasta;

       end if;
       */
      
    
      OPEN cursor FOR 
      select
      a.id_licencia_permiso,
      a.id_trabajador,
      a.periodo,
      a.FECHA_DESDE, 
      a.FECHA_HASTA, 
      a.FECHA_DESDE_PROC, 
      a.FECHA_HASTA_PROC, 
      a.horas,
      a.dias,
      a.horas_proc,
      --a.dias_proc,
      a.adjunto,
      a.adjuntocitt, 
      a.adjuntovoucher, 
      a.adjuntonit, 
      a.adjuntoviva, 
      a.adjuntopago,
      case when a.periodo='H' then a.dias else
      (a.FECHA_HASTA_PROC - a.FECHA_DESDE_PROC)+1
      end as dias_proc
      from ENOC.TT_LICENCIA_PERMISO a
      order by a.FECHA_DESDE;
        
      END SP_REPORTE_PERMISO_LIC_DET;
      
      
      
      PROCEDURE SP_REPORTE_PERMISO_LIC_TRAB(
        P_ID_TRABAJADOR NUMBER,
        P_TIPO VARCHAR2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_FECHA_DESDE DATE, 
        P_FECHA_HASTA DATE,
        CURSOR OUT SYS_REFCURSOR
        ) IS
          
          l_desdes date;
          l_hasta date;
          l_trab varchar2(100):='';
          l_columna varchar2(1500):='';
          l_query varchar2(4000):='';
          l_where varchar2(1500):='';
          l_id_tipo_nivel_vista number;
      BEGIN
      
      IF P_TIPO='RA' THEN
        l_desdes:=P_FECHA_DESDE;
        l_hasta:=P_FECHA_HASTA;
      ELSE
        select to_date('01-'||to_char(P_ID_MES)||'-'||to_char(P_ID_ANHO),'dd/mm/yyyy'),  TRUNC(LAST_DAY(to_date('01-'||to_char(P_ID_MES)||'-'||to_char(P_ID_ANHO),'dd/mm/yyyy'))) 
        into l_desdes,l_hasta
        from dual;
      END IF;
      
      
        l_query:='insert into ENOC.TT_LICENCIA_PERMISO(id_licencia_permiso,id_trabajador)';
        l_query:=l_query|| 'SELECT a.id_licencia_permiso,a.id_trabajador ';
        l_query:=l_query|| 'from ENOC.VW_LICENCIA_PERMISO a, moises.trabajador t ';
        l_query:=l_query|| 'where a.id_trabajador=t.id_trabajador ';
        l_query:=l_query|| 'and a.engrupo=''N'' ';
        l_query:=l_query||'AND ( ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) or ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ) ';
        l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
        l_query:=l_query|| ' union all ';
        l_query:=l_query|| 'SELECT a.id_licencia_permiso,a.id_trabajador ';
        l_query:=l_query|| 'from ENOC.VW_LICENCIA_PERMISO a, moises.trabajador t,enoc.plla_licencia_permiso_det b ';
        l_query:=l_query|| 'where a.id_trabajador=t.id_trabajador ';
        l_query:=l_query|| 'AND a.id_licencia_permiso=b.id_licencia_permiso ';
        l_query:=l_query|| 'and a.engrupo=''S'' ';
        l_query:=l_query||'AND ( ((a.fecha_desde between :S_DESDE and :S_HASTA) or (a.fecha_hasta between :S_DESDE and :S_HASTA)) or ((:S_DESDE between a.fecha_desde and a.fecha_hasta) or (:S_HASTA between a.fecha_desde and a.fecha_hasta)) ) ';
        l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_TRABAJADOR)||' ';
 
      
       
       EXECUTE IMMEDIATE l_query USING l_desdes,l_hasta, l_desdes,l_hasta,l_desdes,l_hasta,l_desdes,l_hasta, l_desdes,l_hasta,l_desdes,l_hasta;
     

      
      OPEN cursor FOR 
      select 
      a.id_licencia_permiso,
      x.id_trabajador,
      a.periodo,
      a.motivo,
      a.fecha_desde,
      a.fecha_hasta,
      a.dias,
      a.horas,
      c.nombre as concepto_perm_lic,
      tpl.nombre as tipo_perm_lic,
      g.nombre_corto as tipo_suspension,
      case when g.tipo = 'SP' then 'S.P.' when g.tipo = 'SI' then 'S.I.' else '' end as tipo,
      f.nombrecorto as estado,
      a.id_estado_lica_per,
      a.periodo,
      case when a.periodo='H' then to_char(a.fecha_desde, 'DD/MM/YYYY HH24:MI') else to_char(a.fecha_desde, 'DD/MM/YYYY') end as fecha_desde, 
      case when a.periodo='H'  then 'Horas' else 'Días' end as  nomperiodo,
      case when a.periodo='H' then to_char(a.fecha_hasta, 'HH24:MI') else to_char(a.fecha_hasta, 'DD/MM/YYYY') end as fecha_hasta,
      to_char(a.fecha_desde, 'HH24:mm') as hora_inicio, 
      to_char(a.fecha_hasta, 'HH24:mm') as hora_fin
      from ENOC.TT_LICENCIA_PERMISO x  
      INNER JOIN enoc.plla_licencia_permiso  a 
      ON x.id_licencia_permiso=a.id_licencia_permiso
      inner join enoc.plla_concepto_perm_lic c 
      on a.id_concepto_perm_lic=c.id_concepto_perm_lic
      inner join enoc.plla_tipo_perm_lic tpl
      on c.id_tipo_perm_lic=tpl.id_tipo_perm_lic
      inner join enoc.plla_tipo_suspension  g
      on c.id_tipo_suspension=g.id_tipo_suspension
      inner join enoc.plla_estado_lica_per  f
      on a.id_estado_lica_per=f.id_estado_lica_per
      order by a.id_licencia_permiso desc;
      
      
      END SP_REPORTE_PERMISO_LIC_TRAB;
        
      PROCEDURE SP_REPORTE_HIJO_TRABAJADOR(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIEMPO_TRABAJO NUMBER,
        P_ID_SITUACION_TRABAJADOR VARCHAR2,
        P_ID_AREA NUMBER,
        P_ID_AREAS VARCHAR2,
        P_SEXO NUMBER,
        P_EDAD_DESDE NUMBER,
        P_EDAD_HASTA NUMBER,
        P_DESDE DATE, 
        P_HASTA DATE,
        P_DATO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        ) AS
       
        l_query varchar2(4000):='';
        l_id_tipo_nivel_vista number;
        l_contar number:=0;
        l_id_conyuge number:=0;
        l_sustentoc varchar2(150);
        
        CURSOR curP IS
        SELECT  
        ID_PERSONA,
        ID_TRABAJADOR,
        SEXO
        FROM ENOC.TT_PADRES 
        ORDER BY SEXO;
      BEGIN
      
      if P_RESTRINGIDO='S' then
          select id_tipo_nivel_vista into l_id_tipo_nivel_vista from eliseo.lamb_acceso_nivel where id_acceso_nivel=P_ID_ACCESO_NIVEL;
      end if;
        
  --l_query:='(upper(convert(t.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'')';
   --DBMS_OUTPUT.PUT_LINE(l_query);   
      l_query:='INSERT INTO ENOC.TT_PADRES(ID_PERSONA,SEXO,ID_TRABAJADOR) ';
      l_query:=l_query||'select a.id_persona,a.sexo, a.id_trabajador from ENOC.VW_TRABAJADOR a , ENOC.VW_ENT_DEP_AREA_CCOSTO AR ';
      l_query:=l_query||'where A.ID_SEDEAREA=AR.ID_SEDEAREA ';
      l_query:=l_query||'AND a.id_entidad='||to_char(P_ID_ENTIDAD)||' ';
      l_query:=l_query||'AND AR.ID_DEPTO_PADRE='''||P_ID_DEPTO||''' ';
      if P_ID_AREA>0 then
        l_query:=l_query||'AND AR.ID_AREA='||to_char(P_ID_AREA)||' ';
      END IF;
      if P_ID_CONDICION_LABORAL IS NOT NULL then
         l_query:=l_query||'AND  A.ID_CONDICION_LABORAL='''||P_ID_CONDICION_LABORAL||''' ';
      END IF;
       if P_ID_TIEMPO_TRABAJO>0 then
        l_query:=l_query||'AND A.ID_TIPO_TIEMPO_TRABAJO='||to_char(P_ID_TIEMPO_TRABAJO)||' ';
      END IF;
      if P_ID_SITUACION_TRABAJADOR IS NOT NULL then
         l_query:=l_query||'AND  A.id_situacion_trabajador='''||P_ID_SITUACION_TRABAJADOR||''' ';
      END IF;
      if P_DATO IS NOT NULL then
       --l_query:=l_query||' (upper(convert(a.nombreapellido||'' ''||a.apellidonombre||'' ''||a.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
       l_query:=l_query||' and (upper(convert(a.nombre||'' ''||a.paterno||'' ''||a.materno||a.nombre||'' ''||a.paterno||'' ''||a.materno||a.nombre||'' ''||a.paterno||'' ''||a.materno||a.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
      END IF; 
      if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and AR.ID_DEPTO_PADRE in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||')';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and AR.id_area in('||P_ID_AREAS||')';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
      end if;
        
      if P_RESTRINGIDO='U' then
        l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_USER)||' ';
      end if;
      
      l_query:=l_query||'and a.id_persona  in( ';
        l_query:=l_query||'select x.id_persona from MOISES.VINCULO_FAMILIAR x , moises.persona_natural pn ';
        l_query:=l_query||'where x.id_registrado=pn.id_persona ';
        l_query:=l_query||'and x.ID_TIPO_VINCULO_FAMILIAR=''05''  ';
        if P_SEXO>0 then
          l_query:=l_query||'AND PN.SEXO='||to_char(P_SEXO)||' ';
        END IF;
        l_query:=l_query||'and x.ID_TIPO_ESTADO_VINCULO in(''01'',''02'') ';
        l_query:=l_query||'and (floor(months_between ( SYSDATE ,pn.fec_nacimiento)/12) between '||to_char(P_EDAD_DESDE)||' and '||to_char(P_EDAD_HASTA)||') ';
      l_query:=l_query||')';
      
      l_query:=l_query||' union ';
      
      l_query:=l_query||'select a.id_persona,a.sexo, a.id_trabajador from ENOC.VW_TRABAJADOR a , ENOC.VW_ENT_DEP_AREA_CCOSTO AR ';
      l_query:=l_query||'where A.ID_SEDEAREA=AR.ID_SEDEAREA ';
      l_query:=l_query||'AND a.id_entidad='||to_char(P_ID_ENTIDAD)||' ';
      l_query:=l_query||'AND AR.ID_DEPTO_PADRE='''||P_ID_DEPTO||''' ';
      if P_ID_AREA>0 then
        l_query:=l_query||'AND AR.ID_AREA='||to_char(P_ID_AREA)||' ';
      END IF;
      if P_ID_CONDICION_LABORAL IS NOT NULL then
         l_query:=l_query||'AND  A.ID_CONDICION_LABORAL='''||P_ID_CONDICION_LABORAL||''' ';
      END IF;
       if P_ID_TIEMPO_TRABAJO>0 then
        l_query:=l_query||'AND A.ID_TIPO_TIEMPO_TRABAJO='||to_char(P_ID_TIEMPO_TRABAJO)||' ';
      END IF;
      if P_ID_SITUACION_TRABAJADOR IS NOT NULL then
         l_query:=l_query||'AND  A.id_situacion_trabajador='''||P_ID_SITUACION_TRABAJADOR||''' ';
      END IF;
      if P_DATO IS NOT NULL then
       l_query:=l_query||' and (upper(convert(a.nombre||'' ''||a.paterno||'' ''||a.materno||a.nombre||'' ''||a.paterno||'' ''||a.materno||a.nombre||'' ''||a.paterno||'' ''||a.materno||a.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
      END IF; 
      if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and AR.ID_DEPTO_PADRE in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||')';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and AR.id_area in('||P_ID_AREAS||')';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
      end if;
        
      if P_RESTRINGIDO='U' then
        l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_USER)||' ';
      end if;
      
      l_query:=l_query||'and a.id_persona  in( ';
        l_query:=l_query||'select x.id_persona from MOISES.VINCULO_FAMILIAR x , moises.persona_natural pn,MOISES.VINCULO_FAMILIAR_SUPERIOR z ';
        l_query:=l_query||'where x.id_registrado=pn.id_persona ';
        l_query:=l_query||'AND x.ID_VINCULO_FAMILIAR =z.ID_VINCULO_FAMILIAR ';
        l_query:=l_query||'and x.ID_TIPO_VINCULO_FAMILIAR=''06''  ';
        if P_SEXO>0 then
          l_query:=l_query||'AND PN.SEXO='||to_char(P_SEXO)||' ';
        END IF;
        l_query:=l_query||'and x.ID_TIPO_ESTADO_VINCULO in(''01'',''02'') ';
        l_query:=l_query||'and z.ID_TIPO_ESTADO_VINCULO in(''01'',''02'') ';
        l_query:=l_query||'and (floor(months_between ( SYSDATE ,pn.fec_nacimiento)/12) between '||to_char(P_EDAD_DESDE)||' and '||to_char(P_EDAD_HASTA)||') ';
        if P_DESDE is not null then
          l_query:=l_query||'and (to_date('''||to_char(P_DESDE,'YYYY-MM-DD')||''',''YYYY-MM-DD'') BETWEEN z.desde AND z.hasta) ';
        end if;
        if P_HASTA is not null then
          l_query:=l_query||'and (to_date('''||to_char(P_HASTA,'YYYY-MM-DD')||''',''YYYY-MM-DD'') BETWEEN z.desde AND z.hasta) ';
        end if;
      l_query:=l_query||') ';
      l_query:=l_query||' order by SEXO ';
              
     EXECUTE IMMEDIATE l_query ;
   
      
      FOR cur in curP LOOP
      BEGIN
        l_id_conyuge:=0;
        l_sustentoc:='';
        select count(1) into l_contar from ENOC.TT_PADRES_CONYUGE_HIJOS 
        where ID_CONYUGE=cur.id_persona;
        if l_contar=0 then
        
          select count(1) into l_contar from MOISES.VINCULO_FAMILIAR x , moises.persona_natural pn
          where x.id_registrado=pn.id_persona
          and x.ID_TIPO_VINCULO_FAMILIAR='02' 
          and x.id_persona=cur.id_persona
          and x.ID_TIPO_ESTADO_VINCULO in('01','02') ;
          
          if l_contar=1 then
            select x.id_registrado, x.DOC_SUST_VF_URL into l_id_conyuge,l_sustentoc from MOISES.VINCULO_FAMILIAR x , moises.persona_natural pn
            where x.id_registrado=pn.id_persona
            and x.ID_TIPO_VINCULO_FAMILIAR='02' 
            and x.id_persona=cur.id_persona
            and x.ID_TIPO_ESTADO_VINCULO in('01','02') ;
          end if;
          
          
          l_query:='INSERT INTO ENOC.TT_PADRES_CONYUGE_HIJOS(ID_PADRE,ID_HIJO,ID_CONYUGE, DESDE,HASTA,SUSTENTO,SUSTENTOC,SUSTENTOH) ';
          l_query:=l_query||'select x.id_persona,x.id_registrado,'||l_id_conyuge||',NULL,NULL,NULL,'''||l_sustentoc||''',PN.DOCUMENTO_URL from MOISES.VINCULO_FAMILIAR x , moises.persona_natural pn ';
          l_query:=l_query||'where x.id_registrado=pn.id_persona ';
          l_query:=l_query||'and x.ID_TIPO_VINCULO_FAMILIAR=''05''  ';
          l_query:=l_query||'AND x.id_persona='||cur.id_persona||' ';
          l_query:=l_query||'AND x.id_VINCULO_FAMILIAR NOT IN(SELECT  F.id_VINCULO_FAMILIAR FROM MOISES.VINCULO_FAMILIAR_SUPERIOR F WHERE F.ID_TIPO_ESTADO_VINCULO in(''01'',''02'')) ';
          if P_SEXO>0 then
            l_query:=l_query||'AND PN.SEXO='||P_SEXO||' ';
          END IF;
          l_query:=l_query||'and x.ID_TIPO_ESTADO_VINCULO in(''01'',''02'') ';
          l_query:=l_query||'and (floor(months_between ( SYSDATE ,pn.fec_nacimiento)/12) between '||P_EDAD_DESDE||' and '||P_EDAD_HASTA||') ';
          l_query:=l_query||' union ';
          l_query:=l_query||'select x.id_persona,x.id_registrado,'||l_id_conyuge||',z.desde,z.hasta,z.HIJO_NIVEL_SUPERIOR_URL,'''||l_sustentoc||''',PN.DOCUMENTO_URL  from MOISES.VINCULO_FAMILIAR x , moises.persona_natural pn,MOISES.VINCULO_FAMILIAR_SUPERIOR z ';
          l_query:=l_query||'where x.id_registrado=pn.id_persona ';
          l_query:=l_query||'AND x.ID_VINCULO_FAMILIAR =z.ID_VINCULO_FAMILIAR ';
          l_query:=l_query||'and x.ID_TIPO_VINCULO_FAMILIAR=''05''  ';
          l_query:=l_query||'AND x.id_persona='||cur.id_persona||' ';
          if P_SEXO>0 then
            l_query:=l_query||'AND PN.SEXO='||P_SEXO||' ';
          END IF;
          l_query:=l_query||'and x.ID_TIPO_ESTADO_VINCULO in(''01'',''02'') ';
          l_query:=l_query||'and z.ID_TIPO_ESTADO_VINCULO in(''01'',''02'') ';
          l_query:=l_query||'and (floor(months_between ( SYSDATE ,pn.fec_nacimiento)/12) between '||P_EDAD_DESDE||' and '||P_EDAD_HASTA||') ';
          if P_DESDE is not null then
            l_query:=l_query||'and (to_date('''||to_char(P_DESDE,'YYYY-MM-DD')||''',''YYYY-MM-DD'') BETWEEN z.desde AND z.hasta) ';
          end if;
          if P_HASTA is not null then
            l_query:=l_query||'and (to_date('''||to_char(P_HASTA,'YYYY-MM-DD')||''',''YYYY-MM-DD'') BETWEEN z.desde AND z.hasta) ';
          end if;
           EXECUTE IMMEDIATE l_query ;
            --DBMS_OUTPUT.PUT_LINE(l_query);
        end if;
      END;
      END LOOP;
      
      update ENOC.TT_PADRES_CONYUGE_HIJOS set ID_CONYUGE=null where ID_CONYUGE=0;
   
      OPEN cursor FOR 
      select 
      A.ID_PADRE,
      T.ID_TRABAJADOR,
      T.APELLIDONOMBRE,
      TC.SIGLAS,
      T.NUM_DOCUMENTO,
      C.AREA,
      CL.NOMBRE AS CONDICION_LABORAL,
      TR.NOMBRE AS TIEMPO_TRABAJO,
      ST.NOMBRE AS SITUACION_TRABAJADOR,
      ST.NOMBRE_CORTO AS SITUACION_TRABAJADOR_CO,
      P.PUESTO,
      TO_CHAR(T.FECHA_INICIO,'DD/MM/YYYY') as FECHA_INICIO,
      TO_CHAR(T.FECHA_FIN_PREVISTO,'DD/MM/YYYY') as FECHA_FIN_PREVISTO,
      TO_CHAR(T.FECHA_FIN_EFECTIVO,'DD/MM/YYYY') as FECHA_FIN_EFECTIVO,
      A.ID_CONYUGE,
      TY.ID_TRABAJADOR AS ID_TRABAJADOR_Y,
      PNTY.APELLIDONOMBRE AS APELLIDONOMBRE_Y,
      TCY.SIGLAS AS SIGLAS_Y,
      PNTY.NUM_DOCUMENTO AS NUM_DOCUMENTO_Y,
      CY.AREA AS AREA_Y,
      CLY.NOMBRE AS CONDICION_LABORAL_Y,
      TRY.NOMBRE AS TIEMPO_TRABAJO_Y,
      STY.NOMBRE AS SITUACION_TRABAJADOR_Y,
      STY.NOMBRE_CORTO AS SITUACION_TRABAJADOR_CO_Y,
      PY.PUESTO AS PUESTO_Y,
      TO_CHAR(TY.FECHA_INICIO,'DD/MM/YYYY') as FECHA_INICIO_Y,
      TO_CHAR(TY.FECHA_FIN_PREVISTO,'DD/MM/YYYY') as FECHA_FIN_PREVISTO_Y,
      TO_CHAR(TY.FECHA_FIN_EFECTIVO,'DD/MM/YYYY') as FECHA_FIN_EFECTIVO_Y,
      
      A.ID_HIJO,
      TH.APELLIDONOMBRE AS APELLIDONOMBRE_H,
      TCH.SIGLAS AS SIGLAS_H,
      TH.NUM_DOCUMENTO AS NUM_DOCUMENTO_H,
      TO_CHAR(TH.fec_nacimiento,'DD/MM/YYYY') AS fec_nacimiento,
      floor(months_between ( SYSDATE ,TH.fec_nacimiento)/12) AS ANHOS,
      TO_CHAR(A.DESDE,'DD/MM/YYYY') as DESDE,
      TO_CHAR(A.HASTA,'DD/MM/YYYY') as HASTA,
      A.SUSTENTO,
      A.SUSTENTOC,
      A.SUSTENTOH,
      t.celular,
      t.correo,
      th.sexo
      FROM ENOC.TT_PADRES_CONYUGE_HIJOS A
      INNER JOIN ENOC.VW_TRABAJADOR T ON T.ID_PERSONA =A.ID_PADRE AND T.ID_ENTIDAD=P_ID_ENTIDAD
      INNER JOIN MOISES.TIPO_DOCUMENTO TC ON TC.ID_TIPODOCUMENTO=T.ID_TIPODOCUMENTO
      INNER JOIN MOISES.CONDICION_LABORAL CL ON CL.ID_CONDICION_LABORAL=T.ID_CONDICION_LABORAL
      INNER JOIN ENOC.VW_ENT_DEP_AREA_CCOSTO C ON C.ID_SEDEAREA=T.ID_SEDEAREA
      INNER JOIN ENOC.VW_PERFIL_PUESTO P ON P.ID_PERFIL_PUESTO =T.ID_PERFIL_PUESTO
      INNER JOIN MOISES.TIPO_TIEMPO_TRABAJO TR ON TR.ID_TIPO_TIEMPO_TRABAJO =T.ID_TIPO_TIEMPO_TRABAJO
      INNER JOIN MOISES.SITUACION_TRABAJADOR ST ON ST.ID_SITUACION_TRABAJADOR =T.ID_SITUACION_TRABAJADOR
      LEFT JOIN ENOC.VW_PERSONA_NATURAL PNTY ON PNTY.ID_PERSONA =A.ID_CONYUGE 
      LEFT JOIN ENOC.VW_TRABAJADOR TY ON TY.ID_PERSONA =A.ID_CONYUGE AND TY.ID_ENTIDAD=P_ID_ENTIDAD
      LEFT JOIN MOISES.TIPO_DOCUMENTO TCY ON TCY.ID_TIPODOCUMENTO=PNTY.ID_TIPODOCUMENTO
      LEFT JOIN MOISES.CONDICION_LABORAL CLY ON CLY.ID_CONDICION_LABORAL=TY.ID_CONDICION_LABORAL
      LEFT JOIN ENOC.VW_ENT_DEP_AREA_CCOSTO CY ON CY.ID_SEDEAREA=TY.ID_SEDEAREA
      LEFT JOIN ENOC.VW_PERFIL_PUESTO PY ON PY.ID_PERFIL_PUESTO =TY.ID_PERFIL_PUESTO
      LEFT JOIN MOISES.TIPO_TIEMPO_TRABAJO TRY ON TRY.ID_TIPO_TIEMPO_TRABAJO =TY.ID_TIPO_TIEMPO_TRABAJO
      LEFT JOIN MOISES.SITUACION_TRABAJADOR STY ON STY.ID_SITUACION_TRABAJADOR =TY.ID_SITUACION_TRABAJADOR
      LEFT JOIN ENOC.VW_PERSONA_NATURAL TH ON TH.ID_PERSONA =A.ID_HIJO 
      LEFT JOIN MOISES.TIPO_DOCUMENTO TCH ON TCH.ID_TIPODOCUMENTO=TH.ID_TIPODOCUMENTO
      order by T.APELLIDONOMBRE ;
        
      END SP_REPORTE_HIJO_TRABAJADOR;
      PROCEDURE SP_REPORTE_AYUDAS_EDUCATIVAS(
      P_ID_ENTIDAD NUMBER, 
      P_ID_SITUACION_TRABAJADOR VARCHAR2, 
      P_ID_CONDICION_LABORAL VARCHAR2,
      P_DATO VARCHAR2,
      P_ANHO_DESDES NUMBER, 
      P_ANHO_HASTA NUMBER, 
      CURSOR OUT SYS_REFCURSOR ) AS

      BEGIN
  
     
    
    OPEN cursor FOR  
    select 
    a.id_trabajador,
    a.tipodocresp,
    a.NUM_DOCUMENTO,
    a.APELLIDONOMBRE,
    a.DEPTO_PADRE,
    a.CONDICION_LABORAL,
    a.area,
    a.TIPO_TIEMPO_TRABAJO,
    to_char(a.FECHA_INICIO,'DD/MM/YYYY') as FECHA_INICIO,
    to_char(a.FECHA_FIN_PREVISTO,'DD/MM/YYYY') as FECHA_FIN_PREVISTO,
    a.SITUACION_TRABAJADOR,
    b.id_alumno_contrato,
    b.id_persona as id_alumno,
    b.id_resp_financiero,
    b.TIPO_RESP_FINANCIERO ,
    b.tipodocalum,
    b.num_alumno,
    b.alumno,
    b.semestre,
    b.sede,
    b.NIVEL_ENSENANZA,
    b.MODALIDAD_ESTUDIO,
    b.cod_alumno,
    b.ciclo,
    b.facultad,
    b.programa_estudio,
    b.plan_pago,
    b.anho,
    b.fec_nacimiento,
    b.edad,
    c.ID_CRITERIO_SEMESTRE,
    c.id_criterio, 
    c.descripcion,
    c.IMPORTE,
    c.modo_contrato
    from (
    select 
    t.id_trabajador,
    t.id_persona,
    ttd.SIGLAS as tipodocresp,
    t.NUM_DOCUMENTO,
    t.APELLIDONOMBRE,
    tar.DEPTO_PADRE,
    tcl.nombre as CONDICION_LABORAL,
    tar.area,
    ttt.NOMBRE as TIPO_TIEMPO_TRABAJO,
    t.FECHA_INICIO,
    t.FECHA_FIN_PREVISTO,
    tst.nombre as SITUACION_TRABAJADOR
    from enoc.vw_trabajador t,
    ENOC.VW_ENT_DEP_AREA_CCOSTO tar,
    MOISES.CONDICION_LABORAL tcl, 
    MOISES.SITUACION_TRABAJADOR tst,
    MOISES.TIPO_TIEMPO_TRABAJO ttt,
    ENOC.VW_PERFIL_PUESTO tpp,
    MOISES.TIPO_DOCUMENTO ttd
    where t.ID_SEDEAREA=tar.ID_SEDEAREA
    and t.ID_CONDICION_LABORAL=tcl.ID_CONDICION_LABORAL
    and t.ID_SITUACION_TRABAJADOR=tst.ID_SITUACION_TRABAJADOR
    and t.id_TIPO_TIEMPO_TRABAJO=ttt.ID_TIPO_TIEMPO_TRABAJO
    and t.ID_PERFIL_PUESTO=tpp.ID_PERFIL_PUESTO
    and t.id_entidad=P_ID_ENTIDAD
    and t.id_tipodocumento=ttd.ID_TIPODOCUMENTO
    and t.ID_SITUACION_TRABAJADOR like P_ID_SITUACION_TRABAJADOR
    and t.ID_CONDICION_LABORAL like P_ID_CONDICION_LABORAL
    and (translate(lower(t.APELLIDONOMBRE), 'áéíóúàèìòùãõâêîôôäëïöüçñÁÉÍÓÚÀÈÌÒÙÃÕÂÊÎÔÛÄËÏÖÜÇÑ','aeiouaeiouaoaeiooaeioucnAEIOUAEIOUAOAEIOOAEIOUCN') like translate(lower(P_DATO), 'áéíóúàèìòùãõâêîôôäëïöüçñÁÉÍÓÚÀÈÌÒÙÃÕÂÊÎÔÛÄËÏÖÜÇÑ','aeiouaeiouaoaeiooaeioucnAEIOUAEIOUAOAEIOOAEIOUCN') or t.NUM_DOCUMENTO like P_DATO)
    )a,
    (
    select 
    c.id_alumno_contrato,
    c.id_persona,
    c.id_resp_financiero,
    trf.nombre as TIPO_RESP_FINANCIERO ,
    tdoc.SIGLAS as tipodocalum,
    pn.NUM_DOCUMENTO as num_alumno,
    pn.APELLIDONOMBRE as alumno,
    se.semestre,
    sed.nombre as sede,
    ne.nombre as NIVEL_ENSENANZA,
    me.nombre as MODALIDAD_ESTUDIO,
    pna.codigo as cod_alumno,
    david.Ft_Calcular_Ciclo_Programa(se.semestre,c.id_persona,c.Id_Plan_Programa) as ciclo,
    sun.nombre as facultad,
    pe.nombre as programa_estudio,
    mpag.nombre as plan_pago,
    to_number(SUBSTR(se.semestre,1,4)) as anho,
    to_char(pn.fec_nacimiento,'DD/MM/YYYY') as fec_nacimiento,
    floor(months_between ( SYSDATE ,pn.fec_nacimiento)/12) AS edad
    from david.acad_alumno_contrato c, 
    DAVID.ACAD_SEMESTRE_PROGRAMA sp,
    david.acad_programa_estudio pe, 
    david.acad_semestre se,
    DAVID.TIPO_MODALIDAD_ESTUDIO me,
    DAVID.TIPO_NIVEL_ENSENANZA ne,
    ELISEO.VW_SEDE_AREA sun,
    ELISEO.VW_SEDE_AREA sue,
    eliseo.ORG_SEDE sed,
    moises.persona_natural_alumno pna,
    enoc.vw_persona_natural pn,
    MOISES.TIPO_DOCUMENTO tdoc,
    DAVID.TIPO_RESP_FINANCIERO trf,
    eliseo.MAT_PLANPAGO_SEMESTRE mpp,
    eliseo.MAT_PLANPAGO mpag
    where c.id_SEMESTRE_PROGRAMA=sp.id_SEMESTRE_PROGRAMA
    and sp.ID_PROGRAMA_ESTUDIO=pe.ID_PROGRAMA_ESTUDIO
    and sp.id_semestre=se.ID_SEMESTRE
    and pe.ID_MODALIDAD_ESTUDIO=me.ID_MODALIDAD_ESTUDIO
    and pe.ID_NIVEL_ENSENANZA=ne.ID_NIVEL_ENSENANZA
    and pe.ID_UNIDAD_ACADEMICA=sun.ID_SEDEAREA
    and pe.ID_SEDEAREA=sue.ID_SEDEAREA
    and sue.id_sede=sed.id_sede
    and c.id_persona=pna.id_persona
    and pna.id_persona=pn.id_persona
    and pn.ID_TIPODOCUMENTO=tdoc.ID_TIPODOCUMENTO
    and c.id_tipo_resp_financiero= trf.id_tipo_resp_financiero
    and c.ID_PLANPAGO_SEMESTRE=mpp.ID_PLANPAGO_SEMESTRE
    and mpp.ID_PLANPAGO= mpag.ID_PLANPAGO
    and c.estado='1'
    and to_number(SUBSTR(se.semestre,1,4)) between P_ANHO_DESDES and P_ANHO_HASTA 
    )b,
    (
    select cde.ID_ALUMNO_CONTRATO,csem.ID_CRITERIO_SEMESTRE,csem.id_criterio, csem.nombre as descripcion,cde.IMPORTE,mcont.nombre as modo_contrato 
    from eliseo.MAT_ALUMNO_CONTRATO_DET cde, eliseo.VW_MAT_CRITERIO_SEMESTRE csem, david.modo_contrato mcont
    where cde.ID_CRITERIO_SEMESTRE=csem.ID_CRITERIO_SEMESTRE
    and csem.id_modo_contrato= mcont.id_modo_contrato
    and csem.dc='C' and csem.codigo in( 'DESCHMENS','DHP','DSCTOHHPP')
    )c
    where a.id_persona=b.id_resp_financiero
    and b.ID_ALUMNO_CONTRATO=c.ID_ALUMNO_CONTRATO
    order by a.APELLIDONOMBRE,b.alumno,b.anho,b.semestre,c.id_criterio;
    
  END SP_REPORTE_AYUDAS_EDUCATIVAS;

END PKG_BENEFITS;