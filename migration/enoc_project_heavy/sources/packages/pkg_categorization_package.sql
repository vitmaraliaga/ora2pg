-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE                          PKG_CATEGORIZATION AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  PROCEDURE SP_COPIAR(P_ID_CATEGORIZACION NUMBER,P_ID_CATEGORIA_DOCENTE NUMBER,P_ID_CATEGORIZACION_COPIAR NUMBER,P_ID_CATEGORIA_DOCENTE_COPIAR NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_AUTOEVALUADOR(P_ID_CATEGORIZACION NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PROCESAR_ITEM_ENCUESTA(P_ID_CATEGORIZACION NUMBER, P_ID_CATEGORIA_DOCENTE NUMBER,P_ID_DEPTO VARCHAR2,P_ID_CONDICION NUMBER,P_ID_DOCENTE NUMBER,P_ID_AREA NUMBER,P_TIPO VARCHAR2,P_TIPO_PROC VARCHAR2,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_EXP_DOCENCIA(P_ID_PERSONA NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_RESULTADO(P_ID_CUESTIONARIO NUMBER,P_COD_TIPO_INT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2) ;
  
END PKG_CATEGORIZATION;


CREATE OR REPLACE PACKAGE BODY                                                                  PKG_CATEGORIZATION AS

PROCEDURE SP_COPIAR(P_ID_CATEGORIZACION NUMBER,P_ID_CATEGORIA_DOCENTE NUMBER,P_ID_CATEGORIZACION_COPIAR NUMBER,P_ID_CATEGORIA_DOCENTE_COPIAR NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
AS
 l_contar number;
 l_error number:=0;
 l_msgerror varchar2(200):='';
 l_id number;
 l_copiar number:=0;
BEGIN

  if P_ID_CATEGORIZACION = P_ID_CATEGORIZACION_COPIAR then
    if P_ID_CATEGORIA_DOCENTE=P_ID_CATEGORIA_DOCENTE_COPIAR then
      l_error:=1;
      l_msgerror:='No es posible copiar del mismo categoria docente para la misma categorización';
      goto salida;
    end if;
    l_copiar:=1;
  end if;
  
  
  select coalesce(max(id_item_categoria),0) into l_id from enoc.cat_item_categoria;
  
  insert into enoc.cat_item_categoria(
  ID_ITEM_CATEGORIA,
  ID_CATEGORIZACION,
  ID_ITEM,
  TIPO_EVALUACION,
  EVALUA,
  OBLIGATORIO,
  ID_CATEGORIA_DOCENTE,
  UNIDAD,
  PUNTOS,
  MINIMO,
  MAXIMO,
  ID_ITEM_CATEGORIA_ANT,
  ID_USER_REG,
  FECHA_REG,
  ID_TIPO_EVAL_INSTRUMENTO,
  ID_SECCION
  )
  select 
  (row_number() OVER( ORDER BY ID_ITEM_CATEGORIA ASC )) + l_id as ID_ITEM_CATEGORIA ,
  P_ID_CATEGORIZACION,
  ID_ITEM,
  TIPO_EVALUACION,
  EVALUA,
  OBLIGATORIO,
  P_ID_CATEGORIA_DOCENTE,
  UNIDAD,
  PUNTOS,
  MINIMO,
  MAXIMO,
  ID_ITEM_CATEGORIA,
  P_ID_USER,
  SYSDATE,
  case when l_copiar=1 then ID_TIPO_EVAL_INSTRUMENTO else null end,
  case when l_copiar=1 then ID_SECCION else null end
  from enoc.cat_item_categoria 
  where ID_CATEGORIZACION = P_ID_CATEGORIZACION_COPIAR
  and ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE_COPIAR
  and id_item not in(
    select id_item from enoc.cat_item_categoria
    where ID_CATEGORIZACION = P_ID_CATEGORIZACION
    and ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE
  );

  --FORMULA
  select coalesce(max(ID_ITEM_FORMULA),0) into l_id from enoc.CAT_ITEM_FORMULA;
  
  INSERT INTO enoc.CAT_ITEM_FORMULA(
    ID_ITEM_FORMULA,
    ID_ITEM_CATEGORIA,
    NOMBRE,
    DESDE,
    HASTA,
    PUNTO,
    ID_USER_REG,
    FECHA_REG
  )
  select 
  (row_number() OVER( ORDER BY B.ID_ITEM_FORMULA ASC )) + l_id as ID_ITEM_FORMULA,
  A.ID_ITEM_CATEGORIA,
  B.NOMBRE,
  B.DESDE,
  B.HASTA,
  B.PUNTO,
  P_ID_USER,
  SYSDATE
  from enoc.cat_item_categoria A,enoc.CAT_ITEM_FORMULA B
  where A.ID_ITEM_CATEGORIA_ANT=B.ID_ITEM_CATEGORIA
  AND A.ID_CATEGORIZACION = P_ID_CATEGORIZACION
  and A.ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE
  AND  A.ID_ITEM_CATEGORIA NOT IN(
    SELECT A.ID_ITEM_CATEGORIA
    from enoc.cat_item_categoria A,enoc.CAT_ITEM_FORMULA B
    where A.ID_ITEM_CATEGORIA=B.ID_ITEM_CATEGORIA
    AND A.ID_CATEGORIZACION = P_ID_CATEGORIZACION
    and A.ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE
  );
   

  <<salida>>
  P_ERROR:=l_error;
  P_MSGERROR:=l_msgerror;
  
END SP_COPIAR;

PROCEDURE SP_GENERAR_AUTOEVALUADOR(P_ID_CATEGORIZACION NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
AS
 l_contar number;
 l_error number:=0;
 l_msgerror varchar2(200):='';
 l_id number;
 l_id_tipo_evaluador number;
 l_id_tipo_eval_instrumento number;
BEGIN

  SELECT id_tipo_evaluador into l_id_tipo_evaluador FROM  ENOC.CAT_TIPO_EVALUADOR where CODIGO='AU';

  SELECT COUNT(1) INTO l_contar FROM ENOC.CAT_TIPO_EVAL_INSTRUMENTO
  WHERE  ID_TIPO_EVALUADOR=l_id_tipo_evaluador
  AND ID_CATEGORIZACION=P_ID_CATEGORIZACION;

  if l_contar =0 THEN
      l_error:=1;
      l_msgerror:='FALTA ASIGNAR INSTRUMENTO PARA TIPO AUTOEVALUADOR';
      goto salida;
  ELSE
    if l_contar >1 THEN
      l_error:=1;
      l_msgerror:='MÁS DE UN INSTRUMENTO ASIGNADO PARA TIPO AUTOEVALUADOR';
      goto salida;
    END IF;
    
  end if;
  
  --INSERTA COMO EVALUADORES
  select coalesce(max(ID_EVALUADOR),0) into l_id from enoc.CAT_EVALUADOR;
  INSERT INTO ENOC.CAT_EVALUADOR(
  ID_EVALUADOR,
  ID_CATEGORIZACION,
  ID_PERSONA,
  ID_USER_REG,
  FECHA_REG
  )
  SELECT 
  (row_number() OVER( ORDER BY ID_DOCENTE ASC )) + l_id as ID_EVALUADOR ,
  P_ID_CATEGORIZACION,
  ID_PERSONA,
  P_ID_USER,
  SYSDATE
  from ENOC.CAT_DOCENTE 
  WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  AND ID_ESTADO_DOCENTE NOT IN('00')
  AND ID_PERSONA NOT IN(
    SELECT ID_PERSONA from ENOC.CAT_EVALUADOR 
    WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  );
  
  --INSERTAR TIPO EVALUADOR
   select coalesce(max(ID_EVALUADOR_DET),0) into l_id from enoc.CAT_EVALUADOR_DET;
  INSERT INTO ENOC.CAT_EVALUADOR_DET(
  ID_EVALUADOR_DET,
  ID_EVALUADOR,
  ID_TIPO_EVALUADOR,
  ID_USER_REG,
  FECHA_REG
  )
  SELECT 
  (row_number() OVER( ORDER BY ID_EVALUADOR ASC )) + l_id as ID_EVALUADOR_DET ,
  ID_EVALUADOR,
  l_id_tipo_evaluador,
  P_ID_USER,
  SYSDATE
  from ENOC.CAT_EVALUADOR  
  WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  AND ID_PERSONA  IN(
      SELECT ID_PERSONA from ENOC.CAT_DOCENTE 
      WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  ) AND ID_EVALUADOR NOT IN(
    SELECT ID_EVALUADOR FROM ENOC.CAT_EVALUADOR_DET 
    WHERE  ID_TIPO_EVALUADOR=l_id_tipo_evaluador
    AND ID_EVALUADOR IN(
       SELECT ID_EVALUADOR FROM ENOC.CAT_EVALUADOR
       WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
    )
  );
  
  SELECT id_tipo_eval_instrumento INTO l_id_tipo_eval_instrumento 
  FROM ENOC.CAT_TIPO_EVAL_INSTRUMENTO
  WHERE  ID_TIPO_EVALUADOR=l_id_tipo_evaluador
  AND ID_CATEGORIZACION=P_ID_CATEGORIZACION;
  
  --insertar evaluador docente
  select coalesce(max(ID_DOCENTE_EVALUADOR),0) into l_id from enoc.CAT_DOCENTE_EVALUADOR;
  insert into ENOC.CAT_DOCENTE_EVALUADOR(
  ID_DOCENTE_EVALUADOR,
  ID_DOCENTE,
  ID_EVALUADOR_DET,
  ID_TIPO_EVAL_INSTRUMENTO,
  ID_USER_REG,
  FECHA_REG,
  FINALIZADO
  )
  select 
  (row_number() OVER( ORDER BY ID_EVALUADOR_DET ASC )) + l_id as ID_DOCENTE_EVALUADOR ,
  c.id_docente,
  a.ID_EVALUADOR_DET,
  l_id_tipo_eval_instrumento,
  P_ID_USER,
  SYSDATE,
  'N'
  from ENOC.CAT_EVALUADOR_DET a, ENOC.CAT_EVALUADOR b, ENOC.CAT_DOCENTE c
  WHERE a.ID_EVALUADOR=b.ID_EVALUADOR
  and b.id_persona=c.id_persona
  and b.ID_CATEGORIZACION=c.ID_CATEGORIZACION
  and b.ID_CATEGORIZACION=P_ID_CATEGORIZACION
  and a.ID_TIPO_EVALUADOR=l_id_tipo_evaluador
  and c.id_docente not in(
    select x.id_docente from ENOC.CAT_DOCENTE_EVALUADOR x
    where x.ID_EVALUADOR_DET=a.ID_EVALUADOR_DET
    and x.ID_TIPO_EVAL_INSTRUMENTO=l_id_tipo_eval_instrumento
  );
  
 
  <<salida>>
  P_ERROR:=l_error;
  P_MSGERROR:=l_msgerror;
  
END SP_GENERAR_AUTOEVALUADOR;

PROCEDURE SP_PROCESAR_ITEM_ENCUESTA(P_ID_CATEGORIZACION NUMBER, P_ID_CATEGORIA_DOCENTE NUMBER,P_ID_DEPTO VARCHAR2,P_ID_CONDICION NUMBER,P_ID_DOCENTE NUMBER,P_ID_AREA NUMBER,P_TIPO VARCHAR2,P_TIPO_PROC VARCHAR2,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
IS
 --P_TIPO_PROC P: PROCESO, C:CIERRE, E: PROCESO ENCUESTA
 l_error number:=0;
 l_msgerror varchar2(200):='';
 l_id_docente number;
 l_id_persona number;
 l_id_categoria_docente number;
 
 CURSOR curDocente IS
   SELECT A.ID_DOCENTE,A.ID_PERSONA,A.ID_CATEGORIA_DOCENTE ,A.ID_ESTADO_DOCENTE,A.ID_CONDICION
   FROM ENOC.CAT_DOCENTE A, ENOC.VW_ENT_DEP_AREA_CCOSTO B
   WHERE A.ID_SEDEAREA=B.ID_SEDEAREA
   AND A.ID_CATEGORIZACION=P_ID_CATEGORIZACION
   AND A.ID_ESTADO_DOCENTE NOT IN('04','00')--04 DESISTIO, 00: ANULADO
   AND CASE WHEN P_TIPO='D' THEN  COALESCE(CIERRE_EVALUACION,0) ELSE COALESCE(CIERRE_ENTREVISTA,0) END = 0
   AND CASE WHEN P_ID_DEPTO IS NOT NULL THEN B.ID_DEPTO_PADRE ELSE '0' END =  CASE WHEN P_ID_DEPTO IS NOT NULL THEN P_ID_DEPTO ELSE '0' END
   AND CASE WHEN P_ID_CATEGORIA_DOCENTE <> 0 THEN A.ID_CATEGORIA_DOCENTE ELSE 0 END =  CASE WHEN P_ID_CATEGORIA_DOCENTE <> 0 THEN P_ID_CATEGORIA_DOCENTE ELSE 0 END
   AND CASE WHEN P_ID_CONDICION  <> 0  THEN A.ID_CONDICION  ELSE 0 END =  CASE WHEN P_ID_CONDICION  <> 0 THEN P_ID_CONDICION ELSE 0 END
   AND CASE WHEN P_ID_AREA  <> 0 THEN A.ID_AREA  ELSE 0 END =  CASE WHEN P_ID_AREA  <> 0 THEN P_ID_AREA ELSE 0 END
   AND CASE WHEN P_ID_DOCENTE  <> 0 THEN A.ID_DOCENTE  ELSE 0 END =  CASE WHEN P_ID_DOCENTE  <> 0 THEN P_ID_DOCENTE ELSE 0 END
   ORDER BY A.ID_DOCENTE;
 
 CURSOR curItem IS
  SELECT 
  B.ID_ITEM_CATEGORIA, 
  D.ID_INSTRUMENTO, 
  D.ID_SALA, 
  C.CODIGO, 
  B.ID_SECCION ,
  D.ID_TIPO_EVALUADOR,
  B.TIPO_EVALUACION,
  coalesce(B.PUNTOS,0) as PUNTOS,
  coalesce(B.UNIDAD,0) as UNIDAD,
  coalesce(B.MAXIMO,0) AS MAXIMO,
  coalesce(B.MINIMO,0) AS MINIMO
  FROM enoc.VW_CAT_ITEM A, enoc.CAT_ITEM_CATEGORIA B ,enoc.CAT_TIPO_ITEM C, enoc.CAT_TIPO_EVAL_INSTRUMENTO D
  WHERE A.ID_ITEM=B.ID_ITEM
  AND A.ID_TIPO_ITEM=C.ID_TIPO_ITEM
  AND B.ID_TIPO_EVAL_INSTRUMENTO=D.ID_TIPO_EVAL_INSTRUMENTO
  AND C.CODIGO IN('RE','RES')
  AND A.TIPO=P_TIPO --D: DOCUEMNTO, E:ENTREVISTA
  AND B.ID_CATEGORIZACION=P_ID_CATEGORIZACION
  AND B.ID_CATEGORIA_DOCENTE=l_id_categoria_docente
  AND D.ID_SALA IN(
    select  X.ID_SALA
    from lucas.instrumento_cuestionario  X
    where X.id_instrumento= D.ID_INSTRUMENTO 
    and X.id_persona=l_id_persona
    AND X.ID_EVALUADOR IN(
      select Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
      where W.id_evaluador_det=Y.id_evaluador_det
      and Y.id_evaluador=P.id_evaluador
      and P.id_categorizacion=P_ID_CATEGORIZACION
      AND W.ID_DOCENTE=l_id_docente
      and Y.id_tipo_evaluador=D.id_tipo_evaluador
    )
  )
  ORDER BY B.ID_ITEM_CATEGORIA;
  
  l_cantidad number(10,2):=0;
  l_total number(10,2):=0;
  l_puntaje number(10,2):=0;
  l_cant_puntaje number(10,2):=0;
  l_id_resultado number;
  l_contar number;
  l_puntaje_final number(10,2):=0;
  l_eval number:=0;
  l_pje_entrevista number(10,2):=0;
  l_pje_grupal number(10,2):=0;
  l_pje_individual number(10,2):=0;
  l_puntaje_min number(10,2):=0;
  l_puntaje_max_opc number(10,2):=0;
  
  l_pje_grupal_ob number(10,2):=0;
  l_pje_individual_ob number(10,2):=0;
  l_pje_grupal_op number(10,2):=0;
  l_pje_individual_op number(10,2):=0;
  l_final number(10,2):=0;
  l_estado_docente varchar2(5);
  l_id_docente_estado number;
  l_i number:=0;
  l_pje_grupal_op_real number(10,2):=0;
  l_pje_individual_op_real number(10,2):=0;
BEGIN
  FOR curD in curDocente LOOP
  BEGIN
    l_id_docente:=curD.ID_DOCENTE;
    l_id_persona:=curD.ID_PERSONA;
    l_id_categoria_docente:=curD.ID_CATEGORIA_DOCENTE;
    
    FOR curI in curItem LOOP
    BEGIN
      l_cant_puntaje:=0;
      l_puntaje:=0;
      l_puntaje_final:=0;
      IF curI.CODIGO ='RES' THEN
      
        select COUNT(1) into  l_cantidad
        from lucas.instrumento_cuestionario  X
        where X.id_instrumento= curI.ID_INSTRUMENTO
        and X.id_persona=l_id_persona
        AND X.ID_SALA=curI.ID_SALA
        AND X.ID_EVALUADOR IN(
            select Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
            where W.id_evaluador_det=Y.id_evaluador_det
            and Y.id_evaluador=P.id_evaluador
            and P.id_categorizacion=P_ID_CATEGORIZACION
            AND W.ID_DOCENTE=l_id_docente
            and Y.id_tipo_evaluador=curI.ID_TIPO_EVALUADOR
        );
        
        select  COALESCE(SUM(coalesce(b.valor_respuesta,0)),0) into  l_total
        from lucas.INSTRUMENTO_ITEM a ,
        lucas.instrumento_respuesta b
        WHERE a.id_item=b.id_alternativa
        AND a.id_instrumento= curI.ID_INSTRUMENTO
        AND  b.id_cuestionario IN(
          select X.id_cuestionario
          from lucas.instrumento_cuestionario  X
          where X.id_instrumento= curI.ID_INSTRUMENTO
          and X.id_persona=l_id_persona
          AND X.ID_SALA=curI.ID_SALA
          AND X.ID_EVALUADOR IN(
              select Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
              where W.id_evaluador_det=Y.id_evaluador_det
              and Y.id_evaluador=P.id_evaluador
              and P.id_categorizacion=P_ID_CATEGORIZACION
              AND W.ID_DOCENTE=l_id_docente
              and Y.id_tipo_evaluador=curI.ID_TIPO_EVALUADOR
          )
        )
        AND A.ID_PARENT=curI.ID_SECCION;
        

        if l_cantidad>0 then
          l_cant_puntaje:=round(l_total/l_cantidad,0);
        end if;
        
      ELSE
        select  round(coalesce(avg(x.puntaje_con_formula),0),0)  INTO l_cant_puntaje
        from lucas.instrumento_cuestionario  X
        where X.id_instrumento= curI.ID_INSTRUMENTO
        and X.id_persona=l_id_persona
        AND X.ID_SALA=curI.ID_SALA
        AND X.ID_EVALUADOR IN(
            select Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
            where W.id_evaluador_det=Y.id_evaluador_det
            and Y.id_evaluador=P.id_evaluador
            and P.id_categorizacion=P_ID_CATEGORIZACION
            AND W.ID_DOCENTE=l_id_docente
            and Y.id_tipo_evaluador=curI.ID_TIPO_EVALUADOR
        );
      END IF;
      
      --calculo puntaje
      
      if curI.TIPO_EVALUACION ='R' then
        l_puntaje := 0;
        
        select count(1) into l_contar from enoc.CAT_ITEM_FORMULA 
        where ID_ITEM_CATEGORIA= curI.ID_ITEM_CATEGORIA
        and (l_cant_puntaje between coalesce(DESDE,0) and case when coalesce(HASTA,0)=0 then l_cant_puntaje else coalesce(HASTA,0) end);
        
        IF l_contar=1 THEN
          select COALESCE(punto,0) INTO l_puntaje from enoc.CAT_ITEM_FORMULA 
          where ID_ITEM_CATEGORIA= curI.ID_ITEM_CATEGORIA
          and (l_cant_puntaje between coalesce(DESDE,0) and case when coalesce(HASTA,0)=0 then l_cant_puntaje else coalesce(HASTA,0) end);
        END IF;
        
        l_puntaje_final:=l_puntaje;
        
      else
        l_puntaje := 0;
        if curI.UNIDAD>0 then
          l_puntaje := (curI.PUNTOS * l_cant_puntaje)/curI.UNIDAD;
        end if;
        l_puntaje_final:=l_puntaje;
        
      end if;
      
      IF curI.MINIMO> 0 THEN
          IF l_puntaje<curI.MINIMO THEN
            l_puntaje_final:=0;
            l_eval:=1;
          END IF;
      END IF;
        
      if l_eval=0 then
          IF curI.MAXIMO> 0 THEN
            IF l_puntaje>curI.MAXIMO THEN
              l_puntaje_final:=curI.MAXIMO;
              l_eval:=1;
            END IF;
          END IF;
      end if;
      
      l_i:=l_i+1;
      
      select count(1) into l_contar from ENOC.CAT_RESULTADO where id_docente=l_id_docente and ID_ITEM_CATEGORIA=curI.ID_ITEM_CATEGORIA;
      
      if l_contar=0 then
        select coalesce(max(ID_RESULTADO),0) + 1 into l_id_resultado from ENOC.CAT_RESULTADO;
        
        insert into ENOC.CAT_RESULTADO(
          ID_RESULTADO,
          ID_ITEM_CATEGORIA,
          ID_DOCENTE,
          PJE_INDIVIDUAL,
          PJE_GRUPAL,
          CANT_ORIGEN,
          CANT_ASIG_INDIVIDUAL,
          CANT_ASIG_GRUPAL,
          ID_USER_REG,
          FECHA_REG
        )values(
          l_id_resultado,
          curI.ID_ITEM_CATEGORIA,
          l_id_docente,
          l_puntaje_final,
          l_puntaje_final,
          l_cant_puntaje,
          l_cant_puntaje,
          l_cant_puntaje,
          P_ID_USER,
          sysdate
        );
      else
        update ENOC.CAT_RESULTADO set
          PJE_INDIVIDUAL=l_puntaje_final,
          PJE_GRUPAL=l_puntaje_final,
          CANT_ORIGEN=l_cant_puntaje,
          CANT_ASIG_INDIVIDUAL=l_cant_puntaje,
          CANT_ASIG_GRUPAL=l_cant_puntaje,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD=sysdate
        where id_docente=l_id_docente 
        and ID_ITEM_CATEGORIA=curI.ID_ITEM_CATEGORIA;
        
      end if;
            
    END;
    END LOOP;
    
    
    
    --CALCULO FINAL
    l_pje_grupal:=0;
    l_pje_individual:=0;
    l_final:=0;
    l_estado_docente:= '';
    
    SELECT COALESCE(PUNTAJE_MINIMO,0),COALESCE(PORCENTAJE,0) INTO l_puntaje_min, l_puntaje_max_opc
    FROM ENOC.CAT_APROBACION
    WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
    AND ID_CATEGORIA_DOCENTE=l_id_categoria_docente
    AND ID_CONDICION = curD.ID_CONDICION;
    
    IF P_TIPO='D' THEN
    
      SELECT count(1) INTO l_contar
      FROM ENOC.CAT_APROBACION
      WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
      AND ID_CATEGORIA_DOCENTE=l_id_categoria_docente
      AND ID_CONDICION = curD.ID_CONDICION;
      
      if l_contar=1 then
      
        
        
        SELECT 
        coalesce(sum(case when b.obligatorio='O' then c.PJE_GRUPAL else 0 end),0) as l_pje_grupal_ob,
        coalesce(sum(case when b.obligatorio='OP' then c.PJE_GRUPAL else 0 end),0) as l_pje_grupal_op,
        coalesce(sum(case when b.obligatorio='O' then c.PJE_INDIVIDUAL else 0 end),0) as l_pje_individual_ob,
        coalesce(sum(case when b.obligatorio='OP' then c.PJE_INDIVIDUAL else 0 end),0) as l_pje_individual_op
        into
        l_pje_grupal_ob,
        l_pje_grupal_op,
        l_pje_individual_ob,
        l_pje_individual_op
        FROM enoc.VW_CAT_ITEM A, enoc.CAT_ITEM_CATEGORIA B ,ENOC.CAT_RESULTADO C
        WHERE A.ID_ITEM=B.ID_ITEM
        AND B.ID_ITEM_CATEGORIA=C.ID_ITEM_CATEGORIA
        AND B.ID_CATEGORIZACION=P_ID_CATEGORIZACION
        AND B.ID_CATEGORIA_DOCENTE=l_id_categoria_docente 
        AND C.id_docente=l_id_docente
        AND A.TIPO='D';
        
        l_pje_grupal_op_real:= l_pje_grupal_op;
        l_pje_individual_op_real:=l_pje_individual_op;
        
        if l_puntaje_max_opc>0 then
          if l_pje_grupal_op>l_puntaje_max_opc then
            l_pje_grupal_op:=l_puntaje_max_opc;
          end if;
          if l_pje_individual_op>l_puntaje_max_opc then
            l_pje_individual_op:=l_puntaje_max_opc;
          end if;
        end if;
        
        l_pje_grupal:=l_pje_grupal_ob+l_pje_grupal_op;
        l_pje_individual:=l_pje_individual_ob+l_pje_individual_op;
       
        IF P_TIPO_PROC in('P','E') THEN
          UPDATE ENOC.CAT_DOCENTE SET
            PJE_INDIVIDUAL=l_pje_individual,
            PJE_INDIVIDUAL_OPC= l_pje_individual_op,
            PJE_INDIVIDUAL_OBL=l_pje_individual_ob,
            PJE_GRUPAL=l_pje_grupal,
            PJE_GRUPAL_OPC=l_pje_grupal_op,
            PJE_GRUPAL_OBL=l_pje_grupal_ob,
            PJE_INDIVIDUAL_OPC_REAL=l_pje_individual_op_real,
            PJE_GRUPAL_OPC_REAL=l_pje_grupal_op_real,
            ID_USER_MOD=P_ID_USER,
            FECHA_MOD=sysdate
          WHERE ID_DOCENTE=l_id_docente;
        ELSE
          UPDATE ENOC.CAT_DOCENTE SET
            PJE_INDIVIDUAL=l_pje_individual,
            PJE_INDIVIDUAL_OPC= l_pje_individual_op,
            PJE_INDIVIDUAL_OBL=l_pje_individual_ob,
            PJE_GRUPAL=l_pje_grupal,
            PJE_GRUPAL_OPC=l_pje_grupal_op,
            PJE_GRUPAL_OBL=l_pje_grupal_ob,
            PJE_INDIVIDUAL_OPC_REAL=l_pje_individual_op_real,
            PJE_GRUPAL_OPC_REAL=l_pje_grupal_op_real,
            CIERRE_EVALUACION=1,
            ID_USER_MOD=P_ID_USER,
            FECHA_MOD=sysdate
          WHERE ID_DOCENTE=l_id_docente;
        END IF;

      end if;
      
    ELSE
      SELECT COALESCE(SUM(C.PJE_GRUPAL),0) INTO  l_pje_entrevista
      FROM enoc.VW_CAT_ITEM A, enoc.CAT_ITEM_CATEGORIA B ,ENOC.CAT_RESULTADO C
      WHERE A.ID_ITEM=B.ID_ITEM
      AND B.ID_ITEM_CATEGORIA=C.ID_ITEM_CATEGORIA
      AND B.ID_CATEGORIZACION=P_ID_CATEGORIZACION
      AND B.ID_CATEGORIA_DOCENTE=l_id_categoria_docente 
      AND C.id_docente=l_id_docente
      AND A.TIPO='E'; --D: DOCUEMNTO, E:ENTREVIST;
     
      IF P_TIPO_PROC='C' THEN
        UPDATE ENOC.CAT_DOCENTE SET
          PJE_ENTREVISTA=l_pje_entrevista,
          APROB_ENTREVISTA='1',
          CIERRE_ENTREVISTA=1,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD=sysdate
        WHERE ID_DOCENTE=l_id_docente;

      ELSE
        UPDATE ENOC.CAT_DOCENTE SET
          PJE_ENTREVISTA=l_pje_entrevista,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD=sysdate
        WHERE ID_DOCENTE=l_id_docente;
      END IF;
    END IF;
    
    
    --FINAL
    
    SELECT COALESCE(PJE_GRUPAL,0) + COALESCE(PJE_ENTREVISTA,0) INTO l_final FROM ENOC.CAT_DOCENTE WHERE ID_DOCENTE=l_id_docente;
    
    IF P_TIPO_PROC='E' THEN
      l_estado_docente:=curD.ID_ESTADO_DOCENTE;
    ELSE
      if l_final>=l_puntaje_min then
        l_estado_docente:='02';
      else
        l_estado_docente:='03';
      end if;
    END IF;
    
    UPDATE ENOC.CAT_DOCENTE SET
      ID_ESTADO_DOCENTE=l_estado_docente,
      ID_USER_MOD=P_ID_USER,
      FECHA_MOD=sysdate
    WHERE ID_DOCENTE=l_id_docente;
 
    IF l_estado_docente<>curD.ID_ESTADO_DOCENTE THEN
      
      select coalesce(max(ID_DOCENTE_ESTADO),0) + 1 into l_id_docente_estado from ENOC.CAT_DOCENTE_ESTADO;
      
      insert into ENOC.CAT_DOCENTE_ESTADO(
        ID_DOCENTE_ESTADO,
        ID_ESTADO_DOCENTE,
        ID_DOCENTE,
        ID_USER,
        FECHA
      )values(
        l_id_docente_estado,
        l_estado_docente,
        l_id_docente,
        P_ID_USER,
        sysdate
      );
      

    END IF;
      --FIN FINAL
      
  END;
  END LOOP;
  
  if l_i =0 then
    --l_error:=1;
    l_msgerror:='No hay datos para procesar';
  end if;
  
  <<salida>>
  P_ERROR:=l_error;
  P_MSGERROR:=l_msgerror;
  
END SP_PROCESAR_ITEM_ENCUESTA;

PROCEDURE SP_GENERAR_EXP_DOCENCIA(P_ID_PERSONA NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) AS
 L_ID number:=0;
 l_error number:=0;
 l_msgerror varchar2(200):='';
BEGIN 

    select coalesce(max(Id_Experiencia),0) INTO  L_ID from moises.PERSONA_ACAD_EXP_DOCENCIA;
             
      INSERT INTO moises.PERSONA_ACAD_EXP_DOCENCIA(
        Id_Experiencia,
        id_persona,
        institucion,
        ciclo,
        fecha_inicio,
        fecha_fin,
        pregrado,
        maestria,
        doctorado,
        especialidad,
        estado,
        tipo,
        archivo,
        ID_SEMESTRE,
        ID_USUARIO_REG, 
	      FECHA_REGISTRO 
        )
        SELECT 
        (row_number() OVER( ORDER BY aca.id_semestre ASC )) + L_ID as Id_Experiencia ,
        ACCD.ID_PERSONA,
        'Universidad Peruana Unión' AS institucion,
        aca.semestre AS ciclo,
        Amd.Fecha_Inicio,
        Amd.Fecha_Fin,
        max((case when aca.id_tipo_contrato in (1,2,29,28,14,13,12,11,10,9) then 'S' else 'N' end)) pregrado,
        max((case when aca.id_tipo_contrato in (4) then 'S' else 'N' end)) maestria,
        max((case when aca.id_tipo_contrato in (5) then 'S' else 'N' end)) doctorado,
        max((case when aca.id_tipo_contrato in (6) then 'S' else 'N' end)) especialidad,
        '1' AS estado,
        null AS tipo,
        null AS archivo,
        aca.id_semestre,
        P_ID_USER,
        SYSDATE
        FROM DAVID.ACAD_CARGA_CURSO_DOCENTE ACCD INNER JOIN DAVID.VW_ACAD_CARGA_ACADEMICA ACA ON Aca.Id_Carga_Curso=Accd.Id_Carga_Curso AND ACA.ORIGEN='O'
        left join DAVID.Acad_Modulo_Detalle amd on Amd.Id_Modulo_Detalle=Accd.Id_Modulo_Detalle
        WHERE ACCD.ID_PERSONA=  P_ID_PERSONA
        and aca.id_tipo_contrato in (1,2,29,28,14,13,12,11,10,9,4,5,6)
        AND aca.id_semestre NOT IN(
          SELECT COALESCE(id_semestre,0) FROM  moises.PERSONA_ACAD_EXP_DOCENCIA
          WHERE ID_PERSONA=P_ID_PERSONA
        )
        group by ACCD.ID_PERSONA,'Universidad Peruana Unión',aca.semestre ,Amd.Fecha_Inicio,Amd.Fecha_Fin,aca.id_semestre
        order by ciclo desc;
        
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
    
END SP_GENERAR_EXP_DOCENCIA;

PROCEDURE SP_GENERAR_RESULTADO(P_ID_CUESTIONARIO NUMBER,P_COD_TIPO_INT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2) 
AS
 l_contar number:=0;
 l_error number:=0;
 l_msgerror varchar2(200):='';
 l_id_docente number;
 l_id_categorizacion number;
 l_id_categoria_docente number;
 l_id_tipo_eval_instrumento number;
 l_tipo varchar2(5);
 l_id_persona number;
 l_id_instrumento number;
 l_id_sala number;
 l_id_evaluador number;
 l_id_docente_evaluador number;
BEGIN 

  SELECT ID_INSTRUMENTO,ID_SALA,ID_PERSONA,ID_EVALUADOR INTO l_id_instrumento,l_id_sala,l_id_persona,l_id_evaluador FROM LUCAS.INSTRUMENTO_CUESTIONARIO WHERE ID_CUESTIONARIO=P_ID_CUESTIONARIO;
  --calculo por persona
  LUCAS.pcd_calc_cuest_person_likert (
    l_id_instrumento,
    l_id_sala,
    l_id_persona
  );
  
   
  SELECT ID_CATEGORIZACION INTO l_id_categorizacion from enoc.cat_evaluador where id_evaluador=l_id_evaluador;
   
  SELECT ID_DOCENTE,ID_CATEGORIA_DOCENTE INTO l_id_docente,l_id_categoria_docente from enoc.cat_docente where ID_PERSONA=l_id_persona AND ID_CATEGORIZACION=l_id_categorizacion;
  
  SELECT count(1) into  l_contar FROM ENOC.CAT_DOCENTE_EVALUADOR A, ENOC.CAT_EVALUADOR_DET B, ENOC.CAT_TIPO_EVAL_INSTRUMENTO C
  WHERE A.ID_EVALUADOR_DET=B.ID_EVALUADOR_DET
  AND A.ID_TIPO_EVAL_INSTRUMENTO=C.ID_TIPO_EVAL_INSTRUMENTO
  AND B.ID_EVALUADOR=l_id_evaluador
  AND C.ID_SALA=l_id_sala
  AND A.ID_DOCENTE=l_id_docente
  and c.id_instrumento=l_id_instrumento;
  
  if l_contar = 0 or l_contar > 1  then
    l_error:=1;
    l_msgerror:='1-No procesa';
    goto salida;
  end if;
  
  SELECT a.ID_TIPO_EVAL_INSTRUMENTO, a.ID_DOCENTE_EVALUADOR into l_id_tipo_eval_instrumento,l_id_docente_evaluador FROM ENOC.CAT_DOCENTE_EVALUADOR A, ENOC.CAT_EVALUADOR_DET B, ENOC.CAT_TIPO_EVAL_INSTRUMENTO C
  WHERE A.ID_EVALUADOR_DET=B.ID_EVALUADOR_DET
  AND A.ID_TIPO_EVAL_INSTRUMENTO=C.ID_TIPO_EVAL_INSTRUMENTO
  AND B.ID_EVALUADOR=l_id_evaluador
  AND C.ID_SALA=l_id_sala
  AND A.ID_DOCENTE=l_id_docente
  and c.id_instrumento=l_id_instrumento;
 
   
  update ENOC.CAT_DOCENTE_EVALUADOR set finalizado='S' where  ID_DOCENTE_EVALUADOR = l_id_docente_evaluador;
  
  select count(1) into  l_contar from enoc.vw_cat_item where id_item in(
    select ID_ITEM from ENOC.CAT_ITEM_CATEGORIA where ID_CATEGORIZACION=l_id_categorizacion and ID_CATEGORIA_DOCENTE=l_id_categoria_docente and ID_TIPO_EVAL_INSTRUMENTO=l_id_tipo_eval_instrumento and ROWNUM =1
  );
  
  if l_contar = 0 or l_contar > 1  then
    l_error:=1;
    l_msgerror:='2-No procesa';
    goto salida;
  end if;
  

  select tipo into l_tipo  from enoc.vw_cat_item where id_item in(
    select ID_ITEM from ENOC.CAT_ITEM_CATEGORIA where ID_CATEGORIZACION=l_id_categorizacion and ID_CATEGORIA_DOCENTE=l_id_categoria_docente and ID_TIPO_EVAL_INSTRUMENTO=l_id_tipo_eval_instrumento and ROWNUM =1
  );
  if l_tipo is  null then
    l_error:=1;
    l_msgerror:='3-No procesa';
    goto salida;
  end if;
  --
  enoc.PKG_CATEGORIZATION.SP_PROCESAR_ITEM_ENCUESTA(
      l_id_categorizacion, 
      0,
      '',
      0,
      l_id_docente,
      0,
      l_tipo,
      'E',
      l_id_persona,
      l_error,
      l_msgerror
    );
   <<salida>>
  P_ERROR:=l_error;
  P_MSGERROR:=l_msgerror;
END SP_GENERAR_RESULTADO;

END PKG_CATEGORIZATION;