-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE                               PKG_SETUP AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */
  PROCEDURE SP_GENERAR_PARAMETROS(P_ID_ENTIDAD IN NUMBER, P_ID_ANHO IN NUMBER);
  
  PROCEDURE SP_QUIZ_GENERAR_PLANTILLA(P_ID_CUESTIONARIO_ASIG NUMBER,P_PATH_IMG VARCHAR2,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PTLLA_ENCUESTA(P_ID_CUESTIONARIO_ASIG NUMBER,P_PARAMETRO VARCHAR2,P_PATH_IMG VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2) ;
  PROCEDURE SP_ASIGNAR_PERSONAL_VAC(P_COD_CUESTIONARIO VARCHAR2,P_ID_ENTIDAD NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
END PKG_SETUP;


CREATE OR REPLACE PACKAGE BODY                                    PKG_SETUP AS
  PROCEDURE SP_GENERAR_PARAMETROS(P_ID_ENTIDAD IN NUMBER, P_ID_ANHO IN NUMBER) IS

        CURSOR cur IS select  ID_PARAMETRO,   FORMULA from plla_parametros ORDER BY orden;
        l_id_parametro number;
        l_codigo varchar2(25);
        l_formula varchar2(200);
        l_importe number(20,14);
        l_contar number;
        l_id_anho number;

        CURSOR cur1 IS select  ID_PARAMETRO,   EJE_FORMULA from plla_parametros_valor where ID_ANHO=P_ID_ANHO AND ID_ENTIDAD=P_ID_ENTIDAD AND EJE_FORMULA is not null ORDER BY ID_PARAMETRO;
        BEGIN
            
            select coalesce( max(id_anho), 0) into l_id_anho from plla_parametros_valor where ID_ANHO<P_ID_ANHO AND ID_ENTIDAD=P_ID_ENTIDAD ; 
            
             INSERT INTO plla_parametros_valor(ID_PARAMETRO_VALOR, ID_PARAMETRO,ID_ENTIDAD,ID_ANHO,EJE_FORMULA,IMPORTE)
              select 
              TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS')||TO_CHAR(p.ID_PARAMETRO),  
              p.ID_PARAMETRO,
              P_ID_ENTIDAD, 
              P_ID_ANHO,  
              p.FORMULA,  
              coalesce((
                select x.importe from plla_parametros_valor x 
                where x.ID_ENTIDAD=P_ID_ENTIDAD 
                and x.ID_ANHO=P_ID_ANHO 
                and x.ID_PARAMETRO=p.ID_PARAMETRO
                ) ,p.IMPORTE) as importe
              from plla_parametros p
              WHERE p.ID_PARAMETRO NOT IN(
                SELECT ID_PARAMETRO FROM plla_parametros_valor
                WHERE ID_ANHO=P_ID_ANHO
                AND ID_ENTIDAD=P_ID_ENTIDAD
              ) ORDER BY p.orden;

            
              MERGE INTO plla_parametros_valor C
              USING(
                SELECT 
                A.ID_PARAMETRO,
                B.FORMULA,
                A.ID_ANHO,
                B.IMPORTE,
                a.importe as importe_val
                FROM plla_parametros_valor A,plla_parametros B
                WHERE A.ID_PARAMETRO=B.ID_PARAMETRO
                AND A.ID_ANHO=P_ID_ANHO
                AND A.ID_ENTIDAD=P_ID_ENTIDAD
              )t ON (C.ID_PARAMETRO=t.ID_PARAMETRO AND C.ID_ANHO=t.ID_ANHO and C.ID_ANHO=P_ID_ANHO AND C.ID_ENTIDAD=P_ID_ENTIDAD)
              WHEN  MATCHED THEN UPDATE SET  C.EJE_FORMULA=t.FORMULA,C.IMPORTE=case when coalesce(t.importe_val,0)<>0 then t.importe_val  else t.IMPORTE end;



              OPEN cur;
                FETCH cur INTO l_id_parametro,l_formula;

                WHILE cur%FOUND LOOP

                    select  CODIGO into l_codigo from plla_parametros where id_parametro = l_id_parametro; 

                  select IMPORTE into l_importe from plla_parametros_valor
                  where ID_PARAMETRO=l_id_parametro
                  and ID_ANHO=P_ID_ANHO
                  AND ID_ENTIDAD=P_ID_ENTIDAD;


                  select count(*) into l_contar from plla_parametros_valor
                  where EJE_FORMULA LIKE '%'||l_codigo||'%'
                  and ID_ANHO=P_ID_ANHO
                  AND ID_ENTIDAD=P_ID_ENTIDAD
                  AND EJE_FORMULA IS NOT NULL;


                  IF l_contar>0 THEN

                    UPDATE plla_parametros_valor
                    SET EJE_FORMULA=REPLACE(EJE_FORMULA,l_codigo,REPLACE(TO_CHAR(l_importe),',','.'))
                    WHERE EJE_FORMULA LIKE '%'||l_codigo||'%'
                    AND ID_ANHO=P_ID_ANHO
                    AND ID_ENTIDAD=P_ID_ENTIDAD
                    AND EJE_FORMULA IS NOT NULL;


                  END IF;

                  FETCH cur INTO l_id_parametro,l_formula;

                 END LOOP;
                CLOSE cur;


                --ejecutar
                OPEN cur1;
                FETCH cur1 INTO l_id_parametro,l_formula;

                WHILE cur1%FOUND LOOP

                    EXECUTE IMMEDIATE 'UPDATE plla_parametros_valor SET IMPORTE='||l_formula||' WHERE ID_PARAMETRO=:PARAMETRO AND ID_ANHO=:ANHO AND ID_ENTIDAD=:ID_ENTIDAD'  
                    USING l_id_parametro,P_ID_ANHO,P_ID_ENTIDAD;

                FETCH cur1 INTO l_id_parametro,l_formula;

                END LOOP;
                CLOSE cur1;

  END SP_GENERAR_PARAMETROS;
  
  PROCEDURE SP_QUIZ_GENERAR_PLANTILLA(P_ID_CUESTIONARIO_ASIG NUMBER,P_PATH_IMG VARCHAR2,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_plantilla CLOB:='';
        l_parametro  CLOB:='';
        l_longitud number:=0;
        l_id_plantilla number;
        l_id_cuestionario number;
        l_id_entidad number;
        l_sql varchar2(4000):='';
        cursor curpara is 
        select 
          ID_PARAMETRO_PLANT,
          TIPO,
          PARAMETRO,
          SIGNIFICADO,
          COMENTARIO,
          CAMPO,
          PROCESO,
          VIGENCIA
        from enoc.QUIZ_PARAMETRO_PLANT
        where vigencia=1
        and TIPO_PROC='SP'
        ORDER BY ID_PARAMETRO_PLANT;
        
      BEGIN
      
        select A.ID_PLANTILLA,a.id_entidad INTO l_id_plantilla,l_id_entidad from enoc.QUIZ_CUESTIONARIO a,enoc.QUIZ_CUESTIONARIO_ASIG B 
        WHERE A.ID_CUESTIONARIO=B.ID_CUESTIONARIO 
        AND B.ID_CUESTIONARIO_ASIG=P_ID_CUESTIONARIO_ASIG;
        
        if l_id_plantilla is null then
          l_error:=1;
          l_msgerror:='No se procesa con plantilla';
          goto salida_gen;
        end if;
        
        --l_id_plantilla_contrato:=5;
        
        SELECT COUNT(*) INTO l_contar  from enoc.QUIZ_PLANTILLA where ID_PLANTILLA=l_id_plantilla and coalesce(length(PLANTILLA),0)>0;
        
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No esta configurado plantilla';
            goto salida_gen;
        END IF;
        
        select PLANTILLA,coalesce(length(PLANTILLA),0) INTO l_plantilla,l_longitud from enoc.QUIZ_PLANTILLA where ID_PLANTILLA=l_id_plantilla and coalesce(length(PLANTILLA),0)>0;
        
        
        l_sql:='from ENOC.QUIZ_CUESTIONARIO_ASIG a 
              inner join enoc.vw_persona_natural pn on pn.id_persona=a.id_persona
              inner join moises.tipo_documento td on td.ID_TIPODOCUMENTO=pn.ID_TIPODOCUMENTO
              left join moises.persona_direccion di on di.id_persona=pn.id_persona and di.ID_TIPODIRECCION=4 and coalesce(di.es_activo,0)=1
              left join moises.trabajador t on t.id_trabajador=a.id_trabajador
              left join enoc.vw_perfil_puesto pp on pp.id_perfil_puesto=t.id_perfil_puesto
              left join enoc.VW_ENT_DEP_AREA_CCOSTO ed on ed.id_sedearea=t.id_sedearea
              where a.ID_CUESTIONARIO_ASIG=:P_ID_CUESTIONARIO_ASIG';
        
        
        FOR cur in curpara LOOP
        BEGIN
          if cur.tipo='F' then
            if cur.parametro='FEC_ACTUAL' then
              l_parametro:=to_char(sysdate,'DD/MM/YYYY');
            else
              EXECUTE IMMEDIATE 'SELECT '||cur.campo||' '||l_sql into l_parametro USING  P_ID_CUESTIONARIO_ASIG;
            end if;
          
          else
          
            EXECUTE IMMEDIATE 'BEGIN enoc.PKG_setup.'||cur.proceso||'(:P_ID_CUESTIONARIO_ASIG,:P_PARAMETRO,:P_PATH_IMG,:l_parametro,:l_error,:l_msgerror); end;'
            USING P_ID_CUESTIONARIO_ASIG,cur.parametro,P_PATH_IMG,IN OUT l_parametro,IN OUT l_error,IN OUT l_msgerror;
            
            
          end if;

          if l_parametro is  null then 
            l_parametro:='{'||cur.parametro||'}';
          end if;
          l_plantilla:=replace(l_plantilla,'['||cur.parametro||']',l_parametro);
        END;     
        END LOOP;
        
        IF l_error=0 THEN
          UPDATE enoc.QUIZ_CUESTIONARIO_ASIG SET
          PLANTILLA = l_plantilla
          WHERE ID_CUESTIONARIO_ASIG=P_ID_CUESTIONARIO_ASIG;
        END IF;
        
        <<salida_gen>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_QUIZ_GENERAR_PLANTILLA;
    
    PROCEDURE SP_PTLLA_ENCUESTA(P_ID_CUESTIONARIO_ASIG NUMBER,P_PARAMETRO VARCHAR2,P_PATH_IMG VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2) 
    IS
      l_contar number;
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_parametro CLOB:='';
      l_id_cuestionario number;
      l_id_pregunta number;
      l_j number:=1;

      
      CURSOR curPre IS
      select 
       a.id_pregunta,
       a.id_cuestionario,
       a.nombre,
       a.id_tipo_pregunta,
       a.orientacion,
       a.id_tipo_grafico,
       coalesce(a.tipo_multi,1) as tipo_multi,
       a.orden,
       b.codigo
      from enoc.QUIZ_PREGUNTA a, enoc.QUIZ_TIPO_PREGUNTA b
      where a.id_tipo_pregunta=b.id_tipo_pregunta
      and a.id_cuestionario=l_id_cuestionario
      and a.id_pregunta in(
        select x.id_pregunta from enoc.QUIZ_ALTERNATIVA x,enoc.QUIZ_CUESTIONARIO_RPTA y
        where x.id_alternativa=y.id_alternativa
        and y.ID_CUESTIONARIO_ASIG=P_ID_CUESTIONARIO_ASIG
      )
      order by a.orden;
      
      CURSOR curAlt IS
      select 
      a.id_alternativa,
      a.id_pregunta,
      a.nombre,
      a.respuesta,
      a.indicacion,
      a.tipo_texto,
      a.orden,
      b.rpta_texto,
      b.rpta_num,
      case when b.id_alternativa is not null then 1 else 0 end as asignado
      from enoc.QUIZ_ALTERNATIVA a left join enoc.QUIZ_CUESTIONARIO_RPTA b
      on a.id_alternativa=b.id_alternativa and b.ID_CUESTIONARIO_ASIG=P_ID_CUESTIONARIO_ASIG and a.vigencia=1
      where a.id_pregunta=l_id_pregunta
      order by a.orden;
        
    Begin
      select id_cuestionario into l_id_cuestionario from enoc.QUIZ_CUESTIONARIO_ASIG where ID_CUESTIONARIO_ASIG=P_ID_CUESTIONARIO_ASIG;
      
      l_parametro:='<table class="table table-sm">
            <tr>
              <th style="width: 10px ;">#</th>
              <th>Pregunta</th>
              <th style="width: 300px ;">Respuesta</th>
            </tr>'; 
      FOR pr in curPre LOOP
        BEGIN
          l_id_pregunta:=pr.id_pregunta;
          l_parametro:=l_parametro||'<tr  style="font-size: 12px;">';
            l_parametro:=l_parametro||'<td>'||to_char(l_j)||'</td>';
            l_parametro:=l_parametro||'<td><b>'||pr.nombre||'</b>';
            if pr.codigo = 'MU' and pr.tipo_multi <> 1 then
              l_parametro:=l_parametro||'&nbsp;&nbsp;(Mínimo '||to_char(pr.tipo_multi)||' opciones)';
            end if;
            l_parametro:=l_parametro||'</td>';
            l_parametro:=l_parametro||'<td>';
              if pr.orientacion = 'H' then
                FOR al in curAlt LOOP
                  BEGIN
                    if pr.codigo='UN' or pr.codigo='SN' then
                      if al.asignado=1 then
                        l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/radio.png"/> '||al.nombre||'&nbsp;&nbsp;';
                      else
                        l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/nradio.png"/> '||al.nombre||'&nbsp;&nbsp;';
                      end if;
                    end if;
                    if pr.codigo='MU' then
                      if al.asignado=1 then
                        l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/check.png"/> '||al.nombre||'&nbsp;&nbsp;';
                      else
                        l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/ncheck.png"/> '||al.nombre||'&nbsp;&nbsp;';
                      end if;
                    end if;
                  END;
                END LOOP;
              end if;
            l_parametro:=l_parametro||'</td>';
          l_parametro:=l_parametro||'</tr>';
          
          if pr.orientacion = 'V' then 
            FOR al in curAlt LOOP
              BEGIN
                l_parametro:=l_parametro||'<tr  style="font-size: 12px;">';
                  l_parametro:=l_parametro||'<td></td>';
                  if pr.codigo = 'LI' then
                    l_parametro:=l_parametro||'<td colspan="2">';
                     if al.tipo_texto='N' then
                        l_parametro:=l_parametro||to_char(al.rpta_num);
                     else
                        l_parametro:=l_parametro||al.rpta_texto;
                     end if;
                  else
                    l_parametro:=l_parametro||'<td>';
                  end if;
                  if pr.codigo = 'UN' or pr.codigo = 'SN' then
                    if al.asignado=1 then
                      l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/radio.png"/> '||al.nombre;
                    else
                      l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/nradio.png"/> '||al.nombre;
                    end if;
                  end if;
                  if pr.codigo = 'MU' then
                    if al.asignado=1 then
                      l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/check.png"/> '||al.nombre;
                    else
                      l_parametro:=l_parametro||'<img src="'||P_PATH_IMG||'/icon/ncheck.png"/> '||al.nombre;
                    end if;
                  end if;
                  if al.asignado = 1 and pr.codigo <>'LI' and al.respuesta=1 then
                    l_parametro:=l_parametro||'&nbsp;&nbsp;('||al.indicacion||')';
                  end if;
                  l_parametro:=l_parametro||'</td>';
                   if pr.codigo <> 'LI' then
                    l_parametro:=l_parametro||'<td>';
                      if al.asignado = 1 then 
                        if al.tipo_texto='N' then
                          l_parametro:=l_parametro||to_char(al.rpta_num);
                        else
                          l_parametro:=l_parametro||al.rpta_texto;
                        end if;
                        
                      end if;
                    l_parametro:=l_parametro||'</td>';
                  end if;
                l_parametro:=l_parametro||'</tr>';
              END;
            END LOOP;
          end if;
          l_j:=l_j+1;
        END;
      END LOOP;
      l_parametro:=l_parametro||'</table>';
      
      P_PARAMETRO_RET:= l_parametro;
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
    End SP_PTLLA_ENCUESTA;
    
    PROCEDURE SP_ASIGNAR_PERSONAL_VAC(P_COD_CUESTIONARIO VARCHAR2,P_ID_ENTIDAD NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) 
    IS
      l_contar number;
      l_error number:=0;
      l_msgerror varchar2(200):='';
      l_id_cuestionario number;
      l_num number:=0;
      
    BEGIN
      SELECT COUNT(1) INTO l_contar FROM ENOC.QUIZ_CUESTIONARIO WHERE CODIGO=P_COD_CUESTIONARIO;
      IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='No hay cuestionario para asignar';
        goto salida;
      END IF;
      SELECT id_cuestionario INTO l_id_cuestionario FROM ENOC.QUIZ_CUESTIONARIO WHERE CODIGO=P_COD_CUESTIONARIO;
      
      select coalesce(max(id_cuestionario_asig),0) into  l_num from ENOC.QUIZ_CUESTIONARIO_ASIG;
      
      
      insert into ENOC.QUIZ_CUESTIONARIO_ASIG(
      id_cuestionario_asig,
      id_cuestionario,
      id_entidad,
      id_depto,
      id_area,
      id_persona,
      desde,
      hasta,
      id_trabajador,
      respuesta,
      total_respuestas,
      ID_ROL_VACACION,
      id_anho_asig,
      id_mes_asig,
      fecha_asig,
      vigencia,
      id_user_reg,
      fecha_reg
      )
      select 
      (row_number() OVER( ORDER BY t.id_trabajador ASC )) + l_num as id_cuestionario_asig,
      l_id_cuestionario,
      t.id_entidad,
      ar.ID_DEPTO_PADRE as id_depto,
      ar.id_area,
      t.id_persona,
      a.fecha_fin +1 as desde,
      null as hasta,
      t.id_trabajador,
      0 as respuesta,
      0 as total_respuestas,
      a.ID_ROL_VACACION,
      to_number(to_char(sysdate +1,'YYYY')) as id_anho_asig,
      to_number(to_char(sysdate +1,'MM')) as id_mes_asig,
      sysdate as fecha_asig,
      1 as vigencia,
      4 as id_user_reg,
      sysdate as fecha_reg
      from enoc.vw_aviso_vacacion a,PLLA_PERIODO_VAC_TRAB b, moises.trabajador t, VW_ENT_DEP_AREA_CCOSTO ar
      where a.ID_PERIODO_VAC_TRAB=b.ID_PERIODO_VAC_TRAB
      and b.ID_TRABAJADOR=t.ID_TRABAJADOR
      and t.ID_SEDEAREA=ar.ID_SEDEAREA
      and t.id_entidad=P_ID_ENTIDAD
      and a.ndias=7
      and a.ID_ROL_VACACION not in(
        select x.ID_ROL_VACACION from ENOC.QUIZ_CUESTIONARIO_ASIG x
        where x.id_trabajador=t.id_trabajador
      )
      order by t.id_trabajador;
      
      <<salida>>
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
    end SP_ASIGNAR_PERSONAL_VAC;
END PKG_SETUP;