-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE           PKG_PLANILLA_CONFIG AS 

  PROCEDURE SP_GENERAR_COMIS_PENS(P_ID_ANHO IN NUMBER, P_ID_MES IN NUMBER,P_ID_USER IN NUMBER);
  PROCEDURE SP_GENERAR_TRAMO_INGRESO(P_ID_ANHO IN NUMBER,P_ID_USER IN NUMBER); 
  PROCEDURE SP_COPIAR_PERIODO_PLANILLA(P_ID_PERIODO_PLANILLA_ANT NUMBER, P_ID_PERIODO_PLANILLA NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_PERIODO_PLANILLA_CONTROL(P_ID_ENTIDAD NUMBER, P_COD_MODULO VARCHAR2,P_ID_USER NUMBER,P_FECHA DATE,P_TIPO_PER VARCHAR2,P_TIPO VARCHAR2, CURSOR OUT SYS_REFCURSOR );

END PKG_PLANILLA_CONFIG;


CREATE OR REPLACE PACKAGE BODY PKG_PLANILLA_CONFIG AS

  PROCEDURE SP_GENERAR_COMIS_PENS(P_ID_ANHO IN NUMBER, P_ID_MES IN NUMBER,P_ID_USER IN NUMBER) IS
     CURSOR curReg IS 
     select  ID_REGIMEN_PENSIONARIA,TIPO 
     from plla_REGIMEN_PENSIONARIA 
     WHERE TIPO IN('PR','PU')
     AND VIGENCIA=1
     ORDER BY ID_REGIMEN_PENSIONARIA;
     
        
     l_mes_ant number;
     l_anho_ant number;
     l_fec_ant date;
     l_id number;
     l_contar number;
     l_fondo number(10,4):=0;
     l_seguro number(10,4):=0;
     l_rem_max_ase number(10,2):=0;
     l_id_comision_pensionaria_ant number:=0;
     l_id_c number;
  BEGIN
    select ADD_MONTHS(to_date(to_char(P_ID_ANHO)||'-'||to_char(P_ID_MES)||'-01','YYYY-MM-DD'),-1) into l_fec_ant from dual;
    select to_number(to_char(l_fec_ant,'YYYY')),to_number(to_char(l_fec_ant,'MM')) into l_anho_ant,l_mes_ant from dual;
    
    FOR curR in curReg LOOP
    BEGIN
      
      select count(1) into l_contar from PLLA_COMISION_PENSIONARIA 
      where ID_REGIMEN_PENSIONARIA=curR.ID_REGIMEN_PENSIONARIA
      and ID_ANHO=l_anho_ant
      and ID_MES=l_mes_ant;
      
      if l_contar=1 then
        select ID_COMISION_PENSIONARIA, FONDO,SEGURO,REM_MAX_ASE into l_id_comision_pensionaria_ant,l_fondo,l_seguro,l_rem_max_ase from PLLA_COMISION_PENSIONARIA 
        where ID_REGIMEN_PENSIONARIA=curR.ID_REGIMEN_PENSIONARIA
        and ID_ANHO=l_anho_ant
        and ID_MES=l_mes_ant;
      end if;
        
      select count(1) into l_contar from PLLA_COMISION_PENSIONARIA 
      where ID_REGIMEN_PENSIONARIA=curR.ID_REGIMEN_PENSIONARIA
      and ID_ANHO=P_ID_ANHO
      and ID_MES=P_ID_MES;
    
      if l_contar=0 then
        
        
        
        select coalesce(max(ID_COMISION_PENSIONARIA),0) + 1  into l_id from enoc.PLLA_COMISION_PENSIONARIA;
        
        insert into PLLA_COMISION_PENSIONARIA(
          ID_COMISION_PENSIONARIA,
          ID_REGIMEN_PENSIONARIA,
          ID_ANHO,
          ID_MES,
          FONDO,
          SEGURO,
          REM_MAX_ASE,
          ID_USER_REG,
          CREATED_AT
        )values(
         l_id,
         curR.ID_REGIMEN_PENSIONARIA,
         P_ID_ANHO,
         P_ID_MES,
         l_fondo,
         l_seguro,
         l_rem_max_ase,
         P_ID_USER,
         sysdate
        );
      else
        select ID_COMISION_PENSIONARIA into l_id from PLLA_COMISION_PENSIONARIA 
        where ID_REGIMEN_PENSIONARIA=curR.ID_REGIMEN_PENSIONARIA
        and ID_ANHO=P_ID_ANHO
        and ID_MES=P_ID_MES;
      end if;
      if curR.tipo='PR' then
          if l_id_comision_pensionaria_ant>0 then
            
            select coalesce(max(ID_REG_PENS_COMISION),0)    into l_id_c from enoc.PLLA_REG_PENS_COMISION;
            insert into PLLA_REG_PENS_COMISION(
              ID_REG_PENS_COMISION,
              ID_COMISION_PENSIONARIA,
              ID_TIPO_COMISION_PENS,
              COMISION,
              ID_USER_REG,
              CREATED_AT
            )
            select
            (row_number() OVER( ORDER BY ID_REG_PENS_COMISION ASC )) + l_id_c,
            l_id,
            ID_TIPO_COMISION_PENS,
            COMISION,
            P_ID_USER,
            sysdate
            from PLLA_REG_PENS_COMISION
            where ID_COMISION_PENSIONARIA=l_id_comision_pensionaria_ant
            and ID_TIPO_COMISION_PENS not in(
              select ID_TIPO_COMISION_PENS from PLLA_REG_PENS_COMISION
              where ID_COMISION_PENSIONARIA=l_id
            );
          end if;
          
          select coalesce(max(ID_REG_PENS_COMISION),0)    into l_id_c from enoc.PLLA_REG_PENS_COMISION;
          insert into PLLA_REG_PENS_COMISION(
            ID_REG_PENS_COMISION,
            ID_COMISION_PENSIONARIA,
            ID_TIPO_COMISION_PENS,
            COMISION,
            ID_USER_REG,
            CREATED_AT
          )
          select
          (row_number() OVER( ORDER BY ID_TIPO_COMISION_PENS ASC )) + l_id_c,
          l_id,
          ID_TIPO_COMISION_PENS,
          0,
          P_ID_USER,
          sysdate
          from PLLA_TIPO_COMISION_PENS
          where vigencia=1
          and ID_TIPO_COMISION_PENS not in(
            select ID_TIPO_COMISION_PENS from PLLA_REG_PENS_COMISION
            where ID_COMISION_PENSIONARIA=l_id
          );
          
        end if;
    END;
    END LOOP;
  
  END SP_GENERAR_COMIS_PENS;
  
  PROCEDURE SP_GENERAR_TRAMO_INGRESO(P_ID_ANHO IN NUMBER,P_ID_USER IN NUMBER) IS
     
     l_anho_ant number;
     l_fec_ant date;
     l_id number;
     l_contar number;
     l_fondo number(10,4):=0;
     l_seguro number(10,4):=0;
     l_rem_max_ase number(10,2):=0;
     l_id_comision_pensionaria_ant number:=0;
     l_id_c number;
  BEGIN
    select  ADD_MONTHS(to_date(to_char(P_ID_ANHO)||'-01-01','YYYY-MM-DD'),-12) into l_fec_ant from dual;
    
    select to_number(to_char(l_fec_ant,'YYYY')) into l_anho_ant from dual;
    

    
    select coalesce(max(ID_TRAMO_INGRESO),0)   into l_id from enoc.PLLA_TRAMO_INGRESO;
    
    insert into enoc.PLLA_TRAMO_INGRESO(
      ID_TRAMO_INGRESO,
      ID_TIPO_TRAMO,
      ID_ANHO,
      DESDE,
      HASTA,
      PORCENTAJE,
      ID_USER_REG,
      CREATED_AT
    )
    select 
     (row_number() OVER( ORDER BY a.ID_TIPO_TRAMO ASC )) + l_id, 
     a.ID_TIPO_TRAMO,
     P_ID_ANHO,
     b.DESDE,
     b.HASTA,
     b.PORCENTAJE,
     P_ID_USER,
     sysdate
     from ENOC.PLLA_TIPO_TRAMO a left join enoc.PLLA_TRAMO_INGRESO b
     on a.ID_TIPO_TRAMO=b.ID_TIPO_TRAMO
     and b.ID_ANHO=l_anho_ant
     where a.vigencia=1
     and a.ID_TIPO_TRAMO not in(
      select x.ID_TIPO_TRAMO from enoc.PLLA_TRAMO_INGRESO x
      where x.id_anho=P_ID_ANHO
     )
     order by a.orden;
  
  END SP_GENERAR_TRAMO_INGRESO;
  
  
  PROCEDURE SP_COPIAR_PERIODO_PLANILLA(P_ID_PERIODO_PLANILLA_ANT NUMBER, P_ID_PERIODO_PLANILLA NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) IS
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_periodo_proceso number;
    cursor curper is
    SELECT 
      ID_PERIODO_PROCESO,
      TIPO,
      ADD_MONTHS(FECHA_REGISTRO,1) as FECHA_REGISTRO,
      ADD_MONTHS(FECHA_APROBACION,1) as FECHA_APROBACION
    FROM PLLA_PERIODO_PROCESO 
    WHERE ID_PERIODO_PLANILLA=P_ID_PERIODO_PLANILLA_ANT
    AND TIPO=0
    AND VIGENCIA=1
    ORDER BY ID_PERIODO_PROCESO;
  begin
    FOR cur in curper LOOP
    BEGIN
      select coalesce(max(ID_PERIODO_PROCESO),0) + 1 into l_id_periodo_proceso from enoc.PLLA_PERIODO_PROCESO;
      INSERT INTO PLLA_PERIODO_PROCESO(
        ID_PERIODO_PROCESO,
        ID_PERIODO_PLANILLA,
        TIPO,
        FECHA_REGISTRO,
        FECHA_APROBACION,
        VIGENCIA,
        ID_USER_REG,
        CREATED_AT
      )values(
        l_id_periodo_proceso,
        P_ID_PERIODO_PLANILLA,
        cur.tipo,
        cur.FECHA_REGISTRO,
        cur.FECHA_APROBACION,
        1,
        P_ID_USER_REG,
        SYSDATE
      );
      insert into PLLA_PERIODO_PROCESO_MOD(
        ID_PERIODO_PROCESO,
        ID_MODULO,
        MODULO,
        VIGENCIA,
        ID_USER_REG,
        CREATED_AT
      )
      select 
        l_id_periodo_proceso,
        ID_MODULO,
        MODULO,
        1,
        P_ID_USER_REG,
        SYSDATE
      from PLLA_PERIODO_PROCESO_MOD
      where ID_PERIODO_PROCESO=cur.ID_PERIODO_PROCESO;
    END;     
    END LOOP;
   
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  end SP_COPIAR_PERIODO_PLANILLA;
  PROCEDURE SP_PERIODO_PLANILLA_CONTROL(P_ID_ENTIDAD NUMBER, P_COD_MODULO VARCHAR2,P_ID_USER NUMBER,P_FECHA DATE,P_TIPO_PER VARCHAR2,P_TIPO VARCHAR2, CURSOR OUT SYS_REFCURSOR ) IS
      --P_TIPO R: registro, A: aprobacion
      --P_TIPO_PER  P: periodo, M:mensual
      l_contar number;
      l_registrar number:=0;
      l_aprobar number:=0;
      l_fecha_inicio date;
      l_fecha_registro date;
      l_fecha_aprobacion date;
      l_fecha_cierre date;
      l_nerror number:=0;
      l_mensaje varchar2(200):='ok';
      l_id_mes number:=0;
      l_id_anho number:=0;
      l_fecha_act date:=TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD'), 'YYYY-MM-DD');
      l_id_periodo_planilla number;
      l_fecha_inicio_mes date;
      l_fecha_cierre_mes date;
      l_mes varchar2(50);
      BEGIN
      
        SELECT count(*) into l_contar
        FROM  ENOC.plla_periodo_planilla 
        where id_entidad=P_ID_ENTIDAD
        and (TO_DATE(TO_CHAR(l_fecha_act, 'YYYY-MM-DD'), 'YYYY-MM-DD') BETWEEN TO_DATE(TO_CHAR(fecha_inicio, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(fecha_cierre, 'YYYY-MM-DD'), 'YYYY-MM-DD'));
        
        if l_contar=0 then
          select nombre into l_mes from eliseo.conta_mes where id_mes = to_number(TO_CHAR(l_fecha_act, 'MM'));
          l_mensaje:= 'Falta generar periodo de planilla para '||l_mes||'-'||TO_CHAR(l_fecha_act, 'YYYY');
          l_nerror:=1;
          goto salida;
        end if;
              
        SELECT 
        id_periodo_planilla,
        fecha_inicio, 
        fecha_registro, 
        fecha_aprobacion, 
        fecha_cierre,
        id_mes,
        id_anho,
        TRUNC(to_date(to_char(id_anho)||'-'||to_char(id_mes)||'-1','YYYY-MM-DD'), 'MM'),
        TRUNC(LAST_DAY(to_date(to_char(id_anho)||'-'||to_char(id_mes)||'-1','YYYY-MM-DD')))
        into 
        l_id_periodo_planilla,
        l_fecha_inicio,
        l_fecha_registro,
        l_fecha_aprobacion,
        l_fecha_cierre,
        l_id_mes,
        l_id_anho,
        l_fecha_inicio_mes,
        l_fecha_cierre_mes
        FROM  ENOC.plla_periodo_planilla 
        where id_entidad=P_ID_ENTIDAD
        and (TO_DATE(TO_CHAR(l_fecha_act, 'YYYY-MM-DD'), 'YYYY-MM-DD') BETWEEN TO_DATE(TO_CHAR(fecha_inicio, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(fecha_cierre, 'YYYY-MM-DD'), 'YYYY-MM-DD'));
            
      
        if P_TIPO_PER ='P' then
          if P_FECHA<l_fecha_inicio then
            l_mensaje:= 'Esta fuera de inicio de planilla';--, debe iniciar en '||TO_CHAR(l_fecha_inicio, 'DD/MM/YYYY');
            l_nerror:=1;
            goto salida;
          end if;
        else
          if P_FECHA<l_fecha_inicio_mes then
            l_mensaje:= 'Esta fuera de inicio del mes';--, debe iniciar en '||TO_CHAR(l_fecha_inicio_mes, 'DD/MM/YYYY');
            l_nerror:=1;
            goto salida;
          end if;
        end if;
        
        select count(1) into l_contar 
        from ENOC.PLLA_PERIODO_PROCESO a, ENOC.PLLA_PERIODO_PROCESO_user  u 
          where a.id_periodo_proceso=u.id_periodo_proceso
          and u.id_user=P_ID_USER
          and a.id_periodo_planilla=l_id_periodo_planilla
          and a.vigencia=1
          and u.vigencia=1
          and a.id_periodo_proceso in(
            select x.id_periodo_proceso from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
            WHERE x.id_periodo_proceso=y.id_periodo_proceso
            and y.id_modulo=m.id_modulo
            and x.id_periodo_planilla=l_id_periodo_planilla
            and m.codigo=P_COD_MODULO
            and x.vigencia=1
            and y.vigencia=1
          );
        
        --por usuario
        if l_contar>0 then
          select max(a.fecha_registro), max(a.fecha_aprobacion)
          into l_fecha_registro, l_fecha_aprobacion
          from ENOC.PLLA_PERIODO_PROCESO a, ENOC.PLLA_PERIODO_PROCESO_user  u 
          where a.id_periodo_proceso=u.id_periodo_proceso
          and u.id_user=P_ID_USER
          and a.id_periodo_planilla=l_id_periodo_planilla
          and a.vigencia=1
          and u.vigencia=1
          and a.id_periodo_proceso in(
            select x.id_periodo_proceso from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
            WHERE x.id_periodo_proceso=y.id_periodo_proceso
            and y.id_modulo=m.id_modulo
            and x.id_periodo_planilla=l_id_periodo_planilla
            and m.codigo=P_COD_MODULO
            and x.vigencia=1
            and y.vigencia=1
          );
        else
        --por modulo
        
          select count(1) into l_contar 
          from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
          WHERE x.id_periodo_proceso=y.id_periodo_proceso
          and y.id_modulo=m.id_modulo
          and x.id_periodo_planilla=l_id_periodo_planilla
          and m.codigo=P_COD_MODULO
          and x.vigencia=1
          and y.vigencia=1
          and x.tipo=0;
          if l_contar>0 then
            select max(x.fecha_registro), max(x.fecha_aprobacion)
            into l_fecha_registro, l_fecha_aprobacion
            from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
            WHERE x.id_periodo_proceso=y.id_periodo_proceso
            and y.id_modulo=m.id_modulo
            and x.id_periodo_planilla=l_id_periodo_planilla
            and m.codigo=P_COD_MODULO
            and x.vigencia=1
            and y.vigencia=1
            and x.tipo=0;
          end if;
        end if;
        if P_TIPO_PER ='P' then
          if l_fecha_act<l_fecha_cierre then
            if P_TIPO='R' then
                if l_fecha_act>l_fecha_registro and P_FECHA<=l_fecha_cierre then
                    l_mensaje:= '1-No puede registrar, solo es hasta '||TO_CHAR(P_FECHA, 'DD/MM/YYYY');
                    l_nerror:=1;
                    goto salida;
                end if;
            else
              if l_fecha_act>l_fecha_aprobacion and P_FECHA<l_fecha_cierre then
                  l_mensaje:= '2-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
              end if;
            end if;
          else
            if to_char(l_fecha_act,'YYYYMM')=to_char(l_fecha_cierre,'YYYYMM') then
              if P_TIPO='R' then
                l_mensaje:= '3-No puede registrar, solo es hasta '||TO_CHAR(l_fecha_registro, 'DD/MM/YYYY');
              else
                l_mensaje:= '4-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
              end if;
              l_nerror:=1;
              goto salida;
            end if;
           end if;
        else
           if P_FECHA<l_fecha_cierre_mes and l_fecha_act >= l_fecha_cierre_mes then
            if P_TIPO='R' then
                if P_FECHA>l_fecha_registro then--and l_fecha_act>P_FECHA then
                    l_mensaje:= '5-No puede registar, solo es hasta '||TO_CHAR(l_fecha_registro, 'DD/MM/YYYY');
                    l_nerror:=1;
                    goto salida;
                end if;
            else
              if P_FECHA>l_fecha_aprobacion then--and l_fecha_act>P_FECHA  then
                  l_mensaje:= '6-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
              end if;
            end if;
           else
            if to_char(P_FECHA,'YYYYMM')=to_char(l_fecha_cierre_mes,'YYYYMM')  then-- and l_fecha_act >= l_fecha_cierre_mes then
              if P_TIPO='R' then
                if P_FECHA>l_fecha_registro then
                  l_mensaje:= '7-No puede registrar, solo es hasta '||TO_CHAR(l_fecha_registro, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
                end if;
              else
                if P_FECHA>l_fecha_aprobacion then
                  l_mensaje:= '8-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
                  end if;
              end if;
              
            end if;
           end if;
        end if;
        <<salida>>
        OPEN cursor FOR  
        select
          l_id_periodo_planilla as id_periodo_planilla,
          TO_CHAR(l_fecha_inicio, 'DD/MM/YYYY') as fecha_inicio,
          TO_CHAR(l_fecha_registro, 'DD/MM/YYYY') as fecha_registro,
          TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY') as fecha_aprobacion,
          TO_CHAR(l_fecha_cierre, 'DD/MM/YYYY') as fecha_cierre,
          l_id_mes as id_mes,
          l_id_anho as id_anho,
          TO_CHAR(l_fecha_inicio_mes, 'DD/MM/YYYY') as fecha_inicio_mes,
          TO_CHAR(l_fecha_cierre_mes, 'DD/MM/YYYY') as fecha_cierre_mes,
          l_nerror as nerror,
          l_mensaje as mensaje
        from dual;
      END SP_PERIODO_PLANILLA_CONTROL;
   
  

END PKG_PLANILLA_CONFIG;