-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE      PKG_JOB_ANALYSIS
AS
PROCEDURE SP_COPIAR_ORG_PUESTO(P_ID_ENTIDAD_FROM number,P_ID_AREA_FROM number,
	P_ID_ENTIDAD_TO number,P_ID_AREA_TO number,P_ELIMINAR_ORG NUMBER,P_ID_USER NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
PROCEDURE SP_COPIAR_ORG_PUESTO_HIJAS(P_ID_ENTIDAD_FROM number,P_ID_AREA_FROM number,P_ID_ENTIDAD_TO number,P_ID_AREA_TO number,
	P_ID_PERFIL_PUESTO_FROM number,P_ID_PERFIL_PUESTO_TO NUMBER,P_ID_USER NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
PROCEDURE SP_COPIAR_TIPO_HORARIO(P_IDS_TIPO_HORARIO VARCHAR2,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,
	P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
END PKG_JOB_ANALYSIS;


CREATE OR REPLACE PACKAGE BODY      PKG_JOB_ANALYSIS
AS
	PROCEDURE SP_COPIAR_ORG_PUESTO(P_ID_ENTIDAD_FROM number,P_ID_AREA_FROM number,
	P_ID_ENTIDAD_TO number,P_ID_AREA_TO number,P_ELIMINAR_ORG NUMBER,P_ID_USER NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) 
	--P_ELIMINAR_ORG tendra el valor de 1 = se desea eliminar todo los puestos que hay en el area destino y 0 = no eliminar.
	IS 
		L_ERROR NUMBER:=0;
		L_MSGERROR VARCHAR2(5000):='';
		L_CONTAR NUMBER:=0;
		L_ID_PARENT NUMBER:=NULL;
		L_ID_PERFIL_PUESTO NUMBER:=NULL;
		L_ID_PERFIL_PUESTO_NEW NUMBER:=NULL;
		L_ID_PERFIL_PUESTO_AREA NUMBER:=NULL;
		L_ID_TIPO_HORARIO NUMBER:=NULL;
		L_PUESTO_PARENT NUMBER:=NULL;
		L_ID_DEPTO_PARENT VARCHAR2(10):='';
	BEGIN
		
		IF P_ELIMINAR_ORG = 1 THEN 
			FOR ITEM IN (
			    	SELECT A.*,
						(SELECT NOMBRE FROM ENOC.PLLA_PUESTO WHERE ID_PUESTO = A.ID_PUESTO) AS NOMBRE,
						(select count(*) from moises.trabajador x 
						where x.id_perfil_puesto=a.id_perfil_puesto and x.id_situacion_trabajador in('1','3')) AS CANTIDAD
					FROM (SELECT DISTINCT ID_PERFIL_PUESTO,ID_PUESTO,
						LEVEL AS NIVEL
					FROM ENOC.PLLA_PERFIL_PUESTO 
					WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_AREA = P_ID_AREA_TO
					connect by prior ID_PERFIL_PUESTO = ID_PERFIL_PUESTO_JEFE)A
					ORDER BY A.NIVEL DESC,CANTIDAD DESC)
			    LOOP
				    IF ITEM.CANTIDAD > 0 THEN 
						L_ERROR := ITEM.ID_PERFIL_PUESTO;
						L_MSGERROR := 'Se encontró '||ITEM.CANTIDAD||' colaboradores ya registrados en el puesto "'||ITEM.NOMBRE||'".';
						GOTO salida_val;
					END IF;
				
					BEGIN
						DELETE FROM ENOC.PLLA_PERFIL_PUESTO_ANHO WHERE ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO;
					EXCEPTION 
					WHEN NO_DATA_FOUND THEN
						DBMS_OUTPUT.PUT_LINE('Not found');
					WHEN OTHERS THEN
						L_ERROR := ITEM.ID_PERFIL_PUESTO;
						L_MSGERROR := 'Se encontró que el puesto "'||ITEM.NOMBRE||'" está siendo usado en OTROS PROCESOS.';
						GOTO salida_val;
					END;
				
					BEGIN
						DELETE FROM ENOC.PLLA_PERFIL_PUESTO_JEFE_FUN WHERE ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO;
					EXCEPTION 
					WHEN NO_DATA_FOUND THEN
						DBMS_OUTPUT.PUT_LINE('Not found');
					WHEN OTHERS THEN
						L_ERROR := ITEM.ID_PERFIL_PUESTO;
						L_MSGERROR := 'Se encontró que el puesto "'||ITEM.NOMBRE||'" está siendo usado en OTROS PROCESOS.';
						GOTO salida_val;
					END;
				
					BEGIN
						DELETE FROM ENOC.PLLA_PERFIL_PUESTO WHERE ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO;
					EXCEPTION 
					WHEN NO_DATA_FOUND THEN
						DBMS_OUTPUT.PUT_LINE('Not found');
					WHEN OTHERS THEN
						L_ERROR := ITEM.ID_PERFIL_PUESTO;
						L_MSGERROR := 'Se encontró que el puesto "'||ITEM.NOMBRE||'" está siendo usado en OTROS PROCESOS.';
						GOTO salida_val;
					END;
		       	END LOOP;
	       END IF;
	      
	   FOR ITEM IN (
	    	SELECT A.*,
				(SELECT NOMBRE FROM ENOC.PLLA_PUESTO WHERE ID_PUESTO = A.ID_PUESTO) AS NOMBRE,
				(SELECT COUNT(*) FROM ENOC.PLLA_PERFIL_PUESTO X WHERE X.ID_PERFIL_PUESTO_JEFE=A.ID_PERFIL_PUESTO AND X.ID_AREA = P_ID_AREA_FROM) AS TIENEHIJO
			FROM (SELECT DISTINCT P.*,
				LEVEL AS NIVEL_COPIA
			FROM ENOC.PLLA_PERFIL_PUESTO P
			WHERE P.ID_ENTIDAD = P_ID_ENTIDAD_FROM AND P.ID_AREA = P_ID_AREA_FROM
			connect by prior ID_PERFIL_PUESTO = ID_PERFIL_PUESTO_JEFE)A
			WHERE A.NIVEL_COPIA = 1 AND A.NIVEL = 0)
	    LOOP
		    IF ITEM.ID_PERFIL_PUESTO_JEFE IS NOT NULL THEN 
		    
				SELECT ID_DEPTO,ID_PUESTO INTO L_ID_DEPTO_PARENT,L_PUESTO_PARENT FROM ENOC.PLLA_PERFIL_PUESTO 
		    	WHERE ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO_JEFE AND ROWNUM = 1;
		    
			    SELECT COUNT(*) INTO L_CONTAR FROM ELISEO.CONTA_ENTIDAD_DEPTO WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = L_ID_DEPTO_PARENT;
			   
			    IF L_CONTAR = 0 THEN 
					L_ERROR := 1;
					L_MSGERROR := 'No existe el departamento padre "'||ITEM.ID_DEPTO||'" en la entidad "'||P_ID_ENTIDAD_TO||'".';
					GOTO salida_val;
				END IF;
		   	
		    
		    	SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_PERFIL_PUESTO 
		    	WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = L_ID_DEPTO_PARENT AND ID_PUESTO = L_PUESTO_PARENT;
		    	IF L_CONTAR = 0 THEN 
					L_ERROR := ITEM.ID_PERFIL_PUESTO;
					L_MSGERROR := 'No se encontró el puesto jefe del puesto "'||ITEM.NOMBRE||'".';
					GOTO salida_val;
				END IF;
			
				SELECT ID_PERFIL_PUESTO INTO L_ID_PARENT FROM ENOC.PLLA_PERFIL_PUESTO 
		    	WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = L_ID_DEPTO_PARENT AND ID_PUESTO = L_PUESTO_PARENT AND ROWNUM = 1;
		    
			    SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_PERFIL_PUESTO A WHERE A.ID_AREA IN (
				SELECT X.ID_PARENT FROM ELISEO.ORG_AREA X WHERE ID_AREA = P_ID_AREA_FROM)
				AND A.ID_PUESTO IN (
					SELECT X2.ID_PUESTO FROM ENOC.PLLA_PERFIL_PUESTO X2 WHERE X2.ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO_JEFE
				) AND A.ID_ENTIDAD = P_ID_ENTIDAD_FROM;
				IF L_CONTAR > 0 THEN 
					SELECT A.ID_PUESTO INTO L_PUESTO_PARENT FROM ENOC.PLLA_PERFIL_PUESTO A WHERE A.ID_AREA IN (
					SELECT X.ID_PARENT FROM ELISEO.ORG_AREA X WHERE ID_AREA = P_ID_AREA_TO)
					AND A.ID_PUESTO IN (
					SELECT ID_PUESTO FROM ENOC.PLLA_PERFIL_PUESTO WHERE ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO_JEFE
					) AND A.ID_ENTIDAD = P_ID_ENTIDAD_TO  AND ROWNUM = 1;
				
					SELECT A.ID_PERFIL_PUESTO INTO L_ID_PARENT FROM ENOC.PLLA_PERFIL_PUESTO A WHERE A.ID_AREA IN (
					SELECT X.ID_PARENT FROM ELISEO.ORG_AREA X WHERE X.ID_AREA = P_ID_AREA_TO AND X.ID_ENTIDAD = P_ID_ENTIDAD_TO)
					AND A.ID_PUESTO = L_PUESTO_PARENT AND ROWNUM = 1;
				END IF;
		    END IF;
		   
		   	SELECT COUNT(*) INTO L_CONTAR FROM ELISEO.CONTA_ENTIDAD_DEPTO WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO;
		   
		    IF L_CONTAR = 0 THEN 
				L_ERROR := 1;
				L_MSGERROR := 'No existe el departamento padre "'||ITEM.ID_DEPTO||'" en la entidad "'||P_ID_ENTIDAD_TO||'".';
				GOTO salida_val;
			END IF;
		
		   SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_PERFIL_PUESTO WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO   
		   AND ID_AREA = P_ID_AREA_TO AND ID_PUESTO = ITEM.ID_PUESTO AND ID_PERFIL_PUESTO_JEFE = L_ID_PARENT;
		  
		  	IF L_CONTAR > 0 THEN 
				L_ERROR := 1;
				L_MSGERROR := 'Ya existe registrado el puesto "'||ITEM.NOMBRE||'" en la entidad "'||P_ID_ENTIDAD_TO||'".';
				GOTO salida_val;
			END IF;
		   	
			SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_TIPO_HORARIO WHERE UPPER(TRIM(NOMBRE))  = (
					SELECT UPPER(TRIM(X.NOMBRE)) FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
					)
			AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO;
		   	
		   
			IF L_CONTAR = 0 THEN 
			
				SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_CONFIG_HORARIO = (
				SELECT X.ID_TIPO_CONFIG_HORARIO FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
				)
				AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO;
				IF L_CONTAR = 0 THEN
					-- insertando tipo horario
					select coalesce(max(ID_TIPO_HORARIO),0)+1 into L_ID_TIPO_HORARIO from enoc.PLLA_TIPO_HORARIO;
					INSERT INTO ENOC.PLLA_TIPO_HORARIO(ID_TIPO_HORARIO,ID_ENTIDAD,ID_DEPTO,NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO)
					SELECT L_ID_TIPO_HORARIO AS ID_TIPO_HORARIO,P_ID_ENTIDAD_TO AS ID_ENTIDAD,ID_DEPTO,NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO
					FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO;
					--insertando horario detalle
					INSERT INTO ENOC.PLLA_HORARIO_DETALLE(ID_DIA,ID_TIPO_HORARIO,ID_CONTROL_ASIST,ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,
					 	HORA_ENTRADA_REF,HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,ID_USER_REG,FECHA_REG)
					SELECT ID_DIA,L_ID_TIPO_HORARIO AS ID_TIPO_HORARIO,ID_CONTROL_ASIST,ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,
							HORA_ENTRADA_REF,HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,P_ID_USER AS ID_USER_REG,CURRENT_DATE AS FECHA_REG
					FROM ENOC.PLLA_HORARIO_DETALLE  WHERE ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO;
					-- L_ERROR := 1;
					-- L_MSGERROR := 'No se ha configurado el tipo horario en la entidad "'||P_ID_ENTIDAD_TO||'" y departamento padre "'||ITEM.ID_DEPTO||'".';
					-- GOTO salida_val;
				ELSE 
				
				SELECT ID_TIPO_HORARIO INTO L_ID_TIPO_HORARIO FROM (SELECT ID_TIPO_HORARIO  FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_CONFIG_HORARIO = (
					SELECT X.ID_TIPO_CONFIG_HORARIO FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
					)
				AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO
				ORDER BY ID_TIPO_HORARIO ASC)
				WHERE ROWNUM = 1;
			
				END IF;
			ELSE 
				
				SELECT ID_TIPO_HORARIO INTO L_ID_TIPO_HORARIO FROM (SELECT ID_TIPO_HORARIO  FROM ENOC.PLLA_TIPO_HORARIO WHERE UPPER(TRIM(NOMBRE)) = (
					SELECT UPPER(TRIM(X.NOMBRE)) FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
					)
				AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO
				ORDER BY ID_TIPO_HORARIO ASC)
				WHERE ROWNUM = 1;
			
			END IF;
			
			select coalesce(max(ID_PERFIL_PUESTO),0)+1 into L_ID_PERFIL_PUESTO from enoc.PLLA_PERFIL_PUESTO;
		
			IF ITEM.ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO_AREA THEN 
				L_ID_PERFIL_PUESTO_AREA := L_ID_PERFIL_PUESTO;
			ELSE 
				SELECT ID_PERFIL_PUESTO INTO L_ID_PERFIL_PUESTO_AREA FROM ENOC.PLLA_PERFIL_PUESTO 
				WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO 
				AND ID_PUESTO = (SELECT X.ID_PUESTO FROM ENOC.PLLA_PERFIL_PUESTO X WHERE X.ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO_AREA)
				AND ROWNUM=1;
				IF L_ID_PERFIL_PUESTO_AREA IS NULL THEN 
					L_ID_PERFIL_PUESTO_AREA := L_ID_PERFIL_PUESTO;
				END IF;
			END IF;
			
		    BEGIN
				   INSERT INTO ENOC.PLLA_PERFIL_PUESTO(ID_PERFIL_PUESTO,ID_PUESTO,ID_AREA,ID_ENTIDAD,ID_DEPTO,ID_AUTOMIA_PUESTO,
				   ID_TIPO_CONTROL_PERSONAL,NOEXPERIENCIA,NIVEL,ID_SITUACION_EDUCATIVO,ESPECIFICACION,ID_TIPO_HORARIO,
				   ID_TIPO_SUPERVISION,ID_PERFIL_PUESTO_JEFE,VIGENCIA,TIPO_ASIGNAR,ID_PERFIL_PUESTO_AREA,ID_TIPO_JEFE)
				   VALUES(L_ID_PERFIL_PUESTO,ITEM.ID_PUESTO,P_ID_AREA_TO,P_ID_ENTIDAD_TO,ITEM.ID_DEPTO,ITEM.ID_AUTOMIA_PUESTO,ITEM.ID_TIPO_CONTROL_PERSONAL,
				   ITEM.NOEXPERIENCIA,ITEM.NIVEL,ITEM.ID_SITUACION_EDUCATIVO,ITEM.ESPECIFICACION,L_ID_TIPO_HORARIO,ITEM.ID_TIPO_SUPERVISION,L_ID_PARENT,
				   ITEM.VIGENCIA,ITEM.TIPO_ASIGNAR,L_ID_PERFIL_PUESTO_AREA,ITEM.ID_TIPO_JEFE)
				   RETURNING ID_PERFIL_PUESTO INTO L_ID_PERFIL_PUESTO_NEW;
			EXCEPTION 
			WHEN DUP_VAL_ON_INDEX THEN
				  	L_ERROR := ITEM.ID_PERFIL_PUESTO;
					L_MSGERROR := 'El puesto "'||ITEM.NOMBRE||'" ya ha sido registrado.';
					GOTO salida_val;
			WHEN OTHERS THEN
					L_ERROR := ITEM.ID_PERFIL_PUESTO;
					L_MSGERROR := 'No se pudo registrar el puesto "'||ITEM.NOMBRE||'" en la entidad '||P_ID_ENTIDAD_TO||' por algún motivo.';
					GOTO salida_val;
			END;
	    	IF ITEM.TIENEHIJO > 0 THEN
				ENOC.PKG_JOB_ANALYSIS.SP_COPIAR_ORG_PUESTO_HIJAS(P_ID_ENTIDAD_FROM,P_ID_AREA_FROM,P_ID_ENTIDAD_TO,P_ID_AREA_TO,
				ITEM.ID_PERFIL_PUESTO,L_ID_PERFIL_PUESTO_NEW,P_ID_USER,L_ERROR,L_MSGERROR);
				IF L_ERROR<>0 THEN 
			  		GOTO salida_val;
			  	END IF;
			END IF;
			
	    END LOOP;
	    
	   <<salida_val>> 
	   P_ERROR:= L_ERROR;
	   P_MSGERROR:= L_MSGERROR;
	END SP_COPIAR_ORG_PUESTO;
	PROCEDURE SP_COPIAR_ORG_PUESTO_HIJAS(P_ID_ENTIDAD_FROM number,P_ID_AREA_FROM number,P_ID_ENTIDAD_TO number,P_ID_AREA_TO number,
	P_ID_PERFIL_PUESTO_FROM number,P_ID_PERFIL_PUESTO_TO NUMBER,P_ID_USER NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) 
	IS 
		L_ERROR NUMBER:=0;
		L_MSGERROR VARCHAR2(5000):='';
		L_CONTAR NUMBER:=0;
		L_ID_PARENT NUMBER:=NULL;
		L_ID_PERFIL_PUESTO NUMBER:=NULL;
		L_ID_PERFIL_PUESTO_NEW NUMBER:=NULL;
		L_ID_TIPO_HORARIO NUMBER:=NULL;
		L_ID_PERFIL_PUESTO_AREA NUMBER:=NULL;
		L_ID_DEPTO_PARENT VARCHAR2(10):='';
	BEGIN
		
		L_ID_PARENT := P_ID_PERFIL_PUESTO_TO;
	
		 FOR ITEM IN (
		   		SELECT A.*,
					(SELECT NOMBRE FROM ENOC.PLLA_PUESTO WHERE ID_PUESTO = A.ID_PUESTO) AS NOMBRE,
					(SELECT COUNT(*) FROM ENOC.PLLA_PERFIL_PUESTO X WHERE X.ID_PERFIL_PUESTO_JEFE=A.ID_PERFIL_PUESTO ) AS TIENEHIJO
				FROM (SELECT DISTINCT P.*,
					LEVEL AS NIVEL_COPIA
				FROM ENOC.PLLA_PERFIL_PUESTO P
				WHERE P.ID_ENTIDAD = P_ID_ENTIDAD_FROM AND P.ID_AREA = P_ID_AREA_FROM
				start with ID_PERFIL_PUESTO = P_ID_PERFIL_PUESTO_FROM
				connect by prior ID_PERFIL_PUESTO = ID_PERFIL_PUESTO_JEFE)A
				WHERE ID_PERFIL_PUESTO <> P_ID_PERFIL_PUESTO_FROM AND A.NIVEL_COPIA = 2)
		   LOOP
			   
			   	SELECT COUNT(*) INTO L_CONTAR FROM ELISEO.CONTA_ENTIDAD_DEPTO WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO;
			   
			    IF L_CONTAR = 0 THEN 
					L_ERROR := 1;
					L_MSGERROR := 'No existe el departamento "'||ITEM.ID_DEPTO||'" en la entidad "'||P_ID_ENTIDAD_TO||'".';
					GOTO salida_val;
				END IF;
			   	
			   SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_PERFIL_PUESTO WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO   
			   AND ID_AREA = P_ID_AREA_TO AND ID_PUESTO = ITEM.ID_PUESTO AND ID_PERFIL_PUESTO_JEFE = L_ID_PARENT;
			  
			  	IF L_CONTAR > 0 THEN 
					L_ERROR := 1;
					L_MSGERROR := 'Ya existe registrado el puesto "'||ITEM.NOMBRE||'" en la entidad "'||P_ID_ENTIDAD_TO||'".';
					GOTO salida_val;
				END IF;
			   
			   	SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_TIPO_HORARIO WHERE UPPER(TRIM(NOMBRE)) = (
					SELECT UPPER(TRIM(X.NOMBRE)) FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
					)
				AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO;
			   
				IF L_CONTAR = 0 THEN 
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_CONFIG_HORARIO = (
						SELECT X.ID_TIPO_CONFIG_HORARIO FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
						)
					AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO;
				   
					IF L_CONTAR = 0 THEN 
						-- insertando tipo horario
						select coalesce(max(ID_TIPO_HORARIO),0)+1 into L_ID_TIPO_HORARIO from enoc.PLLA_TIPO_HORARIO;
						INSERT INTO ENOC.PLLA_TIPO_HORARIO(ID_TIPO_HORARIO,ID_ENTIDAD,ID_DEPTO,NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO)
						SELECT L_ID_TIPO_HORARIO AS ID_TIPO_HORARIO,P_ID_ENTIDAD_TO AS ID_ENTIDAD,ID_DEPTO,NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO
						FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO;
						--insertando horario detalle
						INSERT INTO ENOC.PLLA_HORARIO_DETALLE(ID_DIA,ID_TIPO_HORARIO,ID_CONTROL_ASIST,ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,
						 	HORA_ENTRADA_REF,HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,ID_USER_REG,FECHA_REG)
						SELECT ID_DIA,L_ID_TIPO_HORARIO AS ID_TIPO_HORARIO,ID_CONTROL_ASIST,ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,
								HORA_ENTRADA_REF,HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,P_ID_USER AS ID_USER_REG,CURRENT_DATE AS FECHA_REG
						FROM ENOC.PLLA_HORARIO_DETALLE  WHERE ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO;
						
						-- L_ERROR := 1;
						-- L_MSGERROR := 'No se ha configurado el tipo horario en la entidad "'||P_ID_ENTIDAD_TO||'" y departamento padre "'||ITEM.ID_DEPTO||'".';
						-- GOTO salida_val;
					ELSE 
					
						SELECT ID_TIPO_HORARIO INTO L_ID_TIPO_HORARIO FROM (SELECT ID_TIPO_HORARIO  FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_CONFIG_HORARIO = (
							SELECT X.ID_TIPO_CONFIG_HORARIO FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
							)
						AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO
						ORDER BY ID_TIPO_HORARIO ASC)
						WHERE ROWNUM = 1;
				
					END IF;
				ELSE 
					
					SELECT ID_TIPO_HORARIO INTO L_ID_TIPO_HORARIO FROM (SELECT ID_TIPO_HORARIO  FROM ENOC.PLLA_TIPO_HORARIO WHERE UPPER(TRIM(NOMBRE)) = (
						SELECT UPPER(TRIM(X.NOMBRE)) FROM ENOC.PLLA_TIPO_HORARIO X WHERE X.ID_TIPO_HORARIO = ITEM.ID_TIPO_HORARIO
						)
					AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO
					ORDER BY ID_TIPO_HORARIO ASC)
					WHERE ROWNUM = 1;
				
				END IF;
				
			    select coalesce(max(ID_PERFIL_PUESTO),0)+1 into L_ID_PERFIL_PUESTO from enoc.PLLA_PERFIL_PUESTO;
			   
			   IF ITEM.ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO_AREA THEN 
					L_ID_PERFIL_PUESTO_AREA := L_ID_PERFIL_PUESTO;
				ELSE 
					SELECT ID_PERFIL_PUESTO INTO L_ID_PERFIL_PUESTO_AREA FROM ENOC.PLLA_PERFIL_PUESTO 
					WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO 
					AND ID_PUESTO = (SELECT X.ID_PUESTO FROM ENOC.PLLA_PERFIL_PUESTO X WHERE X.ID_PERFIL_PUESTO = ITEM.ID_PERFIL_PUESTO_AREA)
					AND ROWNUM=1;
					IF L_ID_PERFIL_PUESTO_AREA IS NULL THEN 
						L_ID_PERFIL_PUESTO_AREA := L_ID_PERFIL_PUESTO;
					END IF;
				END IF;
			      
			    BEGIN
					   INSERT INTO ENOC.PLLA_PERFIL_PUESTO(ID_PERFIL_PUESTO,ID_PUESTO,ID_AREA,ID_ENTIDAD,ID_DEPTO,ID_AUTOMIA_PUESTO,
					   ID_TIPO_CONTROL_PERSONAL,NOEXPERIENCIA,NIVEL,ID_SITUACION_EDUCATIVO,ESPECIFICACION,ID_TIPO_HORARIO,
					   ID_TIPO_SUPERVISION,ID_PERFIL_PUESTO_JEFE,VIGENCIA,TIPO_ASIGNAR,ID_PERFIL_PUESTO_AREA,ID_TIPO_JEFE)
					   VALUES(L_ID_PERFIL_PUESTO,ITEM.ID_PUESTO,P_ID_AREA_TO,P_ID_ENTIDAD_TO,ITEM.ID_DEPTO,ITEM.ID_AUTOMIA_PUESTO,ITEM.ID_TIPO_CONTROL_PERSONAL,
					   ITEM.NOEXPERIENCIA,ITEM.NIVEL,ITEM.ID_SITUACION_EDUCATIVO,ITEM.ESPECIFICACION,L_ID_TIPO_HORARIO,ITEM.ID_TIPO_SUPERVISION,L_ID_PARENT,
					   ITEM.VIGENCIA,ITEM.TIPO_ASIGNAR,L_ID_PERFIL_PUESTO_AREA,ITEM.ID_TIPO_JEFE)
					   RETURNING ID_PERFIL_PUESTO INTO L_ID_PERFIL_PUESTO_NEW;
				EXCEPTION 
				WHEN DUP_VAL_ON_INDEX THEN
					  	L_ERROR := ITEM.ID_PERFIL_PUESTO;
						L_MSGERROR := 'El puesto "'||ITEM.NOMBRE||'" ya ha sido registrado.';
						GOTO salida_val;
				WHEN OTHERS THEN
						L_ERROR := ITEM.ID_PERFIL_PUESTO;
						L_MSGERROR := 'No se pudo registrar el puesto "'||ITEM.NOMBRE||'" en la entidad '||P_ID_ENTIDAD_TO||' por algún motivo.';
						GOTO salida_val;
				END;
		    	IF ITEM.TIENEHIJO > 0 THEN
					ENOC.PKG_JOB_ANALYSIS.SP_COPIAR_ORG_PUESTO_HIJAS(P_ID_ENTIDAD_FROM,P_ID_AREA_FROM,P_ID_ENTIDAD_TO,P_ID_AREA_TO,
					ITEM.ID_PERFIL_PUESTO,L_ID_PERFIL_PUESTO_NEW,P_ID_USER,L_ERROR,L_MSGERROR);
					IF L_ERROR<>0 THEN 
				  		GOTO salida_val;
				  	END IF;
				END IF;
			
		   END LOOP;
		   
		<<salida_val>> 
	    P_ERROR:= L_ERROR;
	    P_MSGERROR:= L_MSGERROR;
	END SP_COPIAR_ORG_PUESTO_HIJAS;
    PROCEDURE SP_COPIAR_TIPO_HORARIO(P_IDS_TIPO_HORARIO VARCHAR2,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,
	P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) 
	IS 
		L_ERROR NUMBER:=0;
		L_MSGERROR VARCHAR2(5000):='';
		ID_TIPO_HORARIO_MAX NUMBER:=0;
	BEGIN
	
		 FOR TIPOHORARIO IN (
		   		SELECT REGEXP_SUBSTR(P_IDS_TIPO_HORARIO, '[^,]+', 1, LEVEL) ID
				FROM DUAL
				CONNECT BY REGEXP_SUBSTR(P_IDS_TIPO_HORARIO, '[^,]+', 1, LEVEL) IS NOT NULL)
		 LOOP
			 select coalesce(max(ID_TIPO_HORARIO),0) into ID_TIPO_HORARIO_MAX from enoc.PLLA_TIPO_HORARIO;
			
			 INSERT INTO ENOC.PLLA_TIPO_HORARIO(ID_TIPO_HORARIO,ID_ENTIDAD,ID_DEPTO,NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO)
			 SELECT ROWNUM+ID_TIPO_HORARIO_MAX AS ID_TIPO_HORARIO,C.* FROM (SELECT A.ID_ENTIDAD,A.ID_DEPTO,B.*
				FROM (SELECT ID_ENTIDAD,ID_DEPTO FROM ELISEO.CONTA_ENTIDAD_DEPTO WHERE ID_ENTIDAD = P_ID_ENTIDAD_TO AND ES_GRUPO = '1' AND LENGTH(ID_DEPTO) = 1) A, 
				(SELECT NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_HORARIO = TIPOHORARIO.ID) B
				WHERE 1=1 AND 1 = (CASE WHEN P_ID_DEPTO_TO = '0' THEN 1 ELSE CASE WHEN ID_DEPTO = P_ID_DEPTO_TO THEN 1 ELSE 0 END END))C
				LEFT JOIN ENOC.PLLA_TIPO_HORARIO D ON UPPER(TRIM(C.NOMBRE)) = UPPER(TRIM(D.NOMBRE)) AND D.ID_ENTIDAD = C.ID_ENTIDAD AND D.ID_DEPTO = C.ID_DEPTO
				WHERE D.NOMBRE IS NULL AND C.ID_DEPTO <> '0';
			
		 END LOOP;
		   
		<<salida_val>> 
	    P_ERROR:= L_ERROR;
	    P_MSGERROR:= L_MSGERROR;
	END SP_COPIAR_TIPO_HORARIO;
END PKG_JOB_ANALYSIS;