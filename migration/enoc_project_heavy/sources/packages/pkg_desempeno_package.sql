-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE      PKG_DESEMPENO AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  PROCEDURE SP_GENERAR_PARTICIPANTE(P_ID_DESEMPENO NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_EVALUADOR(P_ID_DESEMPENO NUMBER,P_ID_PARTICIPANTE NUMBER,P_ID_EVALUADOR NUMBER,P_ID_TIPO_EVALUADOR NUMBER,P_ID_PROGRAMA_ESTUDIO NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_LISTAR_EVALUADOR(P_ID_PARTICIPANTE NUMBER, P_ID_TIPO_EVALUADOR NUMBER, P_TIPO VARCHAR2,CURSOR OUT SYS_REFCURSOR );
  PROCEDURE SP_GENERAR_PARTICIPANTE_GRUPO(P_ID_DESEMPENO NUMBER,P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2, P_ID_TIPO_TIEMPO_TRABAJO VARCHAR2,P_ID_CONDICION_LABORAL VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2 );
  PROCEDURE SP_GESTIONAR_RESULTADO_QUIZ(P_ID_CUESTIONARIO NUMBER,P_COD_TIPO_INT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_RESULTADO(P_ID_CUESTIONARIO NUMBER,P_COD_TIPO_INT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2) ;
  PROCEDURE SP_GENERAR_PUNTAJE(P_ID_PARTICIPANTE NUMBER,P_ID_TIPO VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_PUNTAJE_GRUPAL(P_ID_DESEMPENO NUMBER, P_ID_DEPTO VARCHAR2,P_ID_PARTICIPANTE NUMBER,P_ID_TIPO VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_ELIMINAR_EVALUACION(P_ID_PARTICIPANTE_EVALUADOR NUMBER, P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_FB_GENERAR_EVALUADOR(P_ID_DESEMPENO NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_FB_GENERAR_EVALUADOR_GRUPO(P_ID_DESEMPENO NUMBER,P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2 );
  PROCEDURE SP_FB_GENERAR_EVALUADOR_PARTIC(P_ID_DESEMPENO NUMBER,P_ID_PARTICIPANTE NUMBER,P_ID_EVALUADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  PROCEDURE SP_FB_VALIDAR_FECHA_REUNION(P_ID_EVALUADOR_PARTICIP NUMBER,P_FECHA_REUNION DATE,P_ERROR OUT number, P_MSGERROR out varchar2);
END PKG_DESEMPENO;


CREATE OR REPLACE PACKAGE BODY      PKG_DESEMPENO AS
  PROCEDURE SP_GENERAR_PARTICIPANTE(P_ID_DESEMPENO NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) AS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_participante number;
        l_fecha_inicio date;
                
      BEGIN
        
        select FECHA_INICIO into l_fecha_inicio from enoc.DES_DESEMPENO where ID_DESEMPENO=P_ID_DESEMPENO;
        select coalesce(max(id_participante),0)  into l_id_participante from enoc.des_participante;
     
        insert into ENOC.DES_PARTICIPANTE(
          ID_PARTICIPANTE,
          ID_DESEMPENO,
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO,
          ID_ESCALA,
          PUNTAJE,
          CERRADO,
          ID_USER_REG,
          FECHA_REG
        )
        select
        (row_number() OVER( ORDER BY x.ID_TRABAJADOR ASC )) + l_id_participante as ID_PARTICIPANTE,
        P_ID_DESEMPENO as ID_DESEMPENO,
        x.ID_TRABAJADOR,
        x.ID_SEDEAREA,
        x.ID_PERFIL_PUESTO,
        x.ID_CONDICION_LABORAL,
        x.ID_TIPO_TIEMPO_TRABAJO,
        null ID_ESCALA,
        0 as PUNTAJE,
        0 as CERRADO,
        P_ID_USER_REG,
        sysdate
        from(
          
          select 
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO
          from moises.trabajador 
          where ID_TRABAJADOR= P_ID_TRABAJADOR 
          and ID_TRABAJADOR not in(
            select ID_TRABAJADOR from enoc.DES_PARTICIPANTE
            where ID_DESEMPENO=P_ID_DESEMPENO
          )
          
        )x;
 
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_GENERAR_PARTICIPANTE;
      
 PROCEDURE SP_GENERAR_EVALUADOR(P_ID_DESEMPENO NUMBER,P_ID_PARTICIPANTE NUMBER,P_ID_EVALUADOR NUMBER,P_ID_TIPO_EVALUADOR NUMBER,P_ID_PROGRAMA_ESTUDIO NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) AS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_participante_evaluador number;
        l_id_tipo_evaluacion number;
        l_id_entidad number;
        l_id_perfil_puesto_jefe number;
        l_id_evaluador number;
        l_codigo varchar2(20);
        l_query varchar2(4000):='';
        l_num_pares number;
        l_num_pares_eje number;
        CURSOR curPart IS
        select id_participante,id_trabajador,id_perfil_puesto, id_sedearea from ENOC.DES_PARTICIPANTE
        where ID_DESEMPENO = P_ID_DESEMPENO
        and CASE WHEN P_ID_PARTICIPANTE =0 THEN 0 ELSE id_participante END = CASE WHEN P_ID_PARTICIPANTE =0 THEN 0 ELSE P_ID_PARTICIPANTE END
        order by id_participante;
        
        CURSOR curTipo IS
        select
        a.ID_EVALUACION_EVALUADOR,
        a.ID_TIPO_EVALUADOR,
        b.codigo
        from enoc.DES_EVALUACION_EVALUADOR a,enoc.des_tipo_evaluador b
        where a.ID_TIPO_EVALUADOR=b.ID_TIPO_EVALUADOR
        and a.ID_TIPO_EVALUACION=l_id_tipo_evaluacion
        and a.vigencia=1
        and a.id_entidad=l_id_entidad;

      
      BEGIN
      
      
        if P_ID_EVALUADOR>0 and P_ID_PARTICIPANTE>0 then
          if P_ID_PROGRAMA_ESTUDIO is not null then
            select count(1) into l_contar from  enoc.DES_PARTICIPANTE_EVALUADOR 
            where ID_PARTICIPANTE=P_ID_PARTICIPANTE 
            and ID_PROGRAMA_ESTUDIO=P_ID_PROGRAMA_ESTUDIO;
            
            if l_contar > 0  then
              l_error:=1;
              l_msgerror:='Ya esta asignado evaluador para el programa';
              goto salida;
            end if;
          end if;
        end if;
        
        select id_tipo_evaluacion,id_entidad,NUM_PARES into l_id_tipo_evaluacion,l_id_entidad,l_num_pares from enoc.DES_DESEMPENO where ID_DESEMPENO=P_ID_DESEMPENO;
         
        FOR curP in curPart LOOP
        BEGIN
            
            if P_ID_EVALUADOR>0 and P_ID_PARTICIPANTE>0 then
              
              select count(1) into l_contar from enoc.DES_PARTICIPANTE_EVALUADOR
              where ID_PARTICIPANTE=curP.id_participante
              and ID_EVALUADOR=P_ID_EVALUADOR
              and ID_TIPO_EVALUADOR=P_ID_TIPO_EVALUADOR;
              
              if l_contar=0 then
              
                select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0) + 1 into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                
                insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                  ID_PARTICIPANTE_EVALUADOR,
                  ID_PARTICIPANTE,
                  ID_EVALUADOR,
                  ID_TIPO_EVALUADOR,
                  ID_PROGRAMA_ESTUDIO,
                  FINALIZADO,
                  ID_USER_REG,
                  FECHA_REG
                )values(
                  l_id_participante_evaluador,
                  curP.id_participante,
                  P_ID_EVALUADOR,
                  P_ID_TIPO_EVALUADOR,
                  P_ID_PROGRAMA_ESTUDIO,
                  0,
                  P_ID_USER_REG,
                  sysdate
                );
              end if;
            else
              FOR curT in curTipo LOOP
              BEGIN
                l_codigo:=curT.codigo;
                
                case l_codigo
                  when 'AUT' then --AutoevaluaciÃ³n
                  
                    select count(1) into l_contar from enoc.DES_PARTICIPANTE_EVALUADOR
                    where ID_PARTICIPANTE=curP.id_participante
                    and ID_EVALUADOR=curP.id_participante
                    and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR;
                    
                    if l_contar=0 then
                      select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0) + 1 into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                      insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                        ID_PARTICIPANTE_EVALUADOR,
                        ID_PARTICIPANTE,
                        ID_EVALUADOR,
                        ID_TIPO_EVALUADOR,
                        FINALIZADO,
                        ID_USER_REG,
                        FECHA_REG
                      )values(
                        l_id_participante_evaluador,
                        curP.id_participante,
                        curP.id_participante,
                        curT.ID_TIPO_EVALUADOR,
                        0,
                        P_ID_USER_REG,
                        sysdate
                      );
                    end if;
                  when 'COEQ' then --Colaboradores,Equipo a cargo
                  
                    
                      select coalesce(ID_PERFIL_PUESTO_JEFE,0) into l_id_perfil_puesto_jefe from enoc.plla_perfil_puesto 
                      where id_perfil_puesto=curP.id_perfil_puesto;
                      
                      if l_id_perfil_puesto_jefe>0 then
                      
                         select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                          insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                          ID_PARTICIPANTE_EVALUADOR,
                          ID_PARTICIPANTE,
                          ID_EVALUADOR,
                          ID_TIPO_EVALUADOR,
                          FINALIZADO,
                          ID_USER_REG,
                          FECHA_REG
                         )
                        select
                          (row_number() OVER( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                          curP.id_participante,
                          a.id_participante,
                          curT.ID_TIPO_EVALUADOR,
                          0,
                          P_ID_USER_REG,
                          sysdate
                          from enoc.des_participante a
                          where  a.id_perfil_puesto=l_id_perfil_puesto_jefe
                          and a.id_participante not in(
                            select id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                            where id_participante=curP.id_participante
                            and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                          );
                      
                      /*
                        select count(1) into l_contar from enoc.des_participante where id_perfil_puesto=l_id_perfil_puesto_jefe;
                        
                        if l_contar=1 then
                          select id_participante into l_id_evaluador from enoc.des_participante where id_perfil_puesto=l_id_perfil_puesto_jefe;
                          
                          select count(1) into l_contar from enoc.DES_PARTICIPANTE_EVALUADOR
                          where ID_PARTICIPANTE=curP.id_participante
                          and ID_EVALUADOR=l_id_evaluador
                          and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR;
                          
                          if l_contar=0 then
                            select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0) + 1 into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                            insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                              ID_PARTICIPANTE_EVALUADOR,
                              ID_PARTICIPANTE,
                              ID_EVALUADOR,
                              ID_TIPO_EVALUADOR,
                              FINALIZADO,
                              ID_USER_REG,
                              FECHA_REG
                            )values(
                              l_id_participante_evaluador,
                              curP.id_participante,
                              l_id_evaluador,
                              curT.ID_TIPO_EVALUADOR,
                              0,
                              P_ID_USER_REG,
                              sysdate
                            );
                          end if;
                        
                        end if;
                        */
                      end if;
                      
                      
                      select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                      insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                      ID_PARTICIPANTE_EVALUADOR,
                      ID_PARTICIPANTE,
                      ID_EVALUADOR,
                      ID_TIPO_EVALUADOR,
                      FINALIZADO,
                      ID_USER_REG,
                      FECHA_REG
                     )
                    select
                      (row_number() OVER( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                      curP.id_participante,
                      a.id_participante,
                      curT.ID_TIPO_EVALUADOR,
                      0,
                      P_ID_USER_REG,
                      sysdate
                      from enoc.des_participante a,enoc.plla_perfil_puesto_jefe_fun pp
                      where  a.id_perfil_puesto=pp.id_perfil_puesto
                      and coalesce(pp.ID_PUESTO_PUESTO_JEFE,0) = curP.id_perfil_puesto
                      and a.id_participante not in(
                        select id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                        where id_participante=curP.id_participante
                        and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                      );
                      
                      
                  when 'JEIM' then --Jefe inmediato
                  
                    
                    select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                    insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                      ID_PARTICIPANTE_EVALUADOR,
                      ID_PARTICIPANTE,
                      ID_EVALUADOR,
                      ID_TIPO_EVALUADOR,
                      FINALIZADO,
                      ID_USER_REG,
                      FECHA_REG
                    )
                    select
                      (row_number() OVER( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                      curP.id_participante,
                      a.id_participante,
                      curT.ID_TIPO_EVALUADOR,
                      0,
                      P_ID_USER_REG,
                      sysdate
                      from enoc.des_participante a,enoc.plla_perfil_puesto pp
                      where  a.id_perfil_puesto=pp.id_perfil_puesto
                      and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curP.id_perfil_puesto
                      and a.id_participante not in(
                        select id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                        where id_participante=curP.id_participante
                        and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                      );
                      
                    select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                      insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                      ID_PARTICIPANTE_EVALUADOR,
                      ID_PARTICIPANTE,
                      ID_EVALUADOR,
                      ID_TIPO_EVALUADOR,
                      FINALIZADO,
                      ID_USER_REG,
                      FECHA_REG
                     )
                    select
                      (row_number() OVER( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                      curP.id_participante,
                      a.id_participante,
                      curT.ID_TIPO_EVALUADOR,
                      0,
                      P_ID_USER_REG,
                      sysdate
                      from enoc.des_participante a,enoc.plla_perfil_puesto_jefe_fun pp
                      where  a.id_perfil_puesto=COALESCE(pp.ID_PUESTO_PUESTO_JEFE,0)
                      and coalesce(pp.id_perfil_puesto,0) = curP.id_perfil_puesto
                      and a.id_participante not in(
                        select id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                        where id_participante=curP.id_participante
                        and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                      );
                when 'PAR' then --PAR
                    
                      
                      select count(1) into l_contar from enoc.DES_PARTICIPANTE_EVALUADOR where ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR and ID_PARTICIPANTE=curP.id_participante;
                      l_num_pares_eje:=0;
                      if l_contar<l_num_pares then
                        l_num_pares_eje:=l_num_pares-l_contar;
                        select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                        insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                            ID_PARTICIPANTE_EVALUADOR,
                            ID_PARTICIPANTE,
                            ID_EVALUADOR,
                            ID_TIPO_EVALUADOR,
                            FINALIZADO,
                            ID_USER_REG,
                            FECHA_REG
                           )
                          SELECT
                          (row_number() OVER( ORDER BY x.id_participante ASC )) + l_id_participante_evaluador,
                          curP.id_participante,
                          x.id_participante,
                          curT.ID_TIPO_EVALUADOR,
                          0,
                          P_ID_USER_REG,
                          sysdate
                        FROM(
                            SELECT 
                            a.id_participante
                            from enoc.des_participante a
                            where  a.id_perfil_puesto= curP.id_perfil_puesto
                            and a.id_participante<>curP.id_participante
                            and a.id_participante not in(
                              select id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                              where id_participante=curP.id_participante
                              and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                            )
                            ORDER BY DBMS_RANDOM.VALUE
                            )x
                        WHERE  rownum <= l_num_pares_eje;
                    end if;   
                else
                    l_error:=0;
                end case;
              END;
              END LOOP;
            end if;
        END;
        END LOOP;
  
       
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_GENERAR_EVALUADOR;
      PROCEDURE SP_LISTAR_EVALUADOR(P_ID_PARTICIPANTE NUMBER, P_ID_TIPO_EVALUADOR NUMBER, P_TIPO VARCHAR2,CURSOR OUT SYS_REFCURSOR ) AS
     
        l_query varchar2(4000):='';
        l_id_perfil_puesto number;
        l_id_desempeno number;
        l_id_puesto number;
        l_nivel number;
        l_id_tipo_jefe number;
        l_id_sedearea number;
      BEGIN
        
        select id_perfil_puesto,id_desempeno,id_sedearea into l_id_perfil_puesto,l_id_desempeno,l_id_sedearea from enoc.des_participante  where id_participante=P_ID_PARTICIPANTE;
        select id_puesto, nivel,id_tipo_jefe into l_id_puesto,l_nivel,l_id_tipo_jefe  from enoc.plla_perfil_puesto where id_perfil_puesto=l_id_perfil_puesto;

        delete from enoc.TT_LISTAR_EVALUADOR;
        
        l_query:='insert into  enoc.tt_listar_evaluador ';
        l_query:=l_query||'select p.id_participante, p.id_trabajador, p.id_perfil_puesto, p.id_sedearea ';
        l_query:=l_query||'from enoc.des_participante p, enoc.plla_perfil_puesto pp where p.id_perfil_puesto=pp.id_perfil_puesto ';
        l_query:=l_query||'and p.id_desempeno=:p1  ';
        l_query:=l_query||'and p.id_participante<>'||to_char(P_ID_PARTICIPANTE)||' ';
        if l_nivel=1 then
          l_query:=l_query||'and p.id_sedearea='||to_char(l_id_sedearea)||' '; 
        end if;
        if P_TIPO='T' then
          l_query:=l_query||'and pp.id_tipo_jefe='||to_char(l_id_tipo_jefe)||' ';
        else
          l_query:=l_query||'and pp.id_puesto='||to_char(l_id_puesto)||' ';
        end if;
        l_query:=l_query||'and p.id_participante not in( select id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR  where id_participante='||to_char(P_ID_PARTICIPANTE)||' and ID_TIPO_EVALUADOR='||to_char(P_ID_TIPO_EVALUADOR)||') ';
        
        l_query:=l_query||'and p.id_perfil_puesto in(';
          l_query:=l_query||'select a.id_perfil_puesto ';
          l_query:=l_query||'from enoc.des_participante a, enoc.plla_perfil_puesto b ';
          l_query:=l_query||' where a.id_perfil_puesto=b.id_perfil_puesto ';
          l_query:=l_query||'and a.id_desempeno='||to_char(l_id_desempeno)||' '; 
          if l_nivel=1 then
            l_query:=l_query||'and a.id_sedearea='||to_char(l_id_sedearea)||' ';
          end if;
          if P_TIPO='T' then
            l_query:=l_query||'and b.id_tipo_jefe='||to_char(l_id_tipo_jefe)||' ';
          else
            l_query:=l_query||'and b.id_puesto='||to_char(l_id_puesto)||' ';
          end if;
        l_query:=l_query||')';

        
        
        EXECUTE IMMEDIATE l_query USING l_id_desempeno;
        
              
        
        OPEN cursor FOR 
        select 
        p.id_participante,
        p.id_trabajador,
        p.id_perfil_puesto,
        p.id_sedearea,
        t.apellidonombre,
        pp.puesto,
        sa.depto_padre,
        sa.area,
        tj.nombre as tipojefe
        from enoc.tt_listar_evaluador p, enoc.vw_trabajador t, enoc.vw_perfil_puesto pp, enoc.VW_ENT_DEP_AREA_CCOSTO sa, enoc.plla_tipo_jefe tj
        where p.id_trabajador=t.id_trabajador
        and p.id_perfil_puesto=pp.id_perfil_puesto
        and p.id_sedearea=sa.id_sedearea
        and pp.id_tipo_jefe=tj.id_tipo_jefe
        order by t.apellidonombre;
        
      END SP_LISTAR_EVALUADOR;
      
       PROCEDURE SP_GENERAR_PARTICIPANTE_GRUPO(P_ID_DESEMPENO NUMBER,P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2, P_ID_TIPO_TIEMPO_TRABAJO VARCHAR2,P_ID_CONDICION_LABORAL VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2 ) AS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_participante number;
        l_fecha_inicio date;
        
        l_query varchar2(4000):='';
        l_id_depto varchar2(2000):='';
        l_id_tipo_tiempo_trabajo varchar2(2000):='';
        l_id_condicion_laboral varchar2(2000):='';
      BEGIN
      
        delete from enoc.TT_LISTAR_PARAM_PART;
        
        l_id_depto:=''''||REPLACE(P_ID_DEPTO, '*', ''',''')||'''';
        l_id_tipo_tiempo_trabajo:=REPLACE(P_ID_TIPO_TIEMPO_TRABAJO, '*', ',');
        l_id_condicion_laboral:=''''||REPLACE(P_ID_CONDICION_LABORAL, '*', ''',''')||'''';
        
    
        l_query:='insert into  enoc.TT_LISTAR_PARAM_PART(ID_CAMPO_NUM,ID_CAMPO_VAR,TIPO) ';
        l_query:=l_query||'select null,id_depto,''D'' from eliseo.conta_entidad_depto where id_depto in('||l_id_depto||') and id_entidad=:p1 ';
        l_query:=l_query||'union select ID_TIPO_TIEMPO_TRABAJO,null,''T'' from moises.TIPO_TIEMPO_TRABAJO where ID_TIPO_TIEMPO_TRABAJO in('||l_id_tipo_tiempo_trabajo||') ';
        l_query:=l_query||'union select null,ID_CONDICION_LABORAL,''C'' from moises.CONDICION_LABORAL where ID_CONDICION_LABORAL in('||l_id_condicion_laboral||') ';
        
        EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD;
        
        
        
        select FECHA_INICIO into l_fecha_inicio from enoc.DES_DESEMPENO where ID_DESEMPENO=P_ID_DESEMPENO;
        select coalesce(max(id_participante),0)  into l_id_participante from enoc.des_participante;
     
        insert into ENOC.DES_PARTICIPANTE(
          ID_PARTICIPANTE,
          ID_DESEMPENO,
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO,
          ID_ESCALA,
          PUNTAJE,
          CERRADO,
          ID_USER_REG,
          FECHA_REG
        )
        select
        (row_number() OVER( ORDER BY x.ID_TRABAJADOR ASC )) + l_id_participante as ID_PARTICIPANTE,
        P_ID_DESEMPENO as ID_DESEMPENO,
        x.ID_TRABAJADOR,
        x.ID_SEDEAREA,
        x.ID_PERFIL_PUESTO,
        x.ID_CONDICION_LABORAL,
        x.ID_TIPO_TIEMPO_TRABAJO,
        null ID_ESCALA,
        0 as PUNTAJE,
        0 as CERRADO,
        P_ID_USER_REG,
        sysdate
        from(
          select 
          a.ID_TRABAJADOR,
          a.ID_SEDEAREA,
          a.ID_PERFIL_PUESTO,
          a.ID_CONDICION_LABORAL,
          a.ID_TIPO_TIEMPO_TRABAJO
          from moises.trabajador a,enoc.vw_ent_dep_area_ccosto b
          where a.ID_SEDEAREA=b.ID_SEDEAREA
          and a.id_situacion_trabajador='1'
          and a.id_entidad=P_ID_ENTIDAD
          and a.ID_CONDICION_LABORAL in(select ID_CAMPO_VAR from enoc.TT_LISTAR_PARAM_PART where tipo='C' )
          and a.ID_TIPO_TIEMPO_TRABAJO in(select ID_CAMPO_NUM from enoc.TT_LISTAR_PARAM_PART where tipo='T' )
          and b.ID_DEPTO_PADRE in(select ID_CAMPO_VAR from enoc.TT_LISTAR_PARAM_PART where tipo='D' )
          and MOD ( FLOOR ( MONTHS_BETWEEN ( TRUNC( l_fecha_inicio ), TRUNC ( a.fecha_inicio ) ) ), 12 )>=1  --hasta un mes que esta trabajando
          and a.ID_TRABAJADOR not in(
            select ID_TRABAJADOR from enoc.DES_PARTICIPANTE
            where ID_DESEMPENO=P_ID_DESEMPENO
          )
          /*UNION
          select 
          a.ID_TRABAJADOR,
          a.ID_SEDEAREA,
          a.ID_PERFIL_PUESTO,
          a.ID_CONDICION_LABORAL,
          a.ID_TIPO_TIEMPO_TRABAJO
          from moises.trabajador a,enoc.vw_ent_dep_area_ccosto b 
          where a.ID_SEDEAREA=b.ID_SEDEAREA
          and a.id_situacion_trabajador='0' 
          and a.fecha_fin_efectivo is not null
          and a.id_entidad=P_ID_ENTIDAD
          and a.ID_CONDICION_LABORAL in(select ID_CAMPO_VAR from enoc.TT_LISTAR_PARAM_PART where tipo='C' )
          and a.ID_TIPO_TIEMPO_TRABAJO in(select ID_CAMPO_NUM from enoc.TT_LISTAR_PARAM_PART where tipo='T' )
          and b.ID_DEPTO_PADRE in(select ID_CAMPO_VAR from enoc.TT_LISTAR_PARAM_PART where tipo='D' )
          and a.ID_TRABAJADOR not in(
            select ID_TRABAJADOR from enoc.DES_PARTICIPANTE
            where ID_DESEMPENO=P_ID_DESEMPENO
          )
          and MOD ( FLOOR ( MONTHS_BETWEEN ( TRUNC( l_fecha_inicio ), TRUNC ( a.fecha_fin_efectivo ) ) ), 12 )<=1  --hasta un mes de antigÃ¼idad
          */
                   
        )x;
 
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_GENERAR_PARTICIPANTE_GRUPO;
      
      PROCEDURE SP_GESTIONAR_RESULTADO_QUIZ(P_ID_CUESTIONARIO NUMBER,P_COD_TIPO_INT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
      AS
        l_contar number:=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
      begin

        case P_COD_TIPO_INT
          when 'EC' then --CATEGORIZACION
            enoc.PKG_CATEGORIZATION.SP_GENERAR_RESULTADO(P_ID_CUESTIONARIO,P_COD_TIPO_INT,l_error,l_msgerror);
          when 'DE' then --DESEMPEÃO
            enoc.PKG_DESEMPENO.SP_GENERAR_RESULTADO(P_ID_CUESTIONARIO,P_COD_TIPO_INT,l_error,l_msgerror);
        else
            l_error:=0;
        end case;
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;  
      end SP_GESTIONAR_RESULTADO_QUIZ;
      PROCEDURE SP_GENERAR_RESULTADO(P_ID_CUESTIONARIO NUMBER,P_COD_TIPO_INT VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2) 
      AS
       l_contar number:=0;
       l_error number:=0;
       l_msgerror varchar2(200):='';
       l_id_entidad number;
       l_id_desempeno number;
       l_id_tipo_eval_instrumento number;
       l_tipo varchar2(5);
       l_id_persona number;
       l_id_instrumento number;
       l_id_sala number;
       l_id_evaluador number;
       l_id_participante_evaluador number;
       l_id_tipo_evaluador number;
       l_cant_puntaje NUMBER;
       l_id_participante number;
      BEGIN 
      
        SELECT ID_INSTRUMENTO,ID_SALA,ID_PERSONA,ID_EVALUADOR INTO l_id_instrumento,l_id_sala,l_id_persona,l_id_evaluador FROM LUCAS.INSTRUMENTO_CUESTIONARIO WHERE ID_CUESTIONARIO=P_ID_CUESTIONARIO;
        --calculo por persona
        LUCAS.pcd_calc_cuest_person_likert (
          l_id_instrumento,
          l_id_sala,
          l_id_persona
        );
        
        
       
         
        SELECT a.id_desempeno, a.id_entidad INTO l_id_desempeno,l_id_entidad from enoc.des_desempeno a, enoc.des_participante b 
        where a.id_desempeno=b.id_desempeno
        and b.id_participante=l_id_evaluador;
        
        
        
        
        SELECT count(1) INTO l_contar 
        from enoc.des_participante a, moises.trabajador t ,ENOC.DES_PARTICIPANTE_EVALUADOR P
        where a.id_trabajador=t.id_trabajador
        AND A.ID_PARTICIPANTE=P.ID_PARTICIPANTE
        AND P.ID_EVALUADOR=l_id_evaluador
        and t.ID_PERSONA=l_id_persona
        and t.id_entidad=l_id_entidad
        AND a.ID_desempeno=l_id_desempeno;
        
        if l_contar = 0  then
          l_error:=1;
          l_msgerror:='1-No hay evaluador';
          goto salida;
        end if;
        
         
        SELECT p.ID_PARTICIPANTE_EVALUADOR,p.ID_TIPO_EVALUADOR, p.id_participante INTO l_id_participante_evaluador,l_id_tipo_evaluador,l_id_participante
        from enoc.des_participante a, moises.trabajador t ,ENOC.DES_PARTICIPANTE_EVALUADOR P
        where a.id_trabajador=t.id_trabajador
        AND A.ID_PARTICIPANTE=P.ID_PARTICIPANTE
        AND P.ID_EVALUADOR=l_id_evaluador
        and t.ID_PERSONA=l_id_persona
        and t.id_entidad=l_id_entidad
        AND a.ID_desempeno=l_id_desempeno;
        
        
        SELECT count(1) into  l_contar FROM ENOC.DES_PARTICIPANTE_EVALUADOR A, ENOC.DES_DESEMPENO_TIPO_EVAL B
        WHERE B.ID_DESEMPENO=l_id_desempeno
        AND A.ID_TIPO_EVALUADOR=B.ID_TIPO_EVALUADOR
        AND A.ID_PARTICIPANTE_EVALUADOR=l_id_participante_evaluador
        AND B.ID_SALA=l_id_sala
        AND A.ID_EVALUADOR=l_id_evaluador
        AND B.ID_TIPO_EVALUADOR=l_id_tipo_evaluador
        and B.id_instrumento=l_id_instrumento;
        
     
        if l_contar = 0 or l_contar > 1  then
          l_error:=1;
          l_msgerror:='1-No procesa';
          goto salida;
        end if;
        
        select  round(coalesce(avg(x.puntaje_con_formula),0),0)  INTO l_cant_puntaje
        from lucas.instrumento_cuestionario  X
        where X.id_instrumento= l_id_instrumento
        and X.id_persona=l_id_persona
        AND X.ID_SALA=l_id_sala
        AND X.ID_EVALUADOR IN(
            select Y.id_evaluador from  enoc.DES_PARTICIPANTE_EVALUADOR Y
            WHERE ID_PARTICIPANTE_EVALUADOR = l_id_participante_evaluador
        );
         
        update ENOC.DES_PARTICIPANTE_EVALUADOR set 
        finalizado=1,
        PUNTAJE=l_cant_puntaje,
        TIPO_EVAL='Q',
        ID_USER_MOD=l_id_persona, 
        FECHA_MOD=SYSDATE
        where  ID_PARTICIPANTE_EVALUADOR = l_id_participante_evaluador;

        enoc.PKG_DESEMPENO.SP_GENERAR_PUNTAJE(
            l_id_participante, 
            'P',
            l_id_persona,
            l_error,
            l_msgerror
          );
         <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_GENERAR_RESULTADO;
      PROCEDURE SP_GENERAR_PUNTAJE(P_ID_PARTICIPANTE NUMBER,P_ID_TIPO VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_desempeno number;
        l_puntaje number;
        l_puntaje_dec number(10,2);
        l_puntos number;
        l_id_tipo_calculo number;
        l_base number(10,2);
        l_id_escala number;
        l_id_perfil_puesto number;
         l_puntosq number;
        l_puntajeq_dec number(10,2);
        l_puntajeq number;
        l_tipo_eval varchar2(2);
      BEGIN 
      
        select id_desempeno,id_perfil_puesto into l_id_desempeno,l_id_perfil_puesto from enoc.des_participante where id_participante=P_ID_PARTICIPANTE;
        
        select id_tipo_calculo,coalesce(TIPO_EVAL,'P') into l_id_tipo_calculo,l_tipo_eval  from enoc.des_desempeno where id_desempeno=l_id_desempeno;
        
        select base into l_base from enoc.des_tipo_calculo where id_tipo_calculo=l_id_tipo_calculo;
        
        if l_tipo_eval='Q' then
          select coalesce(avg(puntaje),0) into l_puntosq from  ENOC.DES_PARTICIPANTE_EVALUADOR 
          where id_participante=P_ID_PARTICIPANTE
          and coalesce(TIPO_EVAL,'P')='Q';
          
          l_puntaje_dec:=ROUND(l_puntosq,2);
          l_puntaje:=ROUND(l_puntosq,0);
        else
        
          SELECT coalesce(SUM(coalesce(PUNTOS,0)),0) into  l_puntos
          FROM ENOC.VW_DES_RESULTADO_MODELO_SUM 
          where ID_PARTICIPANTE=P_ID_PARTICIPANTE
          and id_perfil_puesto=l_id_perfil_puesto;
          
          l_puntaje_dec:=ROUND((l_puntos*l_base)/100,2);
          l_puntaje:=ROUND((l_puntos*l_base)/100,0);
        end if;
        if l_puntaje_dec>0 then
          select count(1) into l_contar from enoc.des_desempeno_escala where id_desempeno=l_id_desempeno and (l_puntaje between desde and hasta);
          if l_contar=1 then
            select id_escala into l_id_escala from enoc.des_desempeno_escala where id_desempeno=l_id_desempeno and (l_puntaje between desde and hasta);
          end if;
        end if;
        
        if P_ID_TIPO='C' then --C.puntaje y cierre, P: solo puntaje
            update enoc.des_participante set
              id_escala=l_id_escala,
              puntaje=l_puntaje_dec,
              CERRADO=1,
              id_user_mod=P_ID_USER_REG,
              fecha_mod=sysdate
            where id_participante=P_ID_PARTICIPANTE;
          else
            update enoc.des_participante set
              id_escala=l_id_escala,
              puntaje=l_puntaje_dec,
              id_user_mod=P_ID_USER_REG,
              fecha_mod=sysdate
            where id_participante=P_ID_PARTICIPANTE;
          end if;
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_GENERAR_PUNTAJE;
      
      
      PROCEDURE SP_GENERAR_PUNTAJE_GRUPAL(P_ID_DESEMPENO NUMBER, P_ID_DEPTO VARCHAR2,P_ID_PARTICIPANTE NUMBER,P_ID_TIPO VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
         CURSOR curPart IS
         SELECT A.ID_PARTICIPANTE
         FROM ENOC.DES_PARTICIPANTE A, ENOC.VW_ENT_DEP_AREA_CCOSTO B
         WHERE A.ID_SEDEAREA=B.ID_SEDEAREA
         AND A.ID_DESEMPENO=P_ID_DESEMPENO
         AND CASE WHEN P_ID_DEPTO IS NOT NULL AND P_ID_DEPTO != '0' THEN B.ID_DEPTO_PADRE ELSE '0' END =  CASE WHEN P_ID_DEPTO IS NOT NULL THEN P_ID_DEPTO ELSE '0' END
         AND CASE WHEN P_ID_PARTICIPANTE  <> 0 THEN A.ID_PARTICIPANTE  ELSE 0 END =  CASE WHEN P_ID_PARTICIPANTE  <> 0 THEN P_ID_PARTICIPANTE ELSE 0 END
         ORDER BY A.ID_PARTICIPANTE;
        
      BEGIN 
      
        FOR curI in curPart LOOP
        BEGIN
          ENOC.PKG_DESEMPENO.SP_GENERAR_PUNTAJE(curI.ID_PARTICIPANTE,P_ID_TIPO,P_ID_USER_REG,l_error, l_msgerror);
        END;
        END LOOP;
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_GENERAR_PUNTAJE_GRUPAL;
      
      PROCEDURE SP_ELIMINAR_EVALUACION(P_ID_PARTICIPANTE_EVALUADOR NUMBER, P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_participante number;
       BEGIN
       
        select id_participante into l_id_participante from ENOC.DES_PARTICIPANTE_EVALUADOR where ID_PARTICIPANTE_EVALUADOR=P_ID_PARTICIPANTE_EVALUADOR;
        
        DELETE FROM ENOC.DES_RESULTADO where ID_PARTICIPANTE_EVALUADOR=P_ID_PARTICIPANTE_EVALUADOR;
        
        UPDATE ENOC.DES_PARTICIPANTE_EVALUADOR SET
          FINALIZADO=0,
          COMENTARIO=NULL,
          id_user_mod=P_ID_USER_REG,
          fecha_mod=sysdate
        where ID_PARTICIPANTE_EVALUADOR=P_ID_PARTICIPANTE_EVALUADOR;  
        
        ENOC.PKG_DESEMPENO.SP_GENERAR_PUNTAJE(l_id_participante,'P',P_ID_USER_REG,l_error, l_msgerror);
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
       END SP_ELIMINAR_EVALUACION;
       
       PROCEDURE SP_FB_GENERAR_EVALUADOR(P_ID_DESEMPENO NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) AS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_evaluador number;
                
      BEGIN
        

        select coalesce(max(ID_EVALUADOR),0)  into l_id_evaluador from enoc.DES_FB_EVALUADOR;
     
        insert into ENOC.DES_FB_EVALUADOR(
          ID_EVALUADOR,
          ID_DESEMPENO,
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO,
          ID_USER_REG,
          FECHA_REG
        )
        select
        (row_number() OVER( ORDER BY x.ID_TRABAJADOR ASC )) + l_id_evaluador as ID_PARTICIPANTE,
        P_ID_DESEMPENO as ID_DESEMPENO,
        x.ID_TRABAJADOR,
        x.ID_SEDEAREA,
        x.ID_PERFIL_PUESTO,
        x.ID_CONDICION_LABORAL,
        x.ID_TIPO_TIEMPO_TRABAJO,
        P_ID_USER_REG,
        sysdate
        from(
          
          select 
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO
          from moises.trabajador 
          where ID_TRABAJADOR= P_ID_TRABAJADOR 
          and ID_TRABAJADOR not in(
            select ID_TRABAJADOR from enoc.DES_FB_EVALUADOR
            where ID_DESEMPENO=P_ID_DESEMPENO
          )
          
        )x;
 
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_FB_GENERAR_EVALUADOR;
      
       PROCEDURE SP_FB_GENERAR_EVALUADOR_GRUPO(P_ID_DESEMPENO NUMBER,P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2 ) AS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_evaluador number;
        
        l_query varchar2(4000):='';
        l_id_depto varchar2(2000):='';

      BEGIN
      
        delete from enoc.TT_LISTAR_PARAM_PART;
        
        l_id_depto:=''''||REPLACE(P_ID_DEPTO, '*', ''',''')||'''';
        
    
        l_query:='insert into  enoc.TT_LISTAR_PARAM_PART(ID_CAMPO_NUM,ID_CAMPO_VAR,TIPO) ';
        l_query:=l_query||'select null,id_depto,''D'' from eliseo.conta_entidad_depto where id_depto in('||l_id_depto||') and id_entidad=:p1 ';
         
        EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD;
        
   
        select coalesce(max(ID_EVALUADOR),0)  into l_id_evaluador from enoc.DES_FB_EVALUADOR;
     
        insert into ENOC.DES_FB_EVALUADOR(
          ID_EVALUADOR,
          ID_DESEMPENO,
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO,
          ID_USER_REG,
          FECHA_REG
        )
        select
        (row_number() OVER( ORDER BY x.ID_TRABAJADOR ASC )) + l_id_evaluador as ID_PARTICIPANTE,
        P_ID_DESEMPENO as ID_DESEMPENO,
        x.ID_TRABAJADOR,
        x.ID_SEDEAREA,
        x.ID_PERFIL_PUESTO,
        x.ID_CONDICION_LABORAL,
        x.ID_TIPO_TIEMPO_TRABAJO,
        P_ID_USER_REG,
        sysdate
        from(
          select 
          a.ID_TRABAJADOR,
          a.ID_SEDEAREA,
          a.ID_PERFIL_PUESTO,
          a.ID_CONDICION_LABORAL,
          a.ID_TIPO_TIEMPO_TRABAJO
          from moises.trabajador a,enoc.vw_ent_dep_area_ccosto b
          where a.ID_SEDEAREA=b.ID_SEDEAREA
          and a.id_situacion_trabajador='1'
          and a.id_entidad=P_ID_ENTIDAD
          and b.ID_DEPTO_PADRE in(
            select ID_CAMPO_VAR from enoc.TT_LISTAR_PARAM_PART where tipo='D' 
          )
          and a.ID_TRABAJADOR not in(
            select ID_TRABAJADOR from enoc.DES_FB_EVALUADOR
            where ID_DESEMPENO=P_ID_DESEMPENO
          )
          and a.id_perfil_puesto in(
            select id_perfil_puesto_jefe from enoc.plla_perfil_puesto
            where id_entidad=P_ID_ENTIDAD
            and id_depto in(
              select ID_CAMPO_VAR from enoc.TT_LISTAR_PARAM_PART where tipo='D' 
            )
          )
                             
        )x;
 
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_FB_GENERAR_EVALUADOR_GRUPO;
      
      PROCEDURE SP_FB_GENERAR_EVALUADOR_PARTIC(P_ID_DESEMPENO NUMBER,P_ID_PARTICIPANTE NUMBER,P_ID_EVALUADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) AS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_evaluador_particip number;
        l_num_partipante number;
        l_num_partipante_eje number;
        l_num_eval number;
        l_jefes number;
        l_num_div number;
        
        CURSOR curEval IS
        select id_evaluador,id_trabajador,id_perfil_puesto, id_sedearea from ENOC.DES_FB_EVALUADOR
        where ID_DESEMPENO = P_ID_DESEMPENO
        and CASE WHEN P_ID_EVALUADOR =0 THEN 0 ELSE id_evaluador END = CASE WHEN P_ID_EVALUADOR =0 THEN 0 ELSE P_ID_EVALUADOR END
        order by id_evaluador;
        
        l_id_est number;
        
      
      BEGIN
        
       
        
        if P_ID_EVALUADOR>0 and P_ID_PARTICIPANTE>0 then
              
              select count(1) into l_contar from enoc.DES_FB_EVALUADOR_PARTICIP
              where ID_PARTICIPANTE=P_ID_PARTICIPANTE;
                
              if l_contar=0 then
              
                select coalesce(max(ID_EVALUADOR_PARTICIP),0) + 1 into l_id_evaluador_particip from enoc.DES_FB_EVALUADOR_PARTICIP;
                
                insert into enoc.DES_FB_EVALUADOR_PARTICIP(
                  ID_EVALUADOR_PARTICIP,
                  ID_PARTICIPANTE,
                  ID_EVALUADOR,
                  ID_SEDEAREA,
                  ID_PERFIL_PUESTO,
                  ID_CONDICION_LABORAL,
                  ID_TIPO_TIEMPO_TRABAJO,
                  ID_ESTADO_EVA,
                  ID_USER_REG,
                  FECHA_REG
                )
                
                select
                l_id_evaluador_particip,
                P_ID_PARTICIPANTE,
                P_ID_EVALUADOR,
                a.ID_SEDEAREA,
                a.ID_PERFIL_PUESTO,
                a.ID_CONDICION_LABORAL,
                a.ID_TIPO_TIEMPO_TRABAJO,
                '01',--registro
                P_ID_USER_REG,
                sysdate
                from moises.trabajador a, enoc.DES_PARTICIPANTE p
                where a.id_trabajador=p.id_trabajador
                and p.ID_PARTICIPANTE=P_ID_PARTICIPANTE
                and a.id_situacion_trabajador='1';
                
                select coalesce(max(ID_EVALUADOR_PARTICIP_EST),0) + 1 into l_id_est from enoc.DES_FB_EVALUADOR_PARTICIP_EST;
                
                insert into ENOC.DES_FB_EVALUADOR_PARTICIP_EST(
                  ID_EVALUADOR_PARTICIP_EST,
                  ID_EVALUADOR_PARTICIP,
                  ID_ESTADO_EVA,
                  ID_USER_REG,
                  FECHA_REG
                )
                select
                l_id_est,
                l_id_evaluador_particip,
                '01',--registro
                P_ID_USER_REG,
                sysdate
                from moises.trabajador a, enoc.DES_PARTICIPANTE p
                where a.id_trabajador=p.id_trabajador
                and p.ID_PARTICIPANTE=P_ID_PARTICIPANTE
                and a.id_situacion_trabajador='1';
            else
              l_error:=1;
              l_msgerror:='Ya esta asignado';
              goto salida;
            end if;
 
        else
         
          FOR curE in curEval LOOP
          BEGIN
          
            select coalesce(max(ID_EVALUADOR_PARTICIP),0)  into l_id_evaluador_particip from enoc.DES_FB_EVALUADOR_PARTICIP;
            
            select count(1) into l_jefes from moises.trabajador where id_perfil_puesto=curE.id_perfil_puesto and  id_situacion_trabajador='1';
  
            if l_jefes=1 then
            
             
               insert into enoc.TT_FB_EVALUADOR_PARTICIP(
                ID_EVALUADOR_PARTICIP,
                ID_PARTICIPANTE,
                ID_EVALUADOR,
                ID_SEDEAREA,
                ID_PERFIL_PUESTO,
                ID_CONDICION_LABORAL,
                ID_TIPO_TIEMPO_TRABAJO
                )
               
               select
                  (row_number() OVER( ORDER BY p.id_participante ASC )) + l_id_evaluador_particip,
                  p.id_participante,
                  curE.id_evaluador,
                  a.ID_SEDEAREA,
                  a.ID_PERFIL_PUESTO,
                  a.ID_CONDICION_LABORAL,
                  a.ID_TIPO_TIEMPO_TRABAJO
                  from moises.trabajador a, enoc.DES_PARTICIPANTE p,enoc.plla_perfil_puesto pp
                  where a.id_trabajador = p.id_trabajador
                  and a.id_perfil_puesto=pp.id_perfil_puesto
                  and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curE.id_perfil_puesto
                  and p.ID_DESEMPENO=P_ID_DESEMPENO
                  and a.id_situacion_trabajador='1'
                  and p.id_participante not in(
                    select id_participante from enoc.DES_FB_EVALUADOR_PARTICIP x,enoc.DES_FB_EVALUADOR y
                    where x.id_evaluador=y.id_evaluador
                    and y.ID_DESEMPENO=P_ID_DESEMPENO
                  )
                  order by p.id_participante;
                  
              elsif l_jefes>1 then
                select count(1) into l_num_partipante from moises.trabajador a, enoc.DES_PARTICIPANTE p,enoc.plla_perfil_puesto pp
                where a.id_trabajador = p.id_trabajador
                and a.id_perfil_puesto=pp.id_perfil_puesto
                and a.id_situacion_trabajador='1'
                and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curE.id_perfil_puesto
                and p.ID_DESEMPENO=P_ID_DESEMPENO;
                
                
                select count(distinct y.id_evaluador) into l_num_eval from enoc.DES_FB_EVALUADOR_PARTICIP x,enoc.DES_FB_EVALUADOR y
                where x.id_evaluador=y.id_evaluador
                and y.id_perfil_puesto=curE.id_perfil_puesto
                and y.ID_DESEMPENO=P_ID_DESEMPENO;
                
                              
                l_num_div:= l_num_partipante/l_jefes;
                if l_jefes=(l_num_eval+1) then
                  l_num_partipante_eje:= FLOOR(l_num_div)*2;
                else
                  l_num_partipante_eje:= FLOOR(l_num_div);
                end if;
                
                
                
                insert into enoc.TT_FB_EVALUADOR_PARTICIP(
                  ID_EVALUADOR_PARTICIP,
                  ID_PARTICIPANTE,
                  ID_EVALUADOR,
                  ID_SEDEAREA,
                  ID_PERFIL_PUESTO,
                  ID_CONDICION_LABORAL,
                  ID_TIPO_TIEMPO_TRABAJO
                )               
                select
                 (row_number() OVER( ORDER BY x.id_participante ASC )) + l_id_evaluador_particip,
                 x.id_participante,
                 curE.id_evaluador,
                 x.ID_SEDEAREA,
                 x.ID_PERFIL_PUESTO,
                 x.ID_CONDICION_LABORAL,
                 x.ID_TIPO_TIEMPO_TRABAJO
                 from (
                  select
                    p.id_participante,
                    a.ID_SEDEAREA,
                    a.ID_PERFIL_PUESTO,
                    a.ID_CONDICION_LABORAL,
                    a.ID_TIPO_TIEMPO_TRABAJO
                    from moises.trabajador a, enoc.DES_PARTICIPANTE p,enoc.plla_perfil_puesto pp
                    where a.id_trabajador = p.id_trabajador
                    and a.id_perfil_puesto=pp.id_perfil_puesto
                    and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curE.id_perfil_puesto
                    and p.ID_DESEMPENO=P_ID_DESEMPENO
                    and a.id_situacion_trabajador='1'
                    and p.id_participante not in(
                      select id_participante from enoc.DES_FB_EVALUADOR_PARTICIP x,enoc.DES_FB_EVALUADOR y
                      where x.id_evaluador=y.id_evaluador
                      and y.ID_DESEMPENO=P_ID_DESEMPENO
                    )
                    ORDER BY DBMS_RANDOM.VALUE
                )x 
                WHERE  rownum <= l_num_partipante_eje;
              end if;
              
              
             insert into enoc.DES_FB_EVALUADOR_PARTICIP(
                    ID_EVALUADOR_PARTICIP,
                    ID_PARTICIPANTE,
                    ID_EVALUADOR,
                    ID_SEDEAREA,
                    ID_PERFIL_PUESTO,
                    ID_CONDICION_LABORAL,
                    ID_TIPO_TIEMPO_TRABAJO,
                    ID_ESTADO_EVA,
                    ID_USER_REG,
                    FECHA_REG
              )
              select
                ID_EVALUADOR_PARTICIP,
                ID_PARTICIPANTE,
                ID_EVALUADOR,
                ID_SEDEAREA,
                ID_PERFIL_PUESTO,
                ID_CONDICION_LABORAL,
                ID_TIPO_TIEMPO_TRABAJO,
                '01',--registro
                P_ID_USER_REG,
                sysdate
              from enoc.TT_FB_EVALUADOR_PARTICIP;
              
              select coalesce(max(ID_EVALUADOR_PARTICIP_EST),0)  into l_id_est from enoc.DES_FB_EVALUADOR_PARTICIP_EST;
              
              insert into ENOC.DES_FB_EVALUADOR_PARTICIP_EST(
                  ID_EVALUADOR_PARTICIP_EST,
                  ID_EVALUADOR_PARTICIP,
                  ID_ESTADO_EVA,
                  ID_USER_REG,
                  FECHA_REG
                )
                select
                (row_number() OVER( ORDER BY ID_EVALUADOR_PARTICIP ASC )) + l_id_est,
                ID_EVALUADOR_PARTICIP,
                '01',--registro
                P_ID_USER_REG,
                sysdate
                from enoc.TT_FB_EVALUADOR_PARTICIP;
                
              
            END;
          END LOOP;
        end if;
       
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_FB_GENERAR_EVALUADOR_PARTIC;
      
      PROCEDURE SP_FB_VALIDAR_FECHA_REUNION(P_ID_EVALUADOR_PARTICIP NUMBER,P_FECHA_REUNION DATE,P_ERROR OUT number, P_MSGERROR out varchar2)
      IS
       l_contar number;
       l_error number:=0;
       l_msgerror varchar2(200):='';
       l_id_evaluador number;
       l_id_participante number;
       l_id_desempeno number;
       l_fecha_fin date;
       l_tiempo number;
       l_fecha date;
       l_id_trabajadorev number;
       l_id_trabajadorpa number;
      BEGIN
        SELECT A.ID_EVALUADOR, A.ID_PARTICIPANTE ,B.ID_DESEMPENO, B.ID_TRABAJADOR
        INTO l_id_evaluador,l_id_participante,l_id_desempeno,l_id_trabajadorev
        FROM ENOC.DES_FB_EVALUADOR_PARTICIP A, ENOC.DES_FB_EVALUADOR B
        WHERE A.ID_EVALUADOR=B.ID_EVALUADOR
        AND A.ID_EVALUADOR_PARTICIP=P_ID_EVALUADOR_PARTICIP;
        
        select id_trabajador into l_id_trabajadorpa from enoc.des_participante  where id_participante= l_id_participante;
        
        select coalesce(FEEDBACK_TIEMPO,0) into l_tiempo from enoc.DES_DESEMPENO where id_desempeno=l_id_desempeno;
        
        select 
        to_date(to_char(P_FECHA_REUNION,'YYYY-MM-DD'),'YYYY-MM-DD'),
        P_FECHA_REUNION + l_tiempo / 1440
        into  
        l_fecha,
        l_fecha_fin 
        from dual; 
        
        --vacacion evaluador
        select count(1) into l_contar from enoc.PLLA_PERIODO_VAC_TRAB a,enoc.PLLA_ROL_VACACIONAL b
        where a.ID_PERIODO_VAC_TRAB=b.ID_PERIODO_VAC_TRAB
        and a.id_trabajador=l_id_trabajadorev
        and l_fecha between FECHA_INI and FECHA_FIN
        and b.condicion='P';
        
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Evaluador tiene programadas sus vacaciones en esta fecha. Por favor elija una nueva fecha';
            GOTO salida;
        end if;
        
        --vacacion participante
        select count(1) into l_contar from enoc.PLLA_PERIODO_VAC_TRAB a,enoc.PLLA_ROL_VACACIONAL b
        where a.ID_PERIODO_VAC_TRAB=b.ID_PERIODO_VAC_TRAB
        and a.id_trabajador=l_id_trabajadorpa
        and l_fecha between FECHA_INI and FECHA_FIN
        and b.condicion='P';
        
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Participante tiene programadas sus vacaciones en esta fecha. Por favor elija una nueva fecha';
            GOTO salida;
        end if;
        
        
         --lic_permi evaluador
        select count(1) into l_contar  from(
          select id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorev
          and l_fecha between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in('00','04')
          and PERIODO ='D'
          union
          select id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorev
          and P_FECHA_REUNION between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in('00','04')
          and PERIODO ='H'
        );
  
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Evaluador tiene una Licencia/Permiso registrada en la fecha seleccionada. Por favor elija una nueva fecha';
            GOTO salida;
        end if;
        
         --lic_permi participante
        select count(1) into l_contar  from(
          select id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorpa
          and l_fecha between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in('00','04')
          and PERIODO ='D'
          union
          select id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorpa
          and P_FECHA_REUNION between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in('00','04')
          and PERIODO ='H'
        );
  
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Participante tiene una Licencia/Permiso registrada en la fecha seleccionada. Por favor elija una nueva fecha';
            GOTO salida;
        end if;
        
        --feriado
        select count(1) into l_contar from ENOC.plla_feriados where FECHA=l_fecha;
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='La fecha seleccionada es un feriado. Por favor elija una nueva fecha';
            GOTO salida;
        end if;
        
        --cruce del evaluador
        select count(1) into l_contar from ENOC.DES_FB_EVALUADOR_PARTICIP
        where id_evaluador=l_id_evaluador
        and (P_FECHA_REUNION between FECHA_REUNION and FECHA_REUNION + l_tiempo / 1440) 
        and ID_EVALUADOR_PARTICIP<>P_ID_EVALUADOR_PARTICIP;
        
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Evaluador ya tiene programado en la fecha y hora seleccionada ';
            GOTO salida;
        end if;
        
        --cruce del evaluador como participante
        select count(1) into l_contar from enoc.DES_PARTICIPANTE where id_desempeno=l_id_desempeno and id_trabajador=l_id_trabajadorev;
        
        if l_contar>0 then
          select id_participante into l_id_participante from enoc.DES_PARTICIPANTE where id_desempeno=l_id_desempeno and id_trabajador=l_id_trabajadorev;
          
          select count(1) into l_contar from ENOC.DES_FB_EVALUADOR_PARTICIP
          where id_participante=l_id_participante
          and (P_FECHA_REUNION between FECHA_REUNION and FECHA_REUNION + l_tiempo / 1440) 
          and ID_EVALUADOR_PARTICIP<>P_ID_EVALUADOR_PARTICIP;
          
          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Evaluador ya tiene programado como participante en la fecha y hora seleccionada';
              GOTO salida;
          end if;
        end if;
        
        <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_FB_VALIDAR_FECHA_REUNION;
      
END PKG_DESEMPENO;