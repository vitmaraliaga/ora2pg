-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE      PKG_CONTRACT AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  PROCEDURE SP_GEN_PLANTILLA_CONT(P_ID_CONTARTO NUMBER,P_ID_USER NUMBER,P_DIR_FIRMA VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GEN_CONTRATO_TRABAJADOR(P_ID_CONTRATO NUMBER,P_ID_USER NUMBER,P_OPC VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PTLCARRERA(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PTLACADEMICO(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PTLCOSTOXHORA(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PTLDATOS(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PTLREPRESENTANTE(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_COSTOXHORA_PREVIO(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_COSTOXHORA_PREVIO_NEW(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_COSTOXHORA_PREVIO_ASIN(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_FECHA_PAGO DATE,P_ID_PERSONA NUMBER,P_INICIO DATE, P_FIN DATE,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_COSTOXHORA_CONTRATO(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_RENOVACION(P_ID_CONTRATO_ANT NUMBER,
	  		P_ID_PERFIL_PUESTO number,
		 P_SUELDO number,
		 P_CAMBIO_SUELDO char,
		 P_FECHA_FIN DATE, 
		 P_ID_USER NUMBER,
		P_ID_CONTRATO OUT NUMBER,
		P_ERROR OUT number,
		P_MSGERROR out varchar2);
  PROCEDURE SP_FINALIZAR_RENOCION(P_ID_CONTRATO NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_GENERAR_CESE(
          P_ID_ENTIDAD NUMBER,
          P_ID_DEPTO NUMBER,
          P_ID_TRABAJDOR NUMBER,
          P_ID_MOTIVO_CESE varchar2,
          P_FECHA_CESE DATE,
          P_OBSERVACION varchar2 ,
          P_ID_CONTRATO NUMBER,
          P_ID_USER NUMBER,
          P_ID_CESE OUT number,
          P_ERROR OUT number,
          P_MSGERROR out varchar2
          );
  PROCEDURE SP_FINALIZAR_CESE(P_ID_CESE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_REGISTRAR_CAMBIO(
      P_ID_CAMBIOS NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO varchar2,
      P_ID_CONCEPTO_CAMBIO NUMBER,
      P_ID_TRABAJADOR NUMBER,
      P_ID_SEDEAREA NUMBER,
      P_ID_PERFIL_PUESTO NUMBER,
      P_ID_CONDICION_LABORAL varchar2,
      P_ID_TIPO_CONTRATO varchar2,
      P_ID_TIPO_TIEMPO_TRABAJO NUMBER,
      P_FEC_DESDE DATE,
      P_FEC_HASTA DATE,
      P_MOD_FMR_SUELDO varchar2,
      P_ID_ESCALA_SALARIAL number,
      P_SUELDO NUMBER,
      P_PJE_FMR NUMBER,
      P_COMENTARIO varchar2,
      P_ACT_INS varchar2,
      P_PORCENTAJE NUMBER,
      P_ID_TIPO_HORARIO NUMBER,
      P_ID_USER NUMBER,P_ID_CAMBIO OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_FINALIZAR_CAMBIO(P_ID_CAMBIOS NUMBER,P_ID_CONTRATO NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
  
  PROCEDURE SP_VALIDAR_DOCENTE(
        P_ID_ENTIDAD NUMBER,
        P_ID_PERSONA NUMBER,
        P_ERROR OUT number,
        P_MSGERROR out varchar2
        );
  PROCEDURE SP_DATOS_DOCENTE(
        P_ID_ENTIDAD NUMBER,
        P_ID_PERSONA NUMBER,
        CURSOR OUT SYS_REFCURSOR
        );
  
 PROCEDURE SP_COSTOXHORA_PREVIO_REQ_CAND(P_ID_SOLIC_REQ_CANDIDATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
 PROCEDURE SP_COSTOXHORA_REQ_CAND(P_ID_SOLIC_REQ_CANDIDATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
PROCEDURE SP_COPIAR_CONTRATO_PLANTILLA(P_ID_CONTRATO_PLANTILLA NUMBER,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,
		P_ID_USER NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
  PROCEDURE SP_PAISRESIDENCIA(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_PASAPORTE(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_HONORARIONODOM(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2);
  PROCEDURE SP_CONSTANCIA_CERTIFICADO(P_ID_ENTIDAD NUMBER, P_ID_PERSONA NUMBER, P_TIPO NUMBER,CURSOR OUT SYS_REFCURSOR );
END PKG_CONTRACT;


CREATE OR REPLACE PACKAGE BODY           PKG_CONTRACT AS
     PROCEDURE SP_GEN_PLANTILLA_CONT(P_ID_CONTARTO NUMBER,P_ID_USER NUMBER,P_DIR_FIRMA VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_plantilla CLOB:='';
        l_contrato CLOB:='';
        l_parametro  CLOB:='';
        l_longitud number:=0;
        l_id_plantilla_contrato number;
        l_url_firma varchar2(300);
        cursor curpara is 
        select 
          ID_CONTRATO_PARAMETRO,
          TIPO,
          PARAMETRO,
          SIGNIFICADO,
          COMENTARIO,
          CAMPO,
          PROCESO,
          VIGENCIA
        from PLLA_CONTRATO_PARAMETRO
        ORDER BY ID_CONTRATO_PARAMETRO;
        
      BEGIN
      
        select ID_CONTRATO_PLANTILLA INTO l_id_plantilla_contrato from PLLA_CONTRATO WHERE ID_CONTRATO=P_ID_CONTARTO;
        
        --l_id_plantilla_contrato:=5;
        
        SELECT COUNT(*) INTO l_contar  from PLLA_CONTRATO_PLANTILLA where ID_CONTRATO_PLANTILLA=l_id_plantilla_contrato;
        
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No esta configurado plantilla';
            goto salida_genptlcont;
        END IF;
        
        select PLANTILLA,coalesce(length(PLANTILLA),0) INTO l_plantilla,l_longitud from PLLA_CONTRATO_PLANTILLA where ID_CONTRATO_PLANTILLA=l_id_plantilla_contrato;
        
        
        /*IF l_longitud<500 THEN
            l_error:=1;
            l_msgerror:='No esta configurado plantilla';
            goto salida_genptlcont;
        END IF;*/
        
        FOR cur in curpara LOOP
        BEGIN
          if cur.tipo='F' then
             EXECUTE IMMEDIATE 'SELECT '||cur.campo||'  from ENOC.VW_CONTRATO_PLANTILLA a where a.id_contrato=:P_ID_CONTRATO' into l_parametro USING P_ID_CONTARTO;
             if cur.parametro='SUELDO' then
                l_parametro:= to_char(TO_NUMBER(l_parametro),'99999.99');
             end if;
             
             
          else
          
            EXECUTE IMMEDIATE 'BEGIN PKG_CONTRACT.'||cur.proceso||'(:P_ID_CONTRATO,:P_PARAMETRO,:l_parametro,:l_error,:l_msgerror); end;'
            USING P_ID_CONTARTO,cur.parametro,IN OUT l_parametro,IN OUT l_error,IN OUT l_msgerror;
            
            if cur.parametro ='REP_FIRMA' then
              if l_parametro is not null then
                /*l_url_firma:=P_DIR_FIRMA||'/'||l_parametro;
                l_url_firma:='<img src="'||l_url_firma||'"  height="100px">';*/
                l_parametro:='';
              end if;
              
            end if;
            --if l_error=1 then
            --  Exit when l_error=1;
            --end if;
            
          end if;
          --dbms_output.put_line(l_plantilla||' '||cur.parametro||'='||l_parametro||'-'||l_error);
          if l_parametro is  null then 
            l_parametro:='{'||cur.parametro||'}';
          end if;
          l_plantilla:=replace(l_plantilla,'['||cur.parametro||']',l_parametro);
        END;     
        END LOOP;
        
        IF l_error=0 THEN
          UPDATE PLLA_CONTRATO SET
          CONTRATO = l_plantilla
          WHERE ID_CONTRATO=P_ID_CONTARTO;
        END IF;
        
        <<salida_genptlcont>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_GEN_PLANTILLA_CONT;
      
     PROCEDURE SP_GEN_CONTRATO_TRABAJADOR(P_ID_CONTRATO NUMBER,P_ID_USER NUMBER,P_OPC VARCHAR2,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_persona number;
        l_id_entidad number;
        l_id_trabajador number;
        l_id number;
        l_id_tipo_comision_pens number; 
        l_id_regimen_pensionaria varchar2(5);
        l_fec_inicioafp date;
        l_fec_inicioonp date;
        l_id_remuneracion number;
        l_fecha_ini date;
        l_tipo_pago varchar2(5);
        l_id_remuneracion_det  number;
        l_contrato_mensual number; 
        l_modo_pago varchar2(1);
        l_id_solic_req_candidato number;
        l_id_depto varchar2(10);
        l_id_anho_proc number;
        l_id_mes_proc number;
        l_fecha_inic DATE;
        l_fecha_finc DATE;
        l_id_siuacion_trabajador varchar2(5);
        l_id_tipo_control_personal number;
        l_id_tipo_horario number;
        l_id_situacion_especial varchar2(5);
        l_ret_asis varchar2(200);
        
        l_id_tipo_control_personal_act number;
        l_id_tipo_horario_act number;
        l_id_situacion_especial_act varchar2(5);
        l_codigo varchar2(10);
        l_id_tipo_horario_pf number;
      BEGIN
      
       select id_persona,id_entidad,FECHA_INI, TIPO_PAGO,COALESCE(contrato_mensual,0),COALESCE(modo_pago,'N'), ID_SOLIC_REQ_CANDIDATO, id_depto
       into l_id_persona, l_id_entidad,l_fecha_ini,l_tipo_pago,l_contrato_mensual, l_modo_pago,l_id_solic_req_candidato,l_id_depto
       from plla_contrato 
       where id_contrato=P_ID_CONTRATO;
       
       
       select count(*) into l_contar from moises.PERSONA_NATURAL_TRABAJADOR where id_persona= l_id_persona;
       
       if l_contar=0 then
         insert into moises.PERSONA_NATURAL_TRABAJADOR(id_persona) values(l_id_persona);
       end if;
       
       select count(*) into l_contar from moises.TRABAJADOR where id_persona= l_id_persona and id_entidad=l_id_entidad;
       
       if l_contar=0 then
         select coalesce(max(id_trabajador),0)+1 into l_id_trabajador from moises.TRABAJADOR;
         insert into moises.TRABAJADOR(id_trabajador,id_persona,id_entidad) values(l_id_trabajador,l_id_persona,l_id_entidad);
       else
        select id_trabajador into l_id_trabajador from moises.TRABAJADOR where id_persona= l_id_persona and id_entidad=l_id_entidad;
        
       end if;
       
       if P_OPC='C' or P_OPC='X' then
       
        select coalesce(ID_SITUACION_TRABAJADOR,'0') into  l_id_siuacion_trabajador from moises.trabajador where id_trabajador=l_id_trabajador;
        
        if l_id_siuacion_trabajador='1' then
        MERGE INTO MOISES.TRABAJADOR S 
          USING(
           SELECT
              A.ID_CONTRATO,
              A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_PERSONA,
              A.ID_SEDEAREA,
              A.MENOREDAD,
              A.MENOREDAD_URL,
              B.ID_PUESTO,
              B.ID_TIPO_HORARIO,
              A.ID_PERFIL_PUESTO
            FROM PLLA_CONTRATO A , PLLA_PERFIL_PUESTO B
            WHERE A.ID_PERFIL_PUESTO=B.ID_PERFIL_PUESTO
            AND A.ID_CONTRATO=P_ID_CONTRATO
          )T ON(T.ID_PERSONA=S.ID_PERSONA AND T.ID_ENTIDAD=S.ID_ENTIDAD)
          WHEN  MATCHED THEN UPDATE SET  
          S.MENOREDAD=T.MENOREDAD,
          S.MENOREDAD_URL = T.MENOREDAD_URL; 
          --S.ID_SEDEAREA=T.ID_SEDEAREA,
          --S.ID_PUESTO=T.ID_PUESTO,
          --S.ID_TIPO_HORARIO=T.ID_TIPO_HORARIO,
          --S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
          --S.ID_SITUACION_TRABAJADOR='P';--PROCESO DE CONTRATACION
        else
          MERGE INTO MOISES.TRABAJADOR S 
          USING(
           SELECT
              A.ID_CONTRATO,
              A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_PERSONA,
              A.ID_SEDEAREA,
              A.MENOREDAD,
              A.MENOREDAD_URL,
              B.ID_PUESTO,
              B.ID_TIPO_HORARIO,
              A.ID_PERFIL_PUESTO,
              A.ID_CONDICION_LABORAL
            FROM PLLA_CONTRATO A , PLLA_PERFIL_PUESTO B
            WHERE A.ID_PERFIL_PUESTO=B.ID_PERFIL_PUESTO
            AND A.ID_CONTRATO=P_ID_CONTRATO
          )T ON(T.ID_PERSONA=S.ID_PERSONA AND T.ID_ENTIDAD=S.ID_ENTIDAD)
          WHEN  MATCHED THEN UPDATE SET  
          S.MENOREDAD=T.MENOREDAD,
          S.MENOREDAD_URL = T.MENOREDAD_URL, 
          S.ID_SEDEAREA=T.ID_SEDEAREA,
          S.ID_PUESTO=T.ID_PUESTO,
          --S.ID_TIPO_HORARIO=T.ID_TIPO_HORARIO,
          S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
          S.ID_CONDICION_LABORAL=T.ID_CONDICION_LABORAL,
          S.ID_SITUACION_TRABAJADOR='P';--PROCESO DE CONTRATACION
        end if;
        
        /*
        MERGE INTO MOISES.TRABAJADOR S 
        USING(
         SELECT
            A.ID_CONTRATO,
            A.ID_ENTIDAD,
            A.ID_DEPTO,
            A.ID_PERSONA,
            A.ID_SEDEAREA,
            A.MENOREDAD,
            A.MENOREDAD_URL,
            B.ID_PUESTO,
            B.ID_TIPO_HORARIO,
            A.ID_PERFIL_PUESTO,
            A.ID_CONDICION_LABORAL
          FROM PLLA_CONTRATO A , PLLA_PERFIL_PUESTO B
          WHERE A.ID_PERFIL_PUESTO=B.ID_PERFIL_PUESTO
          AND A.ID_CONTRATO=P_ID_CONTRATO
        )T ON(T.ID_PERSONA=S.ID_PERSONA AND T.ID_ENTIDAD=S.ID_ENTIDAD)
        WHEN  MATCHED THEN UPDATE SET  
        S.MENOREDAD=T.MENOREDAD,
        S.MENOREDAD_URL = T.MENOREDAD_URL, 
        S.ID_SEDEAREA=T.ID_SEDEAREA,
        S.ID_PUESTO=T.ID_PUESTO,
        --S.ID_TIPO_HORARIO=T.ID_TIPO_HORARIO,
        S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
        S.ID_CONDICION_LABORAL=T.ID_CONDICION_LABORAL,
        S.ID_SITUACION_TRABAJADOR=case when l_id_siuacion_trabajador ='1' then '1' else  'P' end;--PROCESO DE CONTRATACION
        */
        
        if P_OPC='X' then
          goto salida_gen_trabajador;
        end if;
        
        if l_tipo_pago = 'H' then
            
            
              --l_tipo_pago,l_contrato_mensual, l_modo_pago
              
              if l_modo_pago = 'M' and l_contrato_mensual = 0 then
              
                delete from enoc.PLLA_CONTRATO_DET where id_contrato=P_ID_CONTRATO;
                
                insert into enoc.PLLA_CONTRATO_DET(
                  ID_ITEM,
                  ID_CONTRATO,
                  TIPO,
                  ID_ANHO,
                  ID_MES,
                  ID_SEDEAREA,
                  ID_PROGRAMA_ESTUDIO,
                  ID_TIPO_HORA_PAGO,
                  ID_ESCALA_SALA_DOCENTE_DET,
                  ID_SEMESTRE,
                  DIAS,
                  COSTOHORA,
                  HORAS,
                  IMPORTE,
                  VIGENCIA,
                  ID_USER_REG,
                  FECHA_REG,
                  ID_SOLIC_REQ_CANDIDATO_DET,
                  ID_TIPO_CANTIDAD
                )
                select
                  ID_ITEM,
                  ID_CONTRATO,
                  'C',
                  ID_ANHO,
                  ID_MES,
                  ID_SEDEAREA,
                  ID_PROGRAMA_ESTUDIO,
                  ID_TIPO_HORA_PAGO,
                  ID_ESCALA_SALA_DOCENTE_DET,
                  ID_SEMESTRE,
                  DIAS,
                  COSTOHORA,
                  HORAS,
                  IMPORTE,
                  1,
                  P_ID_USER,
                  sysdate,
                  ID_SOLIC_REQ_CANDIDATO_DET,
                  ID_TIPO_CANTIDAD
                from enoc.PLLA_CONTRATO_MES
                where id_contrato=P_ID_CONTRATO
                order by ID_ITEM ;
                
              end if;
              
              if l_modo_pago = 'M' and l_contrato_mensual = 1 then
              
                delete from enoc.PLLA_CONTRATO_DET where id_contrato=P_ID_CONTRATO;
                
                
                select coalesce(min(id_anho),0) into l_id_anho_proc
                from enoc.PLLA_CONTRATO_MES
                where id_contrato=P_ID_CONTRATO
                and ID_SOLIC_REQ_CANDIDATO_DET not in(
                  select a.ID_SOLIC_REQ_CANDIDATO_DET from enoc.PLLA_CONTRATO_DET a, enoc.PLLA_CONTRATO c
                  where a.id_contrato=c.id_contrato
                  and c.ID_SOLIC_REQ_CANDIDATO = l_id_solic_req_candidato
                  and c.ID_ESTADO_CONT_DEPTO in(
                     SELECT a.ID_ESTADO_CONT_DEPTO 
                     FROM PLLA_ESTADO_CONT_DEPTO a, PLLA_ESTADO_CONT b 
                     WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
                     AND  a.ID_ENTIDAD=l_id_entidad 
                     AND a.ID_DEPTO=l_id_depto 
                     AND a.TIPO='C' 
                     AND b.ID_ESTADO_CONT not in('00')
                  )
                );
                
                select coalesce(min(id_mes),0) into l_id_mes_proc
                from enoc.PLLA_CONTRATO_MES
                where id_contrato=P_ID_CONTRATO
                and id_anho=l_id_anho_proc
                and ID_SOLIC_REQ_CANDIDATO_DET not in(
                  select a.ID_SOLIC_REQ_CANDIDATO_DET from enoc.PLLA_CONTRATO_DET a, enoc.PLLA_CONTRATO c
                  where a.id_contrato=c.id_contrato
                  and c.ID_SOLIC_REQ_CANDIDATO = l_id_solic_req_candidato
                  and c.ID_ESTADO_CONT_DEPTO in(
                     SELECT a.ID_ESTADO_CONT_DEPTO 
                     FROM PLLA_ESTADO_CONT_DEPTO a, PLLA_ESTADO_CONT b 
                     WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
                     AND  a.ID_ENTIDAD=l_id_entidad 
                     AND a.ID_DEPTO=l_id_depto 
                     AND a.TIPO='C' 
                     AND b.ID_ESTADO_CONT not in('00')
                  )
                );
                
                
                insert into enoc.PLLA_CONTRATO_DET(
                  ID_ITEM,
                  ID_CONTRATO,
                  TIPO,
                  ID_ANHO,
                  ID_MES,
                  ID_SEDEAREA,
                  ID_PROGRAMA_ESTUDIO,
                  ID_TIPO_HORA_PAGO,
                  ID_ESCALA_SALA_DOCENTE_DET,
                  ID_SEMESTRE,
                  DIAS,
                  COSTOHORA,
                  HORAS,
                  IMPORTE,
                  VIGENCIA,
                  ID_USER_REG,
                  FECHA_REG,
                  ID_SOLIC_REQ_CANDIDATO_DET,
                  ID_TIPO_CANTIDAD
                )
                select
                  ID_ITEM,
                  ID_CONTRATO,
                  'C',
                  ID_ANHO,
                  ID_MES,
                  ID_SEDEAREA,
                  ID_PROGRAMA_ESTUDIO,
                  ID_TIPO_HORA_PAGO,
                  ID_ESCALA_SALA_DOCENTE_DET,
                  ID_SEMESTRE,
                  DIAS,
                  COSTOHORA,
                  HORAS,
                  IMPORTE,
                  1,
                  P_ID_USER,
                  sysdate,
                  ID_SOLIC_REQ_CANDIDATO_DET,
                  ID_TIPO_CANTIDAD
                from enoc.PLLA_CONTRATO_MES
                where id_contrato=P_ID_CONTRATO
                and id_anho=l_id_anho_proc
                and id_mes = l_id_mes_proc
                order by ID_ITEM ;
                
                
                
                IF l_id_anho_proc>0 AND l_id_mes_proc>0 THEN
                    select 
                     min(FEC_DESDE) as FEC_DESDE,
                     max(FEC_HASTA) as FEC_HASTA
                     into 
                     l_fecha_inic,
                     l_fecha_finc
                    from enoc.PLLA_CONTRATO_MES
                    where id_contrato=P_ID_CONTRATO
                    and id_anho=l_id_anho_proc
                    and id_mes = l_id_mes_proc;
                  
                    
                    update enoc.plla_contrato set
                    fecha_ini=l_fecha_inic,
                    fecha_fin=l_fecha_finc
                    where id_contrato = P_ID_CONTRATO;
                END IF;
               
                
              end if;
              
              if l_modo_pago = 'C' and l_contrato_mensual = 1 then
              
                  
                  
                 delete from enoc.PLLA_CONTRATO_DET where id_contrato=P_ID_CONTRATO;
                
                
                select coalesce(min(id_anho),0) into l_id_anho_proc
                from enoc.PLLA_CONTRATO_MES
                where id_contrato=P_ID_CONTRATO
                AND VIGENCIA=1;
                
                
                select coalesce(min(id_mes),0) into l_id_mes_proc
                from enoc.PLLA_CONTRATO_MES
                where id_contrato=P_ID_CONTRATO
                and id_anho=l_id_anho_proc
                AND VIGENCIA=1;
                
                              
                
                insert into enoc.PLLA_CONTRATO_DET(
                  ID_ITEM,
                  ID_CONTRATO,
                  TIPO,
                  ID_ANHO,
                  ID_MES,
                  ID_SEDEAREA,
                  ID_PROGRAMA_ESTUDIO,
                  ID_TIPO_HORA_PAGO,
                  ID_ESCALA_SALA_DOCENTE_DET,
                  ID_SEMESTRE,
                  DIAS,
                  COSTOHORA,
                  HORAS,
                  IMPORTE,
                  VIGENCIA,
                  ID_USER_REG,
                  FECHA_REG,
                  ID_SOLIC_REQ_CANDIDATO_DET,
                  ID_TIPO_CANTIDAD
                )
                select
                  ID_ITEM,
                  ID_CONTRATO,
                  'C',
                  ID_ANHO,
                  ID_MES,
                  ID_SEDEAREA,
                  ID_PROGRAMA_ESTUDIO,
                  ID_TIPO_HORA_PAGO,
                  ID_ESCALA_SALA_DOCENTE_DET,
                  ID_SEMESTRE,
                  DIAS,
                  COSTOHORA,
                  HORAS,
                  IMPORTE,
                  1,
                  P_ID_USER,
                  sysdate,
                  ID_SOLIC_REQ_CANDIDATO_DET,
                  ID_TIPO_CANTIDAD
                from enoc.PLLA_CONTRATO_MES
                where id_contrato=P_ID_CONTRATO
                and id_anho=l_id_anho_proc
                and id_mes = l_id_mes_proc
                order by ID_ITEM ;
                

                IF l_id_anho_proc>0 AND l_id_mes_proc>0 THEN
                    select 
                     min(FEC_DESDE) as FEC_DESDE,
                     max(FEC_HASTA) as FEC_HASTA
                     into 
                     l_fecha_inic,
                     l_fecha_finc
                    from enoc.PLLA_CONTRATO_MES
                    where id_contrato=P_ID_CONTRATO
                    and id_anho=l_id_anho_proc
                    and id_mes = l_id_mes_proc;
                  
                    
                    update enoc.plla_contrato set
                    fecha_ini=l_fecha_inic,
                    fecha_fin=l_fecha_finc
                    where id_contrato = P_ID_CONTRATO;
                END IF;
              END IF;
              
              select count(*) into l_contar from enoc.PLLA_CONTRATO_DET where id_contrato=P_ID_CONTRATO;
              
              IF l_contar=0 THEN
                  l_error:=1;
                  l_msgerror:='No se ha generado detalle contrato';
                  goto salida_gen_trabajador;
              END IF;
              
         end if;
        
        
       else
       
       update PLLA_CONTRATO set ID_TIPO_TIEMPO_REGIMEN = case when id_condicion_laboral='M' then 4 else ID_TIPO_TIEMPO_TRABAJO end  where id_contrato=P_ID_CONTRATO;
       
        MERGE INTO MOISES.TRABAJADOR S 
       USING(
         SELECT
            A.ID_CONTRATO,
            A.ID_ENTIDAD,
            A.ID_DEPTO,
            A.ID_PERSONA,
            A.ID_SEDEAREA,
            A.ID_PERFIL_PUESTO,
            A.ID_TIPO_TIEMPO_TRABAJO,
            A.ID_CONDICION_LABORAL,
            A.FECHA_INI,
            A.FECHA_FIN,
            A.MENOREDAD,
            A.MENOREDAD_URL,
            A.ID_TIPO_OCUPACION,
            A.ID_SITUACION_TRABAJADOR,
            B.ID_PUESTO,
            B.ID_TIPO_CONTROL_PERSONAL,
            A.ID_TIPO_HORARIO,--B.ID_TIPO_HORARIO,
            A.FECHA_INICIO_MISIONERO,
            A.MISIONERO_URL,
            A.ID_TIPO_STATUS,
            A.ID_PERIODO_REMU,
            A.ID_TIPO_CONTRATO,
            A.ID_GRUPO_PLANILLA,
            A.ID_TIPO_TIEMPO_REGIMEN
          FROM PLLA_CONTRATO A , PLLA_PERFIL_PUESTO B
          WHERE A.ID_PERFIL_PUESTO=B.ID_PERFIL_PUESTO
          AND A.ID_CONTRATO=P_ID_CONTRATO
        )T ON(T.ID_PERSONA=S.ID_PERSONA AND T.ID_ENTIDAD=S.ID_ENTIDAD)
        WHEN  MATCHED THEN UPDATE SET  
        S.MENOREDAD=T.MENOREDAD,
        S.MENOREDAD_URL = T.MENOREDAD_URL, 
        S.ID_SITUACION_TRABAJADOR=T.ID_SITUACION_TRABAJADOR,
        --S.ID_TIPO_CONTROL_PERSONAL=T.ID_TIPO_CONTROL_PERSONAL,
        S.ID_CONDICION_LABORAL=T.ID_CONDICION_LABORAL,
        S.FECHA_INICIO_MISIONERO=T.FECHA_INICIO_MISIONERO,
        S.MISIONERO_URL=T.MISIONERO_URL,
        S.ID_TIPO_STATUS=T.ID_TIPO_STATUS,
        S.FECHA_INGRESO=CASE WHEN S.FECHA_INGRESO IS NULL THEN T.FECHA_INI ELSE S.FECHA_INGRESO END,
        S.FECHA_INICIO=T.FECHA_INI,
        S.FECHA_FIN_PREVISTO=T.FECHA_FIN,
        S.FECHA_FIN_EFECTIVO=NULL,
        S.ID_PERIODO_REMU=T.ID_PERIODO_REMU,
        S.ID_TIPO_CONTRATO=T.ID_TIPO_CONTRATO,
        S.ID_SEDEAREA=T.ID_SEDEAREA,
        S.ID_PUESTO=T.ID_PUESTO,
        S.ID_TIPO_TIEMPO_TRABAJO=T.ID_TIPO_TIEMPO_TRABAJO,
        S.ID_GRUPO_PLANILLA=T.ID_GRUPO_PLANILLA,
        --S.ID_TIPO_HORARIO=T.ID_TIPO_HORARIO,
        S.ID_TIPO_OCUPACION=T.ID_TIPO_OCUPACION,
        S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
        S.ID_CONTRATO=T.ID_CONTRATO,
        S.ID_TIPO_TIEMPO_REGIMEN=T.ID_TIPO_TIEMPO_REGIMEN;
        
        
          --S.ID_SEDEAREA=T.ID_SEDEAREA,
          --S.ID_PUESTO=T.ID_PUESTO,
          --S.ID_TIPO_HORARIO=T.ID_TIPO_HORARIO,
          --S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
          --S.ID_SITUACION_TRABAJADOR='P';--PROCESO DE CONTRATACION
        
        
       end if;
       
      
       if P_OPC<>'C' then
       
          UPDATE PLLA_REMUNERACION SET VIGENCIA=0 WHERE id_trabajador = l_id_trabajador AND VIGENCIA=1;
          
          select coalesce(max(ID_REMUNERACION),0) + 1  into l_id_remuneracion  from  PLLA_REMUNERACION;
          
          INSERT INTO PLLA_REMUNERACION(
            ID_REMUNERACION,
            ID_TRABAJADOR,
            ID_CONTRATO,
            REFERENCIA,
            REFERENCIA_URL,
            FEC_EFECTIVO,
            TIPO_PAGO,
            FMR,
            SUELDO,
            BONIFICACION,
            OBSERVACION,
            ID_ESTADO_REMUNE,
            VIGENCIA,
            ID_USER_REG,
            FECHA_REG,
            ID_USER_MOD,
            FECHA_MOD,
            ID_ESCALA_SALARIAL
          )
          select
            l_id_remuneracion,
            l_id_trabajador,
            ID_CONTRATO,
            null,
            null,
            sysdate,
            TIPO_PAGO,
            PJE_FMR,
            SUELDO,
            0,
            'Contrato',
            '04',--aprobacion gth
            1,
            P_ID_USER,
            sysdate,
            null,
            null,
            ID_ESCALA_SALARIAL
            FROM plla_contrato 
            where id_contrato=P_ID_CONTRATO;
            
            ---CONTRATO DETALLE---
            if l_tipo_pago = 'H' then
            
            
              IF l_modo_pago = 'M' and l_contrato_mensual = 1 THEN
                  UPDATE enoc.PLLA_CONTRATO_MES
                    SET VIGENCIA=0
                  where id_contrato=P_ID_CONTRATO
                  and id_item in(
                    select id_item from enoc.PLLA_CONTRATO_DET
                    WHERE id_contrato=P_ID_CONTRATO
                  );

              END IF;
              
              IF l_modo_pago = 'C' and l_contrato_mensual = 1 THEN
              
                  UPDATE enoc.PLLA_CONTRATO_MES
                    SET VIGENCIA=0
                  where id_contrato=P_ID_CONTRATO
                  and id_item in(
                    select id_item from enoc.PLLA_CONTRATO_DET
                    WHERE id_contrato=P_ID_CONTRATO
                  );
                  
              END IF;
            
              select coalesce(max(ID_REMUNERACION_DET),0)  into l_id_remuneracion_det  from  PLLA_REMUNERACION_DET;
              
              insert into PLLA_REMUNERACION_DET(
                ID_REMUNERACION_DET,
                ID_REMUNERACION,
                ID_ITEM,
                ID_CONTRATO,
                ID_ANHO,
                ID_MES,
                ID_SEDEAREA,
                ID_PROGRAMA_ESTUDIO,
                ID_TIPO_HORA_PAGO,
                ID_ESCALA_SALA_DOCENTE_DET,
                ID_SEMESTRE,
                DIAS,
                COSTOHORA,
                HORAS,
                IMPORTE,
                VARIACION,
                CONCEPTO,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG,
                ID_TIPO_CANTIDAD
              )
              select
              (row_number() OVER( ORDER BY ID_ITEM ASC )) + l_id_remuneracion_det AS id_rem_det,
              l_id_remuneracion,
              ID_ITEM,
              ID_CONTRATO,
              ID_ANHO,
              ID_MES,
              ID_SEDEAREA,
              ID_PROGRAMA_ESTUDIO,
              ID_TIPO_HORA_PAGO,
              ID_ESCALA_SALA_DOCENTE_DET,
              ID_SEMESTRE,
              DIAS,
              COSTOHORA,
              HORAS,
              IMPORTE,
              VARIACION,
              CONCEPTO,
              1,
              P_ID_USER,
              sysdate,
              ID_TIPO_CANTIDAD
              from  PLLA_CONTRATO_DET
              where id_contrato=P_ID_CONTRATO;
              
            end if;
            
            ----
            select coalesce(max(ID_REMUNERACION_ESTADO),0) + 1  into l_id  from  PLLA_REMUNERACION_ESTADO;
            insert into ENOC.PLLA_REMUNERACION_ESTADO(
              ID_REMUNERACION_ESTADO,
              ID_REMUNERACION,
              ID_ESTADO_REMUNE,
              COMENTARIO,
              ID_USER_REG,
              FECHA_REG
            )values(
              l_id,
              l_id_remuneracion,
              '04',
              null,
              P_ID_USER,
              sysdate
            );
            
            
            --area trabajador
            select coalesce(max(ID_TRABAJADOR_AREA),0) +1 into l_id  from MOISES.TRABAJADOR_AREA;
            insert into MOISES.TRABAJADOR_AREA(
              ID_TRABAJADOR_AREA,
              ID_TRABAJADOR,
              ID_SEDEAREA,
              DESDE,
              HASTA,
              ID_USER_REG,
              FECHA_REG, 
              ID_USER_MOD,
              FECHA_MOD
              )
              select
              l_id,
              id_trabajador,
              id_sedearea,
              l_fecha_ini,
              null,
              P_ID_USER,
              sysdate,
              null,
              null
              from MOISES.TRABAJADOR
              where id_trabajador=l_id_trabajador;
            
            --puesto trabajador
            select coalesce(max(ID_TRABAJADOR_PUESTO),0) + 1 into l_id  from MOISES.TRABAJADOR_PUESTO;
            insert into MOISES.TRABAJADOR_PUESTO(
              ID_TRABAJADOR_PUESTO,
              ID_TRABAJADOR,
              ID_PERFIL_PUESTO,
              ID_PUESTO,
              DESDE,
              HASTA,
              ID_USER_REG,
              FECHA_REG, 
              ID_USER_MOD,
              FECHA_MOD
              )
              select
              l_id,
              id_trabajador,
              ID_PERFIL_PUESTO,
              id_puesto,
              l_fecha_ini,
              null,
              P_ID_USER,
              sysdate,
              null,
              null
              from MOISES.TRABAJADOR
              where id_trabajador=l_id_trabajador;
            
            
            if P_OPC = 'A' then
               select count(*) into l_contar
               from ELISEO.aps_planilla a 
                where a.id_entidad=l_id_entidad and a.id_anho=to_number(to_char(sysdate,'YYYY')) and a.id_mes in(
                  select max(b.id_mes) from ELISEO.aps_planilla b 
                  where a.id_entidad=b.id_entidad 
                  and a.id_anho=b.id_anho 
                  and a.id_persona=b.id_persona
                ) and a.id_persona = l_id_persona;
               
               if l_contar=1 then 
                 select 
                 CASE
                    WHEN a.id_sistemapension IN(1,11)
                    THEN '21'
                    WHEN a.id_sistemapension IN(3,31)
                    THEN '22'
                    WHEN a.id_sistemapension IN(4,41)
                    THEN '23'
                    WHEN a.id_sistemapension IN(6,61)
                    THEN '24'
                    WHEN a.id_sistemapension IN(7,71)
                    THEN '25'
                    WHEN a.id_sistemapension IN(5)
                    THEN '02'
                    ELSE
                    NULL
                  END AS id_sistemapension,
                  CASE
                    WHEN a.id_sistemapension IN(1,3,4,6,71)
                    THEN 1
                    WHEN a.id_sistemapension IN(7,11,31,41,61)
                    THEN 2
                    ELSE
                    NULL
                  END AS tipo_comision
                  into l_id_regimen_pensionaria,l_id_tipo_comision_pens
                 from ELISEO.aps_planilla a 
                  where a.id_entidad=l_id_entidad and a.id_anho=to_number(to_char(sysdate,'YYYY')) and a.id_mes in(
                    select max(b.id_mes) from ELISEO.aps_planilla b 
                    where a.id_entidad=b.id_entidad 
                    and a.id_anho=b.id_anho 
                    and a.id_persona=b.id_persona
                  ) and a.id_persona = l_id_persona;
               end if; 
               
               SELECT count(*) into l_contar
               FROM ELISEO.APS_TRABAJADOR WHERE ID_PERSONA = l_id_persona;
               
               if l_contar = 1 then
                 SELECT FEC_INICIOAFP,FEC_INICIOONP into l_fec_inicioafp,l_fec_inicioonp
                 FROM ELISEO.APS_TRABAJADOR WHERE ID_PERSONA = l_id_persona;
               end if; 
               
              update moises.PERSONA_NATURAL_TRABAJADOR set
                   id_tipo_comision_pens=l_id_tipo_comision_pens,
                   id_regimen_pensionaria=l_id_regimen_pensionaria,
                   fec_inicioafp=l_fec_inicioafp,
                   fec_inicioonp=l_fec_inicioonp
              where id_persona=l_id_persona;
                
            end if;
            
             --TIPO HORARIO
             --CONTROL PERSONAL
             --MODALIDAD
             SELECT
              B.ID_TIPO_CONTROL_PERSONAL,
              A.ID_TIPO_HORARIO,
              A.ID_SITUACION_ESPECIAL,
              B.ID_TIPO_HORARIO
              INTO
              l_id_tipo_control_personal,
              l_id_tipo_horario,
              l_id_situacion_especial,
              l_id_tipo_horario_pf
            FROM PLLA_CONTRATO A , PLLA_PERFIL_PUESTO B
            WHERE A.ID_PERFIL_PUESTO=B.ID_PERFIL_PUESTO
            AND A.ID_CONTRATO=P_ID_CONTRATO;
            
            if l_id_tipo_horario is null then
              update PLLA_CONTRATO set
              ID_TIPO_HORARIO=l_id_tipo_horario_pf
              where ID_CONTRATO=P_ID_CONTRATO;
              
              l_id_tipo_horario:=l_id_tipo_horario_pf;
            end if;
            
          
            select
              coalesce(ID_TIPO_CONTROL_PERSONAL,0),
              coalesce(ID_TIPO_HORARIO,0),
              coalesce(ID_SITUACION_ESPECIAL,'-')
              into 
              l_id_tipo_control_personal_act,
              l_id_tipo_horario_act,
              l_id_situacion_especial_act
            from moises.trabajador where id_trabajador=l_id_trabajador;
            
            SELECT c.codigo into l_codigo FROM ENOC.PLLA_TIPO_HORARIO A ,ENOC.PLLA_TIPO_CONFIG_HORARIO c 
            WHERE c.ID_TIPO_CONFIG_HORARIO=a.ID_TIPO_CONFIG_HORARIO
            AND A.id_tipo_horario=l_id_tipo_horario;
           
            if l_codigo = 'HM' then
              l_id_tipo_control_personal:= 3; --	Sujeto a fiscalizacion
            end if;
            
            select count(1) into l_contar from PLLA_CONTROL_PERSONAL_TRAB where id_trabajador=l_id_trabajador;
            
            if l_id_tipo_control_personal<>l_id_tipo_control_personal_act or l_contar=0 then
              if l_id_tipo_control_personal is not null then
                PKG_ASSISTANCE.SP_CAMBIO_DATOS(
                 l_id_trabajador,
                 to_char(l_id_tipo_control_personal),
                 l_fecha_ini,
                 null,
                 'Proceso de contrato',
                 P_ID_USER,
                 'TP',
                 l_ret_asis,
                 l_error,
                 l_msgerror
                 );
               end if;
             end if;
             
             select count(1) into l_contar from PLLA_TIPO_HORARIO_TRAB where id_trabajador=l_id_trabajador;
             
             if l_id_tipo_horario<>l_id_tipo_horario_act or l_contar=0 then
               if l_id_tipo_horario is not null then
                PKG_ASSISTANCE.SP_CAMBIO_DATOS(
                 l_id_trabajador,
                 to_char(l_id_tipo_horario),
                 l_fecha_ini,
                 null,
                 'Proceso de contrato',
                 P_ID_USER,
                 'TH',
                 l_ret_asis,
                 l_error,
                 l_msgerror
                 );
               end if;
             end if;
             
             select count(1) into l_contar from moises.TRABAJADOR_SIT_ESP where id_trabajador=l_id_trabajador;
             
             if l_id_situacion_especial<>l_id_situacion_especial_act or l_contar=0 then
               if l_id_situacion_especial is not null then
                PKG_ASSISTANCE.SP_CAMBIO_DATOS(
                 l_id_trabajador,
                 l_id_situacion_especial,
                 l_fecha_ini,
                 null,
                 'Proceso de contrato',
                 P_ID_USER,
                 'TM',
                 l_ret_asis,
                 l_error,
                 l_msgerror
                 );
               end if;
              end if;
             
       end if;
        
       if l_contar=0 then
          l_contar:=0;
       end if;
      
       
        <<salida_gen_trabajador>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_GEN_CONTRATO_TRABAJADOR;
      PROCEDURE SP_PTLCARRERA(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_persona number;
      BEGIN
        SELECT id_persona into l_id_persona from plla_contrato where id_contrato=P_ID_CONTRATO;
        
        select count(*) into l_contar
        from MOISES.situacion_educativa a inner join 
        MOISES.PERSONA_INFORMACION_ACADEMICA b  on b.id_situacion_educativa=A.id_situacion_educativo
        left join MOISES.CARRERA_PROFESIONAL c on c.ID_CARRERA_PROFESIONAL=b.ID_CARRERA
        where b.ID_SITUACION_EDUCATIVA in('14','09','11')
        and b.id_persona=l_id_persona;
        
        if  l_contar>0 then
          select carrera into l_parametro from (
            select case when b.ID_CARRERA is not null then c.nombre else b.denominacion_grado end carrera ,a.orden,b.id_persona
            from MOISES.situacion_educativa a inner join 
            MOISES.PERSONA_INFORMACION_ACADEMICA b  on b.id_situacion_educativa=A.id_situacion_educativo
            left join MOISES.CARRERA_PROFESIONAL c on c.ID_CARRERA_PROFESIONAL=b.ID_CARRERA
            where b.ID_SITUACION_EDUCATIVA in('14','09','11')
            and b.id_persona=l_id_persona
            order by b.id_persona, a.orden desc
          ) where ROWNUM=1;
        end if;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
      END SP_PTLCARRERA;
      
      PROCEDURE SP_PTLACADEMICO(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_solic_reque number:=0;
        l_id_semestre number;
      BEGIN
      
        case P_PARAMETRO
           when 'ESCUELA_PROG' then 
            <<FIND_DATOS>>
			BEGIN
	             select LISTAGG(x.nombre,', ') WITHIN GROUP(ORDER BY x.id_programa_estudio) into l_parametro
	             from(
	              select b.nombre,b.id_programa_estudio from enoc.plla_contrato_det a,david.acad_programa_estudio b 
	              where a.id_programa_estudio=b.id_programa_estudio
	              and a.id_contrato=P_ID_CONTRATO
	              group by b.nombre,b.id_programa_estudio
	            )x order by x.id_programa_estudio;
           	EXCEPTION WHEN NO_DATA_FOUND THEN
	            l_parametro := '';
	        END FIND_DATOS;
          when 'CICLO_ACAD' then   
             select LISTAGG(x.semestre,', ') WITHIN GROUP(ORDER BY x.id_semestre) into l_parametro
             from(
              select b.semestre,b.id_semestre from enoc.plla_contrato_det a,david.acad_semestre b 
              where a.id_semestre=b.id_semestre
              and a.id_contrato=P_ID_CONTRATO
              group by b.semestre,b.id_semestre
            )x order by x.id_semestre;
            
            if l_parametro is null then
              select id_solic_reque into l_id_solic_reque from enoc.plla_contrato where id_contrato=P_ID_CONTRATO;
             	<<FIND_DATOS>>
				BEGIN 
             	select id_semestre into l_id_semestre from ENOC.PLLA_SOLIC_REQUE where id_solic_reque=l_id_solic_reque;
             	EXCEPTION WHEN NO_DATA_FOUND THEN
		            l_parametro := null;
		        END FIND_DATOS;
              if l_id_semestre is not null THEN
                	select semestre into l_parametro from david.acad_semestre where id_semestre=l_id_semestre;
              end if;
            end if;
          WHEN 'CURSOS' THEN
          	<<FIND_DATOS>>
			BEGIN
	            SELECT 
	            '<table border="1">
	            <tr>
	              <th>Programa</th>
	              <th>Curso</th>
	              <th>Ciclo</th>
	              <th>Grupo</th>
	            </tr>'
	            ||LISTAGG('<tr><td>'||X.NOMBRE||'</td>
	              <td>'||X.CURSO||'</td>
	              <td>'||X.CICLO||'</td>
	              <td>'||X.GRUPO||'</td>
	            </tr>') WITHIN GROUP(ORDER BY X.ID_PROGRAMA_ESTUDIO)||'</table>'  INTO  l_parametro
	            FROM (
	            SELECT 
	            A.ID_PROGRAMA_ESTUDIO,
	            B.NOMBRE,
	            A.CURSO,
	            A.ID_CARGA_CURSO,
	            A.CICLO,
	            coalesce(A.GRUPO,'-') AS GRUPO
	            from enoc.PLLA_COSTOXHORA_CARGA A,DAVID.ACAD_PROGRAMA_ESTUDIO B
	            where A.ID_PROGRAMA_ESTUDIO=B.ID_PROGRAMA_ESTUDIO
	            AND A.id_contrato=P_ID_CONTRATO
	            GROUP BY 
	            A.ID_PROGRAMA_ESTUDIO,
	            B.NOMBRE,
	            A.CURSO,
	            A.ID_CARGA_CURSO,
	            A.CICLO,
	            A.GRUPO
	            ORDER BY A.ID_PROGRAMA_ESTUDIO, A.ID_CARGA_CURSO,A.CICLO,A.GRUPO
	            )X;
           	EXCEPTION WHEN NO_DATA_FOUND THEN
	            l_parametro := '';
	        END FIND_DATOS;
          else 
            l_parametro:='';
        end case;
         
       
      
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
      END SP_PTLACADEMICO;
      
      PROCEDURE SP_PTLCOSTOXHORA(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_persona number;
        l_id_docente_costoxhora number;
        
        CURSOR curCab IS
        select 
        a.id_anho,
        a.id_mes, 
        a.costohora,
        a.horas,
        a.importe,
        b.nombre as programa,
        c.nombre as tipo_pago,
        d.nombre as mes
        from enoc.plla_contrato_det a, david.acad_programa_estudio b, enoc.plla_tipo_hora_pago c, eliseo.conta_mes d
        where a.id_programa_estudio=b.id_programa_estudio
        and a.id_tipo_hora_pago=c.id_tipo_hora_pago
        and a.id_mes=d.id_mes
        and a.id_contrato=P_ID_CONTRATO
        order by a.id_anho,
        a.id_mes,a.id_tipo_hora_pago;
        
        
        CURSOR curMan IS
        select 
        a.id_anho,
        a.id_mes, 
        a.costohora,
        a.horas,
        a.importe,
        b.id_depto||' - '||b.ccosto as programa,
        c.nombre as tipo_pago,
        d.nombre as mes
        from enoc.plla_contrato_det a, eliseo.vw_sede_area b, enoc.plla_tipo_cantidad c, eliseo.conta_mes d
        where a.id_sedearea=b.id_sedearea
        and a.id_tipo_cantidad=c.id_tipo_cantidad
        and a.id_mes=d.id_mes
        and a.id_contrato=P_ID_CONTRATO
        order by a.id_anho,
        a.id_mes;
        
        l_id_mes number:=0;
        l_j number:=0;
        l_total number(10,2):=0;
        l_totalacu number(10,2):=0;
        l_i number:=0;
        l_modo_pago varchar2(2);
        l_contrato_mensual number:=0;

      BEGIN
         
        SELECT id_persona, coalesce(modo_pago,'N'),coalesce(contrato_mensual,0) into l_id_persona,l_modo_pago,l_contrato_mensual from plla_contrato where id_contrato=P_ID_CONTRATO;
        
        if l_modo_pago='M' then
          l_parametro:='<table class="table table-sm">
            <tr>
              <th>Año</th>
              <th>Mes</th>
              <th>C.Costo</th>
              <th>Cantidad</th>
              <th>Tipo</th>
              <th>Costo</th>
              <th>RB por Mes</th>
            </tr>'; 
           
          FOR cur in curMan LOOP
          BEGIN
              if l_id_mes<>cur.id_mes then
                  if l_j>0 then
                  
                    l_parametro:=l_parametro||'</tr>';
                    
                    if l_i>1 then
                      l_parametro:=l_parametro||'<tr>';
                      l_parametro:=l_parametro||'<td colspan="6" style="text-align: right;font-weight: bold;">Total Mes:</td>
                      <td style="text-align: right;font-weight: bold;">'||to_char(l_total,'99999.99')||'</td>';
                      l_parametro:=l_parametro||'</tr>';
                    end if;
                    l_total:=0;
                    l_i:=0;
                  end if;
                  l_parametro:=l_parametro||'<tr>';
              else
                l_parametro:=l_parametro||'</tr>';
                l_parametro:=l_parametro||'<tr>';
              end if;
              
              l_parametro:=l_parametro||'<td>'||to_char(cur.id_anho)||'</td>
              <td>'||cur.mes||'</td>
              <td>'||cur.programa||'</td>
              <td style="text-align: right;">'||to_char(cur.horas,'99999.99')||'</td>
              <td>'||cur.tipo_pago||'</td>
              <td style="text-align: right;">'||to_char(cur.costohora,'99999.99')||'</td>
              <td style="text-align: right;">'||to_char(cur.importe,'99999.99')||'</td>';
              l_total:=l_total+cur.importe;
              l_id_mes:=cur.id_mes;
              l_totalacu:=l_totalacu+cur.importe;
              l_j:=l_j +1;
              l_i:=l_i +1;
              
              
          END;
          END LOOP;
            
          if l_j=0 then
            l_parametro:='';
          else
            l_parametro:=l_parametro||'</tr>';
            if l_i>1 then
              l_parametro:=l_parametro||'<tr>';
              l_parametro:=l_parametro||'<td colspan="6" style="text-align: right;font-weight: bold;">Total Mes:</td>
              <td style="text-align: right;font-weight: bold;">'||to_char(l_total,'99999.99')||'</td>';
              l_parametro:=l_parametro||'</tr>';
            end if;
            l_parametro:=l_parametro||'<tr>';
            l_parametro:=l_parametro||'<td colspan="6" style="text-align: right;font-weight: bold;">Total:</td>
            <td style="text-align: right;font-weight: bold;">'||to_char(l_totalacu,'99999.99')||'</td>';
            l_parametro:=l_parametro||'</tr>';
            l_parametro:=l_parametro||'</table>';
          end if;
        else
          l_parametro:='<table  class="table table-sm">
            <tr>
              <th>Año</th>
              <th>Mes</th>
              <th>Programa</th>
              <th>Tipo de Hora</th>
              <th>Conto x Hora</th>
              <th>Horas al Mes</th>
              <th>RB por Mes</th>
            </tr>'; 
           
          FOR cur in curCab LOOP
          BEGIN
              if l_id_mes<>cur.id_mes then
                  if l_j>0 then
                  
                    l_parametro:=l_parametro||'</tr>';
                    
                    if l_i>1 then
                      l_parametro:=l_parametro||'<tr>';
                      l_parametro:=l_parametro||'<td colspan="6" style="text-align: right;font-weight: bold;">Total Mes:</td>
                      <td style="text-align: right;font-weight: bold;">'||to_char(l_total,'99999.99')||'</td>';
                      l_parametro:=l_parametro||'</tr>';
                    end if;
                    l_total:=0;
                    l_i:=0;
                  end if;
                  l_parametro:=l_parametro||'<tr>';
              else
                l_parametro:=l_parametro||'</tr>';
                l_parametro:=l_parametro||'<tr>';
              end if;
              
              l_parametro:=l_parametro||'<td>'||to_char(cur.id_anho)||'</td>
              <td>'||cur.mes||'</td>
              <td>'||cur.programa||'</td>
              <td>'||cur.tipo_pago||'</td>
              <td style="text-align: right;">'||to_char(cur.costohora,'99999.99')||'</td>
              <td style="text-align: right;">'||to_char(cur.horas,'99999.99')||'</td>
              <td style="text-align: right;">'||to_char(cur.importe,'99999.99')||'</td>';
              l_total:=l_total+cur.importe;
              l_id_mes:=cur.id_mes;
              l_totalacu:=l_totalacu+cur.importe;
              l_j:=l_j +1;
              l_i:=l_i +1;
              
              
          END;
          END LOOP;
            
          if l_j=0 then
            l_parametro:='';
          else
            l_parametro:=l_parametro||'</tr>';
            if l_i>1 then
              l_parametro:=l_parametro||'<tr>';
              l_parametro:=l_parametro||'<td colspan="6" style="text-align: right;font-weight: bold;">Total Mes:</td>
              <td style="text-align: right;font-weight: bold;">'||to_char(l_total,'99999.99')||'</td>';
              l_parametro:=l_parametro||'</tr>';
            end if;
            l_parametro:=l_parametro||'<tr>';
            l_parametro:=l_parametro||'<td colspan="6" style="text-align: right;font-weight: bold;">Total:</td>
            <td style="text-align: right;font-weight: bold;">'||to_char(l_totalacu,'99999.99')||'</td>';
            l_parametro:=l_parametro||'</tr>';
            l_parametro:=l_parametro||'</table>';
          end if;
        end if;        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
      END SP_PTLCOSTOXHORA;
      
       PROCEDURE SP_PTLDATOS(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_persona number;
        l_id_ubigeo number;
        l_departamento varchar2(200):='';
        l_provincia varchar2(200):='';
        l_distrito varchar2(200):='';
      BEGIN
      
        SELECT id_persona into l_id_persona from plla_contrato where id_contrato=P_ID_CONTRATO;
        
        SELECT count(*) into l_contar FROM MOISES.PERSONA_DIRECCION X WHERE X.ID_PERSONA=l_id_persona AND X.ID_TIPODIRECCION=4 AND X.ES_ACTIVO=1 AND ROWNUM=1;
        if l_contar>0 then
          SELECT X.id_ubigeo into  l_id_ubigeo  FROM MOISES.PERSONA_DIRECCION X WHERE X.ID_PERSONA=l_id_persona AND X.ID_TIPODIRECCION=4 AND X.ES_ACTIVO=1 AND ROWNUM=1;
          
          select departamento,provincia,distrito into l_departamento,l_provincia,l_distrito from moises.vw_ubigeo where id_ubigeo=l_id_ubigeo;
  
          case P_PARAMETRO
           when 'DIST_DIR' then 
            l_parametro:=l_distrito;
           when 'PROV_DIR' then 
            l_parametro:=l_provincia;
           when 'DEPA_DIR' then 
            l_parametro:=l_departamento;
           else 
            l_parametro:='';
         end case; 
        end if;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
      END SP_PTLDATOS;
      
 
      
      PROCEDURE SP_PTLREPRESENTANTE(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_persona number;
        l_id_entidad number;
        l_id_depto varchar2(10):='';
        
        l_id_rep number;
        l_cargo_rep varchar2(50):='';
        l_asiento_rep varchar2(50):='';
        l_partida_rep varchar2(50):='';
        l_nombreapellido varchar2(250):='';
        l_num_documento varchar2(80):='';
        l_firma varchar2(150):='';
        l_url_firma varchar2(150):='';
        l_url varchar(150);
      BEGIN
      
        SELECT id_persona,id_entidad,id_depto into l_id_persona,l_id_entidad,l_id_depto from plla_contrato where id_contrato=P_ID_CONTRATO;
        
        SELECT count(*) into l_contar FROM ENOC.PLLA_CONFIG_REP  WHERE id_entidad=l_id_entidad AND id_depto=l_id_depto;
        if l_contar>0 then
          SELECT ID_REP,CARGO_REP,ASIENTO_REP,PARTIDA_REP into l_id_rep,l_cargo_rep,l_asiento_rep,l_partida_rep FROM ENOC.PLLA_CONFIG_REP  WHERE id_entidad=l_id_entidad AND id_depto=l_id_depto;
          
          select a.nombreapellido,b.siglas||': '||a.num_documento, a.firma into l_nombreapellido,l_num_documento,l_firma from enoc.vw_persona_natural a, moises.tipo_documento b
          where a.ID_TIPODOCUMENTO=b.ID_TIPODOCUMENTO and  a.id_persona=l_id_rep;


          case P_PARAMETRO
           when 'REP_CARGO' then 
            l_parametro:=l_cargo_rep;
           when 'REP_NOMAPE' then 
            l_parametro:=l_nombreapellido;
           when 'REP_DOCUMENTO' then 
            l_parametro:=l_num_documento;
          when 'REP_ASIENTO' then 
            l_parametro:=l_asiento_rep;
          when 'REP_PARTIDA' then 
            l_parametro:=l_partida_rep;
          when 'REP_FIRMA' then 
            l_parametro:=l_firma;
           else 
            l_parametro:='';
         end case; 
        end if;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
      END SP_PTLREPRESENTANTE;
      
     PROCEDURE SP_COSTOXHORA_PREVIO(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
        l_id_carga_curso number;
        l_horario varchar2(400);
        l_horario_tmp varchar2(400);
        l_id_tipo_formato_modulo number;
        l_dias number:=7;
        l_i number:=1;
        l_j number:=1;
        l_total number:=0;
        l_fecha date;
        l_hora number:=0;
        l_fecha_ini date;
        l_num_dia number;
        l_n_resta number;
        l_id_persona number;
        l_item number;
        l_costo number(10,2);
        l_id_escala_sala_docente_det number;
        l_id_tipo_hora_pago number;
        l_fecha_inic date;
        l_fecha_finc  date;
        l_id_solic_reque number;
        l_fecha_inicio_proc date;
        l_fecha_fin_proc date;
        l_fecha_ini_proc date;
        l_nohaymod varchar2(200);
        
        l_fin_select date;
        l_ini_select date;
        
        CURSOR curCab IS
        SELECT 
          ID_CARGA_CURSO,
          ID_PROGRAMA_ESTUDIO,
          MIN(FECHA_INI_PROC) AS FECHA_INICIO,
          MAX(FECHA_FIN) AS FECHA_FIN
        FROM ENOC.TT_CARGA_DOCENTE 
        WHERE ID_PERSONA=l_id_persona 
        AND ID_SEMESTRE=P_ID_SEMESTRE
        --AND ID_MODULO_DETALLE in(4892,4893,4894,4895,4896,4897)
        GROUP BY ID_CARGA_CURSO,ID_PROGRAMA_ESTUDIO
        ORDER BY ID_CARGA_CURSO ;
        
        
        CURSOR curDet IS
        SELECT 
          ID_MODULO_DETALLE,
          ID_MODULO,
          ID_TIPO_MODALIDAD_DOCENTE,
          ID_TIPO_HORARIO,
          FECHA_INICIO,
          FECHA_FIN,
          HORARIO,
          ID_SEDEAREA,
          NOMBRE_AREA,
          CURSO,
          CICLO,
          CREDITOS,
          HP,
          HT,
          HNP,
          GRUPO,
          FECHA_INI_PROC
        FROM ENOC.TT_CARGA_DOCENTE 
        WHERE ID_PERSONA=l_id_persona 
        AND ID_SEMESTRE=P_ID_SEMESTRE
        AND ID_CARGA_CURSO=l_id_carga_curso
        --AND ID_MODULO_DETALLE in(18300)
        ORDER BY FECHA_INICIO;
        
        /*
        CURSOR curCont IS
        select 
        ID_ANHO,
        ID_MES,
        ID_SEDEAREA,
        ID_PROGRAMA_ESTUDIO,
        ID_PERSONA,
        ID_SEMESTRE,
        ID_TIPO_MODALIDAD_DOCENTE,
        DIAS,
        HORAS
        from ENOC.VW_COSTOXHORA_CARGA_SUM
        where id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        order by ID_ANHO, ID_MES;
        */
        
        f_fecha_fin_proc date;
        
      BEGIN
      
       select id_persona, fecha_ini,fecha_fin,ID_SOLIC_REQUE into l_id_persona,l_fecha_inic,l_fecha_finc,l_id_solic_reque from enoc.plla_contrato where id_contrato=P_ID_CONTRATO;
        
        select count(*) into l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='El contrato no tiene requerimiento';
            goto salida_previo;
        END IF;
        
        select fecha_ini,fecha_fin into l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        
        INSERT INTO ENOC.TT_CARGA_DOCENTE
        SELECT
        ID_MODULO_DETALLE,
        ID_CARGA_CURSO,
        ID_PROGRAMA_ESTUDIO,
        ID_MODULO,
        ID_TIPO_MODALIDAD_DOCENTE,
        ID_TIPO_HORARIO,
        ID_PERSONA,
        ID_SEMESTRE,
        FINICIO,--FECHA_INICIO,
        FECHA_FIN,
        HORARIO,
        NOMBRE_AREA,
        CURSO,
        CICLO,
        CREDITO,
        HP,
        HT,
        HNP,
        ID_SEDEAREA,
        GRUPO,
        FECHA_INICIO
        FROM  ENOC.VW_CARGA_DOCENTE 
        WHERE id_persona=l_id_persona
        and id_semestre=P_ID_SEMESTRE
        order by fecha_inicio;
        
        delete from enoc.PLLA_COSTOXHORA_CARGA where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
        
       -- delete from enoc.PLLA_CONTRATO_DET where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
       
       select count(*) into l_contar from ENOC.TT_CARGA_DOCENTE where ID_TIPO_MODALIDAD_DOCENTE is null;
       IF l_contar>0 THEN
       
            select 
            substr(LISTAGG(substr(NOMBRE_AREA,0,20)||': '||substr(CURSO,0,50)||' - Ciclo: '||to_char(CICLO)||' Gpo: '||GRUPO,', ') WITHIN GROUP(ORDER BY ID_MODULO_DETALLE),0,180)
            into l_nohaymod
            from ENOC.TT_CARGA_DOCENTE where ID_TIPO_MODALIDAD_DOCENTE is null;
            
            l_error:=1;
            l_msgerror:='No tiene Modalidad. '||substr(l_nohaymod,0,174);
            goto salida_previo;
        END IF;
        
        
        select count(*) into l_contar from ENOC.TT_CARGA_DOCENTE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene carga horario';
            goto salida_previo;
        END IF;
        
        FOR curC in curCab LOOP
          BEGIN
            l_id_carga_curso:=curC.ID_CARGA_CURSO;
            
            --validacion fecha fin
            if curC.FECHA_FIN<l_fecha_finc then
              f_fecha_fin_proc := curC.FECHA_FIN;
            else
              f_fecha_fin_proc := l_fecha_finc;
            end if;
            --fin validar
            
            --validacion INI fin
            if curC.FECHA_INICIO>l_fecha_inic then
              l_fecha_ini_proc := curC.FECHA_INICIO;
            else
              l_fecha_ini_proc := l_fecha_inic;
            end if;
            --fin validar
            
            FOR curD in curDet LOOP
              BEGIN
                DELETE FROM ENOC.TT_CARGA_SEMANA;
                select id_tipo_formato_modulo into l_id_tipo_formato_modulo from david.acad_modulo where id_modulo=curD.id_modulo;
                if l_id_tipo_formato_modulo<>2 then
                  l_horario:=curD.horario;
                  l_total:=length(l_horario);
                  l_horario_tmp := l_horario;
                  
                  l_fin_select:=l_fecha_finc;
                  if l_fecha_finc > curD.fecha_fin then
                    l_fin_select:=curD.fecha_fin;
                  end if;
                  l_ini_select:=l_fecha_inic;
                  if curD.fecha_ini_proc > l_fecha_inic then
                    l_ini_select:=curD.fecha_ini_proc;
                  end if;
                  
                  
        
                  l_j:=1;
                  while l_j<=l_total loop
                    l_horario_tmp := substr(l_horario_tmp,0,l_dias);
                    l_i:=1;
                    ----
                    l_fecha_inicio_proc:=l_fecha_inic;
                    if curD.fecha_inicio < l_fecha_inic then
                      l_fecha_inicio_proc:=curD.fecha_inicio ;
                    end if;
                    --if curD.fecha_ini_proc > l_fecha_inic then
                      --l_fecha_inicio_proc:=curD.fecha_ini_proc ;
                    --end if;
                    
                    l_fecha_fin_proc:=l_fecha_finc;
                    if curD.fecha_fin > l_fecha_finc then
                      l_fecha_fin_proc:=curD.fecha_fin ;
                    end if;
                    
                    ----
                    
                    l_num_dia:= to_number(to_char(curD.fecha_inicio, 'd'));
                    l_n_resta:= l_num_dia - 1;
                    l_fecha_ini:= curD.fecha_inicio - l_n_resta;
                    l_fecha:=l_fecha_ini;
                    while l_i<=l_dias LOOP
                      l_hora:= substr(l_horario_tmp,l_i,1);
                      if l_hora = '1' then
                        
                        --if l_fecha>=l_fecha_inic and l_fecha <=l_fecha_finc then
                        if l_fecha>=l_fecha_inicio_proc and l_fecha <=l_fecha_fin_proc then
                          --if l_fecha>=curD.fecha_ini_proc then
                          
                          INSERT INTO ENOC.TT_CARGA_SEMANA(DIA,HORA,ID_TIPO_MODALIDAD_DOCENTE,ID_TIPO_HORARIO,FECHA) VALUES(l_i,TO_NUMBER(l_hora),curD.ID_TIPO_MODALIDAD_DOCENTE,curD.ID_TIPO_HORARIO, l_fecha);
                           --dbms_output.put_line(to_char(l_fecha,'DD/MM/YYYY')||'-'||to_char(l_id_carga_curso));
                          --end if;
                       end if;
                      end if;
                      l_fecha:= l_fecha + 1;
                      l_i:=l_i + 1;
                    END LOOP;
                    l_j:=l_j + 7; 
                    l_horario_tmp := substr(l_horario,l_j,l_total);
                  
                  END LOOP;
                  
                  
                 
                  
                                
                  INSERT INTO enoc.PLLA_COSTOXHORA_CARGA(
                    ID_CARGA_CURSO,
                    ID_SEMESTRE,
                    ID_PERSONA,
                    ID_TIPO_MODALIDAD_DOCENTE,
                    ID_TIPO_HORARIO,
                    FECHA,
                    HORAS,
                    ID_PROGRAMA_ESTUDIO,
                    HORARIO,
                    ID_SEDEAREA,
                    NOMBRE_AREA,
                    CURSO,
                    CICLO,
                    CREDITOS,
                    HP,
                    HT,
                    HNP,
                    ID_CONTRATO,
                    GRUPO
                  )
                  SELECT 
                  l_id_carga_curso,
                  P_ID_SEMESTRE,
                  l_id_persona,
                  ID_TIPO_MODALIDAD_DOCENTE, 
                  coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),
                  FECHA, 
                  SUM(HORA) ,
                  curC.ID_PROGRAMA_ESTUDIO,
                  curD.HORARIO,
                  curD.ID_SEDEAREA,
                  curD.NOMBRE_AREA,
                  curD.CURSO,
                  curD.CICLO,
                  curD.CREDITOS,
                  curD.HP,
                  curD.HT,
                  curD.HNP,
                  P_ID_CONTRATO,
                  curD.GRUPO
                  FROM ENOC.TT_CARGA_SEMANA 
                  WHERE HORA>0 
                  --AND FECHA BETWEEN l_fecha_ini_proc and f_fecha_fin_proc--l_fecha_fin_proc
                  AND FECHA BETWEEN l_ini_select and l_fin_select--l_fecha_fin_proc
                  GROUP BY FECHA,ID_TIPO_MODALIDAD_DOCENTE,coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE) 
                  ORDER BY FECHA;
                  
      
                   
                  l_fecha:= curD.fecha_inicio + 7;
                  l_j:=7;
                  
                  WHILE l_fecha<=curD.fecha_fin loop
                  
                      
                      INSERT INTO enoc.PLLA_COSTOXHORA_CARGA(
                        ID_CARGA_CURSO,
                        ID_SEMESTRE,
                        ID_PERSONA,
                        ID_TIPO_MODALIDAD_DOCENTE,
                        ID_TIPO_HORARIO,
                        FECHA,
                        HORAS,
                        ID_PROGRAMA_ESTUDIO,
                        HORARIO,
                        ID_SEDEAREA,
                        NOMBRE_AREA,
                        CURSO,
                        CICLO,
                        CREDITOS,
                        HP,
                        HT,
                        HNP,
                        ID_CONTRATO,
                        GRUPO
                      )
                      SELECT 
                      l_id_carga_curso,
                      P_ID_SEMESTRE,
                      l_id_persona, 
                      ID_TIPO_MODALIDAD_DOCENTE,
                      coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),
                      FECHA+l_j, 
                      SUM(HORA) ,
                      curC.ID_PROGRAMA_ESTUDIO,
                      curD.HORARIO,
                      curD.ID_SEDEAREA,
                      curD.NOMBRE_AREA,
                      curD.CURSO,
                      curD.CICLO,
                      curD.CREDITOS,
                      curD.HP,
                      curD.HT,
                      curD.HNP,
                      P_ID_CONTRATO,
                      curD.GRUPO
                      FROM ENOC.TT_CARGA_SEMANA 
                      WHERE HORA>0 
                      AND FECHA+l_j BETWEEN l_fecha_ini_proc and f_fecha_fin_proc--l_fecha_finc
                      GROUP BY FECHA,ID_TIPO_MODALIDAD_DOCENTE,coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE) 
                      ORDER BY FECHA;
                      
                      l_fecha:= l_fecha + 7;
                      l_j:=l_j+7;
                  
                  END LOOP;
                  
                  
                end if;
              END;
            END LOOP;
            /*delete  from enoc.PLLA_COSTOXHORA_CARGA where id_persona=l_id_persona and id_semestre=P_ID_SEMESTRE and id_contrato=P_ID_CONTRATO
            and FECHA not BETWEEN curC.FECHA_INICIO and curC.FECHA_fin;*/
          END;
        END LOOP;
        
        PKG_CONTRACT.SP_COSTOXHORA_PREVIO_ASIN(P_ID_CONTRATO,P_ID_SEMESTRE,l_fecha_finc,l_id_persona,l_fecha_inic,l_fecha_finc,l_error,l_msgerror);
        
        if l_error=0 then
          select count(*) into l_contar from ENOC.PLLA_COSTOXHORA_CARGA where id_contrato=P_ID_CONTRATO and id_semestre=P_ID_SEMESTRE;
          IF l_contar=0 THEN
              l_error:=1;
              l_msgerror:='No tiene asignado horario';
              goto salida_previo;
          END IF;
        end if;
        <<salida_previo>> 
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_COSTOXHORA_PREVIO;
      
      PROCEDURE SP_COSTOXHORA_PREVIO_NEW(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
               
        l_fecha_inic date;
        l_fecha_finc date;
        l_id_solic_reque number;
        l_id_persona number;
        l_nohaymod varchar2(200);
        
        
      BEGIN
      
       select id_persona, fecha_ini,fecha_fin,ID_SOLIC_REQUE into l_id_persona,l_fecha_inic,l_fecha_finc,l_id_solic_reque from enoc.plla_contrato where id_contrato=P_ID_CONTRATO;
        
        select count(*) into l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='El contrato no tiene requerimiento';
            goto salida_previo;
        END IF;
        
        delete from  ENOC.TT_CARGA_DOCENTE;
        
        INSERT INTO ENOC.TT_CARGA_DOCENTE
        SELECT
        ID_MODULO_DETALLE,
        ID_CARGA_CURSO,
        ID_PROGRAMA_ESTUDIO,
        ID_MODULO,
        ID_TIPO_MODALIDAD_DOCENTE,
        ID_TIPO_HORARIO,
        ID_PERSONA,
        ID_SEMESTRE,
        FINICIO,--FECHA_INICIO,
        FECHA_FIN,
        HORARIO,
        NOMBRE_AREA,
        CURSO,
        CICLO,
        CREDITO,
        HP,
        HT,
        HNP,
        ID_SEDEAREA,
        GRUPO,
        FECHA_INICIO
        FROM  ENOC.VW_CARGA_DOCENTE 
        WHERE id_persona=l_id_persona
        and id_semestre=P_ID_SEMESTRE
        order by fecha_inicio;
        
        
        
        
        select fecha_ini,fecha_fin into l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        
        select count(*) into l_contar from ENOC.TT_CARGA_DOCENTE where ID_TIPO_MODALIDAD_DOCENTE is null;
       IF l_contar>0 THEN
       
            select 
            substr(LISTAGG(substr(NOMBRE_AREA,0,20)||': '||substr(CURSO,0,50)||' - Ciclo: '||to_char(CICLO)||' Gpo: '||GRUPO,', ') WITHIN GROUP(ORDER BY ID_MODULO_DETALLE),0,180)
            into l_nohaymod
            from ENOC.TT_CARGA_DOCENTE where ID_TIPO_MODALIDAD_DOCENTE is null;
            
            l_error:=1;
            l_msgerror:='No tiene Modalidad. '||substr(l_nohaymod,0,174);
            goto salida_previo;
        END IF;
        
        
        select count(*) into l_contar from ENOC.TT_CARGA_DOCENTE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene carga horario';
            goto salida_previo;
        END IF;
        
        
        delete from enoc.PLLA_COSTOXHORA_CARGA where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
        
        INSERT INTO enoc.PLLA_COSTOXHORA_CARGA(
                    ID_CARGA_CURSO,
                    ID_SEMESTRE,
                    ID_PERSONA,
                    ID_TIPO_MODALIDAD_DOCENTE,
                    ID_TIPO_HORARIO,
                    FECHA,
                    HORAS,
                    ID_PROGRAMA_ESTUDIO,
                    HORARIO,
                    ID_SEDEAREA,
                    NOMBRE_AREA,
                    CURSO,
                    CICLO,
                    CREDITOS,
                    HP,
                    HT,
                    HNP,
                    ID_CONTRATO,
                    GRUPO
                  )
                  
                  SELECT 
               acc.Id_Carga_Curso,
               asp.id_semestre,
               cadoc.id_persona,
               cadoc.ID_TIPO_MODALIDAD_DOCENTE,
               coalesce(cadoc.ID_TIPO_HORARIO,cadoc.ID_TIPO_MODALIDAD_DOCENTE),
               TO_DATE(TO_CHAR(ho.FECHA_CLASE,'YYYY-MM-DD'),'YYYY-MM-DD') as fecha,
               count(1) as horas,
               accd.id_programa_estudio,
               cadoc.horario,
               vape.id_sedearea,
               vacp.nombre_area,
               vacp.curso,
               vacp.ciclo,
               vacp.credito,
               vacp.hp,
               vacp.ht,
               vacp.hnp,
               P_ID_CONTRATO,
               acc.grupo       
               FROM david.Acad_Carga_Curso_Det accd
               inner join david.acad_carga_curso acc on Acc.Id_Carga_Curso = Accd.Id_Carga_Curso
               inner join david.Acad_Semestre_Programa asp on Asp.Id_Semestre_Programa = Acc.Id_Semestre_Programa
               inner join DAVID.ACAD_CARGA_CURSO_DOCENTE cadoc on cadoc.Id_Carga_Curso=acc.Id_Carga_Curso
               inner join david.vw_acad_programa_estudio vape on vApe.Id_Programa_Estudio = Accd.Id_Programa_Estudio
               inner join david.Vw_Acad_Curso_Plan vacp on Vacp.Id_Plan_Curso = Accd.Id_Plan_Curso
               inner join david.ACAD_CURSO_DOCENTE_HORARIO ho on ho.ID_CARGA_CURSO_DOCENTE=cadoc.ID_CARGA_CURSO_DOCENTE
               WHERE Accd.Origen='O'
               AND asp.id_semestre=P_ID_SEMESTRE
               AND cadoc.id_persona=l_id_persona
               and TO_DATE(TO_CHAR(ho.FECHA_CLASE,'YYYY-MM-DD'),'YYYY-MM-DD') between l_fecha_inic and l_fecha_finc
               group by 
               acc.Id_Carga_Curso,
               asp.id_semestre,
               cadoc.id_persona,
               cadoc.ID_TIPO_MODALIDAD_DOCENTE,
               coalesce(cadoc.ID_TIPO_HORARIO,cadoc.ID_TIPO_MODALIDAD_DOCENTE),
               TO_DATE(TO_CHAR(ho.FECHA_CLASE,'YYYY-MM-DD'),'YYYY-MM-DD'),
               accd.id_programa_estudio,
               cadoc.horario,
               vape.id_sedearea,
               vacp.nombre_area,
               vacp.curso,
               vacp.ciclo,
               vacp.credito,
               vacp.hp,
               vacp.ht,
               vacp.hnp,
               acc.grupo 
               order by fecha;
        
        

        PKG_CONTRACT.SP_COSTOXHORA_PREVIO_ASIN(P_ID_CONTRATO,P_ID_SEMESTRE,l_fecha_finc,l_id_persona,l_fecha_inic,l_fecha_finc,l_error,l_msgerror);
        
        if l_error=0 then
          select count(*) into l_contar from ENOC.PLLA_COSTOXHORA_CARGA where id_contrato=P_ID_CONTRATO and id_semestre=P_ID_SEMESTRE;
          IF l_contar=0 THEN
              l_error:=1;
              l_msgerror:='No tiene asignado horario';
              goto salida_previo;
          END IF;
        end if;
        <<salida_previo>> 
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_COSTOXHORA_PREVIO_NEW;
      
      PROCEDURE SP_COSTOXHORA_PREVIO_ASIN(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_FECHA_PAGO DATE,P_ID_PERSONA NUMBER,P_INICIO DATE, P_FIN DATE,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
        
        f_pago date;
        l_fecha date := P_INICIO;
        l_fin date:=TRUNC(LAST_DAY(P_FIN));
      BEGIN
        
        f_pago:= P_FECHA_PAGO;
        
        select 
        count(*) into l_contar
        from enoc.PLLA_COSTOXHORA_CARGA
        where id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE;
        
        if l_contar>0 then
          select 
           max(FECHA) as FECHA_FIN
           into 
           f_pago
          from enoc.PLLA_COSTOXHORA_CARGA
          where id_contrato=P_ID_CONTRATO
          and id_semestre=P_ID_SEMESTRE;
          
        END IF;
        
        WHILE l_fecha<=l_fin loop
        begin
        
          select 
          count(*) into l_contar
          from enoc.PLLA_COSTOXHORA_CARGA
          where id_contrato=P_ID_CONTRATO
          and id_semestre=P_ID_SEMESTRE
          and to_char(FECHA,'YYYYMM')=to_char(l_fecha,'YYYYMM');
          
          if l_contar>0 then
            select 
             max(FECHA) as FECHA_FIN
             into 
             f_pago
            from enoc.PLLA_COSTOXHORA_CARGA
            where id_contrato=P_ID_CONTRATO
            and id_semestre=P_ID_SEMESTRE
            and to_char(FECHA,'YYYYMM')=to_char(l_fecha,'YYYYMM');
          else
            f_pago:=l_fecha;
          END IF;
          INSERT INTO enoc.PLLA_COSTOXHORA_CARGA(
            ID_CARGA_CURSO,
            ID_SEMESTRE,
            ID_PERSONA,
            ID_TIPO_MODALIDAD_DOCENTE,
            ID_TIPO_HORARIO,
            FECHA,
            HORAS,
            ID_PROGRAMA_ESTUDIO,
            HORARIO,
            ID_SEDEAREA,
            NOMBRE_AREA,
            CURSO,
            CICLO,
            CREDITOS,
            HP,
            HT,
            HNP,
            ID_CONTRATO,
            GRUPO,
            HORA_ASIN
          )
          select 
          c.ID_CARGA_CURSO,
          f.id_semestre,
          b.id_persona,
          7 as ID_TIPO_MODALIDAD_DOCENTE,
          1 as ID_TIPO_HORARIO,
          f_pago,
          a.HORAS_ASINCRONAS as horas,
          f.id_programa_estudio,
          '-' as horario,
          g.id_sedearea,
          e.nombre_area,
          e.curso,
          e.ciclo,
          e.CREDITO,
          e.HP,
          e.HT,
          e.HNP,
          P_ID_CONTRATO as id_contrato,
          c.grupo,
          'S'
          from david.ACAD_CARGA_DOCENTE_DETALLE a,
          david.ACAD_CARGA_DOCENTE b,
          david.acad_carga_curso c,
          david.Acad_Carga_Curso_Det d,
          david.Vw_Acad_Curso_Plan e,
          david.Acad_Semestre_Programa f,
          david.vw_acad_programa_estudio g
          where a.ID_CARGA_DOCENTE=b.ID_CARGA_DOCENTE
          and b.ID_CARGA_CURSO=c.ID_CARGA_CURSO
          and c.ID_CARGA_CURSO=d.ID_CARGA_CURSO
          and d.ID_PLAN_CURSO=e.ID_PLAN_CURSO
          and c.id_semestre_programa=f.id_semestre_programa
          and f.Id_Programa_Estudio = g.Id_Programa_Estudio
          and f.id_semestre=P_ID_SEMESTRE
          and b.id_persona=P_ID_PERSONA
          and d.origen='O'
          and coalesce(a.HORAS_ASINCRONAS,0)>0
          and c.ID_CARGA_CURSO in(
           select cadoc.Id_Carga_Curso from DAVID.ACAD_CARGA_CURSO_DOCENTE cadoc, DAVID.ACAD_MODULO_DETALLE modet
           where modet.id_modulo_detalle= cadoc.id_modulo_detalle
           --and to_char(modet.fecha_fin,'YYYYMM')=to_char(l_fecha,'YYYYMM')
           group by cadoc.Id_Carga_Curso
           having  to_char(max(modet.fecha_fin),'YYYYMM')=to_char(l_fecha,'YYYYMM')
          )
          order by c.ID_CARGA_CURSO;
          l_fecha:= ADD_MONTHS(l_fecha,1);
          end;
        END LOOP;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_COSTOXHORA_PREVIO_ASIN;
      
      PROCEDURE SP_COSTOXHORA_CONTRATO(P_ID_CONTRATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
        l_id_carga_curso number;
        l_horario varchar2(400);
        l_horario_tmp varchar2(400);
        l_id_tipo_formato_modulo number;
        l_dias number:=7;
        l_i number:=1;
        l_j number:=1;
        l_total number:=0;
        l_fecha date;
        l_hora number:=0;
        l_fecha_ini date;
        l_num_dia number;
        l_n_resta number;
        l_id_persona number;
        l_item number;
        l_costo number(10,2);
        l_id_escala_sala_docente_det number;
        l_id_tipo_hora_pago number;
        l_fecha_inic date;
        l_fecha_finc  date;
        l_id_solic_reque number;
        
                
        CURSOR curCont IS
        select 
        ID_ANHO,
        ID_MES,
        ID_SEDEAREA,
        ID_PROGRAMA_ESTUDIO,
        ID_PERSONA,
        ID_SEMESTRE,
        ID_TIPO_HORA_PAGO,--ID_TIPO_HORARIO,
        CASE WHEN HORA_ASIN='S' THEN 1 ELSE ID_TIPO_HORA_PAGO END  AS ID_TIPO_HORARIO_VAL,
        DIAS,
        HORAS,
        HORA_ASIN
        from enoc.VW_COSTOXHORA_CARGA_SUM_EJE--ENOC.VW_COSTOXHORA_CARGA_SUM
        where id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        order by ID_ANHO, ID_MES;
        
        l_contrato_mensual number; 
        l_modo_pago varchar2(1);
        l_fec_desde date;
        l_fec_hasta date;
        
      BEGIN
      
        select id_persona, fecha_ini,fecha_fin,ID_SOLIC_REQUE,COALESCE(contrato_mensual,0),COALESCE(modo_pago,'N')
        into l_id_persona,l_fecha_inic,l_fecha_finc,l_id_solic_reque,l_contrato_mensual, l_modo_pago
        from enoc.plla_contrato 
        where id_contrato=P_ID_CONTRATO;
        

        select count(*) into l_contar from ENOC.VW_COSTOXHORA_CARGA_SUM 
        WHERE   id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        and ID_TIPO_MODALIDAD_DOCENTE not in(
          SELECT ID_TIPO_MODALIDAD_DOCENTE FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO
        );
        
        IF l_contar>0 THEN
            l_error:=1;
            l_msgerror:='No esta configurado tipo hora GTH con academico';
            goto salida_costoxhora;
        END IF;
        
        
        select count(*) into l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='El contrato no tiene requerimiento';
            goto salida_costoxhora;
        END IF;
        
        select fecha_ini,fecha_fin into l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        if l_contrato_mensual = 1 then
          delete from enoc.PLLA_CONTRATO_MES where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
        else
          delete from enoc.PLLA_CONTRATO_DET where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
        end if;
        select count(*) into l_contar from ENOC.PLLA_COSTOXHORA_CARGA where id_contrato=P_ID_CONTRATO and id_semestre=P_ID_SEMESTRE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene asignado horario';
            goto salida_costoxhora;
        END IF;
        
        --generacion de detalle contrato
        FOR curCo in curCont LOOP
          BEGIN
            if l_contrato_mensual = 1 then
              select coalesce(max(ID_ITEM),0) + 1 into l_item from enoc.plla_contrato_mes where id_contrato=P_ID_CONTRATO;
            else
              select coalesce(max(ID_ITEM),0) + 1 into l_item from enoc.plla_contrato_det where id_contrato=P_ID_CONTRATO;
            end if;
            
            
           /* SELECT count(*) INTO l_contar FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO WHERE ID_TIPO_HORARIO=curCo.ID_TIPO_HORARIO;
            if l_contar=0 then
              l_msgerror:='No esta asignado tipo hora pago';
              l_error:=1;
              Exit when l_contar=0;
            end if;*/
            
            /*SELECT count(*) INTO l_contar FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO WHERE ID_TIPO_HORARIO=curCo.ID_TIPO_HORARIO;
            
            if l_contar=0 then
              l_msgerror:='No esta configurado tipo hora GTH con academico';
              l_error:=1;
              Exit when l_contar=0;
            end if;
            
            SELECT ID_TIPO_HORA_PAGO INTO l_id_tipo_hora_pago FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO WHERE ID_TIPO_HORARIO=curCo.ID_TIPO_HORARIO;*/
            
            SELECT count(*) INTO l_contar FROM  ENOC.VW_DOCENTE_COSTOXHORA 
            WHERE ID_PERSONA=l_id_persona 
            AND ID_PROGRAMA_ESTUDIO=curCo.ID_PROGRAMA_ESTUDIO 
            AND ID_TIPO_HORA_PAGO= curCo.ID_TIPO_HORARIO_VAL --curCo.ID_TIPO_HORA_PAGO  
            AND VIGENCIA=1;
            
            
            if l_contar=0 then
              l_error:=1;
              l_msgerror:='Falta configurar costo por hora';
              Exit when l_contar=0;
            else
              if l_contar>1 then
                l_error:=1;
                l_msgerror:='Existe costo por hora mas de 2 con estado vigente';
                Exit when l_contar>1;
              end if;
            end if;
            
            SELECT CASE WHEN curCo.HORA_ASIN='S' THEN PORC_ASIN*COSTO ELSE COSTO END AS COSTO,
            ID_ESCALA_SALA_DOCENTE_DET 
            INTO l_costo,l_id_escala_sala_docente_det 
            FROM  ENOC.VW_DOCENTE_COSTOXHORA 
            WHERE ID_PERSONA=l_id_persona 
            AND ID_PROGRAMA_ESTUDIO=curCo.ID_PROGRAMA_ESTUDIO 
            AND ID_TIPO_HORA_PAGO=curCo.ID_TIPO_HORARIO_VAL --curCo.ID_TIPO_HORA_PAGO
            AND VIGENCIA=1;
            
            if l_contrato_mensual = 0 then
            
              insert into enoc.plla_contrato_det(
                ID_ITEM,
                ID_CONTRATO,
                TIPO,
                ID_ANHO,
                ID_MES,
                ID_SEDEAREA,
                ID_PROGRAMA_ESTUDIO,
                ID_TIPO_HORA_PAGO,
                ID_ESCALA_SALA_DOCENTE_DET,
                ID_SEMESTRE,
                DIAS,
                COSTOHORA,
                HORAS,
                IMPORTE,
                VARIACION,
                CONCEPTO,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG,
                ID_TIPO_CANTIDAD
              )values(
              l_item,
              P_ID_CONTRATO,
              'C',
              curCo.ID_ANHO,
              curCo.ID_MES,
              curCo.ID_SEDEAREA,
              curCo.ID_PROGRAMA_ESTUDIO,
              curCo.ID_TIPO_HORA_PAGO,--l_id_tipo_hora_pago, 
              l_id_escala_sala_docente_det,
              curCo.ID_SEMESTRE,
              curCo.DIAS,
              l_costo,
              curCo.HORAS,
              l_costo*curCo.HORAS,
              0,
              'CONTRATO',
              1,
              P_ID_USER,
              SYSDATE,
              1
              );
            else
              select min(fecha), max(fecha)  into l_fec_desde, l_fec_hasta
              from enoc.PLLA_COSTOXHORA_CARGA 
              where id_contrato=P_ID_CONTRATO
              and TO_NUMBER(TO_CHAR(FECHA,'YYYY')) = curCo.ID_ANHO
              and TO_NUMBER(TO_CHAR(FECHA,'MM')) = curCo.ID_MES;
              
              insert into enoc.plla_contrato_mes(
                ID_ITEM,
                ID_CONTRATO,
                ID_ANHO,
                ID_MES,
                ID_SEDEAREA,
                ID_PROGRAMA_ESTUDIO,
                ID_TIPO_HORA_PAGO,
                ID_ESCALA_SALA_DOCENTE_DET,
                ID_SEMESTRE,
                DIAS,
                COSTOHORA,
                HORAS,
                IMPORTE,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG,
                ID_TIPO_CANTIDAD,
                FEC_DESDE,
                FEC_HASTA
              )values(
                l_item,
                P_ID_CONTRATO,
                curCo.ID_ANHO,
                curCo.ID_MES,
                curCo.ID_SEDEAREA,
                curCo.ID_PROGRAMA_ESTUDIO,
                curCo.ID_TIPO_HORA_PAGO,--l_id_tipo_hora_pago, 
                l_id_escala_sala_docente_det,
                curCo.ID_SEMESTRE,
                curCo.DIAS,
                l_costo,
                curCo.HORAS,
                l_costo*curCo.HORAS,
                1,
                P_ID_USER,
                SYSDATE,
                1,--horas
                l_fec_desde,
                l_fec_hasta
              );
            end if;
          END;
        END LOOP;
        
        if l_error=1 then
          goto salida_costoxhora;
        end if;
        --actualizar fecha ini y fin de contrato
        
        select 
        count(*) into l_contar
        from enoc.PLLA_COSTOXHORA_CARGA
        where id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        and hora_asin is null;
        
        if l_contar>0 then
          select 
           min(FECHA) as FECHA_INI,
           max(FECHA) as FECHA_FIN
           into 
           l_fecha_inic,
           l_fecha_finc
          from enoc.PLLA_COSTOXHORA_CARGA
          where id_contrato=P_ID_CONTRATO
          and id_semestre=P_ID_SEMESTRE
          and hora_asin is null;
        
          
          update enoc.plla_contrato set
          fecha_ini=l_fecha_inic,
          fecha_fin=l_fecha_finc
          where id_contrato = P_ID_CONTRATO;
          
          if l_contrato_mensual = 1 then
          
            PKG_CONTRACT.SP_GEN_CONTRATO_TRABAJADOR(P_ID_CONTRATO,P_ID_USER,'C',l_error,l_msgerror);
          end if;
          
        end if;
        <<salida_costoxhora>> 
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_COSTOXHORA_CONTRATO;
      
      PROCEDURE SP_GENERAR_RENOVACION(P_ID_CONTRATO_ANT NUMBER,P_ID_PERFIL_PUESTO number,P_SUELDO number,P_CAMBIO_SUELDO char,P_FECHA_FIN DATE, P_ID_USER NUMBER,P_ID_CONTRATO OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
        l_id_contrato number;
        l_fecha_ini date;
        l_id_trabajador NUMBER;
        l_id_persona NUMBER;
        l_tipo_pago varchar2(5);
        l_id_escala_salarial NUMBER;
        l_sueldo NUMBER(10,2);
        l_pje_fmr  NUMBER(10,2);
        l_id_estado_cont_depto number;
        l_id_depto varchar2(10);
        l_id_entidad number;
        l_id_contrato_estado number;
        l_persona varchar(150);
        
      BEGIN
        
        select FECHA_FIN + 1, ID_PERSONA, ID_DEPTO, ID_ENTIDAD INTO l_fecha_ini,l_id_persona, l_id_depto,l_id_entidad FROM ENOC.PLLA_CONTRATO WHERE ID_CONTRATO=P_ID_CONTRATO_ANT;
        
        
        select nombreapellido into l_persona from vw_persona_natural where id_persona = l_id_persona;
      
        if l_fecha_ini> P_FECHA_FIN then
            l_error:=1;
            l_msgerror:='Fecha fin debe ser mayor que fecha de inicio';
            goto salida_gen_renov;
        end if;
        
        SELECT count(*) into l_contar
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=l_id_entidad 
         AND a.ID_DEPTO=l_id_depto 
         AND a.TIPO='R' 
         AND b.ID_ESTADO_CONT='01';
         
         IF l_contar = 0 THEN
            l_error:=1;
            l_msgerror:='Falta configurar los pasos para renovación';
            goto salida_gen_renov;
        END IF;
        
        
        select count(*) INTO l_contar from ENOC.PLLA_CONTRATO
        where ID_CONTRATO_PARENT=P_ID_CONTRATO_ANT
        and ID_ESTADO_CONT_DEPTO  in(
           SELECT ID_ESTADO_CONT_DEPTO 
           FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
           WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
           AND  a.ID_ENTIDAD=l_id_entidad 
           AND a.ID_DEPTO=l_id_depto 
           AND a.TIPO = 'R'    
           AND b.ID_ESTADO_CONT not in('00')--09
        );
        
         IF l_contar > 0 THEN
            l_error:=1;
            l_msgerror:='Ya esta asignado para renovación';
            goto salida_gen_renov;
        END IF;
        
         SELECT ID_ESTADO_CONT_DEPTO into l_id_estado_cont_depto
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=l_id_entidad 
         AND a.ID_DEPTO=l_id_depto 
         AND a.TIPO = 'R' 
         AND b.ID_ESTADO_CONT='01';
     
        SELECT ID_TRABAJADOR INTO l_id_trabajador FROM MOISES.TRABAJADOR WHERE ID_PERSONA=l_id_persona AND ID_ENTIDAD= l_id_entidad;  
        
        select count(*) INTO l_contar from ENOC.PLLA_REMUNERACION WHERE ID_TRABAJADOR=l_id_trabajador AND VIGENCIA=1;
        IF l_contar = 0 then
            l_error:=1;
            l_msgerror:='Trabajador sin registro en remuneraciones';
            goto salida_gen_renov;
        end if;
        
        SELECT 
        TIPO_PAGO,
        ID_ESCALA_SALARIAL,
        SUELDO,
        FMR AS PJE_FMR
        INTO 
        l_tipo_pago,
        l_id_escala_salarial,
        l_sueldo,
        l_pje_fmr
        FROM ENOC.PLLA_REMUNERACION
        WHERE ID_TRABAJADOR=l_id_trabajador
        AND VIGENCIA=1;
        
        --select coalesce(max(l_id_contrato),0) + 1 into l_id_contrato from ENOC.PLLA_CONTRATO;
        select coalesce(max(ID_CONTRATO),0) + 1 into l_id_contrato  from ENOC.PLLA_CONTRATO;
        
        insert into ENOC.PLLA_CONTRATO(
        ID_CONTRATO,
        ID_ENTIDAD,
        ID_DEPTO,
        ID_PERSONA,
        ID_SEDEAREA,
        ID_PERFIL_PUESTO,
        ID_TIPO_TIEMPO_TRABAJO,
        ID_CONDICION_LABORAL,
        TIPO,
        ID_CONTRATO_PARENT,
        ID_SOLIC_REQUE,
        ID_SOLIC_REQ_CANDIDATO,
        FECHA_INI,
        FECHA_FIN,
        CV_URL,
        MENOREDAD,
        MENOREDAD_URL,
        PLANCAP_URL,
        TIPO_PAGO,
        ID_ESCALA_SALARIAL,
        SUELDO,
        PJE_FMR,
        ID_TIPO_REGIMEN_LABORAL,
        ID_TIPO_OCUPACION,
        ID_TIPO_CONTRATO,
        ID_TIPO_SCTR_PENSION,
        SUJREGALT,
        SUJJORTRAMAX,
        SUJJORHORNOC,
        ESSINDICALIZADO,
        ID_PERIODO_REMU,
        EXOTACAT,
        ID_SITUACION_TRABAJADOR,
        ID_TIPO_PAGO,
        ID_TIPO_CATEG_OCUPA,
        ID_SITUACION_ESPECIAL,
        ID_TIPO_DOBLE_TRIB,
        ID_CONTRATO_PLANTILLA,
        ID_ESTADO_CONT_DEPTO,
        OBSERVACION,
        CONTRATO,
        CONTARTO_URL,
        TREGISTRO_URL,
        ID_USER_REG,
        FECHA_REG,
        ID_USER_MOD,
        FECHA_MOD,
        ID_LICENCIA_PERMISO,
        FECHA_INICIO_MISIONERO,
        MISIONERO_URL,
        ID_TIPO_STATUS,
        ID_GRUPO_PLANILLA,
        ID_PUESTO_REMP,
        FECHA_ING,
        ID_TIPO_TIEMPO_REGIMEN,
        ID_RENOVACION,
        CAMBIO_SUELDO,
        SUELDO_ANT
        )
        SELECT
        l_id_contrato as ID_CONTRATO,
        c.ID_ENTIDAD,
        substr(c.ID_DEPTO,1,1) as ID_DEPTO,
        b.ID_PERSONA,
        b.ID_SEDEAREA,
        P_ID_PERFIL_PUESTO,
        b.ID_TIPO_TIEMPO_TRABAJO,
        b.ID_CONDICION_LABORAL,
        'R' as TIPO,
        a.ID_CONTRATO as ID_CONTRATO_PARENT,
        null as ID_SOLIC_REQUE,
        null as ID_SOLIC_REQ_CANDIDATO,
        l_fecha_ini as FECHA_INI,
        P_FECHA_FIN AS FECHA_FIN,
        null AS CV_URL,
        null AS MENOREDAD,
        null AS MENOREDAD_URL,
        NULL AS PLANCAP_URL,
        l_tipo_pago,
        l_id_escala_salarial,
        --l_sueldo,
        P_SUELDO,
        l_pje_fmr,
        a.ID_TIPO_REGIMEN_LABORAL,
        b.ID_TIPO_OCUPACION,
        b.ID_TIPO_CONTRATO,
        a.ID_TIPO_SCTR_PENSION,
        a.SUJREGALT,
        a.SUJJORTRAMAX,
        a.SUJJORHORNOC,
        a.ESSINDICALIZADO,
        a.ID_PERIODO_REMU,
        a.EXOTACAT,
        b.ID_SITUACION_TRABAJADOR,
        a.ID_TIPO_PAGO,
        a.ID_TIPO_CATEG_OCUPA,
        a.ID_SITUACION_ESPECIAL,
        a.ID_TIPO_DOBLE_TRIB,
        NULL AS ID_CONTRATO_PLANTILLA,
        l_id_estado_cont_depto as ID_ESTADO_CONT_DEPTO,
        NULL AS OBSERVACION,
        NULL AS CONTRATO,
        NULL AS CONTARTO_URL,
        NULL AS TREGISTRO_URL,
        P_ID_USER as ID_USER_REG,
        sysdate as FECHA_REG,
        null as ID_USER_MOD,
        null as FECHA_MOD,
        null as ID_LICENCIA_PERMISO,
        a.FECHA_INICIO_MISIONERO,
        a.MISIONERO_URL,
        b.ID_TIPO_STATUS,
        a.ID_GRUPO_PLANILLA,
        null as ID_PUESTO_REMP,
        null as FECHA_ING,
        b.ID_TIPO_TIEMPO_REGIMEN,
        NULL as ID_RENOVACION,
        P_CAMBIO_SUELDO,
        l_sueldo
        FROM ENOC.PLLA_CONTRATO a, moises.trabajador b, eliseo.org_sede_area c
        WHERE a.ID_PERSONA=b.ID_PERSONA
        and b.id_sedearea=c.id_sedearea
        and a.id_contrato=P_ID_CONTRATO_ANT;
        
        select coalesce(max(ID_CONTRATO_ESTADO),0) + 1 into l_id_contrato_estado  from ENOC.PLLA_CONTRATO_ESTADO;
        insert into ENOC.PLLA_CONTRATO_ESTADO(
            id_contrato_estado,
            id_estado_cont_depto,
            id_contrato,
            id_autoriza,
            fecha
        ) values(
            l_id_contrato_estado,
            l_id_estado_cont_depto,
            l_id_contrato,
            P_ID_USER,
            sysdate
        );
      
        <<salida_gen_renov>> 
        if l_error=1 then
          l_msgerror:=l_msgerror||' - '||l_persona;
        end if;
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
       	P_ID_CONTRATO:=l_id_contrato;
      END SP_GENERAR_RENOVACION;

    PROCEDURE SP_FINALIZAR_RENOCION(P_ID_CONTRATO NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_persona number;
        l_id_entidad number;
        l_id_trabajador number;
        l_id number;
        l_id_perfil_puesto number:=0;
        l_id_perfil_puesto_c number;
        l_id_max number;
        l_fecha_ini date;
        l_cambio_sueldo varchar2(2);
        l_id_remuneracion number;
        l_sueldo number(10,2);
        l_pje_frm number(10,2);
        l_id_escala_salarial number;
      BEGIN
      
       select id_persona,id_entidad,id_perfil_puesto,fecha_ini,CAMBIO_SUELDO ,SUELDO,PJE_FMR,id_escala_salarial
       into l_id_persona, l_id_entidad, l_id_perfil_puesto_c,l_fecha_ini,l_cambio_sueldo,l_sueldo, l_pje_frm,l_id_escala_salarial
       from plla_contrato where id_contrato=P_ID_CONTRATO;
       
       SELECT ID_TRABAJADOR INTO l_id_trabajador FROM MOISES.TRABAJADOR WHERE ID_PERSONA=l_id_persona AND ID_ENTIDAD=l_id_entidad;
              
      MERGE INTO MOISES.TRABAJADOR S 
       USING(
         SELECT
            A.ID_CONTRATO,
            A.ID_ENTIDAD,
            A.ID_DEPTO,
            A.ID_PERSONA,
            A.ID_SEDEAREA,
            A.ID_PERFIL_PUESTO,
            A.ID_TIPO_TIEMPO_TRABAJO,
            A.ID_CONDICION_LABORAL,
            A.FECHA_INI,
            A.FECHA_FIN,
            A.MENOREDAD,
            A.MENOREDAD_URL,
            A.ID_TIPO_OCUPACION,
            A.ID_SITUACION_TRABAJADOR,
            B.ID_PUESTO,
            B.ID_TIPO_CONTROL_PERSONAL,
            B.ID_TIPO_HORARIO,
            A.FECHA_INICIO_MISIONERO,
            A.MISIONERO_URL,
            A.ID_TIPO_STATUS,
            A.ID_PERIODO_REMU,
            A.ID_TIPO_CONTRATO,
            A.ID_GRUPO_PLANILLA,
            A.ID_TIPO_TIEMPO_REGIMEN
          FROM PLLA_CONTRATO A , PLLA_PERFIL_PUESTO B
          WHERE A.ID_PERFIL_PUESTO=B.ID_PERFIL_PUESTO
          AND A.ID_CONTRATO=P_ID_CONTRATO
        )T ON(T.ID_PERSONA=S.ID_PERSONA AND T.ID_ENTIDAD=S.ID_ENTIDAD)
        WHEN  MATCHED THEN UPDATE SET  
        S.ID_TIPO_CONTROL_PERSONAL=T.ID_TIPO_CONTROL_PERSONAL,
        S.FECHA_FIN_PREVISTO=T.FECHA_FIN,
        S.FECHA_FIN_EFECTIVO=NULL,
        S.ID_PUESTO=T.ID_PUESTO,
        S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
        S.ID_CONTRATO=T.ID_CONTRATO;
       
      
       SELECT coalesce(MAX(ID_TRABAJADOR_PUESTO),0) INTO l_id_max FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR=l_id_trabajador;
       
       if l_id_max>0 then
        SELECT ID_PERFIL_PUESTO INTO l_id_perfil_puesto FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR_PUESTO=l_id_max;     
       end if;     
        if  l_id_perfil_puesto <> l_id_perfil_puesto_c then    
            
            --puesto trabajador
            select coalesce(max(ID_TRABAJADOR_PUESTO),0) + 1 into l_id  from MOISES.TRABAJADOR_PUESTO;
            insert into MOISES.TRABAJADOR_PUESTO(
              ID_TRABAJADOR_PUESTO,
              ID_TRABAJADOR,
              ID_PERFIL_PUESTO,
              ID_PUESTO,
              DESDE,
              HASTA,
              ID_USER_REG,
              FECHA_REG, 
              ID_USER_MOD,
              FECHA_MOD
              )
              select
              l_id,
              id_trabajador,
              ID_PERFIL_PUESTO,
              id_puesto,
              l_fecha_ini,
              null,
              P_ID_USER,
              sysdate,
              null,
              null
              from MOISES.TRABAJADOR
              where id_trabajador=l_id_trabajador;
              
              
              update MOISES.TRABAJADOR_PUESTO set
              HASTA=l_fecha_ini-1,
              ID_USER_MOD=P_ID_USER
              where ID_TRABAJADOR_PUESTO=l_id_max;
              
  
        end if;
        
        if l_cambio_sueldo = '1' then
        
          UPDATE PLLA_REMUNERACION SET VIGENCIA=0 WHERE id_trabajador = l_id_trabajador AND VIGENCIA=1;
          
          select coalesce(max(ID_REMUNERACION),0) + 1  into l_id_remuneracion  from  PLLA_REMUNERACION;
          
          INSERT INTO PLLA_REMUNERACION(
            ID_REMUNERACION,
            ID_TRABAJADOR,
            ID_CONTRATO,
            REFERENCIA,
            REFERENCIA_URL,
            FEC_EFECTIVO,
            TIPO_PAGO,
            FMR,
            SUELDO,
            BONIFICACION,
            OBSERVACION,
            ID_ESTADO_REMUNE,
            VIGENCIA,
            ID_USER_REG,
            FECHA_REG,
            ID_ESCALA_SALARIAL
          )values(
            l_id_remuneracion,
            l_id_trabajador,
            P_ID_CONTRATO,
            'Renovación',
            NULL,
            l_fecha_ini,
            'F',
            l_pje_frm,
            l_sueldo,
            0,
            'Renovación',
            '04',
            1,
            P_ID_USER,
            SYSDATE,
            l_id_escala_salarial
          );
                   
        end if;
 
        <<salida_fin_renovacion>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_FINALIZAR_RENOCION;
      
      PROCEDURE SP_GENERAR_CESE(
          P_ID_ENTIDAD NUMBER,
          P_ID_DEPTO NUMBER,
          P_ID_TRABAJDOR NUMBER,
          P_ID_MOTIVO_CESE varchar2,
          P_FECHA_CESE DATE,
          P_OBSERVACION varchar2 ,
          P_ID_CONTRATO NUMBER,
          P_ID_USER NUMBER,
          P_ID_CESE OUT number,
          P_ERROR OUT number,
          P_MSGERROR out varchar2
          ) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
        l_id_cese number;
        
        l_fecha_fin_previsto date;
        l_id_estado_cont_depto number;
        l_id_cese_estado number;
        l_id_persona number;
        l_id_contrato_estado number;
        l_persona varchar(150);
        
      BEGIN
        
        select ID_PERSONA,FECHA_FIN_PREVISTO INTO l_id_persona,l_fecha_fin_previsto FROM MOISES.TRABAJADOR WHERE ID_TRABAJADOR=P_ID_TRABAJDOR;
        
        
        select nombreapellido into l_persona from vw_persona_natural where id_persona = l_id_persona;
      
        if l_fecha_fin_previsto is not null then
          if P_FECHA_CESE > l_fecha_fin_previsto then
              l_error:=1;
              l_msgerror:='Fecha cese debe ser igual ó menor que fecha fin de contrato';
              goto salida_gen_cese;
          end if;
        end if;
        
        SELECT count(*) into l_contar
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
         AND a.ID_DEPTO=P_ID_DEPTO 
         AND a.TIPO='T' 
         AND b.ID_ESTADO_CONT='01';
         
         IF l_contar = 0 THEN
            l_error:=1;
            l_msgerror:='Falta configurar los pasos para proceso de desvinculación';
            goto salida_gen_cese;
        END IF;
        
         
        
        select count(*) INTO l_contar from ENOC.PLLA_CESE
        where ID_CONTRATO=P_ID_CONTRATO
        and ID_ESTADO_CONT_DEPTO  in(
           SELECT ID_ESTADO_CONT_DEPTO 
           FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
           WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
           AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
           AND a.ID_DEPTO=P_ID_DEPTO 
           AND a.TIPO='T' 
           AND b.ID_ESTADO_CONT not in('09','00')
        );
        
         IF l_contar > 0 THEN
            l_error:=1;
            l_msgerror:='Ya esta asignado para desvinculación';
            goto salida_gen_cese;
        END IF;
        
       
        select count(*) INTO l_contar from ENOC.PLLA_CONTRATO
        where ID_CONTRATO_PARENT=P_ID_CONTRATO
        and ID_ESTADO_CONT_DEPTO  in(
           SELECT ID_ESTADO_CONT_DEPTO 
           FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
           WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
           AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
           AND a.ID_DEPTO=P_ID_DEPTO 
           AND a.TIPO='R' 
           AND b.ID_ESTADO_CONT not in('00')--'09'
        );
        
         IF l_contar > 0 THEN
            l_error:=1;
            l_msgerror:='Ya esta asignado para renovación';
            goto salida_gen_cese;
        END IF;
        
        
         SELECT ID_ESTADO_CONT_DEPTO into l_id_estado_cont_depto
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
         AND a.ID_DEPTO=P_ID_DEPTO 
         AND a.TIPO='T' 
         AND b.ID_ESTADO_CONT='01';
     
           
     
        select coalesce(max(ID_CESE),0) + 1 into l_id_cese  from ENOC.PLLA_CESE;
        
        insert into ENOC.PLLA_CESE(
          ID_CESE,
          ID_ENTIDAD,
          ID_DEPTO,
          ID_TRABAJADOR,
          ID_MOTIVO_CESE,
          FECHA_CESE,
          OBSERVACION,
          ID_CONTRATO,
          ID_ESTADO_CONT_DEPTO,
          ID_USER_REG,
          FECHA_REG
        )VALUES(
          l_id_cese,
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_TRABAJDOR,
          P_ID_MOTIVO_CESE,
          P_FECHA_CESE,
          P_OBSERVACION,
          P_ID_CONTRATO,
          l_id_estado_cont_depto,
          P_ID_USER,
          SYSDATE
        );
        
        select coalesce(max(ID_CESE_ESTADO),0) + 1 into l_id_cese_estado  from ENOC.PLLA_CESE_ESTADO;
        insert into ENOC.PLLA_CESE_ESTADO(
            id_cese_estado,
            id_estado_cont_depto,
            id_cese,
            id_autoriza,
            fecha
        ) values(
            l_id_cese_estado,
            l_id_estado_cont_depto,
            l_id_cese,
            P_ID_USER,
            sysdate
        );
      
        <<salida_gen_cese>> 
        if l_error=1 then
          l_msgerror:=l_msgerror||' - '||l_persona;
        end if;
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_ID_CESE:= l_id_cese;
      END SP_GENERAR_CESE;
      
      PROCEDURE SP_FINALIZAR_CESE(P_ID_CESE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_persona number;
        l_id_entidad number;
        l_id_trabajador number;
        l_id number;
        l_id_perfil_puesto number:=0;
        l_id_perfil_puesto_c number;
        l_id_max number;
        l_fecha_cese date;
        l_id_depto varchar2(10);
        l_id_estado_cont_depto number;

      BEGIN
      
       select ID_TRABAJADOR, FECHA_CESE,id_entidad,id_depto INTO l_id_trabajador,l_fecha_cese,l_id_entidad,l_id_depto  from PLLA_CESE where ID_CESE=P_ID_CESE;
       
       
       UPDATE MOISES.TRABAJADOR SET
       FECHA_FIN_EFECTIVO = l_fecha_cese,
       ID_SITUACION_TRABAJADOR='0' --PARA ADELANTE HAY QUE CAMBIAR A 2 PENDIENTE DE LIQUIDACION Y EN LA LIQUIDACION SE ASIGNA 0 BAJA
       WHERE ID_TRABAJADOR = l_id_trabajador;
       
            
      
       SELECT coalesce(MAX(ID_TRABAJADOR_PUESTO),0) INTO l_id_max FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR=l_id_trabajador;
       
       update MOISES.TRABAJADOR_PUESTO set
              HASTA=l_fecha_cese,
              ID_USER_MOD=P_ID_USER
       where ID_TRABAJADOR_PUESTO=l_id_max;
       
       
        SELECT coalesce(MAX(ID_TRABAJADOR_AREA),0) INTO l_id_max FROM MOISES.TRABAJADOR_AREA WHERE ID_TRABAJADOR=l_id_trabajador;
       
       update MOISES.TRABAJADOR_AREA set
              HASTA=l_fecha_cese,
              ID_USER_MOD=P_ID_USER
       where ID_TRABAJADOR_AREA=l_id_max;
       

        SELECT count(*) INTO l_contar
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=l_id_entidad 
         AND a.ID_DEPTO=l_id_depto 
         AND a.TIPO='T' 
         AND b.ID_ESTADO_CONT='07';
        
         IF l_contar = 0 THEN
            l_error:=1;
            l_msgerror:='No existe asignado paso para cese';
            goto salida_fin_cese;
        END IF;
        
         SELECT ID_ESTADO_CONT_DEPTO into l_id_estado_cont_depto
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=l_id_entidad 
         AND a.ID_DEPTO=l_id_depto 
         AND a.TIPO='T' 
         AND b.ID_ESTADO_CONT='07';
         
         update  PLLA_CESE set
         ID_ESTADO_CONT_DEPTO=l_id_estado_cont_depto,
         ID_USER_MOD= P_ID_USER,
         FECHA_MOD=sysdate
         where ID_CESE=P_ID_CESE;
         
         --DESACTIVAR VIGENCIAS DE PAGOS DESPUES DE CESE
         MERGE INTO ENOC.PLLA_ADICIONAL_DET S 
          USING(
            SELECT 
            b.id_adicional_det
            FROM ENOC.PLLA_ADICIONAL A, ENOC.PLLA_ADICIONAL_DET B
            WHERE A.ID_ADICIONAL=B.ID_ADICIONAL
            AND A.ID_TRABAJADOR=l_id_trabajador
            AND A.id_estado_adicional not in('00','05')
            AND B.VIGENCIA=1
            AND to_date(to_char(B.id_anho)||'-'||to_char(B.id_mes)||'-01','YYYY-MM-DD')> to_date(to_char(l_fecha_cese,'YYYY-MM')||'-01','YYYY-MM-DD')
        )T ON(T.id_adicional_det=S.id_adicional_det)
          WHEN  MATCHED THEN UPDATE SET  
          S.VIGENCIA=0,
          S.id_user_mod=P_ID_USER,
          FECHA_MOD=sysdate;
          
        MERGE INTO ENOC.PLLA_REMUNERACION_DET S 
          USING(
              SELECT B.ID_REMUNERACION_DET
              FROM ENOC.PLLA_REMUNERACION A, ENOC.PLLA_REMUNERACION_DET B
              WHERE A.ID_REMUNERACION=B.ID_REMUNERACION
              AND A.ID_TRABAJADOR=l_id_trabajador
              AND B.VIGENCIA=1
              AND to_date(to_char(B.id_anho)||'-'||to_char(B.id_mes)||'-01','YYYY-MM-DD')> to_date(to_char(l_fecha_cese,'YYYY-MM')||'-01','YYYY-MM-DD')
        )T ON(T.ID_REMUNERACION_DET=S.ID_REMUNERACION_DET)
          WHEN  MATCHED THEN UPDATE SET  
          S.VIGENCIA=0,
          S.id_user_mod=P_ID_USER,
          FECHA_MOD=sysdate;
  
        MERGE INTO ENOC.PLLA_ADICIONAL_PERSONA S 
          USING(
            SELECT B.ID_ADICIONAL_PERSONA FROM ENOC.PLLA_ADICIONAL A, ENOC.PLLA_ADICIONAL_PERSONA B
            WHERE A.ID_ADICIONAL=B.ID_ADICIONAL
            AND B.ID_TRABAJADOR=l_id_trabajador
            AND a.id_estado_adicional not in('00','05')
            AND B.VIGENCIA=1
            AND to_date(to_char(A.id_anho)||'-'||to_char(A.id_mes)||'-01','YYYY-MM-DD')> to_date(to_char(l_fecha_cese,'YYYY-MM')||'-01','YYYY-MM-DD')
        )T ON(T.ID_ADICIONAL_PERSONA=S.ID_ADICIONAL_PERSONA)
          WHEN  MATCHED THEN UPDATE SET  
          S.VIGENCIA=0,
          S.id_user_mod=P_ID_USER,
          FECHA_MOD=sysdate;
 
        <<salida_fin_cese>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_FINALIZAR_CESE;
      
      PROCEDURE SP_REGISTRAR_CAMBIO(
      P_ID_CAMBIOS NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO varchar2,
      P_ID_CONCEPTO_CAMBIO NUMBER,
      P_ID_TRABAJADOR NUMBER,
      P_ID_SEDEAREA NUMBER,
      P_ID_PERFIL_PUESTO NUMBER,
      P_ID_CONDICION_LABORAL varchar2,
      P_ID_TIPO_CONTRATO varchar2,
      P_ID_TIPO_TIEMPO_TRABAJO NUMBER,
      P_FEC_DESDE DATE,
      P_FEC_HASTA DATE,
      P_MOD_FMR_SUELDO varchar2,
      P_ID_ESCALA_SALARIAL number,
      P_SUELDO NUMBER,
      P_PJE_FMR NUMBER,
      P_COMENTARIO varchar2,
      P_ACT_INS varchar2,
      P_PORCENTAJE NUMBER,
      P_ID_TIPO_HORARIO NUMBER,
      P_ID_USER NUMBER,P_ID_CAMBIO OUT NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_codigo varchar2(20);
        l_id_cambios number;
        l_id_sede_area number;
        l_id_perfil_puesto number;
        l_id_condicion_laboral varchar2(10);
        l_id_tipo_contrato  varchar2(10);
        l_id_tipo_tiempo_trabajo number;
        l_id_estado_cambios varchar2(5);
        l_sueldo number(10,2):=0;
        l_pje_fmr number(10,2):=0;
        l_proceso_fin varchar2(1):='N';
        l_id_tipo_horario number;
      BEGIN
      
        SELECT CODIGO INTO l_codigo FROM enoc.PLLA_CONCEPTO_CAMBIO WHERE ID_CONCEPTO_CAMBIO=P_ID_CONCEPTO_CAMBIO;
        
          
                  
        select 
        id_sedearea,id_perfil_puesto, id_condicion_laboral,id_tipo_contrato,id_tipo_tiempo_trabajo,id_tipo_horario 
        into 
        l_id_sede_area, l_id_perfil_puesto,l_id_condicion_laboral,l_id_tipo_contrato,l_id_tipo_tiempo_trabajo,l_id_tipo_horario 
        from moises.trabajador 
        where id_trabajador=P_ID_TRABAJADOR;
        
        
        select sueldo, fmr into l_sueldo,l_pje_fmr  from ENOC.plla_remuneracion where id_trabajador=P_ID_TRABAJADOR and vigencia=1;
        
        /*if l_codigo in('CCC','CCM') then
          if l_id_condicion_laboral in('M','E') and P_ID_CONDICION_LABORAL in('M','E') then
            l_proceso_fin:='S';
          end if;
        end if;*/
        
        if P_ID_CAMBIOS=0 then
        
          select coalesce(max(id_cambios),0) + 1 into l_id_cambios from PLLA_CAMBIOS;
          
          insert into enoc.PLLA_CAMBIOS(
              ID_CAMBIOS,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_CONCEPTO_CAMBIO,
              ID_TRABAJADOR,
              ID_SEDEAREA,
              ID_PERFIL_PUESTO,
              ID_CONDICION_LABORAL,
              ID_TIPO_CONTRATO,
              ID_TIPO_TIEMPO_TRABAJO,
              FEC_DESDE,
              FEC_HASTA,
              MOD_FMR_SUELDO,
              ID_TIPO_HORARIO,
              ID_ESCALA_SALARIAL,
              SUELDO,
              PJE_FMR,
              COMENTARIO,
              ACT_INS,
              PROCESO_FIN,
              PORCENTAJE,
              APS,
              ID_ESTADO_CAMBIO,
              ID_USER_REG,
              FECHA_REG,
              ID_SEDEAREAA,
              ID_PERFIL_PUESTOA,
              ID_CONDICION_LABORALA,
              ID_TIPO_CONTRATOA,
              ID_TIPO_TIEMPO_TRABAJOA,
              SUELDOA,
              PJE_FMRA,
              ID_TIPO_HORARIOA
            )values(
              l_id_cambios,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_CONCEPTO_CAMBIO,
              P_ID_TRABAJADOR,
              case when P_ID_SEDEAREA=0 then null else P_ID_SEDEAREA end,
              case when P_ID_PERFIL_PUESTO=0 then null else P_ID_PERFIL_PUESTO end,
              P_ID_CONDICION_LABORAL,
              P_ID_TIPO_CONTRATO,
              case when P_ID_TIPO_TIEMPO_TRABAJO=0 then null else P_ID_TIPO_TIEMPO_TRABAJO end,
              P_FEC_DESDE,
              P_FEC_HASTA,
              P_MOD_FMR_SUELDO,
              P_ID_TIPO_HORARIO,
              case when P_ID_ESCALA_SALARIAL=0 then null else P_ID_ESCALA_SALARIAL end,
              P_SUELDO,
              P_PJE_FMR,
              P_COMENTARIO,
              P_ACT_INS,
              l_proceso_fin,
              case when P_PORCENTAJE=0 then null else P_PORCENTAJE end,
              '0',
              '01',
              P_ID_USER,
              sysdate,
              l_id_sede_area,
              l_id_perfil_puesto,
              l_id_condicion_laboral,
              l_id_tipo_contrato,
              l_id_tipo_tiempo_trabajo,
              l_sueldo,
              l_pje_fmr,
              l_id_tipo_horario
            );
        else
          SELECT ID_ESTADO_CAMBIO INTO l_id_estado_cambios FROM enoc.PLLA_CAMBIOS WHERE ID_CAMBIOS = P_ID_CAMBIOS;
          if l_id_estado_cambios not in('01','07') then
            l_error:=1;
            l_msgerror:='Si modifica sólo con estado registrado';
            goto salida_reg_cambio;
          end if;
          update enoc.PLLA_CAMBIOS set
              ID_SEDEAREA = case when P_ID_SEDEAREA=0 then null else P_ID_SEDEAREA end ,
              ID_PERFIL_PUESTO=case when P_ID_PERFIL_PUESTO=0 then null else P_ID_PERFIL_PUESTO end,
              ID_CONDICION_LABORAL=P_ID_CONDICION_LABORAL,
              ID_TIPO_CONTRATO=P_ID_TIPO_CONTRATO,
              ID_TIPO_TIEMPO_TRABAJO=case when P_ID_TIPO_TIEMPO_TRABAJO=0 then null else P_ID_TIPO_TIEMPO_TRABAJO end,
              FEC_DESDE=P_FEC_DESDE,
              FEC_HASTA=P_FEC_HASTA,
              MOD_FMR_SUELDO=P_MOD_FMR_SUELDO,
              ID_TIPO_HORARIO = P_ID_TIPO_HORARIO,
              ID_ESCALA_SALARIAL=case when P_ID_ESCALA_SALARIAL=0 then null else P_ID_ESCALA_SALARIAL end,
              SUELDO=P_SUELDO,
              PJE_FMR=P_PJE_FMR,
              COMENTARIO=P_COMENTARIO,
              ACT_INS=P_ACT_INS,
              PROCESO_FIN=l_proceso_fin,
              PORCENTAJE = case when P_PORCENTAJE=0 then null else P_PORCENTAJE end,
              ID_USER_MOD= P_ID_USER,
              FECHA_MOD=sysdate,
              ID_SEDEAREAA= l_id_sede_area,
              ID_PERFIL_PUESTOA=l_id_perfil_puesto,
              ID_CONDICION_LABORALA=l_id_condicion_laboral,
              ID_TIPO_CONTRATOA=l_id_tipo_contrato,
              ID_TIPO_TIEMPO_TRABAJOA=l_id_tipo_tiempo_trabajo,
              SUELDOA=l_sueldo,
              PJE_FMRA=l_pje_fmr,
              ID_TIPO_HORARIOA=l_id_tipo_horario
          where ID_CAMBIOS=P_ID_CAMBIOS;
          
          l_id_cambios:=P_ID_CAMBIOS;
        end if;
           
       <<salida_reg_cambio>>
        P_ID_CAMBIO:=l_id_cambios;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_REGISTRAR_CAMBIO;
      
      PROCEDURE SP_FINALIZAR_CAMBIO(P_ID_CAMBIOS NUMBER,P_ID_CONTRATO NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
       IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_concepto_cambio number;
        l_codigo varchar2(20);
        l_id_trabajador number;
        l_id_sedearea number;
        l_id_perfil_puesto number;
        l_id_condicion_laboral varchar2(10);
        l_id_condicion_laboral_act varchar2(10);
        l_id_tipo_contrato  varchar2(10);
        l_id_tipo_tiempo_trabajo number;
        l_id_puesto number;
        l_mod_fmr_sueldo varchar2(2);
        l_sueldo number(10,2);
        l_pje_fmra number(10,2);
        l_id_remuneracion number;
        l_nombre varchar2(150);
        l_id_contrato number;
        l_id_escala_salarial number;
        l_act_ins varchar2(2); --I:nuevo, A:actualiza
        l_id_max number;
        l_id number;
        l_id_sede_area_aux number;
        l_fec_desde date;
        l_fec_hasta date;
        l_porcentaje number(10,2);
        l_id_perfil_puesto_aux number;
        l_id_tipo_horario number;
        l_id_tipo_horario_act number;
        l_ret_asist varchar(200);
        l_id_tipo_control_personal number;
        l_id_tipo_control_personal_act number;
      BEGIN
        SELECT 
          ID_CONCEPTO_CAMBIO,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_CONTRATO,
          ID_TIPO_TIEMPO_TRABAJO,
          coalesce(MOD_FMR_SUELDO,'N'),
          SUELDO,
          PJE_FMR,
          ID_TRABAJADOR,
          ID_ESCALA_SALARIAL,
          ACT_INS,
          FEC_DESDE,
          FEC_HASTA,
          PORCENTAJE,
          id_tipo_horario
        into 
          l_id_concepto_cambio,
          l_id_sedearea,
          l_id_perfil_puesto,
          l_id_condicion_laboral,
          l_id_tipo_contrato,
          l_id_tipo_tiempo_trabajo,
          l_mod_fmr_sueldo,
          l_sueldo,
          l_pje_fmra,
          l_id_trabajador,
          l_id_escala_salarial,
          l_act_ins,
          l_fec_desde,
          l_fec_hasta,
          l_porcentaje,
          l_id_tipo_horario
        from enoc.PLLA_CAMBIOS 
        where ID_CAMBIOS=P_ID_CAMBIOS;
        
        SELECT CODIGO,nombre INTO l_codigo, l_nombre FROM enoc.PLLA_CONCEPTO_CAMBIO WHERE ID_CONCEPTO_CAMBIO=l_id_concepto_cambio;
        
        select id_contrato,id_tipo_horario,id_tipo_control_personal into l_id_contrato, l_id_tipo_horario_act,l_id_tipo_control_personal_act  FROM moises.trabajador where id_trabajador=l_id_trabajador;
        
         case 
           WHEN l_codigo='CAP' THEN --Cambio de Area y Puesto  
           
           select id_puesto,id_tipo_control_personal into l_id_puesto,l_id_tipo_control_personal from enoc.plla_perfil_puesto where id_perfil_puesto=l_id_perfil_puesto;
           
          if l_act_ins='A' then
              update moises.trabajador set
                id_sedearea=l_id_sedearea,
                id_perfil_puesto=l_id_perfil_puesto,
                id_puesto = l_id_puesto
              where id_trabajador=l_id_trabajador;
          end if;
            
           SELECT coalesce(MAX(ID_TRABAJADOR_AREA),0) INTO l_id_max FROM MOISES.TRABAJADOR_AREA WHERE ID_TRABAJADOR=l_id_trabajador and coalesce(OTRO_AREA,'N')<>'S';
       
           if l_id_max>0 then
            SELECT ID_SEDEAREA INTO l_id_sede_area_aux FROM MOISES.TRABAJADOR_AREA WHERE ID_TRABAJADOR_AREA=l_id_max;  
            if l_act_ins='A' then
              update MOISES.TRABAJADOR_AREA set
                  HASTA=l_fec_desde-1,
                  ID_USER_MOD=P_ID_USER
                  where ID_TRABAJADOR_AREA=l_id_max;
            end if;
           end if;  
           
             --area trabajador
            select coalesce(max(ID_TRABAJADOR_AREA),0) +1 into l_id  from MOISES.TRABAJADOR_AREA;
            insert into MOISES.TRABAJADOR_AREA(
              ID_TRABAJADOR_AREA,
              ID_TRABAJADOR,
              ID_SEDEAREA,
              DESDE,
              HASTA,
              OTRO_AREA,
              PORCENTAJE,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
              )VALUES(
              l_id,
              l_id_trabajador,
              l_id_sedearea,
              l_fec_desde,
              CASE WHEN l_act_ins = 'I' THEN  l_fec_hasta ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  'S' ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  l_porcentaje ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  1 ELSE null END,
              P_ID_USER,
              sysdate
              );
            
            --puesto trabajador
            SELECT coalesce(MAX(ID_TRABAJADOR_PUESTO),0) INTO l_id_max FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR=l_id_trabajador and coalesce(OTRO_PUESTO,'N')<>'S';
       
             if l_id_max>0 then
              SELECT ID_PERFIL_PUESTO INTO l_id_perfil_puesto_aux FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR_PUESTO=l_id_max;  
              if l_act_ins='A' then
                update MOISES.TRABAJADOR_PUESTO set
                    HASTA=l_fec_desde-1,
                    ID_USER_MOD=P_ID_USER
                    where ID_TRABAJADOR_PUESTO=l_id_max;
              end if;
             end if; 
             
            select coalesce(max(ID_TRABAJADOR_PUESTO),0) + 1 into l_id  from MOISES.TRABAJADOR_PUESTO;
            insert into MOISES.TRABAJADOR_PUESTO(
              ID_TRABAJADOR_PUESTO,
              ID_TRABAJADOR,
              ID_PERFIL_PUESTO,
              ID_PUESTO,
              DESDE,
              HASTA,
              OTRO_PUESTO,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
              )values(
              l_id,
              l_id_trabajador,
              l_id_perfil_puesto,
              l_id_puesto,
              l_fec_desde,
              CASE WHEN l_act_ins = 'I' THEN  l_fec_hasta ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  'S' ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  1 ELSE null END,
              P_ID_USER,
              sysdate
              );
              
              if l_id_tipo_control_personal is not null then
               if l_id_tipo_control_personal<>l_id_tipo_control_personal_act then
                  PKG_ASSISTANCE.SP_CAMBIO_DATOS(
                   l_id_trabajador,
                   to_char(l_id_tipo_control_personal),
                   l_fec_desde,
                   null,
                   l_nombre,
                   P_ID_USER,
                   'TP',
                   l_ret_asist,
                   l_error,
                   l_msgerror
                   );
               end if;
              end if;
            
           WHEN l_codigo='CP' THEN  --Cambio de Puesto
           
             select id_puesto,id_tipo_control_personal into l_id_puesto,l_id_tipo_control_personal from enoc.plla_perfil_puesto where id_perfil_puesto=l_id_perfil_puesto;
            if l_act_ins='A' then
               update moises.trabajador set
                id_perfil_puesto=l_id_perfil_puesto,
                id_puesto = l_id_puesto
              where id_trabajador=l_id_trabajador;
            end if;
            
            --puesto trabajador
            SELECT coalesce(MAX(ID_TRABAJADOR_PUESTO),0) INTO l_id_max FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR=l_id_trabajador and coalesce(OTRO_PUESTO,'N')<>'S';
       
             if l_id_max>0 then
              SELECT ID_PERFIL_PUESTO INTO l_id_perfil_puesto_aux FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR_PUESTO=l_id_max;  
              if l_act_ins='A' then
                update MOISES.TRABAJADOR_PUESTO set
                    HASTA=l_fec_desde-1,
                    ID_USER_MOD=P_ID_USER
                    where ID_TRABAJADOR_PUESTO=l_id_max;
              end if;
             end if; 
             
            select coalesce(max(ID_TRABAJADOR_PUESTO),0) + 1 into l_id  from MOISES.TRABAJADOR_PUESTO;
            insert into MOISES.TRABAJADOR_PUESTO(
              ID_TRABAJADOR_PUESTO,
              ID_TRABAJADOR,
              ID_PERFIL_PUESTO,
              ID_PUESTO,
              DESDE,
              HASTA,
              OTRO_PUESTO,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
              )values(
              l_id,
              l_id_trabajador,
              l_id_perfil_puesto,
              l_id_puesto,
              l_fec_desde,
              CASE WHEN l_act_ins = 'I' THEN  l_fec_hasta ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  'S' ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  1 ELSE null END,
              P_ID_USER,
              sysdate
              );
              
              
              if l_id_tipo_control_personal is not null then
               if l_id_tipo_control_personal<>l_id_tipo_control_personal_act then
                  PKG_ASSISTANCE.SP_CAMBIO_DATOS(
                   l_id_trabajador,
                   to_char(l_id_tipo_control_personal),
                   l_fec_desde,
                   null,
                   l_nombre,
                   P_ID_USER,
                   'TP',
                   l_ret_asist,
                   l_error,
                   l_msgerror
                   );
               end if;
              end if;
            
           WHEN l_codigo in('CCC', 'CCM') THEN  --Cambio de condicion laboral/contrato
            
 
            select id_condicion_laboral into l_id_condicion_laboral_act from moises.trabajador where id_trabajador=l_id_trabajador;
            update moises.trabajador set
              id_condicion_laboral=l_id_condicion_laboral,
              id_tipo_contrato = case when l_id_condicion_laboral_act in('E','M') and l_id_condicion_laboral in('E','M') then id_tipo_contrato else l_id_tipo_contrato end,
              fecha_fin_previsto= case when l_id_condicion_laboral in('E','M') then  null else fecha_fin_previsto end,
              fecha_fin_efectivo= case when l_id_condicion_laboral in('E','M') then  null else fecha_fin_efectivo end,
              id_contrato  = case when P_ID_CONTRATO= 0 then id_contrato else P_ID_CONTRATO end
            where id_trabajador=l_id_trabajador;
            
           WHEN l_codigo='CJL' THEN  --Cambio de Jornada Laboral
            update moises.trabajador set
              id_tipo_tiempo_trabajo=l_id_tipo_tiempo_trabajo
            where id_trabajador=l_id_trabajador;
            
           ELSE 
              l_error:=1;
              l_msgerror:='No esta configurado para hacer cambios';
              goto salida_fin_cambio;
        END CASE;
        
        if l_mod_fmr_sueldo = 'S' then
        
          UPDATE PLLA_REMUNERACION SET VIGENCIA=0 WHERE id_trabajador = l_id_trabajador AND VIGENCIA=1;
          
          select coalesce(max(ID_REMUNERACION),0) + 1  into l_id_remuneracion  from  PLLA_REMUNERACION;
          
          INSERT INTO PLLA_REMUNERACION(
            ID_REMUNERACION,
            ID_TRABAJADOR,
            ID_CONTRATO,
            REFERENCIA,
            REFERENCIA_URL,
            FEC_EFECTIVO,
            TIPO_PAGO,
            FMR,
            SUELDO,
            BONIFICACION,
            OBSERVACION,
            ID_ESTADO_REMUNE,
            VIGENCIA,
            ID_USER_REG,
            FECHA_REG,
            ID_ESCALA_SALARIAL
          )values(
            l_id_remuneracion,
            l_id_trabajador,
            l_id_contrato,
            l_nombre,
            NULL,
            SYSDATE,
            'F',
            l_pje_fmra,
            l_sueldo,
            0,
            l_nombre,
            '04',
            1,
            P_ID_USER,
            SYSDATE,
            l_id_escala_salarial
          );
                   
        end if;
        
        update enoc.PLLA_CAMBIOS set
        PROCESO_FIN='S'
        where ID_CAMBIOS=P_ID_CAMBIOS;
        
        if l_id_tipo_horario is not null then
         if l_id_tipo_horario<>l_id_tipo_horario_act then
            PKG_ASSISTANCE.SP_CAMBIO_DATOS(
             l_id_trabajador,
             to_char(l_id_tipo_horario),
             l_fec_desde,
             null,
             l_nombre,
             P_ID_USER,
             'TH',
             l_ret_asist,
             l_error,
             l_msgerror
             );
         end if;
        end if;
       <<salida_fin_cambio>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_FINALIZAR_CAMBIO;
      
       PROCEDURE SP_VALIDAR_DOCENTE(
        P_ID_ENTIDAD NUMBER,
        P_ID_PERSONA NUMBER,
        P_ERROR OUT number,
        P_MSGERROR out varchar2
        ) IS
        l_error number:=0;
        l_msgerror varchar2(3000):='OK';
        l_contar number;
        l_contar1 number;
        l_contar2 number;
        l_id_situacion_trabajador varchar2(5):='-';
        l_id_solic_req_candidato NUMBER;
        l_msg varchar2(3000):='-';
        
        --l_id_situacion_trabajador  varchar2(5);
        l_id_tipo_control_personal number;
        l_id_condicion_laboral varchar2(5);
        l_id_situacion_educativo varchar2(5);
        l_id_tipopais number;
        l_id_ubigeo number;
        l_id_tiporeligion number;
        l_celular varchar2(70);
        l_correo varchar2(70);
        l_correo_inst varchar2(70);
        l_documento_url varchar2(150);
        l_id_categoria_docente number;
        l_id_tipoestadocivil number;
        l_id number;
        l_cod_academico varchar2(10);
        l_nom_grado varchar2(200);

    BEGIN
    
    SELECT COUNT(*) INTO l_contar FROM MOISES.TRABAJADOR WHERE ID_PERSONA=P_ID_PERSONA AND  ID_ENTIDAD=P_ID_ENTIDAD;
    
    if l_contar>0 then
      SELECT coalesce(id_situacion_trabajador,'0') INTO l_id_situacion_trabajador FROM MOISES.TRABAJADOR WHERE ID_PERSONA=P_ID_PERSONA AND  ID_ENTIDAD=P_ID_ENTIDAD;
    end if;
    
    if l_id_situacion_trabajador not in('1','3') then
      select count(*) into l_contar from enoc.plla_solic_req_candidato where id_persona=P_ID_PERSONA and ID_ESTADO_REQ_CAND in('06','08');
      if l_contar=0 then
        l_msgerror:='MENSAJE1: TRABAJADOR NO HA INICIADO CON PROCESO DE CONTRATACIÓN ';
        l_error:=1;
        goto salida_valdocente;
      end if;
      
      select max(id_solic_req_candidato) into l_id_solic_req_candidato from enoc.plla_solic_req_candidato where id_persona=P_ID_PERSONA and ID_ESTADO_REQ_CAND in('06','08'); 
      
      select count(*) into l_contar from enoc.plla_contrato where id_persona = P_ID_PERSONA and id_solic_req_candidato=l_id_solic_req_candidato;
      
      select count(*) into l_contar1 from enoc.plla_solic_req_candidato_det where  id_solic_req_candidato=l_id_solic_req_candidato;
      
      IF l_contar1=0 AND l_contar=1 THEN
     
          select count(*) into l_contar2 from enoc.plla_contrato a,PLLA_ESTADO_CONT_DEPTO b  
          where a.id_ESTADO_CONT_DEPTO=b.id_ESTADO_CONT_DEPTO
          and a.id_persona = P_ID_PERSONA 
          and a.id_solic_req_candidato=l_id_solic_req_candidato
          and b.ID_ESTADO_CONT in('08','00');
          
          if l_contar2>1 then
            l_msgerror:='MENSAJE2: TRABAJADOR NO HA INICIADO CON PROCESO DE CONTRATACIÓN ';
            l_error:=1;
            goto salida_valdocente;
          end if;
      END IF;
      IF l_contar1>0 THEN
        select count(*) into l_contar2 from enoc.plla_contrato a,PLLA_ESTADO_CONT_DEPTO b  
        where a.id_ESTADO_CONT_DEPTO=b.id_ESTADO_CONT_DEPTO
        and a.id_persona = P_ID_PERSONA 
        and a.id_solic_req_candidato=l_id_solic_req_candidato
        and b.ID_ESTADO_CONT in('08','00');
        
        if l_contar1=l_contar2 then
          l_msgerror:='MENSAJE3: TRABAJADOR NO HA INICIADO CON PROCESO DE CONTRATACIÓN ';
          l_error:=1;
          goto salida_valdocente;
        end if;
      end if;
    else
       case l_id_situacion_trabajador
       when '3' then 
        l_msgerror:='MENSAJE4: TRABAJADOR CON SUSPENSIÓN PERFECTA DE LABORES';
        l_error:=1;
        goto salida_valdocente;
       when '1' then 
        
          select
          a.ID_SITUACION_TRABAJADOR,
          a.ID_TIPO_CONTROL_PERSONAL,
          a.ID_CONDICION_LABORAL,
          a.ID_SITUACION_EDUCATIVO,
          a.ID_TIPOPAIS,
          a.ID_UBIGEO,
          a.ID_TIPORELIGION,
          a.CELULAR,
          a.CORREO,
          a.CORREO_INST,
          a.DOCUMENTO_URL,
          (select x.id_categoria_docente from moises.persona_acad_categoria x
            where x.id_categoria in(
              select max(z.id_categoria) from moises.persona_acad_categoria z
              where z.id_persona=a.id_persona
              and z.ESTADO='1'
            ) and x.ESTADO='1'
          ) as id_categoria_docente,
          id_tipoestadocivil
          into 
          l_id_situacion_trabajador,
          l_id_tipo_control_personal,
          l_id_condicion_laboral,
          l_id_situacion_educativo,
          l_id_tipopais,
          l_id_ubigeo,
          l_id_tiporeligion,
          l_celular,
          l_correo,
          l_correo_inst,
          l_documento_url,
          l_id_categoria_docente,
          l_id_tipoestadocivil
          from enoc.vw_trabajador a
          where a.id_entidad=P_ID_ENTIDAD
          and a.id_persona=P_ID_PERSONA;
          
          
          if l_id_tipo_control_personal is null then
            l_msg:=l_msg||'Falta registrar jornada laboral. ';
            l_error:=1;
          end if;
          if l_id_condicion_laboral is null then
            l_msg:=l_msg||'Falta registrar condición laboral. ';
            l_error:=1;
          end if;
         
          if l_id_tipopais is null then
            l_msg:=l_msg||'Falta registrar país (Nacionalidad). ';
            l_error:=1;
          end if;
          if l_id_tipopais is not null then 
            if l_id_tipopais=176 then
              if l_id_ubigeo is null then
                l_msg:=l_msg||'Falta registrar región de nacimiento. ';
                l_error:=1;
              end if;
            end if;
          end if;
          if l_id_tiporeligion is null then
            l_msg:=l_msg||'Falta registrar religión. ';
            l_error:=1;
          end if;
          if l_celular is null then
            l_msg:=l_msg||'Falta registrar celular. ';
            l_error:=1;
          end if;
          if l_correo is null then
            l_msg:=l_msg||'Falta registrar correo personal. ';
            l_error:=1;
          end if;
          if l_documento_url is null then
            l_msg:=l_msg||'Falta adjuntar documento de identidad. ';
            l_error:=1;
          end if;
          
          if l_id_tipoestadocivil is null then
            l_msg:=l_msg||'Falta asignar estado civil. ';
            l_error:=1;
          else
            if l_id_tipoestadocivil=1 then
            
              select count(*) into l_contar from MOISES.VINCULO_FAMILIAR where id_persona=P_ID_PERSONA and ID_TIPO_VINCULO_FAMILIAR='02';
              if l_contar=0 then 
                l_msg:=l_msg||'Falta registrar cónyuge. ';
                l_error:=1;
              end if;
            end if;
          end if;
          
          
          select count(*) into l_contar from MOISES.PERSONA_DIRECCION where id_persona=P_ID_PERSONA and es_activo=1;
          
       
          if l_contar=0 then 
            l_msg:=l_msg||'Falta registrar dirección. ';
            l_error:=1;
          else
            select count(*) into l_contar from MOISES.PERSONA_DIRECCION where id_persona=P_ID_PERSONA and es_activo=1 and ID_TIPODIRECCION=4;
            if l_contar=0 then 
              l_msg:=l_msg||'Falta registrar dirección actual. ';
              l_error:=1;
            end if;
            select count(*) into l_contar from MOISES.PERSONA_DIRECCION where id_persona=P_ID_PERSONA and es_activo=1 and ID_TIPODIRECCION=5;
            if l_contar=0 then 
              l_msg:=l_msg||'Falta registrar dirección legal. ';
              l_error:=1;
            end if;
          end if;
          if l_id_situacion_educativo is null then
           
            l_msg:=l_msg||'Falta registrar grado académico. ';
            l_error:=1;
          else
           select cod_academico, nombre into l_cod_academico,l_nom_grado from MOISES.SITUACION_EDUCATIVA where id_situacion_educativo = l_id_situacion_educativo;-- and  tipo=2;
           if l_cod_academico is null then
            l_msg:=l_msg||'No tiene grado. Situación educativo actual: '||l_nom_grado||'. ';
            l_error:=1;
           end if;
        
          end if;
          
          if l_id_categoria_docente is null then
            --l_msg:=l_msg||'Falta asignar categoría docente. ';
            --l_error:=1;
            select coalesce(max(id_categoria),0) + 1 into l_id from moises.persona_acad_categoria;
            insert into moises.persona_acad_categoria (
              ID_CATEGORIA,
              ID_PERSONA,
              ID_CATEGORIA_DOCENTE,
              ESTADO,
              ID_USUARIO_REG,
              FECHA_REGISTRO
            )values(
              l_id,
              P_ID_PERSONA,
              11, --sin categoria
              '1',
              4,--lamb financial
              sysdate
            );
          end if;
          
          if l_error=1 then
            l_msgerror:='MENSAJE5: '||l_msg;
          end if;
        
       end case; 
    end if;
     <<salida_valdocente>>
     P_ERROR:=l_error;
     P_MSGERROR:= l_msgerror;
      
    END SP_VALIDAR_DOCENTE;
    
    PROCEDURE SP_DATOS_DOCENTE(
        P_ID_ENTIDAD NUMBER,
        P_ID_PERSONA NUMBER,
        CURSOR OUT SYS_REFCURSOR
        ) IS
        l_contar number;
        l_id_situacion_trabajador varchar2(5):='0';
        l_id_tipo_control_personal number;
        l_id_condicion_laboral varchar2(5);
        l_id_sede number;
        l_id_situacion_educativo  varchar2(5);
        l_id_tiporeligion number;
        l_feligresia varchar2(5);
        l_id_categoria_docente number;
        l_id_solic_req_candidato number;
        l_id_tipo_tiempo_trabajo number;
        l_error number:=0;
        l_msgerror varchar2(3000):='OK';
        l_msg varchar2(3000):='-';
        l_cod_academico varchar2(10);
        l_nom_grado varchar2(200);
        
    BEGIN
      SELECT COUNT(*) INTO l_contar FROM MOISES.TRABAJADOR WHERE ID_PERSONA=P_ID_PERSONA AND  ID_ENTIDAD=P_ID_ENTIDAD;
    
    if l_contar>0 then
      SELECT coalesce(id_situacion_trabajador,'0') INTO l_id_situacion_trabajador FROM MOISES.TRABAJADOR WHERE ID_PERSONA=P_ID_PERSONA AND  ID_ENTIDAD=P_ID_ENTIDAD;
    end if;
    
    if l_id_situacion_trabajador not in('1','3') then
    
      select coalesce(max(id_solic_req_candidato),0) into l_id_solic_req_candidato from enoc.plla_solic_req_candidato where id_persona=P_ID_PERSONA and ID_ESTADO_REQ_CAND='06'; 
    
      if l_id_solic_req_candidato>0 then
    
        select 
        a.id_condicion_laboral,
        a.id_tipo_tiempo_trabajo,
        sa.id_sede,
        a.ID_TIPO_TIEMPO_TRABAJO
        into
        l_id_condicion_laboral,
        l_id_tipo_control_personal,
        l_id_sede,
        l_id_tipo_tiempo_trabajo
        from enoc.plla_solic_reque a, enoc.plla_solic_req_candidato b, eliseo.vw_sede_area sa
        where a.id_solic_reque=  b.id_solic_reque
        and a.id_sedearea=sa.id_sedearea
        and b.id_persona=P_ID_PERSONA
        and b.id_solic_req_candidato=l_id_solic_req_candidato;
                

      end if;
    else
          select
          a.ID_CONDICION_LABORAL,
          a.ID_TIPO_CONTROL_PERSONAL,
          sa.id_sede,
          a.ID_TIPO_TIEMPO_TRABAJO
          into 
          l_id_condicion_laboral,
          l_id_tipo_control_personal,
          l_id_sede,
          l_id_tipo_tiempo_trabajo
          from moises.trabajador a, eliseo.vw_sede_area sa
          where a.id_sedearea=sa.id_sedearea
          and a.id_entidad=P_ID_ENTIDAD
          and a.id_persona=P_ID_PERSONA;
    end if;
          
    select
    a.ID_SITUACION_EDUCATIVO,
    a.ID_TIPORELIGION,
    case when a.id_tiporeligion=1 then 'S' else 'N' end as feligresia,
    coalesce((select x.id_categoria_docente from moises.persona_acad_categoria x
      where x.id_categoria in(
        select max(z.id_categoria) from moises.persona_acad_categoria z
        where z.id_persona=a.id_persona
        and z.ESTADO='1'
      ) and x.ESTADO='1'
    ),11) as id_categoria_docente
    into
    l_id_situacion_educativo,
    l_id_tiporeligion,
    l_feligresia,
    l_id_categoria_docente
    from moises.persona_natural a
    where a.id_persona=P_ID_PERSONA;
    
    if l_id_condicion_laboral is null then
        l_error:=1;
        l_msgerror:='Falta registrar condición laboral. ';
    end if;
    
    if l_id_situacion_educativo is null then
        l_error:=1;
        l_msgerror:=l_msg||'Falta registrar grado académico. ';
    else
       select cod_academico, nombre into l_cod_academico,l_nom_grado from MOISES.SITUACION_EDUCATIVA where id_situacion_educativo = l_id_situacion_educativo;-- and  tipo=2;
       if l_cod_academico is null then
        l_msg:=l_msg||'No tiene grado. Situación educativo actual: '||l_nom_grado||'. ';
        l_error:=1;
       end if;
    end if;
    
    if l_id_categoria_docente is null then
        l_error:=1;
        l_msgerror:=l_msg||'Falta registrar categoría docente. ';
    end if;
    
    if l_id_tipo_tiempo_trabajo is null then
        l_error:=1;
        l_msgerror:=l_msg||'Falta registrar jornada laboral. ';
    end if;
    
    if l_error=1 then
          l_msgerror:='MENSAJE5: '||l_msg;
    end if;
    
    OPEN cursor FOR
    select 
    P_ID_PERSONA as id_persona,
    l_id_condicion_laboral as id_condicion_laboral,
    l_id_tipo_control_personal as id_tipo_control_personal,
    l_id_sede as id_sede,
    l_cod_academico as id_situacion_educativo,
    l_id_tiporeligion as id_tiporeligion,
    l_feligresia as feligresia,
    l_id_categoria_docente as id_categoria_docente,
    l_id_tipo_tiempo_trabajo as id_tipo_tiempo_trabajo,
    l_error as nerror,
    l_msgerror as mensaje
    from dual;

    END SP_DATOS_DOCENTE;
    
    
    PROCEDURE SP_COSTOXHORA_PREVIO_REQ_CAND(P_ID_SOLIC_REQ_CANDIDATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
        l_id_carga_curso number;
        l_horario varchar2(400);
        l_horario_tmp varchar2(400);
        l_id_tipo_formato_modulo number;
        l_dias number:=7;
        l_i number:=1;
        l_j number:=1;
        l_total number:=0;
        l_fecha date;
        l_hora number:=0;
        l_fecha_ini date;
        l_num_dia number;
        l_n_resta number;
        l_id_persona number;
        l_item number;
        l_costo number(10,2);
        l_id_escala_sala_docente_det number;
        l_id_tipo_hora_pago number;
        l_fecha_inic date;
        l_fecha_finc  date;
        l_id_solic_reque number;
        l_fecha_inicio_proc date;
        l_fecha_fin_proc date;
        l_fecha_ini_proc date;
        l_nohaymod varchar2(200);
        
        CURSOR curCab IS
        SELECT 
          ID_CARGA_CURSO,
          ID_PROGRAMA_ESTUDIO,
          MIN(FECHA_INI_PROC) AS FECHA_INICIO,
          MAX(FECHA_FIN) AS FECHA_FIN
        FROM ENOC.TT_CARGA_DOCENTE 
        WHERE ID_PERSONA=l_id_persona 
        AND ID_SEMESTRE=P_ID_SEMESTRE
        GROUP BY ID_CARGA_CURSO,ID_PROGRAMA_ESTUDIO
        ORDER BY ID_CARGA_CURSO ;
        
        
        CURSOR curDet IS
        SELECT 
          ID_MODULO_DETALLE,
          ID_MODULO,
          ID_TIPO_MODALIDAD_DOCENTE,
          ID_TIPO_HORARIO,
          FECHA_INICIO,
          FECHA_FIN,
          HORARIO,
          ID_SEDEAREA,
          NOMBRE_AREA,
          CURSO,
          CICLO,
          CREDITOS,
          HP,
          HT,
          HNP,
          GRUPO
        FROM ENOC.TT_CARGA_DOCENTE 
        WHERE ID_PERSONA=l_id_persona 
        AND ID_SEMESTRE=P_ID_SEMESTRE
        AND ID_CARGA_CURSO=l_id_carga_curso
        ORDER BY FECHA_INICIO;
        
        
        f_fecha_fin_proc date;
        l_contar_co number;


        
      BEGIN
      
       select id_persona, ID_SOLIC_REQUE into l_id_persona,l_id_solic_reque from enoc.PLLA_SOLIC_REQ_CANDIDATO where ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO;
        
        select count(*) into l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene requerimiento';
            goto salida_previo;
        END IF;
        
        select fecha_ini,fecha_fin into l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        
        INSERT INTO ENOC.TT_CARGA_DOCENTE
        SELECT
        ID_MODULO_DETALLE,
        ID_CARGA_CURSO,
        ID_PROGRAMA_ESTUDIO,
        ID_MODULO,
        ID_TIPO_MODALIDAD_DOCENTE,
        ID_TIPO_HORARIO,
        ID_PERSONA,
        ID_SEMESTRE,
        FINICIO,--FECHA_INICIO,
        FECHA_FIN,
        HORARIO,
        NOMBRE_AREA,
        CURSO,
        CICLO,
        CREDITO,
        HP,
        HT,
        HNP,
        ID_SEDEAREA,
        GRUPO,
        FECHA_INICIO
        FROM  ENOC.VW_CARGA_DOCENTE 
        WHERE id_persona=l_id_persona
        and id_semestre=P_ID_SEMESTRE
        order by fecha_inicio;
        
        delete from enoc.PLLA_COSTOXHORA_CARGA_REQ where ID_SEMESTRE=P_ID_SEMESTRE and ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO;
        
       -- delete from enoc.PLLA_CONTRATO_DET where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
       
       select count(*) into l_contar from ENOC.TT_CARGA_DOCENTE where ID_TIPO_MODALIDAD_DOCENTE is null;
       IF l_contar>0 THEN
            select 
            substr(LISTAGG(substr(NOMBRE_AREA,0,20)||': '||substr(CURSO,0,50)||' - Ciclo: '||to_char(CICLO)||' Gpo: '||GRUPO,', ') WITHIN GROUP(ORDER BY ID_MODULO_DETALLE),0,180)
            into l_nohaymod
            from ENOC.TT_CARGA_DOCENTE where ID_TIPO_MODALIDAD_DOCENTE is null;
            
            l_error:=1;
            l_msgerror:='No tiene Modalidad. '||l_nohaymod;
            goto salida_previo;
        END IF;
        
        
        select count(*) into l_contar from ENOC.TT_CARGA_DOCENTE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene carga horario';
            goto salida_previo;
        END IF;
        
        FOR curC in curCab LOOP
          BEGIN
            l_id_carga_curso:=curC.ID_CARGA_CURSO;
            
            --validacion fecha fin
            if curC.FECHA_FIN<l_fecha_finc then
              f_fecha_fin_proc := curC.FECHA_FIN;
            else
              f_fecha_fin_proc := l_fecha_finc;
            end if;
            --fin validar
            
            --validacion INI fin
            if curC.FECHA_INICIO>l_fecha_inic then
              l_fecha_ini_proc := curC.FECHA_INICIO;
            else
              l_fecha_ini_proc := l_fecha_inic;
            end if;
            --fin validar
            
            FOR curD in curDet LOOP
              BEGIN
                DELETE FROM ENOC.TT_CARGA_SEMANA;
                select id_tipo_formato_modulo into l_id_tipo_formato_modulo from david.acad_modulo where id_modulo=curD.id_modulo;
                if l_id_tipo_formato_modulo<>2 then
                  l_costo:=0;

                  select count(1) into l_contar_co from PLLA_TIPO_HORA_PAGO_HORARIO where ID_TIPO_MODALIDAD_DOCENTE= curD.ID_TIPO_MODALIDAD_DOCENTE;
                  if l_contar_co=1 then
                    select ID_TIPO_HORA_PAGO into l_id_tipo_hora_pago from PLLA_TIPO_HORA_PAGO_HORARIO where ID_TIPO_MODALIDAD_DOCENTE= curD.ID_TIPO_MODALIDAD_DOCENTE;
                    
                    SELECT count(1) INTO l_contar_co FROM  ENOC.VW_DOCENTE_COSTOXHORA 
                    WHERE ID_PERSONA=l_id_persona 
                    AND ID_PROGRAMA_ESTUDIO=curC.ID_PROGRAMA_ESTUDIO 
                    AND ID_TIPO_HORA_PAGO=l_id_tipo_hora_pago 
                    AND VIGENCIA=1;
                    
                    
                    if l_contar_co=1 then
                      SELECT COSTO INTO l_costo 
                      FROM  ENOC.VW_DOCENTE_COSTOXHORA 
                      WHERE ID_PERSONA=l_id_persona 
                      AND ID_PROGRAMA_ESTUDIO=curC.ID_PROGRAMA_ESTUDIO 
                      AND ID_TIPO_HORA_PAGO=l_id_tipo_hora_pago 
                      AND VIGENCIA=1;
                    end if;
                  end if;
                          
                  l_horario:=curD.horario;
                  l_total:=length(l_horario);
                  l_horario_tmp := l_horario;
                  l_j:=1;
                  while l_j<=l_total loop
                    l_horario_tmp := substr(l_horario_tmp,0,l_dias);
                    l_i:=1;
                    ----
                    l_fecha_inicio_proc:=l_fecha_inic;
                    if curD.fecha_inicio < l_fecha_inic then
                      l_fecha_inicio_proc:=curD.fecha_inicio ;
                    end if;
                    
                    l_fecha_fin_proc:=l_fecha_finc;
                    if curD.fecha_fin > l_fecha_finc then
                      l_fecha_fin_proc:=curD.fecha_fin ;
                    end if;
                    
                    ----
                    
                    l_num_dia:= to_number(to_char(curD.fecha_inicio, 'd'));
                    l_n_resta:= l_num_dia - 1;
                    l_fecha_ini:= curD.fecha_inicio - l_n_resta;
                    l_fecha:=l_fecha_ini;
                    while l_i<=l_dias LOOP
                      l_hora:= substr(l_horario_tmp,l_i,1);
                      if l_hora = '1' then
                        
                        --if l_fecha>=l_fecha_inic and l_fecha <=l_fecha_finc then
                        if l_fecha>=l_fecha_inicio_proc and l_fecha <=l_fecha_fin_proc then
                        
                          
                          
                          INSERT INTO ENOC.TT_CARGA_SEMANA(DIA,HORA,ID_TIPO_MODALIDAD_DOCENTE,ID_TIPO_HORARIO,FECHA,COSTO) VALUES(l_i,TO_NUMBER(l_hora),curD.ID_TIPO_MODALIDAD_DOCENTE,curD.ID_TIPO_HORARIO, l_fecha,l_costo);
                           --dbms_output.put_line(to_char(l_fecha,'DD/MM/YYYY')||'-'||to_char(l_id_carga_curso));
                       end if;
                      end if;
                      l_fecha:= l_fecha + 1;
                      l_i:=l_i + 1;
                    END LOOP;
                    l_j:=l_j + 7; 
                    l_horario_tmp := substr(l_horario,l_j,l_total);
                  
                  END LOOP;
                  
       
                                
                  INSERT INTO enoc.PLLA_COSTOXHORA_CARGA_REQ(
                    ID_CARGA_CURSO,
                    ID_SEMESTRE,
                    ID_PERSONA,
                    ID_TIPO_MODALIDAD_DOCENTE,
                    ID_TIPO_HORARIO,
                    FECHA,
                    HORAS,
                    ID_PROGRAMA_ESTUDIO,
                    HORARIO,
                    ID_SEDEAREA,
                    NOMBRE_AREA,
                    CURSO,
                    CICLO,
                    CREDITOS,
                    HP,
                    HT,
                    HNP,
                    ID_SOLIC_REQ_CANDIDATO,
                    GRUPO,
                    COSTO
                  )
                  SELECT 
                  l_id_carga_curso,
                  P_ID_SEMESTRE,
                  l_id_persona,
                  ID_TIPO_MODALIDAD_DOCENTE, 
                  coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),
                  FECHA, 
                  SUM(HORA) ,
                  curC.ID_PROGRAMA_ESTUDIO,
                  curD.HORARIO,
                  curD.ID_SEDEAREA,
                  curD.NOMBRE_AREA,
                  curD.CURSO,
                  curD.CICLO,
                  curD.CREDITOS,
                  curD.HP,
                  curD.HT,
                  curD.HNP,
                  P_ID_SOLIC_REQ_CANDIDATO,
                  curD.GRUPO,
                  COSTO
                  FROM ENOC.TT_CARGA_SEMANA 
                  WHERE HORA>0 
                  AND FECHA BETWEEN l_fecha_ini_proc and f_fecha_fin_proc--l_fecha_finc
                  GROUP BY FECHA,ID_TIPO_MODALIDAD_DOCENTE,coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),COSTO 
                  ORDER BY FECHA;
                  
               
                  
                  l_fecha:= curD.fecha_inicio + 7;
                  l_j:=7;
                  WHILE l_fecha<curD.fecha_fin loop
                  
                      
                      INSERT INTO enoc.PLLA_COSTOXHORA_CARGA_REQ(
                        ID_CARGA_CURSO,
                        ID_SEMESTRE,
                        ID_PERSONA,
                        ID_TIPO_MODALIDAD_DOCENTE,
                        ID_TIPO_HORARIO,
                        FECHA,
                        HORAS,
                        ID_PROGRAMA_ESTUDIO,
                        HORARIO,
                        ID_SEDEAREA,
                        NOMBRE_AREA,
                        CURSO,
                        CICLO,
                        CREDITOS,
                        HP,
                        HT,
                        HNP,
                        ID_SOLIC_REQ_CANDIDATO,
                        GRUPO,
                        COSTO
                      )
                      SELECT 
                      l_id_carga_curso,
                      P_ID_SEMESTRE,
                      l_id_persona, 
                      ID_TIPO_MODALIDAD_DOCENTE,
                      coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),
                      FECHA+l_j, 
                      SUM(HORA) ,
                      curC.ID_PROGRAMA_ESTUDIO,
                      curD.HORARIO,
                      curD.ID_SEDEAREA,
                      curD.NOMBRE_AREA,
                      curD.CURSO,
                      curD.CICLO,
                      curD.CREDITOS,
                      curD.HP,
                      curD.HT,
                      curD.HNP,
                      P_ID_SOLIC_REQ_CANDIDATO,
                      curD.GRUPO,
                      COSTO
                      FROM ENOC.TT_CARGA_SEMANA 
                      WHERE HORA>0 
                      AND FECHA+l_j BETWEEN l_fecha_ini_proc and f_fecha_fin_proc--l_fecha_finc
                      GROUP BY FECHA,ID_TIPO_MODALIDAD_DOCENTE,coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),COSTO 
                      ORDER BY FECHA;
                      
                      l_fecha:= l_fecha + 7;
                      l_j:=l_j+7;
                  
                  END LOOP;

                end if;
              END;
            END LOOP;
          END;
        END LOOP;
        
        if l_error=0 then
          select count(*) into l_contar from ENOC.PLLA_COSTOXHORA_CARGA_REQ where ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO and id_semestre=P_ID_SEMESTRE;
          IF l_contar=0 THEN
              l_error:=1;
              l_msgerror:='No tiene asignado horario';
              goto salida_previo;
          END IF;
        end if;
        <<salida_previo>> 
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_COSTOXHORA_PREVIO_REQ_CAND;
      
      PROCEDURE SP_COSTOXHORA_REQ_CAND(P_ID_SOLIC_REQ_CANDIDATO NUMBER,P_ID_SEMESTRE NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='ok';
        l_id_carga_curso number;
        l_horario varchar2(400);
        l_horario_tmp varchar2(400);
        l_id_tipo_formato_modulo number;
        l_dias number:=7;
        l_i number:=1;
        l_j number:=1;
        l_total number:=0;
        l_fecha date;
        l_hora number:=0;
        l_fecha_ini date;
        l_num_dia number;
        l_n_resta number;
        l_id_persona number;
        l_item number;
        l_costo number(10,2);
        l_id_escala_sala_docente_det number;
        l_id_tipo_hora_pago number;
        l_fecha_inic date;
        l_fecha_finc  date;
        l_id_solic_reque number;
        
                
        CURSOR curCont IS
        select 
        ID_ANHO,
        ID_MES,
        ID_SEDEAREA,
        ID_PROGRAMA_ESTUDIO,
        ID_PERSONA,
        ID_SEMESTRE,
        ID_TIPO_HORA_PAGO,--ID_TIPO_HORARIO,
        DIAS,
        HORAS
        from enoc.VW_COSTOXHORA_CARGA_SUM_EJE_RE--ENOC.VW_COSTOXHORA_CARGA_SUM
        where ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO
        and id_semestre=P_ID_SEMESTRE
        order by ID_ANHO, ID_MES;
        
        l_contrato_mensual number; 
        l_modo_pago varchar2(1);
        l_fec_desde date;
        l_fec_hasta date;
        
      BEGIN
      
        select b.id_persona, a.fecha_ini,a.fecha_fin,a.ID_SOLIC_REQUE,COALESCE(b.contrato_mensual,0),COALESCE(b.modo_pago,'N')
        into l_id_persona,l_fecha_inic,l_fecha_finc,l_id_solic_reque,l_contrato_mensual, l_modo_pago
        from enoc.PLLA_SOLIC_REQUE a,PLLA_SOLIC_REQ_CANDIDATO b 
        where a.ID_SOLIC_REQUE=b.ID_SOLIC_REQUE
        and ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO;
        

        select count(*) into l_contar from ENOC.VW_COSTOXHORA_CARGA_SUM_REQ 
        WHERE   ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO
        and id_semestre=P_ID_SEMESTRE
        and ID_TIPO_MODALIDAD_DOCENTE not in(
          SELECT ID_TIPO_MODALIDAD_DOCENTE FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO
        );
        
        IF l_contar>0 THEN
            l_error:=1;
            l_msgerror:='No esta configurado tipo hora GTH con academico';
            goto salida_costoxhora;
        END IF;
        
        
        select count(*) into l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='El contrato no tiene requerimiento';
            goto salida_costoxhora;
        END IF;
        
        select fecha_ini,fecha_fin into l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;
        
        delete from enoc.PLLA_SOLIC_REQ_CANDIDATO_COSTO where ID_SEMESTRE=P_ID_SEMESTRE and ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO;

        select count(*) into l_contar from ENOC.PLLA_COSTOXHORA_CARGA_REQ where ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO and id_semestre=P_ID_SEMESTRE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene asignado horario';
            goto salida_costoxhora;
        END IF;
        
        --generacion de detalle contrato
        FOR curCo in curCont LOOP
          BEGIN
            
            select coalesce(max(ID_ITEM),0) + 1 into l_item from enoc.PLLA_SOLIC_REQ_CANDIDATO_COSTO where ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO;
            

            SELECT count(*) INTO l_contar FROM  ENOC.VW_DOCENTE_COSTOXHORA
            WHERE ID_PERSONA=l_id_persona 
            AND ID_PROGRAMA_ESTUDIO=curCo.ID_PROGRAMA_ESTUDIO 
            AND ID_TIPO_HORA_PAGO=curCo.ID_TIPO_HORA_PAGO --l_id_tipo_hora_pago 
            AND VIGENCIA=1;
            
            
            if l_contar=0 then
              l_error:=1;
              l_msgerror:='Falta configurar costo por hora';
              Exit when l_contar=0;
            else
              if l_contar>1 then
                l_error:=1;
                l_msgerror:='Existe costo por hora mas de 2 con estado vigente';
                Exit when l_contar>1;
              end if;
            end if;
            
            SELECT COSTO,ID_ESCALA_SALA_DOCENTE_DET INTO l_costo,l_id_escala_sala_docente_det 
            FROM  ENOC.VW_DOCENTE_COSTOXHORA
            WHERE ID_PERSONA=l_id_persona 
            AND ID_PROGRAMA_ESTUDIO=curCo.ID_PROGRAMA_ESTUDIO 
            AND ID_TIPO_HORA_PAGO=curCo.ID_TIPO_HORA_PAGO--l_id_tipo_hora_pago 
            AND VIGENCIA=1;
            
            
            
              insert into enoc.PLLA_SOLIC_REQ_CANDIDATO_COSTO(
                ID_ITEM,
                ID_SOLIC_REQ_CANDIDATO,
                ID_ANHO,
                ID_MES,
                ID_SEDEAREA,
                ID_PROGRAMA_ESTUDIO,
                ID_TIPO_HORA_PAGO,
                ID_ESCALA_SALA_DOCENTE_DET,
                ID_SEMESTRE,
                DIAS,
                COSTOHORA,
                HORAS,
                IMPORTE,
                CONCEPTO,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG,
                ID_TIPO_CANTIDAD
              )values(
              l_item,
              P_ID_SOLIC_REQ_CANDIDATO,
              curCo.ID_ANHO,
              curCo.ID_MES,
              curCo.ID_SEDEAREA,
              curCo.ID_PROGRAMA_ESTUDIO,
              curCo.ID_TIPO_HORA_PAGO,--l_id_tipo_hora_pago, 
              l_id_escala_sala_docente_det,
              curCo.ID_SEMESTRE,
              curCo.DIAS,
              l_costo,
              curCo.HORAS,
              l_costo*curCo.HORAS,
              'CONTRATO',
              1,
              P_ID_USER,
              SYSDATE,
              1
              );
            
          END;
        END LOOP;
        
       
        <<salida_costoxhora>> 
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_COSTOXHORA_REQ_CAND;
    
     
    PROCEDURE SP_COPIAR_CONTRATO_PLANTILLA(P_ID_CONTRATO_PLANTILLA NUMBER,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,
		P_ID_USER NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) 
	IS 
		L_ERROR NUMBER:=0;
		L_MSGERROR VARCHAR2(5000):='';
		L_CONTAR NUMBER:=0;
		L_ID_CONTRATO_PLANTILLA NUMBER:=0;
		L_NOMBRE VARCHAR2(200):='';
		L_ID_ENTIDAD NUMBER:=0;
		L_ID_DEPTO VARCHAR2(10):='';
		L_CONTAR_REG NUMBER:=0;
	BEGIN
		-- ha tener en cuenta que sólo se copiará a los deptos padres que estan dentro de la tabla ELISEO.ORG_SEDE_AREA
		 FOR ITEM IN (
		   		SELECT DISTINCT A.ID_ENTIDAD,A.ID_DEPTO FROM ELISEO.CONTA_ENTIDAD_DEPTO A
				INNER JOIN ELISEO.VW_SEDE_AREA B ON A.ID_ENTIDAD = B.ID_ENTIDAD AND A.ID_DEPTO = B.ID_DEPTO_PADRE 
				WHERE A.ID_ENTIDAD = P_ID_ENTIDAD_TO AND A.ES_GRUPO = '1' AND LENGTH(A.ID_DEPTO) = 1
				AND 1 = (CASE WHEN P_ID_DEPTO_TO = '0' THEN 1 ELSE CASE WHEN A.ID_DEPTO = P_ID_DEPTO_TO THEN 1 ELSE 0 END END)
				AND A.ID_DEPTO <> '0')
		 LOOP
			 L_CONTAR_REG := L_CONTAR_REG + 1;
			 SELECT NOMBRE,ID_ENTIDAD,ID_DEPTO INTO L_NOMBRE,L_ID_ENTIDAD,L_ID_DEPTO FROM ENOC.PLLA_CONTRATO_PLANTILLA WHERE ID_CONTRATO_PLANTILLA = P_ID_CONTRATO_PLANTILLA AND ROWNUM = 1;
					
			 IF (ITEM.ID_ENTIDAD = L_ID_ENTIDAD AND ITEM.ID_DEPTO <> L_ID_DEPTO ) OR ITEM.ID_ENTIDAD <> L_ID_ENTIDAD THEN 
				
				 SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_CONTRATO_PLANTILLA 
				 WHERE UPPER(TRIM(NOMBRE)) = UPPER(TRIM(L_NOMBRE)) AND ID_ENTIDAD = ITEM.ID_ENTIDAD AND ID_DEPTO = ITEM.ID_DEPTO; 
				 
				IF L_CONTAR > 0 THEN 
					L_ERROR := 1;
					L_MSGERROR := 'Ya existe registrado la plantilla "'||L_NOMBRE||'" con el mismo nombre en la entidad  "'||ITEM.ID_ENTIDAD||'".';
					GOTO salida_val;
				END IF;
				
				select coalesce(max(ID_CONTRATO_PLANTILLA),0)+1 into L_ID_CONTRATO_PLANTILLA from enoc.PLLA_CONTRATO_PLANTILLA;
				
				 INSERT INTO ENOC.PLLA_CONTRATO_PLANTILLA(ID_CONTRATO_PLANTILLA,ID_ENTIDAD,ID_DEPTO,ID_TIPO_CONTRATO,NOMBRE,DESCRIPCION,PLANTILLA,ID_USER_REG,FECHA_REG,VIGENCIA)
				 SELECT L_ID_CONTRATO_PLANTILLA AS ID_CONTRATO_PLANTILLA,ITEM.ID_ENTIDAD AS ID_ENTIDAD,ITEM.ID_DEPTO AS ID_DEPTO,ID_TIPO_CONTRATO,NOMBRE,DESCRIPCION,PLANTILLA,
				P_ID_USER AS ID_USER_REG,CURRENT_DATE AS FECHA_REG, VIGENCIA 
				FROM ENOC.PLLA_CONTRATO_PLANTILLA WHERE ID_CONTRATO_PLANTILLA = P_ID_CONTRATO_PLANTILLA;
			END IF;
		 END LOOP;
		
		IF L_CONTAR_REG = 0 THEN 
			L_ERROR := 2;
			L_MSGERROR := 'No se ha copiado. Sólo se permite copiar a los deptos padres, de los centros de costo registrados.';
		END IF;
		   
		<<salida_val>> 
	    P_ERROR:= L_ERROR;
	    P_MSGERROR:= L_MSGERROR;
	END SP_COPIAR_CONTRATO_PLANTILLA;

  PROCEDURE SP_PAISRESIDENCIA(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_persona number;
        l_id_tipopais number;
        
      BEGIN
      
        SELECT id_persona into l_id_persona from plla_contrato where id_contrato=P_ID_CONTRATO;
        
        SELECT count(*) into l_contar FROM MOISES.PERSONA_DIRECCION X WHERE X.ID_PERSONA=l_id_persona AND X.ID_TIPODIRECCION=4 AND X.ES_ACTIVO=1 and X.id_TIPOPAIS is not null AND ROWNUM=1;
        if l_contar>0 then
            SELECT X.id_TIPOPAIS into  l_id_tipopais  FROM MOISES.PERSONA_DIRECCION X WHERE X.ID_PERSONA=l_id_persona AND X.ID_TIPODIRECCION=4 AND X.ES_ACTIVO=1 and X.id_TIPOPAIS is not null AND ROWNUM=1;
          
            select gentilicio into l_parametro from MOISES.tipo_pais where id_TIPOPAIS=l_id_tipopais;
         end if;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
    END SP_PAISRESIDENCIA;
    
  PROCEDURE SP_PASAPORTE(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_persona number;

      BEGIN
      
        SELECT id_persona into l_id_persona from plla_contrato where id_contrato=P_ID_CONTRATO;
        
        SELECT count(*) into l_contar FROM MOISES.PERSONA_DOCUMENTO X WHERE X.ID_PERSONA=l_id_persona AND X.ID_TIPODOCUMENTO=7 AND X.ES_ACTIVO=1 AND ROWNUM=1;
        if l_contar>0 then
          SELECT X.NUM_DOCUMENTO into  l_parametro  FROM MOISES.PERSONA_DOCUMENTO X WHERE X.ID_PERSONA=l_id_persona AND X.ID_TIPODOCUMENTO=7 AND X.ES_ACTIVO=1 AND ROWNUM=1;
                  
        end if;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
    END SP_PASAPORTE;

    PROCEDURE SP_HONORARIONODOM(P_ID_CONTRATO NUMBER, P_PARAMETRO VARCHAR2,P_PARAMETRO_RET OUT CLOB, P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_parametro CLOB:='';
        l_id_persona number;
        l_id_entidad number;
        l_id_anho number;
        l_total number(10,2):=0;
        l_deduccion number(10,2):=0;
        l_recibe number(10,2):=0;
        l_porc_deduccion number(10,4):=0;
        l_porc_renta number(10,4):=0;
        l_base number:=0;
      BEGIN
      
        SELECT id_persona, id_entidad into l_id_persona,l_id_entidad from plla_contrato where id_contrato=P_ID_CONTRATO;
        select to_number(to_char(sysdate,'YYYY')) into l_id_anho from dual;
        
        select coalesce(sum(importe),0) into l_total from  enoc.plla_contrato_det where id_contrato=P_ID_CONTRATO;
        
        if P_PARAMETRO in('DED_IMP_RENTA','TOTAL_REM_NODM') then
          select count(*) into l_contar from ENOC.VW_PLLA_PARAMETROS_VALOR where codigo='DED_LEY_NDOM'
          and id_entidad=l_id_entidad
          and id_anho=l_id_anho;
          
          if l_contar>0 then
            select importe into l_porc_deduccion from ENOC.VW_PLLA_PARAMETROS_VALOR where codigo='DED_LEY_NDOM'
            and id_entidad=l_id_entidad
            and id_anho=l_id_anho;
          end if;
          
          select count(*) into l_contar from ENOC.VW_PLLA_PARAMETROS_VALOR where codigo='IMP_REN_NDOM'
          and id_entidad=l_id_entidad
          and id_anho=l_id_anho;
          
          if l_contar>0 then
            select importe into l_porc_renta from ENOC.VW_PLLA_PARAMETROS_VALOR where codigo='IMP_REN_NDOM'
            and id_entidad=l_id_entidad
            and id_anho=l_id_anho;
          end if;
        end if;
        

        case P_PARAMETRO
           when 'TOTAL_HONO_NODOM' then 
            l_parametro:=to_char(l_total,'99999.99');
           when 'DED_IMP_RENTA' then 
            l_base:= l_total-round((l_total*l_porc_deduccion),2);
            l_deduccion:=round((l_base*l_porc_renta),2);
            l_parametro:=to_char(l_deduccion,'99999.99');
           when 'TOTAL_REM_NODM' then 
            l_base:= l_total-round((l_total*l_porc_deduccion),2);
            l_deduccion:=round((l_base*l_porc_renta),2);
            l_recibe:= l_total - l_deduccion;
            l_parametro:=to_char(l_recibe,'99999.99');
           else 
            l_parametro:='';
        end case; 
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_PARAMETRO_RET:=l_parametro;
      END SP_HONORARIONODOM;
    
    
    
  PROCEDURE SP_CONSTANCIA_CERTIFICADO(P_ID_ENTIDAD NUMBER, P_ID_PERSONA NUMBER, P_TIPO NUMBER,CURSOR OUT SYS_REFCURSOR ) AS
      l_max_contrato number:=0;
      l_id_contrato number:=0;
      l_id_anho number:=0;
      l_id_mes number:=0;
      l_depto_cargo varchar2(2000):='-';
      cursor curContrato is 
      select ESTADO,id_contrato, fec_inicio, fec_termino from eliseo.aps_empleado 
      where id_entidad=P_ID_ENTIDAD 
      and id_persona=P_ID_PERSONA
      and case when l_max_contrato=0 then 0 else id_contrato end =case when l_max_contrato=0 then 0 else l_max_contrato end
      order by id_contrato;
      
      cursor curPlanilla is
      select a.id_anho, a.id_mes,a.id_depto,b.nombre as area,a.nom_cargo as cargo,a.id_depto||a.nom_cargo as depto_cargo
      from eliseo.aps_planilla a, eliseo.conta_entidad_depto b 
      where a.id_entidad=b.id_entidad
      and a.id_depto=b.id_depto
      and a.id_entidad=P_ID_ENTIDAD 
      and a.id_persona=P_ID_PERSONA 
      and a.id_contrato=l_id_contrato
      group by  a.id_anho, a.id_mes,a.id_depto,a.nom_cargo,b.nombre
      order by a.id_anho, a.id_mes;
      l_j number:=0;
      l_inicio date;
      l_fin date;
      l_fin_term date;
      l_id number:=1;
      l_id_ant number:=0;
      l_contar number:=0;
  BEGIN
    if P_TIPO=3 then
      select max(id_contrato) into l_max_contrato from eliseo.aps_empleado 
      where id_entidad=P_ID_ENTIDAD 
      and id_persona=P_ID_PERSONA;
    end if;
    
    delete from ENOC.TT_CONSTANCIA_CERTIFICADO;
    
    FOR cur in curContrato LOOP
    BEGIN
      l_id_contrato:=cur.id_contrato;
      l_depto_cargo:='-';
      l_j:=1;
      l_id_ant:=0;      
      FOR curp in curPlanilla LOOP
      BEGIN
        
        if l_depto_cargo<>curp.depto_cargo then
          if l_j=1 then
            l_inicio:=cur.fec_inicio;
          else
            l_inicio:=to_date(curp.id_anho||'-'||curp.id_mes||'-01','YYYY-MM-DD');
            l_fin:=TRUNC(LAST_DAY(to_date(l_id_anho||'-'||l_id_mes||'-01','YYYY-MM-DD')));
            update ENOC.TT_CONSTANCIA_CERTIFICADO set FIN=l_fin where id=l_id_ant;
           end if;
          insert into ENOC.TT_CONSTANCIA_CERTIFICADO(
            ID,
            ID_PERSONA,
            ID_CONTRATO,
            ID_DEPTO,
            ID_ANHO,
            ID_MES,
            INICIO,
            FIN,
            AREA,
            PUESTO,
            ESTADO
          )values(
            l_id,
            P_ID_PERSONA,
            cur.id_contrato,
            curp.id_depto,
            curp.id_anho,
            curp.id_mes,
            l_inicio,
            l_fin,
            curp.area,
            curp.cargo,
            cur.estado
          );
          l_id_ant:=l_id;
          l_id:=l_id+1;
        end if;
        l_id_anho:=curp.id_anho;
        l_id_mes:=curp.id_mes;
        l_depto_cargo:=curp.depto_cargo;
        l_j:=l_j+1;
      END;     
      END LOOP;
      if l_id_ant>0 then
         l_fin:=null;
        if cur.fec_termino is not null then
          l_fin:=cur.fec_termino;
        end if;
        update ENOC.TT_CONSTANCIA_CERTIFICADO set FIN=l_fin where id=l_id_ant;
      end if;
    END;     
    END LOOP;  
    
    select count(1) into l_contar from ENOC.TT_CONSTANCIA_CERTIFICADO where id=l_id_ant and FIN is null;
    if l_contar=1 then
      select count(1) into l_contar from moises.trabajador where id_persona=P_ID_PERSONA and id_entidad=P_ID_ENTIDAD;
      if l_contar=1 then
        select FECHA_FIN_EFECTIVO into l_fin from moises.trabajador where id_persona=P_ID_PERSONA and id_entidad=P_ID_ENTIDAD;
        update ENOC.TT_CONSTANCIA_CERTIFICADO set FIN=l_fin where id=l_id_ant;
      end if;
    end if;
    
    OPEN cursor FOR 
    select 
    ID,
    ID_PERSONA,
    ID_CONTRATO,
    ID_DEPTO,
    ID_ANHO,
    ID_MES,
    INICIO,
    FIN,
    AREA,
    PUESTO,
    ESTADO,
    to_char(INICIO,'DD/MM/YYYY') as desde,
    case when FIN is null then 'A la fecha' else to_char(fin,'DD/MM/YYYY') end as hasta
    from ENOC.TT_CONSTANCIA_CERTIFICADO
    order by id;
      
  END SP_CONSTANCIA_CERTIFICADO;

    
END PKG_CONTRACT;