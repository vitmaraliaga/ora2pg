-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE                                                                                                               PKG_COMPENSACION AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  
  PROCEDURE SP_REPORTE_SUELDO_MENSUAL(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2, P_ID_AREA NUMBER,P_ANHO_ID NUMBER, P_ID_MES NUMBER, P_ID_TRABAJADOR NUMBER,P_ID_CONDICION_LABORAL VARCHAR2, P_ID_TIPO_TIEMPO_TRABAJO NUMBER,CURSOR OUT SYS_REFCURSOR );
   PROCEDURE SP_REPORTE_ADICIONAL_MENSUAL(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2, P_ID_AREA NUMBER,P_ANHO_ID NUMBER, P_ID_MES NUMBER, P_ID_TRABAJADOR NUMBER, P_ID_CONDICION_LABORAL VARCHAR2,P_ID_TIPO_TIEMPO_TRABAJO NUMBER,CURSOR OUT SYS_REFCURSOR );
  PROCEDURE SP_INS_UPD_ADICONAL( 
        P_ID_ADICIONAL NUMBER,
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO varchar2,
        P_ID_CONCEPTO_ADICIONAL NUMBER,
        P_ID_TRABAJADOR NUMBER,
        P_DESCRIPCION varchar2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_ID_SEDEAREA_SOL NUMBER,
        P_ID_USER_REG NUMBER,
        
        D_ID_MES CLOB,
        D_ID_ANHO CLOB,
        D_ID_SEDEAREA CLOB,
        D_ID_TIPO_HORA_PAGO CLOB,
        D_DIAS CLOB,
        D_CANTIDAD CLOB,
        D_ID_TIPO_CANTIDAD CLOB,
        D_COSTO CLOB,
        
        T_ID_TRABAJADOR	CLOB,
        T_IMPORTE	CLOB,
        P_ID OUT NUMBER,
        P_ERROR OUT number,
        P_MSGERROR out varchar2
      );
  PROCEDURE SP_APROBAR_ADICIONAL(P_ID_ADICIONAL NUMBER,P_ID_ESTADO_ADICIONAL VARCHAR2,P_ID_CONCEPTO_PLANILLA NUMBER,P_OBSERVACION VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
  
  PROCEDURE SP_REGISTRAR_CAMBIO_SUELDO(
      P_ID_CAMBIOS NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO varchar2,
      P_ID_CONCEPTO_CAMBIO NUMBER,
      P_ID_TRABAJADOR NUMBER,
      P_FEC_DESDE DATE,
      P_ID_ESCALA_SALARIAL number,
      P_INCR_SUELDO number,
      P_INCR_FMR number,
      P_SUELDO NUMBER,
      P_PJE_FMR NUMBER,
      P_COMENTARIO varchar2,
      P_ID_USER NUMBER,
      D_ID_TRABAJADOR CLOB,
      D_ID_ESCALA_SALARIAL CLOB,
      D_INCR_SUELDO CLOB,
      D_INCR_FMR CLOB,
      D_SUELDO CLOB,
      D_PJE_FMR CLOB,
      P_ID_CAMBIO OUT NUMBER,
      P_ERROR OUT number,
      P_MSGERROR out varchar2
      );
  PROCEDURE SP_FINALIZAR_CAMBIO_SUELDO(P_ID_CAMBIOS NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);  
  
  PROCEDURE SP_REPORTE_GENERAL(
        P_ID_ENTIDAD NUMBER,
        P_ID_PERSONA NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_AREA VARCHAR2,
        P_SEXO VARCHAR2,
        P_ID_SITUACION_TRABAJADOR VARCHAR2,
        P_ID_TIPOESTADOCIVIL VARCHAR2,
        P_ID_SITUACION_EDUCATIVO VARCHAR2,
        P_ID_TIPORELIGION VARCHAR2,
        P_ID_TIPOPAIS VARCHAR2,
        P_ID_TIPODOCUMENTO VARCHAR2,
        P_ID_REGIMEN_PENSIONARIA VARCHAR2,
        P_ID_TIPO_CONTROL_PERSONAL VARCHAR2,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIPO_CONTRATO VARCHAR2,
        P_ID_TIPO_TIEMPO_TRABAJO VARCHAR2,
        P_ID_TIPO_JEFE VARCHAR2,
        P_ID_PUESTO NUMBER,
        P_TIPO_REP VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREAS_USER VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        );
    PROCEDURE SP_COPIAR_PERIODO_PLANILLA(P_ID_PERIODO_PLANILLA_ANT NUMBER, P_ID_PERIODO_PLANILLA NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
    PROCEDURE SP_PERIODO_PLANILLA_CONTROL(P_ID_ENTIDAD NUMBER, P_COD_MODULO VARCHAR2,P_ID_USER NUMBER,P_FECHA DATE,P_TIPO_PER VARCHAR2,P_TIPO VARCHAR2, CURSOR OUT SYS_REFCURSOR );
    PROCEDURE SP_GENERAR_TRABAJADOR_SCTR(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_TRABAJADOR_SCTR NUMBER, P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2);
    PROCEDURE SP_REPORTE_VIDA_LEY(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_AREA NUMBER,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIPO_TIEMPO_TRABAJO NUMBER,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_DATO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREAS_USER VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        );
  PROCEDURE SP_REPORTE_JAR(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_AREA NUMBER,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIPO_TIEMPO_TRABAJO NUMBER,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_DATO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREAS_USER VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        );
END PKG_COMPENSACION;


CREATE OR REPLACE PACKAGE BODY                                                                                                                                                                                                                   PKG_COMPENSACION AS

  PROCEDURE SP_REPORTE_SUELDO_MENSUAL(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2, P_ID_AREA NUMBER,P_ANHO_ID NUMBER, P_ID_MES NUMBER, P_ID_TRABAJADOR NUMBER, P_ID_CONDICION_LABORAL VARCHAR2,P_ID_TIPO_TIEMPO_TRABAJO NUMBER,CURSOR OUT SYS_REFCURSOR ) AS
  l_query varchar2(4000):='';
  l_campos varchar2(2000):='';
  l_values varchar2(2000):='';
  l_groups varchar2(2000):='';
  l_id_concepto_planilla number;
  l_mes varchar2(50);
  BEGIN
  
    delete from enoc.tt_rep_sueldo_mensual;
    
    l_campos:='ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,ID_ANHO,MES,ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE,IMPORTE,ADICIONAL,ID_CONDICION_LABORAL,horas';
    l_groups:='group by ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,ID_ANHO,MES,ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE,ID_CONDICION_LABORAL';
    --contrato
    l_values:='ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,ID_ANHO,MES,ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE,coalesce(sum(IMPORTE),0) as importe,to_number(0.00) as ADICIONAL,ID_CONDICION_LABORAL, coalesce(sum(HORAS),0) as HORAS';
    l_query:='insert into enoc.tt_rep_sueldo_mensual('||l_campos||') ';
    l_query:=l_query||'select '||l_values||' from enoc.vw_remuneracion_det ';
    l_query:=l_query||' where id_entidad=:s_id_entidad';
    l_query:=l_query||' and id_anho=:s_id_anho';
    l_query:=l_query||' and vigencia_det=1';
    l_query:=l_query||' and id_mes=:s_id_mes';
    if P_ID_DEPTO is not null then
      l_query:=l_query||' and id_depto_padre='''||P_ID_DEPTO||''' ';
    end if;
    if P_ID_AREA<>0 then
      l_query:=l_query||' and id_area='||to_char(P_ID_AREA);
    end if;
    if P_ID_TRABAJADOR<>0 then
      l_query:=l_query||' and id_trabajador='||to_char(P_ID_TRABAJADOR);
    end if;
    if P_ID_CONDICION_LABORAL is not null then
      l_query:=l_query||' and ID_CONDICION_LABORAL='''||P_ID_CONDICION_LABORAL||''' ';
    end if;
    if P_ID_TIPO_TIEMPO_TRABAJO <> 0 then
      l_query:=l_query||' and ID_TIPO_TIEMPO_TRABAJO='||to_char(P_ID_TIPO_TIEMPO_TRABAJO);
    end if;
    
    l_query:=l_query||' '||l_groups;
    
    --DBMS_OUTPUT.PUT_LINE(l_query);
    
    EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,P_ANHO_ID,P_ID_MES;
    
    
    select id_concepto_planilla into l_id_concepto_planilla from ENOC.plla_concepto_planilla where codigo='REM_BAS';
    
    --adicional por trabajador
    l_values:='ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,ID_ANHO,MES,ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE, to_number(0.00) as importe, coalesce(sum(IMPORTE),0) as ADICIONAL,ID_CONDICION_LABORAL,to_number(0.00) as HORAS';
    l_query:='insert into enoc.tt_rep_sueldo_mensual('||l_campos||') ';
    l_query:=l_query||'select '||l_values||' from enoc.vw_adicional_det';
    l_query:=l_query||' where id_entidad=:s_id_entidad';
    l_query:=l_query||' and id_anho=:s_id_anho';
    l_query:=l_query||' and id_mes=:s_id_mes';
    l_query:=l_query||' and vigencia=1';
    l_query:=l_query||' and id_estado_adicional not in(''00'',''05'') ';
    if P_ID_DEPTO is not null then
      l_query:=l_query||' and id_depto_padre='''||P_ID_DEPTO||''' ';
    end if;
    if P_ID_AREA<>0 then
      l_query:=l_query||' and id_area='||to_char(P_ID_AREA);
    end if;
    if P_ID_TRABAJADOR<>0 then
      l_query:=l_query||' and id_trabajador='||to_char(P_ID_TRABAJADOR);
    end if;
    if P_ID_CONDICION_LABORAL is not null then
      l_query:=l_query||' and ID_CONDICION_LABORAL='''||P_ID_CONDICION_LABORAL||''' ';
    end if;
    if P_ID_TIPO_TIEMPO_TRABAJO <> 0 then
      l_query:=l_query||' and ID_TIPO_TIEMPO_TRABAJO='||to_char(P_ID_TIPO_TIEMPO_TRABAJO);
    end if;
    --l_query:=l_query||' and id_concepto_planilla='||to_char(l_id_concepto_planilla);
    l_query:=l_query||' '||l_groups;
    
     EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,P_ANHO_ID,P_ID_MES;
    --adicional grupal
   
    l_values:='ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,ID_ANHO,MES,ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE, to_number(0.00) as importe, coalesce(sum(IMPORTE),0) as ADICIONAL,ID_CONDICION_LABORAL,to_number(0.00) as HORAS';
    l_query:='insert into enoc.tt_rep_sueldo_mensual('||l_campos||') ';
    l_query:=l_query||'select '||l_values||' from enoc.vw_adicional_grupo';
    l_query:=l_query||' where id_entidad=:s_id_entidad';
    l_query:=l_query||' and id_anho=:s_id_anho';
    l_query:=l_query||' and id_mes=:s_id_mes';
    l_query:=l_query||' and vigencia=1';
    l_query:=l_query||' and id_estado_adicional not in(''00'',''05'') ';
    if P_ID_DEPTO is not null then
      l_query:=l_query||' and id_depto_padre='''||P_ID_DEPTO||''' ';
    end if;
    if P_ID_AREA<>0 then
      l_query:=l_query||' and id_area='||to_char(P_ID_AREA);
    end if;
    if P_ID_TRABAJADOR<>0 then
      l_query:=l_query||' and id_trabajador='||to_char(P_ID_TRABAJADOR);
    end if;
    if P_ID_CONDICION_LABORAL is not null then
      l_query:=l_query||' and ID_CONDICION_LABORAL='''||P_ID_CONDICION_LABORAL||''' ';
    end if;
    if P_ID_TIPO_TIEMPO_TRABAJO <> 0 then
      l_query:=l_query||' and ID_TIPO_TIEMPO_TRABAJO='||to_char(P_ID_TIPO_TIEMPO_TRABAJO);
    end if;
    --l_query:=l_query||' and id_concepto_planilla='||to_char(l_id_concepto_planilla);
    l_query:=l_query||' '||l_groups;
    
    select nombre into l_mes from eliseo.conta_mes where id_mes=P_ID_MES;
    
    insert into enoc.tt_rep_sueldo_mensual(ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,ID_ANHO,MES,ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE,IMPORTE,ADICIONAL,ID_CONDICION_LABORAL,HORAS)
    select ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,
    P_ANHO_ID as ID_ANHO,l_mes as MES,
    ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE,sueldo as importe,to_number(0.00) as ADICIONAL,ID_CONDICION_LABORAL ,to_number(0.00) as HORAS
    from enoc.VW_REMUNERACION where tipo_pago='F'  AND VIGENCIA=1
    and id_trabajador in(
      select id_trabajador from enoc.tt_rep_sueldo_mensual
    );
    
    --DBMS_OUTPUT.PUT_LINE(l_query);
    EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,P_ANHO_ID,P_ID_MES;
    
     
    MERGE INTO enoc.tt_rep_sueldo_mensual S 
    USING(
    select ID_TRABAJADOR, 
    sum(coalesce(importe,0)+ coalesce(adicional,0)) as total 
    from enoc.tt_rep_sueldo_mensual 
    group by ID_TRABAJADOR
    )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
    WHEN  MATCHED THEN UPDATE SET  
    S.TOTAL=T.total;
    
    
    OPEN cursor FOR  
    select
    a.ID_PERSONA,a.ID_TRABAJADOR,0 as ID_CONTRATO,a.APELLIDONOMBRE,a.NUM_DOCUMENTO,a.SIGLAS,a.AREA,a.PUESTO,a.ID_ANHO,a.MES,a.ID_DEPTO,a.CCOSTO,
    a.ID_AREA,a.ID_ENTIDAD,a.ID_DEPTO_PADRE,coalesce(sum(a.IMPORTE),0) as importe,coalesce(sum(a.ADICIONAL),0) as adicional, a.TOTAL,b.nombre as deptopadre,
    a.id_condicion_laboral, c.nombre as condicion_laboral, t.id_situacion_trabajador, st.nombre_corto as situacion_trabajador,t.ID_TIPO_TIEMPO_TRABAJO,tt.nombre as TIPO_TIEMPO_TRABAJO,
    coalesce(sum(a.HORAS),0) as HORAS
    from enoc.tt_rep_sueldo_mensual a, eliseo.conta_entidad_depto b, moises.condicion_laboral c, moises.trabajador t, moises.situacion_trabajador st,MOISES.TIPO_TIEMPO_TRABAJO  tt
    where a.id_entidad=b.id_entidad
    and a.ID_DEPTO_PADRE=b.id_depto
    and a.id_condicion_laboral=c.id_condicion_laboral
    and a.id_trabajador=t.id_trabajador
    and t.id_situacion_trabajador=st.id_situacion_trabajador
    and tt.ID_TIPO_TIEMPO_TRABAJO=t.ID_TIPO_TIEMPO_TRABAJO
    group by a.ID_PERSONA,a.ID_TRABAJADOR,a.APELLIDONOMBRE,a.NUM_DOCUMENTO,a.SIGLAS,a.AREA,a.PUESTO,a.ID_ANHO,a.MES,a.ID_DEPTO,a.CCOSTO,a.ID_AREA,a.ID_ENTIDAD,a.ID_DEPTO_PADRE, a.TOTAL,b.nombre,
    a.id_condicion_laboral, c.nombre,t.id_situacion_trabajador, st.nombre_corto,t.ID_TIPO_TIEMPO_TRABAJO,tt.nombre
    order by a.APELLIDONOMBRE,a.ID_ANHO,a.MES,IMPORTE desc;
    
  END SP_REPORTE_SUELDO_MENSUAL;
  
  PROCEDURE SP_REPORTE_ADICIONAL_MENSUAL(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2, P_ID_AREA NUMBER,P_ANHO_ID NUMBER, P_ID_MES NUMBER, P_ID_TRABAJADOR NUMBER,P_ID_CONDICION_LABORAL VARCHAR2,P_ID_TIPO_TIEMPO_TRABAJO NUMBER, CURSOR OUT SYS_REFCURSOR ) AS
  l_query varchar2(4000):='';
  l_campos varchar2(2000):='';
  l_values varchar2(2000):='';
  l_groups varchar2(2000):='';
  l_id_concepto_planilla number;
  l_mes varchar2(50);
  l_id_conceptoaps number;
  l_nombre varchar2(500);
  l_codigo varchar2(25);
  BEGIN
  
    delete from enoc.tt_rep_sueldo_mensual;
    
    select id_concepto_planilla,id_conceptoaps,nombre, codigo into l_id_concepto_planilla, l_id_conceptoaps, l_nombre, l_codigo  from ENOC.plla_concepto_planilla where codigo='REM_BAS';
     
    
    l_campos:='ID_PERSONA,ID_TRABAJADOR,ID_CONTRATO,APELLIDONOMBRE,NUM_DOCUMENTO,SIGLAS,AREA,PUESTO,ID_ANHO,MES,ID_DEPTO,CCOSTO,ID_AREA,ID_ENTIDAD,ID_DEPTO_PADRE,IMPORTE,ADICIONAL,ID_CONCEPTO_PLANILLA,ID_CONCEPTOAPS,CONCEPTO_PLANILLA,CODIGO_PLLA,CONCEPTO_ADICIONAL,ESTADO,ID_ADICIONAL,id_condicion_laboral';
  
    
    select id_concepto_planilla into l_id_concepto_planilla from ENOC.plla_concepto_planilla where codigo='REM_BAS';
    
    --adicional por trabajador
    l_groups:='group by  A.ID_PERSONA,A.ID_TRABAJADOR,A.ID_CONTRATO,A.APELLIDONOMBRE,A.NUM_DOCUMENTO,A.SIGLAS,A.AREA,A.PUESTO,A.ID_ANHO,A.MES,A.ID_DEPTO,A.CCOSTO,A.ID_AREA,A.ID_ENTIDAD,A.ID_DEPTO_PADRE,A.ID_CONCEPTO_PLANILLA,B.ID_CONCEPTOAPS,B.NOMBRE,B.CODIGO,A.CONCEPTO_ADICIONAL,e.nombre,A.ID_ADICIONAL,a.id_condicion_laboral ';
    l_values:='A.ID_PERSONA,A.ID_TRABAJADOR,A.ID_CONTRATO,A.APELLIDONOMBRE,A.NUM_DOCUMENTO,A.SIGLAS,A.AREA,A.PUESTO,A.ID_ANHO,A.MES,A.ID_DEPTO,A.CCOSTO,A.ID_AREA,A.ID_ENTIDAD,A.ID_DEPTO_PADRE, to_number(0.00) as importe, coalesce(sum(A.IMPORTE),0) as ADICIONAL,A.ID_CONCEPTO_PLANILLA,B.ID_CONCEPTOAPS,B.NOMBRE,B.CODIGO,A.CONCEPTO_ADICIONAL, e.nombre,A.ID_ADICIONAL,a.id_condicion_laboral ';
    l_query:='insert into enoc.tt_rep_sueldo_mensual('||l_campos||') ';
    l_query:=l_query||'select '||l_values||' from enoc.vw_adicional_det A inner join ENOC.PLLA_ESTADO_ADICIONAL e on e.id_estado_adicional=a.id_estado_adicional  left join enoc.plla_concepto_planilla B on a.id_concepto_planilla= b.id_concepto_planilla';
    l_query:=l_query||' where a.id_entidad=:s_id_entidad';
    l_query:=l_query||' and a.id_anho=:s_id_anho';
    l_query:=l_query||' and a.id_mes=:s_id_mes';
    l_query:=l_query||' and a.vigencia=1';
    l_query:=l_query||' and a.id_estado_adicional not in(''00'',''05'') ';
    if P_ID_DEPTO is not null then
      l_query:=l_query||' and a.id_depto_padre='''||P_ID_DEPTO||''' ';
    end if;
    if P_ID_AREA<>0 then
      l_query:=l_query||' and a.id_area='||to_char(P_ID_AREA);
    end if;
    if P_ID_TRABAJADOR<>0 then
      l_query:=l_query||' and a.id_trabajador='||to_char(P_ID_TRABAJADOR);
    end if;
    if P_ID_CONDICION_LABORAL is not null then
      l_query:=l_query||' and a.ID_CONDICION_LABORAL='''||P_ID_CONDICION_LABORAL||''' ';
    end if;
    if P_ID_TIPO_TIEMPO_TRABAJO <> 0 then
      l_query:=l_query||' and a.ID_TIPO_TIEMPO_TRABAJO='||to_char(P_ID_TIPO_TIEMPO_TRABAJO);
    end if;
    --l_query:=l_query||' and id_concepto_planilla='||to_char(l_id_concepto_planilla);
    l_query:=l_query||' '||l_groups;
    
     EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,P_ANHO_ID,P_ID_MES;
    --adicional grupal
   
    l_values:='a.ID_PERSONA,a.ID_TRABAJADOR,a.ID_CONTRATO,a.APELLIDONOMBRE,a.NUM_DOCUMENTO,a.SIGLAS,a.AREA,a.PUESTO,a.ID_ANHO,MES,a.ID_DEPTO,a.CCOSTO,a.ID_AREA,a.ID_ENTIDAD,a.ID_DEPTO_PADRE, to_number(0.00) as importe, coalesce(sum(a.IMPORTE),0) as ADICIONAL,a.ID_CONCEPTO_PLANILLA,b.ID_CONCEPTOAPS,b.nombre,b.CODIGO,a.CONCEPTO_ADICIONAL,e.nombre,A.ID_ADICIONAL,a.id_condicion_laboral ';
    l_query:='insert into enoc.tt_rep_sueldo_mensual('||l_campos||') ';
    l_query:=l_query||'select '||l_values||' from enoc.vw_adicional_grupo A inner join ENOC.PLLA_ESTADO_ADICIONAL e on e.id_estado_adicional=a.id_estado_adicional  left join enoc.plla_concepto_planilla B on a.id_concepto_planilla= b.id_concepto_planilla ';
    l_query:=l_query||' where a.id_entidad=:s_id_entidad';
    l_query:=l_query||' and a.id_anho=:s_id_anho';
    l_query:=l_query||' and a.id_mes=:s_id_mes';
    l_query:=l_query||' and a.vigencia=1';
    l_query:=l_query||' and a.id_estado_adicional not in(''00'',''05'') ';
    if P_ID_DEPTO is not null then
      l_query:=l_query||' and a.id_depto_padre='''||P_ID_DEPTO||''' ';
    end if;
    if P_ID_AREA<>0 then
      l_query:=l_query||' and a.id_area='||to_char(P_ID_AREA);
    end if;
    if P_ID_TRABAJADOR<>0 then
      l_query:=l_query||' and id_trabajador='||to_char(P_ID_TRABAJADOR);
    end if;
    if P_ID_CONDICION_LABORAL is not null then
      l_query:=l_query||' and a.ID_CONDICION_LABORAL='''||P_ID_CONDICION_LABORAL||''' ';
    end if;
    if P_ID_TIPO_TIEMPO_TRABAJO <> 0 then
      l_query:=l_query||' and a.ID_TIPO_TIEMPO_TRABAJO='||to_char(P_ID_TIPO_TIEMPO_TRABAJO);
    end if;
    --l_query:=l_query||' and id_concepto_planilla='||to_char(l_id_concepto_planilla);
    l_query:=l_query||' '||l_groups;
    
    --DBMS_OUTPUT.PUT_LINE(l_query);
    EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,P_ANHO_ID,P_ID_MES;
    
    MERGE INTO enoc.tt_rep_sueldo_mensual S 
    USING( 
      SELECT 
      ID_TRABAJADOR, 
      SUELDO 
      from enoc.VW_REMUNERACION 
      where tipo_pago='F' 
      AND VIGENCIA=1
      and id_trabajador in(
        select id_trabajador from enoc.tt_rep_sueldo_mensual
      )
    )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
    WHEN  MATCHED THEN UPDATE SET  
    S.IMPORTE=T.SUELDO;  

    
    MERGE INTO enoc.tt_rep_sueldo_mensual S 
    USING( 
      SELECT 
      ID_TRABAJADOR, 
      COALESCE(SUM(IMPORTE),0) AS SUELDO 
      from enoc.VW_REMUNERACION_DET 
      where tipo_pago='H' 
      AND ID_ANHO=P_ANHO_ID
      AND ID_MES=P_ID_MES
      and vigencia_det=1
      and id_trabajador in(
        select id_trabajador from enoc.tt_rep_sueldo_mensual
      )
      group by ID_TRABAJADOR
    )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
    WHEN  MATCHED THEN UPDATE SET  
    S.IMPORTE=T.SUELDO;
 
    MERGE INTO enoc.tt_rep_sueldo_mensual S 
    USING(
    select ID_TRABAJADOR, 
    sum(coalesce(importe,0)+ coalesce(adicional,0)) as total 
    from enoc.tt_rep_sueldo_mensual 
    group by ID_TRABAJADOR
    )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
    WHEN  MATCHED THEN UPDATE SET  
    S.TOTAL=T.total;
    
    
    OPEN cursor FOR  
    select
    a.ID_PERSONA,a.ID_TRABAJADOR,0 as ID_CONTRATO,a.APELLIDONOMBRE,a.NUM_DOCUMENTO,a.SIGLAS,a.AREA,a.PUESTO,a.ID_ANHO,a.MES,a.ID_DEPTO,a.CCOSTO,a.ID_AREA,a.ID_ENTIDAD,a.ID_DEPTO_PADRE,coalesce(sum(a.IMPORTE),0) as importe,
    coalesce(sum(a.ADICIONAL),0) as adicional, a.TOTAL,b.nombre as deptopadre,
    a.ID_CONCEPTO_PLANILLA,a.ID_CONCEPTOAPS,a.CONCEPTO_PLANILLA,a.CODIGO_PLLA,a.CONCEPTO_ADICIONAL,a.estado, a.id_adicional,a.id_condicion_laboral, c.nombre as condicion_laboral, t.id_situacion_trabajador, st.nombre_corto as situacion_trabajador,
    t.ID_TIPO_TIEMPO_TRABAJO,tt.nombre as TIPO_TIEMPO_TRABAJO
    from enoc.tt_rep_sueldo_mensual a, eliseo.conta_entidad_depto b, moises.condicion_laboral c, moises.trabajador t, moises.situacion_trabajador st, moises.tipo_tiempo_trabajo tt
    where a.id_entidad=b.id_entidad
    and a.ID_DEPTO_PADRE=b.id_depto
    and a.id_condicion_laboral=c.id_condicion_laboral
    and a.id_trabajador=t.id_trabajador
    and t.id_situacion_trabajador=st.id_situacion_trabajador
    and t.id_tipo_tiempo_trabajo=tt.id_tipo_tiempo_trabajo
    group by a.ID_PERSONA,a.ID_TRABAJADOR,a.APELLIDONOMBRE,a.NUM_DOCUMENTO,a.SIGLAS,a.AREA,a.PUESTO,a.ID_ANHO,a.MES,a.ID_DEPTO,a.CCOSTO,a.ID_AREA,a.ID_ENTIDAD,a.ID_DEPTO_PADRE, a.TOTAL,b.nombre,a.ID_CONCEPTO_PLANILLA,
    a.ID_CONCEPTOAPS,a.CONCEPTO_PLANILLA,a.CODIGO_PLLA,a.CONCEPTO_ADICIONAL,a.estado, a.id_adicional,a.id_condicion_laboral, c.nombre,t.id_situacion_trabajador, st.nombre_corto,t.ID_TIPO_TIEMPO_TRABAJO,tt.nombre
    order by a.APELLIDONOMBRE,a.ID_CONCEPTO_PLANILLA;
    
  END SP_REPORTE_ADICIONAL_MENSUAL;
    

  
   PROCEDURE SP_INS_UPD_ADICONAL( 
        P_ID_ADICIONAL NUMBER,
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO varchar2,
        P_ID_CONCEPTO_ADICIONAL NUMBER,
        P_ID_TRABAJADOR NUMBER,
        P_DESCRIPCION varchar2,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_ID_SEDEAREA_SOL NUMBER,
        P_ID_USER_REG NUMBER,
        
        D_ID_MES CLOB,
        D_ID_ANHO CLOB,
        D_ID_SEDEAREA CLOB,
        D_ID_TIPO_HORA_PAGO CLOB,
        D_DIAS CLOB,
        D_CANTIDAD CLOB,
        D_ID_TIPO_CANTIDAD CLOB,
        D_COSTO CLOB,
        
        T_ID_TRABAJADOR	CLOB,
        T_IMPORTE	CLOB,
        P_ID OUT NUMBER,
        P_ERROR OUT number,
        P_MSGERROR out varchar2
      ) AS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_adicional number;
        l_academico number;
        l_grupal number;
        l_id_concepto_planilla number;
        l_id_concepto_planilla1 number;
        l_id_concepto_planilla1_ins number;
        l_codigo_tca varchar2(25);
        l_tipo_tiempo_trabajo number;
        l_id_estado_adicional varchar2(2):='01';
        l_id_estado_adicional_act varchar2(2);
        l_id_adicional_estado number;
        l_id number;
        l_id_sedearea number;
        
        l_trabajador TABLASTRING;
        l_importe TABLASTRING;
        
        
        l_mes TABLASTRING;
        l_anho TABLASTRING;
        l_sedearea TABLASTRING;
        l_tipo_hora_pago TABLASTRING;
        l_dias TABLASTRING;
        l_cantidad TABLASTRING;
        l_tipo_cantidad TABLASTRING;
        l_costo TABLASTRING;
        
        
      BEGIN
      
        SELECT 
          ACADEMICO,
          GRUPAL,
          ID_CONCEPTO_PLANILLA,
          ID_CONCEPTO_PLANILLA1,
          CODIGO_TCA
        INTO
          l_academico,
          l_grupal,
          l_id_concepto_planilla,
          l_id_concepto_planilla1,
          l_codigo_tca
        FROM ENOC.VW_CONCEPTO_ADICIONAL
        WHERE ID_CONCEPTO_ADICIONAL=P_ID_CONCEPTO_ADICIONAL;
        
        if l_codigo_tca = 'BON' then
          l_id_concepto_planilla1_ins:=l_id_concepto_planilla;
        else
          if l_grupal = 0 then
          
            if P_ID_TRABAJADOR=0 then
              l_error:=1;
              l_msgerror:='Falta seleccionar trabajador';
              goto salida_insupd_adicional;
            end if;
            
            select ID_TIPO_TIEMPO_TRABAJO into l_tipo_tiempo_trabajo from  moises.trabajador where id_trabajador=P_ID_TRABAJADOR;
            
            if l_tipo_tiempo_trabajo is null then
              l_error:=1;
              l_msgerror:='Falta definir tipo tiempo trabajo';
              goto salida_insupd_adicional;
            end if;
            
            if l_tipo_tiempo_trabajo = 3 then --tiempo parcial
              l_id_concepto_planilla1_ins:=l_id_concepto_planilla1;
            else
              l_id_concepto_planilla1_ins:=l_id_concepto_planilla;
            end if;
            
          else
            l_id_concepto_planilla1_ins:=l_id_concepto_planilla;
            
            if P_ID_ANHO=0 or P_ID_MES=0 then
              l_error:=1;
              l_msgerror:='Falta seleccionar año ó mes';
              goto salida_insupd_adicional;
            end if;
          end if;
        end if;
        
        if P_ID_ADICIONAL = 0 then
        
          select coalesce(max(id_adicional),0)+1 into l_id_adicional from enoc.plla_adicional;
          insert into enoc.plla_adicional(
            ID_ADICIONAL,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_CONCEPTO_ADICIONAL,
            ID_ESTADO_ADICIONAL,
            ID_TRABAJADOR,
            ID_CONCEPTO_PLANILLA,
            DESCRIPCION,
            FINALIZADO,
            ID_ANHO,
            ID_MES,
            ID_SEDEAREA_SOL,
            ID_USER_REG,
            FECHA_REG
          )values(
            l_id_adicional,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_CONCEPTO_ADICIONAL,
            l_id_estado_adicional,
            case when P_ID_TRABAJADOR =0 then null else P_ID_TRABAJADOR end,
            l_id_concepto_planilla1_ins,
            P_DESCRIPCION,
            0,
            case when P_ID_ANHO =0 then null else P_ID_ANHO end,
            case when P_ID_MES =0 then null else P_ID_MES end,
            P_ID_SEDEAREA_SOL,
            P_ID_USER_REG,
            sysdate            
          );
          
          
          select coalesce(max(ID_ADICIONAL_ESTADO),0)+1 into l_id_adicional_estado from ENOC.PLLA_ADICIONAL_ESTADO;

          insert into ENOC.PLLA_ADICIONAL_ESTADO(
            ID_ADICIONAL_ESTADO,
            ID_ESTADO_ADICIONAL,
            ID_ADICIONAL,
            ID_USER,
            FECHA,
            OBSERVACION
          )values(
            l_id_adicional_estado,
            l_id_estado_adicional,
            l_id_adicional,
            P_ID_USER_REG,
            sysdate, 
            null
          );
          P_ID:=l_id_adicional;
        else
          update enoc.plla_adicional set
            ID_CONCEPTO_ADICIONAL = P_ID_CONCEPTO_ADICIONAL,
            ID_TRABAJADOR=case when P_ID_TRABAJADOR =0 then null else P_ID_TRABAJADOR end,
            ID_CONCEPTO_PLANILLA=l_id_concepto_planilla1_ins,
            DESCRIPCION=P_DESCRIPCION,
            ID_ANHO= case when P_ID_ANHO =0 then null else P_ID_ANHO end,
            ID_MES= case when P_ID_MES =0 then null else P_ID_MES end,
            ID_SEDEAREA_SOL=P_ID_SEDEAREA_SOL,
            ID_USER_MOD=P_ID_USER_REG,
            FECHA_MOD=sysdate
          where ID_ADICIONAL=P_ID_ADICIONAL;
          
          P_ID:=P_ID_ADICIONAL;
          l_id_adicional:= P_ID_ADICIONAL;
          
          select id_estado_adicional into l_id_estado_adicional_act from  enoc.plla_adicional where ID_ADICIONAL=l_id_adicional;
          
          if l_id_estado_adicional_act='05' then
          
            update enoc.plla_adicional set id_estado_adicional=l_id_estado_adicional where ID_ADICIONAL=l_id_adicional;
            
            select coalesce(max(ID_ADICIONAL_ESTADO),0)+1 into l_id_adicional_estado from ENOC.PLLA_ADICIONAL_ESTADO;
  
            insert into ENOC.PLLA_ADICIONAL_ESTADO(
              ID_ADICIONAL_ESTADO,
              ID_ESTADO_ADICIONAL,
              ID_ADICIONAL,
              ID_USER,
              FECHA,
              OBSERVACION
            )values(
              l_id_adicional_estado,
              l_id_estado_adicional,
              l_id_adicional,
              P_ID_USER_REG,
              sysdate, 
              null
            );
            
          end if;
          
        end if;
        
        delete from ENOC.PLLA_ADICIONAL_PERSONA where ID_ADICIONAL=l_id_adicional;
        delete from ENOC.PLLA_ADICIONAL_DET where ID_ADICIONAL=l_id_adicional;
        
        if l_grupal = 0 then
        --detalle adicional
           select ENOC.FC_SPLIT (D_ID_MES,'|') into l_mes  from dual; 
           select ENOC.FC_SPLIT (D_ID_ANHO,'|') into l_anho  from dual;
           select ENOC.FC_SPLIT (D_ID_SEDEAREA,'|') into l_sedearea  from dual;
           select ENOC.FC_SPLIT (D_ID_TIPO_HORA_PAGO,'|') into l_tipo_hora_pago  from dual;
           select ENOC.FC_SPLIT (D_DIAS,'|') into l_dias   from dual;
           select ENOC.FC_SPLIT (D_CANTIDAD,'|') into l_cantidad   from dual;
           select ENOC.FC_SPLIT (D_ID_TIPO_CANTIDAD,'|') into l_tipo_cantidad   from dual;
           select ENOC.FC_SPLIT (D_COSTO,'|') into l_costo  from dual;
    
           FOR i IN l_mes.FIRST .. l_mes.LAST
           LOOP
            
             select coalesce(max(ID_ADICIONAL_DET),0)+1 into l_id from ENOC.PLLA_ADICIONAL_DET;
            
            insert into ENOC.PLLA_ADICIONAL_DET(
                ID_ADICIONAL_DET,
                ID_ADICIONAL,
                ID_MES,
                ID_ANHO,
                ID_SEDEAREA,
                ID_TIPO_HORA_PAGO,
                DIAS,
                CANTIDAD,
                ID_TIPO_CANTIDAD,
                COSTO,
                IMPORTE,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG
              )values(
                l_id,
                l_id_adicional,
                TO_NUMBER(l_mes(i)),
                TO_NUMBER(l_anho(i)),
                TO_NUMBER(l_sedearea(i)),
                TO_NUMBER(l_tipo_hora_pago(i)),
                TO_NUMBER(l_dias(i)),
                TO_NUMBER(l_cantidad(i)),
                TO_NUMBER(l_tipo_cantidad(i)),
                TO_NUMBER(l_costo(i)),
                TO_NUMBER(l_costo(i)) * TO_NUMBER(l_cantidad(i)), 
                1,
                P_ID_USER_REG,
                sysdate
              );
           END  LOOP;
        else
        --adicional persona
          select ENOC.FC_SPLIT (T_ID_TRABAJADOR,'|') into l_trabajador  from dual; 
          select ENOC.FC_SPLIT (T_IMPORTE,'|') into l_importe  from dual; 
          
          
          
          FOR i IN l_trabajador.FIRST .. l_trabajador.LAST
          LOOP
            
            select id_sedearea into l_id_sedearea from moises.trabajador where id_trabajador=TO_NUMBER(l_trabajador(i));
            
            select coalesce(max(ID_ADICIONAL_PERSONA),0)+1 into l_id from ENOC.PLLA_ADICIONAL_PERSONA;
            
            insert into ENOC.PLLA_ADICIONAL_PERSONA(
              ID_ADICIONAL_PERSONA,
              ID_ADICIONAL,
              ID_TRABAJADOR,
              ID_SEDEAREA,
              IMPORTE,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
            )values(
              l_id,
              l_id_adicional,
              TO_NUMBER(l_trabajador(i)),
              l_id_sedearea,
              TO_NUMBER(l_importe(i)),
              1,
              P_ID_USER_REG,
              sysdate
            );
           
          END  LOOP;
        end if;
      
        <<salida_insupd_adicional>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        
      END SP_INS_UPD_ADICONAL;
      
      PROCEDURE SP_APROBAR_ADICIONAL(P_ID_ADICIONAL NUMBER,P_ID_ESTADO_ADICIONAL VARCHAR2,P_ID_CONCEPTO_PLANILLA NUMBER,P_OBSERVACION VARCHAR2,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_adicional_estado number;
        l_id_tipo_concep_adic number;
        l_estado_adicional varchar2(5);
        l_finalizado number:=0;
      BEGIN
        
        select coalesce(max(ID_ADICIONAL_ESTADO),0)+1 into l_id_adicional_estado from ENOC.PLLA_ADICIONAL_ESTADO;
        
        SELECT ID_TIPO_CONCEP_ADIC INTO l_id_tipo_concep_adic FROM ENOC.VW_ADICIONAL WHERE ID_ADICIONAL=P_ID_ADICIONAL;
        
        SELECT MAX(ID_ESTADO_ADICIONAL) into l_estado_adicional FROM ENOC.PLLA_TIPO_CONCEP_ADIC_EST WHERE ID_TIPO_CONCEP_ADIC=l_id_tipo_concep_adic AND ID_ESTADO_ADICIONAL NOT IN('05','00');
        
        if l_estado_adicional = P_ID_ESTADO_ADICIONAL then
          l_finalizado:=1;
        end if;
        
        
        IF P_ID_ESTADO_ADICIONAL NOT IN('00','05') AND P_ID_CONCEPTO_PLANILLA > 0 THEN
          update ENOC.PLLA_ADICIONAL set
          ID_CONCEPTO_PLANILLA=P_ID_CONCEPTO_PLANILLA
          where id_adicional=P_ID_ADICIONAL
          AND ID_CONCEPTO_PLANILLA IS NULL;
        END IF;
        
        update ENOC.PLLA_ADICIONAL set
        ID_ESTADO_ADICIONAL=P_ID_ESTADO_ADICIONAL,
        FINALIZADO = l_finalizado
        where id_adicional=P_ID_ADICIONAL;

        insert into ENOC.PLLA_ADICIONAL_ESTADO(
          ID_ADICIONAL_ESTADO,
          ID_ESTADO_ADICIONAL,
          ID_ADICIONAL,
          ID_USER,
          FECHA,
          OBSERVACION
        )values(
          l_id_adicional_estado,
          P_ID_ESTADO_ADICIONAL,
          P_ID_ADICIONAL,
          P_ID_USER_REG,
          sysdate, 
          P_OBSERVACION
        );
          
        <<salida_approve_adicional>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_APROBAR_ADICIONAL;
      
      
      
      PROCEDURE SP_REGISTRAR_CAMBIO_SUELDO(
      P_ID_CAMBIOS NUMBER,
      P_ID_ENTIDAD NUMBER,
      P_ID_DEPTO varchar2,
      P_ID_CONCEPTO_CAMBIO NUMBER,
      P_ID_TRABAJADOR NUMBER,
      P_FEC_DESDE DATE,
      P_ID_ESCALA_SALARIAL number,
      P_INCR_SUELDO number,
      P_INCR_FMR number,
      P_SUELDO NUMBER,
      P_PJE_FMR NUMBER,
      P_COMENTARIO varchar2,
      P_ID_USER NUMBER,
      D_ID_TRABAJADOR CLOB,
      D_ID_ESCALA_SALARIAL CLOB,
      D_INCR_SUELDO CLOB,
      D_INCR_FMR CLOB,
      D_SUELDO CLOB,
      D_PJE_FMR CLOB,
      P_ID_CAMBIO OUT NUMBER,
      P_ERROR OUT number,
      P_MSGERROR out varchar2
      )
      

      IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_codigo varchar2(20);
        l_id_cambios number;
        l_id_sede_area number;
        l_id_perfil_puesto number;
        l_id_condicion_laboral varchar2(10);
        l_id_tipo_contrato  varchar2(10);
        l_id_tipo_tiempo_trabajo number;
        l_id_estado_cambios varchar2(5);
        l_sueldo number(10,2):=0;
        l_pje_fmr number(10,2):=0;
        l_proceso_fin varchar2(1):='N';
        
        l_id number;
        
        a_trabajador TABLASTRING;
        a_escala_salarial TABLASTRING;
        a_inc_sueldo TABLASTRING;
        a_inc_fmr TABLASTRING;
        a_sueldo TABLASTRING;
        a_pje_fmr TABLASTRING;
      BEGIN
      
        SELECT CODIGO INTO l_codigo FROM enoc.PLLA_CONCEPTO_CAMBIO WHERE ID_CONCEPTO_CAMBIO=P_ID_CONCEPTO_CAMBIO;
        
          
        IF l_codigo ='INCSI' THEN  
        
          select 
          id_sedearea,id_perfil_puesto, id_condicion_laboral,id_tipo_contrato,id_tipo_tiempo_trabajo 
          into 
          l_id_sede_area, l_id_perfil_puesto,l_id_condicion_laboral,l_id_tipo_contrato,l_id_tipo_tiempo_trabajo 
          from moises.trabajador 
          where id_trabajador=P_ID_TRABAJADOR;
          
          select sueldo, fmr into l_sueldo,l_pje_fmr  from ENOC.plla_remuneracion where id_trabajador=P_ID_TRABAJADOR and vigencia=1;
        END IF;

        
        if P_ID_CAMBIOS=0 then
        
          select coalesce(max(id_cambios),0) + 1 into l_id_cambios from PLLA_CAMBIOS;
          
          insert into enoc.PLLA_CAMBIOS(
              ID_CAMBIOS,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_CONCEPTO_CAMBIO,
              ID_TRABAJADOR,
              FEC_DESDE,
              MOD_FMR_SUELDO,
              ID_ESCALA_SALARIAL,
              SUELDO,
              PJE_FMR,
              COMENTARIO,
              ACT_INS,
              PROCESO_FIN,
              APS,
              ID_ESTADO_CAMBIO,
              ID_USER_REG,
              FECHA_REG,
              ID_SEDEAREAA,
              ID_PERFIL_PUESTOA,
              ID_CONDICION_LABORALA,
              ID_TIPO_CONTRATOA,
              ID_TIPO_TIEMPO_TRABAJOA,
              SUELDOA,
              PJE_FMRA,
              INCR_SUELDO,
              INCR_FMR
            )values(
              l_id_cambios,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_CONCEPTO_CAMBIO,
              P_ID_TRABAJADOR,
              P_FEC_DESDE,
              'S',
              case when P_ID_ESCALA_SALARIAL=0 then null else P_ID_ESCALA_SALARIAL end,
              P_SUELDO,
              P_PJE_FMR,
              P_COMENTARIO,
              'I',
              l_proceso_fin,
              '0',
              '01',
              P_ID_USER,
              sysdate,
              l_id_sede_area,
              l_id_perfil_puesto,
              l_id_condicion_laboral,
              l_id_tipo_contrato,
              l_id_tipo_tiempo_trabajo,
              l_sueldo,
              l_pje_fmr,
              P_INCR_SUELDO,
              P_INCR_FMR
            );
        else
          SELECT ID_ESTADO_CAMBIO INTO l_id_estado_cambios FROM enoc.PLLA_CAMBIOS WHERE ID_CAMBIOS = P_ID_CAMBIOS;
          if l_id_estado_cambios not in('01','07') then
            l_error:=1;
            l_msgerror:='Si modifica sólo con estado registrado';
            goto salida_reg_cambio;
          end if;
          update enoc.PLLA_CAMBIOS set
              FEC_DESDE=P_FEC_DESDE,
              SUELDO=P_SUELDO,
              PJE_FMR=P_PJE_FMR,
              COMENTARIO=P_COMENTARIO,
              PROCESO_FIN=l_proceso_fin,
              ID_USER_MOD= P_ID_USER,
              FECHA_MOD=sysdate,
              ID_SEDEAREAA= l_id_sede_area,
              ID_PERFIL_PUESTOA=l_id_perfil_puesto,
              ID_CONDICION_LABORALA=l_id_condicion_laboral,
              ID_TIPO_CONTRATOA=l_id_tipo_contrato,
              ID_TIPO_TIEMPO_TRABAJOA=l_id_tipo_tiempo_trabajo,
              SUELDOA=l_sueldo,
              PJE_FMRA=l_pje_fmr,
              INCR_SUELDO=P_INCR_SUELDO,
              INCR_FMR=P_INCR_FMR 
          where ID_CAMBIOS=P_ID_CAMBIOS;
          
          l_id_cambios:=P_ID_CAMBIOS;
        end if;
        
        IF l_codigo ='INCSG' THEN 
          select ENOC.FC_SPLIT(D_ID_TRABAJADOR,'|') into a_trabajador  from dual; 
          select ENOC.FC_SPLIT(D_ID_ESCALA_SALARIAL,'|') into a_escala_salarial  from dual; 
          select ENOC.FC_SPLIT(D_INCR_SUELDO,'|') into a_inc_sueldo  from dual; 
          select ENOC.FC_SPLIT(D_INCR_FMR,'|') into a_inc_fmr  from dual; 
          select ENOC.FC_SPLIT(D_SUELDO,'|') into a_sueldo  from dual; 
          select ENOC.FC_SPLIT(D_PJE_FMR,'|') into a_pje_fmr  from dual; 
          
          
         delete from ENOC.PLLA_CAMBIOS_DET where id_cambios= l_id_cambios;

          
          FOR i IN a_trabajador.FIRST .. a_trabajador.LAST
          LOOP
            
            
            select sueldo, fmr into l_sueldo,l_pje_fmr  from ENOC.plla_remuneracion where id_trabajador=TO_NUMBER(a_trabajador(i)) and vigencia=1;
            
            select coalesce(max(ID_CAMBIOS_DET),0)+1 into l_id from ENOC.PLLA_CAMBIOS_DET;
            
            insert into ENOC.PLLA_CAMBIOS_DET(
              ID_CAMBIOS_DET,
              ID_CAMBIOS,
              ID_TRABAJADOR,
              ID_ESCALA_SALARIAL,
              INCR_SUELDO,
              INCR_FMR,
              SUELDO,
              PJE_FMR,
              SUELDOA,
              PJE_FMRA,
              ID_USER_REG,
              FECHA_REG
            )values(
              l_id,
              l_id_cambios,
              TO_NUMBER(a_trabajador(i)),
              TO_NUMBER(a_escala_salarial(i)),
              TO_NUMBER(a_inc_sueldo(i)),
              TO_NUMBER(a_inc_fmr(i)),
              TO_NUMBER(a_sueldo(i)),
              TO_NUMBER(a_pje_fmr(i)),
              l_sueldo,
              l_pje_fmr,
              P_ID_USER,
              sysdate
            );
           
          END  LOOP;
       END IF;   
           
       <<salida_reg_cambio>>
        P_ID_CAMBIO:=l_id_cambios;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_REGISTRAR_CAMBIO_SUELDO;
      
      PROCEDURE SP_FINALIZAR_CAMBIO_SUELDO(P_ID_CAMBIOS NUMBER,P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
       IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_concepto_cambio number;
        l_codigo varchar2(20);
        l_id_trabajador number;
        l_sueldo number(10,2);
        l_pje_fmra number(10,2);
        l_id_remuneracion number;
        l_nombre varchar2(150);
        l_id_contrato number;
        l_id_escala_salarial number;
        l_id_max number;
        l_id number;
        l_fec_desde date;

      BEGIN
      
        SELECT 
          ID_CONCEPTO_CAMBIO,
          SUELDO,
          PJE_FMR,
          ID_TRABAJADOR,
          ID_ESCALA_SALARIAL,
          FEC_DESDE
        into 
          l_id_concepto_cambio,
          l_sueldo,
          l_pje_fmra,
          l_id_trabajador,
          l_id_escala_salarial,
          l_fec_desde
        from enoc.PLLA_CAMBIOS 
        where ID_CAMBIOS=P_ID_CAMBIOS;
        
        SELECT CODIGO,nombre INTO l_codigo, l_nombre FROM enoc.PLLA_CONCEPTO_CAMBIO WHERE ID_CONCEPTO_CAMBIO=l_id_concepto_cambio;
        
        IF l_codigo ='INCSG' THEN  
        
                
          UPDATE PLLA_REMUNERACION SET VIGENCIA=0 WHERE id_trabajador in(
            SELECT ID_TRABAJADOR FROM ENOC.PLLA_CAMBIOS_DET WHERE ID_CAMBIOS=P_ID_CAMBIOS
          ) AND VIGENCIA=1;
          
          select coalesce(max(ID_REMUNERACION),0)   into l_id_remuneracion  from  PLLA_REMUNERACION;
          
          INSERT INTO PLLA_REMUNERACION(
            ID_REMUNERACION,
            ID_TRABAJADOR,
            ID_CONTRATO,
            REFERENCIA,
            REFERENCIA_URL,
            FEC_EFECTIVO,
            TIPO_PAGO,
            FMR,
            SUELDO,
            BONIFICACION,
            OBSERVACION,
            ID_ESTADO_REMUNE,
            VIGENCIA,
            ID_USER_REG,
            FECHA_REG,
            ID_ESCALA_SALARIAL
          )
          SELECT 
          (row_number() OVER( ORDER BY A.ID_CAMBIOS_DET ASC )) + l_id_remuneracion AS ID_REMU,
          A.ID_TRABAJADOR,
          B.ID_CONTRATO,
          l_nombre,
          NULL,
          l_fec_desde,
          'F',
          A.PJE_FMR,
          A.SUELDO,
          0,
          l_nombre,
          '04',
          1,
          P_ID_USER,
          SYSDATE,
          A.ID_ESCALA_SALARIAL
          FROM ENOC.PLLA_CAMBIOS_DET A, MOISES.TRABAJADOR B
          WHERE A.ID_TRABAJADOR=B.ID_TRABAJADOR
          AND A.ID_CAMBIOS=P_ID_CAMBIOS
          ORDER BY A.ID_CAMBIOS_DET;
          
          
        ELSE
          select id_contrato into l_id_contrato  FROM moises.trabajador where id_trabajador=l_id_trabajador;
                
          UPDATE PLLA_REMUNERACION SET VIGENCIA=0 WHERE id_trabajador = l_id_trabajador AND VIGENCIA=1;
          
          select coalesce(max(ID_REMUNERACION),0) + 1  into l_id_remuneracion  from  PLLA_REMUNERACION;
          
          INSERT INTO PLLA_REMUNERACION(
            ID_REMUNERACION,
            ID_TRABAJADOR,
            ID_CONTRATO,
            REFERENCIA,
            REFERENCIA_URL,
            FEC_EFECTIVO,
            TIPO_PAGO,
            FMR,
            SUELDO,
            BONIFICACION,
            OBSERVACION,
            ID_ESTADO_REMUNE,
            VIGENCIA,
            ID_USER_REG,
            FECHA_REG,
            ID_ESCALA_SALARIAL
          )values(
            l_id_remuneracion,
            l_id_trabajador,
            l_id_contrato,
            l_nombre,
            NULL,
            SYSDATE,
            'F',
            l_pje_fmra,
            l_sueldo,
            0,
            l_nombre,
            '04',
            1,
            P_ID_USER,
            SYSDATE,
            l_id_escala_salarial
          );
                   
        end if;
       
        update enoc.PLLA_CAMBIOS set
        PROCESO_FIN='S'
        where ID_CAMBIOS=P_ID_CAMBIOS;

      
       <<salida_fin_cambio>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END SP_FINALIZAR_CAMBIO_SUELDO;
      
      PROCEDURE SP_REPORTE_GENERAL(
        P_ID_ENTIDAD NUMBER,
        P_ID_PERSONA NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_AREA VARCHAR2,
        P_SEXO VARCHAR2,
        P_ID_SITUACION_TRABAJADOR VARCHAR2,
        P_ID_TIPOESTADOCIVIL VARCHAR2,
        P_ID_SITUACION_EDUCATIVO VARCHAR2,
        P_ID_TIPORELIGION VARCHAR2,
        P_ID_TIPOPAIS VARCHAR2,
        P_ID_TIPODOCUMENTO VARCHAR2,
        P_ID_REGIMEN_PENSIONARIA VARCHAR2,
        P_ID_TIPO_CONTROL_PERSONAL VARCHAR2,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIPO_CONTRATO VARCHAR2,
        P_ID_TIPO_TIEMPO_TRABAJO VARCHAR2,
        P_ID_TIPO_JEFE VARCHAR2,
        P_ID_PUESTO NUMBER,
        P_TIPO_REP VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREAS_USER VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        )
      IS
      l_FMR number(10,2):=0;
      l_contar number;
      l_query varchar2(4000):='';
      l_id_anho number;
      l_id_tipo_nivel_vista number;
      L_FMR_ACT NUMBER:=0;
      l_error number:=0;
      BEGIN
      
      select count(*) into  l_contar from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad= P_ID_ENTIDAD and codigo='PARAM_FMR_ESCALA' and id_anho=to_number(to_char(sysdate,'YYYY'));
      if l_contar>0 then
        select importe into l_FMR from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad= P_ID_ENTIDAD and codigo='PARAM_FMR_ESCALA' and id_anho=to_number(to_char(sysdate,'YYYY'));
      end if;
      select count(*) into  l_contar from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad= P_ID_ENTIDAD and codigo='PARAM_FMR' and id_anho=to_number(to_char(sysdate,'YYYY'));
      if l_contar>0 then
        select importe into L_FMR_ACT from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad= P_ID_ENTIDAD and codigo='PARAM_FMR' and id_anho=to_number(to_char(sysdate,'YYYY'));
      end if;
      
      if P_RESTRINGIDO='S' then
          select id_tipo_nivel_vista into l_id_tipo_nivel_vista from eliseo.lamb_acceso_nivel where id_acceso_nivel=P_ID_ACCESO_NIVEL;
        end if;
      
      select to_number(to_char(sysdate,'YYYY')) into l_id_anho from dual;
      
      l_query:='insert into ENOC.TT_REPORTE_GENERAL ';
      l_query:=l_query||'select ';
      l_query:=l_query||'a.id_trabajador,';
      l_query:=l_query||'a.id_persona,';
      l_query:=l_query||'a.apellidonombre,';
      l_query:=l_query||'a.nombre,';
      l_query:=l_query||'a.paterno,';
      l_query:=l_query||'a.materno,';
      l_query:=l_query||'b.puesto,';
      l_query:=l_query||'sa.nombre as area,';
      l_query:=l_query||'sa.id_depto,';
      l_query:=l_query||'sa.ccosto,';
      l_query:=l_query||'ed.nombre as deptopadre,';
      l_query:=l_query||'te.nombre as estado_civil,';
      l_query:=l_query||'se.nombre as situacion_educativo,';
      l_query:=l_query||'tr.nombre as tipo_religion,';
      l_query:=l_query||'tp.nombre as pais,';
      l_query:=l_query||'td.siglas,';
      l_query:=l_query||'rp.nombre as rigen_pensionaria,';
      l_query:=l_query||'st.nombre as situacion_trabajador,';
      l_query:=l_query||'tc.nombre as TIPO_CONTROL_PERSONAL,';
      l_query:=l_query||'cl.nombre as condicion_laboral,';
      l_query:=l_query||'tco.nombre as tipo_contrato,';
      l_query:=l_query||'ttt.nombre as TIPO_TIEMPO_TRABAJO,';
      l_query:=l_query||'rem.tipo_pago,';
      l_query:=l_query||'rem.fmr,';
      l_query:=l_query||'rem.sueldo,';
      l_query:=l_query||'a.id_perfil_puesto,';
      l_query:=l_query||'a.id_sedearea,';
      l_query:=l_query||'sa.id_depto_padre,';
      l_query:=l_query||'a.id_situacion_trabajador,';
      l_query:=l_query||'a.ID_TIPOESTADOCIVIL,';
      l_query:=l_query||'a.id_situacion_educativo,';
      l_query:=l_query||'a.id_tiporeligion,';
      l_query:=l_query||'a.id_tipopais,';
      l_query:=l_query||'a.id_tipodocumento,';
      l_query:=l_query||'a.id_regimen_pensionaria,';
      l_query:=l_query||'a.id_tipo_control_personal,';
      l_query:=l_query||'a.id_condicion_laboral,';
      l_query:=l_query||'a.id_tipo_contrato,';
      l_query:=l_query||'a.id_TIPO_TIEMPO_TRABAJO,';
      l_query:=l_query||'rem.id_remuneracion,';
      l_query:=l_query||'rem.ID_ESCALA_SALARIAL,';
      l_query:=l_query||'esa.PUNTMINIMO,';
      l_query:=l_query||'esa.PUNTMAXIMO, ';
      l_query:=l_query||'a.fecha_inicio,';
      l_query:=l_query||'a.fecha_fin_previsto, ';
      l_query:=l_query||'(esa.PUNTMINIMO/100)*:s_fmr as sueldo_min,';
      l_query:=l_query||'(esa.PUNTMAXIMO/100)*:s_fmr as sueldo_max, ';
      l_query:=l_query||'tex.nombre as nom_sexo, ';
      l_query:=l_query||'A.CORREO, ';
      l_query:=l_query||'A.CORREO_INST, ';
      l_query:=l_query||'A.CELULAR, ';
      l_query:=l_query||'B.ID_TIPO_JEFE, ';
      l_query:=l_query||'TJE.NOMBRE AS TIPO_JEFE, ';
      l_query:=l_query||'A.FEC_NACIMIENTO, ';
      l_query:=l_query||'A.NUM_DOCUMENTO ';
      
  
      l_query:=l_query||'from ENOC.vw_trabajador a ';
      l_query:=l_query||'inner join enoc.vw_perfil_puesto b on ';
      l_query:=l_query||'a.id_perfil_puesto=b.id_perfil_puesto ';
      l_query:=l_query||'inner join eliseo.vw_sede_area sa ';  
      l_query:=l_query||'on a.id_sedearea=sa.id_sedearea ';
      l_query:=l_query||'inner join eliseo.conta_entidad_depto ed on ';
      l_query:=l_query||'sa.id_entidad=ed.id_entidad ';
      l_query:=l_query||'and sa.id_depto_padre=ed.id_depto ';
      l_query:=l_query||'inner join moises.situacion_trabajador st ';
      l_query:=l_query||'on st.id_situacion_trabajador=a.id_situacion_trabajador ';
      l_query:=l_query||'left join moises.TIPO_ESTADO_CIVIL te ';
      l_query:=l_query||'on te.ID_TIPOESTADOCIVIL=a.ID_TIPOESTADOCIVIL ';
      l_query:=l_query||'left join moises.SITUACION_educativa se ';
      l_query:=l_query||'on se.id_situacion_educativo= a.id_situacion_educativo ';
      l_query:=l_query||'left join moises.tipo_religion tr ';
      l_query:=l_query||'on tr.id_tiporeligion=a.id_tiporeligion ';
      l_query:=l_query||'left join moises.tipo_pais tp ';
      l_query:=l_query||'on tp.id_tipopais=a.id_tipopais ';
      l_query:=l_query||'left join moises.tipo_documento td ';
      l_query:=l_query||'on td.id_tipodocumento=a.id_tipodocumento ';
      l_query:=l_query||'left join enoc.plla_regimen_pensionaria rp ';
      l_query:=l_query||'on rp.id_regimen_pensionaria=a.id_regimen_pensionaria ';
      l_query:=l_query||'left join moises.TIPO_CONTROL_PERSONAL tc ';
      l_query:=l_query||'on tc.id_tipo_control_personal=a.id_tipo_control_personal ';
      l_query:=l_query||'left join moises.condicion_laboral cl ';
      l_query:=l_query||'on cl.id_condicion_laboral=a.id_condicion_laboral ';
      l_query:=l_query||'left join enoc.plla_tipo_contrato tco ';
      l_query:=l_query||'on tco.id_tipo_contrato=a.id_tipo_contrato ';
      l_query:=l_query||'left join moises.TIPO_TIEMPO_TRABAJO ttt ';
      l_query:=l_query||'on ttt.id_TIPO_TIEMPO_TRABAJO = a.id_TIPO_TIEMPO_TRABAJO ';
      l_query:=l_query||'left join enoc.plla_remuneracion rem ';
      l_query:=l_query||'on rem.id_trabajador=a.id_trabajador ';
      l_query:=l_query||'and rem.vigencia=1 ';
      l_query:=l_query||'left join enoc.plla_ESCALA_SALARIAL esa ';
      l_query:=l_query||'on esa.ID_GRUPO_ESCALA=B.ID_GRUPO_ESCALA ';
      l_query:=l_query||'and a.id_entidad=esa.id_entidad ';
      l_query:=l_query||'and esa.id_depto =sa.id_depto_padre ';
      l_query:=l_query||'and esa.ID_ANHO=:s_anho ';
      l_query:=l_query||'left join MOISES.TIPO_SEXO tex ';
      l_query:=l_query||'on tex.SEXO=a.SEXO ';
      l_query:=l_query||'left join enoc.PLLA_TIPO_JEFE TJE ';
      l_query:=l_query||'on TJE.ID_TIPO_JEFE=B.ID_TIPO_JEFE ';
      l_query:=l_query||'where a.id_entidad=:s_entidad ';
      
      if P_ID_PERSONA>0 then
        l_query:=l_query||'and a.id_persona='||to_char(P_ID_PERSONA)||' ';
      end if;
      if P_SEXO is not null then
        l_query:=l_query||'and tex.SEXO IN('||P_SEXO||') ';
      end if;
      if P_ID_DEPTO is not null then
        l_query:=l_query||'and sa.id_depto_padre='||P_ID_DEPTO||' ';
      end if;
      if P_ID_AREA is not null then
        l_query:=l_query||'and sa.id_area in('||P_ID_AREA||') ';
      end if;
      
      if P_ID_SITUACION_TRABAJADOR is not null then
        l_query:=l_query||'and a.id_situacion_trabajador in('||ENOC.FC_REEMPLAZAR_COMA_XDOBLE(P_ID_SITUACION_TRABAJADOR)||') ';
      end if;
      
      if P_ID_TIPOESTADOCIVIL is not null then
        l_query:=l_query||'and a.ID_TIPOESTADOCIVIL in('||P_ID_TIPOESTADOCIVIL||') ';
      end if;
      
      if P_ID_SITUACION_EDUCATIVO is not null then
        l_query:=l_query||'and a.id_situacion_educativo in('||ENOC.FC_REEMPLAZAR_COMA_XDOBLE(P_ID_SITUACION_EDUCATIVO)||') ';
      end if;
      
      if P_ID_TIPORELIGION is not null then
        l_query:=l_query||'and a.id_tiporeligion in('||P_ID_TIPORELIGION||') ';
      end if;
      
      if P_ID_TIPOPAIS is not null then
        l_query:=l_query||'and a.ID_TIPOPAIS in('||P_ID_TIPOPAIS||') ';
      end if;
      
      if P_ID_TIPODOCUMENTO is not null then
        l_query:=l_query||'and a.ID_TIPODOCUMENTO in('||P_ID_TIPODOCUMENTO||') ';
      end if;
      
      if P_ID_REGIMEN_PENSIONARIA is not null then
        l_query:=l_query||'and a.ID_REGIMEN_PENSIONARIA in('||ENOC.FC_REEMPLAZAR_COMA_XDOBLE(P_ID_REGIMEN_PENSIONARIA)||') ';
      end if;
      
      if P_ID_REGIMEN_PENSIONARIA is not null then
        l_query:=l_query||'and a.ID_TIPO_CONTROL_PERSONAL in('||P_ID_TIPO_CONTROL_PERSONAL||') ';
      end if;
      
      if P_ID_CONDICION_LABORAL is not null then
        l_query:=l_query||'and a.ID_CONDICION_LABORAL in('||ENOC.FC_REEMPLAZAR_COMA_XDOBLE(P_ID_CONDICION_LABORAL)||') ';
      end if;
      
      if P_ID_TIPO_CONTRATO is not null then
        l_query:=l_query||'and a.ID_TIPO_CONTRATO in('||P_ID_TIPO_CONTRATO||') ';
      end if;
      
      if P_ID_TIPO_TIEMPO_TRABAJO is not null then
        l_query:=l_query||'and a.ID_TIPO_TIEMPO_TRABAJO in('||P_ID_TIPO_TIEMPO_TRABAJO||') ';
      end if;
      
      if P_ID_TIPO_JEFE is not null then
        l_query:=l_query||'and b.ID_TIPO_JEFE in('||P_ID_TIPO_JEFE||') ';
      end if;
      
      if P_ID_PUESTO >0 then
        l_query:=l_query||'and b.ID_PUESTO ='||P_ID_PUESTO||' ';
      end if;
       
      case P_TIPO_REP
           WHEN 'CONHIJOS' THEN 
             l_query:=l_query||'and a.id_persona in(select id_persona from MOISES.VINCULO_FAMILIAR where ID_TIPO_VINCULO_FAMILIAR in(''05'',''06'') ) ';
          ELSE
            l_error:=0;
      end case;
      
      if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and sa.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||')';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and sa.id_area in('||P_ID_AREAS_USER||')';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
      end if;
        
      if P_RESTRINGIDO='U' then
          l_query:=l_query||'and a.id_trabajador='||to_char(P_ID_USER)||' ';
      end if;
        
      
      EXECUTE IMMEDIATE l_query USING l_FMR,l_FMR, l_id_anho,P_ID_ENTIDAD;
      --open cursor for select l_query as q from dual;
      
      OPEN cursor FOR
      select 
      ID_TRABAJADOR,
      ID_PERSONA,
      APELLIDONOMBRE,
      NOMBRE,
      PATERNO,
      MATERNO,
      PUESTO,
      AREA,
      ID_DEPTO,
      CCOSTO,
      DEPTOPADRE,
      ESTADO_CIVIL,
      SITUACION_EDUCATIVO,
      TIPO_RELIGION,
      PAIS,
      SIGLAS,
      RIGEN_PENSIONARIA,
      SITUACION_TRABAJADOR,
      TIPO_CONTROL_PERSONAL,
      CONDICION_LABORAL,
      TIPO_CONTRATO,
      TIPO_TIEMPO_TRABAJO,
      TIPO_PAGO,
      FMR *100 as FMR,
      SUELDO,
      ID_PERFIL_PUESTO,
      ID_SEDEAREA,
      ID_DEPTO_PADRE,
      ID_SITUACION_TRABAJADOR,
      ID_TIPOESTADOCIVIL,
      ID_SITUACION_EDUCATIVO,
      ID_TIPORELIGION,
      ID_TIPOPAIS,
      ID_TIPODOCUMENTO,
      ID_REGIMEN_PENSIONARIA,
      ID_TIPO_CONTROL_PERSONAL,
      ID_CONDICION_LABORAL,
      ID_TIPO_CONTRATO,
      ID_TIPO_TIEMPO_TRABAJO,
      ID_REMUNERACION,
      ID_ESCALA_SALARIAL,
      PUNTMINIMO,
      PUNTMAXIMO,
      to_char(FECHA_INICIO,'DD/MM/YYYY') as FECHA_INICIO,
      to_char(FECHA_FIN_PREVISTA,'DD/MM/YYYY') as FECHA_FIN_PREVISTA,
      SUELDO_MIN,
      SUELDO_MAX,
      NOM_SEXO,
      CORREO,
      CORREO_INST,
      CELULAR,
      ID_TIPO_JEFE,
      TIPO_JEFE,
      to_char(FEC_NACIMIENTO,'DD/MM/YYYY') as FEC_NACIMIENTO,
      NUM_DOCUMENTO,
      L_FMR_ACT AS FMR_ACTUAL
      FROM ENOC.TT_REPORTE_GENERAL
      order by APELLIDONOMBRE;
      
  END SP_REPORTE_GENERAL;
  PROCEDURE SP_COPIAR_PERIODO_PLANILLA(P_ID_PERIODO_PLANILLA_ANT NUMBER, P_ID_PERIODO_PLANILLA NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) IS
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_periodo_proceso number;
    cursor curper is
    SELECT 
      ID_PERIODO_PROCESO,
      TIPO,
      ADD_MONTHS(FECHA_REGISTRO,1) as FECHA_REGISTRO,
      ADD_MONTHS(FECHA_APROBACION,1) as FECHA_APROBACION
    FROM PLLA_PERIODO_PROCESO 
    WHERE ID_PERIODO_PLANILLA=P_ID_PERIODO_PLANILLA_ANT
    AND TIPO=0
    AND VIGENCIA=1
    ORDER BY ID_PERIODO_PROCESO;
  begin
    FOR cur in curper LOOP
    BEGIN
      select coalesce(max(ID_PERIODO_PROCESO),0) + 1 into l_id_periodo_proceso from enoc.PLLA_PERIODO_PROCESO;
      INSERT INTO PLLA_PERIODO_PROCESO(
        ID_PERIODO_PROCESO,
        ID_PERIODO_PLANILLA,
        TIPO,
        FECHA_REGISTRO,
        FECHA_APROBACION,
        VIGENCIA,
        ID_USER_REG,
        CREATED_AT
      )values(
        l_id_periodo_proceso,
        P_ID_PERIODO_PLANILLA,
        cur.tipo,
        cur.FECHA_REGISTRO,
        cur.FECHA_APROBACION,
        1,
        P_ID_USER_REG,
        SYSDATE
      );
      insert into PLLA_PERIODO_PROCESO_MOD(
        ID_PERIODO_PROCESO,
        ID_MODULO,
        MODULO,
        VIGENCIA,
        ID_USER_REG,
        CREATED_AT
      )
      select 
        l_id_periodo_proceso,
        ID_MODULO,
        MODULO,
        1,
        P_ID_USER_REG,
        SYSDATE
      from PLLA_PERIODO_PROCESO_MOD
      where ID_PERIODO_PROCESO=cur.ID_PERIODO_PROCESO;
    END;     
    END LOOP;
   
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  end SP_COPIAR_PERIODO_PLANILLA;
  PROCEDURE SP_PERIODO_PLANILLA_CONTROL(P_ID_ENTIDAD NUMBER, P_COD_MODULO VARCHAR2,P_ID_USER NUMBER,P_FECHA DATE,P_TIPO_PER VARCHAR2,P_TIPO VARCHAR2, CURSOR OUT SYS_REFCURSOR ) IS
      --P_TIPO R: registro, A: aprobacion
      --P_TIPO_PER  P: periodo, M:mensual
      l_contar number;
      l_registrar number:=0;
      l_aprobar number:=0;
      l_fecha_inicio date;
      l_fecha_registro date;
      l_fecha_aprobacion date;
      l_fecha_cierre date;
      l_nerror number:=0;
      l_mensaje varchar2(200):='ok';
      l_id_mes number:=0;
      l_id_anho number:=0;
      l_fecha_act date:=TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD'), 'YYYY-MM-DD');
      l_id_periodo_planilla number;
      l_fecha_inicio_mes date;
      l_fecha_cierre_mes date;
      l_mes varchar2(50);
      BEGIN
      
        SELECT count(*) into l_contar
        FROM  ENOC.plla_periodo_planilla 
        where id_entidad=P_ID_ENTIDAD
        and (TO_DATE(TO_CHAR(l_fecha_act, 'YYYY-MM-DD'), 'YYYY-MM-DD') BETWEEN TO_DATE(TO_CHAR(fecha_inicio, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(fecha_cierre, 'YYYY-MM-DD'), 'YYYY-MM-DD'));
        
        if l_contar=0 then
          select nombre into l_mes from eliseo.conta_mes where id_mes = to_number(TO_CHAR(l_fecha_act, 'MM'));
          l_mensaje:= 'Falta generar periodo de planilla para '||l_mes||'-'||TO_CHAR(l_fecha_act, 'YYYY');
          l_nerror:=1;
          goto salida;
        end if;
              
        SELECT 
        id_periodo_planilla,
        fecha_inicio, 
        fecha_registro, 
        fecha_aprobacion, 
        fecha_cierre,
        id_mes,
        id_anho,
        TRUNC(to_date(to_char(id_anho)||'-'||to_char(id_mes)||'-1','YYYY-MM-DD'), 'MM'),
        TRUNC(LAST_DAY(to_date(to_char(id_anho)||'-'||to_char(id_mes)||'-1','YYYY-MM-DD')))
        into 
        l_id_periodo_planilla,
        l_fecha_inicio,
        l_fecha_registro,
        l_fecha_aprobacion,
        l_fecha_cierre,
        l_id_mes,
        l_id_anho,
        l_fecha_inicio_mes,
        l_fecha_cierre_mes
        FROM  ENOC.plla_periodo_planilla 
        where id_entidad=P_ID_ENTIDAD
        and (TO_DATE(TO_CHAR(l_fecha_act, 'YYYY-MM-DD'), 'YYYY-MM-DD') BETWEEN TO_DATE(TO_CHAR(fecha_inicio, 'YYYY-MM-DD'), 'YYYY-MM-DD') AND TO_DATE(TO_CHAR(fecha_cierre, 'YYYY-MM-DD'), 'YYYY-MM-DD'));
            
      
        if P_TIPO_PER ='P' then
          if P_FECHA<l_fecha_inicio then
            l_mensaje:= 'Esta fuera de inicio de planilla';--, debe iniciar en '||TO_CHAR(l_fecha_inicio, 'DD/MM/YYYY');
            l_nerror:=1;
            goto salida;
          end if;
        else
          if P_FECHA<l_fecha_inicio_mes then
            l_mensaje:= 'Esta fuera de inicio del mes';--, debe iniciar en '||TO_CHAR(l_fecha_inicio_mes, 'DD/MM/YYYY');
            l_nerror:=1;
            goto salida;
          end if;
        end if;
        
        select count(1) into l_contar 
        from ENOC.PLLA_PERIODO_PROCESO a, ENOC.PLLA_PERIODO_PROCESO_user  u 
          where a.id_periodo_proceso=u.id_periodo_proceso
          and u.id_user=P_ID_USER
          and a.id_periodo_planilla=l_id_periodo_planilla
          and a.vigencia=1
          and u.vigencia=1
          and a.id_periodo_proceso in(
            select x.id_periodo_proceso from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
            WHERE x.id_periodo_proceso=y.id_periodo_proceso
            and y.id_modulo=m.id_modulo
            and x.id_periodo_planilla=l_id_periodo_planilla
            and m.codigo=P_COD_MODULO
            and x.vigencia=1
            and y.vigencia=1
          );
        
        --por usuario
        if l_contar>0 then
          select max(a.fecha_registro), max(a.fecha_aprobacion)
          into l_fecha_registro, l_fecha_aprobacion
          from ENOC.PLLA_PERIODO_PROCESO a, ENOC.PLLA_PERIODO_PROCESO_user  u 
          where a.id_periodo_proceso=u.id_periodo_proceso
          and u.id_user=P_ID_USER
          and a.id_periodo_planilla=l_id_periodo_planilla
          and a.vigencia=1
          and u.vigencia=1
          and a.id_periodo_proceso in(
            select x.id_periodo_proceso from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
            WHERE x.id_periodo_proceso=y.id_periodo_proceso
            and y.id_modulo=m.id_modulo
            and x.id_periodo_planilla=l_id_periodo_planilla
            and m.codigo=P_COD_MODULO
            and x.vigencia=1
            and y.vigencia=1
          );
        else
        --por modulo
        
          select count(1) into l_contar 
          from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
          WHERE x.id_periodo_proceso=y.id_periodo_proceso
          and y.id_modulo=m.id_modulo
          and x.id_periodo_planilla=l_id_periodo_planilla
          and m.codigo=P_COD_MODULO
          and x.vigencia=1
          and y.vigencia=1
          and x.tipo=0;
          if l_contar>0 then
            select max(x.fecha_registro), max(x.fecha_aprobacion)
            into l_fecha_registro, l_fecha_aprobacion
            from ENOC.PLLA_PERIODO_PROCESO x, enoc.PLLA_PERIODO_PROCESO_MOD y, eliseo.lamb_modulo m
            WHERE x.id_periodo_proceso=y.id_periodo_proceso
            and y.id_modulo=m.id_modulo
            and x.id_periodo_planilla=l_id_periodo_planilla
            and m.codigo=P_COD_MODULO
            and x.vigencia=1
            and y.vigencia=1
            and x.tipo=0;
          end if;
        end if;
        if P_TIPO_PER ='P' then
          if l_fecha_act<l_fecha_cierre then
            if P_TIPO='R' then
                if l_fecha_act>l_fecha_registro and P_FECHA<=l_fecha_cierre then
                    l_mensaje:= '1-No puede registrar, solo es hasta '||TO_CHAR(P_FECHA, 'DD/MM/YYYY');
                    l_nerror:=1;
                    goto salida;
                end if;
            else
              if l_fecha_act>l_fecha_aprobacion and P_FECHA<l_fecha_cierre then
                  l_mensaje:= '2-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
              end if;
            end if;
          else
            if to_char(l_fecha_act,'YYYYMM')=to_char(l_fecha_cierre,'YYYYMM') then
              if P_TIPO='R' then
                l_mensaje:= '3-No puede registrar, solo es hasta '||TO_CHAR(l_fecha_registro, 'DD/MM/YYYY');
              else
                l_mensaje:= '4-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
              end if;
              l_nerror:=1;
              goto salida;
            end if;
           end if;
        else
           if P_FECHA<l_fecha_cierre_mes and l_fecha_act >= l_fecha_cierre_mes then
            if P_TIPO='R' then
                if P_FECHA>l_fecha_registro then--and l_fecha_act>P_FECHA then
                    l_mensaje:= '5-No puede registar, solo es hasta '||TO_CHAR(l_fecha_registro, 'DD/MM/YYYY');
                    l_nerror:=1;
                    goto salida;
                end if;
            else
              if P_FECHA>l_fecha_aprobacion then--and l_fecha_act>P_FECHA  then
                  l_mensaje:= '6-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
              end if;
            end if;
           else
            if to_char(P_FECHA,'YYYYMM')=to_char(l_fecha_cierre_mes,'YYYYMM')  then-- and l_fecha_act >= l_fecha_cierre_mes then
              if P_TIPO='R' then
                if P_FECHA>l_fecha_registro then
                  l_mensaje:= '7-No puede registrar, solo es hasta '||TO_CHAR(l_fecha_registro, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
                end if;
              else
                if P_FECHA>l_fecha_aprobacion then
                  l_mensaje:= '8-No puede aprobar, solo es hasta '||TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY');
                  l_nerror:=1;
                  goto salida;
                  end if;
              end if;
              
            end if;
           end if;
        end if;
        <<salida>>
        OPEN cursor FOR  
        select
          l_id_periodo_planilla as id_periodo_planilla,
          TO_CHAR(l_fecha_inicio, 'DD/MM/YYYY') as fecha_inicio,
          TO_CHAR(l_fecha_registro, 'DD/MM/YYYY') as fecha_registro,
          TO_CHAR(l_fecha_aprobacion, 'DD/MM/YYYY') as fecha_aprobacion,
          TO_CHAR(l_fecha_cierre, 'DD/MM/YYYY') as fecha_cierre,
          l_id_mes as id_mes,
          l_id_anho as id_anho,
          TO_CHAR(l_fecha_inicio_mes, 'DD/MM/YYYY') as fecha_inicio_mes,
          TO_CHAR(l_fecha_cierre_mes, 'DD/MM/YYYY') as fecha_cierre_mes,
          l_nerror as nerror,
          l_mensaje as mensaje
        from dual;
      END SP_PERIODO_PLANILLA_CONTROL;
   
      
    PROCEDURE SP_GENERAR_TRABAJADOR_SCTR(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_TRABAJADOR_SCTR NUMBER, P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number, P_MSGERROR out varchar2) IS
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_fmr number(10,5):= 0;
    l_igv number(10,5):= 0;
    l_tasa_salud number(10,5):= 0;
    l_factor_de number(10,5):= 0;
    l_pension number(10,5):= 0;
    l_rmv number(10,5):= 0;
    l_max_id number:=0;
    l_anhomes VARCHAR2(10);
  begin
  
    select  count(1) into l_contar from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO;
    if l_contar=0 then
      l_error :=1;
      l_msgerror := 'Falta generar configuración de parametro para el periodo '||P_ID_ANHO;
      goto salida;
    end if;
    
     if P_ID_MES<10 then
        l_anhomes:=to_char(P_ID_ANHO)||'0'||to_char(P_ID_MES);
      else
        l_anhomes:=to_char(P_ID_ANHO)||to_char(P_ID_MES);
      end if;
    
    select coalesce(importe,0) into l_fmr from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'PARAM_FMR';
    select coalesce(importe,0) into l_igv from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'PARAM_IGV';
    select coalesce(importe,0) into l_tasa_salud from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'TASA_SALUD';
    select coalesce(importe,0) into l_factor_de from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'FACTOR_DE';
    select coalesce(importe,0) into l_rmv from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'PARAM_RMV';
    select coalesce(importe,0) into l_pension from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'PARAM_PENSION';
    
    DELETE FROM TT_TRABAJADOR_SCTR;
    
    if P_ID_TRABAJADOR_SCTR>0 then
      insert into ENOC.TT_TRABAJADOR_SCTR(
        ID_TRABAJADOR_SCTR,
        ID_PERFIL_PUESTO,
        ID_TRABAJADOR,
        SCTR,
        SUELDO_REAL,
        SUELDO,
        TASA_SALUD,
        IGV,
        FMR,
        RMV,
        FACTOR_DE,
        COSTO_SALUD,
        TASA_PENSION,
        COSTO_PENSION
      )
      select 
      P_ID_TRABAJADOR_SCTR,
      pp.id_perfil_puesto,
      t.id_trabajador,
      pp.sctr,
      case when t.id_condicion_laboral='M' then 
        re.fmr*l_fmr 
      else 
        case when re.tipo_pago='H' then 
          (select coalesce(sum(d.importe),0) from enoc.PLLA_REMUNERACION_DET  d 
          where d.id_remuneracion=re.id_remuneracion
          and d.id_anho=P_ID_ANHO
          and d.id_mes=P_ID_MES
          and d.vigencia=1
          ) 
        else 
          re.sueldo 
        end      
      end as SUELDO_REAL,
      0,
      l_tasa_salud,
      l_igv,
      l_fmr,
      --CASE WHEN t.id_tipo_tiempo_trabajo=2 THEN l_rmv/2 ELSE l_rmv END,
      l_rmv,
      l_factor_de,
      0,
      l_pension,
      0
      from moises.trabajador t, enoc.plla_perfil_puesto pp,enoc.PLLA_REMUNERACION re 
      where t.id_perfil_puesto=pp.id_perfil_puesto
      AND t.id_trabajador=re.id_trabajador
      and re.vigencia=1
      and t.id_entidad=P_ID_ENTIDAD
      AND T.ID_TRABAJADOR IN(
        SELECT X.ID_TRABAJADOR FROM  ENOC.PLLA_TRABAJADOR_SCTR X
        WHERE X.ID_TRABAJADOR_SCTR=P_ID_TRABAJADOR_SCTR
      );
    else
      insert into ENOC.TT_TRABAJADOR_SCTR(
        ID_TRABAJADOR_SCTR,
        ID_PERFIL_PUESTO,
        ID_TRABAJADOR,
        SCTR,
        SUELDO_REAL,
        SUELDO,
        TASA_SALUD,
        IGV,
        FMR,
        RMV,
        FACTOR_DE,
        COSTO_SALUD,
        TASA_PENSION,
        COSTO_PENSION
      )
      select 
      0,
      pp.id_perfil_puesto,
      t.id_trabajador,
      pp.sctr,
      case when t.id_condicion_laboral='M' then 
        re.fmr*l_fmr 
      else 
        case when re.tipo_pago='H' then 
          (select coalesce(sum(d.importe),0) from enoc.PLLA_REMUNERACION_DET  d 
          where d.id_remuneracion=re.id_remuneracion
          and d.id_anho=P_ID_ANHO
          and d.id_mes=P_ID_MES
          and d.vigencia=1
          ) 
        else 
          re.sueldo 
        end      
      end as SUELDO_REAL,
      0,
      l_tasa_salud,
      l_igv,
      l_fmr,
      --CASE WHEN t.id_tipo_tiempo_trabajo=2 THEN l_rmv/2 ELSE l_rmv END,
      l_rmv,
      l_factor_de,
      0,
      l_pension,
      0
      from moises.trabajador t, enoc.plla_perfil_puesto pp,enoc.PLLA_REMUNERACION re, enoc.VW_ENT_DEP_AREA_CCOSTO sa
      where t.id_perfil_puesto=pp.id_perfil_puesto
      AND t.id_trabajador=re.id_trabajador
      AND t.id_sedearea=sa.id_sedearea
      and re.vigencia=1
      and t.id_entidad=P_ID_ENTIDAD
      and sa.id_depto_padre=P_ID_DEPTO
      and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end =P_ID_TRABAJADOR
      and coalesce(pp.sctr,'N') ='S'
      and t.id_tipo_tiempo_trabajo not in(3)
      AND CASE WHEN T.ID_SITUACION_TRABAJADOR='0' THEN  to_char(t.FECHA_FIN_efectivo,'YYYYMM') ELSE l_anhomes END=l_anhomes
      and t.id_trabajador not in(
        select x.id_trabajador from
        enoc.PLLA_TRABAJADOR_SCTR x
        where x.id_anho=P_ID_ANHO
        and x.id_mes=P_ID_MES
      );
      
      
    end if;
    
    UPDATE ENOC.TT_TRABAJADOR_SCTR SET
    SUELDO=CASE WHEN SUELDO_REAL<RMV THEN RMV ELSE SUELDO_REAL END;
      
    UPDATE ENOC.TT_TRABAJADOR_SCTR SET
    COSTO_SALUD=round((SUELDO * (TASA_SALUD/100 ))*(1+IGV),2),
    COSTO_PENSION=round((SUELDO * (TASA_PENSION/100 ))*(1+IGV),2);
    --COSTO_SALUD=((SUELDO) + ( SUELDO * TASA_SALUD * IGV ))/ 100;
    
    if P_ID_TRABAJADOR_SCTR>0 then
    
      MERGE INTO ENOC.PLLA_TRABAJADOR_SCTR S 
      USING(
      select 
      ID_TRABAJADOR_SCTR,
      ID_PERFIL_PUESTO,
      ID_TRABAJADOR,
      SCTR,
      SUELDO_REAL,
      SUELDO,
      TASA_SALUD,
      IGV,
      FMR,
      RMV,
      FACTOR_DE,
      COSTO_SALUD,
      TASA_PENSION,
      COSTO_PENSION
      from ENOC.TT_TRABAJADOR_SCTR
      where ID_TRABAJADOR_SCTR=P_ID_TRABAJADOR_SCTR
      )T ON(T.ID_TRABAJADOR_SCTR=S.ID_TRABAJADOR_SCTR)
      WHEN  MATCHED THEN UPDATE SET 
      S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
      S.SCTR=T.SCTR,
      S.SUELDO_REAL=T.SUELDO_REAL,
      S.SUELDO=T.SUELDO,
      S.TASA_SALUD=T.TASA_SALUD,
      S.IGV=T.IGV,
      S.FMR=T.FMR,
      S.RMV=T.RMV,
      S.FACTOR_DE=T.FACTOR_DE,
      S.COSTO_SALUD=T.COSTO_SALUD,
      S.TASA_PENSION=T.TASA_PENSION,
      S.COSTO_PENSION=T.COSTO_PENSION;
      
    ELSE
      select coalesce(max(ID_TRABAJADOR_SCTR),0) into l_max_id from ENOC.PLLA_TRABAJADOR_SCTR;
      insert into enoc.PLLA_TRABAJADOR_SCTR(
        ID_TRABAJADOR_SCTR,
        ID_PERFIL_PUESTO,
        ID_TRABAJADOR,
        ID_ANHO,
        ID_MES,
        SCTR,
        SUELDO_REAL,
        SUELDO,
        TASA_SALUD,
        IGV,
        FMR,
        RMV,
        FACTOR_DE,
        COSTO_SALUD,
        VIGENCIA,
        ID_USER_REG,
        FECHA_REG,
        TASA_PENSION,
        COSTO_PENSION
        )
        select 
          (row_number() OVER( ORDER BY ID_TRABAJADOR ASC )) + l_max_id AS  ID_TRABAJADOR_SCTR,
          ID_PERFIL_PUESTO,
          ID_TRABAJADOR,
          P_ID_ANHO,
          P_ID_MES,
          SCTR,
          SUELDO_REAL,
          SUELDO,
          TASA_SALUD,
          IGV,
          FMR,
          RMV,
          FACTOR_DE,
          COSTO_SALUD,
          1,
          P_ID_USER_REG,
          sysdate,
          TASA_PENSION,
          COSTO_PENSION
        from ENOC.TT_TRABAJADOR_SCTR
        order by ID_TRABAJADOR;
    END IF;

    <<salida>>
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  end SP_GENERAR_TRABAJADOR_SCTR;
  
  PROCEDURE SP_REPORTE_VIDA_LEY(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_AREA NUMBER,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIPO_TIEMPO_TRABAJO NUMBER,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_DATO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREAS_USER VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        )
      IS
       l_query varchar2(4000):='';
       l_anhomes varchar2(10);
       l_id_tipo_nivel_vista number;
      BEGIN
      
       if P_RESTRINGIDO='S' then
          select id_tipo_nivel_vista into l_id_tipo_nivel_vista from eliseo.lamb_acceso_nivel where id_acceso_nivel=P_ID_ACCESO_NIVEL;
      end if;
      --activos
      l_query:='INSERT INTO ENOC.TT_REP_SUELDO_MENSUAL (ID_TRABAJADOR,TOTAL) ';
      l_query:=l_query||'select ';
      l_query:=l_query||'t.id_trabajador,';
      l_query:=l_query||'COALESCE(rem.sueldo,0) ';       
      l_query:=l_query||'from ENOC.vw_trabajador t ';
      l_query:=l_query||'inner join enoc.vw_ent_dep_area_ccosto cc on ';
      l_query:=l_query||'cc.ID_SEDEAREA=t.ID_SEDEAREA ';
      l_query:=l_query||'left join ENOC.PLLA_REMUNERACION rem on  ';  
      l_query:=l_query||'rem.id_trabajador=t.id_trabajador and rem.vigencia=1 ';
      l_query:=l_query||'where t.id_entidad=:s_entidad ';
      l_query:=l_query||'and t.id_situacion_trabajador=''1'' ';
      l_query:=l_query||'and t.ID_CONDICION_LABORAL not in(''P'',''PP'') ';
      if P_ID_DEPTO is not null then
        l_query:=l_query||'and cc.id_depto_padre='''||P_ID_DEPTO||''' ';
      end if;
      if P_ID_AREA > 0 then
        l_query:=l_query||'and cc.id_area ='||P_ID_AREA||' ';
      end if;
      if P_ID_CONDICION_LABORAL is not null then
        l_query:=l_query||'and t.ID_CONDICION_LABORAL ='''||P_ID_CONDICION_LABORAL||''' ';
      end if;
      if P_ID_TIPO_TIEMPO_TRABAJO > 0 then
        l_query:=l_query||'and t.ID_TIPO_TIEMPO_TRABAJO ='||P_ID_TIPO_TIEMPO_TRABAJO||' ';
      end if;
      if P_DATO IS NOT NULL then
        l_query:=l_query||'and (upper(convert(T.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
      end if;
       
                  
      if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and cc.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||') ';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and cc.id_area in('||P_ID_AREAS_USER||') ';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
      end if;
        
      if P_RESTRINGIDO='U' then
          l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
      end if;  
      
      DBMS_OUTPUT.PUT_LINE(l_query);
      
      EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD;

      --cesados
      l_query:='INSERT INTO ENOC.TT_REP_SUELDO_MENSUAL (ID_TRABAJADOR,TOTAL) ';
      l_query:=l_query||'select ';
      l_query:=l_query||'t.id_trabajador,';
      l_query:=l_query||'COALESCE(rem.sueldo,0) ';       
      l_query:=l_query||'from ENOC.vw_trabajador t ';
      l_query:=l_query||'inner join enoc.vw_ent_dep_area_ccosto cc on ';
      l_query:=l_query||'cc.ID_SEDEAREA=t.ID_SEDEAREA ';
      l_query:=l_query||'left join ENOC.PLLA_REMUNERACION rem on  ';  
      l_query:=l_query||'rem.id_trabajador=t.id_trabajador and rem.vigencia=1 ';
      l_query:=l_query||'where t.id_entidad=:s_entidad ';
      l_query:=l_query||'and t.id_situacion_trabajador=''0'' ';
      l_query:=l_query||'and t.ID_CONDICION_LABORAL not in(''P'',''PP'') ';
      l_query:=l_query||'and to_char(t.FECHA_FIN_efectivo,''YYYYMM'') =:s_anhomes ';
      if P_ID_DEPTO is not null then
        l_query:=l_query||'and cc.id_depto_padre='''||P_ID_DEPTO||''' ';
      end if;
      if P_ID_AREA > 0 then
        l_query:=l_query||'and cc.id_area ='||P_ID_AREA||' ';
      end if;
      if P_ID_CONDICION_LABORAL is not null then
        l_query:=l_query||'and t.ID_CONDICION_LABORAL ='''||P_ID_CONDICION_LABORAL||''' ';
      end if;
      if P_ID_TIPO_TIEMPO_TRABAJO > 0 then
        l_query:=l_query||'and t.ID_TIPO_TIEMPO_TRABAJO ='||P_ID_TIPO_TIEMPO_TRABAJO||' ';
      end if;
      if P_DATO IS NOT NULL then
        l_query:=l_query||'and (upper(convert(T.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
      end if;
                  
      if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and cc.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||') ';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and cc.id_area in('||P_ID_AREAS_USER||') ';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
      end if;
        
      if P_RESTRINGIDO='U' then
          l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
      end if; 
      if P_ID_MES<10 then
        l_anhomes:=to_char(P_ID_ANHO)||'0'||to_char(P_ID_MES);
      else
        l_anhomes:=to_char(P_ID_ANHO)||to_char(P_ID_MES);
      end if;
      
      EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,l_anhomes;
      
      update ENOC.TT_REP_SUELDO_MENSUAL set adicional=0, importe=0;
      --sueldo mensual
      MERGE INTO ENOC.TT_REP_SUELDO_MENSUAL S 
      USING(
        select coalesce(sum(w.importe),0) as total,rr.ID_TRABAJADOR from ENOC.PLLA_REMUNERACION_DET w , ENOC.PLLA_REMUNERACION rr
        where w.ID_REMUNERACION=rr.ID_REMUNERACION
        and rr.ID_TRABAJADOR in(
          select ID_TRABAJADOR from ENOC.TT_REP_SUELDO_MENSUAL
        )
        and w.id_anho=P_ID_ANHO
        and w.id_mes=P_ID_MES
        group by rr.ID_TRABAJADOR
      )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
      WHEN  MATCHED THEN UPDATE SET  
      S.importe=T.total;
    
      --adicional
      MERGE INTO ENOC.TT_REP_SUELDO_MENSUAL S 
      USING(
        select coalesce(sum(q.importe),0) as total,q.ID_TRABAJADOR from ENOC.VW_ADICIONAL_DET q, ENOC.PLLA_CONCEPTO_PLANILLA u
        where q.ID_CONCEPTO_PLANILLA=u.ID_CONCEPTO_PLANILLA
        and  q.ID_TRABAJADOR in(
            select ID_TRABAJADOR from ENOC.TT_REP_SUELDO_MENSUAL
        )
        and u.ID_CONCEPTOAPS=1000
        and q.id_anho=P_ID_ANHO
        and q.id_mes=P_ID_MES
        group by q.ID_TRABAJADOR
      )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
      WHEN  MATCHED THEN UPDATE SET  
      S.ADICIONAL=T.total;
      
     
      
      OPEN cursor FOR
      select 
      t.id_persona,
      t.id_trabajador,
      t.paterno,
      t.materno,
      t.nombre,
      t.sexo,
      t.apellidonombre,
      to_char(t.FEC_NACIMIENTO,'DD/MM/YYYY') as FEC_NACIMIENTO,
      t.ID_TIPODOCUMENTO,
      tdc.siglas as tipodocumento,
      t.NUM_DOCUMENTO,
      to_char(t.FECHA_INICIO,'DD/MM/YYYY') as FECHA_INICIO,
      cc.depto_padre,
      cc.ID_DEPTO,
      t.id_perfil_puesto,
      ppp.PUESTO,
      to_char(t.FECHA_FIN_PREVISTO,'DD/MM/YYYY') as FECHA_FIN,
      to_char(t.FECHA_FIN_efectivo,'DD/MM/YYYY') as FECHA_FIN_efectivo,
      tt.importe as sueldo_men,
      tt.adicional,
      tt.total as sueldo_fijo,
      tt.importe+tt.adicional+tt.total as sueldo,
      cc.area,
      cl.nombre as condicion_laboral,
      tr.nombre as tiempo_trabajo,
      P_ID_ANHO as id_anho,
      P_ID_MES as id_mes
      from enoc.vw_trabajador t
      inner join ENOC.TT_REP_SUELDO_MENSUAL tt on tt.id_trabajador=t.id_trabajador
      inner join enoc.vw_ent_dep_area_ccosto cc on cc.ID_SEDEAREA=t.ID_SEDEAREA
      inner join moises.tipo_documento tdc on tdc.ID_TIPODOCUMENTO=t.ID_TIPODOCUMENTO
      inner join enoc.vw_perfil_puesto ppp on ppp.id_perfil_puesto=t.id_perfil_puesto
      inner join moises.condicion_laboral cl on cl.id_condicion_laboral=t.id_condicion_laboral
      inner join moises.tipo_tiempo_trabajo tr on tr.id_tipo_tiempo_trabajo=t.id_tipo_tiempo_trabajo
      order by paterno,materno,NOMBRE;
      
  END SP_REPORTE_VIDA_LEY;
  
  PROCEDURE SP_REPORTE_JAR(
        P_ID_ENTIDAD NUMBER,
        P_ID_DEPTO VARCHAR2,
        P_ID_AREA NUMBER,
        P_ID_CONDICION_LABORAL VARCHAR2,
        P_ID_TIPO_TIEMPO_TRABAJO NUMBER,
        P_ID_ANHO NUMBER,
        P_ID_MES NUMBER,
        P_DATO VARCHAR2,
        P_RESTRINGIDO VARCHAR2,
        P_ID_ACCESO_NIVEL NUMBER,
        P_ID_AREAS_USER VARCHAR2,
        P_ID_USER NUMBER,
        CURSOR OUT SYS_REFCURSOR
        )
      IS
       l_query varchar2(4000):='';
       l_anhomes varchar2(10);
       l_id_tipo_nivel_vista number;
       l_fecha_rep varchar2(12);
      BEGIN
       if P_ID_MES<10 then
        l_anhomes:=to_char(P_ID_ANHO)||'0'||to_char(P_ID_MES);
        l_fecha_rep:=to_char(P_ID_ANHO)||'-0'||to_char(P_ID_MES)||'-01';
      else
        l_anhomes:=to_char(P_ID_ANHO)||to_char(P_ID_MES);
        l_fecha_rep:=to_char(P_ID_ANHO)||'-'||to_char(P_ID_MES)||'-01';
      end if;
      
       if P_RESTRINGIDO='S' then
          select id_tipo_nivel_vista into l_id_tipo_nivel_vista from eliseo.lamb_acceso_nivel where id_acceso_nivel=P_ID_ACCESO_NIVEL;
      end if;
      --activos
      l_query:='INSERT INTO ENOC.TT_REPORTE_JAR (ID_TRABAJADOR,
          ID_PERSONA,
          SUELDO,
          SUELDO_MEN,
          SUELDO_TOTAL,
          ID_TIPO_CATEG_OCUPA,
          HORA_SEMANA,
          HORA_MEN,
          HORA_REAL,
          TIPO_PAGO,
          FECHA_INICIO,
          FECHA_FIN_PREVISTO,
          FECHA_FIN_EFECTIVO,
          ID_SITUACION_TRABAJADOR,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO,
          DIAS_MEN,
          DIAS_REAL,
          F_INI,
          F_FIN,
          DIAS_VAC,
          DIAS_LIC,
          DIAS_MES,
          ID_TIPO_HORARIO) ';
      l_query:=l_query||'select 
        t.id_trabajador,
        t.id_persona,
        COALESCE(rem.sueldo,0) ,
        0,0,
        c.ID_TIPO_CATEG_OCUPA,
        case when t.ID_TIPO_TIEMPO_TRABAJO=2 then ceil(O.HORA_SEMANA/2) else case when t.ID_CONDICION_LABORAL =''PP'' then 30 else O.HORA_SEMANA end  end ,
        (case when t.ID_TIPO_TIEMPO_TRABAJO=2 then ceil(O.HORA_SEMANA/2) else  case when t.ID_CONDICION_LABORAL =''PP'' then 30 else O.HORA_SEMANA end end)*4,
        0,
        c.TIPO_PAGO, 
        t.FECHA_INICIO,
        t.FECHA_FIN_PREVISTO,
        t.FECHA_FIN_EFECTIVO,
        t.id_situacion_trabajador,
        t.ID_CONDICION_LABORAL,
        T.ID_TIPO_TIEMPO_TRABAJO,
        30,
        0,
        case when t.FECHA_INICIO<TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD'') then TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD'') else t.FECHA_INICIO end AS F_Ini,
        case when t.id_condicion_laboral in(''M'',''E'') then TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) else
            CASE WHEN t.FECHA_FIN_PREVISTO>TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) then TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) else t.FECHA_FIN_PREVISTO end
        end AS F_FIN,
        0,0,0,T.ID_TIPO_HORARIO 
        from ENOC.vw_trabajador t inner join enoc.plla_contrato c on c.id_contrato=t.id_contrato
        INNER JOIN ENOC.PLLA_TIPO_CATEG_OCUPA O ON O.ID_TIPO_CATEG_OCUPA=C.ID_TIPO_CATEG_OCUPA
        inner join enoc.vw_ent_dep_area_ccosto cc on 
        cc.ID_SEDEAREA=t.ID_SEDEAREA 
        left join ENOC.PLLA_REMUNERACION rem on    
        rem.id_trabajador=t.id_trabajador and rem.vigencia=1 
        where t.id_entidad=:entidad 
        and t.id_situacion_trabajador=''1'' 
        and t.ID_CONDICION_LABORAL not in(''CND'') 
        AND to_char(case when t.FECHA_INICIO<TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD'') then TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD'') else t.FECHA_INICIO end,''YYYYMM'')=:anhomes 
        AND to_char(case when t.id_condicion_laboral in(''M'',''E'') then TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) else
                      CASE WHEN t.FECHA_FIN_PREVISTO>TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) then TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) else t.FECHA_FIN_PREVISTO end
                  end,
        ''YYYYMM'')=:anhomes1 ';
      if P_ID_DEPTO is not null then
        l_query:=l_query||'and cc.id_depto_padre='''||P_ID_DEPTO||''' ';
      end if;
      if P_ID_AREA > 0 then
        l_query:=l_query||'and cc.id_area ='||P_ID_AREA||' ';
      end if;
      if P_ID_CONDICION_LABORAL is not null then
        l_query:=l_query||'and t.ID_CONDICION_LABORAL ='''||P_ID_CONDICION_LABORAL||''' ';
      end if;
      if P_ID_TIPO_TIEMPO_TRABAJO > 0 then
        l_query:=l_query||'and t.ID_TIPO_TIEMPO_TRABAJO ='||P_ID_TIPO_TIEMPO_TRABAJO||' ';
      end if;
      if P_DATO IS NOT NULL then
        l_query:=l_query||'and (upper(convert(T.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
      end if;
       
                  
      if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and cc.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||') ';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and cc.id_area in('||P_ID_AREAS_USER||') ';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
      end if;
        
      if P_RESTRINGIDO='U' then
          l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
      end if;  
      
      --DBMS_OUTPUT.PUT_LINE(l_query);
      
      EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,l_anhomes,l_anhomes;

      --cesados
       l_query:='INSERT INTO ENOC.TT_REPORTE_JAR (ID_TRABAJADOR,
          ID_PERSONA,
          SUELDO,
          SUELDO_MEN,
          SUELDO_TOTAL,
          ID_TIPO_CATEG_OCUPA,
          HORA_SEMANA,
          HORA_MEN,
          HORA_REAL,
          TIPO_PAGO,
          FECHA_INICIO,
          FECHA_FIN_PREVISTO,
          FECHA_FIN_EFECTIVO,
          ID_SITUACION_TRABAJADOR,
          ID_CONDICION_LABORAL,
          ID_TIPO_TIEMPO_TRABAJO,
          DIAS_MEN,
          DIAS_REAL,
          F_INI,
          F_FIN,
          DIAS_VAC,
          DIAS_LIC,
          DIAS_MES,
          ID_TIPO_HORARIO) ';
      l_query:=l_query||'select 
        t.id_trabajador,
        t.id_persona,
        COALESCE(rem.sueldo,0) ,
        0,0,
        c.ID_TIPO_CATEG_OCUPA,
        case when t.ID_TIPO_TIEMPO_TRABAJO=2 then ceil(O.HORA_SEMANA/2) else case when t.ID_CONDICION_LABORAL =''PP'' then 30 else O.HORA_SEMANA end  end ,
        (case when t.ID_TIPO_TIEMPO_TRABAJO=2 then ceil(O.HORA_SEMANA/2) else  case when t.ID_CONDICION_LABORAL =''PP'' then 30 else O.HORA_SEMANA end end)*4,
        0,
        c.TIPO_PAGO, 
        t.FECHA_INICIO,
        t.FECHA_FIN_PREVISTO,
        t.FECHA_FIN_EFECTIVO,
        t.id_situacion_trabajador,
        t.ID_CONDICION_LABORAL,
        T.ID_TIPO_TIEMPO_TRABAJO,
        30,
        0,
        case when t.FECHA_INICIO<TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD'') then TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD'') else t.FECHA_INICIO end AS F_Ini,
        case when t.id_condicion_laboral in(''M'',''E'') then TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) else
            CASE WHEN t.FECHA_FIN_PREVISTO>TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) then TRUNC(LAST_DAY(TO_DATE('''||l_fecha_rep||''',''YYYY-MM-DD''))) else t.FECHA_FIN_PREVISTO end
        end AS F_FIN,
        0,0,0, T.ID_TIPO_HORARIO 
        from ENOC.vw_trabajador t inner join enoc.plla_contrato c on c.id_contrato=t.id_contrato
        INNER JOIN ENOC.PLLA_TIPO_CATEG_OCUPA O ON O.ID_TIPO_CATEG_OCUPA=C.ID_TIPO_CATEG_OCUPA
        inner join enoc.vw_ent_dep_area_ccosto cc on 
        cc.ID_SEDEAREA=t.ID_SEDEAREA 
        left join ENOC.PLLA_REMUNERACION rem on    
        rem.id_trabajador=t.id_trabajador and rem.vigencia=1 
        where t.id_entidad=:entidad 
        and t.id_situacion_trabajador=''0'' 
        and t.ID_CONDICION_LABORAL not in(''CND'') 
        and to_char(t.FECHA_FIN_efectivo,''YYYYMM'') =:s_anhomes ';
      if P_ID_DEPTO is not null then
        l_query:=l_query||'and cc.id_depto_padre='''||P_ID_DEPTO||''' ';
      end if;
      if P_ID_AREA > 0 then
        l_query:=l_query||'and cc.id_area ='||P_ID_AREA||' ';
      end if;
      if P_ID_CONDICION_LABORAL is not null then
        l_query:=l_query||'and t.ID_CONDICION_LABORAL ='''||P_ID_CONDICION_LABORAL||''' ';
      end if;
      if P_ID_TIPO_TIEMPO_TRABAJO > 0 then
        l_query:=l_query||'and t.ID_TIPO_TIEMPO_TRABAJO ='||P_ID_TIPO_TIEMPO_TRABAJO||' ';
      end if;
      if P_DATO IS NOT NULL then
        l_query:=l_query||'and (upper(convert(T.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_DATO||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
      end if;
       
                  
      if P_RESTRINGIDO='S' then
            
          if l_id_tipo_nivel_vista = 3 then
              l_query:=l_query||'and cc.id_depto_padre in(select id_depto from enoc.vw_acceso_nivel where id_acceso_nivel='||to_char(P_ID_ACCESO_NIVEL)||') ';
          end if;
          if l_id_tipo_nivel_vista = 4 then
              l_query:=l_query||'and cc.id_area in('||P_ID_AREAS_USER||') ';
          end if;
          if l_id_tipo_nivel_vista = 5 then
              l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
          end if;
      end if;
        
      if P_RESTRINGIDO='U' then
          l_query:=l_query||'and t.id_trabajador='||to_char(P_ID_USER)||' ';
      end if;  
      
      --DBMS_OUTPUT.PUT_LINE(l_query);
      
     EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,l_anhomes;
           
      --sueldo mensual
      MERGE INTO ENOC.TT_REPORTE_JAR S 
      USING(
        select coalesce(sum(w.importe),0) as total,
        rr.ID_TRABAJADOR,
        coalesce(sum(w.dias),0) as dias,
        coalesce(sum(case when w.ID_TIPO_CANTIDAD=1 then  w.horas else 0 end),0) as horas
        from ENOC.PLLA_REMUNERACION_DET w , ENOC.PLLA_REMUNERACION rr
        where w.ID_REMUNERACION=rr.ID_REMUNERACION
        and  rr.ID_TRABAJADOR in(
            select r.ID_TRABAJADOR from ENOC.TT_REPORTE_JAR r
            where r.TIPO_PAGO='H'
        )        
        and w.id_anho=P_ID_ANHO
        and w.id_mes=P_ID_MES
        group by rr.ID_TRABAJADOR
      )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
      WHEN  MATCHED THEN UPDATE SET  
      S.SUELDO_MEN=T.total,
      S.HORA_MEN=T.horas,
      S.HORA_REAL=T.horas,
      s.HORA_SEMANA=0,
      s.DIAS_MEN=T.dias,
      s.DIAS_REAL=T.dias;
      
      update ENOC.TT_REPORTE_JAR set 
      dias_mes=to_number(to_char(TRUNC(LAST_DAY(TO_DATE(l_fecha_rep,'YYYY-MM-DD'))),'DD')),
      DIAS_FAL =0,
      HORAS_VAC  =0,
      HORAS_LIC  =0, 
      HORAS_FAL  =0,
      sueldo_total=sueldo+sueldo_men;
      
      update ENOC.TT_REPORTE_JAR set 
      dias_men=case when (f_fin-f_ini)+1 = dias_mes then 30 else (f_fin-f_ini)+1 end 
      where TIPO_PAGO='F';
      
      
      MERGE INTO ENOC.TT_REPORTE_JAR S 
      USING(
        select 
         count(1) as DIAS,ID_TRABAJADOR
         from  ENOC.PLLA_ASISTENCIA 
         where to_char(fecha,'YYYYMM')=l_anhomes
         and id_motivo_asist in('PLH','A','SA','DO')
         and ID_TRABAJADOR in(
              select r.ID_TRABAJADOR from ENOC.TT_REPORTE_JAR r
              where r.TIPO_PAGO='F'
          ) 
          group by ID_TRABAJADOR
      )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
      WHEN  MATCHED THEN UPDATE SET  
      s.DIAS_REAL=T.dias;
      
      
      MERGE INTO ENOC.TT_REPORTE_JAR S 
      USING(
        select 
         coalesce(sum(coalesce(num_horas,0)),0) as horas,ID_TRABAJADOR
         from  ENOC.PLLA_ASISTENCIA 
         where to_char(fecha,'YYYYMM')=l_anhomes
         and id_motivo_asist in('PLH','A','SA','DO')
         and ID_TRABAJADOR in(
              select r.ID_TRABAJADOR from ENOC.TT_REPORTE_JAR r,ENOC.PLLA_TIPO_HORARIO Y
              where R.ID_TIPO_HORARIO=Y.ID_TIPO_HORARIO
              AND r.TIPO_PAGO='F'
              AND coalesce(Y.CODIGO,'-') NOT IN('HOR_DP')
          ) 
          group by ID_TRABAJADOR
      )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
      WHEN  MATCHED THEN UPDATE SET  
      s.HORA_REAL=T.horas;
      
      MERGE INTO ENOC.TT_REPORTE_JAR S 
      USING(
        select x.id_persona, sum(x.horas)*4 as horas from(
          select accd.id_persona,coalesce(sum(coalesce(Accd.Hl,0)*coalesce(Accd.Factor,0)),0) as horas
          from david.vw_acad_carga_academica acc 
          inner join david.acad_carga_curso_docente accd on Accd.Id_Carga_Curso=Acc.Id_Carga_Curso
          left join (SELECT Accd.Id_Carga_Curso,max(amd.Fecha_Inicio ) fecha_inicio,min(Amd.fecha_fin) fecha_fin
                                  FROM david.Acad_Carga_Curso_Docente ACCD inner join david.Acad_Modulo_Detalle amd on Amd.Id_Modulo_Detalle=Accd.Id_Modulo_Detalle
                                  group by Accd.Id_Carga_Curso) fc on fc.Id_Carga_Curso=acc.Id_Carga_Curso
          where acc.id_escuela not in (674)
          and acc.id_facultad not in (673)
          and accd.id_persona in(
              select r.id_persona from ENOC.TT_REPORTE_JAR r,ENOC.PLLA_TIPO_HORARIO Y
              where R.ID_TIPO_HORARIO=Y.ID_TIPO_HORARIO
              AND r.TIPO_PAGO='F'
              AND coalesce(Y.CODIGO,'-')  IN('HOR_DP')
          ) 
          and acc.origen='O' 
          and (acc.id_facultad between 7 and 12 or acc.id_facultad=129)
          and to_number(l_anhomes) between to_number(to_char(fc.fecha_inicio,'YYYYMM')) and to_number(to_char(fc.fecha_fin,'YYYYMM'))
          GROUP by  accd.id_persona
          union all
          select pc.id_persona,coalesce(sum(coalesce(apc.Horas_Laborales, 0)),0) as horas
          from  david.acad_persona_contrato pc
          inner join david.acad_persona_comision apc on apc.id_persona_contrato=pc.id_persona_contrato
          where pc.id_persona in(
              select r.id_persona from ENOC.TT_REPORTE_JAR r,ENOC.PLLA_TIPO_HORARIO Y
              where R.ID_TIPO_HORARIO=Y.ID_TIPO_HORARIO
              AND r.TIPO_PAGO='F'
              AND coalesce(Y.CODIGO,'-')  IN('HOR_DP')
          ) 
          and to_number(l_anhomes) between to_number(to_char(apc.fecha_inicio,'YYYYMM')) and to_number(to_char(apc.fecha_fin,'YYYYMM'))
          group by pc.id_persona
        )x
        group by x.id_persona
      )T ON(T.id_persona=S.id_persona)
      WHEN  MATCHED THEN UPDATE SET  
      s.HORA_REAL=T.horas;
      
      MERGE INTO ENOC.TT_REPORTE_JAR S 
      USING(
        select 
         count(1) as DIAS,ID_TRABAJADOR
         from  ENOC.PLLA_ASISTENCIA 
         where to_char(fecha,'YYYYMM')=l_anhomes
         and id_motivo_asist not in('PLH','A','SA','DO')
         and ID_TRABAJADOR in(
              select r.ID_TRABAJADOR from ENOC.TT_REPORTE_JAR r,ENOC.PLLA_TIPO_HORARIO Y
              where R.ID_TIPO_HORARIO=Y.ID_TIPO_HORARIO
              AND r.TIPO_PAGO='F'
              AND coalesce(Y.CODIGO,'-')  IN('HOR_DP')
          ) 
          group by ID_TRABAJADOR
      )T ON(T.ID_TRABAJADOR=S.ID_TRABAJADOR)
      WHEN  MATCHED THEN UPDATE SET  
      s.DIAS_VAC=T.DIAS;
      
      update ENOC.TT_REPORTE_JAR set 
      horas_vac=DIAS_VAC*(round(hora_men/dias_men,2)) 
      where TIPO_PAGO='F'
      and coalesce(DIAS_VAC,0)>0;
      
      update ENOC.TT_REPORTE_JAR set 
      hora_real=hora_real- horas_vac
      where TIPO_PAGO='F'
      and coalesce(horas_vac,0)>0;
      
      update ENOC.TT_REPORTE_JAR set 
      DIAS_REAL=DIAS_REAL- DIAS_VAC
      where TIPO_PAGO='F'
      and coalesce(DIAS_VAC,0)>0
      and ID_TRABAJADOR in(
              select r.ID_TRABAJADOR from ENOC.TT_REPORTE_JAR r,ENOC.PLLA_TIPO_HORARIO Y
              where R.ID_TIPO_HORARIO=Y.ID_TIPO_HORARIO
              AND r.TIPO_PAGO='F'
              AND coalesce(Y.CODIGO,'-')  IN('HOR_DP')
      );
      
          
      OPEN cursor FOR
      select 
      t.id_persona,
      t.id_trabajador,
      t.paterno,
      t.materno,
      t.nombre,
      t.sexo,
      t.apellidonombre,
      to_char(t.FEC_NACIMIENTO,'DD/MM/YYYY') as FEC_NACIMIENTO,
      t.ID_TIPODOCUMENTO,
      tdc.siglas as tipodocumento,
      t.NUM_DOCUMENTO,
      to_char(t.FECHA_INICIO,'DD/MM/YYYY') as FECHA_INICIO,
      cc.depto_padre,
      cc.ID_DEPTO,
      cc.ccosto,
      t.id_perfil_puesto,
      ppp.PUESTO,
      to_char(t.FECHA_FIN_PREVISTO,'DD/MM/YYYY') as FECHA_FIN,
      to_char(t.FECHA_FIN_efectivo,'DD/MM/YYYY') as FECHA_FIN_efectivo,
      tt.sueldo_total,
      tt.HORA_MEN,
      tt.HORA_REAL,
      tt.HORA_SEMANA,
      tt.DIAS_MEN,
      tt.DIAS_REAL,
      tt.DIAS_VAC,
      tt.horas_vac,
      tt.dias_mes,
      cc.area,
      cl.nombre as condicion_laboral,
      tr.nombre as tiempo_trabajo,
      P_ID_ANHO as id_anho,
      P_ID_MES as id_mes,
      st.nombre_corto as situacion_trabajador
      from enoc.vw_trabajador t
      inner join ENOC.TT_REPORTE_JAR tt on tt.id_trabajador=t.id_trabajador
      inner join enoc.vw_ent_dep_area_ccosto cc on cc.ID_SEDEAREA=t.ID_SEDEAREA
      inner join moises.tipo_documento tdc on tdc.ID_TIPODOCUMENTO=t.ID_TIPODOCUMENTO
      inner join enoc.vw_perfil_puesto ppp on ppp.id_perfil_puesto=t.id_perfil_puesto
      inner join moises.condicion_laboral cl on cl.id_condicion_laboral=t.id_condicion_laboral
      inner join moises.tipo_tiempo_trabajo tr on tr.id_tipo_tiempo_trabajo=t.id_tipo_tiempo_trabajo
      inner join moises.situacion_trabajador st on st.id_situacion_trabajador=t.id_situacion_trabajador
      order by paterno,materno,NOMBRE;
      
  END SP_REPORTE_JAR;
  
END PKG_COMPENSACION;