-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_compensacion,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_compensacion_sp_ins_upd_adiconal ( P_ID_ADICIONAL bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_CONCEPTO_ADICIONAL bigint, P_ID_TRABAJADOR bigint, P_DESCRIPCION text, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_SEDEAREA_SOL bigint, P_ID_USER_REG bigint, D_ID_MES text, D_ID_ANHO text, D_ID_SEDEAREA text, D_ID_TIPO_HORA_PAGO text, D_DIAS text, D_CANTIDAD text, D_ID_TIPO_CANTIDAD text, D_COSTO text, T_ID_TRABAJADOR text, T_IMPORTE text, P_ID OUT bigint, P_ERROR OUT bigint, P_MSGERROR out text ) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_adicional bigint;
        l_academico bigint;
        l_grupal bigint;
        l_id_concepto_planilla bigint;
        l_id_concepto_planilla1 bigint;
        l_id_concepto_planilla1_ins bigint;
        l_codigo_tca varchar(25);
        l_tipo_tiempo_trabajo bigint;
        l_id_estado_adicional varchar(2):='01';
        l_id_estado_adicional_act varchar(2);
        l_id_adicional_estado bigint;
        l_id bigint;
        l_id_sedearea bigint;

        l_trabajador TABLASTRING;
        l_importe TABLASTRING;

        
        l_mes TABLASTRING;
        l_anho TABLASTRING;
        l_sedearea TABLASTRING;
        l_tipo_hora_pago TABLASTRING;
        l_dias TABLASTRING;
        l_cantidad TABLASTRING;
        l_tipo_cantidad TABLASTRING;
        l_costo TABLASTRING;

        
      
BEGIN
      
        SELECT 
          ACADEMICO,
          GRUPAL,
          ID_CONCEPTO_PLANILLA,
          ID_CONCEPTO_PLANILLA1,
          CODIGO_TCA
        INTO STRICT
          l_academico,
          l_grupal,
          l_id_concepto_planilla,
          l_id_concepto_planilla1,
          l_codigo_tca
        FROM ENOC.VW_CONCEPTO_ADICIONAL
        WHERE ID_CONCEPTO_ADICIONAL=P_ID_CONCEPTO_ADICIONAL;

        if l_codigo_tca = 'BON' then
          l_id_concepto_planilla1_ins:=l_id_concepto_planilla;
        else
          if l_grupal = 0 then

            if P_ID_TRABAJADOR=0 then
              l_error:=1;
              l_msgerror:='Falta seleccionar trabajador';
--               goto salida_insupd_adicional;
            end if;

            select ID_TIPO_TIEMPO_TRABAJO into STRICT l_tipo_tiempo_trabajo from  moises.trabajador where id_trabajador=P_ID_TRABAJADOR;

            if coalesce(l_tipo_tiempo_trabajo::text, '') = '' then
              l_error:=1;
              l_msgerror:='Falta definir tipo tiempo trabajo';
--               goto salida_insupd_adicional;
            end if;

            if l_tipo_tiempo_trabajo = 3 then  --tiempo parcial
              l_id_concepto_planilla1_ins:=l_id_concepto_planilla1;
            else
              l_id_concepto_planilla1_ins:=l_id_concepto_planilla;
            end if;

          else
            l_id_concepto_planilla1_ins:=l_id_concepto_planilla;

            if P_ID_ANHO=0 or P_ID_MES=0 then
              l_error:=1;
              l_msgerror:='Falta seleccionar año ó mes';
--               goto salida_insupd_adicional;
            end if;
          end if;
        end if;

        if P_ID_ADICIONAL = 0 then
        
          select coalesce(max(id_adicional),0)+1 into STRICT l_id_adicional from enoc.plla_adicional;
          insert into enoc.plla_adicional(
            ID_ADICIONAL,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_CONCEPTO_ADICIONAL,
            ID_ESTADO_ADICIONAL,
            ID_TRABAJADOR,
            ID_CONCEPTO_PLANILLA,
            DESCRIPCION,
            FINALIZADO,
            ID_ANHO,
            ID_MES,
            ID_SEDEAREA_SOL,
            ID_USER_REG,
            FECHA_REG
          )values (
            l_id_adicional,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_CONCEPTO_ADICIONAL,
            l_id_estado_adicional,
            case when P_ID_TRABAJADOR =0 then null else P_ID_TRABAJADOR end,
            l_id_concepto_planilla1_ins,
            P_DESCRIPCION,
            0,
            case when P_ID_ANHO =0 then null else P_ID_ANHO end,
            case when P_ID_MES =0 then null else P_ID_MES end,
            P_ID_SEDEAREA_SOL,
            P_ID_USER_REG,
            clock_timestamp()
          );

          
          select coalesce(max(ID_ADICIONAL_ESTADO),0)+1 into STRICT l_id_adicional_estado from ENOC.PLLA_ADICIONAL_ESTADO;

          insert into ENOC.PLLA_ADICIONAL_ESTADO(
            ID_ADICIONAL_ESTADO,
            ID_ESTADO_ADICIONAL,
            ID_ADICIONAL,
            ID_USER,
            FECHA,
            OBSERVACION
          )values (
            l_id_adicional_estado,
            l_id_estado_adicional,
            l_id_adicional,
            P_ID_USER_REG,
            clock_timestamp(),
            null
          );
          P_ID:=l_id_adicional;
        else
          update enoc.plla_adicional set
            ID_CONCEPTO_ADICIONAL = P_ID_CONCEPTO_ADICIONAL,
            ID_TRABAJADOR=case when P_ID_TRABAJADOR =0 then null else P_ID_TRABAJADOR end,
            ID_CONCEPTO_PLANILLA=l_id_concepto_planilla1_ins,
            DESCRIPCION=P_DESCRIPCION,
            ID_ANHO= case when P_ID_ANHO =0 then null else P_ID_ANHO end,
            ID_MES= case when P_ID_MES =0 then null else P_ID_MES end,
            ID_SEDEAREA_SOL=P_ID_SEDEAREA_SOL,
            ID_USER_MOD=P_ID_USER_REG,
            FECHA_MOD=clock_timestamp()
          where ID_ADICIONAL=P_ID_ADICIONAL;

          P_ID:=P_ID_ADICIONAL;
          l_id_adicional:= P_ID_ADICIONAL;

          select id_estado_adicional into STRICT l_id_estado_adicional_act from  enoc.plla_adicional where ID_ADICIONAL=l_id_adicional;

          if l_id_estado_adicional_act='05' then
          
            update enoc.plla_adicional set id_estado_adicional=l_id_estado_adicional where ID_ADICIONAL=l_id_adicional;

            select coalesce(max(ID_ADICIONAL_ESTADO),0)+1 into STRICT l_id_adicional_estado from ENOC.PLLA_ADICIONAL_ESTADO;

            insert into ENOC.PLLA_ADICIONAL_ESTADO(
              ID_ADICIONAL_ESTADO,
              ID_ESTADO_ADICIONAL,
              ID_ADICIONAL,
              ID_USER,
              FECHA,
              OBSERVACION
            )values (
              l_id_adicional_estado,
              l_id_estado_adicional,
              l_id_adicional,
              P_ID_USER_REG,
              clock_timestamp(), 
              null
            );

          end if;

        end if;

        delete from ENOC.PLLA_ADICIONAL_PERSONA where ID_ADICIONAL=l_id_adicional;
        delete from ENOC.PLLA_ADICIONAL_DET where ID_ADICIONAL=l_id_adicional;

        if l_grupal = 0 then
        --detalle adicional
           select ENOC.FC_SPLIT(D_ID_MES,'|') into STRICT l_mes;
           select ENOC.FC_SPLIT(D_ID_ANHO,'|') into STRICT l_anho;
           select ENOC.FC_SPLIT(D_ID_SEDEAREA,'|') into STRICT l_sedearea;
           select ENOC.FC_SPLIT(D_ID_TIPO_HORA_PAGO,'|') into STRICT l_tipo_hora_pago;
           select ENOC.FC_SPLIT(D_DIAS,'|') into STRICT l_dias;
           select ENOC.FC_SPLIT(D_CANTIDAD,'|') into STRICT l_cantidad;
           select ENOC.FC_SPLIT(D_ID_TIPO_CANTIDAD,'|') into STRICT l_tipo_cantidad;
           select ENOC.FC_SPLIT(D_COSTO,'|') into STRICT l_costo;

           FOR i IN l_mes.FIRST .. l_mes.LAST
           LOOP
            
             select coalesce(max(ID_ADICIONAL_DET),0)+1 into STRICT l_id from ENOC.PLLA_ADICIONAL_DET;

            insert into ENOC.PLLA_ADICIONAL_DET(
                ID_ADICIONAL_DET,
                ID_ADICIONAL,
                ID_MES,
                ID_ANHO,
                ID_SEDEAREA,
                ID_TIPO_HORA_PAGO,
                DIAS,
                CANTIDAD,
                ID_TIPO_CANTIDAD,
                COSTO,
                IMPORTE,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG
              )values (
                l_id,
                l_id_adicional,
                (l_mes(i))::numeric ,
                (l_anho(i))::numeric ,
                (l_sedearea(i))::numeric ,
                (l_tipo_hora_pago(i))::numeric ,
                (l_dias(i))::numeric ,
                (l_cantidad(i))::numeric ,
                (l_tipo_cantidad(i))::numeric ,
                (l_costo(i))::numeric ,
                (l_costo(i))::numeric  * (l_cantidad(i))::numeric , 
                1,
                P_ID_USER_REG,
                clock_timestamp()
              );
           END  LOOP;
        else
        --adicional persona
          select ENOC.FC_SPLIT(T_ID_TRABAJADOR,'|') into STRICT l_trabajador;
          select ENOC.FC_SPLIT(T_IMPORTE,'|') into STRICT l_importe;
          
          
          
          FOR i IN l_trabajador.FIRST .. l_trabajador.LAST
          LOOP
            
            select id_sedearea into STRICT l_id_sedearea from moises.trabajador where id_trabajador=(l_trabajador(i))::numeric;

            select coalesce(max(ID_ADICIONAL_PERSONA),0)+1 into STRICT l_id from ENOC.PLLA_ADICIONAL_PERSONA;

            insert into ENOC.PLLA_ADICIONAL_PERSONA(
              ID_ADICIONAL_PERSONA,
              ID_ADICIONAL,
              ID_TRABAJADOR,
              ID_SEDEAREA,
              IMPORTE,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
            )values (
              l_id,
              l_id_adicional,
              (l_trabajador(i))::numeric ,
              l_id_sedearea,
              (l_importe(i))::numeric ,
              1,
              P_ID_USER_REG,
              clock_timestamp()
            );

          END  LOOP;
        end if;

--         <<salida_insupd_adicional>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_compensacion_sp_ins_upd_adiconal ( P_ID_ADICIONAL bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_CONCEPTO_ADICIONAL bigint, P_ID_TRABAJADOR bigint, P_DESCRIPCION text, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_SEDEAREA_SOL bigint, P_ID_USER_REG bigint, D_ID_MES text, D_ID_ANHO text, D_ID_SEDEAREA text, D_ID_TIPO_HORA_PAGO text, D_DIAS text, D_CANTIDAD text, D_ID_TIPO_CANTIDAD text, D_COSTO text, T_ID_TRABAJADOR text, T_IMPORTE text, P_ID OUT bigint, P_ERROR OUT bigint, P_MSGERROR out text ) FROM PUBLIC;
