-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_contract,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_contract_sp_costoxhora_previo_new (P_ID_CONTRATO bigint,P_ID_SEMESTRE bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='ok';

        l_fecha_inic timestamp(0);
        l_fecha_finc timestamp(0);
        l_id_solic_reque bigint;
        l_id_persona bigint;
        l_nohaymod varchar(200);

        
      
BEGIN
      
       select id_persona, fecha_ini,fecha_fin,ID_SOLIC_REQUE into STRICT l_id_persona,l_fecha_inic,l_fecha_finc,l_id_solic_reque from enoc.plla_contrato where id_contrato=P_ID_CONTRATO;

        select count(*) into STRICT l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;

        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='El contrato no tiene requerimiento';
--             goto salida_previo;
        END IF;

        delete from  ENOC.TT_CARGA_DOCENTE;

        INSERT INTO ENOC.TT_CARGA_DOCENTE
        SELECT
        ID_MODULO_DETALLE,
        ID_CARGA_CURSO,
        ID_PROGRAMA_ESTUDIO,
        ID_MODULO,
        ID_TIPO_MODALIDAD_DOCENTE,
        ID_TIPO_HORARIO,
        ID_PERSONA,
        ID_SEMESTRE,
        FINICIO,--FECHA_INICIO,
        FECHA_FIN,
        HORARIO,
        NOMBRE_AREA,
        CURSO,
        CICLO,
        CREDITO,
        HP,
        HT,
        HNP,
        ID_SEDEAREA,
        GRUPO,
        FECHA_INICIO
        FROM  ENOC.VW_CARGA_DOCENTE 
        WHERE id_persona=l_id_persona
        and id_semestre=P_ID_SEMESTRE
        order by fecha_inicio;

        
        
        
        select fecha_ini,fecha_fin into STRICT l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;

        
        select count(*) into STRICT l_contar from ENOC.TT_CARGA_DOCENTE where coalesce(ID_TIPO_MODALIDAD_DOCENTE::text, '') = '';
       IF l_contar>0 THEN

            select 
            substr(string_agg(substr(NOMBRE_AREA,0,20)||': '||substr(CURSO,0,50)||' - Ciclo: '||CICLO::text||' Gpo: '||GRUPO,', ' ORDER BY ID_MODULO_DETALLE),0,180)
            into STRICT l_nohaymod
            from ENOC.TT_CARGA_DOCENTE where coalesce(ID_TIPO_MODALIDAD_DOCENTE::text, '') = '';

            l_error:=1;
            l_msgerror:='No tiene Modalidad. '||substr(l_nohaymod,0,174);
--             goto salida_previo;
        END IF;

        
        select count(*) into STRICT l_contar from ENOC.TT_CARGA_DOCENTE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene carga horario';
--             goto salida_previo;
        END IF;

        
        delete from enoc.PLLA_COSTOXHORA_CARGA where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;

        INSERT INTO enoc.PLLA_COSTOXHORA_CARGA(
                    ID_CARGA_CURSO,
                    ID_SEMESTRE,
                    ID_PERSONA,
                    ID_TIPO_MODALIDAD_DOCENTE,
                    ID_TIPO_HORARIO,
                    FECHA,
                    HORAS,
                    ID_PROGRAMA_ESTUDIO,
                    HORARIO,
                    ID_SEDEAREA,
                    NOMBRE_AREA,
                    CURSO,
                    CICLO,
                    CREDITOS,
                    HP,
                    HT,
                    HNP,
                    ID_CONTRATO,
                    GRUPO
                  )
                  
                  SELECT 
               acc.Id_Carga_Curso,
               asp.id_semestre,
               cadoc.id_persona,
               cadoc.ID_TIPO_MODALIDAD_DOCENTE,
               coalesce(cadoc.ID_TIPO_HORARIO,cadoc.ID_TIPO_MODALIDAD_DOCENTE),
               to_date(TO_CHAR(ho.FECHA_CLASE,'YYYY-MM-DD'),'YYYY-MM-DD') as fecha,
               count(1) as horas,
               accd.id_programa_estudio,
               cadoc.horario,
               vape.id_sedearea,
               vacp.nombre_area,
               vacp.curso,
               vacp.ciclo,
               vacp.credito,
               vacp.hp,
               vacp.ht,
               vacp.hnp,
               P_ID_CONTRATO,
               acc.grupo       
               FROM david.Acad_Carga_Curso_Det accd
               inner join david.acad_carga_curso acc on Acc.Id_Carga_Curso = Accd.Id_Carga_Curso
               inner join david.Acad_Semestre_Programa asp on Asp.Id_Semestre_Programa = Acc.Id_Semestre_Programa
               inner join DAVID.ACAD_CARGA_CURSO_DOCENTE cadoc on cadoc.Id_Carga_Curso=acc.Id_Carga_Curso
               inner join david.vw_acad_programa_estudio vape on vApe.Id_Programa_Estudio = Accd.Id_Programa_Estudio
               inner join david.Vw_Acad_Curso_Plan vacp on Vacp.Id_Plan_Curso = Accd.Id_Plan_Curso
               inner join david.ACAD_CURSO_DOCENTE_HORARIO ho on ho.ID_CARGA_CURSO_DOCENTE=cadoc.ID_CARGA_CURSO_DOCENTE
               WHERE Accd.Origen='O'
               AND asp.id_semestre=P_ID_SEMESTRE
               AND cadoc.id_persona=l_id_persona
               and to_date(TO_CHAR(ho.FECHA_CLASE,'YYYY-MM-DD'),'YYYY-MM-DD') between l_fecha_inic and l_fecha_finc
               group by 
               acc.Id_Carga_Curso,
               asp.id_semestre,
               cadoc.id_persona,
               cadoc.ID_TIPO_MODALIDAD_DOCENTE,
               coalesce(cadoc.ID_TIPO_HORARIO,cadoc.ID_TIPO_MODALIDAD_DOCENTE),
               to_date(TO_CHAR(ho.FECHA_CLASE,'YYYY-MM-DD'),'YYYY-MM-DD'),
               accd.id_programa_estudio,
               cadoc.horario,
               vape.id_sedearea,
               vacp.nombre_area,
               vacp.curso,
               vacp.ciclo,
               vacp.credito,
               vacp.hp,
               vacp.ht,
               vacp.hnp,
               acc.grupo  
               order by fecha;

        

        CALL pkg_contract_sp_costoxhora_previo_asin(P_ID_CONTRATO,P_ID_SEMESTRE,l_fecha_finc,l_id_persona,l_fecha_inic,l_fecha_finc,l_error,l_msgerror);

        if l_error=0 then
          select count(*) into STRICT l_contar from ENOC.PLLA_COSTOXHORA_CARGA where id_contrato=P_ID_CONTRATO and id_semestre=P_ID_SEMESTRE;
          IF l_contar=0 THEN
              l_error:=1;
              l_msgerror:='No tiene asignado horario';
--               goto salida_previo;
          END IF;
        end if;
--         <<salida_previo>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_contract_sp_costoxhora_previo_new (P_ID_CONTRATO bigint,P_ID_SEMESTRE bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
