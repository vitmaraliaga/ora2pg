-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_contract,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_contract_sp_finalizar_cambio (P_ID_CAMBIOS bigint,P_ID_CONTRATO bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_concepto_cambio bigint;
        l_codigo varchar(20);
        l_id_trabajador bigint;
        l_id_sedearea bigint;
        l_id_perfil_puesto bigint;
        l_id_condicion_laboral varchar(10);
        l_id_condicion_laboral_act varchar(10);
        l_id_tipo_contrato  varchar(10);
        l_id_tipo_tiempo_trabajo bigint;
        l_id_puesto bigint;
        l_mod_fmr_sueldo varchar(2);
        l_sueldo decimal(10,2);
        l_pje_fmra decimal(10,2);
        l_id_remuneracion bigint;
        l_nombre varchar(150);
        l_id_contrato bigint;
        l_id_escala_salarial bigint;
        l_act_ins varchar(2); --I:nuevo, A:actualiza
        l_id_max bigint;
        l_id bigint;
        l_id_sede_area_aux bigint;
        l_fec_desde timestamp(0);
        l_fec_hasta timestamp(0);
        l_porcentaje decimal(10,2);
        l_id_perfil_puesto_aux bigint;
        l_id_tipo_horario bigint;
        l_id_tipo_horario_act bigint;
        l_ret_asist varchar(200);
        l_id_tipo_control_personal bigint;
        l_id_tipo_control_personal_act bigint;

BEGIN
        SELECT 
          ID_CONCEPTO_CAMBIO,
          ID_SEDEAREA,
          ID_PERFIL_PUESTO,
          ID_CONDICION_LABORAL,
          ID_TIPO_CONTRATO,
          ID_TIPO_TIEMPO_TRABAJO,
          coalesce(MOD_FMR_SUELDO,'N'),
          SUELDO,
          PJE_FMR,
          ID_TRABAJADOR,
          ID_ESCALA_SALARIAL,
          ACT_INS,
          FEC_DESDE,
          FEC_HASTA,
          PORCENTAJE,
          id_tipo_horario
        into STRICT 
          l_id_concepto_cambio,
          l_id_sedearea,
          l_id_perfil_puesto,
          l_id_condicion_laboral,
          l_id_tipo_contrato,
          l_id_tipo_tiempo_trabajo,
          l_mod_fmr_sueldo,
          l_sueldo,
          l_pje_fmra,
          l_id_trabajador,
          l_id_escala_salarial,
          l_act_ins,
          l_fec_desde,
          l_fec_hasta,
          l_porcentaje,
          l_id_tipo_horario
        from enoc.PLLA_CAMBIOS 
        where ID_CAMBIOS=P_ID_CAMBIOS;

        SELECT CODIGO,nombre INTO STRICT l_codigo, l_nombre FROM enoc.PLLA_CONCEPTO_CAMBIO WHERE ID_CONCEPTO_CAMBIO=l_id_concepto_cambio;

        select id_contrato,id_tipo_horario,id_tipo_control_personal into STRICT l_id_contrato, l_id_tipo_horario_act,l_id_tipo_control_personal_act  FROM moises.trabajador where id_trabajador=l_id_trabajador;

         case 
           WHEN l_codigo='CAP' THEN  --Cambio de Area y Puesto  
           
           select id_puesto,id_tipo_control_personal into STRICT l_id_puesto,l_id_tipo_control_personal from enoc.plla_perfil_puesto where id_perfil_puesto=l_id_perfil_puesto;

          if l_act_ins='A' then
              update moises.trabajador set
                id_sedearea=l_id_sedearea,
                id_perfil_puesto=l_id_perfil_puesto,
                id_puesto = l_id_puesto
              where id_trabajador=l_id_trabajador;
          end if;

           SELECT coalesce(MAX(ID_TRABAJADOR_AREA),0) INTO STRICT l_id_max FROM MOISES.TRABAJADOR_AREA WHERE ID_TRABAJADOR=l_id_trabajador and coalesce(OTRO_AREA,'N')<>'S';

           if l_id_max>0 then
            SELECT ID_SEDEAREA INTO STRICT l_id_sede_area_aux FROM MOISES.TRABAJADOR_AREA WHERE ID_TRABAJADOR_AREA=l_id_max;
            if l_act_ins='A' then
              update MOISES.TRABAJADOR_AREA set
                  HASTA=l_fec_desde-1,
                  ID_USER_MOD=P_ID_USER
                  where ID_TRABAJADOR_AREA=l_id_max;
            end if;
           end if;
           
             --area trabajador
            select coalesce(max(ID_TRABAJADOR_AREA),0) +1 into STRICT l_id  from MOISES.TRABAJADOR_AREA;
            insert into MOISES.TRABAJADOR_AREA(
              ID_TRABAJADOR_AREA,
              ID_TRABAJADOR,
              ID_SEDEAREA,
              DESDE,
              HASTA,
              OTRO_AREA,
              PORCENTAJE,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
              )VALUES (
              l_id,
              l_id_trabajador,
              l_id_sedearea,
              l_fec_desde,
              CASE WHEN l_act_ins = 'I' THEN  l_fec_hasta ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  'S' ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  l_porcentaje ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  1 ELSE null END,
              P_ID_USER,
              clock_timestamp()
              );

            --puesto trabajador
            SELECT coalesce(MAX(ID_TRABAJADOR_PUESTO),0) INTO STRICT l_id_max FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR=l_id_trabajador and coalesce(OTRO_PUESTO,'N')<>'S';

             if l_id_max>0 then
              SELECT ID_PERFIL_PUESTO INTO STRICT l_id_perfil_puesto_aux FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR_PUESTO=l_id_max;
              if l_act_ins='A' then
                update MOISES.TRABAJADOR_PUESTO set
                    HASTA=l_fec_desde-1,
                    ID_USER_MOD=P_ID_USER
                    where ID_TRABAJADOR_PUESTO=l_id_max;
              end if;
             end if;
             
            select coalesce(max(ID_TRABAJADOR_PUESTO),0) + 1 into STRICT l_id  from MOISES.TRABAJADOR_PUESTO;
            insert into MOISES.TRABAJADOR_PUESTO(
              ID_TRABAJADOR_PUESTO,
              ID_TRABAJADOR,
              ID_PERFIL_PUESTO,
              ID_PUESTO,
              DESDE,
              HASTA,
              OTRO_PUESTO,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
              )values (
              l_id,
              l_id_trabajador,
              l_id_perfil_puesto,
              l_id_puesto,
              l_fec_desde,
              CASE WHEN l_act_ins = 'I' THEN  l_fec_hasta ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  'S' ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  1 ELSE null END,
              P_ID_USER,
              clock_timestamp()
              );

              if (l_id_tipo_control_personal IS NOT NULL AND l_id_tipo_control_personal::text <> '') then
               if l_id_tipo_control_personal<>l_id_tipo_control_personal_act then
                  CALL pkg_assistance_sp_cambio_datos(
                   l_id_trabajador,
                   l_id_tipo_control_personal::text,
                   l_fec_desde,
                   null,
                   l_nombre,
                   P_ID_USER,
                   'TP',
                   l_ret_asist,
                   l_error,
                   l_msgerror
                   );
               end if;
              end if;

           WHEN l_codigo='CP' THEN   --Cambio de Puesto
           
             select id_puesto,id_tipo_control_personal into STRICT l_id_puesto,l_id_tipo_control_personal from enoc.plla_perfil_puesto where id_perfil_puesto=l_id_perfil_puesto;
            if l_act_ins='A' then
               update moises.trabajador set
                id_perfil_puesto=l_id_perfil_puesto,
                id_puesto = l_id_puesto
              where id_trabajador=l_id_trabajador;
            end if;

            --puesto trabajador
            SELECT coalesce(MAX(ID_TRABAJADOR_PUESTO),0) INTO STRICT l_id_max FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR=l_id_trabajador and coalesce(OTRO_PUESTO,'N')<>'S';

             if l_id_max>0 then
              SELECT ID_PERFIL_PUESTO INTO STRICT l_id_perfil_puesto_aux FROM MOISES.TRABAJADOR_PUESTO WHERE ID_TRABAJADOR_PUESTO=l_id_max;
              if l_act_ins='A' then
                update MOISES.TRABAJADOR_PUESTO set
                    HASTA=l_fec_desde-1,
                    ID_USER_MOD=P_ID_USER
                    where ID_TRABAJADOR_PUESTO=l_id_max;
              end if;
             end if;
             
            select coalesce(max(ID_TRABAJADOR_PUESTO),0) + 1 into STRICT l_id  from MOISES.TRABAJADOR_PUESTO;
            insert into MOISES.TRABAJADOR_PUESTO(
              ID_TRABAJADOR_PUESTO,
              ID_TRABAJADOR,
              ID_PERFIL_PUESTO,
              ID_PUESTO,
              DESDE,
              HASTA,
              OTRO_PUESTO,
              VIGENCIA,
              ID_USER_REG,
              FECHA_REG
              )values (
              l_id,
              l_id_trabajador,
              l_id_perfil_puesto,
              l_id_puesto,
              l_fec_desde,
              CASE WHEN l_act_ins = 'I' THEN  l_fec_hasta ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  'S' ELSE null END,
              CASE WHEN l_act_ins = 'I' THEN  1 ELSE null END,
              P_ID_USER,
              clock_timestamp()
              );

              
              if (l_id_tipo_control_personal IS NOT NULL AND l_id_tipo_control_personal::text <> '') then
               if l_id_tipo_control_personal<>l_id_tipo_control_personal_act then
                  CALL pkg_assistance_sp_cambio_datos(
                   l_id_trabajador,
                   l_id_tipo_control_personal::text,
                   l_fec_desde,
                   null,
                   l_nombre,
                   P_ID_USER,
                   'TP',
                   l_ret_asist,
                   l_error,
                   l_msgerror
                   );
               end if;
              end if;

           WHEN l_codigo in ('CCC', 'CCM') THEN   --Cambio de condicion laboral/contrato
            
 
            select id_condicion_laboral into STRICT l_id_condicion_laboral_act from moises.trabajador where id_trabajador=l_id_trabajador;
            update moises.trabajador set
              id_condicion_laboral=l_id_condicion_laboral,
              id_tipo_contrato = case when l_id_condicion_laboral_act in ('E','M') and l_id_condicion_laboral in ('E','M') then id_tipo_contrato else l_id_tipo_contrato end,
              fecha_fin_previsto= case when l_id_condicion_laboral in ('E','M') then  null else fecha_fin_previsto end,
              fecha_fin_efectivo= case when l_id_condicion_laboral in ('E','M') then  null else fecha_fin_efectivo end,
              id_contrato  = case when P_ID_CONTRATO= 0 then id_contrato else P_ID_CONTRATO end
            where id_trabajador=l_id_trabajador;

           WHEN l_codigo='CJL' THEN   --Cambio de Jornada Laboral
            update moises.trabajador set
              id_tipo_tiempo_trabajo=l_id_tipo_tiempo_trabajo
            where id_trabajador=l_id_trabajador;

           ELSE 
              l_error:=1;
              l_msgerror:='No esta configurado para hacer cambios';
--               goto salida_fin_cambio;
        END CASE;

        if l_mod_fmr_sueldo = 'S' then
        
          UPDATE PLLA_REMUNERACION SET VIGENCIA=0 WHERE id_trabajador = l_id_trabajador AND VIGENCIA=1;

          select coalesce(max(ID_REMUNERACION),0) + 1  into STRICT l_id_remuneracion  from  PLLA_REMUNERACION;

          INSERT INTO PLLA_REMUNERACION(
            ID_REMUNERACION,
            ID_TRABAJADOR,
            ID_CONTRATO,
            REFERENCIA,
            REFERENCIA_URL,
            FEC_EFECTIVO,
            TIPO_PAGO,
            FMR,
            SUELDO,
            BONIFICACION,
            OBSERVACION,
            ID_ESTADO_REMUNE,
            VIGENCIA,
            ID_USER_REG,
            FECHA_REG,
            ID_ESCALA_SALARIAL
          )values (
            l_id_remuneracion,
            l_id_trabajador,
            l_id_contrato,
            l_nombre,
            NULL,
            clock_timestamp(),
            'F',
            l_pje_fmra,
            l_sueldo,
            0,
            l_nombre,
            '04',
            1,
            P_ID_USER,
            clock_timestamp(),
            l_id_escala_salarial
          );

        end if;

        update enoc.PLLA_CAMBIOS set
        PROCESO_FIN='S'
        where ID_CAMBIOS=P_ID_CAMBIOS;

        if (l_id_tipo_horario IS NOT NULL AND l_id_tipo_horario::text <> '') then
         if l_id_tipo_horario<>l_id_tipo_horario_act then
            CALL pkg_assistance_sp_cambio_datos(
             l_id_trabajador,
             l_id_tipo_horario::text,
             l_fec_desde,
             null,
             l_nombre,
             P_ID_USER,
             'TH',
             l_ret_asist,
             l_error,
             l_msgerror
             );
         end if;
        end if;
--        <<salida_fin_cambio>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_contract_sp_finalizar_cambio (P_ID_CAMBIOS bigint,P_ID_CONTRATO bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
