-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_contract,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_contract_sp_costoxhora_contrato (P_ID_CONTRATO bigint,P_ID_SEMESTRE bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='ok';
        l_id_carga_curso bigint;
        l_horario varchar(400);
        l_horario_tmp varchar(400);
        l_id_tipo_formato_modulo bigint;
        l_dias bigint:=7;
        l_i bigint:=1;
        l_j bigint:=1;
        l_total bigint:=0;
        l_fecha timestamp(0);
        l_hora bigint:=0;
        l_fecha_ini timestamp(0);
        l_num_dia bigint;
        l_n_resta bigint;
        l_id_persona bigint;
        l_item bigint;
        l_costo decimal(10,2);
        l_id_escala_sala_docente_det bigint;
        l_id_tipo_hora_pago bigint;
        l_fecha_inic timestamp(0);
        l_fecha_finc  timestamp(0);
        l_id_solic_reque bigint;

                
        curCont CURSOR FOR
        SELECT 
        ID_ANHO,
        ID_MES,
        ID_SEDEAREA,
        ID_PROGRAMA_ESTUDIO,
        ID_PERSONA,
        ID_SEMESTRE,
        ID_TIPO_HORA_PAGO,--ID_TIPO_HORARIO,
        CASE WHEN HORA_ASIN='S' THEN 1 ELSE ID_TIPO_HORA_PAGO END  AS ID_TIPO_HORARIO_VAL,
        DIAS,
        HORAS,
        HORA_ASIN
        from enoc.VW_COSTOXHORA_CARGA_SUM_EJE 
        where id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        order by ID_ANHO, ID_MES;

        l_contrato_mensual bigint;
        l_modo_pago varchar(1);
        l_fec_desde timestamp(0);
        l_fec_hasta timestamp(0);

      
BEGIN
      
        select id_persona, fecha_ini,fecha_fin,ID_SOLIC_REQUE,COALESCE(contrato_mensual,0),COALESCE(modo_pago,'N')
        into STRICT l_id_persona,l_fecha_inic,l_fecha_finc,l_id_solic_reque,l_contrato_mensual, l_modo_pago
        from enoc.plla_contrato 
        where id_contrato=P_ID_CONTRATO;


        select count(*) into STRICT l_contar from ENOC.VW_COSTOXHORA_CARGA_SUM 
        WHERE   id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        and ID_TIPO_MODALIDAD_DOCENTE not in (
          SELECT ID_TIPO_MODALIDAD_DOCENTE FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO
        );

        IF l_contar>0 THEN
            l_error:=1;
            l_msgerror:='No esta configurado tipo hora GTH con academico';
--             goto salida_costoxhora;
        END IF;

        
        select count(*) into STRICT l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;

        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='El contrato no tiene requerimiento';
--             goto salida_costoxhora;
        END IF;

        select fecha_ini,fecha_fin into STRICT l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;

        if l_contrato_mensual = 1 then
          delete from enoc.PLLA_CONTRATO_MES where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
        else
          delete from enoc.PLLA_CONTRATO_DET where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
        end if;
        select count(*) into STRICT l_contar from ENOC.PLLA_COSTOXHORA_CARGA where id_contrato=P_ID_CONTRATO and id_semestre=P_ID_SEMESTRE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene asignado horario';
--             goto salida_costoxhora;
        END IF;

        --generacion de detalle contrato
        FOR curCo in curCont LOOP
          BEGIN
            if l_contrato_mensual = 1 then
              select coalesce(max(ID_ITEM),0) + 1 into STRICT l_item from enoc.plla_contrato_mes where id_contrato=P_ID_CONTRATO;
            else
              select coalesce(max(ID_ITEM),0) + 1 into STRICT l_item from enoc.plla_contrato_det where id_contrato=P_ID_CONTRATO;
            end if;

            
           /* SELECT count(*) INTO l_contar FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO WHERE ID_TIPO_HORARIO=curCo.ID_TIPO_HORARIO;
            if l_contar=0 then
              l_msgerror:='No esta asignado tipo hora pago';
              l_error:=1;
              Exit when l_contar=0;
            end if;*/
            
            /*SELECT count(*) INTO l_contar FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO WHERE ID_TIPO_HORARIO=curCo.ID_TIPO_HORARIO;
            
            if l_contar=0 then
              l_msgerror:='No esta configurado tipo hora GTH con academico';
              l_error:=1;
              Exit when l_contar=0;
            end if;
            
            SELECT ID_TIPO_HORA_PAGO INTO l_id_tipo_hora_pago FROM ENOC.PLLA_TIPO_HORA_PAGO_HORARIO WHERE ID_TIPO_HORARIO=curCo.ID_TIPO_HORARIO;*/
            
            SELECT count(*) INTO STRICT l_contar FROM  ENOC.VW_DOCENTE_COSTOXHORA 
            WHERE ID_PERSONA=l_id_persona 
            AND ID_PROGRAMA_ESTUDIO=curCo.ID_PROGRAMA_ESTUDIO 
            AND ID_TIPO_HORA_PAGO= curCo.ID_TIPO_HORARIO_VAL  --curCo.ID_TIPO_HORA_PAGO  
            AND VIGENCIA=1;

            
            if l_contar=0 then
              l_error:=1;
              l_msgerror:='Falta configurar costo por hora';
              Exit when l_contar=0;
            else
              if l_contar>1 then
                l_error:=1;
                l_msgerror:='Existe costo por hora mas de 2 con estado vigente';
                Exit when l_contar>1;
              end if;
            end if;

            SELECT CASE WHEN curCo.HORA_ASIN='S' THEN PORC_ASIN*COSTO ELSE COSTO END AS COSTO,
            ID_ESCALA_SALA_DOCENTE_DET 
            INTO STRICT l_costo,l_id_escala_sala_docente_det 
            FROM  ENOC.VW_DOCENTE_COSTOXHORA 
            WHERE ID_PERSONA=l_id_persona 
            AND ID_PROGRAMA_ESTUDIO=curCo.ID_PROGRAMA_ESTUDIO 
            AND ID_TIPO_HORA_PAGO=curCo.ID_TIPO_HORARIO_VAL  --curCo.ID_TIPO_HORA_PAGO
            AND VIGENCIA=1;

            if l_contrato_mensual = 0 then
            
              insert into enoc.plla_contrato_det(
                ID_ITEM,
                ID_CONTRATO,
                TIPO,
                ID_ANHO,
                ID_MES,
                ID_SEDEAREA,
                ID_PROGRAMA_ESTUDIO,
                ID_TIPO_HORA_PAGO,
                ID_ESCALA_SALA_DOCENTE_DET,
                ID_SEMESTRE,
                DIAS,
                COSTOHORA,
                HORAS,
                IMPORTE,
                VARIACION,
                CONCEPTO,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG,
                ID_TIPO_CANTIDAD
              )values (
              l_item,
              P_ID_CONTRATO,
              'C',
              curCo.ID_ANHO,
              curCo.ID_MES,
              curCo.ID_SEDEAREA,
              curCo.ID_PROGRAMA_ESTUDIO,
              curCo.ID_TIPO_HORA_PAGO,--l_id_tipo_hora_pago, 
              l_id_escala_sala_docente_det,
              curCo.ID_SEMESTRE,
              curCo.DIAS,
              l_costo,
              curCo.HORAS,
              l_costo*curCo.HORAS,
              0,
              'CONTRATO',
              1,
              P_ID_USER,
              clock_timestamp(),
              1
              );
            else
              select min(fecha), max(fecha)  into STRICT l_fec_desde, l_fec_hasta
              from enoc.PLLA_COSTOXHORA_CARGA
              where id_contrato=P_ID_CONTRATO
              and (TO_CHAR(FECHA,'YYYY'))::numeric  = curCo.ID_ANHO
              and (TO_CHAR(FECHA,'MM'))::numeric  = curCo.ID_MES;

              insert into enoc.plla_contrato_mes(
                ID_ITEM,
                ID_CONTRATO,
                ID_ANHO,
                ID_MES,
                ID_SEDEAREA,
                ID_PROGRAMA_ESTUDIO,
                ID_TIPO_HORA_PAGO,
                ID_ESCALA_SALA_DOCENTE_DET,
                ID_SEMESTRE,
                DIAS,
                COSTOHORA,
                HORAS,
                IMPORTE,
                VIGENCIA,
                ID_USER_REG,
                FECHA_REG,
                ID_TIPO_CANTIDAD,
                FEC_DESDE,
                FEC_HASTA
              )values (
                l_item,
                P_ID_CONTRATO,
                curCo.ID_ANHO,
                curCo.ID_MES,
                curCo.ID_SEDEAREA,
                curCo.ID_PROGRAMA_ESTUDIO,
                curCo.ID_TIPO_HORA_PAGO,--l_id_tipo_hora_pago, 
                l_id_escala_sala_docente_det,
                curCo.ID_SEMESTRE,
                curCo.DIAS,
                l_costo,
                curCo.HORAS,
                l_costo*curCo.HORAS,
                1,
                P_ID_USER,
                clock_timestamp(),
                1,--horas
                l_fec_desde,
                l_fec_hasta
              );
            end if;
          END;
        END LOOP;

        if l_error=1 then
--           goto salida_costoxhora;
        end if;
        --actualizar fecha ini y fin de contrato
        select 
        count(*) into STRICT l_contar
        from enoc.PLLA_COSTOXHORA_CARGA
        where id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        and coalesce(hora_asin::text, '') = '';

        if l_contar>0 then
          select 
           min(FECHA) as FECHA_INI,
           max(FECHA) as FECHA_FIN
           into STRICT 
           l_fecha_inic,
           l_fecha_finc
          from enoc.PLLA_COSTOXHORA_CARGA
          where id_contrato=P_ID_CONTRATO
          and id_semestre=P_ID_SEMESTRE
          and coalesce(hora_asin::text, '') = '';

          
          update enoc.plla_contrato set
          fecha_ini=l_fecha_inic,
          fecha_fin=l_fecha_finc
          where id_contrato = P_ID_CONTRATO;

          if l_contrato_mensual = 1 then
          
            CALL pkg_contract_sp_gen_contrato_trabajador(P_ID_CONTRATO,P_ID_USER,'C',l_error,l_msgerror);
          end if;

        end if;
--         <<salida_costoxhora>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_contract_sp_costoxhora_contrato (P_ID_CONTRATO bigint,P_ID_SEMESTRE bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
