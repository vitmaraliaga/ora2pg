-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_benefits,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_benefits_sp_control_vacacion (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';

        l_id_control_asistencia varchar(25);
        l_item bigint;

        l_fec_actual_vac timestamp(0);
        l_fec_desde_vac timestamp(0);
        l_fec_hasta_vac timestamp(0);

        l_fecha_ini_vac timestamp(0);
        l_fecha_fin_vac timestamp(0);
        l_id_trabajador_vac bigint;
        l_id_sedearea bigint;
        l_id_rol_vacacion varchar(25);
        l_id_motivo_asist varchar(2):='V';
        l_contar bigint;

        l_fecha_inicio_vac timestamp(0);

        curvac CURSOR FOR
        SELECT A.FECHA_INI,A.FECHA_FIN,B.ID_TRABAJADOR,A.ID_ROL_VACACION,D.ID_SEDEAREA 
        FROM PLLA_ROL_VACACIONAL A,
        PLLA_PERIODO_VAC_TRAB B, 
        PLLA_PERIODO_VAC C, 
        MOISES.TRABAJADOR D, 
        ELISEO.ORG_SEDE_AREA E
        WHERE A.ID_PERIODO_VAC_TRAB = B.ID_PERIODO_VAC_TRAB
        AND B.ID_PERIODO_VAC = C.ID_PERIODO_VAC
        AND B.ID_TRABAJADOR =D.ID_TRABAJADOR
        AND D.ID_SEDEAREA=E.ID_SEDEAREA
        AND C.ID_ENTIDAD=P_ID_ENTIDAD
        AND E.ID_DEPTO LIKE P_ID_DEPTO||'%'
        AND case when P_ID_TRABAJADOR=0 then 0 else D.ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND A.CONDICION ='P'
        AND B.ID_ESTADO_VAC_TRAB='02'
        AND (((TO_CHAR(A.FECHA_INI,'YYYY'))::numeric = P_ID_ANHO AND (TO_CHAR(A.FECHA_INI,'MM'))::numeric = P_ID_MES) OR ((TO_CHAR(A.FECHA_FIN,'YYYY'))::numeric = P_ID_ANHO AND (TO_CHAR(A.FECHA_FIN,'MM'))::numeric = P_ID_MES)) 
        order by D.ID_TRABAJADOR, A.FECHA_INI;

      
BEGIN
      
      l_fec_actual_vac:= current_date;
      l_fec_desde_vac := to_date(P_ID_ANHO::text||'-'||P_ID_MES::text||'-01','YYYY-MM-DD');

      if l_fec_desde_vac>l_fec_actual_vac then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor que fecha actual';
--           GOTO salida_vac;
      end if;

      delete from PLLA_CONTROL_ASISTENCIA where (to_char(FECHA,'YYYY'))::numeric =P_ID_ANHO and (to_char(FECHA,'MM'))::numeric =P_ID_MES
      and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
      AND ID_SEDEAREA IN (
        SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
      );

      OPEN curvac;
      FETCH curvac INTO l_fecha_ini_vac,l_fecha_fin_vac,l_id_trabajador_vac,l_id_rol_vacacion,l_id_sedearea;

      WHILE curvac%FOUND LOOP
 
        if l_fecha_ini_vac<l_fecha_ini_vac then
          l_fec_desde_vac:= to_date(P_ID_ANHO::text||'-'||P_ID_MES::text||'-01','YYYY-MM-DD');
        else
          l_fec_desde_vac:=l_fecha_ini_vac;
        end if;

        if l_fecha_fin_vac>l_fec_actual_vac then
          l_fec_hasta_vac := l_fec_actual_vac;
        else
          l_fec_hasta_vac := l_fecha_fin_vac;
        end if;

        WHILE l_fec_desde_vac<=l_fec_hasta_vac LOOP
        
          select count(*) into STRICT l_contar  from  PLLA_CONTROL_ASISTENCIA where id_trabajador = l_id_trabajador_vac and  to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_vac,'YYYY-MM-DD') and ID_MOTIVO_ASIST in ('FA','V','PL');

          if l_contar = 0 then
            select coalesce(max(ITEM),0) +1 into STRICT l_item from PLLA_CONTROL_ASISTENCIA where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_vac,'YYYY-MM-DD') and ID_MOTIVO_ASIST=l_id_motivo_asist;
            l_id_control_asistencia:=to_char(l_fec_desde_vac,'YYYYMMDD')||l_id_motivo_asist||l_item::text;

            
            
            insert into PLLA_CONTROL_ASISTENCIA(
                ID_CONTROL_ASISTENCIA,
                ITEM,
                ID_TRABAJADOR,
                ID_SEDEAREA,
                ID_MOTIVO_ASIST,
                FECHA,
                ID_ROL_VACACION,
                ID_USER_REG,
                FECHA_REG
              )VALUES (
                l_id_control_asistencia,
                l_item,
                l_id_trabajador_vac,
                l_id_sedearea,
                l_id_motivo_asist,
                l_fec_desde_vac,
                l_id_rol_vacacion,
                P_ID_USER_REG,
                clock_timestamp()
              );

              update PLLA_ASISTENCIA 
              set  ID_MOTIVO_ASIST = l_id_motivo_asist
              where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_vac,'YYYY-MM-DD')
              and id_trabajador=l_id_trabajador_vac;
            end if;
            l_fec_desde_vac:= l_fec_desde_vac +1;
          END LOOP;

        FETCH curvac INTO l_fecha_ini_vac,l_fecha_fin_vac,l_id_trabajador_vac,l_id_rol_vacacion,l_id_sedearea;

      END LOOP;
      CLOSE curvac;

--       <<salida_vac>>
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;

      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_benefits_sp_control_vacacion (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
