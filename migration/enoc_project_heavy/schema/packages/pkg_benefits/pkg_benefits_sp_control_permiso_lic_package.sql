-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_benefits,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_benefits_sp_control_permiso_lic (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';

        l_id_control_asistencia varchar(25);
        l_item bigint;

        l_fec_actual_lm timestamp(0);
        l_fec_desde_lm timestamp(0);
        l_fec_hasta_lm timestamp(0);

        l_fecha_ini_lm timestamp(0);
        l_fecha_fin_lm timestamp(0);
        l_id_tarabajador_lm bigint;
        l_id_sedearea bigint;
        l_id_licencia_permiso varchar(25);
        l_id_motivo_asist varchar(2):='PL';
        l_tipo varchar(2);

        l_id_lic_per varchar(25);
        l_id_perm_esp varchar(25);
        l_contar bigint;

        
        curperlic CURSOR FOR
        SELECT A.FECHA_DESDE,A.FECHA_HASTA,A.ID_TRABAJADOR,A.ID_LICENCIA_PERMISO,t.ID_SEDEAREA,'LP' AS TIPO
        FROM ENOC.VW_LICENCIA_PERMISO A,
         moises.trabajador t
        WHERE  A.id_trabajador=t.id_trabajador
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.PERIODO='D'
        AND A.ID_ESTADO_LICA_PER='03'
        AND A.ENGRUPO='N'
        AND case when P_ID_TRABAJADOR=0 then 0 else t.ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND (((TO_CHAR(A.FECHA_DESDE,'YYYY'))::numeric = P_ID_ANHO AND (TO_CHAR(A.FECHA_DESDE,'MM'))::numeric = P_ID_MES) OR ((TO_CHAR(A.FECHA_HASTA,'YYYY'))::numeric = P_ID_ANHO AND (TO_CHAR(A.FECHA_HASTA,'MM'))::numeric = P_ID_MES)) 
        
UNION ALL

        SELECT A.FECHA_DESDE,A.FECHA_HASTA,B.ID_TRABAJADOR,A.ID_LICENCIA_PERMISO,t.ID_SEDEAREA,'LP' AS TIPO
        FROM ENOC.VW_LICENCIA_PERMISO A,
        PLLA_LICENCIA_PERMISO_DET B,
        moises.trabajador t
        WHERE A.ID_LICENCIA_PERMISO =  B.ID_LICENCIA_PERMISO
        AND B.id_trabajador=t.id_trabajador
        AND A.ID_ENTIDAD=P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.PERIODO='D'
        AND A.ID_ESTADO_LICA_PER='03'
        AND A.ENGRUPO='S'
        AND case when P_ID_TRABAJADOR=0 then 0 else B.ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND (((TO_CHAR(A.FECHA_DESDE,'YYYY'))::numeric = P_ID_ANHO AND (TO_CHAR(A.FECHA_DESDE,'MM'))::numeric = P_ID_MES) OR ((TO_CHAR(A.FECHA_HASTA,'YYYY'))::numeric = P_ID_ANHO AND (TO_CHAR(A.FECHA_HASTA,'MM'))::numeric = P_ID_MES)) 
        order by ID_TRABAJADOR, FECHA_DESDE,TIPO;

      
BEGIN
      
      l_fec_actual_lm:= current_date;
      l_fec_desde_lm := to_date(P_ID_ANHO::text||'-'||P_ID_MES::text||'-01','YYYY-MM-DD');

      if l_fec_desde_lm>l_fec_actual_lm then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor que fecha actual';
--           GOTO salida_licper;
      end if;

      delete from PLLA_CONTROL_ASISTENCIA where (to_char(FECHA,'YYYY'))::numeric =P_ID_ANHO and (to_char(FECHA,'MM'))::numeric =P_ID_MES
      and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
      AND ID_SEDEAREA IN (
        SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
      );

      OPEN curperlic;
      FETCH curperlic INTO l_fecha_ini_lm,l_fecha_fin_lm,l_id_tarabajador_lm,l_id_licencia_permiso,l_id_sedearea,l_tipo;

      WHILE curperlic%FOUND LOOP
        if l_tipo ='LP' then
          l_id_lic_per :=l_id_licencia_permiso;
          l_id_perm_esp :=null;
        else
          l_id_lic_per :=null;
          l_id_perm_esp :=l_id_licencia_permiso;
        end if;

        if l_fecha_ini_lm<l_fecha_ini_lm then
          l_fec_desde_lm:=to_date(P_ID_ANHO::text||'-'||P_ID_MES::text||'-01','YYYY-MM-DD');
        else
          l_fec_desde_lm:=l_fecha_ini_lm;
        end if;

        if l_fecha_fin_lm>l_fec_desde_lm then
          l_fec_hasta_lm := l_fec_actual_lm;
        else
          l_fec_hasta_lm := l_fecha_fin_lm;
        end if;

        
        WHILE l_fec_desde_lm<=l_fec_hasta_lm LOOP
        
          select count(*) into STRICT l_contar  from  PLLA_CONTROL_ASISTENCIA where id_trabajador = l_id_tarabajador_lm and  to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_lm,'YYYY-MM-DD') and ID_MOTIVO_ASIST in ('FA','V','PL');

          if l_contar = 0 then
        
            select coalesce(max(ITEM),0) +1 into STRICT l_item from PLLA_CONTROL_ASISTENCIA where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_lm,'YYYY-MM-DD') and ID_MOTIVO_ASIST=l_id_motivo_asist;
            l_id_control_asistencia:=to_char(l_fec_desde_lm,'YYYYMMDD')||l_id_motivo_asist||l_item::text;

            
            insert into PLLA_CONTROL_ASISTENCIA(
                ID_CONTROL_ASISTENCIA,
                ITEM,
                ID_TRABAJADOR,
                ID_SEDEAREA,
                ID_MOTIVO_ASIST,
                FECHA,
                ID_LICENCIA_PERMISO,
                --ID_PERMISO_ESPECIAL,
                ID_USER_REG,
                FECHA_REG
              )VALUES (
                l_id_control_asistencia,
                l_item,
                 l_id_tarabajador_lm,
                l_id_sedearea,
                l_id_motivo_asist,
                l_fec_desde_lm,
                l_id_lic_per,
                --l_id_perm_esp,
                P_ID_USER_REG,
                clock_timestamp()
              );

              update PLLA_ASISTENCIA 
              set  ID_MOTIVO_ASIST = l_id_motivo_asist
              where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_lm,'YYYY-MM-DD')
              and id_trabajador=l_id_tarabajador_lm;

              l_fec_desde_lm:= l_fec_desde_lm +1;
          end if;
          END LOOP;

        FETCH curperlic INTO l_fecha_ini_lm,l_fecha_fin_lm,l_id_tarabajador_lm,l_id_licencia_permiso,l_id_sedearea,l_tipo;

      END LOOP;
      CLOSE curperlic;

--       <<salida_licper>>
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;

      
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_benefits_sp_control_permiso_lic (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
