-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_benefits,public;

       
       --Creado por la UPN
CREATE OR REPLACE PROCEDURE enoc.pkg_benefits_sp_generar_rol_vacacional_hist (P_ID_PERIODO_VAC_TRAB text,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';

        l_grupo bigint;
        l_total_dias bigint:=0;
        l_dias_anho bigint:=0;
       	l_dias_reg bigint:=0;
        l_dias bigint:=0;

BEGIN
        
	    	--Verificamos si hay un grupo incompleto, para tomar eso
		    SELECT max(GRUPO) INTO STRICT l_grupo FROM (SELECT c.ID_PERIODO_VAC_TRAB,c.DIAS_ANHO,a.GRUPO
			FROM ENOC.PLLA_ROL_VACACIONAL_HIST a 
			INNER JOIN ENOC.PLLA_ROL_VACACIONAL b ON a.ID_ROL_VACACION = b.ID_ROL_VACACION 
			INNER JOIN ENOC.PLLA_PERIODO_VAC_TRAB c ON b.ID_PERIODO_VAC_TRAB = c.ID_PERIODO_VAC_TRAB 
			WHERE c.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
			GROUP BY c.ID_PERIODO_VAC_TRAB,c.DIAS_ANHO,a.GRUPO
			HAVING c.DIAS_ANHO!=sum(b.DIAS) ) alias2;
			
			--Validamos si es null y tomamos el maximo mas uno grupo
			IF coalesce(l_grupo::text, '') = '' THEN
				SELECT COALESCE(max(a.GRUPO),0)+1 INTO STRICT l_grupo
				FROM ENOC.PLLA_ROL_VACACIONAL_HIST a 
				INNER JOIN ENOC.PLLA_ROL_VACACIONAL b ON a.ID_ROL_VACACION = b.ID_ROL_VACACION 
				WHERE b.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
			END IF;
			
			--Obtenemos algunos datos del periodo vac trab
		
			SELECT DIAS_ANHO,TOTAL_DIAS INTO STRICT l_dias_anho,l_total_dias FROM ENOC.PLLA_PERIODO_VAC_TRAB ppvt
			WHERE ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
		
			--obtenemos cuanto ya fue registrado en hist
			SELECT COALESCE(sum(b.DIAS),0) INTO STRICT l_dias_reg
			FROM ENOC.PLLA_ROL_VACACIONAL_HIST a
			INNER JOIN ENOC.PLLA_ROL_VACACIONAL b ON a.ID_ROL_VACACION = b.ID_ROL_VACACION 
			WHERE b.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
			AND a.GRUPO = l_grupo;
			
		
			--registramos si los que aun no fueron registrados en _hist
		
			SELECT l_dias_reg + COALESCE(SUM(a.DIAS),0) INTO STRICT l_dias FROM ENOC.PLLA_ROL_VACACIONAL a
			WHERE NOT EXISTS (
				SELECT 1 FROM ENOC.PLLA_ROL_VACACIONAL_HIST x WHERE x.ID_ROL_VACACION = a.ID_ROL_VACACION
			)
			AND a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
		
			IF l_dias <= l_dias_anho THEN
				INSERT INTO ENOC.PLLA_ROL_VACACIONAL_HIST
				SELECT a.ID_ROL_VACACION,l_grupo AS grupo FROM ENOC.PLLA_ROL_VACACIONAL a
				WHERE NOT EXISTS (
					SELECT 1 FROM ENOC.PLLA_ROL_VACACIONAL_HIST x WHERE x.ID_ROL_VACACION = a.ID_ROL_VACACION
				)
				AND a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB;
			ELSIF l_dias > l_dias_anho THEN
				INSERT INTO ENOC.PLLA_ROL_VACACIONAL_HIST
				SELECT a.ID_ROL_VACACION,l_grupo AS grupo FROM ENOC.PLLA_ROL_VACACIONAL a
				WHERE NOT EXISTS (
					SELECT 1 FROM ENOC.PLLA_ROL_VACACIONAL_HIST x WHERE x.ID_ROL_VACACION = a.ID_ROL_VACACION
				)
				AND a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
				AND coalesce(a.ID_PARENT::text, '') = '';
				--Sumamos mas 1, y agregamos el siguiente grupo
				l_grupo := l_grupo +1;
			
				INSERT INTO ENOC.PLLA_ROL_VACACIONAL_HIST
				SELECT a.ID_ROL_VACACION,l_grupo AS grupo FROM ENOC.PLLA_ROL_VACACIONAL a
				WHERE a.ID_PERIODO_VAC_TRAB = P_ID_PERIODO_VAC_TRAB
				AND a.CONDICION = 'P';
				
			END IF;
		
--         <<salida_rol_vac>>
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
        END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_benefits_sp_generar_rol_vacacional_hist (P_ID_PERIODO_VAC_TRAB text,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
