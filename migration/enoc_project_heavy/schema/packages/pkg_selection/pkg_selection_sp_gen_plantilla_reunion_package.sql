-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_selection,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_selection_sp_gen_plantilla_reunion (P_ID_ENTREVISTA_CAND bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_plantilla text:='';
        l_mensajeo text:='';
        l_parametro  text:='';
        l_longitud bigint:=0;
        l_id_req_cand_plantilla bigint;
        l_id_estado_req_cand bigint;
        l_id_tipo_reunion bigint;
        curpara CURSOR FOR
        SELECT 
          ID_REQ_CAND_PARAMETRO,
          TIPO,
          PARAMETRO,
          SIGNIFICADO,
          COMENTARIO,
          CAMPO,
          PROCESO,
          VIGENCIA
        from PLLA_REQ_CAND_PARAMETRO
        WHERE TIPO_MEN IN ('AM','RE')
        AND VIGENCIA=1 
        ORDER BY ID_REQ_CAND_PARAMETRO;

      
BEGIN
      
        select id_req_cand_plantilla INTO STRICT l_id_req_cand_plantilla from enoc.PLLA_ENTREVISTA_CAND WHERE ID_ENTREVISTA_CAND=P_ID_ENTREVISTA_CAND;

        --l_id_plantilla_contrato:=5;
        
        SELECT COUNT(*) INTO STRICT l_contar  from PLLA_REQ_CAND_PLANTILLA where id_req_cand_plantilla=l_id_req_cand_plantilla;

        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No esta asignado en la configurado de plantilla';
--             goto salida_proc;
        END IF;

        select REUNION,coalesce(length(REUNION),0) INTO STRICT l_plantilla,l_longitud from PLLA_REQ_CAND_PLANTILLA where id_req_cand_plantilla=l_id_req_cand_plantilla;

        
        IF coalesce(l_plantilla::text, '') = '' THEN
            l_error:=1;
            l_msgerror:='No esta configurado plantilla';
--             goto salida_proc;
        END IF;

        FOR cur in curpara LOOP
        BEGIN
          if cur.tipo='F' then
             EXECUTE 'SELECT '||cur.campo||',id_tipo_reunion  from ENOC.VW_ENTREVISTA_CAND a where a.ID_ENTREVISTA_CAND=:P_ID' into STRICT l_parametro,l_id_tipo_reunion USING P_ID_ENTREVISTA_CAND;

             if cur.parametro='LINK_LUGAR' then
              if l_id_tipo_reunion=2 then
                l_parametro:='<a href="'||l_parametro||'" target="_blank">'||l_parametro||'</a>';
              end if;
             end if;

             
          else
          
            EXECUTE 'BEGIN PKG_SELECTION.'||cur.proceso||'(:P_ID,:P_PARAMETRO,:l_parametro,:l_error,:l_msgerror); end;'
            USING P_ID_ENTREVISTA_CAND,cur.parametro,IN OUT l_parametro,IN OUT l_error,IN OUT l_msgerror;

              
          end if;
          --dbms_output.put_line(l_plantilla||' '||cur.parametro||'='||l_parametro||'-'||l_error);
          if coalesce(l_parametro::text, '') = '' then
            l_parametro:='{'||cur.parametro||'}';
          end if;
          l_plantilla:=replace(l_plantilla,'['||cur.parametro||']',l_parametro);
        END;
        END LOOP;

        IF l_error=0 THEN
          UPDATE enoc.PLLA_ENTREVISTA_CAND SET
          MENSAJE = l_plantilla
          WHERE ID_ENTREVISTA_CAND=P_ID_ENTREVISTA_CAND;
        END IF;

        
--         <<salida_proc>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_selection_sp_gen_plantilla_reunion (P_ID_ENTREVISTA_CAND bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
