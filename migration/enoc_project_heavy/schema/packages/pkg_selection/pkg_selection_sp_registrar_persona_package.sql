-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_selection,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_selection_sp_registrar_persona ( P_ID_PERSONA bigint, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text, P_PATERNO text, P_MATERNO text, P_NOMBRE text, P_SEXO text, P_CORREO text, P_ID_TIPOPAIS bigint, P_FEC_NAC timestamp(0), P_CONF_TRAMA text, P_CELULAR text, P_PASSWORD text, P_ID_PERSONA_NEW OUT bigint ) AS $body$
DECLARE


    l_correo varchar(100);
    l_num_documento varchar(35);
    l_materno varchar(100);
    l_paterno varchar(100);
    l_nombre varchar(100);
    l_id_tipodocumento bigint;
    l_contar integer;
    l_id_persona bigint:=0;
    l_id_user bigint:=205662;---crear
BEGIN
  
      IF P_ID_PERSONA = 0 THEN
        select 
        count(1) into STRICT l_contar
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;

        IF l_contar=1 THEN
          select 
          ID_PERSONA into STRICT l_id_persona
          FROM MOISES.PERSONA_DOCUMENTO
          WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        END IF;
      ELSE
        l_id_persona:=P_ID_PERSONA;
      END IF;

      IF l_id_persona =0 THEN 
        select coalesce(max(id_persona),0) +1 into STRICT l_id_persona from moises.persona;
        INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE,
                  PATERNO,
                  MATERNO
              )VALUES (
                  l_id_persona,
                  P_NOMBRE,
                  P_PATERNO,
                  P_MATERNO
        )returning ID_PERSONA INTO l_id_persona;

        INSERT INTO MOISES.PERSONA_NATURAL(
                  ID_PERSONA,
                  ID_TIPOPAIS,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  SEXO,
                  CORREO,
                  FEC_NACIMIENTO,
                  CELULAR
              )VALUES (
                  l_id_persona,
                  P_ID_TIPOPAIS,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  P_SEXO,
                  P_CORREO,
                  P_FEC_NAC,
                  P_CELULAR
         );

        INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES (
                  l_id_persona,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  1
         );


        INSERT INTO MOISES.PERSONA_VIRTUAL(
                ID_VIRTUAL,
                ID_PERSONA,
                ID_TIPOVIRTUAL,
                DIRECCION,
                ES_ACTIVO
              )VALUES (
                  1,
                  l_id_persona,
                  1,
                  P_CORREO,
                  1
          );
      ELSE
          SELECT count(1) into STRICT l_contar
          FROM MOISES.PERSONA_NATURAL
          WHERE ID_PERSONA=l_id_persona;
          IF l_contar=0 THEN
            INSERT INTO MOISES.PERSONA_NATURAL(
                  ID_PERSONA,
                  ID_TIPOPAIS,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  SEXO,
                  CORREO,
                  FEC_NACIMIENTO
              )VALUES (
                  l_id_persona,
                  P_ID_TIPOPAIS,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  P_SEXO,
                  P_CORREO,
                  P_FEC_NAC
            );
          END IF;

          SELECT count(1) into STRICT l_contar
          FROM MOISES.PERSONA_DOCUMENTO
          WHERE ID_PERSONA=l_id_persona
          AND ID_TIPODOCUMENTO=P_ID_TIPODOCUMENTO
          AND NUM_DOCUMENTO=P_NUM_DOCUMENTO;

          IF l_contar=0 THEN
             INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES (
                  l_id_persona,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  1
              );
          END IF;

          SELECT count(1) into STRICT l_contar
          FROM MOISES.PERSONA_VIRTUAL
          WHERE ID_PERSONA=l_id_persona
          AND ID_VIRTUAL=1;

          IF l_contar=0 THEN
             INSERT INTO MOISES.PERSONA_VIRTUAL(
                ID_VIRTUAL,
                ID_PERSONA,
                ID_TIPOVIRTUAL,
                DIRECCION,
                ES_ACTIVO
              )VALUES (
                  1,
                  l_id_persona,
                  1,
                  P_CORREO,
                  1
            );
          END IF;

      END IF;
      
      update moises.persona_natural set
      correo=P_CORREO
      where id_persona=l_id_persona;
      --and correo is null;
      select paterno, materno, nombre 
      into STRICT l_paterno, l_materno, l_nombre
      from moises.persona where id_persona=l_id_persona;

      insert into enoc.users(
        ID,
        NOMBRE,
        EMAIL,
        PASSWORD,
        CREATED_AT,
        CONFIRMADO,
        CONF_TRAMA,
        ID_TIPODOCUMENTO,
        NUM_DOCUMENTO
      ) values (
        l_id_persona,
        l_nombre||' '||l_paterno||' '||l_materno,
        P_CORREO,
        P_PASSWORD,
        clock_timestamp(),
        'N',
        P_CONF_TRAMA,
        P_ID_TIPODOCUMENTO,
        P_NUM_DOCUMENTO
      );
      
  
        
      P_ID_PERSONA_NEW:= l_id_persona;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_selection_sp_registrar_persona ( P_ID_PERSONA bigint, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text, P_PATERNO text, P_MATERNO text, P_NOMBRE text, P_SEXO text, P_CORREO text, P_ID_TIPOPAIS bigint, P_FEC_NAC timestamp(0), P_CONF_TRAMA text, P_CELULAR text, P_PASSWORD text, P_ID_PERSONA_NEW OUT bigint ) FROM PUBLIC;
