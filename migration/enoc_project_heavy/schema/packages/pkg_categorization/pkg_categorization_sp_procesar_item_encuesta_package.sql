-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_categorization,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_categorization_sp_procesar_item_encuesta (P_ID_CATEGORIZACION bigint, P_ID_CATEGORIA_DOCENTE bigint,P_ID_DEPTO text,P_ID_CONDICION bigint,P_ID_DOCENTE bigint,P_ID_AREA bigint,P_TIPO text,P_TIPO_PROC text,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

 --P_TIPO_PROC P: PROCESO, C:CIERRE, E: PROCESO ENCUESTA
 l_error bigint:=0;
 l_msgerror varchar(200):='';
 l_id_docente bigint;
 l_id_persona bigint;
 l_id_categoria_docente bigint;

 curDocente CURSOR FOR
   SELECT A.ID_DOCENTE,A.ID_PERSONA,A.ID_CATEGORIA_DOCENTE ,A.ID_ESTADO_DOCENTE,A.ID_CONDICION
   FROM ENOC.CAT_DOCENTE A, ENOC.VW_ENT_DEP_AREA_CCOSTO B
   WHERE A.ID_SEDEAREA=B.ID_SEDEAREA
   AND A.ID_CATEGORIZACION=P_ID_CATEGORIZACION
   AND A.ID_ESTADO_DOCENTE NOT IN ('04','00')--04 DESISTIO, 00: ANULADO
   AND CASE WHEN P_TIPO='D' THEN  COALESCE(CIERRE_EVALUACION,0) ELSE COALESCE(CIERRE_ENTREVISTA,0) END = 0
   AND CASE WHEN (P_ID_DEPTO IS NOT NULL AND P_ID_DEPTO::text <> '') THEN B.ID_DEPTO_PADRE ELSE '0' END =  CASE WHEN (P_ID_DEPTO IS NOT NULL AND P_ID_DEPTO::text <> '') THEN P_ID_DEPTO ELSE '0' END
   AND CASE WHEN P_ID_CATEGORIA_DOCENTE <> 0 THEN A.ID_CATEGORIA_DOCENTE ELSE 0 END =  CASE WHEN P_ID_CATEGORIA_DOCENTE <> 0 THEN P_ID_CATEGORIA_DOCENTE ELSE 0 END
   AND CASE WHEN P_ID_CONDICION  <> 0  THEN A.ID_CONDICION  ELSE 0 END =  CASE WHEN P_ID_CONDICION  <> 0 THEN P_ID_CONDICION ELSE 0 END
   AND CASE WHEN P_ID_AREA  <> 0 THEN A.ID_AREA  ELSE 0 END =  CASE WHEN P_ID_AREA  <> 0 THEN P_ID_AREA ELSE 0 END
   AND CASE WHEN P_ID_DOCENTE  <> 0 THEN A.ID_DOCENTE  ELSE 0 END =  CASE WHEN P_ID_DOCENTE  <> 0 THEN P_ID_DOCENTE ELSE 0 END 
   ORDER BY A.ID_DOCENTE;

 curItem CURSOR FOR
  SELECT 
  B.ID_ITEM_CATEGORIA, 
  D.ID_INSTRUMENTO, 
  D.ID_SALA, 
  C.CODIGO, 
  B.ID_SECCION ,
  D.ID_TIPO_EVALUADOR,
  B.TIPO_EVALUACION,
  coalesce(B.PUNTOS,0) as PUNTOS,
  coalesce(B.UNIDAD,0) as UNIDAD,
  coalesce(B.MAXIMO,0) AS MAXIMO,
  coalesce(B.MINIMO,0) AS MINIMO
  FROM enoc.VW_CAT_ITEM A, enoc.CAT_ITEM_CATEGORIA B ,enoc.CAT_TIPO_ITEM C, enoc.CAT_TIPO_EVAL_INSTRUMENTO D
  WHERE A.ID_ITEM=B.ID_ITEM
  AND A.ID_TIPO_ITEM=C.ID_TIPO_ITEM
  AND B.ID_TIPO_EVAL_INSTRUMENTO=D.ID_TIPO_EVAL_INSTRUMENTO
  AND C.CODIGO IN ('RE','RES')
  AND A.TIPO=P_TIPO  --D: DOCUEMNTO, E:ENTREVISTA
  AND B.ID_CATEGORIZACION=P_ID_CATEGORIZACION
  AND B.ID_CATEGORIA_DOCENTE=l_id_categoria_docente
  AND D.ID_SALA IN (
    SELECT  X.ID_SALA
    from lucas.instrumento_cuestionario  X
    where X.id_instrumento= D.ID_INSTRUMENTO 
    and X.id_persona=l_id_persona
    AND X.ID_EVALUADOR IN (
      select Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
      where W.id_evaluador_det=Y.id_evaluador_det
      and Y.id_evaluador=P.id_evaluador
      and P.id_categorizacion=P_ID_CATEGORIZACION
      AND W.ID_DOCENTE=l_id_docente
      and Y.id_tipo_evaluador=D.id_tipo_evaluador
    ) 
  ) 
  ORDER BY B.ID_ITEM_CATEGORIA;

  l_cantidad decimal(10,2):=0;
  l_total decimal(10,2):=0;
  l_puntaje decimal(10,2):=0;
  l_cant_puntaje decimal(10,2):=0;
  l_id_resultado bigint;
  l_contar bigint;
  l_puntaje_final decimal(10,2):=0;
  l_eval bigint:=0;
  l_pje_entrevista decimal(10,2):=0;
  l_pje_grupal decimal(10,2):=0;
  l_pje_individual decimal(10,2):=0;
  l_puntaje_min decimal(10,2):=0;
  l_puntaje_max_opc decimal(10,2):=0;

  l_pje_grupal_ob decimal(10,2):=0;
  l_pje_individual_ob decimal(10,2):=0;
  l_pje_grupal_op decimal(10,2):=0;
  l_pje_individual_op decimal(10,2):=0;
  l_final decimal(10,2):=0;
  l_estado_docente varchar(5);
  l_id_docente_estado bigint;
  l_i bigint:=0;
  l_pje_grupal_op_real decimal(10,2):=0;
  l_pje_individual_op_real decimal(10,2):=0;
BEGIN
  FOR curD in curDocente LOOP
  BEGIN
    l_id_docente:=curD.ID_DOCENTE;
    l_id_persona:=curD.ID_PERSONA;
    l_id_categoria_docente:=curD.ID_CATEGORIA_DOCENTE;

    FOR curI in curItem LOOP
    BEGIN
      l_cant_puntaje:=0;
      l_puntaje:=0;
      l_puntaje_final:=0;
      IF curI.CODIGO ='RES' THEN

        select COUNT(1) into STRICT  l_cantidad
        from lucas.instrumento_cuestionario  X
        where X.id_instrumento= curI.ID_INSTRUMENTO
        and X.id_persona=l_id_persona
        AND X.ID_SALA=curI.ID_SALA
        AND X.ID_EVALUADOR IN (
            SELECT Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
            where W.id_evaluador_det=Y.id_evaluador_det
            and Y.id_evaluador=P.id_evaluador
            and P.id_categorizacion=P_ID_CATEGORIZACION
            AND W.ID_DOCENTE=l_id_docente
            and Y.id_tipo_evaluador=curI.ID_TIPO_EVALUADOR
        );

        select  COALESCE(SUM(coalesce(b.valor_respuesta,0)),0) into STRICT  l_total
        from lucas.INSTRUMENTO_ITEM a ,
        lucas.instrumento_respuesta b
        WHERE a.id_item=b.id_alternativa
        AND a.id_instrumento= curI.ID_INSTRUMENTO
        AND  b.id_cuestionario IN (
          SELECT X.id_cuestionario
          from lucas.instrumento_cuestionario  X
          where X.id_instrumento= curI.ID_INSTRUMENTO
          and X.id_persona=l_id_persona
          AND X.ID_SALA=curI.ID_SALA
          AND X.ID_EVALUADOR IN (
              SELECT Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
              where W.id_evaluador_det=Y.id_evaluador_det
              and Y.id_evaluador=P.id_evaluador
              and P.id_categorizacion=P_ID_CATEGORIZACION
              AND W.ID_DOCENTE=l_id_docente
              and Y.id_tipo_evaluador=curI.ID_TIPO_EVALUADOR
          ) 
        )
        AND A.ID_PARENT=curI.ID_SECCION;


        if l_cantidad>0 then
          l_cant_puntaje:=round((l_total/l_cantidad)::numeric,0);
        end if;

      ELSE
        select  round((coalesce(avg(x.puntaje_con_formula),0))::numeric,0)  INTO STRICT l_cant_puntaje
        from lucas.instrumento_cuestionario  X
        where X.id_instrumento= curI.ID_INSTRUMENTO
        and X.id_persona=l_id_persona
        AND X.ID_SALA=curI.ID_SALA
        AND X.ID_EVALUADOR IN (
            SELECT Y.id_evaluador from  enoc.CAT_DOCENTE_EVALUADOR W, enoc.cat_evaluador_det Y,  enoc.cat_evaluador P
            where W.id_evaluador_det=Y.id_evaluador_det
            and Y.id_evaluador=P.id_evaluador
            and P.id_categorizacion=P_ID_CATEGORIZACION
            AND W.ID_DOCENTE=l_id_docente
            and Y.id_tipo_evaluador=curI.ID_TIPO_EVALUADOR
        );
      END IF;

      --calculo puntaje
      
      if curI.TIPO_EVALUACION ='R' then
        l_puntaje := 0;

        select count(1) into STRICT l_contar from enoc.CAT_ITEM_FORMULA 
        where ID_ITEM_CATEGORIA= curI.ID_ITEM_CATEGORIA
        and (l_cant_puntaje between coalesce(DESDE,0) and case when coalesce(HASTA,0)=0 then l_cant_puntaje else coalesce(HASTA,0) end);

        IF l_contar=1 THEN
          select COALESCE(punto,0) INTO STRICT l_puntaje from enoc.CAT_ITEM_FORMULA 
          where ID_ITEM_CATEGORIA= curI.ID_ITEM_CATEGORIA
          and (l_cant_puntaje between coalesce(DESDE,0) and case when coalesce(HASTA,0)=0 then l_cant_puntaje else coalesce(HASTA,0) end);
        END IF;

        l_puntaje_final:=l_puntaje;

      else
        l_puntaje := 0;
        if curI.UNIDAD>0 then
          l_puntaje := (curI.PUNTOS * l_cant_puntaje)/curI.UNIDAD;
        end if;
        l_puntaje_final:=l_puntaje;

      end if;

      IF curI.MINIMO> 0 THEN
          IF l_puntaje<curI.MINIMO THEN
            l_puntaje_final:=0;
            l_eval:=1;
          END IF;
      END IF;

      if l_eval=0 then
          IF curI.MAXIMO> 0 THEN
            IF l_puntaje>curI.MAXIMO THEN
              l_puntaje_final:=curI.MAXIMO;
              l_eval:=1;
            END IF;
          END IF;
      end if;

      l_i:=l_i+1;

      select count(1) into STRICT l_contar from ENOC.CAT_RESULTADO where id_docente=l_id_docente and ID_ITEM_CATEGORIA=curI.ID_ITEM_CATEGORIA;

      if l_contar=0 then
        select coalesce(max(ID_RESULTADO),0) + 1 into STRICT l_id_resultado from ENOC.CAT_RESULTADO;

        insert into ENOC.CAT_RESULTADO(
          ID_RESULTADO,
          ID_ITEM_CATEGORIA,
          ID_DOCENTE,
          PJE_INDIVIDUAL,
          PJE_GRUPAL,
          CANT_ORIGEN,
          CANT_ASIG_INDIVIDUAL,
          CANT_ASIG_GRUPAL,
          ID_USER_REG,
          FECHA_REG
        )values (
          l_id_resultado,
          curI.ID_ITEM_CATEGORIA,
          l_id_docente,
          l_puntaje_final,
          l_puntaje_final,
          l_cant_puntaje,
          l_cant_puntaje,
          l_cant_puntaje,
          P_ID_USER,
          clock_timestamp()
        );
      else
        update ENOC.CAT_RESULTADO set
          PJE_INDIVIDUAL=l_puntaje_final,
          PJE_GRUPAL=l_puntaje_final,
          CANT_ORIGEN=l_cant_puntaje,
          CANT_ASIG_INDIVIDUAL=l_cant_puntaje,
          CANT_ASIG_GRUPAL=l_cant_puntaje,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD=clock_timestamp()
        where id_docente=l_id_docente
        and ID_ITEM_CATEGORIA=curI.ID_ITEM_CATEGORIA;

      end if;

    END;
    END LOOP;

    
    
    --CALCULO FINAL
    l_pje_grupal:=0;
    l_pje_individual:=0;
    l_final:=0;
    l_estado_docente:= '';

    SELECT COALESCE(PUNTAJE_MINIMO,0),COALESCE(PORCENTAJE,0) INTO STRICT l_puntaje_min, l_puntaje_max_opc
    FROM ENOC.CAT_APROBACION
    WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
    AND ID_CATEGORIA_DOCENTE=l_id_categoria_docente
    AND ID_CONDICION = curD.ID_CONDICION;

    IF P_TIPO='D' THEN
    
      SELECT count(1) INTO STRICT l_contar
      FROM ENOC.CAT_APROBACION
      WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
      AND ID_CATEGORIA_DOCENTE=l_id_categoria_docente
      AND ID_CONDICION = curD.ID_CONDICION;

      if l_contar=1 then
      
        
        
        SELECT 
        coalesce(sum(case when b.obligatorio='O' then c.PJE_GRUPAL else 0 end),0) as l_pje_grupal_ob,
        coalesce(sum(case when b.obligatorio='OP' then c.PJE_GRUPAL else 0 end),0) as l_pje_grupal_op,
        coalesce(sum(case when b.obligatorio='O' then c.PJE_INDIVIDUAL else 0 end),0) as l_pje_individual_ob,
        coalesce(sum(case when b.obligatorio='OP' then c.PJE_INDIVIDUAL else 0 end),0) as l_pje_individual_op
        into STRICT
        l_pje_grupal_ob,
        l_pje_grupal_op,
        l_pje_individual_ob,
        l_pje_individual_op
        FROM enoc.VW_CAT_ITEM A, enoc.CAT_ITEM_CATEGORIA B ,ENOC.CAT_RESULTADO C
        WHERE A.ID_ITEM=B.ID_ITEM
        AND B.ID_ITEM_CATEGORIA=C.ID_ITEM_CATEGORIA
        AND B.ID_CATEGORIZACION=P_ID_CATEGORIZACION
        AND B.ID_CATEGORIA_DOCENTE=l_id_categoria_docente 
        AND C.id_docente=l_id_docente
        AND A.TIPO='D';

        l_pje_grupal_op_real:= l_pje_grupal_op;
        l_pje_individual_op_real:=l_pje_individual_op;

        if l_puntaje_max_opc>0 then
          if l_pje_grupal_op>l_puntaje_max_opc then
            l_pje_grupal_op:=l_puntaje_max_opc;
          end if;
          if l_pje_individual_op>l_puntaje_max_opc then
            l_pje_individual_op:=l_puntaje_max_opc;
          end if;
        end if;

        l_pje_grupal:=l_pje_grupal_ob+l_pje_grupal_op;
        l_pje_individual:=l_pje_individual_ob+l_pje_individual_op;

        IF P_TIPO_PROC in ('P','E') THEN
          UPDATE ENOC.CAT_DOCENTE SET
            PJE_INDIVIDUAL=l_pje_individual,
            PJE_INDIVIDUAL_OPC= l_pje_individual_op,
            PJE_INDIVIDUAL_OBL=l_pje_individual_ob,
            PJE_GRUPAL=l_pje_grupal,
            PJE_GRUPAL_OPC=l_pje_grupal_op,
            PJE_GRUPAL_OBL=l_pje_grupal_ob,
            PJE_INDIVIDUAL_OPC_REAL=l_pje_individual_op_real,
            PJE_GRUPAL_OPC_REAL=l_pje_grupal_op_real,
            ID_USER_MOD=P_ID_USER,
            FECHA_MOD=clock_timestamp()
          WHERE ID_DOCENTE=l_id_docente;
        ELSE
          UPDATE ENOC.CAT_DOCENTE SET
            PJE_INDIVIDUAL=l_pje_individual,
            PJE_INDIVIDUAL_OPC= l_pje_individual_op,
            PJE_INDIVIDUAL_OBL=l_pje_individual_ob,
            PJE_GRUPAL=l_pje_grupal,
            PJE_GRUPAL_OPC=l_pje_grupal_op,
            PJE_GRUPAL_OBL=l_pje_grupal_ob,
            PJE_INDIVIDUAL_OPC_REAL=l_pje_individual_op_real,
            PJE_GRUPAL_OPC_REAL=l_pje_grupal_op_real,
            CIERRE_EVALUACION=1,
            ID_USER_MOD=P_ID_USER,
            FECHA_MOD=clock_timestamp()
          WHERE ID_DOCENTE=l_id_docente;
        END IF;

      end if;

    ELSE
      SELECT COALESCE(SUM(C.PJE_GRUPAL),0) INTO STRICT  l_pje_entrevista
      FROM enoc.VW_CAT_ITEM A, enoc.CAT_ITEM_CATEGORIA B ,ENOC.CAT_RESULTADO C
      WHERE A.ID_ITEM=B.ID_ITEM
      AND B.ID_ITEM_CATEGORIA=C.ID_ITEM_CATEGORIA
      AND B.ID_CATEGORIZACION=P_ID_CATEGORIZACION
      AND B.ID_CATEGORIA_DOCENTE=l_id_categoria_docente 
      AND C.id_docente=l_id_docente
      AND A.TIPO='E'; --D: DOCUEMNTO, E:ENTREVIST;
      IF P_TIPO_PROC='C' THEN
        UPDATE ENOC.CAT_DOCENTE SET
          PJE_ENTREVISTA=l_pje_entrevista,
          APROB_ENTREVISTA='1',
          CIERRE_ENTREVISTA=1,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD=clock_timestamp()
        WHERE ID_DOCENTE=l_id_docente;

      ELSE
        UPDATE ENOC.CAT_DOCENTE SET
          PJE_ENTREVISTA=l_pje_entrevista,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD=clock_timestamp()
        WHERE ID_DOCENTE=l_id_docente;
      END IF;
    END IF;

    
    --FINAL
    
    SELECT COALESCE(PJE_GRUPAL,0) + COALESCE(PJE_ENTREVISTA,0) INTO STRICT l_final FROM ENOC.CAT_DOCENTE WHERE ID_DOCENTE=l_id_docente;

    IF P_TIPO_PROC='E' THEN
      l_estado_docente:=curD.ID_ESTADO_DOCENTE;
    ELSE
      if l_final>=l_puntaje_min then
        l_estado_docente:='02';
      else
        l_estado_docente:='03';
      end if;
    END IF;

    UPDATE ENOC.CAT_DOCENTE SET
      ID_ESTADO_DOCENTE=l_estado_docente,
      ID_USER_MOD=P_ID_USER,
      FECHA_MOD=clock_timestamp()
    WHERE ID_DOCENTE=l_id_docente;

    IF l_estado_docente<>curD.ID_ESTADO_DOCENTE THEN
      
      select coalesce(max(ID_DOCENTE_ESTADO),0) + 1 into STRICT l_id_docente_estado from ENOC.CAT_DOCENTE_ESTADO;

      insert into ENOC.CAT_DOCENTE_ESTADO(
        ID_DOCENTE_ESTADO,
        ID_ESTADO_DOCENTE,
        ID_DOCENTE,
        ID_USER,
        FECHA
      )values (
        l_id_docente_estado,
        l_estado_docente,
        l_id_docente,
        P_ID_USER,
        clock_timestamp()
      );


    END IF;
      --FIN FINAL
  END;
  END LOOP;

  if l_i =0 then
    --l_error:=1;
    l_msgerror:='No hay datos para procesar';
  end if;

--   <<salida>>
  P_ERROR:=l_error;
  P_MSGERROR:=l_msgerror;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_categorization_sp_procesar_item_encuesta (P_ID_CATEGORIZACION bigint, P_ID_CATEGORIA_DOCENTE bigint,P_ID_DEPTO text,P_ID_CONDICION bigint,P_ID_DOCENTE bigint,P_ID_AREA bigint,P_TIPO text,P_TIPO_PROC text,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
