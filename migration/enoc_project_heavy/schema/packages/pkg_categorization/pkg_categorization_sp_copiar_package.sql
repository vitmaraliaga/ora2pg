-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_categorization,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_categorization_sp_copiar (P_ID_CATEGORIZACION bigint,P_ID_CATEGORIA_DOCENTE bigint,P_ID_CATEGORIZACION_COPIAR bigint,P_ID_CATEGORIA_DOCENTE_COPIAR bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

 l_contar bigint;
 l_error bigint:=0;
 l_msgerror varchar(200):='';
 l_id bigint;
 l_copiar bigint:=0;

BEGIN

  if P_ID_CATEGORIZACION = P_ID_CATEGORIZACION_COPIAR then
    if P_ID_CATEGORIA_DOCENTE=P_ID_CATEGORIA_DOCENTE_COPIAR then
      l_error:=1;
      l_msgerror:='No es posible copiar del mismo categoria docente para la misma categorizaci√≥n';
--       goto salida;
    end if;
    l_copiar:=1;
  end if;

  
  select coalesce(max(id_item_categoria),0) into STRICT l_id from enoc.cat_item_categoria;

  insert into enoc.cat_item_categoria(
  ID_ITEM_CATEGORIA,
  ID_CATEGORIZACION,
  ID_ITEM,
  TIPO_EVALUACION,
  EVALUA,
  OBLIGATORIO,
  ID_CATEGORIA_DOCENTE,
  UNIDAD,
  PUNTOS,
  MINIMO,
  MAXIMO,
  ID_ITEM_CATEGORIA_ANT,
  ID_USER_REG,
  FECHA_REG,
  ID_TIPO_EVAL_INSTRUMENTO,
  ID_SECCION
  )
  SELECT (row_number() OVER ( ORDER BY ID_ITEM_CATEGORIA ASC )) + l_id as ID_ITEM_CATEGORIA ,
  P_ID_CATEGORIZACION,
  ID_ITEM,
  TIPO_EVALUACION,
  EVALUA,
  OBLIGATORIO,
  P_ID_CATEGORIA_DOCENTE,
  UNIDAD,
  PUNTOS,
  MINIMO,
  MAXIMO,
  ID_ITEM_CATEGORIA,
  P_ID_USER,
  clock_timestamp(),
  case when l_copiar=1 then ID_TIPO_EVAL_INSTRUMENTO else null end,
  case when l_copiar=1 then ID_SECCION else null end
  from enoc.cat_item_categoria 
  where ID_CATEGORIZACION = P_ID_CATEGORIZACION_COPIAR
  and ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE_COPIAR
  and id_item not in (
    SELECT id_item from enoc.cat_item_categoria
    where ID_CATEGORIZACION = P_ID_CATEGORIZACION
    and ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE
  );

  --FORMULA
  select coalesce(max(ID_ITEM_FORMULA),0) into STRICT l_id from enoc.CAT_ITEM_FORMULA;

  INSERT INTO enoc.CAT_ITEM_FORMULA(
    ID_ITEM_FORMULA,
    ID_ITEM_CATEGORIA,
    NOMBRE,
    DESDE,
    HASTA,
    PUNTO,
    ID_USER_REG,
    FECHA_REG
  )
  SELECT (row_number() OVER ( ORDER BY B.ID_ITEM_FORMULA ASC )) + l_id as ID_ITEM_FORMULA,
  A.ID_ITEM_CATEGORIA,
  B.NOMBRE,
  B.DESDE,
  B.HASTA,
  B.PUNTO,
  P_ID_USER,
  clock_timestamp()
  from enoc.cat_item_categoria A,enoc.CAT_ITEM_FORMULA B
  where A.ID_ITEM_CATEGORIA_ANT=B.ID_ITEM_CATEGORIA
  AND A.ID_CATEGORIZACION = P_ID_CATEGORIZACION
  and A.ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE
  AND  A.ID_ITEM_CATEGORIA NOT IN (
    SELECT A.ID_ITEM_CATEGORIA
    from enoc.cat_item_categoria A,enoc.CAT_ITEM_FORMULA B
    where A.ID_ITEM_CATEGORIA=B.ID_ITEM_CATEGORIA
    AND A.ID_CATEGORIZACION = P_ID_CATEGORIZACION
    and A.ID_CATEGORIA_DOCENTE = P_ID_CATEGORIA_DOCENTE
  );


--   <<salida>>
  P_ERROR:=l_error;
  P_MSGERROR:=l_msgerror;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_categorization_sp_copiar (P_ID_CATEGORIZACION bigint,P_ID_CATEGORIA_DOCENTE bigint,P_ID_CATEGORIZACION_COPIAR bigint,P_ID_CATEGORIA_DOCENTE_COPIAR bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
