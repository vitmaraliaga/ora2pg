-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_asistencia_historico (P_ID_TRABAJADOR bigint,P_FECHA timestamp(0), P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

          l_error bigint:=0;
          l_msgerror varchar(200):='';
          l_contar bigint;
          l_items bigint;
          l_id_asistencia_hist varchar(30);
          l_id_anho bigint;
          l_id_mes bigint;
          l_id_dia bigint;
          l_nro_dia bigint;

          L_ID_MAPA_POLIGONO	bigint;
          L_ID_SITUACION_ESPECIAL	varchar(2);
          L_ID_TIPO_CONTROL_PERSONAL	bigint;
          L_ID_TIPO_HORARIO	bigint;
          L_ID_CONDICION_LABORAL	varchar(10);
          L_ID_SEDEAREA	bigint;
          L_ID_PERFIL_PUESTO	bigint;
          L_ID_USERDEVICE	bigint;
          L_ID_HORARIO_MENSUAL_DET	bigint;

          l_id_mapa_trabajador bigint;
          l_id_mapa_area bigint;
          l_id_entidad bigint;
          l_id_depto_padre varchar(10);
          l_id_area bigint;
          l_id_persona bigint;
          l_id_situacion_trabajador varchar(5);
          l_tipo_hora varchar(15);
          l_id_tiempo_trabajado bigint;

          L_NUM_TOLE_TAR	decimal(10,2);
          L_NUM_TOLE_TAR_REF	decimal(10,2);
          L_NUM_RANGO decimal(10,2);
          L_NUM_RANGO_REF decimal(10,2);
          L_SAL_DIASIG bigint:=0;
          l_id_horario_bloque bigint;
          l_id_dia_th bigint;
          l_fec_actual timestamp(0);
          l_fecha_reg timestamp(0);

BEGIN
      
         select 
         (to_char(P_FECHA,'YYYY'))::numeric , 
         (to_char(P_FECHA,'MM'))::numeric ,
         (to_char(P_FECHA,'DD'))::numeric ,
         (TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))::numeric  
         into STRICT l_id_anho,l_id_mes,l_id_dia,l_nro_dia;

        
         
         l_fec_actual:= to_date(TO_CHAR(clock_timestamp(), 'YYYY-MM-DD'),'YYYY-MM-DD');
         l_fecha_reg:= to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD'),'YYYY-MM-DD');

         select count(1) into STRICT l_contar from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);

         if l_contar<>1 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion tipo horario';
--             GOTO SALIDA;
         end if;

         select id_tipo_horario into STRICT L_ID_TIPO_HORARIO from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);

         
         select count(1) into STRICT l_contar from ENOC.PLLA_CONTROL_PERSONAL_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);

         if l_contar<>1 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion de tipo control personal';
--             GOTO SALIDA;
         end if;

         select ID_TIPO_CONTROL_PERSONAL into STRICT L_ID_TIPO_CONTROL_PERSONAL from ENOC.PLLA_CONTROL_PERSONAL_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);

         
          select 
            ID_ENTIDAD,
            ID_CONDICION_LABORAL,
            ID_SEDEAREA,
            ID_PERFIL_PUESTO,
            id_persona,
            id_situacion_trabajador,
            ID_TIPO_TIEMPO_TRABAJO
            into STRICT
            l_id_entidad,
            L_ID_CONDICION_LABORAL,
            L_ID_SEDEAREA,
            L_ID_PERFIL_PUESTO,
            l_id_persona,
            l_id_situacion_trabajador,
            l_id_tiempo_trabajado
            from enoc.vw_trabajador where id_trabajador=P_ID_TRABAJADOR;

          if l_id_situacion_trabajador not in ('1') then
                l_error:=1;
                l_msgerror:='Trabajdor no esta activo';
--                 GOTO SALIDA;
          end if;

          select count(*) into STRICT l_contar from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;

          IF l_contar=0 then
            l_error:=1;
            l_msgerror:='Falta configurar parametros para el año '||l_id_anho::text;
--             GOTO SALIDA;
          end if;

          select coalesce(a.importe,0) into STRICT L_NUM_TOLE_TAR from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='TOLE_HORA_ENT'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;

          select coalesce(a.importe,0) into STRICT L_NUM_TOLE_TAR_REF from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='TOLE_HORA_ENT_REF'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;

          
          select coalesce(a.importe,0) into STRICT L_NUM_RANGO from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='PARAM_ASIST_RANG'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;

          select coalesce(a.importe,0) into STRICT L_NUM_RANGO_REF from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='PARAM_REF_RANG'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;

          
          select b.CODIGO into STRICT l_tipo_hora from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
          where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
          and a.id_tipo_horario =  L_ID_TIPO_HORARIO;

          
          if l_tipo_hora='HM' then
   
              select count(*) into STRICT l_contar from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
              where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
              AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
              AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
              AND A.ID_ANHO=l_id_anho
              AND A.ID_MES=l_id_mes
              AND B.ID_DIA=l_id_dia;

              if l_contar = 1 then
                select B.ID_HORARIO_MENSUAL_DET, b.id_horario_bloque into STRICT L_ID_HORARIO_MENSUAL_DET,l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
                where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                AND A.ID_ANHO=l_id_anho
                AND A.ID_MES=l_id_mes
                AND B.ID_DIA=l_id_dia;

                select SAL_DIASIG into STRICT L_SAL_DIASIG from enoc.plla_horario_bloque where id_horario_bloque= l_id_horario_bloque;

              else
                l_error:=1;
                l_msgerror:='Horario mesnual: No esta configurado para la fecha: '||to_char(P_FECHA,'DD/MM/YYYY');
--                 GOTO SALIDA;

              end if;

          else
            select COUNT(*) into STRICT l_contar from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;

            l_id_dia_th:=l_nro_dia;
            if l_contar=0 then
               l_error:=1;
               l_msgerror:='Horario fijo: No esta configurado para la fecha: '||to_char(P_FECHA,'DD/MM/YYYY');
--                GOTO SALIDA;
            else
              select SAL_DIASIG into STRICT L_SAL_DIASIG from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;
            end if;
          END IF;

         select count(*) into STRICT l_contar from ENOC.PLLA_ASISTENCIA_HIST
         where ID_ANHO=l_id_anho
         and id_mes=l_id_mes
         and id_dia=l_id_dia
         and id_trabajador=P_ID_TRABAJADOR;
         
         if l_contar>0 then
           update ENOC.PLLA_ASISTENCIA_HIST set
           ID_TIPO_CONTROL_PERSONAL=L_ID_TIPO_CONTROL_PERSONAL,
           id_tipo_horario=L_ID_TIPO_HORARIO,
           NUM_TOLE_TAR=L_NUM_TOLE_TAR,
           NUM_TOLE_TAR_REF=L_NUM_TOLE_TAR_REF,
           NUM_RANGO=L_NUM_RANGO, 
           NUM_RANGO_REF=L_NUM_RANGO_REF,
           SAL_DIASIG=L_SAL_DIASIG,
           id_dia_th=l_id_dia_th,
           ID_HORARIO_MENSUAL_DET=L_ID_HORARIO_MENSUAL_DET,
           ID_USER_MOD=P_ID_USER_REG,
           FECHA_MOD=clock_timestamp()
           where ID_ANHO=l_id_anho
           and id_mes=l_id_mes
           and id_dia=l_id_dia
           and id_trabajador=P_ID_TRABAJADOR;
         else

            select id_depto_padre,id_area into STRICT l_id_depto_padre,l_id_area from eliseo.VW_SEDE_AREA where ID_SEDEAREA=L_ID_SEDEAREA;

            select coalesce(max(id_mapa_trabajador),0) into STRICT l_id_mapa_trabajador from enoc.plla_mapa_trabajador where id_trabajador=P_ID_TRABAJADOR;

            if l_id_mapa_trabajador>0 then
              select ID_MAPA_POLIGONO into STRICT L_ID_MAPA_POLIGONO from enoc.plla_mapa_trabajador where  id_mapa_trabajador=l_id_mapa_trabajador;
            else
              select coalesce(max(id_mapa_area),0) into STRICT l_id_mapa_area from enoc.plla_mapa_area
              where id_entidad=l_id_entidad
              and id_depto=l_id_depto_padre
              and id_area = l_id_area;
              if l_id_mapa_trabajador>0 then
                select ID_MAPA_POLIGONO into STRICT L_ID_MAPA_POLIGONO from enoc.plla_mapa_area where id_mapa_area= l_id_mapa_area;
              end if;
            end if;

            select count(*) into STRICT l_contar  from moises.TRABAJADOR_SIT_ESP where id_trabajador=P_ID_TRABAJADOR and vigencia=1;

            if l_contar=1 then
              select ID_SITUACION_ESPECIAL into STRICT L_ID_SITUACION_ESPECIAL  from moises.TRABAJADOR_SIT_ESP where id_trabajador=P_ID_TRABAJADOR and vigencia=1;
            end if;
            
            select count(*) into STRICT l_contar  from ELISEO.APS_USER_DEVICE where id_persona = l_id_persona and STATE='1';
            if l_contar=1 then
              select ID_USERDEVICE into STRICT L_ID_USERDEVICE  from ELISEO.APS_USER_DEVICE where id_persona = l_id_persona and STATE='1';
            end if;

              select coalesce(max(ITEMS),0) + 1 into STRICT l_items from ENOC.PLLA_ASISTENCIA_HIST
            where ID_ANHO=l_id_anho
            and id_mes=l_id_mes
            and id_dia=l_id_dia;

            l_id_asistencia_hist:= to_char(P_FECHA,'YYYYMMDD')||l_items::text;

            INSERT INTO ENOC.PLLA_ASISTENCIA_HIST(
              ID_ASISTENCIA_HIST,
              ITEMS,
              ID_TRABAJADOR,
              ID_ANHO,
              ID_MES,
              ID_DIA,
              NRO_DIA,
              ID_SITUACION_ESPECIAL,
              ID_TIPO_CONTROL_PERSONAL,
              ID_TIPO_TIEMPO_TRABAJO,
              ID_TIPO_HORARIO,
              ID_DIA_TH,
              ID_CONDICION_LABORAL,
              ID_SEDEAREA,
              ID_PERFIL_PUESTO,
              ID_MAPA_POLIGONO,
              ID_USERDEVICE,
              ID_HORARIO_MENSUAL_DET,
              NUM_TOLE_TAR,
              NUM_TOLE_TAR_REF,
              NUM_RANGO,
              NUM_RANGO_REF,
              SAL_DIASIG,
              ID_USER_REG,
              FECHA_REG
             )VALUES (
              l_id_asistencia_hist,
              l_items,
              P_ID_TRABAJADOR,
              l_id_anho,
              l_id_mes,
              l_id_dia,
              l_nro_dia,
              L_ID_SITUACION_ESPECIAL,
              L_ID_TIPO_CONTROL_PERSONAL,
              l_id_tiempo_trabajado,
              L_ID_TIPO_HORARIO,
              l_id_dia_th,
              L_ID_CONDICION_LABORAL,
              L_ID_SEDEAREA,
              L_ID_PERFIL_PUESTO,
              L_ID_MAPA_POLIGONO,
              L_ID_USERDEVICE,
              L_ID_HORARIO_MENSUAL_DET,
              L_NUM_TOLE_TAR,
              L_NUM_TOLE_TAR_REF,
              L_NUM_RANGO, 
              L_NUM_RANGO_REF,
              L_SAL_DIASIG,
              P_ID_USER_REG,
              clock_timestamp()         
             );
          END IF;
--           <<SALIDA>>
         P_ERROR:=l_error;
         P_MSGERROR:= l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_asistencia_historico (P_ID_TRABAJADOR bigint,P_FECHA timestamp(0), P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
