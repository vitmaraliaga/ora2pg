-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_registrar_asis_docente_new ( P_ID_ASISTENCIA_CARGA bigint, P_FECHA timestamp(0), P_TIPO text,--E: ENTRADA, S:SALIDA
 P_ID_USER bigint, P_TIPO_MAR text, P_ID_TIPO_MARCACION bigint, P_LAT text, P_LNG text, P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

     l_error bigint:=0;
     l_msgerror varchar(200):='';
     l_contar bigint;
     l_fecha timestamp(0);
     l_id_trabajador bigint;
     l_id_depto varchar(10);
     L_ASIST_RANGO bigint;
     l_desde timestamp(0);
     l_hasta timestamp(0);
     l_prog_desde timestamp(0);
     l_prog_hasta timestamp(0);
     l_fec_actual timestamp(0);
     l_id_entidad bigint:=7124;
     l_id_anho bigint;
     l_codigo_tipo_modalidad  varchar(10);
     l_id_area bigint;
     l_fecha_reg timestamp(0);
     l_resultado bigint:=0;

BEGIN

      select to_date(to_char(P_FECHA,'YYYY-MM-DD'),'YYYY-MM-DD'),to_char(clock_timestamp(),'YYYY-MM-DD'),(to_char(P_FECHA,'YYYY'))::numeric  into STRICT l_fecha,l_fec_actual,l_id_anho;

      l_fecha_reg:= l_fec_actual;

      select a.id_trabajador,c.id_depto_padre,a.desde_prog,a.hasta_prog, c.id_area 
      into STRICT 
      l_id_trabajador,l_id_depto, l_prog_desde,l_prog_hasta,l_id_area
      FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t, ENOC.VW_ENT_DEP_AREA_CCOSTO C
      WHERE  a.id_trabajador=t.id_trabajador
      and t.id_sedearea = c.id_sedearea
      and a.ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;

      select count(*) into STRICT l_contar from plla_parametros_valor  a, plla_parametros b
      where b.id_parametro=a.id_parametro
      and a.id_entidad=l_id_entidad
      and a.id_anho=l_id_anho;

      
       IF l_contar=0 then
        l_error:=1;
        l_msgerror:='Falta configurar parametros para el año '||l_id_anho::text;
--         GOTO SALIDA;
      end if;

      select coalesce(a.importe,0) into STRICT L_ASIST_RANGO from plla_parametros_valor  a, plla_parametros b
      where b.id_parametro=a.id_parametro
      and b.codigo='PARAM_ASIST_DOC_RANG'
      and a.id_entidad=l_id_entidad
      and a.id_anho=l_id_anho;

      IF P_ID_TIPO_MARCACION=1 THEN
      
      
      
          select count(1) into STRICT l_contar from  MOISES.TRABAJADOR_SIT_ESP a,  ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
          where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
          and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB
          and a.id_trabajador= l_id_trabajador
          and l_fecha_reg between a.desde and coalesce(a.hasta,l_fec_actual);

          if l_contar=0 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion de modalidad';
--             GOTO SALIDA;
          end if;

          select b.codigo into STRICT l_codigo_tipo_modalidad from  MOISES.TRABAJADOR_SIT_ESP a,  ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
          where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
          and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB
          and a.id_trabajador= l_id_trabajador
          and l_fecha_reg between a.desde and coalesce(a.hasta,l_fec_actual);

          if l_codigo_tipo_modalidad='TP' THEN
          
           
            select count(*) into STRICT l_contar from (
              SELECT x.id_mapa_poligono from enoc.plla_mapa_trabajador x
              where x.id_trabajador=l_id_trabajador 
              
union

              SELECT y.id_mapa_poligono from enoc.plla_mapa_area y
              where y.id_entidad=l_id_entidad 
              and y.id_depto=l_id_depto 
              and y.id_area =l_id_area
            ) alias1;

            if l_contar=0 THEN
               l_error:=1;
               l_msgerror:='No esta asignado a polígono de marcación';
--                GOTO SALIDA;
            END IF;
            if coalesce(P_LAT::text, '') = '' or coalesce(P_LNG::text, '') = '' then
               l_error:=1;
               l_msgerror:='No es posible marcar asistencia porque debes activar el GPS, ir a ajustes/accesibilidad en tu teléfono.';
--                GOTO SALIDA;
            end if;
            CALL enoc.pkg_assistance_sp_validar_coordenada_asist(
               l_id_trabajador,
               P_LAT,
               P_LNG,
               l_resultado,
               l_error,
               l_msgerror
             );
             if l_resultado=0 then
               l_error:=1;
               l_msgerror:='Está fuera del Área del trabajo';
--                GOTO SALIDA;
             end if;
        end if;
      END IF;

      IF P_TIPO='S' THEN
      
        if l_fecha <> l_fec_actual then
             l_error:=1;
             l_msgerror:='Registre su asistencia en la fecha '||to_char(l_fecha,'DD/MM/YYYY');
--              GOTO SALIDA;
        end if;

        if P_FECHA < l_prog_desde then
             l_error:=1;
             l_msgerror:='Registre su salida despues de '||to_char(l_prog_desde,'DD/MM/YYYY');
--              GOTO SALIDA;
        end if;

        
        l_hasta := l_prog_hasta + L_ASIST_RANGO / 1440;

        if P_FECHA > l_hasta then 
           l_error:=1;
           l_msgerror:='Registre su asistencia antes de '||to_char(l_hasta,'HH24:MI');
--            GOTO SALIDA;
        end if;

        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          HASTA_REAL=P_FECHA,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= clock_timestamp()
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      ELSE


        
        l_desde := l_prog_desde - L_ASIST_RANGO / 1440;

        if P_FECHA < l_desde then
           l_error:=1;
           l_msgerror:='Registre su asistencia después de '||to_char(l_desde,'HH24:MI');
--            GOTO SALIDA;
        end if;

        if P_FECHA > l_prog_hasta then
           l_error:=1;
           l_msgerror:='Registre su asistencia antes de '||to_char(l_prog_hasta,'HH24:MI');
--            GOTO SALIDA;
        end if;

        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          DESDE_REAL=P_FECHA,
          TIPO_MAR=P_TIPO_MAR,
          ID_TIPO_MARCACION=P_ID_TIPO_MARCACION,
          LAT=P_LAT,
          LNG=P_LNG,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= clock_timestamp()
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      END IF;

      CALL enoc.pkg_assistance_sp_procesar_asis_docente(
         l_fecha,--SI P_TIPO=FE OBLIAGATORIO
         l_id_depto,
         0,
         null,
         l_id_trabajador,
         'N',
         0,
         'FE',--AM: Año y Mes,FE: por fecha
         0, --SI P_TIPO=AM OBLIAGATORIO
         0, --SI P_TIPO=AM OBLIAGATORIO
         P_ID_USER,
         l_error,
         l_msgerror
       );

--       <<SALIDA>>  
      P_ERROR:=l_error;
      P_MSGERROR := l_msgerror;
   END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_registrar_asis_docente_new ( P_ID_ASISTENCIA_CARGA bigint, P_FECHA timestamp(0), P_TIPO text, P_ID_USER bigint, P_TIPO_MAR text, P_ID_TIPO_MARCACION bigint, P_LAT text, P_LNG text, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
