-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_procesar_biometrico_docente (P_DESDE timestamp(0), P_HASTA timestamp(0),P_ID_ENTIDAD bigint, P_ID_DEPTO text,P_ID_AREA bigint, P_ID_TRABAJADOR bigint, P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_contar bigint;

        l_id_tipo_control_personal bigint;
        l_id_tipo_horario bigint;
        l_id_sedearea bigint;

        l_hasta timestamp(0);
        l_desde timestamp(0);
        l_id_motivo_asist varchar(10);
        l_num_rango bigint;
        l_num_rango_ref bigint;
        l_fecha_actual timestamp(0);
        l_marcacion varchar(5);
        l_codigo varchar(10);


        
        curDoc CURSOR FOR
        SELECT ID_ASISTENCIA_CARGA,FECHA, DESDE_PROG, HASTA_PROG,HORAS_PROG,NUM_TOLE_TAR,ID_PERSONA,ID_TRABAJADOR
        from ENOC.TT_ASISTENCIA_CARGA
        order by ID_TRABAJADOR, DESDE_PROG;

        L_NUM_TOLE_TAR	decimal(10,2):=0;
        L_ASIST_DOC_RANG	decimal(10,2):=20;
        l_id_anho bigint;
        l_desde_rango timestamp(0);
        l_hasta_rango timestamp(0);
        l_hora_entrada timestamp(0);

BEGIN
      
        delete from ENOC.TT_ASISTENCIA_CARGA;
        insert into ENOC.TT_ASISTENCIA_CARGA(ID_ASISTENCIA_CARGA,FECHA, DESDE_PROG, HASTA_PROG,HORAS_PROG,NUM_TOLE_TAR,ID_PERSONA,ID_TRABAJADOR )
        SELECT a.ID_ASISTENCIA_CARGA,a.FECHA, a.DESDE_PROG, a.HASTA_PROG,a.HORAS_PROG,a.NUM_TOLE_TAR,a.ID_PERSONA,a.ID_TRABAJADOR
        from ENOC.PLLA_ASISTENCIA_CARGA  a,moises.trabajador t, eliseo.vw_sede_area sa
        where a.id_trabajador=t.id_trabajador
        and t.id_sedearea=sa.id_sedearea
        and a.fecha between P_DESDE and P_HASTA
        and coalesce(a.DESDE_REAL::text, '') = ''
        AND COALESCE(a.TIPO,'F')<>'J'
        and case when P_ID_DEPTO='0' then '0' else sa.id_depto_padre end = case when P_ID_DEPTO='0' then '0' else P_ID_DEPTO end
        and case when P_ID_AREA=0 then 0 else sa.id_area end = case when P_ID_AREA=0 then 0 else P_ID_AREA end
        and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end = case when P_ID_TRABAJADOR=0 then 0 else P_ID_TRABAJADOR end 
        order by a.ID_TRABAJADOR, a.DESDE_PROG;

        delete from ENOC.TT_MARCACION;
        insert into ENOC.TT_MARCACION(ID_MARCACION,ID_TRABAJADOR,ID_ANHO,ID_MES,NRO_DIA,ID_TIPO_MARCACION,FECHAHORA )
        SELECT a.ID_MARCACION,a.ID_TRABAJADOR,a.ID_ANHO,a.ID_MES,a.NRO_DIA,a.ID_TIPO_MARCACION,a.FECHAHORA
        from enoc.plla_marcacion a ,moises.trabajador t, eliseo.vw_sede_area sa
        where a.id_trabajador=t.id_trabajador
        and t.id_sedearea=sa.id_sedearea
        and a.id_tipo_marcacion=6 
        and coalesce(a.idasistencia,0)>0
        AND to_date(TO_CHAR(a.FECHAHORA,'YYYY-MM-DD'),'YYYY-MM-DD') between P_DESDE and P_HASTA
        and case when P_ID_DEPTO='0' then '0' else sa.id_depto_padre end = case when P_ID_DEPTO='0' then '0' else P_ID_DEPTO end
        and case when P_ID_AREA=0 then 0 else sa.id_area end = case when P_ID_AREA=0 then 0 else P_ID_AREA end
        and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end = case when P_ID_TRABAJADOR=0 then 0 else P_ID_TRABAJADOR end
        and t.id_trabajador in (
          SELECT id_trabajador from ENOC.TT_ASISTENCIA_CARGA
        )
        and coalesce(a.ID_DESCRIP_MARCACION::text, '') = '' 
        order by  a.ID_TRABAJADOR, a.FECHAHORA;

        FOR cur in curDoc LOOP
        BEGIN
            l_hora_entrada:= null;
            l_id_anho:=(to_char(cur.FECHA,'YYYY'))::numeric;
            select count(1) into STRICT l_contar from plla_parametros_valor  a, plla_parametros b
            where b.id_parametro=a.id_parametro
            and b.codigo='TOLE_HORA_ENT_DOC'
            and a.id_entidad=P_ID_ENTIDAD
            and a.id_anho=l_id_anho;
            if l_contar=1 then
              select coalesce(a.importe,0) into STRICT L_NUM_TOLE_TAR from plla_parametros_valor  a, plla_parametros b
              where b.id_parametro=a.id_parametro
              and b.codigo='TOLE_HORA_ENT_DOC'
              and a.id_entidad=P_ID_ENTIDAD
              and a.id_anho=l_id_anho;
            end if;

            select count(1) into STRICT l_contar from plla_parametros_valor  a, plla_parametros b
            where b.id_parametro=a.id_parametro
            and b.codigo='PARAM_ASIST_DOC_RANG'
            and a.id_entidad=P_ID_ENTIDAD
            and a.id_anho=l_id_anho;
            if l_contar=1 then
              select coalesce(a.importe,0) into STRICT L_ASIST_DOC_RANG from plla_parametros_valor  a, plla_parametros b
              where b.id_parametro=a.id_parametro
              and b.codigo='PARAM_ASIST_DOC_RANG'
              and a.id_entidad=P_ID_ENTIDAD
              and a.id_anho=l_id_anho;
            end if;

            l_desde_rango := cur.DESDE_PROG - L_ASIST_DOC_RANG / 1440;
            l_hasta_rango := cur.DESDE_PROG + L_ASIST_DOC_RANG / 1440;

            select count(*) into STRICT l_contar from  ENOC.TT_MARCACION where id_trabajador= cur.id_trabajador
            and (FECHAHORA BETWEEN l_desde_rango AND l_hasta_rango);

            if l_contar>0 then
              select min(FECHAHORA) into STRICT l_hora_entrada from  ENOC.TT_MARCACION where id_trabajador= cur.id_trabajador 
              and (FECHAHORA BETWEEN l_desde_rango AND l_hasta_rango);
            end if;
            if (l_hora_entrada IS NOT NULL AND l_hora_entrada::text <> '') then
              CALL enoc.pkg_assistance_sp_registrar_asis_docente_new(
               cur.ID_ASISTENCIA_CARGA,
               l_hora_entrada,
               'E',--E: ENTRADA, S:SALIDA
               P_ID_USER,
               'P',
               6,
               '',
               '',
               l_error,
               l_msgerror
             );
            end if;
        END;
        END LOOP;
        P_ERROR:=0;
        P_MSGERROR:='OK';
      END;	
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_procesar_biometrico_docente (P_DESDE timestamp(0), P_HASTA timestamp(0),P_ID_ENTIDAD bigint, P_ID_DEPTO text,P_ID_AREA bigint, P_ID_TRABAJADOR bigint, P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
