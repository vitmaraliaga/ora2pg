-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_areas_asignados (P_ID_MAPA_POLIGONO bigint, OUT CURSOR REFCURSOR ) AS $body$
DECLARE

   l_id_area bigint;
   l_contar bigint:=0;
   L_ID_ENTIDAD bigint;
   L_ID_DEPTO varchar(10);

   curArea CURSOR FOR
   SELECT id_area from enoc.PLLA_MAPA_AREa where id_mapa_poligono=P_ID_MAPA_POLIGONO;WITH RECURSIVE cte AS (


   curAreaAsig CURSOR FOR
   SELECT 
      a.id_area,a.id_parent,1 as nivel,case when (b.id_mapa_area IS NOT NULL AND b.id_mapa_area::text <> '') then 1 else 0 end as asignado,a.nombre,(SELECT count(*) from moises.trabajador t,enoc.VW_ENT_DEP_AREA_CCOSTO  cc 
      where cc.id_sedearea=t.id_sedearea 
      and  cc.id_area=a.id_area 
      and t.id_entidad=L_ID_ENTIDAD
      and cc.id_depto_padre LIKE L_ID_DEPTO||'%'
      and t.id_situacion_trabajador='1') as trabajador,b.id_mapa_area
      from eliseo.org_area a left join enoc.PLLA_MAPA_AREa b on a.id_area=b.id_area and b.id_mapa_poligono=P_ID_MAPA_POLIGONO WHERE a.id_area = l_id_area
  UNION ALL

   
   curAreaAsig CURSOR FOR
   SELECT 
      a.id_area,a.id_parent,(c.level+1) as nivel,case when (b.id_mapa_area IS NOT NULL AND b.id_mapa_area::text <> '') then 1 else 0 end as asignado,a.nombre,(SELECT count(*) from moises.trabajador t,enoc.VW_ENT_DEP_AREA_CCOSTO  cc 
      where cc.id_sedearea=t.id_sedearea 
      and  cc.id_area=a.id_area 
      and t.id_entidad=L_ID_ENTIDAD
      and cc.id_depto_padre LIKE L_ID_DEPTO||'%'
      and t.id_situacion_trabajador='1') as trabajador,b.id_mapa_area
      from eliseo.org_area a left join enoc.PLLA_MAPA_AREa b on a.id_area=b.id_area and b.id_mapa_poligono=P_ID_MAPA_POLIGONO JOIN cte c ON (c.id_parent = a.A.ID_AREA)

) SELECT * FROM cte WHERE id_entidad=L_ID_ENTIDAD
      and coalesce(a.id_parent,0) not in (0,1);

   
BEGIN 
   
    SELECT ID_ENTIDAD,CASE WHEN ID_DEPTO = '0' THEN '' ELSE ID_DEPTO END INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO;
    DELETE FROM ENOC.TT_AREA_ASIGNADO;

    FOR cur in curArea LOOP
    BEGIN
      l_id_area:=cur.id_area;
      FOR asi in curAreaAsig LOOP
      BEGIN
        select count(*) into STRICT l_contar from ENOC.TT_AREA_ASIGNADO where id_area=asi.id_area;
        if l_contar=0 then
          insert into ENOC.TT_AREA_ASIGNADO(
          ID_AREA,
          ID_PARENT,
          NIVEL,
          ASIGNADO,
          NOMBRE,
          TRABAJADOR,
          ID_MAPA_AREA,
          ID_MAPA_POLIGONO
          )values (
          asi.id_area,
          asi.id_parent,
          asi.nivel,
          asi.asignado,
          asi.nombre,
          asi.trabajador,
          asi.id_mapa_area,
          P_ID_MAPA_POLIGONO
          );
        end if;
      END;
      END LOOP;

    END;
    END LOOP;

    
       OPEN CURSOR FOR  
               
        SELECT (row_number() OVER ( ORDER BY NIVEL,ID_AREA ASC )),
        T.ID_AREA,T.ID_AREA,T.ID_PARENT,T.NIVEL,T.ASIGNADO,T.TRABAJADOR,T.NOMBRE,T.ID_MAPA_AREA,T.ID_MAPA_POLIGONO
        FROM (WITH RECURSIVE cte AS (
SELECT
        ID_AREA,ID_PARENT,MAX(1) as NIVEL,ASIGNADO,NOMBRE,TRABAJADOR,ID_MAPA_AREA,ID_MAPA_POLIGONO
        from ENOC.TT_AREA_ASIGNADO 
        -- START WITH id_area = 3
  UNION ALL
SELECT
        ID_AREA,ID_PARENT,MAX(c.level+1) as NIVEL,ASIGNADO,NOMBRE,TRABAJADOR,ID_MAPA_AREA,ID_MAPA_POLIGONO
        from ENOC.TT_AREA_ASIGNADO 
        
 JOIN cte c ON (c.ID_AREA = %ORA2PG_COMMENT1211.id_parent)

) SELECT * FROM cte
        GROUP BY ID_AREA,ID_PARENT,ASIGNADO,trabajador,NOMBRE,ID_MAPA_AREA,ID_MAPA_POLIGONO)T;


   END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_areas_asignados (P_ID_MAPA_POLIGONO bigint, OUT CURSOR REFCURSOR ) FROM PUBLIC;
