-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_programar_asis_docente ( P_FECHA timestamp(0), P_ID_DEPTO text, P_ID_AREA bigint, P_ID_AREAS text, P_ID_TRABAJADOR bigint, P_RESTRINGIDO text, P_ID_TIPO_NIVEL_VISTA bigint, P_ID_USER bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

    l_error bigint:=0;
    l_msgerror varchar(4000):='';
    l_contar bigint;
    l_id_horario bigint;
    l_hor_ini varchar(20);
    l_hor_fin varchar(20);

    l_horario_tmp varchar(400);
    l_horario varchar(400);
    l_j bigint:=1;
    l_total bigint:=0;
    l_hora varchar(5);
    l_num_dia bigint;
    l_i bigint:=0;

    l_hor_ini_eje varchar(20);
    l_hor_fin_eje varchar(20);
    l_id_carga_curso bigint;
    l_id bigint;
    l_insert bigint:=0;
    l_desde timestamp(0);
    l_hasta timestamp(0);
    n_horas bigint:=0;

     curCab CURSOR FOR
     SELECT
        a.ID_CARGA_CURSO,
        a.ID_CARGA_CURSO_DOCENTE,
        a.ID_PROGRAMA_ESTUDIO,
        a.ID_MODULO,
        a.ID_TIPO_MODALIDAD_DOCENTE,
        a.ID_TIPO_HORARIO,
        a.ID_PERSONA,
        a.ID_SEMESTRE,
        a.FECHA_INICIO,
        a.FECHA_FIN,
        a.HORARIO,
        a.NOMBRE_AREA,
        a.CURSO,
        a.CICLO,
        a.CREDITO,
        a.HP,
        a.HT,
        a.HNP,
        a.ID_SEDEAREA,
        a.GRUPO,
        a.ID_SEMESTRE_PROGRAMA,
        t.id_trabajador,
        t.ID_SEDEAREA AS ID_SEDEAREAT,
        t.ID_TIPO_CONTROL_PERSONAL,
        t.ID_TIPO_TIEMPO_TRABAJO,
        t.ID_CONDICION_LABORAL
     FROM  ENOC.VW_CARGA_DOCENTE  a , moises.trabajador t
     WHERE  a.id_persona=t.id_persona
     and t.id_entidad = 7124
     and a.ID_CARGA_CURSO_DOCENTE in (SELECT ID_CARGA_CURSO_DOCENTE from ENOC.TT_CARGA_DOCENTE_HORARIO);

     curHor CURSOR FOR
     SELECT
     a.hora_inicio,
     a.hora_fin,
     t.codigo
     from DAVID.ACAD_HORARIO_DETALLE a, DAVID.TIPO_TURNO t
     where a.id_tipo_turno=t.id_tipo_turno
     and a.id_horario=l_id_horario
     order by a.id_tipo_turno,a.periodo;

     
    l_query varchar(4000):='';
    l_id_motivo_asist varchar(10);

BEGIN
    
      select
      (TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))::numeric  
      into STRICT
      l_num_dia
;

      l_hor_ini_eje:= null;
      l_hor_fin_eje:= null;

      DELETE FROM ENOC.TT_CARGA_DOCENTE_HORARIO;

      
      l_query:='INSERT INTO ENOC.TT_CARGA_DOCENTE_HORARIO(ID_CARGA_CURSO,ID_CARGA_CURSO_DOCENTE) ';
      l_query:=l_query||'SELECT ';
      l_query:=l_query||'distinct a.ID_CARGA_CURSO,a.ID_CARGA_CURSO_DOCENTE ';
      l_query:=l_query||'FROM  ENOC.VW_CARGA_DOCENTE  a , moises.trabajador t, ENOC.VW_ENT_DEP_AREA_CCOSTO C ';
      l_query:=l_query||'WHERE  a.id_persona=t.id_persona ';
      l_query:=l_query||'and t.id_sedearea = c.id_sedearea ';
      l_query:=l_query||'and t.id_entidad = 7124 ';
      l_query:=l_query||'and c.id_depto_padre = :p_depto ';
      IF P_ID_TRABAJADOR>0 THEN
        l_query:=l_query||'and t.id_trabajador = '||P_ID_TRABAJADOR||' ';
      END IF;
      IF P_ID_AREA>0 THEN
        l_query:=l_query||'and c.id_area = '||P_ID_AREA||' ';
      END IF;
      l_query:=l_query||'and (:p_fecha Between a.FECHA_INICIO and a.FECHA_FIN) ';

      if (P_RESTRINGIDO = 'S') then
            if P_ID_TIPO_NIVEL_VISTA = 4 THEN
               l_query:=l_query||'and c.id_area in( '||P_ID_AREAS||') ';
            END IF;
            if P_ID_TIPO_NIVEL_VISTA = 5 THEN
                l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
            end if;
      end if;

      if P_RESTRINGIDO = 'U' then
            l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
      end if;

      l_query:=l_query||'and a.ID_CARGA_CURSO_DOCENTE not in(select ID_CARGA_CURSO_DOCENTE from enoc.PLLA_ASISTENCIA_CARGA where fecha=:p_fecha1) ';

      EXECUTE l_query USING P_ID_DEPTO,P_FECHA,P_FECHA;

      
      
   
      FOR curC in curCab LOOP
        BEGIN
         
          select id_horario into STRICT l_id_horario from david.acad_semestre_programa where ID_SEMESTRE_PROGRAMA=curC.ID_SEMESTRE_PROGRAMA;
          l_horario:=curC.horario;
          l_total:=length(curC.horario);
          l_horario_tmp := curC.horario;
          l_j:=1;
          l_i:=0;
          l_insert:=0;

          
          
          FOR curH in curHor LOOP
            BEGIN
              l_hora:= substr(l_horario_tmp,l_num_dia,1);

              if l_hora = '1' then
                IF (curH.codigo='M') THEN
                  SELECT (CASE WHEN(SUBSTR(curH.hora_inicio,0,2))=1 THEN (SUBSTR(curH.hora_inicio,0,2))::numeric +12 ELSE (SUBSTR(curH.hora_inicio,0,2))::numeric  END)||SUBSTR(curH.hora_inicio,-3) INTO STRICT l_hor_ini;
                  SELECT (CASE WHEN(SUBSTR(curH.hora_fin,0,2))=1 THEN (SUBSTR(curH.hora_fin,0,2))::numeric +12 ELSE (SUBSTR(curH.hora_fin,0,2))::numeric  END)||SUBSTR(curH.hora_fin,-3) INTO STRICT l_hor_fin;
                ELSE
                  SELECT (CASE WHEN(SUBSTR(curH.hora_inicio,0,2))<12 THEN (SUBSTR(curH.hora_inicio,0,2))::numeric +12 ELSE (SUBSTR(curH.hora_inicio,0,2))::numeric  END)||SUBSTR(curH.hora_inicio,-3) INTO STRICT l_hor_ini;
                  SELECT (CASE WHEN(SUBSTR(curH.hora_fin,0,2))<12 THEN (SUBSTR(curH.hora_fin,0,2))::numeric +12 ELSE (SUBSTR(curH.hora_fin,0,2))::numeric  END)||SUBSTR(curH.hora_fin,-3) INTO STRICT l_hor_fin;
                END IF;
                if l_i=0 then
                  l_hor_ini_eje:= l_hor_ini;
                  l_hor_fin_eje:=l_hor_fin;
                end if;
                if l_i>0 then
                  l_hor_fin_eje:=l_hor_fin;
                end if;
                n_horas:= n_horas +1;
                --l_insert:=0;
                l_i:=l_i + 1;
              else
                --if l_id_carga_curso=curC.ID_CARGA_CURSO then
                RAISE NOTICE '%*%', l_hor_ini_eje, l_hor_fin_eje;
                  if (l_hor_ini_eje IS NOT NULL AND l_hor_ini_eje::text <> '') and (l_hor_fin_eje IS NOT NULL AND l_hor_fin_eje::text <> '') then

                    l_desde:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_ini_eje,'YYYY-MM-DD HH24:MI:SS');
                    l_hasta:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_fin_eje,'YYYY-MM-DD HH24:MI:SS');

                    SELECT ENOC.FC_MOTIVO_ASIST_DOCENTE(curC.ID_TRABAJADOR,curC.ID_SEDEAREAT,l_desde,l_hasta) INTO STRICT l_id_motivo_asist;

                    select coalesce(max(ID_ASISTENCIA_CARGA),0) + 1 into STRICT l_id from enoc.PLLA_ASISTENCIA_CARGA;
                    insert into enoc.PLLA_ASISTENCIA_CARGA(
                      ID_ASISTENCIA_CARGA,
                      ID_CARGA_CURSO,
                      ID_CARGA_CURSO_DOCENTE,
                      ID_SEMESTRE,
                      ID_PERSONA,
                      ID_TRABAJADOR,
                      ID_SEMESTRE_PROGRAMA,
                      ID_PROGRAMA_ESTUDIO,
                      ID_SEDEAREA,
                      ID_HORARIO,
                      FECHA,
                      NOMBRE_AREA,
                      CURSO,
                      CICLO,
                      CREDITOS,
                      HP,
                      HT,
                      HNP,
                      HORARIO,
                      GRUPO,
                      FECHA_INICIO,
                      FECHA_FIN,
                      DESDE_PROG,
                      HASTA_PROG,
                      HORAS_PROG,
                      ID_MOTIVO_ASIST,
                      ID_USER_REG,
                      FECHA_REG,
                      ID_TIPO_CONTROL_PERSONAL,
                      ID_TIPO_TIEMPO_TRABAJO,
                      ID_CONDICION_LABORAL
                    )values (
                      l_id,
                      curC.ID_CARGA_CURSO,
                      curC.ID_CARGA_CURSO_DOCENTE,
                      curC.ID_SEMESTRE,
                      curC.ID_PERSONA,
                      curC.ID_TRABAJADOR,
                      curC.ID_SEMESTRE_PROGRAMA,
                      curC.ID_PROGRAMA_ESTUDIO,
                      curC.ID_SEDEAREA,
                      l_id_horario,
                      P_FECHA,
                      curC.NOMBRE_AREA,
                      curC.CURSO,
                      curC.CICLO,
                      curC.CREDITO,
                      curC.HP,
                      curC.HT,
                      curC.HNP,
                      curC.HORARIO,
                      curC.GRUPO,
                      curC.FECHA_INICIO,
                      curC.FECHA_FIN,
                      l_desde,
                      l_hasta,
                      n_horas,
                      l_id_motivo_asist,
                      P_ID_USER,
                      clock_timestamp(),
                      curC.ID_TIPO_CONTROL_PERSONAL,
                      curC.ID_TIPO_TIEMPO_TRABAJO,
                      curC.ID_CONDICION_LABORAL
                    );
                    l_insert:=1;
                    l_hor_ini_eje:= null;
                    l_hor_fin_eje:= null;

                  end if;
                  n_horas:=0;

                  l_i:=0;
                --end if;
              end if;

              l_j:=l_j + 7;
              l_horario_tmp := substr(l_horario,l_j,l_total);

            END;
          END LOOP;
           --dbms_output.put_line(l_hor_ini_eje||'*'||l_hor_fin_eje);
           if (l_hor_ini_eje IS NOT NULL AND l_hor_ini_eje::text <> '') and (l_hor_fin_eje IS NOT NULL AND l_hor_fin_eje::text <> '') and l_insert=0 then
            l_desde:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_ini_eje,'YYYY-MM-DD HH24:MI:SS');
            l_hasta:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_fin_eje,'YYYY-MM-DD HH24:MI:SS');

            SELECT ENOC.FC_MOTIVO_ASIST_DOCENTE(curC.ID_TRABAJADOR,curC.ID_SEDEAREAT,l_desde,l_hasta) INTO STRICT l_id_motivo_asist;

            select coalesce(max(ID_ASISTENCIA_CARGA),0) + 1 into STRICT l_id from enoc.PLLA_ASISTENCIA_CARGA;
            insert into enoc.PLLA_ASISTENCIA_CARGA(
              ID_ASISTENCIA_CARGA,
              ID_CARGA_CURSO,
              ID_CARGA_CURSO_DOCENTE,
              ID_SEMESTRE,
              ID_PERSONA,
              ID_TRABAJADOR,
              ID_SEMESTRE_PROGRAMA,
              ID_PROGRAMA_ESTUDIO,
              ID_SEDEAREA,
              ID_HORARIO,
              FECHA,
              NOMBRE_AREA,
              CURSO,
              CICLO,
              CREDITOS,
              HP,
              HT,
              HNP,
              HORARIO,
              GRUPO,
              FECHA_INICIO,
              FECHA_FIN,
              DESDE_PROG,
              HASTA_PROG,
              HORAS_PROG,
              ID_MOTIVO_ASIST,
              ID_USER_REG,
              FECHA_REG,
              ID_TIPO_CONTROL_PERSONAL,
              ID_TIPO_TIEMPO_TRABAJO,
              ID_CONDICION_LABORAL
            )values (
              l_id,
              curC.ID_CARGA_CURSO,
              curC.ID_CARGA_CURSO_DOCENTE,
              curC.ID_SEMESTRE,
              curC.ID_PERSONA,
              curC.ID_TRABAJADOR,
              curC.ID_SEMESTRE_PROGRAMA,
              curC.ID_PROGRAMA_ESTUDIO,
              curC.ID_SEDEAREA,
              l_id_horario,
              P_FECHA,
              curC.NOMBRE_AREA,
              curC.CURSO,
              curC.CICLO,
              curC.CREDITO,
              curC.HP,
              curC.HT,
              curC.HNP,
              curC.HORARIO,
              curC.GRUPO,
              curC.FECHA_INICIO,
              curC.FECHA_FIN,
              l_desde,
              l_hasta,
              n_horas,
              l_id_motivo_asist,
              P_ID_USER,
              clock_timestamp(),
              curC.ID_TIPO_CONTROL_PERSONAL,
              curC.ID_TIPO_TIEMPO_TRABAJO,
              curC.ID_CONDICION_LABORAL
            );
           end if;
           l_id_carga_curso:=curC.ID_CARGA_CURSO;
        END;
      END LOOP;

      select count(distinct a.ID_TRABAJADOR) into STRICT l_contar from enoc.PLLA_ASISTENCIA_CARGA a ,ENOC.VW_ENT_DEP_AREA_CCOSTO b
      where a.id_sedearea=b.id_sedearea
      and b.id_depto_padre=P_ID_DEPTO
      and a.fecha=P_FECHA;

      l_msgerror:='('||P_ID_DEPTO||': '||l_contar::text||') ';

--       <<SALIDA>>
      P_ERROR:=l_error;
      P_MSGERROR := l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_programar_asis_docente ( P_FECHA timestamp(0), P_ID_DEPTO text, P_ID_AREA bigint, P_ID_AREAS text, P_ID_TRABAJADOR bigint, P_RESTRINGIDO text, P_ID_TIPO_NIVEL_VISTA bigint, P_ID_USER bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
