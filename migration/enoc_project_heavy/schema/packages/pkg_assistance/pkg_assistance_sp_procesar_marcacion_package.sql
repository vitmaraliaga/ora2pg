-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_procesar_marcacion (P_DESDE timestamp(0), P_HASTA timestamp(0),P_ID_ENTIDAD bigint, P_ID_DEPTO text,P_ID_AREA bigint, P_ID_TRABAJADOR bigint, P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_contar bigint;

        l_id_tipo_control_personal bigint;
        l_id_tipo_horario bigint;
        l_id_sedearea bigint;

        l_hasta timestamp(0);
        l_desde timestamp(0);
        l_id_motivo_asist varchar(10);
        l_num_rango bigint;
        l_num_rango_ref bigint;
        l_fecha_actual timestamp(0);
        l_marcacion varchar(5);
        l_codigo varchar(10);


        
        person CURSOR FOR
        SELECT
          t.id_trabajador,
          t.id_persona,
          t.fecha_inicio,
          coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual) as fecha_fin
          from moises.trabajador t, eliseo.vw_sede_area sa
          where t.id_sedearea=sa.id_sedearea
          and t.id_entidad=P_ID_ENTIDAD
          AND case when P_ID_TRABAJADOR=0 then CASE WHEN t.ID_SITUACION_TRABAJADOR = '1' AND clock_timestamp() >=t.FECHA_INICIO AND clock_timestamp() <=COALESCE(t.FECHA_FIN_PREVISTO,clock_timestamp()) THEN 1 ELSE 0 END ELSE 1 END = 1
          and case when P_ID_DEPTO='0' then '0' else sa.id_depto_padre end = case when P_ID_DEPTO='0' then '0' else P_ID_DEPTO end
          --and sa.id_depto_padre=P_ID_DEPTO
          and (t.fecha_inicio IS NOT NULL AND t.fecha_inicio::text <> '')
          and case when P_ID_AREA=0 then 0 else sa.id_area end = case when P_ID_AREA=0 then 0 else P_ID_AREA end
          and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end = case when P_ID_TRABAJADOR=0 then 0 else P_ID_TRABAJADOR end
          and (
          ((t.fecha_inicio between P_DESDE and P_HASTA) 
          or (coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual) between P_DESDE and P_HASTA)) 
          or ((P_DESDE between t.fecha_inicio and  coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual)) 
          or (P_HASTA between t.fecha_inicio and coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual) ))
          )  
          order  by t.id_trabajador;


      
BEGIN
        l_fecha_actual:= to_date(TO_CHAR(clock_timestamp(), 'YYYY-MM-DD'),'YYYY-MM-DD');
        l_hasta :=P_HASTA;
        l_desde:=P_DESDE;

        if P_HASTA>l_fecha_actual then
          l_hasta := l_fecha_actual;
        end if;

        if l_hasta>=P_DESDE then
        
        
          while(l_desde<=l_hasta) LOOP
          BEGIN  
            FOR cur in person LOOP
            BEGIN
                 /*delete from ENOC.PLLA_ASISTENCIA
                 where ID_TRABAJADOR=cur.id_trabajador
                 and ID_ANHO= to_number(to_char(l_desde,'YYYY'))
                 and ID_MES=to_number(to_char(l_desde,'MM'))
                 and ID_DIA=to_number(to_char(l_desde,'DD'));*/
                 
                 if l_desde>=cur.fecha_inicio and  l_desde<= cur.fecha_fin then 
                 
                   select count(*) into STRICT l_contar from ENOC.PLLA_ASISTENCIA_HIST
                   where ID_TRABAJADOR=cur.id_trabajador
                   and ID_ANHO= (to_char(l_desde,'YYYY'))::numeric 
                   and ID_MES=(to_char(l_desde,'MM'))::numeric 
                   and ID_DIA=(to_char(l_desde,'DD'))::numeric;

                   if l_contar=0 then
                    CALL enoc.pkg_assistance_sp_asistencia_historico(cur.id_trabajador,l_desde, P_ID_USER,l_error,l_msgerror);
                     /* if l_error=1 then
--                        GOTO SALIDA;
                      end if;*/
                   end if;

                   select count(*) into STRICT l_contar from ENOC.PLLA_ASISTENCIA_HIST
                   where ID_TRABAJADOR=cur.id_trabajador
                   and ID_ANHO= (to_char(l_desde,'YYYY'))::numeric 
                   and ID_MES=(to_char(l_desde,'MM'))::numeric 
                   and ID_DIA=(to_char(l_desde,'DD'))::numeric;

                  IF l_contar>0 THEN
                   select
                    ID_TIPO_CONTROL_PERSONAL ,
                    ID_TIPO_HORARIO,
                    ID_SEDEAREA,
                    NUM_RANGO,
                    NUM_RANGO_REF
                    into STRICT 
                    l_id_tipo_control_personal,
                    l_id_tipo_horario,
                    l_id_sedearea,
                    l_num_rango,
                    l_num_rango_ref
                    from enoc.PLLA_ASISTENCIA_HIST	
                    where ID_TRABAJADOR=cur.id_trabajador
                    and ID_ANHO= (to_char(l_desde,'YYYY'))::numeric 
                    and ID_MES=(to_char(l_desde,'MM'))::numeric 
                    and ID_DIA=(to_char(l_desde,'DD'))::numeric;
                  ELSE
                    SELECT ID_TIPO_HORARIO, ID_SEDEAREA,id_tipo_control_personal INTO STRICT l_id_tipo_horario,l_id_sedearea,l_id_tipo_control_personal FROM  MOISES.TRABAJADOR WHERE ID_TRABAJADOR=cur.id_trabajador;
                  END IF;

                  select enoc.FC_MOTIVO_ASISTENCIA(cur.id_trabajador,l_id_tipo_horario,l_id_sedearea, l_desde) into STRICT l_id_motivo_asist;

                  SELECT MARCACION INTO STRICT l_marcacion FROM MOISES.TIPO_CONTROL_PERSONAL WHERE id_tipo_control_personal=l_id_tipo_control_personal;

                  select b.codigo into STRICT l_codigo from enoc.plla_tipo_horario a, ENOC.PLLA_TIPO_CONFIG_HORARIO b where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
                  and a.id_tipo_horario=l_id_tipo_horario;

                  if l_marcacion = 'S' then
                    if l_codigo in ('HD','SH') then
                      CALL enoc.pkg_assistance_sp_procesar_no_fiscalizable(cur.id_trabajador,l_desde,l_id_tipo_horario,l_id_sedearea,l_id_motivo_asist,P_ID_USER);
                    else
                      CALL enoc.pkg_assistance_sp_procesar_fiscalizable(cur.id_trabajador,l_desde,l_id_tipo_horario,l_id_sedearea,l_id_motivo_asist,l_num_rango,l_num_rango_ref,P_ID_USER);
                    end if;
                  else

                     CALL enoc.pkg_assistance_sp_procesar_no_fiscalizable(cur.id_trabajador,l_desde,l_id_tipo_horario,l_id_sedearea,l_id_motivo_asist,P_ID_USER);
                  end if;
              end if;
            END;
            END LOOP;
            l_desde:= l_desde + 1;
          END;
          END LOOP;
      end if;

      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_procesar_marcacion (P_DESDE timestamp(0), P_HASTA timestamp(0),P_ID_ENTIDAD bigint, P_ID_DEPTO text,P_ID_AREA bigint, P_ID_TRABAJADOR bigint, P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
