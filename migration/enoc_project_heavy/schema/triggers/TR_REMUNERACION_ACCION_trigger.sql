-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS tr_remuneracion_accion ON plla_remuneracion CASCADE;
CREATE OR REPLACE FUNCTION enoc.trigger_fct_tr_remuneracion_accion() RETURNS trigger AS $BODY$
DECLARE
  l_tipo  PLLA_REMUNERACION_AUDIT.TIPO%TYPE;
  l_opcion varchar(2):='N';

BEGIN

  IF TG_OP = 'INSERT' THEN
    l_tipo := 'I';
    l_opcion:='S';
  ELSIF TG_OP = 'UPDATE' THEN
    l_tipo := 'U';
    if NEW.SUELDO <> OLD.SUELDO then
      l_opcion:='S';
    end if;
    if NEW.VIGENCIA <> OLD.VIGENCIA then
      l_opcion:='S';
    end if;
    if NEW.FMR <> OLD.FMR then
      l_opcion:='S';
    end if;
    if NEW.ID_ESTADO_REMUNE <> OLD.ID_ESTADO_REMUNE then
      l_opcion:='S';
    end if;
    if NEW.TIPO_PAGO <> OLD.TIPO_PAGO then
      l_opcion:='S';
    end if;
  ELSIF TG_OP = 'DELETE' THEN
    l_tipo := 'D';
    l_opcion:='N';
    CALL SP_AUDIT_REMUNERACION(
        OLD.ID_REMUNERACION,
        OLD.ID_TRABAJADOR,
        l_tipo,
        OLD.ID_CONTRATO,
        OLD.REFERENCIA,
        OLD.REFERENCIA_URL,
        OLD.FEC_EFECTIVO,
        OLD.TIPO_PAGO,
        OLD.FMR,
        OLD.SUELDO,
        OLD.BONIFICACION,
        OLD.OBSERVACION,
        OLD.ID_ESTADO_REMUNE,
        OLD.ESTADO_REMUNE,
        OLD.VIGENCIA,
        null
    );
  ELSE
    RAISE NOTICE 'This code is not reachable.';
  END IF;
  if l_opcion='S' then
     CALL SP_AUDIT_REMUNERACION(
        NEW.ID_REMUNERACION,
        NEW.ID_TRABAJADOR,
        l_tipo,
        NEW.ID_CONTRATO,
        NEW.REFERENCIA,
        NEW.REFERENCIA_URL,
        NEW.FEC_EFECTIVO,
        NEW.TIPO_PAGO,
        NEW.FMR,
        NEW.SUELDO,
        NEW.BONIFICACION,
        NEW.OBSERVACION,
        NEW.ID_ESTADO_REMUNE,
        NEW.ESTADO_REMUNE,
        NEW.VIGENCIA,
        case when l_tipo='I' then NEW.ID_USER_REG else NEW.ID_USER_MOD end
    );
  end if;
IF TG_OP = 'DELETE' THEN
	RETURN OLD;
ELSE
	RETURN NEW;
END IF;

END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION enoc.trigger_fct_tr_remuneracion_accion() FROM PUBLIC;

DROP TRIGGER IF EXISTS tr_remuneracion_accion ON plla_remuneracion;
CREATE TRIGGER tr_remuneracion_accion
	AFTER INSERT OR UPDATE OR DELETE ON plla_remuneracion 
 FOR EACH ROW
	EXECUTE PROCEDURE enoc.trigger_fct_tr_remuneracion_accion();

