-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE FUNCTION enoc.fc_validar_req_cand (P_ID_SOLIC_REQUE bigint,P_ID_PERSONA bigint) RETURNS varchar AS $body$
DECLARE

l_contar bigint:=0;
l_msg varchar(600):='0';
l_tipo_tiempo_trabajo bigint;
l_id_modalidad_req bigint;
l_esdocente bigint;
l_id_entidad bigint;
l_codigo_mod varchar(20);
l_id_situacion_trabajador varchar(10):='0';


BEGIN

    select count(1) into STRICT l_contar
    from enoc.PLLA_SOLIC_REQ_CANDIDATO 
    where ID_SOLIC_REQUE=P_ID_SOLIC_REQUE
    and id_persona = P_ID_PERSONA
    and ID_ESTADO_REQ_CAND not  in ('00','09');

    if l_contar>0 then
      l_msg:='Ya esta asignado al puesto';
--       GOTO SALIDA;
    end if;

    select id_tipo_tiempo_trabajo, id_modalidad_req,coalesce(esdocente,0),id_entidad
    into STRICT l_tipo_tiempo_trabajo,l_id_modalidad_req,l_esdocente,l_id_entidad
    from enoc.plla_SOLIC_REQUE where ID_SOLIC_REQUE=P_ID_SOLIC_REQUE;

     select codigo into STRICT l_codigo_mod from enoc.plla_modalidad_req where id_modalidad_req=l_id_modalidad_req;

     select count(1) into STRICT l_contar from moises.trabajador where id_persona=P_ID_PERSONA and id_entidad=l_id_entidad;
     if l_contar>0 then
      select id_situacion_trabajador into STRICT l_id_situacion_trabajador from moises.trabajador where id_persona=P_ID_PERSONA and id_entidad=l_id_entidad;
     end if;

     
    
    case 
        when l_codigo_mod in ('CI') then 
          if l_id_situacion_trabajador<>'1' then
            l_msg:='Se debe asignar personal activo';
--             GOTO SALIDA;
          end if;
        when l_codigo_mod in ('CE','CES','IN') then
          if l_id_situacion_trabajador  in ('1','2','3','P') then
            l_msg:='No se debe asignar personal activo/pendiente de contratación';
--             GOTO SALIDA;
          end if;
          if l_codigo_mod='CES' then   --debe ser alumo
            select COUNT(1) INTO STRICT l_contar from   "DAVID"."ACAD_ALUMNO_PLAN" a, "DAVID"."ACAD_PLAN_PROGRAMA" b, "DAVID"."ACAD_PROGRAMA_ESTUDIO" C
            WHERE A.ID_PLAN_PROGRAMA=B.ID_PLAN_PROGRAMA
            AND B.ID_PROGRAMA_ESTUDIO=C.ID_PROGRAMA_ESTUDIO
            AND A.ID_PERSONA=P_ID_PERSONA
            AND c.id_nivel_ensenanza=1;

           if l_contar>0  then
            
              select COUNT(1) INTO STRICT l_contar from   "DAVID"."ACAD_ALUMNO_PLAN" a, "DAVID"."ACAD_PLAN_PROGRAMA" b, "DAVID"."ACAD_PROGRAMA_ESTUDIO" C
              WHERE A.ID_PLAN_PROGRAMA=B.ID_PLAN_PROGRAMA
              AND B.ID_PROGRAMA_ESTUDIO=C.ID_PROGRAMA_ESTUDIO
              AND A.ID_PERSONA=P_ID_PERSONA
              AND c.id_nivel_ensenanza=1
              AND COALESCE(A.graduado,0)=1;

              if l_contar>0  then
                l_msg:='Solo es para estudiantes ';
--                 GOTO SALIDA;
              end if;
            else
              l_msg:='Solo es para estudiantes ';
--               GOTO SALIDA;
            end if;
          end if;
        when l_codigo_mod in ('TR','ID') then
          if l_id_situacion_trabajador  in ('2','3','P') then
              l_msg:='No se debe asignar personal con pendiente de contratación';
--               GOTO SALIDA;
          end if;
          /*
          if l_tipo_tiempo_trabajo=3 then
            if l_id_situacion_trabajador='1' then
              l_msg:='Es personal tiempo parcial se debe asignar personal activo';
              --l_msg:='Es personal tiempo parcial se debe asignar personal activo';
--               GOTO SALIDA;
            end if;
          else
            if l_id_situacion_trabajador  in('1','2','3','P') then
              l_msg:='No se debe asignar personal activo/pendiente de contratación';
--               GOTO SALIDA;
            end if;
          end if;
          */
    else 
      l_msg:='0';
    end case;
--   <<SALIDA>>
	RETURN(l_msg);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION enoc.fc_validar_req_cand (P_ID_SOLIC_REQUE bigint,P_ID_PERSONA bigint) FROM PUBLIC;

