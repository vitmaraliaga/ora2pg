-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_carga_curso,public;




CREATE OR REPLACE PROCEDURE david.pk_carga_curso_pcd_create_carga_curso_unico (p_id_semestre_programa integer,p_id_plan_curso integer, p_id_usuario_reg integer, p_id_curso_modo integer, p_grupo integer default NULL, out CURSOR REFCURSOR) AS $body$
DECLARE

      v_id_carga_curso integer:=0;
      z_id_carga_curso integer:=0;
      l_val_id_carga_curso varchar(4000);
      l_contar bigint:=0;
      l_error varchar(200);

      cs_carga_curso CURSOR FOR
       SELECT Asp.Id_Semestre_Programa,
          '' AS grupo,1 estado_curso,0 horas_lectivas,'' id_tipo_ev,0 cupo,0 factor,'N' firmo_acta,
          coalesce(Apce.Id_Plan_Curso,Apc.Id_Plan_Curso) Id_Plan_Curso,'O' origen,Asp.Id_Programa_Estudio
        from acad_semestre_programa asp inner join Vw_Acad_Programa_Estudio vape on Vape.Id_Programa_Estudio=Asp.Id_Programa_Estudio
        and asp.id_semestre_programa=p_id_semestre_programa
        inner join acad_semestre asm on Asm.Id_Semestre=Asp.Id_Semestre
        inner join vw_acad_plan vap on Vap.Id_Escuela=vape.id_escuela
        inner join acad_plan_curso apc on Apc.Id_Plan=Vap.Id_Plan 
              and apc.Id_Plan_Curso=p_id_plan_curso
        left join acad_plan_curso apce on Apce.Id_Plan_Curso_Electivo=apc.Id_Plan_Curso
        order by apc.ciclo,Apc.Id_Plan_Curso;

      
BEGIN 
        l_error:= '';
        l_val_id_carga_curso:= '0';

        IF (p_grupo IS NOT NULL AND p_grupo::text <> '') THEN

            FOR l_group IN 1..p_grupo LOOP

                FOR reg IN cs_carga_curso LOOP
                  insert into acad_carga_curso(id_semestre_programa,id_curso_modo,grupo,estado_curso,horas_lectivas,id_tipo_ev,cupo,factor,firmo_acta,id_usuario_reg,fecha_registro)
                  VALUES (reg.id_semestre_programa,p_id_curso_modo, l_group,
                        reg.estado_curso,reg.horas_lectivas,reg.id_tipo_ev,reg.cupo,reg.factor,reg.firmo_acta,p_id_usuario_reg,clock_timestamp())
                  returning id_carga_curso into v_id_carga_curso;

                  insert into acad_carga_curso_det(id_plan_curso,id_carga_curso,origen,id_programa_estudio,id_usuario_reg,fecha_registro)
                  values (reg.id_plan_curso,v_id_carga_curso,reg.origen,reg.id_programa_estudio,p_id_usuario_reg,clock_timestamp());

                  l_contar :=1;

                  l_val_id_carga_curso:=l_val_id_carga_curso||','||v_id_carga_curso;

                END LOOP;

                if (v_id_carga_curso=0) then
                  l_error:= 'No se puede ingresar debido que este programa no cuenta con cursos de planes activos';
                end if;

            END LOOP;

        ELSE
            FOR reg IN cs_carga_curso LOOP

              insert into acad_carga_curso(id_semestre_programa,id_curso_modo,grupo,estado_curso,horas_lectivas,id_tipo_ev,cupo,factor,firmo_acta,id_usuario_reg,fecha_registro)
              VALUES (reg.id_semestre_programa,p_id_curso_modo,reg.grupo,
                    reg.estado_curso,reg.horas_lectivas,reg.id_tipo_ev,reg.cupo,reg.factor,reg.firmo_acta,p_id_usuario_reg,clock_timestamp())
              returning id_carga_curso into v_id_carga_curso;

              insert into acad_carga_curso_det(id_plan_curso,id_carga_curso,origen,id_programa_estudio,id_usuario_reg,fecha_registro)
              values (reg.id_plan_curso,v_id_carga_curso,reg.origen,reg.id_programa_estudio,p_id_usuario_reg,clock_timestamp());

              l_contar :=1;

              l_val_id_carga_curso:=l_val_id_carga_curso||','||v_id_carga_curso;

            END LOOP;

            if (v_id_carga_curso=0) then
              l_error:= 'No se puede ingresar debido que este programa no cuenta con cursos de planes activos';
            end if;

        END IF;


        open CURSOR FOR 
            SELECT l_contar as resultado, l_error as msg_error,l_val_id_carga_curso id_carga_curso;

   END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_carga_curso_pcd_create_carga_curso_unico (p_id_semestre_programa integer,p_id_plan_curso integer, p_id_usuario_reg integer, p_id_curso_modo integer, p_grupo integer default NULL, out CURSOR REFCURSOR) FROM PUBLIC;
