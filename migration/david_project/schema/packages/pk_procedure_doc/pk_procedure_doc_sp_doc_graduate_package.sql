-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_procedure_doc,public;




CREATE OR REPLACE PROCEDURE david.pk_procedure_doc_sp_doc_graduate ( P_STUDENT_PLAN_ID bigint, P_DATE text, P_CURSOR OUT REFCURSOR) AS $body$
DECLARE


        P_CODE        varchar(200) := '';
        P_STUDENT     varchar(200) := '';
        P_GENDER      varchar(2)   := '';
        P_PHOTO       varchar(500) := '';
        P_COLLEGE     varchar(500) := '';
        P_SCHOOL      varchar(500) := '';
        P_CAMPUS      varchar(500) := '';
        P_START_YEAR  varchar(4)   := '';
        P_END_DATE    varchar(200) := '';
        P_START_CYCLE varchar(2)   := '';
        P_END_CYCLE   varchar(2)   := '';
        P_PRINT_DATE  varchar(300) := TO_CHAR(clock_timestamp(), 'fmDD "Month" YYYY');

BEGIN

        IF (P_DATE IS NOT NULL AND P_DATE::text <> '') THEN
            P_PRINT_DATE := TO_CHAR(to_date(P_DATE,'YYYY-MM-DD'), 'fmDD "Month" YYYY');
        END IF;

        IF (P_STUDENT_PLAN_ID IS NOT NULL AND P_STUDENT_PLAN_ID::text <> '') THEN

            BEGIN
                SELECT VAPP.NOM_ESCUELA, VAPP.NOM_FACULTAD, VAPP.SEDE
                INTO STRICT P_SCHOOL, P_COLLEGE, P_CAMPUS
                FROM DAVID.VW_ALUMNO_PLAN_PROGRAMA VAPP
                WHERE VAPP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID;
            EXCEPTION
                WHEN no_data_found THEN
                    P_SCHOOL := '-';
                    P_COLLEGE := '-';
                    P_CAMPUS := '-';
            END;

            BEGIN
                SELECT VPNA.CODIGO,
                       (INITCAP(VPNA.NOMBRE) || ' ' || INITCAP(VPNA.PATERNO) || ' ' || INITCAP(VPNA.MATERNO)) AS ALUMNO,
                       VPNA.SEXO,
                       (CASE
                            WHEN (PN.FOTO IS NOT NULL AND PN.FOTO::text <> '') THEN 'lamb-academic/photos/fotodb/' ||
                                                          REPLACE(PN.FOTO, 'lamb-academic/fotodb/', '') ||
                                                          '.jpg'
                            ELSE 'lamb-academic/photos/fotodb/sinfoto.jpg' END)                               AS FOTO
                INTO STRICT P_CODE,P_STUDENT, P_GENDER, P_PHOTO
                FROM DAVID.ACAD_ALUMNO_PLAN AAP
                         INNER JOIN MOISES.VW_PERSONA_NATURAL_ALUMNO VPNA ON AAP.ID_PERSONA = VPNA.ID_PERSONA
                         INNER JOIN MOISES.PERSONA_NATURAL PN ON VPNA.ID_PERSONA = PN.ID_PERSONA
                WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID;
            EXCEPTION
                WHEN no_data_found THEN
                    P_CODE := '-';
                    P_STUDENT := '-';
                    P_GENDER := NULL;
                    P_PHOTO := 'lamb-academic/photos/fotodb/sinfoto.jpg';

            END;


            BEGIN
                SELECT TO_CHAR(MIN(AAC.FECHA_REGISTRO), 'YYYY')
                INTO STRICT P_START_YEAR
                FROM DAVID.ACAD_ALUMNO_PLAN AAP
                         INNER JOIN DAVID.ACAD_ALUMNO_CONTRATO AAC
                                    ON AAP.ID_PERSONA = AAC.ID_PERSONA AND AAP.ID_PLAN_PROGRAMA = AAC.ID_PLAN_PROGRAMA
                WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID
                  AND AAC.ESTADO = '1';
            EXCEPTION
                WHEN no_data_found THEN
                    P_START_YEAR := '-';
            END;


            BEGIN
                SELECT TO_CHAR(MAX(AMD.FECHA_FIN), 'DD "de" FMMonth "de" YYYY')
                INTO STRICT P_END_DATE
                FROM DAVID.ACAD_ALUMNO_PLAN AAP
                         INNER JOIN DAVID.ACAD_CURSO_ALUMNO ACA
                                    ON AAP.ID_PERSONA = ACA.ID_PERSONA AND AAP.ID_PLAN_PROGRAMA = ACA.ID_PLAN_PROGRAMA
                         INNER JOIN DAVID.ACAD_CARGA_CURSO ACC ON ACA.ID_CARGA_CURSO = ACC.ID_CARGA_CURSO
                         INNER JOIN DAVID.ACAD_MODULO_DETALLE AMD ON ACC.ID_SEMESTRE_PROGRAMA = AMD.ID_SEMESTRE_PROGRAMA
                WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID
                  AND ACA.ESTADO = '1'
                  AND ACA.ID_TIPO_CONDICION IN (1, 9, 13, 17);
            EXCEPTION
                WHEN no_data_found THEN
                    P_END_DATE := '-';
            END;


            -- TOTAL DE HORAS
            BEGIN
                SELECT MIN(APC.CICLO), MAX(APC.CICLO)
                INTO STRICT P_START_CYCLE, P_END_CYCLE
                FROM DAVID.ACAD_ALUMNO_PLAN AAP
                         INNER JOIN DAVID.ACAD_PLAN_PROGRAMA APP ON AAP.ID_PLAN_PROGRAMA = APP.ID_PLAN_PROGRAMA
                         INNER JOIN DAVID.ACAD_PLAN_CURSO APC ON APP.ID_PLAN = APC.ID_PLAN
                WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID
                  AND AAP.ESTADO = '1'
                  AND coalesce(APC.ID_PLAN_CURSO_ELECTIVO::text, '') = ''
                  AND APC.ESTADO = '1';
            EXCEPTION
                WHEN no_data_found THEN
                    P_START_CYCLE := '-';
                    P_END_CYCLE := '-';
            END;


        END IF;


        OPEN P_CURSOR FOR
            SELECT P_CODE        AS CODE,
                   P_STUDENT     AS STUDENT,
                   P_GENDER      AS GENDER,
                   P_PHOTO       AS PHOTO,
                   P_COLLEGE     AS COLLEGE,
                   P_SCHOOL      AS SCHOOL,
                   P_CAMPUS      AS CAMPUS,
                   P_START_YEAR  AS START_YEAR,
                   P_END_DATE    AS END_DATE,
                   P_START_CYCLE AS START_CYCLE,
                   P_END_CYCLE   AS END_CYCLE,
                   P_PRINT_DATE  AS PRINT_DATE
;

    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE 'ERROR: %', SQLERRM;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_procedure_doc_sp_doc_graduate ( P_STUDENT_PLAN_ID bigint, P_DATE text, P_CURSOR OUT REFCURSOR) FROM PUBLIC;
