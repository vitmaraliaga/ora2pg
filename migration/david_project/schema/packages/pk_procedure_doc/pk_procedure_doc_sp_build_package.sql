-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_procedure_doc,public;




CREATE OR REPLACE PROCEDURE david.pk_procedure_doc_sp_build ( P_PROCEDURE_PERSON_ID bigint, P_CURSOR OUT REFCURSOR) AS $body$
DECLARE


        P_SQL varchar(600);

BEGIN


        IF (P_PROCEDURE_PERSON_ID IS NOT NULL AND P_PROCEDURE_PERSON_ID::text <> '') THEN


            BEGIN
                SELECT (TP.CODIGO || '(' || string_agg(CASE
                                                        WHEN (TTP.VALOR IS NOT NULL AND TTP.VALOR::text <> '')
                                                            THEN CASE WHEN P.TIPO='str' THEN                                                                         '''' || TTP.VALOR::text || '''' WHEN P.TIPO='int' THEN                                                                         (TTP.VALOR)::numeric  END 
                                                        ELSE 'NULL' END, ',' ORDER BY TPP.ORDEN) || ',:1)')
                INTO STRICT P_SQL
                FROM DAVID.TR_TRAMITE_PARAMETRO TTP
                         INNER JOIN DAVID.TR_PROCEDIMIENTO TP ON TTP.ID_PROCEDIMIENTO = TP.ID_PROCEDIMIENTO
                         INNER JOIN DAVID.TR_PROCEDIMIENTO_PARAMETRO TPP ON TP.ID_PROCEDIMIENTO = TPP.ID_PROCEDIMIENTO
                         INNER JOIN DAVID.TR_PARAMETRO P
                                    ON TPP.ID_PARAMETRO = P.ID_PARAMETRO AND TTP.ID_PARAMETRO = P.ID_PARAMETRO
                WHERE TTP.ID_TRAMITE_PERSONA = P_PROCEDURE_PERSON_ID
                  -- AND TTP.ID_TRAMITE_EVALUACION IS NULL
                  AND TP.ESTADO = 1
                GROUP BY TP.CODIGO;
            EXCEPTION
                WHEN no_data_found THEN
                    P_SQL := NULL;
            END;

            IF (P_SQL IS NOT NULL AND P_SQL::text <> '') THEN

                RAISE NOTICE 'P_SQL ANTES: %', P_SQL;

                P_SQL := 'BEGIN ' || P_SQL || '; END;';

                RAISE NOTICE 'P_SQL DES: %', P_SQL;
                EXECUTE P_SQL USING OUT P_CURSOR;

            END IF;


        END IF;


    EXCEPTION
        WHEN OTHERS THEN
            RAISE NOTICE 'ERROR: %', SQLERRM;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_procedure_doc_sp_build ( P_PROCEDURE_PERSON_ID bigint, P_CURSOR OUT REFCURSOR) FROM PUBLIC;
