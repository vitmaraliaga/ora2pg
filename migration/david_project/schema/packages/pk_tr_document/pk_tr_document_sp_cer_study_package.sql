-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_tr_document,public;




CREATE OR REPLACE PROCEDURE david.pk_tr_document_sp_cer_study ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) AS $body$
DECLARE


        P_PERSON_ID       numeric(30);
        P_PROGRAM_PLAN_ID numeric(30);
        P_COLLEGE         varchar(500);
        P_SCHOOL          varchar(500);
        P_CAMPUS          varchar(500);
        P_CURRICULUM      varchar(500);

BEGIN


        IF (P_STUDENT_PLAN_ID IS NOT NULL AND P_STUDENT_PLAN_ID::text <> '') THEN

            SELECT VAPP.ID_PERSONA,
                   VAPP.ID_PLAN_PROGRAMA,
                   VAPP.NOM_FACULTAD,
                   VAPP.NOM_ESCUELA,
                   VAPP.SEDE,
                   APE.NOMBRE
            INTO STRICT P_PERSON_ID, P_PROGRAM_PLAN_ID, P_COLLEGE, P_SCHOOL, P_CAMPUS, P_CURRICULUM
            FROM DAVID.VW_ALUMNO_PLAN_PROGRAMA VAPP
                     INNER JOIN DAVID.ACAD_PROGRAMA_ESTUDIO APE
                                ON VAPP.ID_PROGRAMA_ESTUDIO = APE.ID_PROGRAMA_ESTUDIO
            WHERE VAPP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID;


            OPEN P_CURSOR FOR
                SELECT P_COLLEGE             AS COLLEGE,
                       P_SCHOOL              AS SCHOOL,
                       P_CAMPUS              AS CAMPUS,
                       P_CURRICULUM          AS CURRICULUM,
                       acp.ciclo             as CYCLE,
                       ACP.CURSO             AS COURSE,
                       apc.promedio          AS AVERAGE,
                       acp.credito           AS CREDIT,
                       TO_CHAR(coalesce(apc.fecha_cierre, coalesce(apc.fecha_fin_curso, apc.fecha_registro)),
                               'DD/MM/YYYY') AS RECORD,
                       tt.CODIGO             AS CODE_TYPE,
                       tt.NOMBRE             AS "TYPE"
                from VW_PLAN_PROGRAMA vpp
                         inner join VW_ACAD_CURSO_PLAN acp on VPP.ID_PLAN = ACP.ID_PLAN
                         inner join(SELECT acc.fecha_cierre,
                                            aca.Id_Plan_Programa,
                                            aca.promedio,
                                            aca.id_tipo_condicion,
                                            aca.id_tipo_tramite,
                                            aca.id_carga_curso,
                                            aca.fecha_registro,
                                            aca.fecha_fin_curso,
                                            CASE WHEN coalesce(apc.Id_Plan_Curso_Electivo::text, '') = '' THEN  apc.Id_Plan_Curso  ELSE apc.Id_Plan_Curso_Electivo END  Id_Plan_Curso
                                     from Acad_Curso_Alumno aca
                                              inner join acad_plan_curso apc on Apc.Id_Plan_Curso = Aca.Id_Plan_Curso
                                              left join acad_carga_curso acc on acc.id_carga_curso = aca.id_carga_curso
                                     where aca.id_persona = P_PERSON_ID
                                       and aca.estado = '1'
                                       and aca.Id_Tipo_Condicion IN (1, 9, 13, 17) ) apc
                                    on apc.Id_Plan_Programa = Vpp.Id_Plan_Programa and
                                       apc.Id_Plan_Curso = Acp.Id_Plan_Curso
                         inner join Tipo_Tramite tt on Tt.Id_Tipo_Tramite = apc.Id_Tipo_Tramite
                where VPP.ID_PLAN_PROGRAMA = P_PROGRAM_PLAN_ID
                  and coalesce(acp.ID_PLAN_CURSO_ELECTIVO::text, '') = ''
                order by 1, 2;

        ELSE
            OPEN P_CURSOR FOR SELECT * LIMIT 1 OFFSET -1;

        END IF;

    EXCEPTION
        WHEN no_data_found THEN
            OPEN P_CURSOR FOR SELECT * LIMIT 1 OFFSET -1;
        WHEN OTHERS THEN
            OPEN P_CURSOR FOR SELECT * LIMIT 1 OFFSET -1;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_tr_document_sp_cer_study ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) FROM PUBLIC;
