-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_tr_document,public;




CREATE OR REPLACE PROCEDURE david.pk_tr_document_sp_const_graduate_student ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) AS $body$
DECLARE


        P_COLLEGE     varchar(500);
        P_SCHOOL      varchar(500);
        P_CAMPUS      varchar(500);
        P_PROGRAM     varchar(500);
        P_START_YEAR  varchar(4)   := '';
        P_END_DATE    varchar(200) := '';
        P_START_CYCLE varchar(2)   := '';
        P_END_CYCLE   varchar(2)   := '';

BEGIN

        IF (P_STUDENT_PLAN_ID IS NOT NULL AND P_STUDENT_PLAN_ID::text <> '') THEN

            SELECT VAPP.NOM_FACULTAD,
                   VAPP.NOM_ESCUELA,
                   VAPP.SEDE,
                   APE.NOMBRE
            INTO STRICT P_COLLEGE, P_SCHOOL, P_CAMPUS, P_PROGRAM
            FROM DAVID.VW_ALUMNO_PLAN_PROGRAMA VAPP
                     INNER JOIN DAVID.ACAD_PROGRAMA_ESTUDIO APE
                                ON VAPP.ID_PROGRAMA_ESTUDIO = APE.ID_PROGRAMA_ESTUDIO
            WHERE VAPP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID;


            BEGIN
                SELECT TO_CHAR(MIN(AAC.FECHA_REGISTRO), 'YYYY')
                INTO STRICT P_START_YEAR
                FROM DAVID.ACAD_ALUMNO_PLAN AAP
                         INNER JOIN DAVID.ACAD_ALUMNO_CONTRATO AAC
                                    ON AAP.ID_PERSONA = AAC.ID_PERSONA AND AAP.ID_PLAN_PROGRAMA = AAC.ID_PLAN_PROGRAMA
                WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID
                  AND AAC.ESTADO = '1';
            EXCEPTION
                WHEN no_data_found THEN
                    P_START_YEAR := '-';
            END;


            BEGIN
                SELECT TO_CHAR(MAX(AMD.FECHA_FIN), 'DD "de" FMMonth "de" YYYY')
                INTO STRICT P_END_DATE
                FROM DAVID.ACAD_ALUMNO_PLAN AAP
                         INNER JOIN DAVID.ACAD_CURSO_ALUMNO ACA
                                    ON AAP.ID_PERSONA = ACA.ID_PERSONA AND AAP.ID_PLAN_PROGRAMA = ACA.ID_PLAN_PROGRAMA
                         INNER JOIN DAVID.ACAD_CARGA_CURSO ACC ON ACA.ID_CARGA_CURSO = ACC.ID_CARGA_CURSO
                         INNER JOIN DAVID.ACAD_MODULO_DETALLE AMD ON ACC.ID_SEMESTRE_PROGRAMA = AMD.ID_SEMESTRE_PROGRAMA
                WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID
                  AND ACA.ESTADO = '1'
                  AND ACA.ID_TIPO_CONDICION IN (1, 9, 13, 17);
            EXCEPTION
                WHEN no_data_found THEN
                    P_END_DATE := '-';
            END;


            BEGIN
                SELECT MIN(APC.CICLO), MAX(APC.CICLO)
                INTO STRICT P_START_CYCLE, P_END_CYCLE
                FROM DAVID.ACAD_ALUMNO_PLAN AAP
                         INNER JOIN DAVID.ACAD_PLAN_PROGRAMA APP ON AAP.ID_PLAN_PROGRAMA = APP.ID_PLAN_PROGRAMA
                         INNER JOIN DAVID.ACAD_PLAN_CURSO APC ON APP.ID_PLAN = APC.ID_PLAN
                WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID
                  AND AAP.ESTADO = '1'
                  AND coalesce(APC.ID_PLAN_CURSO_ELECTIVO::text, '') = ''
                  AND APC.ESTADO = '1';
            EXCEPTION
                WHEN no_data_found THEN
                    P_START_CYCLE := '-';
                    P_END_CYCLE := '-';
            END;


            OPEN P_CURSOR FOR
                SELECT P_COLLEGE     AS COLLEGE,
                       P_SCHOOL      AS SCHOOL,
                       P_CAMPUS      AS CAMPUS,
                       P_START_YEAR  AS START_YEAR,
                       P_END_DATE    AS END_DATE,
                       P_START_CYCLE AS START_CYCLE,
                       P_END_CYCLE   AS END_CYCLE
;

        ELSE

            OPEN P_CURSOR FOR
                SELECT '-' AS COLLEGE,
                       '-' AS SCHOOL,
                       '-' AS CAMPUS,
                       '-' AS START_YEAR,
                       '-' AS END_DATE,
                       '-' AS START_CYCLE,
                       '-' AS END_CYCLE
;

        END IF;

    EXCEPTION
        WHEN no_data_found THEN
            OPEN P_CURSOR FOR
                SELECT '-' AS COLLEGE,
                       '-' AS SCHOOL,
                       '-' AS CAMPUS,
                       '-' AS START_YEAR,
                       '-' AS END_DATE,
                       '-' AS START_CYCLE,
                       '-' AS END_CYCLE
;
        WHEN OTHERS THEN
            OPEN P_CURSOR FOR
                SELECT '-' AS COLLEGE,
                       '-' AS SCHOOL,
                       '-' AS CAMPUS,
                       '-' AS START_YEAR,
                       '-' AS END_DATE,
                       '-' AS START_CYCLE,
                       '-' AS END_CYCLE
;


    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_tr_document_sp_const_graduate_student ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) FROM PUBLIC;
