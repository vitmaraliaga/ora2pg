-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_tr_validation,public;




CREATE OR REPLACE PROCEDURE david.pk_tr_validation_sp_complete_curriculum ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) AS $body$
DECLARE


        P_PERSON_ID       numeric(30);
        P_PROGRAM_PLAN_ID numeric(30);
        P_STATUS          smallint;
        P_MESSAGE         text;


BEGIN

        IF (P_STUDENT_PLAN_ID IS NOT NULL AND P_STUDENT_PLAN_ID::text <> '') THEN

            SELECT AAP.ID_PERSONA,
                   AAP.ID_PLAN_PROGRAMA
            INTO STRICT P_PERSON_ID, P_PROGRAM_PLAN_ID
            FROM DAVID.ACAD_ALUMNO_PLAN AAP
            WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID;


            SELECT (CASE
                        WHEN EXISTS (select acp.ciclo    as CYCLE,
                                           ACP.CURSO    AS COURSE,
                                           apc.promedio AS AVERAGE,
                                           acp.credito  AS CREDIT
                                    from VW_PLAN_PROGRAMA vpp
                                             inner join VW_ACAD_CURSO_PLAN acp on VPP.ID_PLAN = ACP.ID_PLAN
                                             left join(select acc.fecha_cierre,
                                                               aca.Id_Plan_Programa,
                                                               aca.promedio,
                                                               aca.id_tipo_condicion,
                                                               aca.id_tipo_tramite,
                                                               aca.id_carga_curso,
                                                               aca.fecha_registro,
                                                               aca.fecha_fin_curso,
                                                               CASE WHEN coalesce(apc.Id_Plan_Curso_Electivo::text, '') = '' THEN                                                                       apc.Id_Plan_Curso  ELSE apc.Id_Plan_Curso_Electivo END  Id_Plan_Curso
                                                        from Acad_Curso_Alumno aca
                                                                 inner join acad_plan_curso apc on Apc.Id_Plan_Curso = Aca.Id_Plan_Curso
                                                                 left join acad_carga_curso acc on acc.id_carga_curso = aca.id_carga_curso
                                                        where aca.id_persona = P_PERSON_ID
                                                          and aca.estado = '1'
                                                          and aca.Id_Tipo_Condicion IN (1, 9, 13, 17) ) apc
                                                       on apc.Id_Plan_Programa = Vpp.Id_Plan_Programa and
                                                          apc.Id_Plan_Curso = Acp.Id_Plan_Curso
                                    where VPP.ID_PLAN_PROGRAMA = P_PROGRAM_PLAN_ID
                                      and coalesce(acp.ID_PLAN_CURSO_ELECTIVO::text, '') = ''
                                      AND coalesce(apc.promedio::text, '') = '' ) THEN 0
                        ELSE 1 END)
            INTO STRICT P_STATUS
;


            IF P_STATUS = 1 THEN
                P_MESSAGE := 'Has completado tu plan de estudios. ¡Felicitaciones por tu logro académico!';
            ELSE
                P_MESSAGE :=
                        'No has completado tu plan de estudios. Por favor, asegúrate de finalizar todos tus cursos';
            END IF;


            OPEN P_CURSOR FOR
                SELECT P_STATUS as STATUS, P_MESSAGE as MESSAGE
;

        ELSE
            OPEN P_CURSOR FOR
                SELECT 0 as STATUS, 'Plan del estudiante requerido para validar.' as MESSAGE
;
        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            OPEN P_CURSOR FOR
                SELECT 0 as STATUS, 'Se ha producido un error en la base de datos.' as MESSAGE
;


    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_tr_validation_sp_complete_curriculum ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) FROM PUBLIC;
