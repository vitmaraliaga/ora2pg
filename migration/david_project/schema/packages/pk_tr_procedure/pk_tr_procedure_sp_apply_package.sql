-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_tr_procedure,public;




CREATE OR REPLACE PROCEDURE david.pk_tr_procedure_sp_apply ( P_PERSON_ID bigint, P_PROCEDURE_TYPE_ID bigint, P_SUBJECT text, P_NAME text, P_PATERNAL text, P_MATERNAL text, P_EMAIL text, P_PHONE text, P_PARAMS text, P_CURSOR OUT REFCURSOR) AS $body$
DECLARE


        P_PROCEDURE_ID bigint;
        P_EXISTS       bigint;


BEGIN

        IF (P_PERSON_ID IS NOT NULL AND P_PERSON_ID::text <> '') AND (P_PROCEDURE_TYPE_ID IS NOT NULL AND P_PROCEDURE_TYPE_ID::text <> '') THEN


            SELECT (CASE
                        WHEN EXISTS (SELECT TTP.ID_TRAMITE_PERSONA
                                    FROM DAVID.TR_TRAMITE_PERSONA TTP
                                             INNER JOIN DAVID.TR_ESTADO TE ON TTP.ID_ESTADO = TE.ID_ESTADO
                                    WHERE TTP.ID_PERSONA = P_PERSON_ID
                                      AND TTP.ID_TIPO_TRAMITE = P_PROCEDURE_TYPE_ID
                                      AND TE.CODIGO = 'TR_APER'
                                      AND (TTP.ID_TRAMITE IS NOT NULL AND TTP.ID_TRAMITE::text <> '') ) THEN 1
                        ELSE 0 END)
            INTO STRICT P_EXISTS
;


            IF P_EXISTS = 0 THEN

                INSERT INTO DAVID.TR_TRAMITE TT(TT.ID_PERSONA,
                                                 TT.ID_TIPO_TRAMITE,
                                                 TT.PER_NOMBRE,
                                                 TT.PER_PATERNO,
                                                 TT.PER_MATERNO,
                                                 TT.PER_CORREO,
                                                 TT.PER_TELEFONO,
                                                 TT.ASUNTO,
                                                 TT.PARAMETROS)
                VALUES (P_PERSON_ID, P_PROCEDURE_TYPE_ID, P_NAME, P_PATERNAL, P_MATERNAL, P_EMAIL, P_PHONE, P_SUBJECT,
                        P_PARAMS)
                RETURNING TT.ID_TRAMITE INTO P_PROCEDURE_ID;

                DAVID.CALL pk_tr_procedure_sp_create(
                        P_PERSON_ID,
                        P_PROCEDURE_TYPE_ID,
                        P_PROCEDURE_ID,
                        P_PARAMS,
                        P_NAME,
                        P_PATERNAL,
                        P_MATERNAL,
                        P_EMAIL,
                        P_PHONE,
                        P_CURSOR);


            END IF;


        END IF;


    EXCEPTION
        WHEN
            OTHERS THEN
            RAISE NOTICE 'ERROR: %', SQLERRM;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_tr_procedure_sp_apply ( P_PERSON_ID bigint, P_PROCEDURE_TYPE_ID bigint, P_SUBJECT text, P_NAME text, P_PATERNAL text, P_MATERNAL text, P_EMAIL text, P_PHONE text, P_PARAMS text, P_CURSOR OUT REFCURSOR) FROM PUBLIC;
