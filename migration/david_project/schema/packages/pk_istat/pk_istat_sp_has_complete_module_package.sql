-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = david,pk_istat,public;




CREATE OR REPLACE PROCEDURE david.pk_istat_sp_has_complete_module ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) AS $body$
DECLARE

        P_STATUS          smallint;
        P_MESSAGE         text;
        P_PERSON_ID       numeric(30);
        P_PROGRAM_PLAN_ID numeric(30);
        P_YEAR            smallint;
        P_CYCLE_START     smallint;
        P_CYCLE_END       smallint;
        P_CYCLE_MAX       smallint;
        P_COMPLETE        varchar(2);

BEGIN

        IF (P_STUDENT_PLAN_ID IS NOT NULL AND P_STUDENT_PLAN_ID::text <> '') THEN

            SELECT AAP.ID_PERSONA, AAP.ID_PLAN_PROGRAMA
            INTO STRICT P_PERSON_ID, P_PROGRAM_PLAN_ID
            FROM DAVID.ACAD_ALUMNO_PLAN AAP
            WHERE AAP.ID_ALUMNO_PLAN = P_STUDENT_PLAN_ID;

            SELECT DAVID.FT_TIENE_MAX_CICLO(P_PERSON_ID, P_PROGRAM_PLAN_ID)
            INTO STRICT P_CYCLE_MAX
;


            IF MOD(P_CYCLE_MAX, 2) = 0 THEN
                P_CYCLE_START := P_CYCLE_MAX - 1;
                P_CYCLE_END := P_CYCLE_MAX;
            ELSE
                P_CYCLE_START := 1;
                P_CYCLE_END := 2;
            END IF;

            IF P_CYCLE_START >= 1 AND P_CYCLE_END <= 2 THEN
                P_YEAR := 1;
            ELSIF P_CYCLE_START >= 3 AND P_CYCLE_END <= 4 THEN
                P_YEAR := 2;
            ELSIF P_CYCLE_START >= 5 AND P_CYCLE_END <= 6 THEN
                P_YEAR := 3;
            ELSE
                P_YEAR := 1;
            END IF;


            SELECT DAVID.FT_FIN_PLAN_ANIO(P_PERSON_ID, P_PROGRAM_PLAN_ID, P_YEAR)
            INTO STRICT P_COMPLETE
;


            IF P_COMPLETE = 'N' THEN
                P_STATUS := 0;
                P_MESSAGE := '¡Módulo incompleto!';
            ELSIF P_COMPLETE = 'S' THEN
                P_STATUS := 1;
                P_MESSAGE := '¡Felicidades! Módulo ' || P_YEAR || ' completado con éxito.';
            ELSE
                P_STATUS := 0;
                P_MESSAGE := 'Validación modular no disponible.';
            END IF;

            OPEN P_CURSOR FOR
                SELECT P_STATUS as STATUS, P_MESSAGE as MESSAGE
;

        ELSE
            OPEN P_CURSOR FOR
                SELECT 0 as STATUS, 'Plan de estudios requerido para validar.' as MESSAGE
;
        END IF;

    EXCEPTION
        WHEN OTHERS THEN
            OPEN P_CURSOR FOR
                SELECT 0 as STATUS, 'Se ha producido un error en la base de datos.' as MESSAGE
;


    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE david.pk_istat_sp_has_complete_module ( P_STUDENT_PLAN_ID bigint, P_CURSOR OUT REFCURSOR) FROM PUBLIC;
