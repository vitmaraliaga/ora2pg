-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = david,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE FUNCTION david.ft_num_horas_cruce ( p_id_persona integer, p_id_semestre integer) RETURNS bigint AS $body$
DECLARE

   horario_t varchar(4000);
   horario_b varchar(4000);
   fecha_ini timestamp(0);
   fecha_fin timestamp(0);
   horario_f varchar(4000);
   horas numeric(30);
   letra varchar(1);
   curso CURSOR FOR

   SELECT horario_t --,fecha_inicio,fecha_fin
   		from (
      
      SELECT distinct Amd.Fecha_Inicio  as fecha_inicio,Amd.Fecha_Fin as fecha_fin,Accd.Id_Carga_Curso_Docente,Accd.Id_Tipo_Docente,aca.id_carga_curso,coalesce(Accd.Horario,
                  '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000') horario_t
      from Vw_Acad_Curso_Alumno aca
      inner join Acad_Carga_Curso_Docente accd on Accd.Id_Carga_Curso=Aca.Id_Carga_Curso and Accd.Id_Tipo_Horario=1
      inner join Acad_Modulo_Detalle amd on Amd.Id_Modulo_Detalle=Accd.Id_Modulo_Detalle
      where aca.id_semestre=p_id_semestre
      AND aca.estado !='4'
      and aca.id_persona=p_id_persona
      
union all

      select distinct Amd.Fecha_Inicio  as fecha_inicio,Amd.Fecha_Fin as fecha_fin,Accp.Id_Carga_Curso_Docente,Accp.Id_Tipo_Docente,aca.id_carga_curso,coalesce(Accp.Horario,
                  '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000') horario_t
      from Vw_Acad_Curso_Alumno aca
      inner join Acad_Carga_Curso_Docente accp on Accp.Id_Carga_Curso_Docente=Aca.Id_Carga_Curso_Docente
      inner join Acad_Modulo_Detalle amd on Amd.Id_Modulo_Detalle=Accp.Id_Modulo_Detalle
      where aca.id_semestre=p_id_semestre
      AND aca.estado !='4'
      and aca.id_persona=p_id_persona
      
      /*select distinct aca.id_carga_curso,nvl(decode(Accp.Horario,null,Accd.Horario,ft_horario_especifico(Accd.Horario||','||Accp.Horario)),
                  '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000') horario_t
      from Vw_Acad_Curso_Alumno aca
      inner join Acad_Carga_Curso_Docente accd on Accd.Id_Carga_Curso=Aca.Id_Carga_Curso and Accd.Id_Tipo_Horario=1
      left join Acad_Carga_Curso_Docente accp on Accp.Id_Carga_Curso_Docente=Aca.Id_Carga_Curso_Docente
      where aca.id_semestre=p_id_semestre
      AND aca.estado !='4'
      and aca.id_persona=p_id_persona*/
      order by fecha_inicio desc,fecha_fin desc
      
      ) alias2;

BEGIN

   horario_f := '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
	 horario_t := '';
	 horas := 0;

	 open curso;
	 fetch curso into horario_b /*,fecha_ini,fecha_fin*/
;

	 while curso%found loop
	 	   for i in 1..134 loop
			   if ( substr(horario_b,i,1) = '1') then
			   	  horario_t := horario_t||'1';
				else
			   	  horario_t := horario_t||substr(horario_f,i,1);
				end if;

			   if ( substr(horario_b,i,1) = '1') and ( substr(horario_f,i,1) = '1') then
			   	  horas := horas + 1;
			   end if;

		   end loop;
		   horario_f := horario_t;
		   horario_t := '';
	   	 fetch curso into horario_b;
	 end loop;

	 close curso;
	 RETURN( horas );
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION david.ft_num_horas_cruce ( p_id_persona integer, p_id_semestre integer) FROM PUBLIC;

