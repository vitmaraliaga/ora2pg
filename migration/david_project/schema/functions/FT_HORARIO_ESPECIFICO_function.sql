-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = david,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE FUNCTION david.ft_horario_especifico ( s_horarios text) RETURNS varchar AS $body$
DECLARE

   horario_t varchar(4000);
   horario_b varchar(4000);
   horario_f varchar(4000);WITH RECURSIVE cte AS (

   curso CURSOR FOR
   		  SELECT (SELECT array_to_string(a, '') FROM regexp_matches(s_horarios, '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (row_number() over () - 1) ) horario

        level <= length(regexp_replace(s_horarios, '[^,]+', 'g'))  + 1  UNION ALL

   curso CURSOR FOR
   		  SELECT (SELECT array_to_string(a, '') FROM regexp_matches(s_horarios, '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (row_number() over () - 1) ) horario
        
        level <= length(regexp_replace(s_horarios, '[^,]+', 'g'))  + 1 JOIN cte c ON ()

) SELECT * FROM cte;

BEGIN
	 horario_f := '0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000';
	 horario_t := '';

	 open curso;
	 fetch curso into horario_b;

	 while curso%found loop
	 	   for i in 1..113 loop
			   if ( substr(horario_b,i,1) <> '0') then
			   	  horario_t := horario_t||substr(horario_b,i,1);
				else
			   	  horario_t := horario_t||substr(horario_f,i,1);
				end if;
		   end loop;
		   horario_f := horario_t;
		   horario_t := '';
	   	 fetch curso into horario_b;
	 end loop;

	 close curso;
	 RETURN( horario_f );
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
 STABLE;
-- REVOKE ALL ON FUNCTION david.ft_horario_especifico ( s_horarios text) FROM PUBLIC;

