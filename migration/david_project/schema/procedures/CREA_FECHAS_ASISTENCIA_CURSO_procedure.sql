-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = david,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE david.crea_fechas_asistencia_curso ( p_id_carga_curso integer) AS $body$
DECLARE


  val varchar(100);
  dias varchar(7);
  dias2 varchar(100);
  corte bigint;
  horas bigint;
  var varchar(7);
  fecha_inicio timestamp(0);
  dia_inicio varchar(20);
  MSJ varchar(100);
  fecha_inicio_curso timestamp(0);
  fecha_inicio2 timestamp(0);

  ref_hor varchar(400);

  hini varchar(100);
  hfin varchar(100);

  cursos_carga CURSOR FOR
  SELECT Th.Nombre tipo,Accd.Horario,Aca.Id_Carga_Curso,Accd.Id_Carga_Curso_Docente,Amd.Fecha_Inicio,Amd.Fecha_fin,(upper(TO_CHAR(to_date(Amd.Fecha_Inicio,'dd-mm-yy'),'day'))) dia_inicio,
  CASE WHEN Aca.Id_Programa_Estudio=1 THEN 0  ELSE 1 END  no_medicina,aca.id_nivel_ensenanza,aca.id_semestre
  from vw_acad_carga_academica aca inner join acad_carga_curso_docente accd on Accd.Id_Carga_Curso=Aca.Id_Carga_Curso
  inner join Tipo_Horario th on Th.Id_Tipo_Horario=Accd.Id_Tipo_Horario
  inner join Acad_Modulo_Detalle amd on Amd.Id_Modulo_Detalle=Accd.Id_Modulo_Detalle
  where aca.id_curso_modo=1 and aca.origen='O' and Aca.Id_carga_curso= p_id_carga_curso
;


BEGIN
  
  delete FROM acad_doc_asistencia where id_carga_curso_docente in (SELECT id_carga_curso_docente from acad_carga_curso_docente where id_carga_curso=p_id_carga_curso);
  commit;

  FOR c_horario IN cursos_carga LOOP
        dias := ' ';
        corte :=1;
        horas :=0;

        FOR i IN 1..25 LOOP
            val := SUBSTR(c_horario.HORARIO,corte ,corte+7);
           FOR y IN 1..7 LOOP
            var := substr(val,y,1);
            IF var ='1' THEN
              IF position(y::text in dias) =0 THEN
                dias :=CONCAT(dias, y);
              END IF;
            END IF;

          END LOOP;
            corte:=corte+7;
        END LOOP;

       IF LENGTH(trim(both dias)) >0 THEN
          FOR y IN 1..length(trim(both dias)) LOOP
            dias2 := '';
            var := substr(trim(both dias),y,1);
            CASE
             WHEN var = '1' THEN dias2 :=CONCAT(dias2, 'DOMINGO');
             WHEN var = '2' THEN dias2 :=CONCAT(dias2, 'LUNES');
             WHEN var = '3' THEN dias2 :=CONCAT(dias2, 'MARTES');
             WHEN var = '4' THEN dias2 :=CONCAT(dias2, 'MIÉRCOLES');
             WHEN var = '5' THEN dias2 :=CONCAT(dias2, 'JUEVES');
             WHEN var = '6' THEN dias2 :=CONCAT(dias2, 'VIERNES');
             --WHEN var = '7' THEN dias:=dias+'SATURDAY,';
             ELSE dias2 :=CONCAT(dias2, 'SÁBADO');
            END CASE;
            IF trim(both dias2)=trim(both c_horario.dia_inicio) THEN
              fecha_inicio_curso:=c_horario.fecha_inicio;
            ELSE
              select next_day(c_horario.fecha_inicio,dias2) into STRICT fecha_inicio2;
              fecha_inicio_curso:= fecha_inicio2;
            END IF;

            select horario_dia_curdoc(c_horario.id_carga_curso_docente,var) into STRICT ref_hor;

            hini :=substr(ref_hor,0,5);
            hfin :=substr(ref_hor,-5);

            Insert into acad_doc_asistencia Values (c_horario.id_carga_curso_docente,c_horario.id_semestre,c_horario.id_nivel_ensenanza,c_horario.no_medicina,fecha_inicio_curso,c_horario.TIPO,'0',hini,hfin);
            commit;

            fecha_inicio_curso := fecha_inicio_curso+7;

            while fecha_inicio_curso<=c_horario.fecha_fin loop
            
              Insert into acad_doc_asistencia Values (c_horario.id_carga_curso_docente,c_horario.id_semestre,c_horario.id_nivel_ensenanza,c_horario.no_medicina,fecha_inicio_curso,c_horario.TIPO,'0',hini,hfin);
              commit;

              fecha_inicio_curso := fecha_inicio_curso+7;

            end loop;

          END LOOP;
        END IF;
    END LOOP;
END;
$body$
LANGUAGE PLPGSQL
;
-- REVOKE ALL ON PROCEDURE david.crea_fechas_asistencia_curso ( p_id_carga_curso integer) FROM PUBLIC;

