-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = david,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE       pk_carga_curso AS 
   PROCEDURE pcd_create_carga_curso(p_id_semestre_programa integer, p_id_usuario_reg integer, cursor out sys_refcursor); 
   PROCEDURE pcd_create_carga_curso_grupo(p_id_carga_curso integer, p_id_usuario_reg integer, cursor out sys_refcursor); 
   PROCEDURE pcd_create_carga_curso_unico(p_id_semestre_programa integer,p_id_plan_curso integer, p_id_usuario_reg integer, p_id_curso_modo integer, p_grupo integer DEFAULT NULL,cursor out sys_refcursor); 
   PROCEDURE pcd_create_carga_curso_unido(p_id_carga_curso integer, p_id_plan_curso integer, p_id_semestre_programa integer, p_id_usuario_reg integer,  cursor out sys_refcursor); 
   PROCEDURE pcd_delete_carga_curso_unico(p_id_carga_curso integer, cursor out sys_refcursor); 
END pk_carga_curso;


CREATE OR REPLACE PACKAGE BODY       pk_carga_curso AS  
   
   PROCEDURE pcd_create_carga_curso(p_id_semestre_programa integer, p_id_usuario_reg integer, cursor out sys_refcursor) IS 
  
     v_id_carga_curso integer:=0; 
     l_contar number:=0;
     l_error varchar2(200);
     l_val_id_carga_curso varchar2(4000);
  

     CURSOR cs_carga_curso IS
       select Asp.Id_Semestre_Programa,1 id_curso_modo,
          '' grupo,1 estado_curso,0 horas_lectivas,'' id_tipo_ev,0 cupo,0 factor,'N' firmo_acta, Apc.Id_Plan_Curso,'O' origen,apc.ciclo, Asp.Id_Programa_Estudio
        from acad_semestre_programa asp inner join Vw_Acad_Programa_Estudio vape on Vape.Id_Programa_Estudio=Asp.Id_Programa_Estudio
        and asp.id_semestre_programa=p_id_semestre_programa
        inner join acad_semestre asm on Asm.Id_Semestre=Asp.Id_Semestre
        inner join vw_acad_plan vap on Vap.Id_Escuela=vape.id_escuela 
              and Vap.Nombre_Plan>substr(asm.semestre,0,4)-5||'-2' and Vap.Nombre_Plan<=substr(asm.semestre,0,4)||'-2'
        inner join acad_plan_curso apc on Apc.Id_Plan=Vap.Id_Plan 
              and apc.ciclo=decode(substr(Vap.Nombre_Plan,-2),'-2',((substr(asm.semestre,0,4)-substr(Vap.Nombre_Plan,0,4)+1)*2)-decode(substr(asm.semestre,-1),'2',1,'3',1,0),
                                      ((substr(asm.semestre,0,4)-substr(Vap.Nombre_Plan,0,4)+1)*2)-decode(substr(asm.semestre,-1),'2',0,'3',0,1))
        where not Exists(select 1 from acad_plan_curso b where b.id_plan=vap.id_plan and B.Id_Plan_Curso_Electivo=Apc.Id_Plan_Curso)
        order by apc.ciclo,Apc.Id_Plan_Curso;
     

        
        
      BEGIN
        l_error:= 'No se puede ingresar debido que este programa no cuenta con cursos de planes activos';
        l_val_id_carga_curso:= '0'; 
        FOR reg IN cs_carga_curso LOOP
        
          insert into acad_carga_curso
          (id_semestre_programa,id_curso_modo,grupo,estado_curso,horas_lectivas,id_tipo_ev,cupo,factor,firmo_acta,id_usuario_reg,fecha_registro)
          VALUES(reg.id_semestre_programa,reg.id_curso_modo,reg.grupo,
                reg.estado_curso,reg.horas_lectivas,reg.id_tipo_ev,reg.cupo,reg.factor,reg.firmo_acta,p_id_usuario_reg,sysdate)
          returning id_carga_curso into v_id_carga_curso;
          
          insert into acad_carga_curso_det(id_plan_curso,id_carga_curso,origen,id_programa_estudio,id_usuario_reg,fecha_registro)
          values (reg.id_plan_curso,v_id_carga_curso,reg.origen,reg.id_programa_estudio,p_id_usuario_reg,sysdate);
          
          l_contar :=1;
          l_error:= '';
          
          l_val_id_carga_curso:=l_val_id_carga_curso||','||v_id_carga_curso;
          
        END LOOP;
        
        open cursor for 
            select l_contar as resultado, l_error as msg_error,l_val_id_carga_curso id_carga_curso from dual;
      
    END; 
    
   PROCEDURE pcd_create_carga_curso_grupo(p_id_carga_curso integer, p_id_usuario_reg integer, cursor out sys_refcursor) IS 
    
      v_id_carga_curso integer:=0; 
      z_id_carga_curso integer:=0; 
      v_id_semestre_programa acad_carga_curso.id_semestre_programa%type;
      v_id_curso_modo acad_carga_curso.id_curso_modo%type;
      v_grupo acad_carga_curso.grupo%type;
      v_estado_curso acad_carga_curso.estado_curso%type;
      v_horas_lectivas acad_carga_curso.horas_lectivas%type;
      v_id_tipo_ev acad_carga_curso.id_tipo_ev%type;
      v_cupo acad_carga_curso.cupo%type;
      v_factor acad_carga_curso.factor%type;
      v_firmo_acta acad_carga_curso.firmo_acta%type;
      v_id_plan_curso Acad_Carga_Curso_Det.id_plan_curso%type;
      v_origen Acad_Carga_Curso_Det.origen%type; 
      v_id_programa_estudio Acad_Carga_Curso_Det.id_programa_estudio%type; 
      l_contar number:=0;
      l_error varchar2(200);
      
      BEGIN
        l_error:= 'No se puede ingresar debido que este programa no cuenta con cursos de planes activos';
        l_error:= '';
        update acad_carga_curso set grupo=nvl(grupo,1), id_usuario_act=p_id_usuario_reg, fecha_actualizacion=sysdate
        where Id_Carga_Curso=p_id_carga_curso returning id_carga_curso into z_id_carga_curso;
        
        
        select acc.id_semestre_programa,acc.id_curso_modo,nvl(acc.grupo,0)+1 grupo,acc.estado_curso,
                acc.horas_lectivas,acc.id_tipo_ev,acc.cupo,acc.factor,acc.firmo_acta,
                accd.id_plan_curso,accd.origen, Accd.Id_Programa_Estudio 
                into v_id_semestre_programa,v_id_curso_modo,v_grupo,v_estado_curso,
                      v_horas_lectivas,v_id_tipo_ev,v_cupo,v_factor,v_firmo_acta,
                      v_id_plan_curso,v_origen, v_id_programa_estudio 
        from acad_carga_curso acc inner join Acad_Carga_Curso_Det accd on Accd.Id_Carga_Curso=Acc.Id_Carga_Curso
              and accd.origen='O' and acc.Id_Carga_Curso=z_id_carga_curso;
        
          
      insert into acad_carga_curso
      (id_semestre_programa,id_curso_modo,grupo,estado_curso,horas_lectivas,id_tipo_ev,cupo,factor,firmo_acta,id_usuario_reg,fecha_registro)
      VALUES(v_id_semestre_programa,v_id_curso_modo,v_grupo,
            v_estado_curso,v_horas_lectivas,v_id_tipo_ev,v_cupo,v_factor,v_firmo_acta,p_id_usuario_reg,sysdate)
      returning id_carga_curso into v_id_carga_curso;
            
      insert into acad_carga_curso_det(id_plan_curso,id_carga_curso,origen,id_programa_estudio,id_usuario_reg,fecha_registro)
          values (v_id_plan_curso,v_id_carga_curso,v_origen,v_id_programa_estudio,p_id_usuario_reg,sysdate);
          
      if(v_id_carga_curso=0) then
        l_error:= 'No se puede ingresar debido que este programa no cuenta con cursos de planes activos';
      end if;
      
      l_contar :=1;
        
          
      open cursor for 
            select l_contar as resultado, l_error as msg_error, v_id_carga_curso id_carga_curso from dual;
    
    END;
   
  PROCEDURE pcd_create_carga_curso_unico(p_id_semestre_programa integer,p_id_plan_curso integer, p_id_usuario_reg integer, p_id_curso_modo integer, p_grupo integer default NULL, cursor out sys_refcursor) IS
      v_id_carga_curso integer:=0; 
      z_id_carga_curso integer:=0; 
      l_val_id_carga_curso varchar2(4000);
      l_contar number:=0;
      l_error varchar2(200);
      
      CURSOR cs_carga_curso IS
       select Asp.Id_Semestre_Programa,
          '' AS grupo,1 estado_curso,0 horas_lectivas,'' id_tipo_ev,0 cupo,0 factor,'N' firmo_acta,
          nvl(Apce.Id_Plan_Curso,Apc.Id_Plan_Curso) Id_Plan_Curso,'O' origen,Asp.Id_Programa_Estudio
        from acad_semestre_programa asp inner join Vw_Acad_Programa_Estudio vape on Vape.Id_Programa_Estudio=Asp.Id_Programa_Estudio
        and asp.id_semestre_programa=p_id_semestre_programa
        inner join acad_semestre asm on Asm.Id_Semestre=Asp.Id_Semestre
        inner join vw_acad_plan vap on Vap.Id_Escuela=vape.id_escuela
        inner join acad_plan_curso apc on Apc.Id_Plan=Vap.Id_Plan 
              and apc.Id_Plan_Curso=p_id_plan_curso
        left join acad_plan_curso apce on Apce.Id_Plan_Curso_Electivo=apc.Id_Plan_Curso
        order by apc.ciclo,Apc.Id_Plan_Curso;
      
      BEGIN 
        l_error:= '';
        l_val_id_carga_curso:= '0'; 

        IF p_grupo IS NOT NULL THEN

            FOR l_group IN 1..p_grupo LOOP

                FOR reg IN cs_carga_curso LOOP
                  insert into acad_carga_curso
                  (id_semestre_programa,id_curso_modo,grupo,estado_curso,horas_lectivas,id_tipo_ev,cupo,factor,firmo_acta,id_usuario_reg,fecha_registro)
                  VALUES(reg.id_semestre_programa,p_id_curso_modo, l_group,
                        reg.estado_curso,reg.horas_lectivas,reg.id_tipo_ev,reg.cupo,reg.factor,reg.firmo_acta,p_id_usuario_reg,sysdate)
                  returning id_carga_curso into v_id_carga_curso;

                  insert into acad_carga_curso_det(id_plan_curso,id_carga_curso,origen,id_programa_estudio,id_usuario_reg,fecha_registro)
                  values (reg.id_plan_curso,v_id_carga_curso,reg.origen,reg.id_programa_estudio,p_id_usuario_reg,sysdate);

                  l_contar :=1;

                  l_val_id_carga_curso:=l_val_id_carga_curso||','||v_id_carga_curso;

                END LOOP;

                if(v_id_carga_curso=0) then
                  l_error:= 'No se puede ingresar debido que este programa no cuenta con cursos de planes activos';
                end if;

            END LOOP;

        ELSE
            FOR reg IN cs_carga_curso LOOP

              insert into acad_carga_curso
              (id_semestre_programa,id_curso_modo,grupo,estado_curso,horas_lectivas,id_tipo_ev,cupo,factor,firmo_acta,id_usuario_reg,fecha_registro)
              VALUES(reg.id_semestre_programa,p_id_curso_modo,reg.grupo,
                    reg.estado_curso,reg.horas_lectivas,reg.id_tipo_ev,reg.cupo,reg.factor,reg.firmo_acta,p_id_usuario_reg,sysdate)
              returning id_carga_curso into v_id_carga_curso;

              insert into acad_carga_curso_det(id_plan_curso,id_carga_curso,origen,id_programa_estudio,id_usuario_reg,fecha_registro)
              values (reg.id_plan_curso,v_id_carga_curso,reg.origen,reg.id_programa_estudio,p_id_usuario_reg,sysdate);

              l_contar :=1;

              l_val_id_carga_curso:=l_val_id_carga_curso||','||v_id_carga_curso;

            END LOOP;

            if(v_id_carga_curso=0) then
              l_error:= 'No se puede ingresar debido que este programa no cuenta con cursos de planes activos';
            end if;

        END IF;
        

        open cursor for 
            select l_contar as resultado, l_error as msg_error,l_val_id_carga_curso id_carga_curso from dual;
    
   END;
   
   PROCEDURE pcd_create_carga_curso_unido(p_id_carga_curso integer, p_id_plan_curso integer, p_id_semestre_programa integer, p_id_usuario_reg integer, cursor out sys_refcursor) IS
   
      v_id_programa_estudio Acad_Carga_Curso_Det.id_programa_estudio%type; 
      l_contar number:=0;
      l_error varchar2(200);
      BEGIN 
        l_error:= '';

        select id_programa_estudio into v_id_programa_estudio
        from acad_semestre_programa where id_semestre_programa=p_id_semestre_programa;
      
        insert into acad_carga_curso_det(id_plan_curso,id_carga_curso,origen,id_programa_estudio,id_usuario_reg,fecha_registro)
        values (p_id_plan_curso,p_id_carga_curso,'E',v_id_programa_estudio,p_id_usuario_reg,sysdate);
         l_contar :=1;
         
        open cursor for 
            select l_contar as resultado, l_error as msg_error from dual;

   END;
   
   
   PROCEDURE pcd_delete_carga_curso_unico(p_id_carga_curso integer, cursor out sys_refcursor)IS
   
      v_num integer:=0; 
      resultado exception;
      l_contar number:=0;
      l_error varchar2(200);
      
      BEGIN 
        l_error:= '';

        select count(id_alumno_contrato_curso) into v_num
        from acad_alumno_contrato_curso aacc inner join acad_curso_alumno aaca
        on aaca.id_curso_alumno=aacc.id_curso_alumno
        and aaca.id_carga_curso=p_id_carga_curso;
        
        if(v_num=0) then
        
          delete acad_curso_alumno where id_carga_curso=p_id_carga_curso;
          delete acad_carga_curso_det where id_carga_curso=p_id_carga_curso;
          delete acad_carga_curso_docente where id_carga_curso=p_id_carga_curso;
          delete acad_carga_curso where id_carga_curso=p_id_carga_curso;
          
          l_contar :=1;
          
        else
        
          l_contar :=0;
          l_error :='Existen alumnos confirmaron la matrícula este curso';
        
        end if;

        open cursor for 
            select l_contar as resultado, l_error as msg_error from dual;
        
   
   END;
   
END pk_carga_curso;