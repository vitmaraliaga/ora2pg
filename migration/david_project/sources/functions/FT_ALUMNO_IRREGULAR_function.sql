-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = david,public;
\set ON_ERROR_STOP ON

function ft_alumno_irregular(p_id_persona integer,p_id_plan_programa integer,p_id_semestre integer) RETURN VARCHAR2 AS
  v_res VARCHAR2(20);
  v_ciclo number;
  v_max_ciclo number;
BEGIN

  select max(decode(substr(aac.semestre,-1),2,(substr(aac.semestre,0,4)-substr(substr(ap.Nombre,-6),0,4)+1)*2,((substr(aac.semestre,0,4)-substr(substr(Ap.Nombre,-6),0,4)+1)*2)-1)) into v_ciclo
  from Vw_Acad_Alumno_Contrato aac inner join Acad_Plan_Programa app on App.Id_Plan_Programa=Aac.Id_Plan_Programa
  inner join acad_plan ap on ap.id_plan=app.id_plan
  where aac.id_persona=p_id_persona and aac.id_semestre=p_id_semestre and aac.id_plan_programa=p_id_plan_programa;
  
  select max(ciclo) into v_max_ciclo
  from Acad_Plan_Programa app inner join acad_plan ap on ap.id_plan=app.id_plan
  inner join acad_plan_curso apc on Apc.Id_Plan=ap.id_plan
  where app.id_plan_programa=p_id_plan_programa;
  
  if(v_ciclo>v_max_ciclo or v_ciclo=0) then
  
    v_res:='S';
  
  else
  
    select decode((select count(*)
                    from acad_plan_programa app inner join vw_acad_curso_plan acpe on Acpe.Id_Plan=app.id_plan
                    where app.id_plan_programa=p_id_plan_programa and acpe.ciclo=v_ciclo and Acpe.Id_Plan_Curso_Electivo is null
                    and not Exists (select 1
                                    from acad_curso_alumno aca inner join acad_plan_curso acp on Acp.Id_Plan_Curso=Aca.Id_Plan_Curso
                                    where aca.id_persona=p_id_persona and aca.Id_Plan_Programa=app.id_plan_programa and acp.ciclo=acpe.ciclo and Aca.Id_Tipo_Condicion in (1,13,17,7)
                                    and decode(Acp.Id_Plan_Curso_Electivo,null,Acp.Id_Plan_Curso,Acp.Id_Plan_Curso_Electivo)=Acpe.Id_Plan_Curso)),0,'N','S') into v_res
    from dual;
    
  end if;
  
  return v_res;
  
end;

