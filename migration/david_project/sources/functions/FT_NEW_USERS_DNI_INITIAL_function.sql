-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = david,public;
\set ON_ERROR_STOP ON

function       ft_new_users_dni_initial(v_id_persona number) RETURN VARCHAR2 AS

  p_users VARCHAR2(250);

BEGIN

    select 
    CONCAT(
        sintilde_con_punto(
            decode(
                sintilde_con_punto(
                    replace(
                        decode(
                            sintilde_con_punto(
                                decode(
                                    sintilde_con_punto(
                                        lower(
                                            substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                            ||p.paterno
                                        )
                                    ), 
                                    u.email,
                                    lower(
                                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                                        ||p.paterno
                                    ),
                                    sintilde_con_punto(
                                        lower(
                                            substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                            ||p.paterno
                                        )
                                    )
                                )
                            ), 
                            u2.email,
                            sintilde_con_punto(
                                lower(
                                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                                    ||p.paterno||substr(p.materno,0,1)
                                )
                            ),
                            sintilde_con_punto(
                                decode(
                                    lower(
                                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                        ||p.paterno
                                    ),
                                    u.email,
                                    lower(
                                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                                        ||p.paterno
                                    ),
                                    lower(
                                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                        ||p.paterno
                                    )
                                )
                            )
                        ),
                        ' ',
                        ''
                    )
                ),
                u3.email,
                lower(replace(substr(p.nombres,1,1)||p.paterno||substr(p.materno,0,1),' ','')),
                sintilde_con_punto(
                    replace(
                        decode(
                            decode(
                                lower(
                                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                    ||p.paterno
                                ),
                                u.email,
                                lower(
                                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                                    ||p.paterno
                                ),
                                lower(
                                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                    ||p.paterno
                                )
                            ),
                            u2.email,
                            lower(
                                substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                                ||p.paterno||substr(p.materno,0,1)
                            ),
                            decode(
                                lower(
                                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                    ||p.paterno
                                ),
                                u.email,
                                lower(
                                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                                    ||p.paterno
                                ),
                                lower(
                                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                                    ||substr(p.paterno,0,1)||p.materno
                                )
                            )
                        ),
                        ' ',
                        ''
                    )
                )
            )
        ),
        substr(p.documentos,-4)
    ) into p_users
    from (
        select Distinct 
            p.id_persona,
            trim(paterno) paterno,
            trim(materno) materno,
            trim(nombre) nombres, 
            p.codigo codigo_personal,
            pn.num_documento documentos,
            id_tipodocumento tipo_documento 
        from moises.persona p 
        inner join moises.persona_natural pn on pn.id_persona=p.id_persona 
        where p.id_persona=v_id_persona
    ) p
    left join datos_personales@dbl_noe dp on dp.codigo_personal=p.Codigo_Personal
    left join eliseo.users u on u.email=sintilde_con_punto(
        lower(
            substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
            ||p.paterno
        )
    )
    left join eliseo.users u2 on u2.email=sintilde_con_punto(
        decode(
            lower(
                substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                ||p.paterno
            ),
            u.email,
            lower(
                substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                ||p.paterno
            ),
            lower(
                substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                ||p.paterno
            ),
            lower(
                substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                ||p.paterno
            )
        )
    )
    left join eliseo.users u3 on u3.email=sintilde_con_punto(
        replace(
            decode(
                decode(
                    lower(
                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                        ||p.paterno
                    ),
                    u.email,
                    lower(
                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                        ||p.paterno
                    )
                ),
                u2.email,
                lower(
                    substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                    ||p.paterno||substr(p.materno,0,1)
                ),
                decode(
                    lower(
                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                        ||p.paterno
                    ),
                    u.email,
                    lower(
                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,INSTR(p.nombres,' ')+1)),1,1)
                        ||p.paterno
                    ),
                    lower(
                        substr(decode(INSTR(p.nombres,' '),'0',p.nombres,substr(p.nombres,0,INSTR(p.nombres,' ')-1)),1,1)
                        ||p.paterno
                    )
                )
            ),
            ' ',
            ''
        )
    )
    where p.id_persona not in (select id from eliseo.users);

    return replace(p_users,' ','');

end;

