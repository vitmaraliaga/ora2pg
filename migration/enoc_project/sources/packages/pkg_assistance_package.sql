-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE      PKG_ASSISTANCE AS 

  /* TODO enter package declarations (types, exceptions, methods etc) here */ 
  PROCEDURE SP_HORARIO_PROGRAMADO(P_ID_TRABAJADOR number,P_FECHA DATE, CURSOR OUT SYS_REFCURSOR) ;
  
  PROCEDURE SP_REGISTRAR_SOBRETIEMPO(
   P_ID_SOBRETIEMPO NUMBER, 
   P_ID_ENTIDAD NUMBER,
   P_ID_DEPTO varchar2,
   P_ID_TRABAJADOR NUMBER, 
   P_ID_TIPO_SOBRETIEMPO NUMBER,
   P_FECHA DATE,
   P_MOTIVO VARCHAR2,
   P_HORA_DESDE VARCHAR2, 
   P_HORA_HASTA VARCHAR2, 
   P_COMPENSADO varchar2, 
   P_FECHA_COMPENSAR date,
   P_COMENTARIO_COMPENSAR varchar2,
   P_HORAS varchar2,
   P_PERIODO varchar2,
   P_ID_USER_REG NUMBER,
   P_ERROR OUT number,
   P_MSGERROR out varchar2,
   P_ID_SOBRETIEMPO_NEW OUT	NUMBER,
   P_NO_VALIDAR VARCHAR2 DEFAULT '0');
   
   PROCEDURE SP_ESTADO_SOBRETIEMPO(
     P_ID_SOBRETIEMPO NUMBER, 
     P_ID_ESTADO_SOBRETIEMPO varchar2, 
     P_COMENTARIO  varchar2,
     P_ID_USER number, 
     P_ERROR OUT number,
     P_MSGERROR out varchar2
   ) ;
   
    PROCEDURE SP_PROCESAR_SOBRETIEMPO(
                  P_DESDE DATE, 
                  P_HASTA DATE,
                  P_ID_ENTIDAD NUMBER, 
                  P_ID_DEPTO VARCHAR2,
                  P_ID_AREA number, 
                  P_ID_ESTADO_SOBRETIEMPO VARCHAR2,
                  P_SEARCH VARCHAR2,
                  P_ID_AREAS VARCHAR2,
                  P_RESTRINGIDO VARCHAR2,
                  P_ID_TIPO_NIVEL_VISTA number,
                  P_ID_USER NUMBER,
                  P_ID_TRABAJADOR NUMBER DEFAULT 0
                  );
   PROCEDURE SP_PROCESAR_FALTA(
                  P_DESDE DATE, 
                  P_HASTA DATE,
                  P_ID_ENTIDAD NUMBER, 
                  P_ID_DEPTO VARCHAR2,
                  P_ID_AREA number, 
                  P_ID_TRABAJADOR number, 
                  P_ID_USER NUMBER
                  );
   
   PROCEDURE SP_REGISTRAR_MARCACION(
          P_ID_TRABAJADOR NUMBER, 
          P_ID_TIPO_MARCACION  NUMBER,
          P_FECHAHORA date, 
          P_FECHAHORA_MANUAL DATE,
          P_LAT VARCHAR2,
          P_LNG VARCHAR2,
          P_IIDTERMINAL NUMBER,
          P_FOTOCHECK VARCHAR2,
          P_ID_SOLIC_JUSTIF NUMBER,
          P_TIPO VARCHAR2,
          P_ID_DESCRIP_MARCACION VARCHAR2,
          P_ID_USER_REG number, 
          P_ERROR OUT number,
          P_MSGERROR out varchar2,
          P_IDASISTENCIA NUMBER:=NULL
        );
   PROCEDURE SP_ASISTENCIA_HISTORICO(
      P_ID_TRABAJADOR number,
      P_FECHA DATE, 
      P_ID_USER_REG NUMBER,
      P_ERROR OUT number,
      P_MSGERROR out varchar2
    );
   
   PROCEDURE SP_PROCESAR_MARCACION(
        P_DESDE DATE, 
        P_HASTA DATE,
        P_ID_ENTIDAD NUMBER, 
        P_ID_DEPTO VARCHAR2,
        P_ID_AREA number, 
        P_ID_TRABAJADOR number, 
        P_ID_USER NUMBER,
        P_ERROR OUT number,
        P_MSGERROR out varchar2
    ); 
   
    PROCEDURE SP_COPIAR_MARCACION_AUTO;
    
    PROCEDURE SP_COPIAR_MARCACION(
      P_DESDE DATE, 
      P_HASTA DATE
    ) ;  

    
    
    PROCEDURE SP_PROCESAR_NO_FISCALIZABLE(
          P_ID_TRABAJADOR NUMBER,
          P_FECHA DATE,
          P_ID_TIPO_HORARIO NUMBER,
          P_ID_SEDEAREA number,
          P_ID_MOTIVO_ASIST VARCHAR2, 
          P_ID_USER NUMBER
          );
    
    PROCEDURE SP_PROCESAR_FISCALIZABLE(
          P_ID_TRABAJADOR NUMBER,
          P_FECHA DATE,
          P_ID_TIPO_HORARIO NUMBER,
          P_ID_SEDEAREA number,
          P_ID_MOTIVO_ASIST VARCHAR2, 
          P_NUM_RANGO number,
          P_NUM_RANGO_REF number,
          P_ID_USER NUMBER
          );
    
    PROCEDURE SP_REGISTRAR_ASISTENCIA(P_ID_ENTIDAD NUMBER,
                                  P_ID_TRABAJADOR NUMBER,
                                  P_ID_SEDEAREA NUMBER,
                                  P_ID_TIPO_HORARIO NUMBER,
                                  P_ID_MOTIVO_ASIST VARCHAR2,
                                  P_FECHA DATE,
                                  P_HORA_ENTRADA date,
                                  P_HORA_SALIDA date,
                                  P_HORA_ENTRADA_REF date,
                                  P_HORA_SALIDA_REF date,
                                  P_TIPO VARCHAR2, --F:FICALIZABLE, N: NO FISCALIZABLE, 
                                  P_ID_USER_REG NUMBER
                                  );
    PROCEDURE SP_GENERAR_TARDANZA(
      P_ID_ASISTENCIA VARCHAR2,
      P_ID_USER_REG number
    ); 
       
    
      
      PROCEDURE SP_CONTROL_ASISTENCIA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2); 
      PROCEDURE SP_CONTROL_LABORAL(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) ;
      PROCEDURE SP_CONTROL_GENERAR_FALTA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
      PROCEDURE SP_CONTROL_GENERAR_TARDANZA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
      PROCEDURE SP_CONTROL_SOBRETIEMPO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
      
      PROCEDURE SP_COPIAR_FERIADO(
        P_ID_ANHO_DE NUMBER,
        P_ID_ANHO_A NUMBER,
        P_ERROR OUT number,
        P_MSGERROR out varchar2
      );
    
	--JUSTIFICACIONES
	PROCEDURE SP_REGISTRAR_JUSTIFICACION(
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_MOTIVO_JUSTIF NUMBER,
	 P_FECHA DATE,
	 P_DESCRIPCION VARCHAR2,
	 P_EVIDENCIA_ADJ VARCHAR2,
	 P_ID_ESTADO_JUSTIF VARCHAR2,
	 P_ID_USER NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2,
	 P_ID_SOLIC_JUSTIF OUT NUMBER);
	PROCEDURE SP_ACTUALIZAR_JUSTIFICACION(
	 P_ID_SOLIC_JUSTIF NUMBER,
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_MOTIVO_JUSTIF NUMBER,
	 P_FECHA DATE,
	 P_DESCRIPCION VARCHAR2,
	 P_EVIDENCIA_ADJ VARCHAR2,
	 P_ID_ESTADO_JUSTIF VARCHAR2,
	 P_ID_USER NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2);
	PROCEDURE SP_ESTADO_JUSTIFICACION(
	 P_ID_SOLIC_JUSTIF NUMBER,
	 P_ID_ESTADO_JUSTIF VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_COMENTARIO VARCHAR2,
	 P_ID_USER NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2);
	--ID MAPA POLIGONO POR ID TRABAJADOR
	 PROCEDURE SP_IDMAPAPOLIGONO_TRABAJADOR(
     P_ID_TRABAJADOR NUMBER,
     P_ID_MAPA_POLIGONO OUT NUMBER
   	);
	
	--SE USA PARA HABILITAR UN BOTON EN EL APLICATIVO MOBIL PARA LA MARCACION DE LA ASISTENCIA
	PROCEDURE SP_MOSTRAR_BOTON_MARCACION(
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_LAT VARCHAR2,
	 P_LNG VARCHAR2,
	 P_SHOW_BUTTON OUT VARCHAR2,
	 P_TEXT_BUTTON OUT VARCHAR2,
	 P_CODE_MODALITY OUT VARCHAR2,
	 P_FECHA_HORA OUT DATE,
	 P_ID_DESCRIP_MARCACION OUT VARCHAR2,
	 P_MINUTOS_TOLERANCIA OUT NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2,
	 P_OPTION OUT VARCHAR2);
	
	PROCEDURE SP_MARCAR_ASISTENCIA_MOVIL(
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_USER NUMBER,
	 P_LAT VARCHAR2,
	 P_LNG VARCHAR2,
	 P_UUID VARCHAR2,
	 P_ID_DESCRIP_MARCACION VARCHAR2,
	 P_CODIGO_MODALIDAD VARCHAR2,
	 P_OPTION VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2);
   
  PROCEDURE SP_CAMBIO_DATOS(
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_CAMBIO VARCHAR2,
   P_DESDE DATE,
   P_HASTA DATE,
	 P_COMENTARIO VARCHAR2,
	 P_ID_USER NUMBER,
   P_TIPO VARCHAR2,
   P_APELLIDONOMBRE OUT VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2);
   
  PROCEDURE SP_CAMBIO_DATOS_ELIMINAR(
	 P_ID NUMBER,
	 P_ID_USER NUMBER,
   P_TIPO VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2);
   
  PROCEDURE SP_VALIDAR_BOTON_MARCACION(
	 P_ID_TRABAJADOR NUMBER,
   P_LAT NUMBER,
   P_LNG NUMBER,
	 P_ID_MAPA_POLIGONO OUT NUMBER,
	 P_CODIGO_TIPO_MODALIDAD OUT VARCHAR2,
   P_FECHA OUT VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2
   );
   
   PROCEDURE SP_PROGRAMAR_ASIS_DOCENTE(
     P_FECHA DATE,
     P_ID_DEPTO VARCHAR2,
     P_ID_AREA NUMBER,
     P_ID_AREAS VARCHAR2,
     P_ID_TRABAJADOR NUMBER,
     P_RESTRINGIDO VARCHAR2,
     P_ID_TIPO_NIVEL_VISTA number,
     P_ID_USER NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   );
   PROCEDURE SP_PROCESAR_ASIS_DOCENTE(
     P_FECHA DATE,
     P_ID_DEPTO VARCHAR2,
     P_ID_AREA NUMBER,
     P_ID_AREAS VARCHAR2,
     P_ID_TRABAJADOR NUMBER,
     P_RESTRINGIDO VARCHAR2,
     P_ID_TIPO_NIVEL_VISTA number,
     P_TIPO VARCHAR2,
     P_ID_ANHO NUMBER, 
     P_ID_MES NUMBER,
     P_ID_USER NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   );
   
   PROCEDURE SP_REGISTRAR_ASIS_DOCENTE(
     P_ID_ASISTENCIA_CARGA NUMBER,
     P_FECHA DATE,
     P_TIPO VARCHAR2,
     P_ID_USER NUMBER,
     P_TIPO_MAR VARCHAR2,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   );
   
    PROCEDURE SP_REGISTRAR_ASIS_DOCENTE_NEW(
     P_ID_ASISTENCIA_CARGA NUMBER,
     P_FECHA DATE,
     P_TIPO VARCHAR2,--E: ENTRADA, S:SALIDA
     P_ID_USER NUMBER,
     P_TIPO_MAR VARCHAR2,
     P_ID_TIPO_MARCACION NUMBER,
     P_LAT VARCHAR2,
     P_LNG VARCHAR2,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   );
   
   PROCEDURE SP_JUSTIFICAR_ASIS_DOCENTE(
     P_ID_ASISTENCIA_CARGA NUMBER,
     P_TIPO VARCHAR2,
     P_MOTIVO VARCHAR2,
     P_ID_USER NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   );
   PROCEDURE SP_VALIDAR_COORDENADA_ASIST(
     P_ID_TRABAJADOR NUMBER,
     P_LAT NUMBER,
     P_LNG NUMBER,
     P_RESULTADO OUT NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   );
   
   PROCEDURE SP_AREAS_ASIGNAR(P_ID_MAPA_POLIGONO NUMBER, CURSOR OUT SYS_REFCURSOR );
   PROCEDURE SP_AREAS_ASIGNADOS(P_ID_MAPA_POLIGONO NUMBER, CURSOR OUT SYS_REFCURSOR );
   PROCEDURE SP_PROCESAR_COPIA_ASISTENCIA(
     P_USER NUMBER,
     P_RESULTADO OUT NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   );
   
  PROCEDURE SP_COPIAR_HORARIO(P_IDS_TIPO_HORARIO VARCHAR2,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,P_ID_USER NUMBER,
	P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
   
  PROCEDURE SP_COPIAR_HORARIO_BLOQUE(P_ID_HORARIO_BLOQUE NUMBER,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,P_ID_USER NUMBER,
	P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
  PROCEDURE SP_PROCESAR_BIOMETRICO_DOCENTE(P_DESDE DATE, P_HASTA DATE,P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_AREA number, P_ID_TRABAJADOR number, P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2);
     
END PKG_ASSISTANCE;


CREATE OR REPLACE PACKAGE BODY      PKG_ASSISTANCE AS
   PROCEDURE SP_HORARIO_PROGRAMADO(P_ID_TRABAJADOR number,P_FECHA DATE, CURSOR OUT SYS_REFCURSOR) IS 
          l_contar number;
          l_id_anho number;
          l_id_mes number;
          l_id_dia number;
          l_nro_dia number;


          L_ID_TIPO_HORARIO	NUMBER;
          L_ID_SEDEAREA NUMBER;
          
          l_id_entidad number;
          l_id_depto_padre VARCHAR2(10);
          l_tipo_hora varchar2(15);
          l_id_tiempo_trabajado number;
          l_id_tipo_control_personal  number;
          

          L_SAL_DIASIG number:=0;
         
          l_id_horario_bloque number;
          
          S_HORA_ENTRADA	VARCHAR2(10 BYTE);
          S_HORA_SALIDA	VARCHAR2(10 BYTE);
          S_HORA_ENTRADA_REF	VARCHAR2(10 BYTE);
          S_HORA_SALIDA_REF	VARCHAR2(10 BYTE);
          S_SAL_DIASIG	NUMBER(10,2);
          S_HORAS	VARCHAR2(10 BYTE);
          S_NUM_HORAS	NUMBER(10,2);
          S_ID_CONTROL_ASIST	NUMBER;
          
          l_tipo_tiempo_trabajao VARCHAR2(200 BYTE);
          l_tipo_control_personal VARCHAR2(200 BYTE);
          l_marcacion 	VARCHAR2(10 BYTE);
          L_CONTROL_ASIST VARCHAR2(200 BYTE);
          l_fecha date;
          l_max_hora_ext number:=0;

      begin
      
         select 
         to_number(to_char(P_FECHA,'YYYY')), 
         to_number(to_char(P_FECHA,'MM')),
         to_number(to_char(P_FECHA,'DD')),
         to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
         into l_id_anho,l_id_mes,l_id_dia,l_nro_dia from dual;
         
       
          select 
          A.ID_ENTIDAD,
          A.ID_TIPO_HORARIO,
          A.ID_TIPO_TIEMPO_TRABAJO,
          A.ID_TIPO_CONTROL_PERSONAL,
          A.ID_SEDEAREA,
          b.nombre,
          c.nombre,
          C.MARCACION
          into
          l_id_entidad,
          L_ID_TIPO_HORARIO,
          l_id_tiempo_trabajado,
          l_id_tipo_control_personal,
          L_ID_SEDEAREA,          
          l_tipo_tiempo_trabajao,
          l_tipo_control_personal,
          l_marcacion
          from enoc.vw_trabajador A ,MOISES.TIPO_TIEMPO_TRABAJO B,MOISES.TIPO_CONTROL_PERSONAL c
          where A.ID_TIPO_TIEMPO_TRABAJO=B.ID_TIPO_TIEMPO_TRABAJO
          and A.ID_TIPO_CONTROL_PERSONAL=C.ID_TIPO_CONTROL_PERSONAL
          AND A.id_trabajador=P_ID_TRABAJADOR;

          
          

          select id_depto_padre into l_id_depto_padre from eliseo.VW_SEDE_AREA where ID_SEDEAREA=L_ID_SEDEAREA;
          
          
          
          select count(*) into l_contar from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
          
          IF l_contar>0 then
            select coalesce(a.importe,0) into l_max_hora_ext from plla_parametros_valor  a, plla_parametros b
            where b.id_parametro=a.id_parametro
            and b.codigo='HORA_EXT_DIA'
            and a.id_entidad=l_id_entidad
            and a.id_anho=l_id_anho;
          end if;
            
          
          
          select b.CODIGO into l_tipo_hora from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
          where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
          and a.id_tipo_horario =  L_ID_TIPO_HORARIO;
        
          if l_tipo_hora='HM' then
 
              select count(*) into l_contar from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
              where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
              AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
              AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
              AND A.ID_ANHO=l_id_anho
              AND A.ID_MES=l_id_mes
              AND B.ID_DIA=l_id_dia;
              
              if l_contar = 0 then
                l_fecha:= P_FECHA - 1;
                select 
                 to_number(to_char(l_fecha,'YYYY')), 
                 to_number(to_char(l_fecha,'MM')),
                 to_number(to_char(l_fecha,'DD')),
                 to_number(TO_CHAR(l_fecha, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
                 into l_id_anho,l_id_mes,l_id_dia,l_nro_dia from dual;
                 
                  select count(*) into l_contar from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
                  where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                  AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                  AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                  AND A.ID_ANHO=l_id_anho
                  AND A.ID_MES=l_id_mes
                  AND B.ID_DIA=l_id_dia;
                  
                  if l_contar = 1 then
                    select b.id_horario_bloque into l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
                    where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                    AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                    AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                    AND A.ID_ANHO=l_id_anho
                    AND A.ID_MES=l_id_mes
                    AND B.ID_DIA=l_id_dia;
                    
                    select coalesce(SAL_DIASIG,0) into S_SAL_DIASIG  from enoc.plla_horario_bloque where id_horario_bloque=l_id_horario_bloque;
                    
                    if S_SAL_DIASIG=0 then
                      l_contar:=0;
                    end if;
                  end if;
                  
              end if;
              if l_contar = 1 then
                select b.id_horario_bloque into l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
                where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                AND A.ID_ANHO=l_id_anho
                AND A.ID_MES=l_id_mes
                AND B.ID_DIA=l_id_dia;
                
                select 
                  A.HORA_ENTRADA,
                  A.HORA_SALIDA,
                  A.HORA_ENTRADA_REF,
                  A.HORA_SALIDA_REF,
                  A.SAL_DIASIG,
                  A.HORAS,
                  A.NUM_HORAS,
                  A.ID_CONTROL_ASIST,
                  B.NOMBRE 
                  into 
                  S_HORA_ENTRADA,
                  S_HORA_SALIDA,
                  S_HORA_ENTRADA_REF,
                  S_HORA_SALIDA_REF,
                  S_SAL_DIASIG,
                  S_HORAS,
                  S_NUM_HORAS,
                  S_ID_CONTROL_ASIST,
                  L_CONTROL_ASIST
                  from enoc.plla_horario_bloque A, ENOC.PLLA_CONTROL_ASIST B
                  where A.ID_CONTROL_ASIST=B.ID_CONTROL_ASIST
                  AND A.id_horario_bloque= l_id_horario_bloque;
                
              end if;
          else
               
                  
            select COUNT(*) into l_contar from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;
            if l_contar=0 then
                l_fecha:= P_FECHA - 1;
                select 
                 to_number(to_char(l_fecha,'YYYY')), 
                 to_number(to_char(l_fecha,'MM')),
                 to_number(to_char(l_fecha,'DD')),
                 to_number(TO_CHAR(l_fecha, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
                 into l_id_anho,l_id_mes,l_id_dia,l_nro_dia from dual;
                 
                 select COUNT(*) into l_contar from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;
                  
                  if l_contar = 1 then
                                        
                    select coalesce(SAL_DIASIG,0) into S_SAL_DIASIG  from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;
                    
                    if S_SAL_DIASIG=0 then
                      l_contar:=0;
                    end if;
                  end if;
            end if;
            if l_contar=1 then
               select 
                A.HORA_ENTRADA,
                A.HORA_SALIDA,
                A.HORA_ENTRADA_REF,
                A.HORA_SALIDA_REF,
                A.SAL_DIASIG,
                A.HORAS,
                A.NUM_HORAS,
                A.ID_CONTROL_ASIST,
                B.NOMBRE
                into 
                S_HORA_ENTRADA,
                S_HORA_SALIDA,
                S_HORA_ENTRADA_REF,
                S_HORA_SALIDA_REF,
                S_SAL_DIASIG,
                S_HORAS,
                S_NUM_HORAS,
                S_ID_CONTROL_ASIST,
                L_CONTROL_ASIST
                from enoc.plla_horario_detalle A , ENOC.PLLA_CONTROL_ASIST B
                where A.ID_CONTROL_ASIST=B.ID_CONTROL_ASIST
                AND  A.id_tipo_horario=L_ID_TIPO_HORARIO 
                and A.id_dia=l_nro_dia;
            end if;
          END IF;
          
           OPEN cursor FOR  SELECT
                            S_HORA_ENTRADA AS HORA_ENTRADA,
                            S_HORA_SALIDA AS HORA_SALIDA,
                            S_HORA_ENTRADA_REF AS HORA_ENTRADA_REF,
                            S_HORA_SALIDA_REF AS HORA_SALIDA_REF,
                            S_SAL_DIASIG AS SAL_DIASIG,
                            S_HORAS AS HORAS,
                            S_NUM_HORAS AS NUM_HORAS,
                            l_tipo_hora AS TIPO_HORA,
                            L_ID_TIPO_HORARIO AS ID_TIPO_HORARIO,
                            l_id_entidad AS ID_ENTIDAD,
                            l_id_depto_padre AS ID_DEPTO_PADRE,
                            l_nro_dia AS NRO_DIA,
                            l_id_tipo_control_personal as ID_TIPO_CONTROL_PERSONAL,
                            l_id_tiempo_trabajado AS ID_TIPO_TIEMPO_TRABAJO,
                            L_ID_SEDEAREA AS ID_SEDEAREA,          
                            l_tipo_tiempo_trabajao AS TIPO_TIEMPO_TRABAJO,
                            l_tipo_control_personal AS TIPO_CONTROL_PERSONAL,
                            l_marcacion AS MARCACION,
                            L_CONTROL_ASIST AS CONTROL_ASIST,
                            case when S_SAL_DIASIG=1 then 'Si' else 'No' end as SALIDA_SIG,
                            case when S_HORA_ENTRADA is null then 'N' else 'S' end as TIENE_HORARIO,
                            l_max_hora_ext as MAX_HORA_EXT
                            FROM DUAL;

   END SP_HORARIO_PROGRAMADO;
      
   PROCEDURE SP_REGISTRAR_SOBRETIEMPO(
   P_ID_SOBRETIEMPO NUMBER, 
   P_ID_ENTIDAD NUMBER,
   P_ID_DEPTO varchar2,
   P_ID_TRABAJADOR NUMBER, 
   P_ID_TIPO_SOBRETIEMPO NUMBER,
   P_FECHA DATE,
   P_MOTIVO VARCHAR2,
   P_HORA_DESDE VARCHAR2, 
   P_HORA_HASTA VARCHAR2, 
   P_COMPENSADO varchar2, 
   P_FECHA_COMPENSAR date,
   P_COMENTARIO_COMPENSAR varchar2, 
   P_HORAS varchar2,
   P_PERIODO varchar2,
   P_ID_USER_REG NUMBER,
   P_ERROR OUT number,
   P_MSGERROR out varchar2,
   P_ID_SOBRETIEMPO_NEW OUT	NUMBER,
   P_NO_VALIDAR VARCHAR2 DEFAULT '0') IS
   
          l_error number:=0;
          l_msgerror varchar2(200):='';
          l_id_sobretiempo number;
          l_contar number;
          l_dias number:=0;
          l_horas number(10,2):=0;
          l_desde date;
          l_hasta date;
          l_id_tipo_horario number;
          l_id_tipo_control_personal  number;
          l_dia number;
          l_hora_salida varchar(10);
          l_hora_entrada varchar(10);
          l_hora_salida_base date;
          l_hora_entrada_base date;
          l_inicio varchar(10);
          l_tipo  varchar(5);
          l_tipo_h  varchar(5);
          l_id_horario_bloque number;
          l_id_estado number;
          l_max_hora_ext number:=0;
        BEGIN
          select id_tipo_horario,id_tipo_control_personal into l_id_tipo_horario,l_id_tipo_control_personal 
            from moises.trabajador where ID_TRABAJADOR=P_ID_TRABAJADOR;
            
         if P_PERIODO='H' then
            select to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||P_HORA_DESDE,'YYYY-MM-DD HH24:MI:SS'),to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||P_HORA_HASTA,'YYYY-MM-DD HH24:MI:SS')
            into l_desde,l_hasta
            from dual;
           
            if l_hasta < l_desde then
              l_error:=1;
              l_msgerror:='Hora hasta es menor que hora desde';
              GOTO salida_final;
            end if;
            
            select round((l_hasta - l_desde)*24,2) into l_horas from dual;
            if l_horas = 0 then
              l_error:=1;
              l_msgerror:='Cantidad de horas es igual a 0(cero) ';
              GOTO salida_final;
            end if;
            
           	SELECT count(*) into l_contar FROM ENOC.PLLA_SOBRETIEMPO A 
			WHERE A.PERIODO = 'H' 
			AND (l_desde BETWEEN TO_DATE(TO_CHAR(A.FECHA,'YYYY-MM-DD')||' '||A.HORA_DESDE,'YYYY-MM-DD HH24:MI') AND TO_DATE(TO_CHAR(A.FECHA,'YYYY-MM-DD')||' '||A.HORA_HASTA,'YYYY-MM-DD HH24:MI'))
			AND (l_hasta BETWEEN TO_DATE(TO_CHAR(A.FECHA,'YYYY-MM-DD')||' '||A.HORA_DESDE,'YYYY-MM-DD HH24:MI') AND TO_DATE(TO_CHAR(A.FECHA,'YYYY-MM-DD')||' '||A.HORA_HASTA,'YYYY-MM-DD HH24:MI'))
			AND A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
			AND A.ID_ESTADO_SOBRETIEMPO NOT IN ('06','00');
		
			IF l_contar>0 then
                l_error:=1;
                l_msgerror:='Las horas se cruzan con otros sobretiempos registrados.';
                GOTO salida_final;
             end if;
            
            if l_tipo in('HE','BH','FE') then
              select count(*) into l_contar from plla_parametros_valor  a, plla_parametros b
              where b.id_parametro=a.id_parametro
              and a.id_entidad=P_ID_ENTIDAD
              and a.id_anho=TO_number(TO_CHAR(P_FECHA, 'YYYY'));
              
              IF l_contar=0 then
                l_error:=1;
                l_msgerror:='Falta configurar parametro máx horas extras por día';
                GOTO salida_final;
              end if;
              select coalesce(a.importe,0) into l_max_hora_ext from plla_parametros_valor  a, plla_parametros b
              where b.id_parametro=a.id_parametro
              and b.codigo='HORA_EXT_DIA'
              and a.id_entidad=P_ID_ENTIDAD
              and a.id_anho=TO_number(TO_CHAR(P_FECHA, 'YYYY'));
              
              if l_horas>l_max_hora_ext then
                l_error:=1;
                l_msgerror:='Toal horas extras('||to_char(l_horas)||') es mayor a máximo horas por día('||to_char(l_max_hora_ext)||')';
                GOTO salida_final;
              end if;
           end if; 
            
        end if;
          
          select codigo into l_tipo from ENOC.PLLA_TIPO_SOBRETIEMPO where ID_TIPO_SOBRETIEMPO= P_ID_TIPO_SOBRETIEMPO;
          
          --descanso jornal
          
          if l_tipo = 'DJ' then 
            
            select b.CODIGO INTO l_tipo_h from ENOC.PLLA_TIPO_HORARIO A, ENOC.PLLA_TIPO_CONFIG_HORARIO B WHERE A.ID_TIPO_CONFIG_HORARIO=B.ID_TIPO_CONFIG_HORARIO AND  A.ID_TIPO_HORARIO=l_id_tipo_horario;
            l_dia := to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'));
            if l_tipo_h = 'HM' then
            
              select count(*) into l_contar  FROM ENOC.PLLA_HORARIO_MENSUAL  A,ENOC.PLLA_HORARIO_MENSUAL_DET B 
              WHERE A.ID_HORARIO_MENSUAL=B.ID_HORARIO_MENSUAL 
              AND A.ID_TRABAJADOR=P_ID_TRABAJADOR 
              AND A.ID_ENTIDAD = P_ID_ENTIDAD
              AND A.ID_TIPO_HORARIO=l_id_tipo_horario
              AND A.ID_ANHO=TO_NUMBER(to_char(P_FECHA,'YYYY'))
              AND A.ID_MES=TO_NUMBER(to_char(P_FECHA,'MM'))
              AND B.ID_DIA=l_dia;
              
              if l_contar>0 then 
        
                select ID_HORARIO_BLOQUE into l_id_horario_bloque  FROM ENOC.PLLA_HORARIO_MENSUAL  A,ENOC.PLLA_HORARIO_MENSUAL_DET B 
                WHERE A.ID_HORARIO_MENSUAL=B.ID_HORARIO_MENSUAL 
                AND A.ID_TRABAJADOR=P_ID_TRABAJADOR 
                AND A.ID_ENTIDAD = P_ID_ENTIDAD
                AND A.ID_TIPO_HORARIO=l_id_tipo_horario
                AND A.ID_ANHO=TO_NUMBER(to_char(P_FECHA,'YYYY'))
                AND A.ID_MES=TO_NUMBER(to_char(P_FECHA,'MM'))
                AND B.ID_DIA=l_dia;
              
               
                
                select count(1) into l_contar from PLLA_HORARIO_BLOQUE 
                where  id_horario_bloque=l_id_horario_bloque 
                and ( (l_desde between TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||hora_entrada, 'YYYY-MM-DD HH24:MI:SS') and case when sal_diasig = 0 then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD') ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') else TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')+ 1 ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') end)
                or
                (l_hasta between TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||hora_entrada, 'YYYY-MM-DD HH24:MI:SS') and case when sal_diasig = 0 then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD') ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') else TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')+ 1 ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') end)
                );
                
                
               if l_contar>0 then
                  l_error:=1;
                  l_msgerror:=to_char(P_ID_TRABAJADOR) || ':  tiene horario asignado';
                  GOTO salida_final;
                end if;
             end if;
 
            else
              select count(1) into l_contar from enoc.PLLA_HORARIO_DETALLE where  ID_TIPO_HORARIO = l_id_tipo_horario and ID_DIA=l_dia;
           
             if l_contar>0 then 
                select count(1) into l_contar from PLLA_HORARIO_DETALLE 
                where  ID_TIPO_HORARIO = l_id_tipo_horario 
                and ID_DIA=l_dia  
                and ( (l_desde between TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||hora_entrada, 'YYYY-MM-DD HH24:MI:SS') and case when sal_diasig = 0 then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD') ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') else TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')+ 1 ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') end)
                or
                (l_hasta between TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||hora_entrada, 'YYYY-MM-DD HH24:MI:SS') and case when sal_diasig = 0 then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD') ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') else TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')+ 1 ||' '||hora_salida, 'YYYY-MM-DD HH24:MI:SS') end)
                );
                
                if l_contar>0 then
                  l_error:=1;
                  l_msgerror:=to_char(P_ID_TRABAJADOR) || ':  tiene horario asignado';
                  GOTO salida_final;
                end if;
             end if;

            end if;
            
            select count(*) into l_contar from ENOC.vw_rol_vacacional where id_trabajador=P_ID_TRABAJADOR and (P_FECHA between fecha_ini and fecha_fin) and condicion='P';
            if l_contar > 0 then
              l_error:=1;
              l_msgerror:='El trabajdor esta de vacaciones en la fecha '||to_char(P_FECHA,'DD/MM/YYYY');
              GOTO salida_final;
            end if;
            
          end if;         
          
          --vacacion
          
          select count(*) into l_contar from ENOC.vw_rol_vacacional where id_trabajador=P_ID_TRABAJADOR and (P_FECHA between fecha_ini and fecha_fin) and condicion='P';
          if l_contar > 0 then
            l_error:=1;
            l_msgerror:='El trabajdor esta de vacaciones en la fecha '||to_char(P_FECHA,'DD/MM/YYYY');
            GOTO salida_final;
          end if;
          
           --permisos
          select count(*) into l_contar from(
            select ID_LICENCIA_PERMISO from ENOC.vw_LICENCIA_PERMISO where id_trabajador=P_ID_TRABAJADOR and (P_FECHA between fecha_desde and fecha_hasta) and engrupo='N' and id_estado_lica_per not in('00')
            union
            select a.ID_LICENCIA_PERMISO from ENOC.vw_LICENCIA_PERMISO a, enoc.plla_LICENCIA_PERMISO_DET b where a.ID_LICENCIA_PERMISO=b.ID_LICENCIA_PERMISO and b.id_trabajador=P_ID_TRABAJADOR 
            and (P_FECHA between a.fecha_desde and a.fecha_hasta) and a.engrupo='S' and a.id_estado_lica_per not in('00')
          );
          
          if l_contar > 0 then
            l_error:=1;
            l_msgerror:='El trabajdor esta de permiso/licencia en la fecha '||to_char(P_FECHA,'DD/MM/YYYY');
            GOTO salida_final;
          end if;
       
         select count(*) into l_contar from enoc.plla_sobretiempo where ID_TRABAJADOR= P_ID_TRABAJADOR and FECHA=TO_DATE(TO_CHAR(P_FECHA, 'MM/DD/YYYY'), 'MM/DD/YYYY') and ID_ESTADO_SOBRETIEMPO not in('00','04') and ID_SOBRETIEMPO <>P_ID_SOBRETIEMPO;
         if l_contar > 0 AND (P_NO_VALIDAR <> '1' OR P_PERIODO = 'D') then
            l_error:=1;
            l_msgerror:='Ya esta registrado para la fecha '||to_char(P_FECHA,'DD/MM/YYYY');
            GOTO salida_final;
          end if;
          
         --si feriado
         select count(*) into l_contar from enoc.plla_feriados a, enoc.PLLA_TIPO_FERIADO b where a.ID_TIPO_FERIADO = b.ID_TIPO_FERIADO and   a.fecha=TO_DATE(TO_CHAR(P_FECHA, 'MM/DD/YYYY'), 'MM/DD/YYYY') and b.codigo='FN';
         
         if l_tipo='FE' then
           if l_contar = 0 then
              l_error:=1;
              l_msgerror:=to_char(P_FECHA,'DD/MM/YYYY')||' no es feriado';
              GOTO salida_final;
            end if;
         else
              if l_contar > 0 then
                l_error:=1;
                l_msgerror:=to_char(P_FECHA,'DD/MM/YYYY')||' es feriado';
                GOTO salida_final;
              end if;
         end if;
         
         l_inicio:= P_HORA_DESDE;
         
         if l_tipo in('HE','BH') then
      
            if l_id_tipo_control_personal<>3 then 
              l_error:=1;
              l_msgerror:=to_char(P_ID_TRABAJADOR) || ': no es personal fiscalizable';
              GOTO salida_final;
           end if;
           if l_id_tipo_horario is null then 
              l_error:=1;
              l_msgerror:=to_char(P_ID_TRABAJADOR) || ': no tiene asignado tipo de horario';
              GOTO salida_final;
           else
            select b.CODIGO INTO l_tipo_h from ENOC.PLLA_TIPO_HORARIO A, ENOC.PLLA_TIPO_CONFIG_HORARIO B WHERE A.ID_TIPO_CONFIG_HORARIO=B.ID_TIPO_CONFIG_HORARIO AND  A.ID_TIPO_HORARIO=l_id_tipo_horario;
            l_dia := to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'));
            if l_tipo_h = 'HM' then
            
              select count(*) into l_contar  FROM ENOC.PLLA_HORARIO_MENSUAL  A,ENOC.PLLA_HORARIO_MENSUAL_DET B 
              WHERE A.ID_HORARIO_MENSUAL=B.ID_HORARIO_MENSUAL 
              AND A.ID_TRABAJADOR=P_ID_TRABAJADOR 
              AND A.ID_ENTIDAD = P_ID_ENTIDAD
              AND A.ID_TIPO_HORARIO=l_id_tipo_horario
              AND A.ID_ANHO=TO_NUMBER(to_char(P_FECHA,'YYYY'))
              AND A.ID_MES=TO_NUMBER(to_char(P_FECHA,'MM'))
              AND B.ID_DIA=l_dia;
              
              if l_contar=0 then 
                l_error:=1;
                l_msgerror:=to_char(P_ID_TRABAJADOR) || ': no tiene asignado horario base para ese día';
                GOTO salida_final;
             end if;
              
              select ID_HORARIO_BLOQUE into l_id_horario_bloque  FROM ENOC.PLLA_HORARIO_MENSUAL  A,ENOC.PLLA_HORARIO_MENSUAL_DET B 
              WHERE A.ID_HORARIO_MENSUAL=B.ID_HORARIO_MENSUAL 
              AND A.ID_TRABAJADOR=P_ID_TRABAJADOR 
              AND A.ID_ENTIDAD = P_ID_ENTIDAD
              AND A.ID_TIPO_HORARIO=l_id_tipo_horario
              AND A.ID_ANHO=TO_NUMBER(to_char(P_FECHA,'YYYY'))
              AND A.ID_MES=TO_NUMBER(to_char(P_FECHA,'MM'))
              AND B.ID_DIA=l_dia;
              
              select  HORA_ENTRADA, HORA_SALIDA into l_hora_entrada, l_hora_salida from PLLA_HORARIO_BLOQUE where  id_horario_bloque=l_id_horario_bloque;
              
            else
              select count(*) into l_contar from enoc.PLLA_HORARIO_DETALLE where  ID_TIPO_HORARIO = l_id_tipo_horario and ID_DIA=l_dia;
           
             if l_contar=0 then 
                l_error:=1;
                l_msgerror:=to_char(P_ID_TRABAJADOR) || ': no tiene asignado horario base para ese día';
                GOTO salida_final;
             end if;
             select HORA_ENTRADA, HORA_SALIDA into l_hora_entrada,l_hora_salida from PLLA_HORARIO_DETALLE where  ID_TIPO_HORARIO = l_id_tipo_horario and ID_DIA=l_dia;
            end if;
           end if;

           l_hora_salida_base:=TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida, 'YYYY-MM-DD HH24:MI:SS');
           l_hora_entrada_base:=TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada, 'YYYY-MM-DD HH24:MI:SS');

           IF l_desde > l_hora_entrada_base AND l_desde < l_hora_salida_base THEN
			  l_error:=1;
              l_msgerror:=to_char(P_ID_TRABAJADOR) || ': Hora desde esta dentro de tu horario base';
              GOTO salida_final;
           end if;
          
           IF l_hasta > l_hora_entrada_base AND l_hasta < l_hora_salida_base THEN
			  l_error:=1;
              l_msgerror:=to_char(P_ID_TRABAJADOR) || ': Hora hasta esta dentro de tu horario base';
              GOTO salida_final;
           end if;
               	
            /*if l_hasta<l_hora_salida_base then
              l_error:=1;
              l_msgerror:=to_char(P_ID_TRABAJADOR) || ': Hora hasta es menor a hora salida del horario base';
              GOTO salida_final;
           end if;*/
           
            /*IF P_ID_ENTIDAD = 7124 THEN 
            l_inicio := l_hora_salida;
            ELSE */
         l_inicio:= P_HORA_DESDE;
         end if;
         
         if P_ID_SOBRETIEMPO=0 then
        
           select coalesce(max(ID_SOBRETIEMPO),0)+1 into l_id_sobretiempo from enoc.plla_sobretiempo;
           
           insert into enoc.plla_sobretiempo(
              ID_SOBRETIEMPO,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_TRABAJADOR,
              ID_TIPO_SOBRETIEMPO,
              FECHA,
              MOTIVO,
              HORA_DESDE,
              HORA_HASTA,
              NUM_HORAS,
              COMPENSADO,
              ID_ESTADO_SOBRETIEMPO,
              FECHA_COMPENSAR,
              COMENTARIO_COMPENSAR,
              HORAS,
              PERIODO,
              ID_USER_REG,
              FECHA_REG
           )values(
              l_id_sobretiempo,
              P_ID_ENTIDAD,
              P_ID_DEPTO,
              P_ID_TRABAJADOR,
              P_ID_TIPO_SOBRETIEMPO,
              P_FECHA,
              P_MOTIVO,
              l_inicio,
              P_HORA_HASTA,
              l_horas,
              P_COMPENSADO,
              '01',
              P_FECHA_COMPENSAR,
              P_COMENTARIO_COMPENSAR,
              P_HORAS,
              P_PERIODO,
              P_ID_USER_REG,
              sysdate
           );
           
          select coalesce(max(ID_SOBRETIEMPO_ESTADO),0)+1 into l_id_estado from enoc.PLLA_SOBRETIEMPO_ESTADO;
          
          insert into enoc.PLLA_SOBRETIEMPO_ESTADO(
            ID_SOBRETIEMPO_ESTADO,
            ID_SOBRETIEMPO,
            ID_ESTADO_SOBRETIEMPO,
            COMENTARIO,
            ID_USER_REG,
            FECHA_REG
          )values(
            l_id_estado,
            l_id_sobretiempo,
            '01',
            null,
            P_ID_USER_REG,
            sysdate
          );
           
         else
         
          update enoc.plla_sobretiempo set
              ID_TIPO_SOBRETIEMPO = P_ID_TIPO_SOBRETIEMPO,
              FECHA=P_FECHA,
              MOTIVO=P_MOTIVO,
              HORA_DESDE=l_inicio,
              HORA_HASTA=P_HORA_HASTA,
              NUM_HORAS=l_horas,
              COMPENSADO=P_COMPENSADO,
              FECHA_COMPENSAR=P_FECHA_COMPENSAR,
              COMENTARIO_COMPENSAR=P_COMENTARIO_COMPENSAR,
              HORAS=P_HORAS,
              PERIODO=P_PERIODO,
              ID_USER_MOD=P_ID_USER_REG,
              FECHA_MOD= sysdate
          where ID_SOBRETIEMPO=P_ID_SOBRETIEMPO;
         
          l_id_sobretiempo:=P_ID_SOBRETIEMPO;
         end if;
         
         <<salida_final>>
       
         P_ID_SOBRETIEMPO_NEW :=l_id_sobretiempo;
         
         P_ERROR:=l_error;
         P_MSGERROR:= l_msgerror;
          
          
                                    
      END SP_REGISTRAR_SOBRETIEMPO;

      PROCEDURE SP_ESTADO_SOBRETIEMPO(P_ID_SOBRETIEMPO NUMBER, P_ID_ESTADO_SOBRETIEMPO varchar2, P_COMENTARIO  varchar2,P_ID_USER number, P_ERROR OUT number,P_MSGERROR out varchar2) is
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_contar number;
        l_id number;
        l_id_trabajador number;
        l_id_situacion_especial number;
      begin
      
       select coalesce(max(ID_SOBRETIEMPO_ESTADO),0)+1 into l_id from enoc.PLLA_SOBRETIEMPO_ESTADO;
       
       select id_trabajador into l_id_trabajador from ENOC.PLLA_SOBRETIEMPO where ID_SOBRETIEMPO=P_ID_SOBRETIEMPO;
      
       insert into ENOC.PLLA_SOBRETIEMPO_ESTADO(
        ID_SOBRETIEMPO_ESTADO,
        ID_SOBRETIEMPO,
        ID_ESTADO_SOBRETIEMPO,
        COMENTARIO,
        ID_USER_REG,
        FECHA_REG
        )values(
          l_id,
          P_ID_SOBRETIEMPO,
          P_ID_ESTADO_SOBRETIEMPO,
          P_COMENTARIO,
          P_ID_USER,
          sysdate
        );
        
        update ENOC.PLLA_SOBRETIEMPO SET
        ID_ESTADO_SOBRETIEMPO=P_ID_ESTADO_SOBRETIEMPO,
        ID_USER_MOD = P_ID_USER,
        FECHA_MOD =SYSDATE
        WHERE ID_SOBRETIEMPO=P_ID_SOBRETIEMPO;
        
        
        IF P_ID_ESTADO_SOBRETIEMPO = '05' THEN
        
         select count(*) into l_contar from MOISES.TRABAJADOR_SIT_ESP WHERE ID_TRABAJADOR = id_trabajador and vigencia=1;
         
         if l_contar=1 then
          select ID_SITUACION_ESPECIAL into l_id_situacion_especial from MOISES.TRABAJADOR_SIT_ESP WHERE ID_TRABAJADOR = id_trabajador and vigencia=1;
         end if; 
          MERGE INTO ENOC.PLLA_SOBRETIEMPO C 
                USING (
                  SELECT 
                  A.ID_SOBRETIEMPO,
                  B.ID_TIPO_CONTROL_PERSONAL,
                  B.ID_TIPO_HORARIO,
                  B.ID_CONDICION_LABORAL,
                  B.ID_SEDEAREA,
                  B.ID_PERFIL_PUESTO
                  FROM ENOC.PLLA_SOBRETIEMPO A,MOISES.TRABAJADOR B
                  WHERE A.ID_TRABAJADOR=B.ID_TRABAJADOR
                  AND A.ID_SOBRETIEMPO=P_ID_SOBRETIEMPO
          )Y
           ON (C.ID_SOBRETIEMPO=Y.ID_SOBRETIEMPO )
          WHEN  MATCHED THEN UPDATE SET 
          C.ID_TIPO_CONTROL_PERSONAL=Y.ID_TIPO_CONTROL_PERSONAL,
          C.ID_TIPO_HORARIO=Y.ID_TIPO_HORARIO,
          C.ID_CONDICION_LABORAL=Y.ID_CONDICION_LABORAL,
          C.ID_SEDEAREA=Y.ID_SEDEAREA,
          C.ID_PERFIL_PUESTO=Y.ID_PERFIL_PUESTO,
          C.ID_SITUACION_ESPECIAL=l_id_situacion_especial,
          C.ID_USER_MOD = P_ID_USER,
          C.FECHA_MOD =SYSDATE;

        END IF;
      
   
         
         P_ERROR:=l_error;
         P_MSGERROR:= l_msgerror;
         
      end SP_ESTADO_SOBRETIEMPO;
      
      
     PROCEDURE SP_PROCESAR_SOBRETIEMPO(
                  P_DESDE DATE, 
                  P_HASTA DATE,
                  P_ID_ENTIDAD NUMBER, 
                  P_ID_DEPTO VARCHAR2,
                  P_ID_AREA number, 
                  P_ID_ESTADO_SOBRETIEMPO VARCHAR2,
                  P_SEARCH VARCHAR2,
                  P_ID_AREAS VARCHAR2,
                  P_RESTRINGIDO VARCHAR2,
                  P_ID_TIPO_NIVEL_VISTA number,
                  P_ID_USER NUMBER,
                  P_ID_TRABAJADOR NUMBER DEFAULT 0
                  ) IS
                  
       CURSOR person IS
        select
          S.ID_SOBRETIEMPO,
          t.id_trabajador,
          t.id_persona,
          S.FECHA,
          S.ID_TIPO_HORARIO,
          S.ID_TIPO_SOBRETIEMPO,
          TS.CODIGO,
          S.HORA_DESDE,
          S.HORA_HASTA,
          s.NUM_HORAS,
          to_date(to_char(S.FECHA,'YYYY-MM-DD')||' '||S.HORA_DESDE,'YYYY-MM-DD HH24:MI:SS') AS DESDE,
          to_date(to_char(S.FECHA,'YYYY-MM-DD')||' '||S.HORA_HASTA,'YYYY-MM-DD HH24:MI:SS') AS HASTA
          from ENOC.PLLA_SOBRETIEMPO S, moises.trabajador t, eliseo.vw_sede_area sa,ENOC.PLLA_TIPO_SOBRETIEMPO TS
          where S.ID_TRABAJADOR=T.ID_TRABAJADOR
          AND t.id_sedearea=sa.id_sedearea
          AND S.ID_TIPO_SOBRETIEMPO=TS.ID_TIPO_SOBRETIEMPO
          and s.id_sobretiempo in(select ID_SOBRETIEMPO from ENOC.TT_PROC_SOBRETIEMPO)
          order  by t.id_trabajador;
          
      l_contar number;
      l_sal_diasig number;
      L_HORA_SALIDA_REAL varchar2(10);
      L_HORA_SALIDA_REF_REAL varchar2(10);
      F_HORA_SALIDA_REAL date;
      F_HORA_SALIDA_REF_REAL varchar2(10);
      L_HORA_SALIDA_REAL_S varchar2(10);
      L_HORA_SALIDA_REAL_A varchar2(10);
      L_HORA_SALIDA_BASE_S varchar2(10);
      L_HORA_SALIDA_BASE_A varchar2(10);
      L_HORA_SALIDA_BASE varchar2(10);
      F_HORA_SALIDA_BASE DATE;
      L_HORA_HASTA_REAL varchar2(10);
      l_minutos NUMBER(10,2):=0;
      l_desde DATE;
      l_hasta DATE;
      L_HORA_ENT_BASE varchar2(10);
      L_HORA_ENT_REAL varchar2(10);
      
      l_query varchar2(4000);
   begin
   
      DELETE FROM ENOC.TT_PROC_SOBRETIEMPO;
      
      
      l_query:='INSERT INTO ENOC.TT_PROC_SOBRETIEMPO(ID_SOBRETIEMPO) ';
      l_query:=l_query||'SELECT ';
      l_query:=l_query||'S.ID_SOBRETIEMPO ';
      l_query:=l_query||'from ENOC.PLLA_SOBRETIEMPO S, moises.trabajador t, eliseo.vw_sede_area sa ';
      l_query:=l_query||'where S.ID_TRABAJADOR=T.ID_TRABAJADOR ';
      l_query:=l_query||'AND t.id_sedearea=sa.id_sedearea ';
      l_query:=l_query||'and S.id_entidad = :p_entidad ';
      l_query:=l_query||'and S.id_depto = :p_depto ';
      IF P_SEARCH is not null THEN
        l_query:=l_query||'and (upper(convert(t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.nombre||'' ''||t.paterno||'' ''||t.materno||t.num_documento, ''us7ascii'')) like ''%''||replace(replace(upper(convert('''||P_SEARCH||''' , ''us7ascii'')),'','','' ''),'' '',''%'')||''%'') ';
      END IF;
      IF P_ID_TRABAJADOR <> 0 AND P_ID_TRABAJADOR IS NOT NULL THEN
        l_query:=l_query||'and S.ID_TRABAJADOR = '||P_ID_TRABAJADOR||' ';
      END IF;
      IF P_ID_AREA>0 THEN
        l_query:=l_query||'and sa.id_area ='||P_ID_AREA||' ';
      END IF;
      IF P_ID_ESTADO_SOBRETIEMPO IS NOT NULL THEN
        l_query:=l_query||'and S.id_estado_sobretiempo ='||P_ID_ESTADO_SOBRETIEMPO||' ';
      END IF;
      l_query:=l_query||'and (S.fecha between :fdesde and :fhasta) ';
      l_query:=l_query||'and S.ID_ESTADO_SOBRETIEMPO not in(''06'',''00'') ';
      
      if (P_RESTRINGIDO = 'S') then
            if P_ID_TIPO_NIVEL_VISTA = 4 THEN
               l_query:=l_query||'and sa.id_area in( '||P_ID_AREAS||') ';
            END IF;
            if P_ID_TIPO_NIVEL_VISTA = 5 THEN
                l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
            end if;
      end if;
      
      if P_RESTRINGIDO = 'U' then
            l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
      end if;
      
      --dbms_output.put_line(l_query);
      EXECUTE IMMEDIATE l_query USING P_ID_ENTIDAD,P_ID_DEPTO,P_DESDE,P_HASTA;
      
   
    MERGE INTO enoc.PLLA_SOBRETIEMPO x 
    USING(
    select
      s.ID_SOBRETIEMPO
      from ENOC.PLLA_SOBRETIEMPO S, moises.trabajador t, eliseo.vw_sede_area sa
      where S.ID_TRABAJADOR=T.ID_TRABAJADOR
      AND t.id_sedearea=sa.id_sedearea
      and s.id_sobretiempo in(select ID_SOBRETIEMPO from ENOC.TT_PROC_SOBRETIEMPO)
    )T ON(T.ID_SOBRETIEMPO=x.ID_SOBRETIEMPO)
    WHEN  MATCHED THEN UPDATE SET  
      x.HORA_DESDE_REAL=null, 
      x.HORA_HASTA_REAL= null, 
      x.HORA_BASE_SAL=null,
      x.HORA_BASE_ENT=null,
      x.HORA_SAL_REAL =null,
      x.NUM_HORAS_REAL= 0,
      x.ID_USER_MOD=P_ID_USER,
      x.FECHA_MOD=sysdate;
    
 
    FOR cur in person LOOP
    BEGIN
      if cur.codigo in('HE','BH') then
      
        select count(*) into l_contar from ENOC.plla_asistencia 
        where id_trabajador=cur.id_trabajador 
        and fecha =cur.fecha;
               
        
        if l_contar=1 then
          select  HORA_SALIDA_REAL,HORA_BASE_SAL,HORA_BASE_ENT,HORA_ENTRADA_REAL 
          into  L_HORA_SALIDA_REAL_A ,L_HORA_SALIDA_BASE_A,L_HORA_ENT_BASE,L_HORA_ENT_REAL
          from ENOC.plla_asistencia 
          where id_trabajador=cur.id_trabajador 
          and fecha =cur.fecha;
          
          L_HORA_SALIDA_REAL:=L_HORA_SALIDA_REAL_A;
          L_HORA_SALIDA_BASE:=L_HORA_SALIDA_BASE_A;
        ELSE
          select count(*) into l_contar from ENOC.plla_asistencia 
          where id_trabajador=cur.id_trabajador 
          and fecha =cur.fecha - 1;
                   
          IF l_contar=1 THEN
            select coalesce(SAL_DIASIG,0), HORA_SALIDA_REAL ,HORA_BASE_SAL,HORA_BASE_ENT,HORA_ENTRADA_REAL
            into l_sal_diasig,L_HORA_SALIDA_REAL_S,L_HORA_SALIDA_BASE_S,L_HORA_ENT_BASE,L_HORA_ENT_REAL
            from ENOC.plla_asistencia 
            where id_trabajador=cur.id_trabajador 
            and fecha =cur.fecha - 1;
            
            IF l_sal_diasig=1 THEN
              L_HORA_SALIDA_REAL:=L_HORA_SALIDA_REAL_S;
              L_HORA_SALIDA_BASE:=L_HORA_SALIDA_BASE_S;
            ELSE
              L_HORA_SALIDA_REAL:=L_HORA_SALIDA_REAL_A;
              L_HORA_SALIDA_BASE:=L_HORA_SALIDA_BASE_A;
            END IF;
          END IF;
          
        END IF;
        
        IF L_HORA_SALIDA_BASE IS NOT NULL THEN
          F_HORA_SALIDA_BASE:= to_date(to_char(cur.fecha,'YYYY-MM-DD')||' '||L_HORA_SALIDA_BASE,'YYYY-MM-DD HH24:MI:SS');
        END IF;
        
        IF L_HORA_SALIDA_REAL IS NOT NULL THEN
          F_HORA_SALIDA_REAL:=to_date(to_char(cur.fecha,'YYYY-MM-DD')||' '||L_HORA_SALIDA_REAL,'YYYY-MM-DD HH24:MI:SS');
        END IF;
        
       
        
        IF F_HORA_SALIDA_REAL IS NOT NULL AND F_HORA_SALIDA_BASE IS NOT NULL THEN
           --dbms_output.put_line(to_char(F_HORA_SALIDA_REAL,'YYYY-MM-DD HH24:MI:SS')||'*'||to_char(F_HORA_SALIDA_BASE,'YYYY-MM-DD HH24:MI:SS'));
          IF F_HORA_SALIDA_REAL>F_HORA_SALIDA_BASE then
            l_desde:=cur.desde;
            if F_HORA_SALIDA_REAL>cur.hasta then
              l_hasta:=cur.hasta;
            else
              l_hasta:=F_HORA_SALIDA_REAL;
            end if;
 
            select round((l_hasta -  l_desde)*24,2) into l_minutos from dual ;
            L_HORA_HASTA_REAL:=TO_CHAR(l_hasta,'HH24:MI');
          end if;
        END IF;
          
        --IF l_minutos>0 THEN
          update ENOC.PLLA_SOBRETIEMPO set
            HORA_DESDE_REAL= cur.HORA_DESDE, 
            HORA_HASTA_REAL= L_HORA_HASTA_REAL,
            HORA_BASE_SAL=L_HORA_SALIDA_BASE,
            HORA_SAL_REAL =L_HORA_SALIDA_REAL,
            HORA_ENT_REAL=L_HORA_ENT_REAL,
            HORA_BASE_ENT=L_HORA_ENT_BASE,
            NUM_HORAS_REAL= l_minutos,
            PROCESADO=1,
            ID_USER_MOD=P_ID_USER,
            FECHA_MOD=sysdate
          where id_sobretiempo=cur.ID_SOBRETIEMPO;
        --END IF;
      else
        update ENOC.PLLA_SOBRETIEMPO set
          HORA_DESDE_REAL= cur.HORA_DESDE, 
          HORA_HASTA_REAL= cur.HORA_HASTA, 
          NUM_HORAS_REAL= cur.NUM_HORAS,
          PROCESADO=1,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD=sysdate
        where id_sobretiempo=cur.ID_SOBRETIEMPO;
      end if;
    END;
    END LOOP;
        
   
   end SP_PROCESAR_SOBRETIEMPO;
   
   PROCEDURE SP_PROCESAR_FALTA(
                  P_DESDE DATE, 
                  P_HASTA DATE,
                  P_ID_ENTIDAD NUMBER, 
                  P_ID_DEPTO VARCHAR2,
                  P_ID_AREA number, 
                  P_ID_TRABAJADOR number, 
                  P_ID_USER NUMBER
                  ) IS
                  
       CURSOR person IS
        select
          S.id_asistencia,
          t.id_trabajador,
          S.FECHA,
          sa.id_entidad,
          sa.id_depto_padre,
          sa.id_area
          from ENOC.PLLA_ASISTENCIA S, moises.trabajador t, eliseo.vw_sede_area sa
          where S.ID_TRABAJADOR=T.ID_TRABAJADOR
          AND t.id_sedearea=sa.id_sedearea
          and sa.id_entidad=P_ID_ENTIDAD
          and sa.id_depto_padre=P_ID_DEPTO
          and s.ID_MOTIVO_ASIST='A'
          and coalesce(s.num_horas,0)=0
          and coalesce(s.num_horas_real,0)=0
          and s.id_asistencia not in(
            select w.id_asistencia from enoc.PLLA_LICENCIA_PERMISO w
            where w.id_trabajador=s.id_trabajador
          )
          and case when P_ID_AREA=0 then 0 else sa.id_area end = case when P_ID_AREA=0 then 0 else P_ID_AREA end
          and case when P_ID_TRABAJADOR=0 then 0 else s.id_trabajador end = case when P_ID_TRABAJADOR=0 then 0 else P_ID_TRABAJADOR end
          and (S.FECHA between P_DESDE and P_HASTA)
          order  by t.id_trabajador;
          
          l_contar number;
          l_error number:=0;
          l_msgerror varchar2(200):='';
          l_id_licencia_permiso number;
          l_id_licencia_permiso_estado number;
          l_id_estado_lica_per varchar2(5);
          l_id_concepto_perm_lic number;
   begin
   
       
 
    FOR cur in person LOOP
    BEGIN
        SELECT id_concepto_perm_lic INTO  l_id_concepto_perm_lic FROM ENOC.PLLA_CONCEPTO_PERM_LIC WHERE CODIGO='FALTA'; 
        
        enoc.PKG_BENEFITS.SP_REGISTRAR_LICENCIA_PERMISO(
          l_id_concepto_perm_lic, 	
          cur.id_entidad, 
          cur.id_depto_padre, 
          cur.id_area, 
          cur.id_trabajador, 
          'D', 
          'Falta automatico '||to_char(sysdate,'YYYY-MM-DD HH24:MI:SS'),	
          cur.fecha, 
          cur.fecha,
          null,
          null,
          null,
          null,
          null,
          P_ID_USER, 
          null,
          'A',
          l_error,
          l_msgerror, 
          l_id_licencia_permiso
        );
        
        if l_error =0 then
        
          update ENOC.PLLA_LICENCIA_PERMISO set
            id_asistencia= cur.id_asistencia, 
            ID_USER_MOD=P_ID_USER,
            FECHA_MOD=sysdate
          where id_licencia_permiso=l_id_licencia_permiso;
          
          --aprobar
          -- 02	Aprobado por Jefe
          -- 03	Aprobado por DTH
          l_id_estado_lica_per:='03';
          select COALESCE(MAX(ID_LICENCIA_PERMISO_ESTADO),0) +1 INTO   l_id_licencia_permiso_estado from PLLA_LICENCIA_PERMISO_ESTADO;
         
          INSERT INTO enoc.PLLA_LICENCIA_PERMISO_ESTADO(
             ID_LICENCIA_PERMISO_ESTADO,
             ID_LICENCIA_PERMISO,
             ID_ESTADO_LICA_PER,
             COMENTARIO,
             ID_USER_REG,
             FECHA_REG
           )VALUES(
            l_id_licencia_permiso_estado,
            l_id_licencia_permiso,
            l_id_estado_lica_per,
            null,
            P_ID_USER,
            sysdate
           );
          
           update ENOC.PLLA_LICENCIA_PERMISO set
            ID_ESTADO_LICA_PER= l_id_estado_lica_per, 
            ID_USER_MOD=P_ID_USER,
            FECHA_MOD=sysdate
          where id_licencia_permiso=l_id_licencia_permiso;
          
        end if;
      
    END;
    END LOOP;
        
   
   end SP_PROCESAR_FALTA;
      
      
      
  PROCEDURE SP_REGISTRAR_MARCACION(
          P_ID_TRABAJADOR NUMBER, 
          P_ID_TIPO_MARCACION  NUMBER,
          P_FECHAHORA date, 
          P_FECHAHORA_MANUAL DATE,
          P_LAT VARCHAR2,
          P_LNG VARCHAR2,
          P_IIDTERMINAL NUMBER,
          P_FOTOCHECK VARCHAR2,
          P_ID_SOLIC_JUSTIF NUMBER,
          P_TIPO VARCHAR2,
          P_ID_DESCRIP_MARCACION VARCHAR2,
          P_ID_USER_REG number, 
          P_ERROR OUT number,
          P_MSGERROR out varchar2,
          P_IDASISTENCIA NUMBER:=NULL
        ) is
        
           l_error number:=0;
          l_msgerror varchar2(200):='';
          l_contar number;
          l_items number;
          l_id_marcacion varchar2(30);
          l_id_anho number;
          l_id_mes number;
          l_id_dia number;
          l_nro_dia number;

          
          l_num_documento varchar2(20);
          l_id_mapa_trabajador NUMBER;
          l_id_mapa_area NUMBER;
          l_tipo_hora VARCHAR2(10);
          l_id_entidad number;
          l_id_depto_padre VARCHAR2(10);
          l_id_area number;
          l_id_persona number;
          l_id_situacion_trabajador varchar2(5);
          l_fecha_reg date;

      begin
        
        l_fecha_reg:=P_FECHAHORA;
        if l_fecha_reg is null then 
          l_fecha_reg:=P_FECHAHORA_MANUAL;
        end if;
      
         select 
         to_number(to_char(l_fecha_reg,'YYYY')), 
         to_number(to_char(l_fecha_reg,'MM')),
         to_number(to_char(l_fecha_reg,'DD')),
         to_number(TO_CHAR(l_fecha_reg, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
         into l_id_anho,l_id_mes,l_id_dia,l_nro_dia from dual;
         
         select count(*) into l_contar from ENOC.PLLA_ASISTENCIA_HIST
         where ID_ANHO=l_id_anho
         and id_mes=l_id_mes
         and id_dia=l_id_dia
         and id_trabajador=P_ID_TRABAJADOR;
         
         if l_contar=0 then
          enoc.PKG_ASSISTANCE.SP_ASISTENCIA_HISTORICO(P_ID_TRABAJADOR,l_fecha_reg, P_ID_USER_REG,l_error,l_msgerror);
           /* if l_error=1 then
             GOTO SALIDA;
            end if;*/
         end if;
         
         select coalesce(max(ITEMS),0) + 1 into l_items from ENOC.PLLA_MARCACION
         where ID_ANHO=l_id_anho
         and id_mes=l_id_mes
         and id_dia=l_id_dia;
         
         l_id_marcacion:= to_char(l_fecha_reg,'YYYYMMDD')||to_char(l_items);
         
         select num_documento into l_num_documento  from enoc.vw_trabajador where id_trabajador=P_ID_TRABAJADOR;

         INSERT INTO ENOC.PLLA_MARCACION(
          ID_MARCACION,
          ITEMS,
          ID_TRABAJADOR,
          ID_ANHO,
          ID_MES,
          ID_DIA,
          NRO_DIA,
          ID_TIPO_MARCACION,
          FECHAHORA,
          FECHAHORA_MANUAL,
          LAT,
          LNG,
          ID_SOLIC_JUSTIF,
          NUM_DOCUMENTO,
          IIDTERMINAL,
          FOTOCHECK,
          TIPO,
          ID_DESCRIP_MARCACION,
          ID_USER_REG,
          FECHA_REG,
          IDASISTENCIA
         )VALUES(
          l_id_marcacion,
          l_items,
          P_ID_TRABAJADOR,
          l_id_anho,
          l_id_mes,
          l_id_dia,
          l_nro_dia,
          P_ID_TIPO_MARCACION,
          P_FECHAHORA,
          P_FECHAHORA_MANUAL,
          P_LAT,
          P_LNG,
          P_ID_SOLIC_JUSTIF,
          l_num_documento,
          P_IIDTERMINAL,
          P_FOTOCHECK,
          P_TIPO,
          P_ID_DESCRIP_MARCACION,
          P_ID_USER_REG,
          SYSDATE,
          P_IDASISTENCIA
         );
          <<SALIDA>>
         P_ERROR:=l_error;
         P_MSGERROR:= l_msgerror;
      end SP_REGISTRAR_MARCACION;
      
      PROCEDURE SP_ASISTENCIA_HISTORICO(P_ID_TRABAJADOR number,P_FECHA DATE, P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS 
          l_error number:=0;
          l_msgerror varchar2(200):='';
          l_contar number;
          l_items number;
          l_id_asistencia_hist varchar2(30);
          l_id_anho number;
          l_id_mes number;
          l_id_dia number;
          l_nro_dia number;

          L_ID_MAPA_POLIGONO	NUMBER;
          L_ID_SITUACION_ESPECIAL	VARCHAR2(2 BYTE);
          L_ID_TIPO_CONTROL_PERSONAL	NUMBER;
          L_ID_TIPO_HORARIO	NUMBER;
          L_ID_CONDICION_LABORAL	VARCHAR2(10 BYTE);
          L_ID_SEDEAREA	NUMBER;
          L_ID_PERFIL_PUESTO	NUMBER;
          L_ID_USERDEVICE	NUMBER;
          L_ID_HORARIO_MENSUAL_DET	NUMBER;
          
          l_id_mapa_trabajador NUMBER;
          l_id_mapa_area NUMBER;
          l_id_entidad number;
          l_id_depto_padre VARCHAR2(10);
          l_id_area number;
          l_id_persona number;
          l_id_situacion_trabajador varchar2(5);
          l_tipo_hora varchar2(15);
          l_id_tiempo_trabajado number;
          
          L_NUM_TOLE_TAR	NUMBER(10,2);
          L_NUM_TOLE_TAR_REF	NUMBER(10,2);
          L_NUM_RANGO NUMBER(10,2); 
          L_NUM_RANGO_REF NUMBER(10,2); 
          L_SAL_DIASIG number:=0;
          l_id_horario_bloque number;
          l_id_dia_th number;
          l_fec_actual date;
          l_fecha_reg date;
      begin
      
         select 
         to_number(to_char(P_FECHA,'YYYY')), 
         to_number(to_char(P_FECHA,'MM')),
         to_number(to_char(P_FECHA,'DD')),
         to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
         into l_id_anho,l_id_mes,l_id_dia,l_nro_dia from dual;
         
        
         
         l_fec_actual:= TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD'),'YYYY-MM-DD');
         l_fecha_reg:= TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD'),'YYYY-MM-DD');
         
         select count(1) into l_contar from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
         
         if l_contar<>1 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion tipo horario';
            GOTO SALIDA;
         end if;
         
         select id_tipo_horario into L_ID_TIPO_HORARIO from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
         
         
         select count(1) into l_contar from ENOC.PLLA_CONTROL_PERSONAL_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
         
         if l_contar<>1 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion de tipo control personal';
            GOTO SALIDA;
         end if;
         
         select ID_TIPO_CONTROL_PERSONAL into L_ID_TIPO_CONTROL_PERSONAL from ENOC.PLLA_CONTROL_PERSONAL_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
         
         
          select 
            ID_ENTIDAD,
            ID_CONDICION_LABORAL,
            ID_SEDEAREA,
            ID_PERFIL_PUESTO,
            id_persona,
            id_situacion_trabajador,
            ID_TIPO_TIEMPO_TRABAJO
            into
            l_id_entidad,
            L_ID_CONDICION_LABORAL,
            L_ID_SEDEAREA,
            L_ID_PERFIL_PUESTO,
            l_id_persona,
            l_id_situacion_trabajador,
            l_id_tiempo_trabajado
            from enoc.vw_trabajador where id_trabajador=P_ID_TRABAJADOR;
         
          if l_id_situacion_trabajador not in('1') then
                l_error:=1;
                l_msgerror:='Trabajdor no esta activo';
                GOTO SALIDA;
          end if;
         
          select count(*) into l_contar from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
          
          IF l_contar=0 then
            l_error:=1;
            l_msgerror:='Falta configurar parametros para el año '||to_char(l_id_anho);
            GOTO SALIDA;
          end if;
            
          select coalesce(a.importe,0) into L_NUM_TOLE_TAR from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='TOLE_HORA_ENT'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
          
          select coalesce(a.importe,0) into L_NUM_TOLE_TAR_REF from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='TOLE_HORA_ENT_REF'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
          
          
          select coalesce(a.importe,0) into L_NUM_RANGO from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='PARAM_ASIST_RANG'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
          
          select coalesce(a.importe,0) into L_NUM_RANGO_REF from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='PARAM_REF_RANG'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
          
          
          select b.CODIGO into l_tipo_hora from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
          where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
          and a.id_tipo_horario =  L_ID_TIPO_HORARIO;
          
          
          if l_tipo_hora='HM' then
   
              select count(*) into l_contar from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
              where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
              AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
              AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
              AND A.ID_ANHO=l_id_anho
              AND A.ID_MES=l_id_mes
              AND B.ID_DIA=l_id_dia;
              
              if l_contar = 1 then
                select B.ID_HORARIO_MENSUAL_DET, b.id_horario_bloque into L_ID_HORARIO_MENSUAL_DET,l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
                where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                AND A.ID_ANHO=l_id_anho
                AND A.ID_MES=l_id_mes
                AND B.ID_DIA=l_id_dia;
                
                select SAL_DIASIG into L_SAL_DIASIG from enoc.plla_horario_bloque where id_horario_bloque= l_id_horario_bloque;
                
              else
                l_error:=1;
                l_msgerror:='Horario mesnual: No esta configurado para la fecha: '||to_char(P_FECHA,'DD/MM/YYYY');
                GOTO SALIDA;
                
              end if;

          else
            select COUNT(*) into l_contar from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;
            
            l_id_dia_th:=l_nro_dia;
            if l_contar=0 then
               l_error:=1;
               l_msgerror:='Horario fijo: No esta configurado para la fecha: '||to_char(P_FECHA,'DD/MM/YYYY');
               GOTO SALIDA;
            else
              select SAL_DIASIG into L_SAL_DIASIG from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;
            end if;
          END IF;
            
         select count(*) into l_contar from ENOC.PLLA_ASISTENCIA_HIST
         where ID_ANHO=l_id_anho
         and id_mes=l_id_mes
         and id_dia=l_id_dia
         and id_trabajador=P_ID_TRABAJADOR; 
         
         if l_contar>0 then
           update ENOC.PLLA_ASISTENCIA_HIST set
           ID_TIPO_CONTROL_PERSONAL=L_ID_TIPO_CONTROL_PERSONAL,
           id_tipo_horario=L_ID_TIPO_HORARIO,
           NUM_TOLE_TAR=L_NUM_TOLE_TAR,
           NUM_TOLE_TAR_REF=L_NUM_TOLE_TAR_REF,
           NUM_RANGO=L_NUM_RANGO, 
           NUM_RANGO_REF=L_NUM_RANGO_REF,
           SAL_DIASIG=L_SAL_DIASIG,
           id_dia_th=l_id_dia_th,
           ID_HORARIO_MENSUAL_DET=L_ID_HORARIO_MENSUAL_DET,
           ID_USER_MOD=P_ID_USER_REG,
           FECHA_MOD=SYSDATE
           where ID_ANHO=l_id_anho
           and id_mes=l_id_mes
           and id_dia=l_id_dia
           and id_trabajador=P_ID_TRABAJADOR;
         else
   
            select id_depto_padre,id_area into l_id_depto_padre,l_id_area from eliseo.VW_SEDE_AREA where ID_SEDEAREA=L_ID_SEDEAREA;
            
            select coalesce(max(id_mapa_trabajador),0) into l_id_mapa_trabajador from enoc.plla_mapa_trabajador where id_trabajador=P_ID_TRABAJADOR;
          
            if l_id_mapa_trabajador>0 then
              select ID_MAPA_POLIGONO into L_ID_MAPA_POLIGONO from enoc.plla_mapa_trabajador where  id_mapa_trabajador=l_id_mapa_trabajador;
            else
              select coalesce(max(id_mapa_area),0) into l_id_mapa_area from enoc.plla_mapa_area 
              where id_entidad=l_id_entidad
              and id_depto=l_id_depto_padre
              and id_area = l_id_area;
              if l_id_mapa_trabajador>0 then
                select ID_MAPA_POLIGONO into L_ID_MAPA_POLIGONO from enoc.plla_mapa_area where id_mapa_area= l_id_mapa_area;
              end if;
            end if;
            
            select count(*) into l_contar  from moises.TRABAJADOR_SIT_ESP where id_trabajador=P_ID_TRABAJADOR and vigencia=1;
          
            if l_contar=1 then
              select ID_SITUACION_ESPECIAL into L_ID_SITUACION_ESPECIAL  from moises.TRABAJADOR_SIT_ESP where id_trabajador=P_ID_TRABAJADOR and vigencia=1;
            end if;  
            
            select count(*) into l_contar  from ELISEO.APS_USER_DEVICE where id_persona = l_id_persona and STATE='1';
            if l_contar=1 then 
              select ID_USERDEVICE into L_ID_USERDEVICE  from ELISEO.APS_USER_DEVICE where id_persona = l_id_persona and STATE='1'; 
            end if;
          
              select coalesce(max(ITEMS),0) + 1 into l_items from ENOC.PLLA_ASISTENCIA_HIST
            where ID_ANHO=l_id_anho
            and id_mes=l_id_mes
            and id_dia=l_id_dia;
            
            l_id_asistencia_hist:= to_char(P_FECHA,'YYYYMMDD')||to_char(l_items);
         
            INSERT INTO ENOC.PLLA_ASISTENCIA_HIST(
              ID_ASISTENCIA_HIST,
              ITEMS,
              ID_TRABAJADOR,
              ID_ANHO,
              ID_MES,
              ID_DIA,
              NRO_DIA,
              ID_SITUACION_ESPECIAL,
              ID_TIPO_CONTROL_PERSONAL,
              ID_TIPO_TIEMPO_TRABAJO,
              ID_TIPO_HORARIO,
              ID_DIA_TH,
              ID_CONDICION_LABORAL,
              ID_SEDEAREA,
              ID_PERFIL_PUESTO,
              ID_MAPA_POLIGONO,
              ID_USERDEVICE,
              ID_HORARIO_MENSUAL_DET,
              NUM_TOLE_TAR,
              NUM_TOLE_TAR_REF,
              NUM_RANGO,
              NUM_RANGO_REF,
              SAL_DIASIG,
              ID_USER_REG,
              FECHA_REG
             )VALUES(
              l_id_asistencia_hist,
              l_items,
              P_ID_TRABAJADOR,
              l_id_anho,
              l_id_mes,
              l_id_dia,
              l_nro_dia,
              L_ID_SITUACION_ESPECIAL,
              L_ID_TIPO_CONTROL_PERSONAL,
              l_id_tiempo_trabajado,
              L_ID_TIPO_HORARIO,
              l_id_dia_th,
              L_ID_CONDICION_LABORAL,
              L_ID_SEDEAREA,
              L_ID_PERFIL_PUESTO,
              L_ID_MAPA_POLIGONO,
              L_ID_USERDEVICE,
              L_ID_HORARIO_MENSUAL_DET,
              L_NUM_TOLE_TAR,
              L_NUM_TOLE_TAR_REF,
              L_NUM_RANGO, 
              L_NUM_RANGO_REF,
              L_SAL_DIASIG,
              P_ID_USER_REG,
              SYSDATE         
             );
          END IF;
          <<SALIDA>>
         P_ERROR:=l_error;
         P_MSGERROR:= l_msgerror;
      END SP_ASISTENCIA_HISTORICO;

      PROCEDURE SP_COPIAR_MARCACION_AUTO
      is
            l_fecha date;
                
      BEGIN
            l_fecha:= current_date;
            
            PKG_ASSISTANCE.SP_COPIAR_MARCACION(l_fecha, l_fecha);
            
      END SP_COPIAR_MARCACION_AUTO;
      
      PROCEDURE SP_COPIAR_MARCACION(P_DESDE DATE, P_HASTA DATE)
      IS
        CURSOR asist IS
        select
          a.ID_TRABAJADOR,
          a.IDASISTENCIA,
          a.IDPERSONAL,
          a.FECHA,
          a.FECHAHORA,
          a.TIPOINGRESO,
          a.TIPOMARCACION,
          a.NUM_MARCADOR,
          a.NUMDOCUMENTO,
          a.FOTOCHECK,
          t.id_persona
        from enoc.PLLA_ASIST_MARCACION a, moises.trabajador t
        where a.id_trabajador= t.id_trabajador
        and (a.FECHA BETWEEN P_DESDE AND P_HASTA)
        and a.FECHAHORA not in(
          select FECHAHORA from  enoc.PLLA_MARCACION x
          where x.id_trabajador=a.id_trabajador
        ); 
        l_error number;
        l_msg varchar2(200);
        
      BEGIN
      
        DELETE FROM enoc.PLLA_ASIST_MARCACION WHERE FECHA BETWEEN  P_DESDE AND P_HASTA;
        
   
        INSERT INTO enoc.PLLA_ASIST_MARCACION(
          ITEMS,
          ID_TRABAJADOR,
          IDASISTENCIA,
          IDPERSONAL,
          FECHA,
          FECHAHORA,
          TIPOINGRESO,
          TIPOMARCACION,
          NUM_MARCADOR,
          NUMDOCUMENTO,
          FOTOCHECK
        )
        select 
        ROW_NUMBER() OVER (PARTITION BY ID_TRABAJADOR,fecha ORDER BY IDASISTENCIA) AS Items,
        ID_TRABAJADOR,
        IDASISTENCIA,
        IDPERSONAL,
        FECHA,
        FECHAHORA,
        TIPOINGRESO,
        TIPOMARCACION,
        NUM_MARCADOR,
        NUMDOCUMENTO,
        FOTOCHECK
        from enoc.PLLA_ASIST_MARCACION_TMP
        WHERE COALESCE(ID_TRABAJADOR,0)>0
        ORDER BY ID_TRABAJADOR,FECHAHORA;
        
        FOR cur in asist LOOP
        BEGIN
            enoc.PKG_ASSISTANCE.SP_REGISTRAR_MARCACION(
            cur.id_trabajador, 
            2,
            cur.FECHAHORA, 
            null,
            null,
            null,
            cur.NUM_MARCADOR,
            cur.FOTOCHECK,
            null,
            'A',
            null,
            cur.id_persona, 
            l_error,
            l_msg
          );
        end;
        end loop;

      END SP_COPIAR_MARCACION;
      
       PROCEDURE SP_PROCESAR_MARCACION(P_DESDE DATE, P_HASTA DATE,P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_AREA number, P_ID_TRABAJADOR number, P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_error number:=0;
        l_msgerror varchar2(200 byte):='';
        l_contar number;
        
        l_id_tipo_control_personal number;
        l_id_tipo_horario number;
        l_id_sedearea number;

        l_hasta date;
        l_desde date;
        l_id_motivo_asist varchar2(10);
        l_num_rango number;
        l_num_rango_ref number;
        l_fecha_actual date;
        l_marcacion varchar2(5);
        l_codigo varchar2(10);
        

        
        CURSOR person IS
        select
          t.id_trabajador,
          t.id_persona,
          t.fecha_inicio,
          coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual) as fecha_fin
          from moises.trabajador t, eliseo.vw_sede_area sa
          where t.id_sedearea=sa.id_sedearea
          and t.id_entidad=P_ID_ENTIDAD
          AND case when P_ID_TRABAJADOR=0 then CASE WHEN t.ID_SITUACION_TRABAJADOR = '1' AND SYSDATE >=t.FECHA_INICIO AND SYSDATE <=COALESCE(t.FECHA_FIN_PREVISTO,SYSDATE) THEN 1 ELSE 0 END ELSE 1 END = 1
          and case when P_ID_DEPTO='0' then '0' else sa.id_depto_padre end = case when P_ID_DEPTO='0' then '0' else P_ID_DEPTO end
          --and sa.id_depto_padre=P_ID_DEPTO
          and t.fecha_inicio is not null
          and case when P_ID_AREA=0 then 0 else sa.id_area end = case when P_ID_AREA=0 then 0 else P_ID_AREA end
          and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end = case when P_ID_TRABAJADOR=0 then 0 else P_ID_TRABAJADOR end
          and (
          ((t.fecha_inicio between P_DESDE and P_HASTA) 
          or (coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual) between P_DESDE and P_HASTA)) 
          or ((P_DESDE between t.fecha_inicio and  coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual)) 
          or (P_HASTA between t.fecha_inicio and coalesce(coalesce(t.fecha_fin_efectivo,t.fecha_fin_previsto),l_fecha_actual) ))
          ) 
          order  by t.id_trabajador;
  

      BEGIN
        l_fecha_actual:= TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD'),'YYYY-MM-DD'); 
        l_hasta :=P_HASTA;
        l_desde:=P_DESDE;
        
        if P_HASTA>l_fecha_actual then
          l_hasta := l_fecha_actual;
        end if;
        
        if l_hasta>=P_DESDE then
        
        
          while(l_desde<=l_hasta) LOOP
          BEGIN  
            FOR cur in person LOOP
            BEGIN
                 /*delete from ENOC.PLLA_ASISTENCIA
                 where ID_TRABAJADOR=cur.id_trabajador
                 and ID_ANHO= to_number(to_char(l_desde,'YYYY'))
                 and ID_MES=to_number(to_char(l_desde,'MM'))
                 and ID_DIA=to_number(to_char(l_desde,'DD'));*/
                 
                 if l_desde>=cur.fecha_inicio and  l_desde<= cur.fecha_fin then 
                 
                   select count(*) into l_contar from ENOC.PLLA_ASISTENCIA_HIST
                   where ID_TRABAJADOR=cur.id_trabajador
                   and ID_ANHO= to_number(to_char(l_desde,'YYYY'))
                   and ID_MES=to_number(to_char(l_desde,'MM'))
                   and ID_DIA=to_number(to_char(l_desde,'DD'));
                   
                   if l_contar=0 then
                    enoc.PKG_ASSISTANCE.SP_ASISTENCIA_HISTORICO(cur.id_trabajador,l_desde, P_ID_USER,l_error,l_msgerror);
                     /* if l_error=1 then
                       GOTO SALIDA;
                      end if;*/
                   end if;
                   
                   select count(*) into l_contar from ENOC.PLLA_ASISTENCIA_HIST
                   where ID_TRABAJADOR=cur.id_trabajador
                   and ID_ANHO= to_number(to_char(l_desde,'YYYY'))
                   and ID_MES=to_number(to_char(l_desde,'MM'))
                   and ID_DIA=to_number(to_char(l_desde,'DD'));
                  
                  IF l_contar>0 THEN
                   select
                    ID_TIPO_CONTROL_PERSONAL ,
                    ID_TIPO_HORARIO,
                    ID_SEDEAREA,
                    NUM_RANGO,
                    NUM_RANGO_REF
                    into 
                    l_id_tipo_control_personal,
                    l_id_tipo_horario,
                    l_id_sedearea,
                    l_num_rango,
                    l_num_rango_ref
                    from enoc.PLLA_ASISTENCIA_HIST	
                    where ID_TRABAJADOR=cur.id_trabajador
                    and ID_ANHO= to_number(to_char(l_desde,'YYYY'))
                    and ID_MES=to_number(to_char(l_desde,'MM'))
                    and ID_DIA=to_number(to_char(l_desde,'DD'));
                  ELSE
                    SELECT ID_TIPO_HORARIO, ID_SEDEAREA,id_tipo_control_personal INTO l_id_tipo_horario,l_id_sedearea,l_id_tipo_control_personal FROM  MOISES.TRABAJADOR WHERE ID_TRABAJADOR=cur.id_trabajador;
                  END IF;
                  
                  select enoc.FC_MOTIVO_ASISTENCIA(cur.id_trabajador,l_id_tipo_horario,l_id_sedearea, l_desde) into l_id_motivo_asist from dual;
                  
                  SELECT MARCACION INTO l_marcacion FROM MOISES.TIPO_CONTROL_PERSONAL WHERE id_tipo_control_personal=l_id_tipo_control_personal;
                  
                  select b.codigo into l_codigo from enoc.plla_tipo_horario a, ENOC.PLLA_TIPO_CONFIG_HORARIO b where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
                  and a.id_tipo_horario=l_id_tipo_horario;
                  
                  if l_marcacion = 'S' then
                    if l_codigo in('HD','SH') then
                      enoc.PKG_ASSISTANCE.SP_PROCESAR_NO_FISCALIZABLE(cur.id_trabajador,l_desde,l_id_tipo_horario,l_id_sedearea,l_id_motivo_asist,P_ID_USER);
                    else
                      enoc.PKG_ASSISTANCE.SP_PROCESAR_FISCALIZABLE(cur.id_trabajador,l_desde,l_id_tipo_horario,l_id_sedearea,l_id_motivo_asist,l_num_rango,l_num_rango_ref,P_ID_USER);
                    end if;
                  else
                     
                     enoc.PKG_ASSISTANCE.SP_PROCESAR_NO_FISCALIZABLE(cur.id_trabajador,l_desde,l_id_tipo_horario,l_id_sedearea,l_id_motivo_asist,P_ID_USER);
                  end if;
              end if;  
            END;     
            END LOOP;
            l_desde:= l_desde + 1;
          END;
          END LOOP;
      end if;
      
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
      END SP_PROCESAR_MARCACION;
      
      PROCEDURE SP_PROCESAR_NO_FISCALIZABLE(
          P_ID_TRABAJADOR NUMBER,
          P_FECHA DATE,
          P_ID_TIPO_HORARIO NUMBER,
          P_ID_SEDEAREA number,
          P_ID_MOTIVO_ASIST VARCHAR2, 
          P_ID_USER NUMBER
          )
      IS
      
      l_control number:=0;
      f_hora_entrada date;
      f_hora_salida date;
      f_hora_entrada_ref date;
      f_hora_salida_ref date;
      l_hora_entrada varchar2(10);
      l_hora_salida varchar2(10);
      l_hora_entrada_ref varchar2(10);
      l_hora_salida_ref varchar2(10);
      l_anho number:=0;
      l_mes number:=0;
      l_dia number:=0;
      l_nrodia number:=0;
      l_codigo varchar2(10);
      l_codigo_asist varchar2(10);
      l_contar number;
      l_id_tipo_horario number;
      l_sal_diasig number;
      l_id_entidad number;
      BEGIN
      
       
        SELECT 
        ID_ENTIDAD
        into
        l_id_entidad
        FROM eliseo.vw_sede_area
        WHERE ID_SEDEAREA=P_ID_SEDEAREA;
        
        if P_ID_MOTIVO_ASIST = 'A' then
          l_control:=1;
        else
          if P_ID_MOTIVO_ASIST in('FN', 'FNL','FI','SA','DO') then
             select count(*) into l_contar  from enoc.plla_marcacion 
             where id_trabajador=P_ID_TRABAJADOR
             and coalesce(fechahora,fechahora_manual) = P_FECHA;
             
             if l_contar>0 then
                l_control:=1;
             end if;
          end if;
        end if;
        
        if l_control=1 then
        
           select 
           to_number(to_char(P_FECHA,'YYYY')),to_number(to_char(P_FECHA,'MM')),to_number(to_char(P_FECHA,'DD')), to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))
           into 
           l_anho,l_mes,l_dia,l_nrodia 
           from dual;
    
           select b.codigo into l_codigo from enoc.plla_tipo_horario a, ENOC.PLLA_TIPO_CONFIG_HORARIO b
           where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
           and a.id_tipo_horario = P_ID_TIPO_HORARIO;
        
           if l_codigo ='HM' then
           
             l_control:=0;
            
           else
             select  
             c.codigo, 
             a.HORA_ENTRADA,
             a.HORA_SALIDA,
             a.HORA_ENTRADA_REF,
             a.HORA_SALIDA_REF,
             a.SAL_DIASIG
             into
             l_codigo_asist,
             l_hora_entrada,
             l_hora_salida,
             l_hora_entrada_ref,
             l_hora_salida_ref,
             l_sal_diasig
             from enoc.plla_horario_detalle a, enoc.plla_control_asist c
             where  a.id_control_asist=c.id_control_asist
             and a.id_tipo_horario=P_ID_TIPO_HORARIO
             and a.id_dia=l_nrodia;
           end if;
           
           if l_control=1 then
             --entrada
             f_hora_entrada := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada, 'YYYY-MM-DD HH24:MI:SS');
             
             if l_codigo_asist in('REFCMA','DOTU') then
               --salida ref
               f_hora_salida_ref := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida_ref, 'YYYY-MM-DD HH24:MI:SS');
               --entrada ref
               f_hora_entrada_ref := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada_ref, 'YYYY-MM-DD HH24:MI:SS');
             end if;
             
             --salida
             if l_sal_diasig=1 then
              f_hora_salida := TO_DATE(TO_CHAR(P_FECHA + 1, 'YYYY-MM-DD')||' '||l_hora_salida, 'YYYY-MM-DD HH24:MI:SS');
             else
              f_hora_salida := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida, 'YYYY-MM-DD HH24:MI:SS');
             end if;
          end if;
        end if;

        ENOC.PKG_ASSISTANCE.SP_REGISTRAR_ASISTENCIA(
                                  l_id_entidad,
                                  P_ID_TRABAJADOR,
                                  P_ID_SEDEAREA,
                                  P_ID_TIPO_HORARIO,
                                  P_ID_MOTIVO_ASIST,
                                  P_FECHA,
                                  f_hora_entrada,
                                  f_hora_salida,
                                  f_hora_entrada_ref,
                                  f_hora_salida_ref,
                                  'N', 
                                  P_ID_USER
                                  );
                                  
      
      END SP_PROCESAR_NO_FISCALIZABLE;
      
      PROCEDURE SP_PROCESAR_FISCALIZABLE(
          P_ID_TRABAJADOR NUMBER,
          P_FECHA DATE,
          P_ID_TIPO_HORARIO NUMBER,
          P_ID_SEDEAREA number,
          P_ID_MOTIVO_ASIST VARCHAR2, 
          P_NUM_RANGO number,
          P_NUM_RANGO_REF number,
          P_ID_USER NUMBER
          )
      IS
      
      l_control number:=0;
      f_hora_entrada date;
      f_hora_salida date;
      f_hora_entrada_ref date;
      f_hora_salida_ref date;
      l_hora_entrada varchar2(10);
      l_hora_salida varchar2(10);
      l_hora_entrada_ref varchar2(10);
      l_hora_salida_ref varchar2(10);
      l_anho number:=0;
      l_mes number:=0;
      l_dia number:=0;
      l_nrodia number:=0;
      l_codigo varchar2(10);
      l_codigo_asist varchar2(10);
      l_contar number;
      l_contarh number;
      l_desde_rango date;
      l_hasta_rango date;
      l_id_entidad number;
      l_sal_diasig number;
      
      b_hora_entrada date;
      b_hora_salida date;
      b_hora_entrada_ref date;
      b_hora_salida_ref date;
      
      BEGIN
      
       
        SELECT 
        ID_ENTIDAD
        into
        l_id_entidad
        FROM eliseo.vw_sede_area
        WHERE ID_SEDEAREA=P_ID_SEDEAREA;
        
        if P_ID_MOTIVO_ASIST in('A','PLH') then
          l_control:=1;
        else
          if P_ID_MOTIVO_ASIST in('FN', 'FNL','FI','SA','DO') then
             select count(*) into l_contar  from enoc.vw_marcacion 
             where id_trabajador=P_ID_TRABAJADOR
             and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD') = to_char(P_FECHA,'YYYY-MM-DD');
             
             if l_contar>0 then
                l_control:=1;
             end if;
          end if;
        end if;
        
        if l_control=1 then
        
           select 
           to_number(to_char(P_FECHA,'YYYY')),to_number(to_char(P_FECHA,'MM')),to_number(to_char(P_FECHA,'DD')), to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))
           into 
           l_anho,l_mes,l_dia,l_nrodia 
           from dual;
    
           select b.codigo into l_codigo from enoc.plla_tipo_horario a, ENOC.PLLA_TIPO_CONFIG_HORARIO b
           where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
           and a.id_tipo_horario = P_ID_TIPO_HORARIO;
        
           if l_codigo ='HM' then
           
             select 
             c.codigo, 
             bl.HORA_ENTRADA,
             bl.HORA_SALIDA,
             bl.HORA_ENTRADA_REF,
             bl.HORA_SALIDA_REF,
             bl.SAL_DIASIG
             into
             l_codigo_asist,
             l_hora_entrada,
             l_hora_salida,
             l_hora_entrada_ref,
             l_hora_salida_ref,
             l_sal_diasig
             from enoc.plla_horario_mensual m , enoc.plla_horario_mensual_det d, enoc.plla_horario_bloque bl, enoc.plla_control_asist c
             where m.id_horario_mensual=d.id_horario_mensual
             and d.id_horario_bloque=bl.id_horario_bloque
             AND M.ID_TIPO_HORARIO=P_ID_TIPO_HORARIO
             and bl.id_control_asist=c.id_control_asist
             and m.id_anho=l_anho
             and m.id_mes =l_mes
             and d.id_dia=l_dia;
            
           else
             select  
             c.codigo, 
             a.HORA_ENTRADA,
             a.HORA_SALIDA,
             a.HORA_ENTRADA_REF,
             a.HORA_SALIDA_REF,
             a.SAL_DIASIG
             into
             l_codigo_asist,
             l_hora_entrada,
             l_hora_salida,
             l_hora_entrada_ref,
             l_hora_salida_ref,
             l_sal_diasig
             from enoc.plla_horario_detalle a, enoc.plla_control_asist c
             where a.id_control_asist=c.id_control_asist
             and a.id_tipo_horario=P_ID_TIPO_HORARIO
             and a.id_dia=l_nrodia;
           end if;
           
           
           --entrada
           b_hora_entrada:= TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada, 'YYYY-MM-DD HH24:MI:SS');
           l_desde_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada, 'YYYY-MM-DD HH24:MI:SS') - P_NUM_RANGO / 1440;
           l_hasta_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada, 'YYYY-MM-DD HH24:MI:SS') + P_NUM_RANGO / 1440;
           
           --dbms_output.put_line(P_NUM_RANGO);
           --dbms_output.put_line(TO_CHAR(b_hora_entrada, 'YYYY-MM-DD'));
          -- dbms_output.put_line(TO_CHAR(l_desde_rango, 'YYYY-MM-DD HH24:MI:SS'));
           --dbms_output.put_line(TO_CHAR(l_hasta_rango, 'YYYY-MM-DD HH24:MI:SS'));
           
           if P_ID_MOTIVO_ASIST in('PLH') then
             select count(*) into l_contarh from enoc.VW_LICENCIA_PERMISO_ASIST 
             where id_trabajador=P_ID_TRABAJADOR
             and periodo='H'
             and id_estado_lica_per not in('00','04')
             AND (TO_DATE(TO_CHAR(b_hora_entrada, 'MM/DD/YYYY'), 'MM/DD/YYYY') between fecha_desde and fecha_hasta );
              
             if l_contarh>0 then
              f_hora_entrada:=b_hora_entrada;
             end if;
           end if;
       
           
           if f_hora_entrada is null then  
             select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
             and coalesce(ID_DESCRIP_MARCACION,'X')= '01'
             and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
             
             if l_contar>0 then
              select min(FECHAHORAASISTENCIA) into f_hora_entrada from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
              and coalesce(ID_DESCRIP_MARCACION,'X')= '01'
              and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
             else
              select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
              and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
              
              if l_contar>0 then
                select min(FECHAHORAASISTENCIA) into f_hora_entrada from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
                and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
              end if;
             end if;
           end if;
          
          
           
           if l_codigo_asist in('REFCMA','DOTU') then
             --salida ref
             b_hora_salida_ref:=TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida_ref, 'YYYY-MM-DD HH24:MI:SS');
             l_desde_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida_ref, 'YYYY-MM-DD HH24:MI:SS') - P_NUM_RANGO / 1440;--P_NUM_RANGO_REF
             l_hasta_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida_ref, 'YYYY-MM-DD HH24:MI:SS') + P_NUM_RANGO_REF / 1440;
             
             dbms_output.put_line(TO_CHAR(l_desde_rango, 'YYYY-MM-DD HH24:MI:SS'));
             dbms_output.put_line(TO_CHAR(l_hasta_rango, 'YYYY-MM-DD HH24:MI:SS'));
             
             if P_ID_MOTIVO_ASIST in('PLH') then
              
               select count(*) into l_contarh from enoc.VW_LICENCIA_PERMISO_ASIST 
               where id_trabajador=P_ID_TRABAJADOR
               and periodo='H'
               and id_estado_lica_per not in('00','04')
               AND (TO_DATE(TO_CHAR(b_hora_salida_ref, 'MM/DD/YYYY'), 'MM/DD/YYYY') between fecha_desde and fecha_hasta );
              
               if l_contarh>0 then
                 f_hora_salida_ref:=b_hora_salida_ref;
               end if;
              
             end if;
             
             if f_hora_salida_ref is null then
             
               select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
               and coalesce(ID_DESCRIP_MARCACION,'X')= '02'
               and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
               
               if l_contar>0 then
                select max(FECHAHORAASISTENCIA) into f_hora_salida_ref from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
                and coalesce(ID_DESCRIP_MARCACION,'X')= '02'
                and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
               else
                 select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
                and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
                
                 if l_contar>0 then
                  select max(FECHAHORAASISTENCIA) into f_hora_salida_ref from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
                  and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
                 end if;
                end if;
             end if;
             
             
           
             --entrada ref
             b_hora_entrada_ref:=TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada_ref, 'YYYY-MM-DD HH24:MI:SS');
             l_desde_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada_ref, 'YYYY-MM-DD HH24:MI:SS') - P_NUM_RANGO_REF / 1440;
             l_hasta_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_entrada_ref, 'YYYY-MM-DD HH24:MI:SS') + P_NUM_RANGO / 1440;--P_NUM_RANGO_REF
             
             
             --dbms_output.put_line(TO_CHAR(l_desde_rango, 'YYYY-MM-DD HH24:MI:SS'));
             --dbms_output.put_line(TO_CHAR(l_hasta_rango, 'YYYY-MM-DD HH24:MI:SS'));
             
             if P_ID_MOTIVO_ASIST in('PLH') then
              
                select count(*) into l_contarh from enoc.VW_LICENCIA_PERMISO_ASIST 
                where id_trabajador=P_ID_TRABAJADOR
                and periodo='H'
                and id_estado_lica_per not in('00','04')
                AND (TO_DATE(TO_CHAR(b_hora_entrada_ref, 'MM/DD/YYYY'), 'MM/DD/YYYY') between fecha_desde and fecha_hasta );
                
                if l_contarh>0 then
                  f_hora_entrada_ref:=b_hora_entrada_ref;
                end if;
             end if;
             if f_hora_entrada_ref is null then
               select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
               and coalesce(ID_DESCRIP_MARCACION,'X')= '03'
               and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
               
               if l_contar>0 then
                select min(FECHAHORAASISTENCIA) into f_hora_entrada_ref from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
                and coalesce(ID_DESCRIP_MARCACION,'X')= '03'
                and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
               else
                 select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
                 and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
                
                 if l_contar>0 then
                  select min(FECHAHORAASISTENCIA) into f_hora_entrada_ref from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
                  and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
                 end if;
               end if;
            end if;
           end if;
           --salida
           b_hora_salida:= TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida, 'YYYY-MM-DD HH24:MI:SS');
           l_desde_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida, 'YYYY-MM-DD HH24:MI:SS') - P_NUM_RANGO / 1440;
           l_hasta_rango := TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||l_hora_salida, 'YYYY-MM-DD HH24:MI:SS') + (P_NUM_RANGO + 300) / 1440;
           if l_sal_diasig=1 then
            l_hasta_rango := TO_DATE(TO_CHAR(P_FECHA + 1, 'YYYY-MM-DD')||' '||l_hora_salida, 'YYYY-MM-DD HH24:MI:SS') + (P_NUM_RANGO + 300) / 1440;
           end if;
           
           
           
           if P_ID_MOTIVO_ASIST in('PLH') then
              
              select count(*) into l_contarh from enoc.VW_LICENCIA_PERMISO_ASIST 
              where id_trabajador=P_ID_TRABAJADOR
              and periodo='H'
              and id_estado_lica_per not in('00','04')
              AND (TO_DATE(TO_CHAR(b_hora_salida, 'MM/DD/YYYY'), 'MM/DD/YYYY') between fecha_desde and fecha_hasta );
              
              if l_contarh>0 then
                f_hora_salida:=b_hora_salida;
              end if;
           end if;
           
           if f_hora_salida is null then
               select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
               and coalesce(ID_DESCRIP_MARCACION,'X')= '04'
               and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
               
               if l_contar>0 then
                select max(FECHAHORAASISTENCIA) into f_hora_salida from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
                and coalesce(ID_DESCRIP_MARCACION,'X')= '04'
                and to_char(FECHAHORAASISTENCIA,'YYYY-MM-DD')=to_char(P_FECHA,'YYYY-MM-DD');
               else
                 select count(*) into l_contar from  enoc.vw_marcacion where id_trabajador= P_ID_TRABAJADOR
                 and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
                
                 if l_contar>0 then
                  select max(FECHAHORAASISTENCIA) into f_hora_salida from  enoc.vw_marcacion where id_trabajador=P_ID_TRABAJADOR  
                  and (FECHAHORAASISTENCIA BETWEEN l_desde_rango AND l_hasta_rango);
                 end if;
              end if;
          end if;
          
        end if;

             
        ENOC.PKG_ASSISTANCE.SP_REGISTRAR_ASISTENCIA(
                                  l_id_entidad,
                                  P_ID_TRABAJADOR,
                                  P_ID_SEDEAREA,
                                  P_ID_TIPO_HORARIO,
                                  P_ID_MOTIVO_ASIST,
                                  P_FECHA,
                                  f_hora_entrada,
                                  f_hora_salida,
                                  f_hora_entrada_ref,
                                  f_hora_salida_ref,
                                  'F', 
                                  P_ID_USER
                                  );
                                  
         
      
      END SP_PROCESAR_FISCALIZABLE;
      
      PROCEDURE SP_REGISTRAR_ASISTENCIA(P_ID_ENTIDAD NUMBER,
                                  P_ID_TRABAJADOR NUMBER,
                                  P_ID_SEDEAREA NUMBER,
                                  P_ID_TIPO_HORARIO NUMBER,
                                  P_ID_MOTIVO_ASIST VARCHAR2,
                                  P_FECHA DATE,
                                  P_HORA_ENTRADA date,
                                  P_HORA_SALIDA date,
                                  P_HORA_ENTRADA_REF date,
                                  P_HORA_SALIDA_REF date,
                                  P_TIPO VARCHAR2, --F:FICALIZABLE, N: NO FISCALIZABLE, 
                                  P_ID_USER_REG NUMBER
                                  )
      IS
      
      l_id_asistencia VARCHAR2(35);
      l_contar number:=0;
      l_contar1 number:=0;
      L_HORA_BASE_ENT VARCHAR2(20);
      L_HORA_BASE_SAL VARCHAR2(20);
      L_HORA_BASE_ENT_REF VARCHAR2(20);
      L_HORA_BASE_SAL_REF VARCHAR2(20);
      L_NUM_HORAS_BASE NUMBER(10,2):=0;
      L_NUM_REFRIGERIO NUMBER(10,2):=0;
      l_codigo varchar2(10);
      l_horas number(10,2):=0;
      l_hora1 number(10,2):=0;
      l_hora2 number(10,2):=0;
      l_sal_diassig number:=0;
      
      l_horasc number(10,2):=0;
      l_hora1c number(10,2):=0;
      l_hora2c number(10,2):=0;
      
      F_HORA_BASE_ENT date;
      F_HORA_BASE_SAL date;
      F_HORA_BASE_ENT_REF date;
      F_HORA_BASE_SAL_REF date;
      
      C_HORA_ENT date;
      C_HORA_SAL_REF date;
      C_HORA_ENT_REF date;
      C_HORA_SAL date;
      
      l_tole_ent number(10,2):=0;
      l_tole_ent_ref number(10,2):=0;
      
      l_id_entidad number;
      l_tard_ent number(10,2):=0;
      l_tard_ent_ref number(10,2):=0;
      
      l_tipo_hora varchar2(15);
      l_id_horario_mensual_det number;
      
      U_ID_TIPO_CONTROL_PERSONAL number;
      U_ID_CONDICION_LABORAL varchar2(10);
      U_ID_SEDEAREA number;
      U_ID_PERFIL_PUESTO number;
      L_ID_MAPA_POLIGONO number;
      l_id_mapa_trabajador number;
      l_id_mapa_area number;
      l_id_depto_padre varchar2(10);
      l_id_area number;
      l_ID_SITUACION_ESPECIAL number;
      L_ID_USERDEVICE number;
      l_id_horario_bloque number;
      L_ID_HORAS_REF number;
      l_id_tipo_tiempo_trabajo number;
      
      S_HORA_ENT varchar2(10);
      S_HORA_SAL_REF varchar2(10);
      S_HORA_ENT_REF varchar2(10);
      S_HORA_SAL varchar2(10);
      l_id_anho  number;
      l_id_mes  number;
      l_id_dia  number;
      l_nro_dia  number;

      BEGIN
      
      select 
      id_entidad
      into l_id_entidad
      from moises.trabajador where id_trabajador=P_ID_TRABAJADOR;
      
      select 
         to_number(to_char(P_FECHA,'YYYY')), 
         to_number(to_char(P_FECHA,'MM')),
         to_number(to_char(P_FECHA,'DD')),
         to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
         into l_id_anho,l_id_mes,l_id_dia,l_nro_dia from dual;
      
     if P_ID_MOTIVO_ASIST in('A','PLH') then
                  
          select 
            ID_MAPA_POLIGONO,
            ID_SITUACION_ESPECIAL,
            ID_TIPO_CONTROL_PERSONAL,
            ID_CONDICION_LABORAL,
            ID_SEDEAREA,
            ID_PERFIL_PUESTO,
            ID_USERDEVICE,
            ID_HORARIO_MENSUAL_DET,
            NUM_TOLE_TAR,
            NUM_TOLE_TAR_REF,
            ID_TIPO_TIEMPO_TRABAJO
            into
            L_ID_MAPA_POLIGONO,
            l_ID_SITUACION_ESPECIAL,
            U_ID_TIPO_CONTROL_PERSONAL,
            U_ID_CONDICION_LABORAL,
            U_ID_SEDEAREA,
            U_ID_PERFIL_PUESTO,
            L_ID_USERDEVICE,
            l_id_horario_mensual_det,
            l_tole_ent,
            l_tole_ent_ref,
            l_id_tipo_tiempo_trabajo
            from ENOC.PLLA_ASISTENCIA_HIST
            where ID_TRABAJADOR=P_ID_TRABAJADOR
            and id_anho=l_id_anho
            and id_mes=l_id_mes
            and id_dia=l_id_dia;
       
        select b.CODIGO into l_tipo_hora from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
        where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
        and a.id_tipo_horario =  P_ID_TIPO_HORARIO;
        
          
          if l_tipo_hora='HM' then
          
            select ID_HORARIO_BLOQUE into l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL_DET where ID_HORARIO_MENSUAL_DET=l_id_horario_mensual_det;
          
            select 
              a.HORA_ENTRADA,
              a.HORA_SALIDA,
              a.HORA_ENTRADA_REF,
              a.HORA_SALIDA_REF,
              a.NUM_HORAS,
              b.codigo,
              coalesce(a.SAL_DIASIG,0),
              TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA, 'YYYY-MM-DD HH24:MI:SS') as hora_entrada_f,
              case when  b.codigo in('REFCMA','DOTU') then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI:SS') else null end as hora_salida_ref_f,
              case when  b.codigo in('REFCMA','DOTU') then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA_REF, 'YYYY-MM-DD HH24:MI:SS') else null end as hora_entrada_ref_f,
              TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA, 'YYYY-MM-DD HH24:MI:SS') as hora_salida_f,
              ID_HORAS_REF
              into
              L_HORA_BASE_ENT,
              L_HORA_BASE_SAL,
              L_HORA_BASE_ENT_REF,
              L_HORA_BASE_SAL_REF,
              L_NUM_HORAS_BASE,
              l_codigo,
              l_sal_diassig,
              F_HORA_BASE_ENT,
              F_HORA_BASE_SAL_REF,
              F_HORA_BASE_ENT_REF,
              F_HORA_BASE_SAL,
              L_ID_HORAS_REF
              from enoc.PLLA_HORARIO_BLOQUE a, ENOC.PLLA_CONTROL_ASIST b 
              where a.ID_CONTROL_ASIST=b.ID_CONTROL_ASIST
              and a.ID_HORARIO_BLOQUE=l_id_horario_bloque;
          else
             select 
              a.HORA_ENTRADA,
              a.HORA_SALIDA,
              a.HORA_ENTRADA_REF,
              a.HORA_SALIDA_REF,
              a.NUM_HORAS,
              b.codigo,
              coalesce(a.SAL_DIASIG,0),
              TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA, 'YYYY-MM-DD HH24:MI:SS') as hora_entrada_f,
              case when  b.codigo in('REFCMA','DOTU') then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI:SS') else null end as hora_salida_ref_f,
              case when  b.codigo in('REFCMA','DOTU') then TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA_REF, 'YYYY-MM-DD HH24:MI:SS') else null end as hora_entrada_ref_f,
              TO_DATE(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA, 'YYYY-MM-DD HH24:MI:SS') as hora_salida_f,
              ID_HORAS_REF
              into
              L_HORA_BASE_ENT,
              L_HORA_BASE_SAL,
              L_HORA_BASE_ENT_REF,
              L_HORA_BASE_SAL_REF,
              L_NUM_HORAS_BASE,
              l_codigo,
              l_sal_diassig,
              F_HORA_BASE_ENT,
              F_HORA_BASE_SAL_REF,
              F_HORA_BASE_ENT_REF,
              F_HORA_BASE_SAL,
              L_ID_HORAS_REF
              from enoc.plla_horario_detalle a, ENOC.PLLA_CONTROL_ASIST b 
              where a.ID_CONTROL_ASIST=b.ID_CONTROL_ASIST
              and a.id_tipo_horario=P_ID_TIPO_HORARIO 
              and a.id_dia=l_nro_dia;
          end if;
            IF P_TIPO='F' THEN
              if l_sal_diassig=1 then
                F_HORA_BASE_SAL:= F_HORA_BASE_SAL + 1;
              end if;
              ---hora real
              select count(*) into l_contar from ENOC.PLLA_HORAS_REF where ID_HORAS_REF=L_ID_HORAS_REF;
              if l_contar>0 then
                select HORA_DEC into L_NUM_REFRIGERIO from ENOC.PLLA_HORAS_REF where ID_HORAS_REF=L_ID_HORAS_REF;
              end if;
              
              if l_codigo in('REFCMA','DOTU') then
                if P_HORA_ENTRADA is not null and P_HORA_SALIDA_REF is not null then
                  select round((P_HORA_SALIDA_REF -  P_HORA_ENTRADA)*24,2) into l_hora1 from dual ;
                else
                  l_hora1 := 0;
                end if;
                if P_HORA_ENTRADA_REF is not null and P_HORA_SALIDA is not null then
                  select round((P_HORA_SALIDA -  P_HORA_ENTRADA_REF)*24,2) into l_hora2 from dual ;
                else
                  l_hora2 := 0;
                end if;
                l_horas := l_hora1 + l_hora2;
              else
                if P_HORA_ENTRADA is not null and P_HORA_SALIDA is not null then
                  select round((P_HORA_SALIDA -  P_HORA_ENTRADA)*24,2) into l_horas from dual ;
                else
                  l_horas := 0;
                end if;
                if l_horas>0 then
                  l_horas:= l_horas - L_NUM_REFRIGERIO;
                end if;
              end if;
              
              
              
              --hora asistencia
               if P_HORA_ENTRADA is not null then
                if P_HORA_ENTRADA>F_HORA_BASE_ENT then
                  C_HORA_ENT:= P_HORA_ENTRADA ;
                else
                  C_HORA_ENT:= F_HORA_BASE_ENT;
                end if;
               end if;
               
               if P_HORA_SALIDA_REF is not null then
                if P_HORA_SALIDA_REF>F_HORA_BASE_SAL_REF then
                  C_HORA_SAL_REF:= F_HORA_BASE_SAL_REF;
                else
                  C_HORA_SAL_REF:= P_HORA_SALIDA_REF;
                end if;
               end if;
               
               if P_HORA_ENTRADA_REF is not null then
                if P_HORA_ENTRADA_REF>F_HORA_BASE_ENT_REF then
                  C_HORA_ENT_REF:= P_HORA_ENTRADA_REF ;
                else
                  C_HORA_ENT_REF:= F_HORA_BASE_ENT_REF;
                end if;
               end if;
               
               if P_HORA_SALIDA is not null then
                if P_HORA_SALIDA>F_HORA_BASE_SAL then
                  C_HORA_SAL:= F_HORA_BASE_SAL;
                else
                  C_HORA_SAL:= P_HORA_SALIDA;
                end if;
               end if;
               -----*-------------
              
              if l_codigo in('REFCMA','DOTU') then
                if C_HORA_ENT is not null and C_HORA_SAL_REF is not null then
                  select round((C_HORA_SAL_REF -  C_HORA_ENT)*24,2) into l_hora1c from dual ;
                else
                  l_hora1c := 0;
                end if;
                if C_HORA_ENT_REF is not null and C_HORA_SAL is not null then
                  select round((C_HORA_SAL -  C_HORA_ENT_REF)*24,2) into l_hora2c from dual ;
                else
                  l_hora2c := 0;
                end if;
                l_horasc := l_hora1c + l_hora2c;
              else
                if C_HORA_ENT is not null and C_HORA_SAL is not null then
                  select round((C_HORA_SAL -  C_HORA_ENT)*24,2) into l_horasc from dual ;
                else
                  l_horasc := 0;
                end if;
                if l_horasc>0 then
                  l_horasc:= l_horasc - L_NUM_REFRIGERIO;
                end if;
              end if;
              
              
              S_HORA_ENT:= TO_CHAR(C_HORA_ENT,'HH24:MI');
              S_HORA_SAL_REF:= TO_CHAR(C_HORA_SAL_REF,'HH24:MI');
              S_HORA_ENT_REF:= TO_CHAR(C_HORA_ENT_REF,'HH24:MI');
              S_HORA_SAL:= TO_CHAR(C_HORA_SAL,'HH24:MI');
      
           ELSE
            S_HORA_ENT:= L_HORA_BASE_ENT;
            S_HORA_SAL_REF:= L_HORA_BASE_SAL_REF;
            S_HORA_ENT_REF:= L_HORA_BASE_ENT_REF;
            S_HORA_SAL:= L_HORA_BASE_SAL;
            l_horasc:=L_NUM_HORAS_BASE;
            l_horas:=L_NUM_HORAS_BASE;
           END IF;
           

 
       end if; 
        l_id_asistencia:=to_char(P_FECHA,'YYYYMMDD')||to_char(P_ID_TRABAJADOR);
        
        select count(*) into l_contar from enoc.PLLA_ASISTENCIA where ID_ASISTENCIA= l_id_asistencia;
        
        
        
        if l_contar =0 then
               
          l_nro_dia:= to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'));
         
  
          
          insert into enoc.PLLA_ASISTENCIA(
            ID_ASISTENCIA,
            ID_TRABAJADOR,
            FECHA,
            ID_ANHO,
            ID_MES,
            ID_DIA,
            NRO_DIA,
            HORA_BASE_ENT,
            HORA_BASE_SAL,
            HORA_BASE_ENT_REF,
            HORA_BASE_SAL_REF,
            NUM_HORAS_BASE,
            NUM_REFRIGERIO,
            HORA_ENTRADA,
            HORA_SALIDA,
            HORA_ENTRADA_REF,
            HORA_SALIDA_REF,
            NUM_HORAS,
            NUM_TOLE_TAR,
            NUM_MINUTOS_TAR_ENT,
            NUM_TOLE_TAR_REF,
            NUM_MINUTOS_TAR_REF,
            NUM_MINUTOS_TAR,
            HORA_ENTRADA_REAL,
            HORA_SALIDA_REAL,
            HORA_ENTRADA_REF_REAL,
            HORA_SALIDA_REF_REAL,
            NUM_HORAS_REAL,
            ID_MOTIVO_ASIST,
            ID_MAPA_POLIGONO,
            ID_SITUACION_ESPECIAL,
            ID_TIPO_CONTROL_PERSONAL,
            id_tipo_tiempo_trabajo,
            ID_TIPO_HORARIO,
            ID_CONDICION_LABORAL,
            ID_SEDEAREA,
            ID_PERFIL_PUESTO,
            ID_USERDEVICE,
            ID_HORARIO_MENSUAL_DET,
            SAL_DIASIG,
            ID_USER_REG,
            FECHA_REG
            
            
          )values(
            l_id_asistencia,
            P_ID_TRABAJADOR,
            P_FECHA,
            to_number(TO_CHAR(P_FECHA,'YYYY')),
            to_number(TO_CHAR(P_FECHA,'MM')),
            to_number(TO_CHAR(P_FECHA,'DD')),
            to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')),
            
            L_HORA_BASE_ENT,
            L_HORA_BASE_SAL,
            L_HORA_BASE_ENT_REF,
            L_HORA_BASE_SAL_REF,
            L_NUM_HORAS_BASE,
            L_NUM_REFRIGERIO,
            
            S_HORA_ENT,--TO_CHAR(C_HORA_ENT,'HH24:MI'),
            S_HORA_SAL,--TO_CHAR(C_HORA_SAL,'HH24:MI'),
            S_HORA_ENT_REF,--TO_CHAR(C_HORA_ENT_REF,'HH24:MI'),
            S_HORA_SAL_REF,--TO_CHAR(C_HORA_SAL_REF,'HH24:MI'),
            l_horasc,
            l_tole_ent,
            0,--l_tard_ent,
            l_tole_ent_ref,
            0,--l_tard_ent_ref,
            0,--l_tard_ent + l_tard_ent_ref,
            TO_CHAR(P_HORA_ENTRADA,'HH24:MI'),
            TO_CHAR(P_HORA_SALIDA,'HH24:MI'),
            TO_CHAR(P_HORA_ENTRADA_REF ,'HH24:MI'),
            TO_CHAR(P_HORA_SALIDA_REF,'HH24:MI'),
            l_horas,
            P_ID_MOTIVO_ASIST,
            L_ID_MAPA_POLIGONO,
            l_ID_SITUACION_ESPECIAL,
            U_ID_TIPO_CONTROL_PERSONAL,
            l_id_tipo_tiempo_trabajo,
            P_ID_TIPO_HORARIO,
            U_ID_CONDICION_LABORAL,
            U_ID_SEDEAREA,
            U_ID_PERFIL_PUESTO,
            L_ID_USERDEVICE,
            l_id_horario_mensual_det,
            l_sal_diassig,
            
            P_ID_USER_REG,
            sysdate
          );
        else

         update PLLA_ASISTENCIA set 
            HORA_BASE_ENT	=	L_HORA_BASE_ENT,
            HORA_BASE_SAL	=	  L_HORA_BASE_SAL,
            HORA_BASE_ENT_REF	=	   L_HORA_BASE_ENT_REF,
            HORA_BASE_SAL_REF	=	   L_HORA_BASE_SAL_REF,
            NUM_HORAS_BASE	=	    L_NUM_HORAS_BASE,
            NUM_REFRIGERIO	=	    L_NUM_REFRIGERIO,
            HORA_ENTRADA	=	     S_HORA_ENT,-- TO_CHAR(C_HORA_ENT,'HH24:MI'),
            HORA_SALIDA	=	       S_HORA_SAL,-- TO_CHAR(C_HORA_SAL,'HH24:MI'),
            HORA_ENTRADA_REF	=	 S_HORA_ENT_REF, --TO_CHAR(C_HORA_ENT_REF,'HH24:MI'),
            HORA_SALIDA_REF	=	   S_HORA_SAL_REF,--  TO_CHAR(C_HORA_SAL_REF,'HH24:MI'),
            NUM_HORAS	=	           l_horasc,
            NUM_TOLE_TAR	=	       l_tole_ent,
            NUM_MINUTOS_TAR_ENT	=	 0,--l_tard_ent,
            NUM_TOLE_TAR_REF	=	     l_tole_ent_ref,
            NUM_MINUTOS_TAR_REF	=	         0,--   l_tard_ent_ref,
            NUM_MINUTOS_TAR	=	           0,-- l_tard_ent + l_tard_ent_ref,
            HORA_ENTRADA_REAL	=	            TO_CHAR(P_HORA_ENTRADA,'HH24:MI'),
            HORA_SALIDA_REAL	=	            TO_CHAR(P_HORA_SALIDA,'HH24:MI'),
            HORA_ENTRADA_REF_REAL	=	            TO_CHAR(P_HORA_ENTRADA_REF ,'HH24:MI'),
            HORA_SALIDA_REF_REAL	=	            TO_CHAR(P_HORA_SALIDA_REF,'HH24:MI'),
            NUM_HORAS_REAL	=	            l_horas,
            ID_MOTIVO_ASIST	=	            P_ID_MOTIVO_ASIST,
            ID_MAPA_POLIGONO	=	            L_ID_MAPA_POLIGONO,
            ID_SITUACION_ESPECIAL	=	            l_ID_SITUACION_ESPECIAL,
            ID_TIPO_CONTROL_PERSONAL	=	            U_ID_TIPO_CONTROL_PERSONAL,
            id_tipo_tiempo_trabajo   =      l_id_tipo_tiempo_trabajo,
            ID_TIPO_HORARIO	=	            P_ID_TIPO_HORARIO,
            ID_CONDICION_LABORAL	=	            U_ID_CONDICION_LABORAL,
            ID_SEDEAREA	=	            U_ID_SEDEAREA,
            ID_PERFIL_PUESTO	=	            U_ID_PERFIL_PUESTO,
            ID_USERDEVICE	=	            L_ID_USERDEVICE,
            ID_HORARIO_MENSUAL_DET	=	            l_id_horario_mensual_det,
            SAL_DIASIG	=	            l_sal_diassig,
            ID_USER_MOD=P_ID_USER_REG,
            FECHA_MOD = sysdate
         where id_asistencia = l_id_asistencia; 
         

        end if;
        
       if P_ID_MOTIVO_ASIST='A' and  P_TIPO='F' and ( C_HORA_ENT is not null  OR  C_HORA_ENT_REF is not null) then
        PKG_ASSISTANCE.SP_GENERAR_TARDANZA(l_id_asistencia,P_ID_USER_REG);
       end if;
        
      END SP_REGISTRAR_ASISTENCIA;
      
      PROCEDURE SP_GENERAR_TARDANZA(P_ID_ASISTENCIA VARCHAR2,P_ID_USER_REG number) IS
      
       l_num_tole_tar number:=0;
       l_num_tole_tar_ref number:=0;
       l_fecha date;
       l_id_entidad number;
       
       L_HORA_ENTRADA VARCHAR2(10);
       L_HORA_BASE_ENT  VARCHAR2(10);
       L_HORA_ENTRADA_REF  VARCHAR2(10);
       L_HORA_BASE_ENT_REF  VARCHAR2(10);
       L_HORA_SALIDA  VARCHAR2(10);
       L_HORA_BASE_SAL  VARCHAR2(10);
       L_HORA_SALIDA_REF  VARCHAR2(10);
       L_HORA_BASE_SAL_REF  VARCHAR2(10);
       
       F_HORA_ENTRADA DATE;
       F_HORA_BASE_ENT  DATE;
       F_HORA_ENTRADA_REF  DATE;
       F_HORA_BASE_ENT_REF  DATE;
       F_HORA_SALIDA  DATE;
       F_HORA_BASE_SAL  DATE;
       F_HORA_SALIDA_REF  DATE;
       F_HORA_BASE_SAL_REF  DATE;
       
       N_MINUTOS_TAR_ENT NUMBER(10,2):= 0;
       N_MINUTOS_TAR_REF NUMBER(10,2):= 0;
       N_MINUTOS_TAR NUMBER(10,2):= 0;
       N_MINUTOS_TAR_SAL NUMBER(10,2):= 0; 
       N_MINUTOS_TAR_SAL_REF NUMBER(10,2):= 0;
       
       l_contar NUMBER;
       l_id_trabajador NUMBER;
        
      BEGIN
      
      --Generar tardanza
        select 
        FECHA, 
        HORA_ENTRADA,
        HORA_BASE_ENT,
        HORA_ENTRADA_REF,
        HORA_BASE_ENT_REF,
        HORA_SALIDA,
        HORA_BASE_SAL,
        HORA_SALIDA_REF,
        HORA_BASE_SAL_REF,
        NUM_TOLE_TAR, 
        NUM_TOLE_TAR_REF,
        ID_TRABAJADOR
        into 
        l_fecha,
        L_HORA_ENTRADA,
        L_HORA_BASE_ENT,
        L_HORA_ENTRADA_REF,
        L_HORA_BASE_ENT_REF,
        L_HORA_SALIDA,
        L_HORA_BASE_SAL,
        L_HORA_SALIDA_REF,
        L_HORA_BASE_SAL_REF,
        l_num_tole_tar,
        l_num_tole_tar_ref,
        l_id_trabajador
        from plla_asistencia 
        where id_asistencia=P_ID_ASISTENCIA;
        
        
        update PLLA_ASISTENCIA set
            NUM_MINUTOS_TAR_ENT  = 0,
            NUM_MINUTOS_TAR_REF  =  0,
            NUM_MINUTOS_TAR  = 0,
            NUM_MINUTOS_TAR_SAL=0, 
            NUM_MINUTOS_TAR_SAL_REF=0, 
            ID_USER_REG = P_ID_USER_REG,
            FECHA_REG = sysdate
         WHERE ID_ASISTENCIA= P_ID_ASISTENCIA;
         

        --TARDANZA ENTRADA
        IF L_HORA_ENTRADA IS NOT NULL THEN
          F_HORA_ENTRADA:=TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_ENTRADA, 'YYYY-MM-DD HH24:MI:SS');
          F_HORA_BASE_ENT:=(TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_BASE_ENT, 'YYYY-MM-DD HH24:MI:SS') + l_num_tole_tar / 1440);
          IF F_HORA_ENTRADA>F_HORA_BASE_ENT THEN

            N_MINUTOS_TAR_ENT:= round((F_HORA_ENTRADA - F_HORA_BASE_ENT)*1440,2);
            IF N_MINUTOS_TAR_ENT>0  THEN
              update PLLA_ASISTENCIA set
                NUM_TOLE_TAR  = l_num_tole_tar,
                NUM_MINUTOS_TAR_ENT  =  N_MINUTOS_TAR_ENT,
                ID_USER_REG = P_ID_USER_REG,
                FECHA_REG = sysdate
              WHERE ID_ASISTENCIA= P_ID_ASISTENCIA;
            END IF;
          END IF;
        END IF;
        
        --ANTES DE SALIDA REF
        IF L_HORA_SALIDA_REF IS NOT NULL THEN
          F_HORA_SALIDA_REF:=(TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI:SS') + l_num_tole_tar_ref / 1440);
          F_HORA_BASE_ENT_REF:= TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI:SS');
          IF F_HORA_SALIDA_REF<F_HORA_BASE_ENT_REF THEN
            
            N_MINUTOS_TAR_SAL_REF:= round((F_HORA_BASE_ENT-F_HORA_ENTRADA)*1440,2);
            IF N_MINUTOS_TAR_SAL_REF>0 THEN
              update PLLA_ASISTENCIA set
                NUM_TOLE_TAR  = l_num_tole_tar_ref,
                NUM_MINUTOS_TAR_SAL_REF  =  N_MINUTOS_TAR_SAL_REF,
                ID_USER_REG = P_ID_USER_REG,
                FECHA_REG = sysdate
              WHERE ID_ASISTENCIA= P_ID_ASISTENCIA;
            END IF;
          END IF;
        END IF;
        
        --TARDANZA ENTRADA REF
        IF L_HORA_ENTRADA_REF IS NOT NULL THEN
          F_HORA_ENTRADA_REF:=TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_ENTRADA_REF, 'YYYY-MM-DD HH24:MI:SS');
          F_HORA_BASE_ENT_REF:=(TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_BASE_ENT_REF, 'YYYY-MM-DD HH24:MI:SS') + l_num_tole_tar_ref / 1440);
          IF F_HORA_ENTRADA_REF>F_HORA_BASE_ENT_REF THEN
            
            N_MINUTOS_TAR_REF:= round((F_HORA_ENTRADA_REF - F_HORA_BASE_ENT_REF)*1440,2);
            IF N_MINUTOS_TAR_REF>0  THEN
              update PLLA_ASISTENCIA set
                NUM_TOLE_TAR_REF  = l_num_tole_tar_ref,
                NUM_MINUTOS_TAR_REF  =  N_MINUTOS_TAR_REF,
                ID_USER_REG = P_ID_USER_REG,
                FECHA_REG = sysdate
              WHERE ID_ASISTENCIA= P_ID_ASISTENCIA;
            END IF;
          END IF;
        END IF;
        
        --ANTES DE SALIDA 
        
        IF L_HORA_SALIDA IS NOT NULL THEN
          F_HORA_SALIDA:=(TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_SALIDA, 'YYYY-MM-DD HH24:MI:SS') + l_num_tole_tar / 1440);
          F_HORA_BASE_SAL:= TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||L_HORA_BASE_SAL, 'YYYY-MM-DD HH24:MI:SS');
          IF F_HORA_SALIDA<F_HORA_BASE_SAL THEN
            
            N_MINUTOS_TAR_SAL:= round((F_HORA_BASE_SAL-F_HORA_SALIDA)*1440,2);
            IF N_MINUTOS_TAR_SAL>0 THEN
              update PLLA_ASISTENCIA set
                NUM_TOLE_TAR  = l_num_tole_tar,
                NUM_MINUTOS_TAR_SAL  =  N_MINUTOS_TAR_SAL,
                ID_USER_REG = P_ID_USER_REG,
                FECHA_REG = sysdate
              WHERE ID_ASISTENCIA= P_ID_ASISTENCIA;
            END IF;
          END IF;
        END IF;

        update PLLA_ASISTENCIA set
            NUM_MINUTOS_TAR  = NUM_MINUTOS_TAR_ENT + NUM_MINUTOS_TAR_REF + NUM_MINUTOS_TAR_SAL + N_MINUTOS_TAR_SAL_REF,
            ID_USER_REG = P_ID_USER_REG,
            FECHA_REG = sysdate
         WHERE ID_ASISTENCIA= P_ID_ASISTENCIA;
        
        
      END SP_GENERAR_TARDANZA;
      
      
      PROCEDURE SP_CONTROL_ASISTENCIA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
      BEGIN
        
         --vacaciones
        PKG_BENEFITS.SP_CONTROL_VACACION(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_USER_REG,l_error,l_msgerror);
        if l_error<>0 then
          GOTO SALIDA;
        end if;
        --permiso licencia/permiso especial
        PKG_BENEFITS.SP_CONTROL_PERMISO_LIC(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_USER_REG,l_error,l_msgerror);
        if l_error<>0 then
          GOTO SALIDA;
        end if;
        --generar faltas automaticas
         PKG_ASSISTANCE.SP_CONTROL_GENERAR_FALTA(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_USER_REG,l_error,l_msgerror);
          if l_error<>0 then
            GOTO SALIDA;
          end if;
        --asistencia
        PKG_ASSISTANCE.SP_CONTROL_LABORAL(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_USER_REG,l_error,l_msgerror);
        if l_error<>0 then
          GOTO SALIDA;
        end if;
        --generar sobretiempo
       
        PKG_ASSISTANCE.SP_CONTROL_SOBRETIEMPO(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_USER_REG,l_error,l_msgerror);
        if l_error<>0 then
          GOTO SALIDA;
        end if;
        
        --generar tardanza
        PKG_ASSISTANCE.SP_CONTROL_GENERAR_TARDANZA(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_USER_REG,l_error,l_msgerror);
        if l_error<>0 then
          GOTO SALIDA;
        end if;
        <<SALIDA>>
        
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
        
      END SP_CONTROL_ASISTENCIA;
      
      PROCEDURE SP_CONTROL_LABORAL(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        l_id_control_asistencia varchar2(25);
        l_item number;
          
        l_fec_actual_as date;
        l_fec_desde_as date;
        l_fec_hasta_as date;
        

        l_id_motivo_asist varchar2(2):='A';
     
        
 
        l_contar number;
               
      
      BEGIN
      
      l_fec_actual_as:= current_date;
      l_fec_desde_as := to_date(to_char(P_ID_ANHO)||'-'||to_char(P_ID_MES)||'-01','YYYY-MM-DD');
      l_fec_hasta_as := LAST_DAY(l_fec_desde_as);
      
      if l_fec_desde_as>l_fec_actual_as then
          l_error:=1;
          l_msgerror:='Fecha desde es mayor que fecha actual';
          GOTO salida_asist;
      end if;
    
      if l_fec_hasta_as>l_fec_actual_as then
          l_fec_hasta_as := l_fec_actual_as;
      end if;
      
      
          
      delete from PLLA_CONTROL_ASISTENCIA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
      and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
      AND ID_SEDEAREA IN(
        SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
      );
      
      
      WHILE l_fec_desde_as<=l_fec_hasta_as LOOP
      
        select coalesce(max(ITEM),0)  into l_item from PLLA_CONTROL_ASISTENCIA where to_char(FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_as,'YYYY-MM-DD') and ID_MOTIVO_ASIST=l_id_motivo_asist;
        /*
       INSERT INTO PLLA_CONTROL_ASISTENCIA(          
          ID_CONTROL_ASISTENCIA,
          ITEM,
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_MOTIVO_ASIST,
          FECHA,
          HORA_DESDE_REAL,
          HORA_HASTA_REAL,
          HORA_DESDE_PLA,
          HORA_HASTA_PLA,
          NUM_HORAS_REF,
          NUM_HORAS_REAL,
          NUM_HORAS_PLA,
          ID_ASISTENCIA,
          ID_USER_REG,
          FECHA_REG,
          HORA_ENTRADA_BASE,
          HORA_SALIDA_BASE,
          NUM_HORAS_BASE
        )
      
        select 
          to_char(FECHA,'YYYYMMDD')||l_id_motivo_asist||to_char((row_number() OVER( ORDER BY a.ID_ASISTENCIA ASC ))+l_item) AS ID_CONTROL_ASISTENCIA,
          (row_number() OVER( ORDER BY a.ID_ASISTENCIA ASC ))+l_item AS ITEM,
          a.ID_TRABAJADOR,
          a.ID_SEDEAREA,
          l_id_motivo_asist,
          a.FECHA,
          a.ENTRADA, 
          a.SALIDA,
          a.HORA_ENTRADA_PLA,
          a.HORA_SALIDA_PLA,
          a.NUM_REF_PLA,
          a.NUM_HORAS_FINAL,
          a.NUM_HORAS_PLA,
          a.ID_ASISTENCIA,
          P_ID_USER_REG,
          SYSDATE,
          a.HORA_BASE_ENT,
          a.HORA_BASE_SAL,
          a.NUM_HORAS_BASE
        from VW_ASISTENCIA a
        WHERE TO_CHAR(a.FECHA,'YYYY-MM-DD')= to_char(l_fec_desde_as,'YYYY-MM-DD')
        AND a.ID_TRABAJADOR NOT IN(
          SELECT b.ID_TRABAJADOR from  PLLA_CONTROL_ASISTENCIA  b
          where to_char(b.FECHA,'YYYY-MM-DD')=to_char(l_fec_desde_as,'YYYY-MM-DD') 
          and b.ID_MOTIVO_ASIST in('FA','V','PL','A')
        )
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        )
        AND case when P_ID_TRABAJADOR=0 then 0 else a.ID_TRABAJADOR end = P_ID_TRABAJADOR 
        ORDER BY a.ID_ASISTENCIA;
        */
        l_fec_desde_as := l_fec_desde_as + 1;
        
     END LOOP;
      
      <<salida_asist>>
      
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
      
      END SP_CONTROL_LABORAL;
      
      
      PROCEDURE SP_CONTROL_GENERAR_FALTA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_id_motivo_asist varchar2(2):='FA';
        l_item number;
        l_id_tipo_suspension number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
      BEGIN
      
      /*
        delete from PLLA_FALTAS where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
        AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        ); 
      */
        --select coalesce(max(ITEM),0)  into l_item from PLLA_FALTAS where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES;
        
        select id_tipo_suspension into l_id_tipo_suspension from plla_tipo_suspension where codsunat='07';
        
        /*
        INSERT INTO PLLA_FALTAS(
            ID_FALTAS,
            ITEM,
            ID_TRABAJADOR,
            ID_TIPO_SUSPENSION,
            ID_SEDEAREA,
            FECHA,
            ID_USER_REG,
            FECHA_REG
          )
      
        SELECT 
         to_char(FECHA,'YYYYMMDD')||l_id_motivo_asist||to_char((row_number() OVER(PARTITION BY A.FECHA  ORDER BY A.ID_ASISTENCIA ASC ))+l_item) AS ID_CONTROL_ASISTENCIA,
         (row_number() OVER( PARTITION BY A.FECHA  ORDER BY A.ID_ASISTENCIA ASC ))+l_item AS ITEM,
         A.ID_TRABAJADOR,
         l_id_tipo_suspension,
         A.ID_SEDEAREA,
         A.FECHA,
         P_ID_USER_REG,
         SYSDATE
        FROM VW_ASISTENCIA A 
        WHERE A.ID_MOTIVO_ASIST='A'
        AND to_number(to_char(A.FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(A.FECHA,'MM'))=P_ID_MES
        AND A.HORA_BASE_ENT IS NOT NULL
        AND A.ID_TRABAJADOR NOT IN(
          SELECT b.ID_TRABAJADOR from  PLLA_CONTROL_ASISTENCIA  b
          where to_char(b.FECHA,'YYYY-MM-DD')=to_char(A.FECHA,'YYYY-MM-DD')
          and b.ID_MOTIVO_ASIST in('V','PL','A')
        ) AND to_char(A.FECHA,'YYYY-MM-DD') NOT IN(
          SELECT to_char(X.FECHA,'YYYY-MM-DD') FROM PLLA_FERIADOS X
        ) AND A.ENTRADA IS NULL 
        AND A.SALIDA IS NULL
        AND COALESCE(A.NUM_HORAS_FINAL,0)=0
        AND A.ID_TIPO_CONTROL_PERSONAL=3 --FISCALIZABLE
        AND case when P_ID_TRABAJADOR=0 then 0 else A.ID_TRABAJADOR end = P_ID_TRABAJADOR 
        ORDER BY A.ID_ASISTENCIA;
        */
        
        delete from PLLA_CONTROL_ASISTENCIA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
        and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        );
      /*
        insert into PLLA_CONTROL_ASISTENCIA(
            ID_CONTROL_ASISTENCIA,
            ITEM,
            ID_TRABAJADOR,
            ID_SEDEAREA,
            ID_MOTIVO_ASIST,
            FECHA,
            ID_FALTAS,
            ID_USER_REG,
            FECHA_REG
              )
        SELECT 
        ID_FALTAS,
        ITEM,
        ID_TRABAJADOR,
        ID_SEDEAREA,
        l_id_motivo_asist,
        FECHA,
        ID_FALTAS,
        P_ID_USER_REG,
        SYSDATE
        FROM PLLA_FALTAS
        WHERE to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
        AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        );
              
        update PLLA_ASISTENCIA 
        set  ID_MOTIVO_ASIST = l_id_motivo_asist
        where ID_TRABAJADOR IN(
          SELECT X.ID_TRABAJADOR FROM PLLA_CONTROL_ASISTENCIA X
          WHERE to_char(X.FECHA,'YYYY-MM-DD')=to_char(FECHA,'YYYY-MM-DD')
          and x.ID_FALTAS is not null
          and X.ID_MOTIVO_ASIST = l_id_motivo_asist
        )
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        )
        AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR;
        */
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
        
      END SP_CONTROL_GENERAR_FALTA;
      
      PROCEDURE SP_CONTROL_GENERAR_TARDANZA(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
     
        l_item number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
       
      BEGIN
      
      
        delete from PLLA_TARDANZA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
        AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        ); 
      
        select coalesce(max(ITEM),0)  into l_item from PLLA_TARDANZA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES;
        
      
        /*
        INSERT INTO PLLA_TARDANZA(
            ID_TARDANZA,
            ITEM,
            ID_TRABAJADOR,
            ID_SEDEAREA,
            FECHA,
            ENTRADA_BASE,
            ENTRADA,
            ENTRADA_REF_BASE,
            ENTRADA_REF,
            NUM_TOLE_TAR,
            NUM_MINUTOS_TAR,
            NUM_TOLE_TAR_REF,
            NUM_MINUTOS_TAR_REF,
            ID_USER_REG,
            FECHA_REG,
            ID_ASISTENCIA
          )
      
        SELECT 
         to_char(FECHA,'YYYYMMDD')||'TA'||to_char((row_number() OVER(PARTITION BY A.FECHA  ORDER BY A.ID_ASISTENCIA ASC ))+l_item) AS ID_CONTROL_ASISTENCIA,
         (row_number() OVER( PARTITION BY A.FECHA  ORDER BY A.ID_ASISTENCIA ASC ))+l_item AS ITEM,
         A.ID_TRABAJADOR ,
         A.ID_SEDEAREA,
         A.FECHA,
         A.HORA_BASE_ENT,
         A.ENTRADA,
         A.HORA_BASE_ENT_REF,
         COALESCE(A.HORA_ENTRADA_REF_MOD,A.HORA_ENTRADA_REF),
         A.NUM_TOLE_TAR,
         A.NUM_MINUTOS_TAR,
         A.NUM_TOLE_TAR_REF,
         A.NUM_MINUTOS_TAR_REF,
         P_ID_USER_REG,
         SYSDATE,
         A.ID_ASISTENCIA
        FROM VW_ASISTENCIA A 
        WHERE A.ID_MOTIVO_ASIST='A'
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        )
        AND to_number(to_char(A.FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(A.FECHA,'MM'))=P_ID_MES
        AND (A.ENTRADA IS NOT NULL OR COALESCE(A.HORA_ENTRADA_REF_MOD,A.HORA_ENTRADA_REF) IS NOT NULL)
        AND (COALESCE(A.NUM_MINUTOS_TAR,0)>0  OR COALESCE(A.NUM_MINUTOS_TAR_REF,0)>0)
        AND A.ID_TIPO_CONTROL_PERSONAL=3 --FISCALIZABLE
        AND case when P_ID_TRABAJADOR=0 then 0 else A.ID_TRABAJADOR  end = P_ID_TRABAJADOR 
        ORDER BY A.ID_ASISTENCIA;
        */
        --justificacion

        MERGE INTO PLLA_TARDANZA C 
                USING (
                  SELECT L.ID_LICENCIA_PERMISO,T.ID_TARDANZA,S.TIPO 
                  FROM PLLA_TARDANZA T,ENOC.VW_LICENCIA_PERMISO L, PLLA_TIPO_SUSPENSION S
                  WHERE L.ID_TIPO_SUSPENSION=S.ID_TIPO_SUSPENSION
                  AND T.ID_TRABAJADOR=L.ID_TRABAJADOR
                  AND to_char(T.FECHA,'YYYY-MM-DD')=to_char(L.FECHA_DESDE,'YYYY-MM-DD')
                  AND to_number(to_char(L.FECHA_DESDE,'YYYY'))=P_ID_ANHO 
                  and to_number(to_char(L.FECHA_DESDE,'MM'))=P_ID_MES
                  AND L.PERIODO='H'
                  AND L.ID_ESTADO_LICA_PER='02'
                  --AND L.TIEMPO IN('E')
                  AND T.NUM_MINUTOS_TAR>0
                  AND T.ID_SEDEAREA IN(
                    SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
                  )
                  AND case when P_ID_TRABAJADOR=0 then 0 else L.ID_TRABAJADOR  end = P_ID_TRABAJADOR 
            )Y
        ON (C.ID_TARDANZA=Y.ID_TARDANZA)
        WHEN  MATCHED THEN UPDATE SET 
          C.ID_LICENCIA_PERMISO = Y.ID_LICENCIA_PERMISO,
          C.ESTADO=CASE WHEN Y.TIPO='SI' THEN 'J' ELSE NULL END,
          C.ID_USER_REG=P_ID_USER_REG,
          C.FECHA_REG=SYSDATE;
        
        
        MERGE INTO PLLA_TARDANZA C 
                USING (
                  SELECT  L.ID_LICENCIA_PERMISO,T.ID_TARDANZA,S.TIPO 
                  FROM PLLA_TARDANZA T,ENOC.VW_LICENCIA_PERMISO L,PLLA_TIPO_SUSPENSION S
                  WHERE  L.ID_TIPO_SUSPENSION=S.ID_TIPO_SUSPENSION
                  AND T.ID_TRABAJADOR=L.ID_TRABAJADOR
                  AND to_char(T.FECHA,'YYYY-MM-DD')=to_char(L.FECHA_DESDE,'YYYY-MM-DD')
                  AND to_number(to_char(L.FECHA_DESDE,'YYYY'))=P_ID_ANHO 
                  and to_number(to_char(L.FECHA_DESDE,'MM'))=P_ID_MES
                  AND L.PERIODO='H'
                  AND L.ID_ESTADO_LICA_PER='02'
                 -- AND L.TIEMPO IN('ER')
                  AND T.NUM_MINUTOS_TAR_REF>0
                  AND T.ID_SEDEAREA IN(
                    SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
                  )
                  AND case when P_ID_TRABAJADOR=0 then 0 else L.ID_TRABAJADOR end = P_ID_TRABAJADOR
            )Y
        ON (C.ID_TARDANZA=Y.ID_TARDANZA)
        WHEN  MATCHED THEN UPDATE SET 
          C.ID_LICENCIA_PERMISO_REF = Y.ID_LICENCIA_PERMISO,
          C.ESTADO=CASE WHEN Y.TIPO='SI' THEN 'J' ELSE NULL END,
          C.ID_USER_REG=P_ID_USER_REG,
          C.FECHA_REG=SYSDATE;
          
        
       /*
        UPDATE PLLA_ASISTENCIA SET
        JUSTIFICADO=NULL,
        ID_USER_REG=P_ID_USER_REG,
        FECHA_REG=SYSDATE
        WHERE JUSTIFICADO='J'
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        )
        AND to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
        AND ID_TIPO_CONTROL_PERSONAL=3 --FISCALIZABLE
        AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR;
       
        UPDATE PLLA_ASISTENCIA SET
        JUSTIFICADO='S',
        ID_USER_REG=P_ID_USER_REG,
        FECHA_REG=SYSDATE
        WHERE ID_MOTIVO_ASIST='A'
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        )
        AND ID_ASISTENCIA IN(
          SELECT ID_ASISTENCIA from PLLA_TARDANZA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
          AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
          AND ID_SEDEAREA IN(
            SELECT ID_SEDEAREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
          ) AND ESTADO='J'
        )
        AND to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
        AND (COALESCE(HORA_ENTRADA_MOD,HORA_ENTRADA) IS NOT NULL OR COALESCE(HORA_ENTRADA_REF_MOD,HORA_ENTRADA_REF) IS NOT NULL)
        AND (COALESCE(NUM_MINUTOS_TAR,0)>0  OR COALESCE(NUM_MINUTOS_TAR_REF,0)>0)
        AND ID_TIPO_CONTROL_PERSONAL=3 --FISCALIZABLE
        AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR;
        */
        
        
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;     
        
      END SP_CONTROL_GENERAR_TARDANZA;
      
      PROCEDURE SP_CONTROL_SOBRETIEMPO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TRABAJADOR NUMBER,P_ID_USER_REG NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_sobretiempo varchar2(25);
        l_id_trabajador number;
        l_tipo varchar2(5);
        l_id_sedearea number;
        l_fecha date;
        l_hora_desde varchar2(10);
        l_hora_hasta varchar2(10);
        l_hasta_rango date;
        l_desde_rango date;
        l_rango  number:=0;
        l_entrada varchar2(10 byte); 
        l_salida varchar2(10 byte); 
        l_contar_rango number:=0;
        l_hora_base_ent VARCHAR2(10 BYTE); 
        l_hora_base_sal VARCHAR2(10 BYTE); 
        l_id_tipo_horario NUMBER; 
        l_id_tipo_control_personal NUMBER;
        l_dia number;
        l_horas number;
        l_horas_final number;
        l_horasrefrigerio number;
        l_num_horas number;
        
        l_entrada_mod varchar2(10 byte); 
        l_salida_mod varchar2(10 byte); 
        
        l_entrada_final varchar2(10 byte); 
        l_salida_final varchar2(10 byte); 
        
        l_id_motivo_asist varchar2(2):='S';
   
        
        CURSOR curSB IS SELECT
          A.ID_SOBRETIEMPO,
          A.ID_TRABAJADOR,
          null,--A.TIPO,
          A.ID_SEDEAREA,
          A.FECHA,
          A.HORA_DESDE,
          A.HORA_HASTA,
          null ,--case when A.TIPO in('HE','BH') then 0 else coalesce(A.HORASREFRIGERIO,0) end ,
          A.NUM_HORAS,
          to_number(TO_CHAR(A.FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')),
          null,--A.HORA_DESDE_MOD,
          null --A.HORA_HASTA_MOD
          FROM PLLA_SOBRETIEMPO A, ELISEO.ORG_SEDE_AREA S
          WHERE A.ID_SEDEAREA=S.ID_SEDEAREA
          AND S.ID_ENTIDAD = P_ID_ENTIDAD
          AND A.ID_ESTADO_SOBRETIEMPO='03'
          AND S.ID_DEPTO LIKE P_ID_DEPTO||'%'
          AND to_number(to_char(A.FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(A.FECHA,'MM'))=P_ID_MES
          AND case when P_ID_TRABAJADOR=0 then 0 else A.ID_TRABAJADOR end = P_ID_TRABAJADOR
          ORDER BY A.ID_TRABAJADOR,A.FECHA;
          
      BEGIN
        l_rango:=45;
        
        
        
        OPEN curSB;
        FETCH curSB INTO l_id_sobretiempo,l_id_trabajador,l_tipo,l_id_sedearea,l_fecha,l_hora_desde,l_hora_hasta,l_horasrefrigerio,l_num_horas,l_dia,l_entrada_mod,l_salida_mod;
      
        WHILE curSB%FOUND LOOP
        
          l_entrada:=null;
          l_salida:=null;
          l_hora_base_ent:='';
          l_hora_base_sal:='';
          
          l_entrada_final :=''; 
          l_salida_final :=''; 
          
          l_horas_final:=0;          

          l_horas:=0;
          
          select id_tipo_horario,id_tipo_control_personal into l_id_tipo_horario,l_id_tipo_control_personal from MOISES.TRABAJADOR where id_trabajador=l_id_trabajador;
 
          
          select count(*) into l_contar from PLLA_HORARIO_DETALLE where id_tipo_horario=l_id_tipo_horario and ID_DIA=l_dia;
          
          if l_contar>0 then
            select hora_entrada,hora_salida into l_hora_base_ent,l_hora_base_sal from PLLA_HORARIO_DETALLE where id_tipo_horario=l_id_tipo_horario and ID_DIA=l_dia;
          end if;

          if l_tipo in('HE','BH') then
            l_entrada:=l_hora_desde;
            
            l_desde_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde, 'YYYY-MM-DD HH24:MI:SS');
            
           
            
            select count(*) into l_contar_rango 
            from  PLLA_ASIST_MARCACION 
            where id_trabajador=l_id_trabajador 
            and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
            and FECHAHORA >= l_desde_rango;
            
            if l_contar_rango>0 then
              select to_char(max(FECHAHORA),'HH24:MI') into l_salida 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador 
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and FECHAHORA >= l_desde_rango;
            else
              l_desde_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde, 'YYYY-MM-DD HH24:MI:SS');
            
              l_hasta_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_hasta, 'YYYY-MM-DD HH24:MI:SS');
              
              select count(*) into l_contar_rango 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador 
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and (FECHAHORA between l_desde_rango and  l_hasta_rango);
              
              if l_contar_rango>0 then
                select to_char(max(FECHAHORA),'HH24:MI') into l_salida 
                from PLLA_ASIST_MARCACION 
                where id_trabajador=l_id_trabajador 
                and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
                and (FECHAHORA between l_desde_rango and  l_hasta_rango);
              end if;
            end if;
            

          else
            l_desde_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde, 'YYYY-MM-DD HH24:MI:SS') - l_rango / 1440;
            if l_num_horas>1 then
              l_hasta_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde, 'YYYY-MM-DD HH24:MI:SS') + l_rango / 1440;
            else
              l_hasta_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde, 'YYYY-MM-DD HH24:MI:SS') + 20 / 1440;
            end if;
            
            --entrada
            select count(*) into l_contar_rango 
            from  PLLA_ASIST_MARCACION 
            where id_trabajador=l_id_trabajador 
            and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
            and FECHAHORA >= l_desde_rango
            and FECHAHORA<l_hasta_rango;
            
            if l_contar_rango>0 then
              select to_char(max(FECHAHORA),'HH24:MI') into l_entrada 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador 
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and FECHAHORA >= l_desde_rango
              and FECHAHORA<l_hasta_rango;
            end if;
            
            --salida
            select count(*) into l_contar_rango 
            from  PLLA_ASIST_MARCACION 
            where id_trabajador=l_id_trabajador 
            and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
            and FECHAHORA >= l_hasta_rango;
            
            if l_contar_rango>0 then
              select to_char(max(FECHAHORA),'HH24:MI') into l_salida 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador  
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and FECHAHORA >= l_hasta_rango;
            else
              if l_entrada is not null then
                l_desde_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_entrada, 'YYYY-MM-DD HH24:MI:SS');
              
                l_hasta_rango := TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_hasta, 'YYYY-MM-DD HH24:MI:SS');
                
                select count(*) into l_contar_rango  
                from PLLA_ASIST_MARCACION 
                where id_trabajador=l_id_trabajador  
                and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
                and FECHAHORA > l_desde_rango
                and FECHAHORA<=l_hasta_rango;
                if l_contar_rango>0 then
                  select to_char(max(FECHAHORA),'HH24:MI') into l_salida 
                  from PLLA_ASIST_MARCACION 
                  where id_trabajador=l_id_trabajador  
                  and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
                  and FECHAHORA > l_desde_rango
                  and FECHAHORA<=l_hasta_rango;
                end if;
              end if;
            end if;
   
          end if;
          
           if l_entrada is not null and l_salida is not null then
              select round((TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_salida, 'YYYY-MM-DD HH24:MI:SS') -  TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_entrada, 'YYYY-MM-DD HH24:MI:SS'))*24,2) - l_horasrefrigerio  into l_horas from dual ;
          end if;
          
 
          if TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||coalesce(l_entrada_mod,l_entrada), 'YYYY-MM-DD HH24:MI:SS')<TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde, 'YYYY-MM-DD HH24:MI:SS') then
            l_entrada_final := l_hora_desde;
          else
            l_entrada_final := coalesce(l_entrada_mod,l_entrada);
          end if;
            
          if TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||coalesce(l_salida_mod,l_salida), 'YYYY-MM-DD HH24:MI:SS')>TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_hasta, 'YYYY-MM-DD HH24:MI:SS') then
            l_salida_final := l_hora_hasta;
          else
            l_salida_final := coalesce(l_salida_mod,l_salida);
          end if;
          
           if l_entrada_final is not null and l_salida_final is not null then
              select round((TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_salida_final, 'YYYY-MM-DD HH24:MI:SS') -  TO_DATE(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_entrada_final, 'YYYY-MM-DD HH24:MI:SS'))*24,2) - l_horasrefrigerio  into l_horas_final from dual ;
          end if;
          
          if l_horas_final is null then
           l_horas_final:=0;
          end if;
          
          if l_horas is null then
           l_horas:=0;
          end if;
                    
          if (l_entrada is not null and l_salida is not null and l_horas>0) or (l_horas_final>0) then
            update PLLA_SOBRETIEMPO set
              HORA_DESDE_REAL = l_entrada,
              HORA_HASTA_REAL = l_salida,
              NUM_HORAS_REAL = l_horas,
              --NUM_HORAS_FINAL = l_horas_final,
              HORAS_PEND = case when l_tipo in('BH') then l_horas else case when l_tipo in('FE','DJ') and COMPENSADO='S' then l_horas else 0 end end,
              ID_USER_REG = P_ID_USER_REG,
              FECHA_REG = sysdate,
              HORA_BASE_ENT = l_hora_base_ent,
              HORA_BASE_SAL = l_hora_base_sal,
              ID_TIPO_HORARIO = l_id_tipo_horario,
              ID_TIPO_CONTROL_PERSONAL = l_id_tipo_control_personal
              --HORA_DESDE_FINAL = l_entrada_final
              --HORA_HASTA_FINAL = l_salida_final
            where ID_SOBRETIEMPO = l_id_sobretiempo;
          else
            update PLLA_SOBRETIEMPO set
              HORA_DESDE_REAL = null,
              HORA_HASTA_REAL = null,
              NUM_HORAS_REAL = 0,
              --NUM_HORAS_FINAL = 0,
              HORAS_PEND = 0,
              ID_USER_REG = P_ID_USER_REG,
              FECHA_REG = sysdate,
              HORA_BASE_ENT = null,
              HORA_BASE_SAL = null,
              ID_TIPO_HORARIO = null,
              ID_TIPO_CONTROL_PERSONAL = null
              --HORA_DESDE_FINAL = null
              --HORA_HASTA_FINAL = null
            where ID_SOBRETIEMPO = l_id_sobretiempo;
          end if;
          
          FETCH curSB INTO l_id_sobretiempo,l_id_trabajador,l_tipo,l_id_sedearea,l_fecha,l_hora_desde,l_hora_hasta,l_horasrefrigerio,l_num_horas,l_dia,l_entrada_mod,l_salida_mod;
                    
        END LOOP;
        CLOSE curSB;
        
        delete from PLLA_CONTROL_ASISTENCIA where to_number(to_char(FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(FECHA,'MM'))=P_ID_MES
        and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ID_SEDEAREA IN(
          SELECT ID_SEDEAREA FROM eliseo.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        );
        /*
        INSERT INTO PLLA_CONTROL_ASISTENCIA(          
          ID_CONTROL_ASISTENCIA,
          ITEM,
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_MOTIVO_ASIST,
          FECHA,
          HORA_DESDE_REAL,
          HORA_HASTA_REAL,
          HORA_DESDE_PLA,
          HORA_HASTA_PLA,
          NUM_HORAS_REF,
          NUM_HORAS_REAL,
          NUM_HORAS_PLA,
          ID_SOBRETIEMPO,
          ID_USER_REG,
          FECHA_REG,
          HORA_ENTRADA_BASE,
          HORA_SALIDA_BASE
        )
        SELECT
          A.ID_SOBRETIEMPO,
          (row_number() OVER( PARTITION BY A.FECHA  ORDER BY A.ID_SOBRETIEMPO ASC )) AS ITEM,
          A.ID_TRABAJADOR,
          A.ID_SEDEAREA,
          l_id_motivo_asist,
          A.FECHA,
          --COALESCE(A.HORA_DESDE_MOD,A.HORA_DESDE_REAL),
          --COALESCE(A.HORA_HASTA_MOD,A.HORA_HASTA_REAL),
         -- COALESCE(A.HORA_DESDE_MOD,A.HORA_DESDE_REAL),
          --COALESCE(A.HORA_HASTA_MOD,A.HORA_HASTA_REAL),
          --coalesce(A.HORASREFRIGERIO,0),
          --A.NUM_HORAS_FINAL,
          --A.NUM_HORAS_FINAL,
          A.ID_SOBRETIEMPO,
          P_ID_USER_REG,
          SYSDATE,
          A.HORA_BASE_ENT,
          A.HORA_BASE_SAL 
          FROM PLLA_SOBRETIEMPO A, ELISEO.ORG_SEDE_AREA S
          WHERE A.ID_SEDEAREA=S.ID_SEDEAREA
         -- AND COALESCE(A.HORA_DESDE_MOD,A.HORA_DESDE_REAL) IS NOT NULL
         -- AND COALESCE(A.HORA_HASTA_MOD,A.HORA_HASTA_REAL) IS NOT NULL
         -- AND COALESCE(A.NUM_HORAS_FINAL,0) >0
          AND S.ID_ENTIDAD = P_ID_ENTIDAD
          AND A.ID_ESTADO_SOBRETIEMPO='03'
          AND S.ID_DEPTO LIKE P_ID_DEPTO||'%'
          AND to_number(to_char(A.FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(A.FECHA,'MM'))=P_ID_MES
          AND case when P_ID_TRABAJADOR=0 then 0 else A.ID_TRABAJADOR end = P_ID_TRABAJADOR
          ORDER BY A.ID_TRABAJADOR,A.FECHA;
        
        */
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror; 
      END SP_CONTROL_SOBRETIEMPO;
      PROCEDURE SP_COPIAR_FERIADO(P_ID_ANHO_DE NUMBER,P_ID_ANHO_A NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2) IS
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id number;
      BEGIN
        select coalesce(max(ID_FERIADO),0) into l_id from ENOC.plla_feriados;
        
        INSERT INTO ENOC.plla_feriados(
          ID_FERIADO,
          FECHA,
          NOMBRE,
          ID_TIPO_FERIADO
        )
        SELECT 
        (row_number() OVER( PARTITION BY to_char(A.fecha,'YYYY')  ORDER BY A.FECHA ASC )) + l_id AS ID_FERIADO ,
        TO_DATE(TO_CHAR(P_ID_ANHO_A)||'-'||TO_CHAR(A.FECHA,'MM-DD'),'YYYY-MM-DD'),
        A.NOMBRE,
        A.ID_TIPO_FERIADO 
        FROM ENOC.plla_feriados A, ENOC.PLLA_TIPO_FERIADO B
        WHERE A.ID_TIPO_FERIADO=B.ID_TIPO_FERIADO
        AND B.CODIGO='FN'
        AND TO_NUMBER(TO_CHAR(A.FECHA,'YYYY'))=P_ID_ANHO_DE
        AND TO_DATE(TO_CHAR(2022)||'-'||TO_CHAR(A.FECHA,'MM-DD'),'YYYY-MM-DD') NOT IN(
          SELECT FECHA FROM ENOC.plla_feriados
          WHERE TO_NUMBER(TO_CHAR(FECHA,'YYYY'))=P_ID_ANHO_A
        );
        
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror; 
      END SP_COPIAR_FERIADO;
     
    PROCEDURE SP_REGISTRAR_JUSTIFICACION(
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_MOTIVO_JUSTIF NUMBER,
	 P_FECHA DATE,
	 P_DESCRIPCION VARCHAR2,
	 P_EVIDENCIA_ADJ VARCHAR2,
	 P_ID_ESTADO_JUSTIF VARCHAR2,
	 P_ID_USER NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2,
	 P_ID_SOLIC_JUSTIF OUT NUMBER) IS
	L_CONTAR NUMBER:=0;
	L_ID_SOLIC_JUSTIF NUMBER;
	L_ID_SOLIC_JUSTIF_ESTADO NUMBER;
	L_ID_SITUACION_TRABAJADOR NUMBER;
	BEGIN
		P_ERROR:=0;
		P_MSGERROR := 'Se guardó correctamente.';
	
		--VERIFICA SI ES UN TRABAJADOR ACTIVO
		<<FIND_DATOS>>
			BEGIN
	 		select 
            t.id_situacion_trabajador
            into
            L_ID_SITUACION_TRABAJADOR
           from enoc.vw_trabajador t
            INNER JOIN enoc.PLLA_CONTRATO pc ON pc.ID_CONTRATO =t.ID_CONTRATO AND t.ID_ENTIDAD = pc.ID_ENTIDAD  AND t.ID_PERSONA = pc.ID_PERSONA
           where t.id_trabajador=P_ID_TRABAJADOR AND t.ID_ENTIDAD=P_ID_ENTIDAD AND pc.ID_DEPTO = P_ID_DEPTO;
         EXCEPTION WHEN NO_DATA_FOUND THEN
	            P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
	            RETURN;
	        END FIND_DATOS;
	       	<<FIND_DATOS>>
          if L_ID_SITUACION_TRABAJADOR not in('1') then
                P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
                RETURN;
          end if;
		SELECT COALESCE(MAX(TO_NUMBER(ID_SOLIC_JUSTIF)),0)+1 INTO L_ID_SOLIC_JUSTIF FROM ENOC.PLLA_SOLIC_JUSTIF;
		<<INSERT_JUSTIFICACION>>
	    BEGIN
		    INSERT INTO ENOC.PLLA_SOLIC_JUSTIF (ID_SOLIC_JUSTIF,ID_ENTIDAD,ID_DEPTO,ID_TRABAJADOR,ID_MOTIVO_JUSTIF,DESCRIPCION,FECHA,EVIDENCIA_ADJ,ID_ESTADO_JUSTIF,ID_USER_REG,FECHA_REG)
		    VALUES (L_ID_SOLIC_JUSTIF,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_TRABAJADOR,P_ID_MOTIVO_JUSTIF,P_DESCRIPCION,P_FECHA,P_EVIDENCIA_ADJ,P_ID_ESTADO_JUSTIF,P_ID_USER,SYSDATE);
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo registrar la justificación.';
	        P_ERROR := 1;
	       	RETURN ;
		END INSERT_JUSTIFICACION;
		SELECT COALESCE(MAX(TO_NUMBER(ID_SOLIC_JUSTIF_ESTADO)),0)+1 INTO L_ID_SOLIC_JUSTIF_ESTADO FROM ENOC.PLLA_SOLIC_JUSTIF_ESTADO;
		<<INSERT_ESTADO_JUSTIFICACION>>
		    BEGIN
			    INSERT INTO ENOC.PLLA_SOLIC_JUSTIF_ESTADO (ID_SOLIC_JUSTIF_ESTADO,ID_SOLIC_JUSTIF,ID_ESTADO_JUSTIF,COMENTARIO,ID_USER_REG,FECHA_REG)
			    VALUES (L_ID_SOLIC_JUSTIF_ESTADO,L_ID_SOLIC_JUSTIF,P_ID_ESTADO_JUSTIF,'',P_ID_USER,SYSDATE);
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo registrar el estado de la justificación.';
	        P_ERROR := 2;
	       	RETURN ;
		END INSERT_ESTADO_JUSTIFICACION;
		P_ID_SOLIC_JUSTIF:=L_ID_SOLIC_JUSTIF;
  	END SP_REGISTRAR_JUSTIFICACION;
  
    PROCEDURE SP_ACTUALIZAR_JUSTIFICACION(
	 P_ID_SOLIC_JUSTIF NUMBER,
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_MOTIVO_JUSTIF NUMBER,
	 P_FECHA DATE,
	 P_DESCRIPCION VARCHAR2,
	 P_EVIDENCIA_ADJ VARCHAR2,
	 P_ID_ESTADO_JUSTIF VARCHAR2,
	 P_ID_USER NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2) IS
	L_ID_SOLIC_JUSTIF NUMBER;
	BEGIN
		P_ERROR:=0;
		P_MSGERROR := 'Se guardó correctamente.';
		<<FIND_DATOS>>
		BEGIN
			SELECT ID_SOLIC_JUSTIF INTO L_ID_SOLIC_JUSTIF FROM ENOC.PLLA_SOLIC_JUSTIF WHERE ID_SOLIC_JUSTIF=P_ID_SOLIC_JUSTIF;
		EXCEPTION WHEN NO_DATA_FOUND THEN
            P_ERROR := 1;
            P_MSGERROR := 'No existe la justificación.';
            RETURN ;
        END FIND_DATOS;
		<<UPDATE_JUSTIFICACION>>
	    BEGIN
		    UPDATE ENOC.PLLA_SOLIC_JUSTIF SET ID_MOTIVO_JUSTIF=P_ID_MOTIVO_JUSTIF,DESCRIPCION=P_DESCRIPCION,
		    FECHA=P_FECHA,EVIDENCIA_ADJ=P_EVIDENCIA_ADJ,ID_ESTADO_JUSTIF=P_ID_ESTADO_JUSTIF,ID_USER_MOD=P_ID_USER,FECHA_MOD=SYSDATE
		    WHERE ID_SOLIC_JUSTIF = P_ID_SOLIC_JUSTIF;
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo actualizar la justificación.';
	        P_ERROR := 2;
	       	RETURN ;
		END UPDATE_JUSTIFICACION;
  	END SP_ACTUALIZAR_JUSTIFICACION;
  
  	PROCEDURE SP_ESTADO_JUSTIFICACION(
	 P_ID_SOLIC_JUSTIF NUMBER,
	 P_ID_ESTADO_JUSTIF VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_COMENTARIO VARCHAR2,
	 P_ID_USER NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2) IS
	L_EXIST_ID_SOLIC_JUSTIF NUMBER;
	L_ID_SOLIC_JUSTIF NUMBER;
	L_ID_ESTADO_JUSTIF NUMBER;
	L_ID_SOLIC_JUSTIF_ESTADO NUMBER;
	L_ID_ENTIDAD NUMBER;
	L_ID_DEPTO VARCHAR2(30);
	L_FECHA DATE;
	BEGIN
		P_ERROR:=0;
		P_MSGERROR := 'Se guardó correctamente.';
		<<FIND_DATOS>>
		BEGIN
			SELECT ID_SOLIC_JUSTIF,FECHA INTO L_ID_SOLIC_JUSTIF,L_FECHA FROM ENOC.PLLA_SOLIC_JUSTIF WHERE ID_SOLIC_JUSTIF=P_ID_SOLIC_JUSTIF;
		EXCEPTION WHEN NO_DATA_FOUND THEN
            P_ERROR := 1;
            P_MSGERROR := 'No existe la justificación.';
            RETURN ;
        END FIND_DATOS;
       <<FIND_DATOSS>>
        BEGIN
			SELECT ID_ESTADO_JUSTIF INTO L_ID_ESTADO_JUSTIF FROM ENOC.PLLA_ESTADO_JUSTIF WHERE ID_ESTADO_JUSTIF=P_ID_ESTADO_JUSTIF;
		EXCEPTION WHEN NO_DATA_FOUND THEN
            P_ERROR := 2;
            P_MSGERROR := 'No existe el estado de justificación.';
            RETURN ;
        END FIND_DATOSS;
		SELECT COALESCE(MAX(TO_NUMBER(ID_SOLIC_JUSTIF_ESTADO)),0)+1 INTO L_ID_SOLIC_JUSTIF_ESTADO FROM ENOC.PLLA_SOLIC_JUSTIF_ESTADO;
		<<INSERT_ESTADO_JUSTIFICACION>>
		    BEGIN
			    INSERT INTO ENOC.PLLA_SOLIC_JUSTIF_ESTADO (ID_SOLIC_JUSTIF_ESTADO,ID_SOLIC_JUSTIF,ID_ESTADO_JUSTIF,COMENTARIO,ID_USER_REG,FECHA_REG)
			    VALUES (L_ID_SOLIC_JUSTIF_ESTADO,P_ID_SOLIC_JUSTIF,P_ID_ESTADO_JUSTIF,P_COMENTARIO,P_ID_USER,SYSDATE);
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo guardar.';
	        P_ERROR := 3;
	       	RETURN ;
		END INSERT_ESTADO_JUSTIFICACION;
		<<UPDATE_JUSTIFICACION>>
	    BEGIN
		    UPDATE ENOC.PLLA_SOLIC_JUSTIF SET ID_ESTADO_JUSTIF=P_ID_ESTADO_JUSTIF,ID_USER_MOD=P_ID_USER,FECHA_MOD=SYSDATE
		    WHERE ID_SOLIC_JUSTIF = P_ID_SOLIC_JUSTIF;
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo actualizar el estado de la justificación.';
	        P_ERROR := 4;
	       	RETURN ;
		END UPDATE_JUSTIFICACION;
		SELECT T.ID_ENTIDAD,EDC.ID_DEPTO_PADRE INTO L_ID_ENTIDAD,L_ID_DEPTO FROM MOISES.TRABAJADOR t 
	      INNER JOIN ENOC.VW_ENT_DEP_AREA_CCOSTO EDC ON T.ID_SEDEAREA = EDC.ID_SEDEAREA 
	      WHERE T.ID_TRABAJADOR = P_ID_TRABAJADOR;
		FOR ITEM IN (SELECT psjdm.*,PDM.NOMBRE AS NOMBRE_DESCRIP_MARC FROM ENOC.PLLA_SOLIC_JUSTIF_DESC_MARC psjdm 
		INNER JOIN ENOC.PLLA_DESCRIP_MARCACION pdm ON PSJDM.ID_DESCRIP_MARCACION = PDM.ID_DESCRIP_MARCACION 
		WHERE ID_SOLIC_JUSTIF=P_ID_SOLIC_JUSTIF)
		LOOP
			IF ITEM.ID_MARCACION IS NOT NULL THEN 
				SELECT ID_SOLIC_JUSTIF INTO L_EXIST_ID_SOLIC_JUSTIF FROM ENOC.PLLA_MARCACION WHERE ID_MARCACION = ITEM.ID_MARCACION; 
				IF L_EXIST_ID_SOLIC_JUSTIF IS NOT NULL THEN 
				P_MSGERROR:='Ya fue justificado en la marcación "'||ITEM.NOMBRE_DESCRIP_MARC||'".';
				P_ERROR := 6;
				RETURN ;
				ELSIF P_ID_ESTADO_JUSTIF='03' THEN
					<<UPDATE_MARCACION>>
				    BEGIN
					    UPDATE ENOC.PLLA_MARCACION SET FECHAHORA_MANUAL=ITEM.FECHAHORA,ID_SOLIC_JUSTIF=P_ID_SOLIC_JUSTIF, ID_DESCRIP_MARCACION=ITEM.ID_DESCRIP_MARCACION
					    WHERE ID_MARCACION = ITEM.ID_MARCACION;
				    EXCEPTION WHEN OTHERS THEN
					    P_MSGERROR:='No se pudo guardar.';
				        P_ERROR := 5;
				       	RETURN ;
					END UPDATE_MARCACION;
				END IF;
			ELSIF P_ID_ESTADO_JUSTIF='03' THEN
    			ENOC.PKG_ASSISTANCE.SP_REGISTRAR_MARCACION(
	                P_ID_TRABAJADOR,
	                3,
	                null,--ITEM.FECHAHORA,
	                ITEM.FECHAHORA,
	                NULL,
	                NULL,
	                NULL,
	                NULL,
	                P_ID_SOLIC_JUSTIF,
	                'M',
                  ITEM.ID_DESCRIP_MARCACION,
	                P_ID_USER,
	                P_ERROR,
	                P_MSGERROR
	            );
	           IF P_ERROR>0 THEN 
	           	RETURN ;
	           END IF;
			END IF;
		END LOOP;
		IF P_ID_ESTADO_JUSTIF='03' THEN 
		ENOC.PKG_ASSISTANCE.SP_PROCESAR_MARCACION(L_FECHA,L_FECHA,L_ID_ENTIDAD,L_ID_DEPTO,0,P_ID_TRABAJADOR,P_ID_USER,P_ERROR,P_MSGERROR);
		END IF;
  	END SP_ESTADO_JUSTIFICACION;
  	--ID MAPA POLIGONO POR ID TRABAJADOR
  	PROCEDURE SP_IDMAPAPOLIGONO_TRABAJADOR(
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_MAPA_POLIGONO OUT NUMBER) IS
	L_ID_ENTIDAD NUMBER;
  	L_ID_DEPTO VARCHAR2(10);
	L_ID_AREA NUMBER;
	L_CONTAR NUMBER;
	BEGIN
	P_ID_MAPA_POLIGONO:=NULL;

	SELECT T.ID_ENTIDAD,SUBSTR(OSA.ID_DEPTO,1,1) AS ID_DEPTO,osa.ID_AREA INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_AREA
	FROM (SELECT ID_ENTIDAD,ID_SEDEAREA FROM MOISES.TRABAJADOR WHERE ID_TRABAJADOR = P_ID_TRABAJADOR ORDER BY FECHA_INICIO DESC)t 
	INNER JOIN ELISEO.ORG_SEDE_AREA osa ON osa.ID_SEDEAREA = t.ID_SEDEAREA 
	WHERE ROWNUM = 1;

	SELECT COUNT(*) INTO L_CONTAR FROM (SELECT ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO
	WHERE ID_ENTIDAD = L_ID_ENTIDAD AND VIGENCIA = '1' AND ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
			INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
			WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
			AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
			AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)) A 
	INNER JOIN (SELECT ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_TRABAJADOR WHERE ID_TRABAJADOR = P_ID_TRABAJADOR) B ON B.ID_MAPA_POLIGONO = A.ID_MAPA_POLIGONO 
	WHERE ROWNUM = 1;

	IF L_CONTAR<=0 THEN 
		SELECT COUNT(*) INTO L_CONTAR
		FROM (SELECT ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_AREA WHERE ID_ENTIDAD = L_ID_ENTIDAD AND CASE WHEN ID_DEPTO = '0' THEN 1 WHEN ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END =1 AND ID_AREA = L_ID_AREA) A 
		INNER JOIN (SELECT ID_MAPA_POLIGONO,FECHA_REG FROM ENOC.PLLA_MAPA_POLIGONO 
		WHERE ID_ENTIDAD = L_ID_ENTIDAD AND VIGENCIA = '1' AND ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
			INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
			WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
			AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
			AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)) B ON A.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO;
		IF L_CONTAR=0 THEN 
			SELECT COUNT(*) INTO L_CONTAR FROM (
			SELECT ID_AREA,ID_PARENT,LEVEL AS NIVEL
			FROM (SELECT ID_AREA,ID_PARENT FROM ELISEO.ORG_AREA WHERE ID_ENTIDAD = L_ID_ENTIDAD)
			WHERE LEVEL > 1
			START WITH ID_AREA = L_ID_AREA
			CONNECT BY PRIOR ID_PARENT = ID_AREA) A
			INNER JOIN (SELECT ID_AREA,ID_MAPA_POLIGONO,FECHA_REG FROM ENOC.PLLA_MAPA_AREA WHERE ID_ENTIDAD = L_ID_ENTIDAD AND CASE WHEN ID_DEPTO = '0' THEN 1 WHEN ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END =1) B ON A.ID_AREA = B.ID_AREA
			INNER JOIN (SELECT ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO 
			WHERE ID_ENTIDAD = L_ID_ENTIDAD 
			AND CASE WHEN ID_DEPTO = '0' THEN 1 WHEN ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END =1 
			AND VIGENCIA = '1' AND ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
			INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
			WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
			AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
			AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)) C ON C.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO;
	  		IF L_CONTAR=0 THEN
				SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MAPA_POLIGONO
				WHERE ID_ENTIDAD = L_ID_ENTIDAD AND ID_DEPTO = L_ID_DEPTO AND VIGENCIA = '1';
				IF L_CONTAR=0 THEN
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MAPA_POLIGONO T
					WHERE T.ID_ENTIDAD = L_ID_ENTIDAD AND T.ID_DEPTO = '0' AND T.VIGENCIA = '1';
					IF L_CONTAR>0 THEN
						SELECT ID_MAPA_POLIGONO INTO P_ID_MAPA_POLIGONO FROM (SELECT MP.ID_MAPA_POLIGONO,
						(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_TRABAJADOR MT WHERE MT.ID_MAPA_POLIGONO = MP.ID_MAPA_POLIGONO) AS CANTIDAD,
						(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_AREA MA WHERE MA.ID_MAPA_POLIGONO = MP.ID_MAPA_POLIGONO) AS CANTIDAD_AREA
						FROM ENOC.PLLA_MAPA_POLIGONO MP
						WHERE MP.ID_ENTIDAD = L_ID_ENTIDAD AND MP.ID_DEPTO = '0' 
						AND MP.ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
						INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
						WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
						AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
						AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)
						ORDER BY CANTIDAD ASC,CANTIDAD_AREA ASC,MP.FECHA_REG DESC)
						WHERE ROWNUM = 1;
					END IF;
				ELSE 
					SELECT ID_MAPA_POLIGONO INTO P_ID_MAPA_POLIGONO FROM (SELECT MP.ID_MAPA_POLIGONO,
					(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_TRABAJADOR MT WHERE MT.ID_MAPA_POLIGONO = MP.ID_MAPA_POLIGONO) AS CANTIDAD,
					(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_AREA MA WHERE MA.ID_MAPA_POLIGONO = MP.ID_MAPA_POLIGONO) AS CANTIDAD_AREA
					FROM ENOC.PLLA_MAPA_POLIGONO MP
					WHERE MP.ID_ENTIDAD = L_ID_ENTIDAD AND MP.ID_DEPTO = L_ID_DEPTO 
					AND MP.ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
					INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
					WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
					AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
					AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)
					ORDER BY CANTIDAD ASC,CANTIDAD_AREA ASC,MP.FECHA_REG DESC)
					WHERE ROWNUM = 1;
				END IF;
			ELSE 
				SELECT ID_MAPA_POLIGONO INTO P_ID_MAPA_POLIGONO FROM (SELECT A.ID_AREA,B.ID_MAPA_POLIGONO,
				(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_TRABAJADOR MT WHERE MT.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO) AS CANTIDAD ,
				(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_AREA MA WHERE MA.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO) AS CANTIDAD_AREA
				FROM (
				SELECT ID_AREA,ID_PARENT,LEVEL AS NIVEL
				FROM (SELECT ID_AREA,ID_PARENT FROM ELISEO.ORG_AREA WHERE ID_ENTIDAD = L_ID_ENTIDAD)
				WHERE LEVEL > 1
				START WITH ID_AREA = L_ID_AREA
				CONNECT BY PRIOR ID_PARENT = ID_AREA) A
				INNER JOIN (SELECT ID_AREA,ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_AREA WHERE ID_ENTIDAD = L_ID_ENTIDAD AND CASE WHEN ID_DEPTO = '0' THEN 1 WHEN ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END =1) B ON A.ID_AREA = B.ID_AREA
				INNER JOIN (SELECT ID_MAPA_POLIGONO,FECHA_REG FROM ENOC.PLLA_MAPA_POLIGONO 
				WHERE ID_ENTIDAD = L_ID_ENTIDAD AND VIGENCIA = '1'
				AND ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
				INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
				WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
				AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
				AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)) C ON C.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO
				ORDER BY A.NIVEL ASC,CANTIDAD ASC,CANTIDAD_AREA ASC,C.FECHA_REG DESC)
				WHERE ROWNUM = 1; 
			END IF;
		ELSE 
			SELECT ID_MAPA_POLIGONO INTO P_ID_MAPA_POLIGONO FROM (SELECT A.ID_MAPA_POLIGONO,
			(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_TRABAJADOR MT WHERE MT.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO) AS CANTIDAD ,
			(SELECT COUNT(*) FROM ENOC.PLLA_MAPA_AREA MA WHERE MA.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO) AS CANTIDAD_AREA
			FROM (SELECT ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_AREA WHERE ID_ENTIDAD = L_ID_ENTIDAD AND CASE WHEN ID_DEPTO = '0' THEN 1 WHEN ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END =1 AND ID_AREA = L_ID_AREA) A 
			INNER JOIN (SELECT ID_MAPA_POLIGONO,FECHA_REG FROM ENOC.PLLA_MAPA_POLIGONO 
			WHERE ID_ENTIDAD = L_ID_ENTIDAD AND VIGENCIA = '1' AND ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
			INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
			WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
			AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
			AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)) B ON A.ID_MAPA_POLIGONO = B.ID_MAPA_POLIGONO
			ORDER BY CANTIDAD ASC,CANTIDAD_AREA ASC,B.FECHA_REG DESC)
			WHERE ROWNUM = 1;
  		END IF;
	ELSE 
		SELECT ID_MAPA_POLIGONO INTO P_ID_MAPA_POLIGONO FROM (SELECT A.ID_MAPA_POLIGONO FROM (SELECT ID_MAPA_POLIGONO,FECHA_REG FROM ENOC.PLLA_MAPA_POLIGONO 
		WHERE ID_ENTIDAD = L_ID_ENTIDAD AND VIGENCIA = '1' AND ID_MAPA_POLIGONO NOT IN (SELECT B1.ID_MAPA_POLIGONO FROM enoc.PLLA_MAPA_DIA A1
		INNER JOIN ENOC.PLLA_MAPA_POLIGONO B1 ON A1.ID_MAPA_POLIGONO = B1.ID_MAPA_POLIGONO 
		WHERE A1.ID_MAPA_POLIGONO NOT IN (SELECT T.ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_DIA T
							WHERE T.ID_DIA = TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')))
		AND B1.ID_ENTIDAD = L_ID_ENTIDAD 
		AND CASE WHEN B1.ID_DEPTO = '0' THEN 1 WHEN B1.ID_DEPTO = L_ID_DEPTO THEN 1 ELSE 0 END = 1)) A 
		INNER JOIN (SELECT ID_MAPA_POLIGONO FROM ENOC.PLLA_MAPA_TRABAJADOR WHERE ID_TRABAJADOR = P_ID_TRABAJADOR) B ON B.ID_MAPA_POLIGONO = A.ID_MAPA_POLIGONO 
		ORDER BY A.FECHA_REG DESC) WHERE ROWNUM = 1;
  	END IF;
	END SP_IDMAPAPOLIGONO_TRABAJADOR;
    
  --SE USA PARA HABILITAR UN BUTTON EN EL APLICATIVO MOBIL PARA LA MARCACION DE LA ASISTENCIA
  PROCEDURE SP_MOSTRAR_BOTON_MARCACION(
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_LAT VARCHAR2,
	 P_LNG VARCHAR2,
	 P_SHOW_BUTTON OUT VARCHAR2,--0:NO SE MUESTRA EL BOTON, 1: SE MUESTRA EL BOTON, 2: NO SE MUESTRA Y YA HA SIDO MARCADO, 3:  OTRA ACTIVIDAD,4: FUERA DEL AREA DE TRABAJO
	 P_TEXT_BUTTON OUT VARCHAR2,
	 P_CODE_MODALITY OUT VARCHAR2,
	 P_FECHA_HORA OUT DATE,
	 P_ID_DESCRIP_MARCACION OUT VARCHAR2,
	 P_MINUTOS_TOLERANCIA OUT NUMBER,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2,
	 P_OPTION OUT VARCHAR2) IS  ---A = ASISTENCIA, ST = SOBRE TIEMPO
	L_CONTAR NUMBER;
	L_ID_TIPO_HORARIO NUMBER;
	L_CONFIG_TIP_HORA_CODIGO VARCHAR2(3);
	L_TIPO_MODALIDAD_CODIGO VARCHAR2(3);
	L_HORA_ENTRADA DATE;
	L_HORA_SALIDA_REF DATE;
	L_HORA_ENTRADA_REF DATE;
	L_HORA_SALIDA DATE;
	L_RANGO_ENTRADA_SALIDA NUMBER;
	L_RANGO_SAL_ENT_REF NUMBER;
	L_TOLER_ENTRADA NUMBER;
	L_TOLER_ENTRADA_REF NUMBER;
	L_ID_ANHO NUMBER;
	L_ID_MES NUMBER;
	L_ID_DIA NUMBER;
	L_NRO_DIA NUMBER;
	L_ID_PERSONA NUMBER;
	L_ID_SITUACION_TRABAJADOR NUMBER;
	L_ID_SEDEAREA NUMBER;
	L_ID_AREA NUMBER;
	L_ID_MAPA_POLIGONO NUMBER;
	L_FEC_ACTUAL DATE;
	L_FEC_REG DATE;
	L_NOMBRE_POLIGONO VARCHAR2(150);
	L_RANGO_ASIST_SOBRETIEMPO NUMBER;
	L_TOLER_ENT_SOBRETIEMPO NUMBER;
	L_FECHA_HORARIO DATE;
	BEGIN
		P_OPTION := 'A';
		P_SHOW_BUTTON:='0'; 
		P_TEXT_BUTTON:='';
		P_CODE_MODALITY:='';
		P_FECHA_HORA:= SYSDATE;
		P_ID_DESCRIP_MARCACION:= '';
		P_ERROR:=0;
		P_MSGERROR := '';
		P_MINUTOS_TOLERANCIA:=0;
		L_FEC_ACTUAL:= TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD'),'YYYY-MM-DD');
		L_FEC_REG:= L_FEC_ACTUAL;
		   SELECT 
         extract(year from SYSDATE),
         extract(month from SYSDATE),
         extract(day from SYSDATE),
         TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH'))
         INTO L_ID_ANHO,L_ID_MES,L_ID_DIA,L_NRO_DIA FROM dual;
        
		--VERIFICA SI ES UN TRABAJADOR ACTIVO
        <<FIND_DATOS>>
			BEGIN
			 select 
		            t.id_persona,
		            t.id_situacion_trabajador,
		            t.id_sedearea
		            into
		            L_ID_PERSONA,
		            L_ID_SITUACION_TRABAJADOR,
		            L_ID_SEDEAREA
		           from (SELECT id_persona,id_situacion_trabajador,id_sedearea,ID_ENTIDAD,ID_CONTRATO FROM  enoc.vw_trabajador WHERE id_trabajador=id_trabajador AND ID_ENTIDAD=P_ID_ENTIDAD) t
		            INNER JOIN enoc.PLLA_CONTRATO pc ON pc.ID_CONTRATO =t.ID_CONTRATO
		            AND t.ID_ENTIDAD = pc.ID_ENTIDAD  AND t.ID_PERSONA = pc.ID_PERSONA
		           WHERE rownum =1;
         EXCEPTION WHEN NO_DATA_FOUND THEN
	            P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
	            RETURN;
	        END FIND_DATOS;
	       	<<FIND_DATOS>>
          if L_ID_SITUACION_TRABAJADOR not in('1') then
                P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
                RETURN;
          end if;
         
         
         --VERIFICA SI TIENE VACACIONES
          
          select count(*) into L_CONTAR from (SELECT ID_PERIODO_VAC_TRAB FROM ENOC.vw_rol_vacacional WHERE id_trabajador=P_ID_TRABAJADOR AND CONFIRMACION_SALIDA IS NOT NULL AND (L_FEC_ACTUAL between fecha_ini and fecha_fin)) rv
          INNER JOIN (SELECT ID_PERIODO_VAC_TRAB FROM ENOC.PLLA_PERIODO_VAC_TRAB WHERE ID_ESTADO_VAC_TRAB ='02') ppvt ON ppvt.ID_PERIODO_VAC_TRAB = rv.ID_PERIODO_VAC_TRAB;
          if L_CONTAR > 0 then
            P_ERROR:=1;
            P_MSGERROR:='Usted está de vacaciones en la fecha '||to_char(L_FEC_ACTUAL,'DD/MM/YYYY');
           	P_SHOW_BUTTON:='3';
            RETURN;
          end if;
          
           --VERIFICA SI TIENE PERMISOS
          select count(*) into L_CONTAR from(
            select ID_LICENCIA_PERMISO from ENOC.vw_LICENCIA_PERMISO where id_trabajador=P_ID_TRABAJADOR and (L_FEC_ACTUAL between fecha_desde and fecha_hasta) and engrupo='N' and id_estado_lica_per ='03'
            union
            select a.ID_LICENCIA_PERMISO from (SELECT ID_LICENCIA_PERMISO FROM ENOC.vw_LICENCIA_PERMISO WHERE (L_FEC_ACTUAL between fecha_desde and fecha_hasta) and engrupo='S' and id_estado_lica_per ='03') a,
            (SELECT ID_LICENCIA_PERMISO FROM enoc.plla_LICENCIA_PERMISO_DET WHERE id_trabajador=P_ID_TRABAJADOR)b
            where a.ID_LICENCIA_PERMISO=b.ID_LICENCIA_PERMISO);
          
          if L_CONTAR > 0 then
            P_ERROR:=1;
            P_MSGERROR:='Usted está de permiso y/o licencia en la fecha '||to_char(L_FEC_ACTUAL,'DD/MM/YYYY');
           	P_SHOW_BUTTON:='3';
            RETURN;
          end if;
          
        
          --VERFIFICA SI TIENE CONFIGURADO TIPO HORARIO
         select count(*) into L_CONTAR from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL);
         
         if L_CONTAR<>1 THEN
          	<<FIND_DATOS>>
			BEGIN	
				SELECT ID_TIPO_HORARIO INTO L_ID_TIPO_HORARIO FROM MOISES.TRABAJADOR 
				WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_TRABAJADOR = P_ID_TRABAJADOR;
			EXCEPTION WHEN NO_DATA_FOUND THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado un tipo de horario, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	        END FIND_DATOS;
	       	<<FIND_DATOS>>
	       	IF L_ID_TIPO_HORARIO IS NULL THEN 
	       	 	P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado un tipo de horario, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	       	END IF;
	     ELSE 
		     select id_tipo_horario into L_ID_TIPO_HORARIO from ENOC.PLLA_TIPO_HORARIO_TRAB
	         where id_trabajador= P_ID_TRABAJADOR
	         and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL);
         end if;
         
         
        
         --VERIFICA SI TIENE CONFIGURADO UNA MODALIDAD
         select count(1) into L_CONTAR 
         from (SELECT ID_SITUACION_ESPECIAL FROM MOISES.TRABAJADOR_SIT_ESP WHERE id_trabajador= P_ID_TRABAJADOR and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL)) a,
         ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
         where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
         and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB;
         
         if L_CONTAR<>1 THEN
         	<<FIND_DATOS>>
			BEGIN	
				SELECT b.codigo INTO L_TIPO_MODALIDAD_CODIGO FROM (SELECT ID_ENTIDAD,ID_SITUACION_ESPECIAL FROM MOISES.TRABAJADOR WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_TRABAJADOR = P_ID_TRABAJADOR) a,
				ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
				WHERE a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL 
				AND b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB;
			EXCEPTION WHEN NO_DATA_FOUND THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado una modalidad, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	        END FIND_DATOS;
	       	<<FIND_DATOS>>
	       	IF L_TIPO_MODALIDAD_CODIGO IS NULL THEN 
	       	 	P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado una modalidad, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	       	END IF;
         ELSE 
	         select b.codigo into L_TIPO_MODALIDAD_CODIGO from (SELECT ID_SITUACION_ESPECIAL FROM MOISES.TRABAJADOR_SIT_ESP WHERE id_trabajador= P_ID_TRABAJADOR and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL)) a,  
	         ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
	         where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
	         and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB;
         end if;
         --VERIFICA SI SE HA CONFIGURADO UN POLIGONO PARA EL TRABAJADOR SIEMPRE Y CUANDO ESTE EN TRABAJO PRESENCIAL
        P_CODE_MODALITY:=L_TIPO_MODALIDAD_CODIGO;
        IF L_TIPO_MODALIDAD_CODIGO='TP' THEN 
        	ENOC.PKG_ASSISTANCE.SP_IDMAPAPOLIGONO_TRABAJADOR(P_ID_TRABAJADOR,L_ID_MAPA_POLIGONO);
        	SELECT COUNT(1) into L_CONTAR FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
        	IF L_CONTAR=0 THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No estás asignado a un polígono para la marcación';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
			END IF;
        END IF;
       
         --VERIFICA SI SE HA CONFIGURADO LOS PARAMETROS
          select count(*) into L_CONTAR from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and a.id_entidad=P_ID_ENTIDAD
          and a.id_anho=L_ID_ANHO;
          
          IF L_CONTAR=0 then
            P_ERROR:=1;
            P_MSGERROR:='Falta configurar parametros para el año '||to_char(L_ID_ANHO);
           	P_SHOW_BUTTON:='3';
            RETURN;
          end if;
       	
		--CONSULTA LOS PARAMETROS DE ASISTENCIA
		<<FIND_DATOS>>
		BEGIN
			SELECT IMPORTE INTO L_RANGO_ENTRADA_SALIDA FROM ENOC.VW_PLLA_PARAMETROS_VALOR 
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from SYSDATE) AND CODIGO='PARAM_ASIST_RANG';
		EXCEPTION WHEN NO_DATA_FOUND THEN
            L_RANGO_ENTRADA_SALIDA:=20;--POR DEFECTO
        END FIND_DATOS;
       <<FIND_DATOS>>
		BEGIN	
			SELECT IMPORTE INTO L_RANGO_SAL_ENT_REF FROM ENOC.VW_PLLA_PARAMETROS_VALOR 
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from SYSDATE) AND CODIGO='PARAM_REF_RANG';
		EXCEPTION WHEN NO_DATA_FOUND THEN
            L_RANGO_SAL_ENT_REF:=10;--POR DEFECTO
        END FIND_DATOS;
       	<<FIND_DATOS>>
		BEGIN	
			SELECT IMPORTE INTO L_TOLER_ENTRADA FROM ENOC.VW_PLLA_PARAMETROS_VALOR 
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from SYSDATE) AND CODIGO='TOLE_HORA_ENT';
		EXCEPTION WHEN NO_DATA_FOUND THEN
            L_TOLER_ENTRADA:=10;--POR DEFECTO
        END FIND_DATOS;
       	<<FIND_DATOS>>
		BEGIN	
			SELECT IMPORTE INTO L_TOLER_ENTRADA_REF FROM ENOC.VW_PLLA_PARAMETROS_VALOR 
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from SYSDATE) AND CODIGO='TOLE_HORA_ENT_REF';
		EXCEPTION WHEN NO_DATA_FOUND THEN
            L_TOLER_ENTRADA_REF:=5;--POR DEFECTO
        END FIND_DATOS;
       
       	<<FIND_DATOS>>
		BEGIN
       		SELECT ID_AREA INTO L_ID_AREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_SEDEAREA = L_ID_SEDEAREA AND ROWNUM=1;
       	EXCEPTION WHEN NO_DATA_FOUND THEN
            L_ID_AREA:=0;
        END FIND_DATOS;
       
		SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_FERIADOS A 
      	INNER JOIN ENOC.PLLA_TIPO_FERIADO B ON A.ID_TIPO_FERIADO = B.ID_TIPO_FERIADO 
      	LEFT JOIN ENOC.PLLA_FERIADO_INST C ON A.ID_FERIADO = C.ID_FERIADO 
      	WHERE TO_CHAR(A.FECHA,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD')
      	AND CASE WHEN B.CODIGO = 'FN' THEN 1 
      		WHEN B.CODIGO = 'FNL' THEN 1 
	      	WHEN B.CODIGO = 'FI' THEN 
      			CASE WHEN C.TIPO = 'E' THEN CASE WHEN C.ID_ENTIDAD = P_ID_ENTIDAD THEN 1 ELSE 0 END
      			WHEN C.TIPO = 'D' THEN CASE WHEN C.ID_ENTIDAD = P_ID_ENTIDAD AND C.ID_DEPTO = P_ID_DEPTO THEN 1 ELSE 0 END
      			WHEN C.TIPO = 'A' THEN CASE WHEN C.ID_ENTIDAD = P_ID_ENTIDAD AND C.ID_DEPTO = P_ID_DEPTO AND C.ID_AREA = L_ID_AREA THEN 1 ELSE 0 END
      			ELSE 0 END
	      	ELSE 0 END = 1;
      
      	IF L_CONTAR > 0 THEN
      		SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_SOBRETIEMPO A 
	       	WHERE A.ID_TRABAJADOR = P_ID_TRABAJADOR AND A.ID_ENTIDAD = P_ID_ENTIDAD 
	      	AND A.ID_ESTADO_SOBRETIEMPO = '05' 
	      	AND A.PERIODO = 'D' 
	      	AND TO_CHAR(A.FECHA,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD');
	      	IF L_CONTAR = 0 THEN 
	      		P_ERROR:=1;
	            P_MSGERROR:='Hoy es feriado.';
	           	P_SHOW_BUTTON:='0';
	           RETURN;
	        ELSE 
	          P_OPTION := 'ST';
	      	END IF;
      	END IF;
      
        select b.CODIGO into L_CONFIG_TIP_HORA_CODIGO from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
        where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
        and a.id_tipo_horario =  L_ID_TIPO_HORARIO;
       
		--SI ES HORARIO MENSUAL
		IF L_CONFIG_TIP_HORA_CODIGO='HM' THEN 
			--Para obtener la fecha a usar en la marcacion, basicamente servira para cuando es un horario del dia siguiente
			SELECT
				t.fecha,extract(year from t.fecha),extract(month from t.fecha),extract(day from t.fecha) 
				INTO L_FECHA_HORARIO,L_ID_ANHO,L_ID_MES,L_ID_DIA
			FROM
				(WITH
			  ayer AS (
				SELECT
					SYSDATE-numtodsinterval(1, 'day') AS fecha
				FROM
					dual
			  ),
				hoy AS (
				SELECT
					SYSDATE AS fecha
				FROM
					dual
			  )
				SELECT
					ayer.fecha AS fecha,
					to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(b.hora_salida, 'hh24:mi')<to_date(b.hora_entrada, 'hh24:mi') THEN 
			        to_char(ayer.fecha + numtodsinterval(1, 'day'), 'yyyy-mm-dd')|| ' ' || b.hora_salida
						ELSE to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_salida
					END AS fechahora_salida
				FROM
					enoc.PLLA_HORARIO_MENSUAL a
					INNER JOIN enoc.plla_horario_mensual_det c ON a.ID_HORARIO_MENSUAL = c.ID_HORARIO_MENSUAL
					INNER JOIN enoc.PLLA_HORARIO_BLOQUE b ON c.ID_HORARIO_BLOQUE = b.ID_HORARIO_BLOQUE 
				CROSS JOIN ayer
				WHERE
					a.ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND to_char(to_date(a.ID_ANHO||LPAD(a.ID_MES,2,'0')||LPAD(c.ID_DIA,2,'0'),'yyyy-mm-dd'),'yyyy-mm-dd') = to_char(ayer.fecha, 'yyyy-mm-dd')
			UNION ALL
				SELECT
					hoy.fecha AS fecha,
					to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(b.hora_salida, 'hh24:mi')<to_date(b.hora_entrada, 'hh24:mi') THEN 
			        to_char(hoy.fecha + numtodsinterval(1, 'day'), 'yyyy-mm-dd')|| ' ' || b.hora_salida
						ELSE to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_salida
					END AS fechahora_salida
				FROM 
					enoc.PLLA_HORARIO_MENSUAL a
					INNER JOIN enoc.plla_horario_mensual_det c ON a.ID_HORARIO_MENSUAL = c.ID_HORARIO_MENSUAL
					INNER JOIN enoc.PLLA_HORARIO_BLOQUE b ON c.ID_HORARIO_BLOQUE = b.ID_HORARIO_BLOQUE 
				CROSS JOIN hoy
				WHERE
					a.ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND a.ID_ANHO = L_ID_ANHO AND a.ID_MES = L_ID_MES AND c.ID_DIA=L_ID_DIA) t
			WHERE
				SYSDATE BETWEEN to_date(t.fechahora_entrada, 'YYYY-MM-DD HH24:MI') AND to_date(t.fechahora_salida, 'YYYY-MM-DD HH24:MI')
			AND rownum=1;
		
			IF L_FECHA_HORARIO IS NULL THEN 
				L_FECHA_HORARIO := SYSDATE;
				 SELECT 
			         extract(year from SYSDATE),
			         extract(month from SYSDATE),
			         extract(day from SYSDATE),
			         TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH'))
			         INTO L_ID_ANHO,L_ID_MES,L_ID_DIA,L_NRO_DIA FROM dual;
			END IF;
		
			FOR ITEM IN (SELECT PHB.* FROM (SELECT * FROM ENOC.PLLA_HORARIO_MENSUAL WHERE ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
				AND ID_TRABAJADOR=P_ID_TRABAJADOR AND ID_ANHO=L_ID_ANHO AND ID_MES=L_ID_MES) phm 
				INNER JOIN (SELECT * FROM ENOC.PLLA_HORARIO_MENSUAL_DET WHERE ID_DIA=L_ID_DIA) phmd ON PHM.ID_HORARIO_MENSUAL = PHMD.ID_HORARIO_MENSUAL 
				INNER JOIN ENOC.PLLA_HORARIO_BLOQUE phb ON PHB.ID_HORARIO_BLOQUE = PHMD.ID_HORARIO_BLOQUE
				WHERE ROWNUM =1)
			LOOP
				-- P_OPTION := 'A';
				--HORA ENTRADA 
				L_HORA_ENTRADA:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA, 'YYYY-MM-DD HH24:MI');
				--VALIDA SI LA HORA SALIDA AL REF PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.SAL_DIASIG='1' AND TO_DATE(ITEM.HORA_SALIDA_REF,'HH24:MI') < TO_DATE(ITEM.HORA_ENTRADA,'HH24:MI') THEN 
					L_HORA_SALIDA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI');
				ELSIF ITEM.HORA_SALIDA_REF IS NOT NULL THEN 
					L_HORA_SALIDA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA ENTRADA DEL REF PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.SAL_DIASIG='1' AND TO_DATE(ITEM.HORA_ENTRADA_REF,'HH24:MI') < TO_DATE(ITEM.HORA_ENTRADA,'HH24:MI') THEN 
					L_HORA_ENTRADA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF, 'YYYY-MM-DD HH24:MI');
				ELSIF ITEM.HORA_ENTRADA_REF IS NOT NULL THEN 
					L_HORA_ENTRADA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF, 'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA SALIDA PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.SAL_DIASIG='1' AND TO_DATE(ITEM.HORA_SALIDA,'HH24:MI') < TO_DATE(ITEM.HORA_ENTRADA,'HH24:MI') THEN 
					L_HORA_SALIDA:=TO_DATE(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA, 'YYYY-MM-DD HH24:MI');
				ELSE 
					L_HORA_SALIDA:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA, 'YYYY-MM-DD HH24:MI');
				END IF;
				
				IF SYSDATE>=L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND 
				SYSDATE< CASE WHEN ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF IS NOT NULL 
				THEN L_HORA_SALIDA_REF-NUMTODSINTERVAL(L_RANGO_SAL_ENT_REF,'MINUTE') ELSE L_HORA_SALIDA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') END THEN 
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='01'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
					IF L_CONTAR>0 THEN 
						P_SHOW_BUTTON:='2';
					ELSE 
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='ENTRADA';
					P_ID_DESCRIP_MARCACION:='01';
					P_FECHA_HORA:=L_HORA_ENTRADA;
					P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA;
				ELSIF ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF IS NOT NULL AND SYSDATE>=L_HORA_SALIDA_REF AND SYSDATE< L_HORA_SALIDA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') THEN
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='02'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
					IF L_CONTAR>0 THEN 
						IF SYSDATE >=L_HORA_ENTRADA_REF-NUMTODSINTERVAL(L_RANGO_SAL_ENT_REF,'MINUTE') THEN 
							SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
							IF L_CONTAR>0 THEN 
								P_SHOW_BUTTON:='2';
							ELSE 
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE 
							P_SHOW_BUTTON:='2';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					ELSE 
						IF SYSDATE >=L_HORA_ENTRADA_REF-NUMTODSINTERVAL(L_RANGO_SAL_ENT_REF,'MINUTE') THEN 
							SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
							IF L_CONTAR>0 THEN 
								P_SHOW_BUTTON:='2';
							ELSE 
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE 
							P_SHOW_BUTTON:='1';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					END IF;
				ELSIF SYSDATE>=L_HORA_SALIDA AND SYSDATE<= L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') THEN
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='04'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
					IF L_CONTAR>0 THEN 
						P_SHOW_BUTTON:='2';
					ELSE 
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='SALIDA';
					P_ID_DESCRIP_MARCACION:='04';
					P_FECHA_HORA:=L_HORA_SALIDA;
				ELSE 
					P_SHOW_BUTTON:='0';
					P_ERROR:=6;
					P_MSGERROR := 'Estas fuera del horario';
				END IF;
			END LOOP; 
		--SI ES HORARIO FIJO
		ELSIF L_CONFIG_TIP_HORA_CODIGO='HF' THEN 
			--Para obtener la fecha a usar en la marcacion, basicamente servira para cuando es un horario del dia siguiente
			   SELECT
				t.fecha,TO_NUMBER(TO_CHAR(t.fecha,'D','NLS_DATE_LANGUAGE=ENGLISH')) INTO L_FECHA_HORARIO,L_NRO_DIA
			FROM
				(WITH
			  ayer AS (
				SELECT
					SYSDATE-numtodsinterval(1, 'day') AS fecha,TO_NUMBER(TO_CHAR(SYSDATE-numtodsinterval(1, 'day'),'D','NLS_DATE_LANGUAGE=ENGLISH')) AS nro_dia
				FROM
					dual
			  ),
				hoy AS (
				SELECT
					SYSDATE AS fecha,TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH')) AS nro_dia
				FROM
					dual
			  )
				SELECT
					ayer.fecha AS fecha,
					to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(hora_salida, 'hh24:mi')<to_date(hora_entrada, 'hh24:mi') THEN 
			        to_char(ayer.fecha + numtodsinterval(1, 'day'), 'yyyy-mm-dd')|| ' ' || hora_salida
						ELSE to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || hora_salida
					END AS fechahora_salida
				FROM
					enoc.plla_horario_detalle 
				CROSS JOIN ayer
				WHERE
					ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND 
					ID_DIA = ayer.nro_dia
			UNION ALL
				SELECT
					hoy.fecha AS fecha,
					to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(hora_salida, 'hh24:mi')<to_date(hora_entrada, 'hh24:mi') THEN 
			        to_char(hoy.fecha + numtodsinterval(1, 'day'), 'yyyy-mm-dd')|| ' ' || hora_salida
						ELSE to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || hora_salida
					END AS fechahora_salida
				FROM
					enoc.plla_horario_detalle
				CROSS JOIN hoy
				WHERE
					ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND 
					ID_DIA = hoy.nro_dia) t
			WHERE
				SYSDATE BETWEEN to_date(t.fechahora_entrada, 'YYYY-MM-DD HH24:MI') AND to_date(t.fechahora_salida, 'YYYY-MM-DD HH24:MI')
			 	AND rownum=1;
			
			IF L_FECHA_HORARIO IS NULL THEN 
				L_FECHA_HORARIO := SYSDATE;
				 SELECT 
			         extract(year from SYSDATE),
			         extract(month from SYSDATE),
			         extract(day from SYSDATE),
			         TO_NUMBER(TO_CHAR(SYSDATE,'D','NLS_DATE_LANGUAGE=ENGLISH'))
			         INTO L_ID_ANHO,L_ID_MES,L_ID_DIA,L_NRO_DIA FROM dual;
			END IF;
			
			FOR ITEM IN (SELECT * FROM ENOC.PLLA_HORARIO_DETALLE WHERE ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
				AND ID_DIA = L_NRO_DIA AND ROWNUM =1)
			LOOP
				--P_OPTION := 'A';
				--HORA ENTRADA 
				L_HORA_ENTRADA:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA, 'YYYY-MM-DD HH24:MI');
				--VALIDA SI LA HORA SALIDA AL REF PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.SAL_DIASIG='1' AND TO_DATE(ITEM.HORA_SALIDA_REF,'HH24:MI') < TO_DATE(ITEM.HORA_ENTRADA,'HH24:MI') THEN 
					L_HORA_SALIDA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI');
				ELSIF ITEM.HORA_SALIDA_REF IS NOT NULL THEN 
					L_HORA_SALIDA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF, 'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA ENTRADA DEL REF PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.SAL_DIASIG='1' AND TO_DATE(ITEM.HORA_ENTRADA_REF,'HH24:MI') < TO_DATE(ITEM.HORA_ENTRADA,'HH24:MI') THEN 
					L_HORA_ENTRADA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF, 'YYYY-MM-DD HH24:MI');
				ELSIF ITEM.HORA_ENTRADA_REF IS NOT NULL THEN 
					L_HORA_ENTRADA_REF:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF, 'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA SALIDA PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.SAL_DIASIG='1' AND TO_DATE(ITEM.HORA_SALIDA,'HH24:MI') < TO_DATE(ITEM.HORA_ENTRADA,'HH24:MI') THEN 
					L_HORA_SALIDA:=TO_DATE(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA, 'YYYY-MM-DD HH24:MI');
				ELSE 
					L_HORA_SALIDA:=TO_DATE(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA, 'YYYY-MM-DD HH24:MI');
				END IF;
				IF SYSDATE>=L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND 
					SYSDATE< CASE WHEN ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF IS NOT NULL 
					THEN L_HORA_SALIDA_REF-NUMTODSINTERVAL(L_RANGO_SAL_ENT_REF,'MINUTE') ELSE L_HORA_SALIDA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') END 
				THEN 
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='01'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
					IF L_CONTAR>0 THEN 
						P_SHOW_BUTTON:='2';
					ELSE 
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='ENTRADA';
					P_ID_DESCRIP_MARCACION:='01';
					P_FECHA_HORA:=L_HORA_ENTRADA;
					P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA;
				ELSIF ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF IS NOT NULL AND SYSDATE>=L_HORA_SALIDA_REF AND SYSDATE< L_HORA_SALIDA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') THEN
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='02'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
					IF L_CONTAR>0 THEN 
						IF SYSDATE >=L_HORA_ENTRADA_REF-NUMTODSINTERVAL(L_RANGO_SAL_ENT_REF,'MINUTE') THEN 
							SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
							IF L_CONTAR>0 THEN 
								P_SHOW_BUTTON:='2';
							ELSE 
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE 
							P_SHOW_BUTTON:='2';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					ELSE 
						IF SYSDATE >=L_HORA_ENTRADA_REF-NUMTODSINTERVAL(L_RANGO_SAL_ENT_REF,'MINUTE') THEN 
							SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
							IF L_CONTAR>0 THEN 
								P_SHOW_BUTTON:='2';
							ELSE 
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE 
							P_SHOW_BUTTON:='1';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					END IF;
				ELSIF SYSDATE>=L_HORA_SALIDA AND SYSDATE<= L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') THEN
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='04'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE'));
					IF L_CONTAR>0 THEN 
						P_SHOW_BUTTON:='2';
					ELSE 
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='SALIDA';
					P_ID_DESCRIP_MARCACION:='04';
					P_FECHA_HORA:=L_HORA_SALIDA;
				ELSE 
					P_SHOW_BUTTON:='0';
					P_ERROR:=6;
					P_MSGERROR := 'Estas fuera del horario';
				END IF;
			END LOOP; 
		END IF;
	
		IF P_SHOW_BUTTON = '1' THEN 
			IF L_TIPO_MODALIDAD_CODIGO='TP' THEN 
				L_CONTAR := 0;
	            --VALIDA SI ESTA DENTRO DEL AREA DE TRABAJO
	           	select CASE WHEN SUM(CASE WHEN sdo_geom.sdo_distance(--  longitude,  Latitude 
				  sdo_geometry(2001, 4326, sdo_point_type(LNG, LAT, null), null, null),
				  sdo_geometry(2001, 4326, sdo_point_type(P_LNG, P_LAT, null), null, null),
				  0.01,
				  'unit=M'
				)<=RADIOME THEN 1 ELSE 0 END)>0 THEN 1 ELSE 0 END INTO L_CONTAR
				from ENOC.PLLA_MAPA_COORD_RADIO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
				IF L_CONTAR<>1 THEN 
	       	    	SELECT NOMBRE into L_NOMBRE_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
					P_SHOW_BUTTON:='4';--4= cuando estas fuera del area de trabajo
					P_ERROR:=6;
					P_MSGERROR := 'Estás fuera del área de trabajo, polígono "'||L_NOMBRE_POLIGONO||'"';
					RETURN;
				END IF;
			END IF;
			RETURN;
		END IF;
	
		FOR ITEM IN (SELECT A.HORA_DESDE,A.HORA_HASTA FROM ENOC.PLLA_SOBRETIEMPO A 
			WHERE A.ID_TRABAJADOR = P_ID_TRABAJADOR AND A.ID_ENTIDAD = P_ID_ENTIDAD 
			AND A.ID_ESTADO_SOBRETIEMPO = '05' AND A.PERIODO = 'H'
			AND TO_CHAR(FECHA,'YYYY-MM-DD') = TO_CHAR(SYSDATE,'YYYY-MM-DD') AND ROWNUM =1)
			LOOP
				P_OPTION := 'ST';
				P_ERROR:=0;
				P_MSGERROR:='';
				<<FIND_DATOS>>
				BEGIN	
					SELECT IMPORTE INTO L_RANGO_ASIST_SOBRETIEMPO FROM ENOC.VW_PLLA_PARAMETROS_VALOR 
					WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = extract(year from SYSDATE) AND CODIGO='PARAM_ASIST_EXT_RANG';
				EXCEPTION WHEN NO_DATA_FOUND THEN
		            L_RANGO_ASIST_SOBRETIEMPO:=10;--POR DEFECTO
		        END FIND_DATOS;
		       
		       <<FIND_DATOS>>
				BEGIN	
					SELECT IMPORTE INTO L_TOLER_ENT_SOBRETIEMPO FROM ENOC.VW_PLLA_PARAMETROS_VALOR 
					WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = extract(year from SYSDATE) AND CODIGO='TOLE_HORA_EXT_ENT';
				EXCEPTION WHEN NO_DATA_FOUND THEN
		            L_TOLER_ENT_SOBRETIEMPO:=5;--POR DEFECTO
		        END FIND_DATOS;
		       
		       	--HORA ENTRADA 
				L_HORA_ENTRADA:=TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD')||' '||ITEM.HORA_DESDE, 'YYYY-MM-DD HH24:MI');
				--HORA SALIDA
				L_HORA_SALIDA:=TO_DATE(TO_CHAR(SYSDATE,'YYYY-MM-DD')||' '||ITEM.HORA_HASTA, 'YYYY-MM-DD HH24:MI');
			
				IF SYSDATE>=L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ASIST_SOBRETIEMPO,'MINUTE') AND 
					SYSDATE<L_HORA_SALIDA
				THEN
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='01'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ASIST_SOBRETIEMPO,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ASIST_SOBRETIEMPO,'MINUTE'));
					IF L_CONTAR>0 THEN 
						P_SHOW_BUTTON:='2';
					ELSE 
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='ENTRADA';
					P_ID_DESCRIP_MARCACION:='01';
					P_FECHA_HORA:=L_HORA_ENTRADA;
					P_MINUTOS_TOLERANCIA:=L_TOLER_ENT_SOBRETIEMPO;
				ELSIF SYSDATE>=L_HORA_SALIDA AND SYSDATE<= L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ENTRADA_SALIDA,'MINUTE') THEN
					SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='04'
					AND (CASE WHEN FECHAHORA_MANUAL IS NULL THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-NUMTODSINTERVAL(L_RANGO_ASIST_SOBRETIEMPO,'MINUTE') AND L_HORA_SALIDA+NUMTODSINTERVAL(L_RANGO_ASIST_SOBRETIEMPO,'MINUTE'));
					IF L_CONTAR>0 THEN 
						P_SHOW_BUTTON:='2';
					ELSE 
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='SALIDA';
					P_ID_DESCRIP_MARCACION:='04';
					P_FECHA_HORA:=L_HORA_SALIDA;
				ELSE 
					P_SHOW_BUTTON:='0';
					P_ERROR:=6;
					P_MSGERROR := 'Estas fuera del horario';
				END IF;
			END LOOP;
			IF P_SHOW_BUTTON = '1' AND L_TIPO_MODALIDAD_CODIGO='TP' THEN 
				L_CONTAR := 0;
	            --VALIDA SI ESTA DENTRO DEL AREA DE TRABAJO
	           	select CASE WHEN SUM(CASE WHEN sdo_geom.sdo_distance(--  longitude,  Latitude 
				  sdo_geometry(2001, 4326, sdo_point_type(LNG, LAT, null), null, null),
				  sdo_geometry(2001, 4326, sdo_point_type(P_LNG, P_LAT, null), null, null),
				  0.01,
				  'unit=M'
				)<=RADIOME THEN 1 ELSE 0 END)>0 THEN 1 ELSE 0 END INTO L_CONTAR
				from ENOC.PLLA_MAPA_COORD_RADIO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
				IF L_CONTAR<>1 THEN 
	       	    	SELECT NOMBRE into L_NOMBRE_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
					P_SHOW_BUTTON:='4';--4= cuando estas fuera del area de trabajo
					P_ERROR:=6;
					P_MSGERROR := 'Estás fuera del área de trabajo, polígono "'||L_NOMBRE_POLIGONO||'"';
					RETURN;
				END IF;
			END IF;
  	END SP_MOSTRAR_BOTON_MARCACION;
  
  PROCEDURE SP_MARCAR_ASISTENCIA_MOVIL(
	 P_ID_ENTIDAD NUMBER,
	 P_ID_DEPTO VARCHAR2,
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_USER NUMBER,
	 P_LAT VARCHAR2,
	 P_LNG VARCHAR2,
	 P_UUID VARCHAR2,
	 P_ID_DESCRIP_MARCACION VARCHAR2,
	 P_CODIGO_MODALIDAD VARCHAR2,
	 P_OPTION VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2) IS
	L_CONTAR NUMBER;
	L_ID_MAPA_POLIGONO NUMBER;
	L_FECHAHORA DATE;
	L_DESDE DATE;
	L_HASTA DATE;
	L_NOMBRE_POLIGONO VARCHAR2(150);
	BEGIN
		P_ERROR:=0;
		P_MSGERROR := '';
		L_FECHAHORA := TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS');
        
		--VERIFICA SI HAY OTROS DISPOSITIVOS ACTIVOS
        SELECT COUNT(1) INTO L_CONTAR FROM ELISEO.APS_USER_DEVICE
			WHERE ID_PERSONA = P_ID_USER
			AND UUID = P_UUID
			AND STATE = '1';
         IF L_CONTAR <> 1 THEN 
         	SELECT COUNT(1) INTO L_CONTAR FROM ELISEO.APS_USER_DEVICE
			WHERE ID_PERSONA = P_ID_USER
			AND STATE = '1';
			IF L_CONTAR = 1 THEN 
	         	P_ERROR:=1;
	            P_MSGERROR:='Existe otro dispositivo activo, comunícate con tu jefe o DTH';
	            RETURN;
	        ELSIF L_CONTAR > 1 THEN 
	        	P_ERROR:=1;
	            P_MSGERROR:='Existe más un dispositivo activo, comunícate con tu jefe o DTH';
	            RETURN;
	        ELSE 
	        	P_ERROR:=1;
	            P_MSGERROR:='No existe un dispositivo activo. Vuelva a iniciar sessión';
	            RETURN;
	        END IF;
         END IF;
        
        IF P_CODIGO_MODALIDAD = 'TP' THEN 
        	ENOC.PKG_ASSISTANCE.SP_IDMAPAPOLIGONO_TRABAJADOR(P_ID_TRABAJADOR,L_ID_MAPA_POLIGONO);
        	SELECT COUNT(1) into L_CONTAR FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
        	IF L_CONTAR=0 THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No estás asignado a un polígono para la marcación';
	            RETURN;
           	ELSE
           		L_CONTAR := 0;
	            --VALIDA SI ESTA DENTRO DEL AREA DE TRABAJO
	           	select CASE WHEN SUM(CASE WHEN sdo_geom.sdo_distance(--  longitude,  Latitude 
				  sdo_geometry(2001, 4326, sdo_point_type(LNG, LAT, null), null, null),
				  sdo_geometry(2001, 4326, sdo_point_type(P_LNG, P_LAT, null), null, null),
				  0.01,
				  'unit=M'
				)<=RADIOME THEN 1 ELSE 0 END)>0 THEN 1 ELSE 0 END INTO L_CONTAR
				from ENOC.PLLA_MAPA_COORD_RADIO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
				IF L_CONTAR<>1 THEN 
           	    	SELECT NOMBRE into L_NOMBRE_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
					P_ERROR:=1;
					P_MSGERROR := 'Estás fuera del área de trabajo, polígono "'||L_NOMBRE_POLIGONO||'"';
					RETURN;
				END IF;
			END IF;
        END IF;
        
      	ENOC.PKG_ASSISTANCE.SP_REGISTRAR_MARCACION(
                    P_ID_TRABAJADOR,
                    1,--MOVIL
                    L_FECHAHORA,
                    NULL,
                    P_LAT,
                    P_LNG,
                    NULL,
                    NULL,
                    NULL,
                    'A',--ASISTENCIA
                    P_ID_DESCRIP_MARCACION,
                    P_ID_USER,
                    P_ERROR,
                    P_MSGERROR
                    );
        IF P_ERROR <> 0 THEN 
        	RETURN;
        END IF;
       
       L_DESDE := TO_DATE(TO_CHAR(L_FECHAHORA, 'YYYY-MM-DD'),'YYYY-MM-DD');
       L_HASTA := case when TRUNC(LAST_DAY(to_char(L_FECHAHORA,'YYYY-MM-DD')))> to_date(to_char(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD') then to_date(to_char(SYSDATE,'YYYY-MM-DD'),'YYYY-MM-DD') else TRUNC(LAST_DAY(to_char(L_FECHAHORA,'YYYY-MM-DD'))) END;
      	
      	IF P_OPTION = 'A' THEN 
	      	ENOC.PKG_ASSISTANCE.SP_PROCESAR_MARCACION(
                    L_DESDE,
                    L_HASTA,
                    P_ID_ENTIDAD,
                    P_ID_DEPTO,
                    0,
                    P_ID_TRABAJADOR,
                    P_ID_USER,
                    P_ERROR,
                    P_MSGERROR
                    );
        ELSIF P_OPTION = 'ST' THEN
           ENOC.PKG_ASSISTANCE.SP_PROCESAR_SOBRETIEMPO(
            L_DESDE,
            L_HASTA,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            0,
            '05',
            '',
            '',
            '',
            0,
            P_ID_USER,
            P_ID_TRABAJADOR
            );
        END IF; 
  	END SP_MARCAR_ASISTENCIA_MOVIL;
       
  
  PROCEDURE SP_CAMBIO_DATOS(
	 P_ID_TRABAJADOR NUMBER,
	 P_ID_CAMBIO VARCHAR2,
   P_DESDE DATE,
   P_HASTA DATE,
	 P_COMENTARIO VARCHAR2,
	 P_ID_USER NUMBER,
   P_TIPO VARCHAR2,
   P_APELLIDONOMBRE OUT VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2)
   AS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_ant number;
    l_id_tipo_horario number;
    l_id_tipo_horario_ant number;
    l_id number;
    l_id_control_personal number;
    l_id_control_personal_ant number;
    l_id_situacion_especial varchar2(5);
    l_id_situacion_especial_ant varchar2(5);
    l_desde_ant date;
    l_fec_actual date;
    l_apellidonombre varchar2(150);
    l_id_tipo_horario_act number;
    l_codigo varchar2(10);
    l_id_control_personal_act number;
   BEGIN
   
   select apellidonombre,id_tipo_horario,ID_TIPO_CONTROL_PERSONAL into l_apellidonombre,l_id_tipo_horario_act,l_id_control_personal_act from enoc.vw_trabajador where id_trabajador = P_ID_TRABAJADOR;
   
    

    case P_TIPO
    
      when 'TH' then
       l_id_tipo_horario:= to_number(P_ID_CAMBIO);
       select max(ID_TIPO_HORARIO_TRAB) into l_id_ant from ENOC.PLLA_TIPO_HORARIO_TRAB
       where id_trabajador=P_ID_TRABAJADOR;
       
       SELECT c.codigo into l_codigo FROM ENOC.PLLA_TIPO_HORARIO A ,ENOC.PLLA_TIPO_CONFIG_HORARIO c 
       WHERE c.ID_TIPO_CONFIG_HORARIO=a.ID_TIPO_CONFIG_HORARIO
       AND A.id_tipo_horario=l_id_tipo_horario;
       
       if l_codigo = 'HM' then
         if l_id_control_personal_act in(1,4,2) then --	1	Personal de Confianza,2	No sujeto a fiscalización,4	Personal de Dirección
          l_error:=1;
          l_msgerror:='Primero debe cambiar tipo control  a personal fiscalizable';
          GOTO salida_final;
        end if;

       end if;
       
       if l_id_ant is not null then
        
        
        select id_tipo_horario,desde into l_id_tipo_horario_ant,l_desde_ant
        from ENOC.PLLA_TIPO_HORARIO_TRAB
        where ID_TIPO_HORARIO_TRAB=l_id_ant;
        
        if l_desde_ant>=P_DESDE then
          l_error:=1;
          l_msgerror:='Fecha desde debe ser mayor '||to_char(l_desde_ant,'DD/MM/YYYY');
          GOTO salida_final;
        end if;
        
        select count(1) into l_contar from ENOC.PLLA_TIPO_HORARIO_TRAB
        where id_trabajador=P_ID_TRABAJADOR
        and P_DESDE between desde and coalesce(hasta ,P_DESDE-1);
        
        if l_contar>0 then
          l_error:=1;
          l_msgerror:='Hay cruce de fechas';
          GOTO salida_final;
        end if;
        
        if l_id_tipo_horario_ant=l_id_tipo_horario then
          l_error:=1;
          l_msgerror:='El tipo de horario es igual al actual';
          GOTO salida_final;
        end if;
        
        update ENOC.PLLA_TIPO_HORARIO_TRAB set
          HASTA=P_DESDE-1,
          ID_USER_MOD = P_ID_USER, 
          FECHA_MOD =sysdate
        where ID_TIPO_HORARIO_TRAB=l_id_ant;
        
       end if;
       
       select coalesce(max(ID_TIPO_HORARIO_TRAB),0) + 1 into l_id from enoc.PLLA_TIPO_HORARIO_TRAB;
       
       insert into enoc.PLLA_TIPO_HORARIO_TRAB(
          ID_TIPO_HORARIO_TRAB,
          ID_TIPO_HORARIO,
          ID_TRABAJADOR,
          DESDE,
          COMENTARIO,
          ID_TIPO_HORARIO_TRAB_ANT,
          ID_USER_REG,
          FECHA_REG
        )values(
         l_id,
         l_id_tipo_horario,
         P_ID_TRABAJADOR,
         P_DESDE,
         P_COMENTARIO,
         l_id_ant,
         P_ID_USER,
         sysdate
        );
        
        UPDATE MOISES.TRABAJADOR SET 
          ID_TIPO_HORARIO=l_id_tipo_horario
        WHERE ID_TRABAJADOR=P_ID_TRABAJADOR;
        
       
      
      when 'TP' then
  
       l_id_control_personal:= to_number(P_ID_CAMBIO);
       select max(ID_CONTROL_PERSONAL_TRAB) into l_id_ant from ENOC.PLLA_CONTROL_PERSONAL_TRAB
       where id_trabajador=P_ID_TRABAJADOR;
       
      SELECT count(*) into l_contar FROM ENOC.PLLA_TIPO_HORARIO A ,ENOC.PLLA_TIPO_CONFIG_HORARIO c 
      WHERE c.ID_TIPO_CONFIG_HORARIO=a.ID_TIPO_CONFIG_HORARIO
      AND A.id_tipo_horario=l_id_tipo_horario_act; 
      
      if l_contar>0 then
        SELECT c.codigo into l_codigo FROM ENOC.PLLA_TIPO_HORARIO A ,ENOC.PLLA_TIPO_CONFIG_HORARIO c 
        WHERE c.ID_TIPO_CONFIG_HORARIO=a.ID_TIPO_CONFIG_HORARIO
        AND A.id_tipo_horario=l_id_tipo_horario_act;
      end if;
     
       if l_codigo = 'HM' then
         if l_id_control_personal in(1,4,2) then --	1	Personal de Confianza,2	No sujeto a fiscalización,4	Personal de Dirección
          l_error:=1;
          l_msgerror:='Tipo de horario actual es mensual, cambiar primero tipo de horario';
          GOTO salida_final;
        end if;

       end if;
       
       if l_id_ant is not null then
        
        
        select ID_TIPO_CONTROL_PERSONAL, desde into l_id_control_personal_ant,l_desde_ant
        from ENOC.PLLA_CONTROL_PERSONAL_TRAB
        where ID_CONTROL_PERSONAL_TRAB=l_id_ant;
        
        if l_desde_ant>=P_DESDE then
          l_error:=1;
          l_msgerror:='Fecha desde debe ser mayor '||to_char(l_desde_ant,'DD/MM/YYYY');
          GOTO salida_final;
        end if;
        
        select count(1) into l_contar from ENOC.PLLA_CONTROL_PERSONAL_TRAB
        where id_trabajador=P_ID_TRABAJADOR
        and P_DESDE between desde and coalesce(hasta ,P_DESDE-1);
        
        if l_contar>0 then
          l_error:=1;
          l_msgerror:='Hay cruce de fechas';
          GOTO salida_final;
        end if;
        
        
        if l_id_control_personal=l_id_control_personal_ant then
          l_error:=1;
          l_msgerror:='El tipo control personal es igual al actual';
          GOTO salida_final;
        end if;
        
        update ENOC.PLLA_CONTROL_PERSONAL_TRAB set
          HASTA=P_DESDE-1,
          ID_USER_MOD = P_ID_USER, 
          FECHA_MOD =sysdate
        where ID_CONTROL_PERSONAL_TRAB=l_id_ant;
        
       end if;
       
       select coalesce(max(ID_CONTROL_PERSONAL_TRAB),0) + 1 into l_id from enoc.PLLA_CONTROL_PERSONAL_TRAB;
       
       insert into enoc.PLLA_CONTROL_PERSONAL_TRAB(
          ID_CONTROL_PERSONAL_TRAB,
          ID_TIPO_CONTROL_PERSONAL,
          ID_TRABAJADOR,
          DESDE,
          COMENTARIO,
          ID_CONTROL_PERSONAL_TRAB_ANT,
          ID_USER_REG,
          FECHA_REG
        )values(
         l_id,
         l_id_control_personal,
         P_ID_TRABAJADOR,
         P_DESDE,
         P_COMENTARIO,
         l_id_ant,
         P_ID_USER,
         sysdate
        );
        
        UPDATE MOISES.TRABAJADOR SET 
          ID_TIPO_CONTROL_PERSONAL=l_id_control_personal
        WHERE ID_TRABAJADOR=P_ID_TRABAJADOR;
      
      when 'TM' then
      
       l_id_situacion_especial:= P_ID_CAMBIO;
       select max(ID_TRABAJADOR_SIT_ESP) into l_id_ant from moises.TRABAJADOR_SIT_ESP
       where id_trabajador=P_ID_TRABAJADOR;
       
       if l_id_ant is not null then
        
        
        select id_situacion_especial, desde into l_id_situacion_especial_ant,l_desde_ant
        from moises.TRABAJADOR_SIT_ESP
        where ID_TRABAJADOR_SIT_ESP=l_id_ant;
        
        
        if l_desde_ant>=P_DESDE then
          l_error:=1;
          l_msgerror:='Fecha desde debe ser mayor '||to_char(l_desde_ant,'DD/MM/YYYY');
          GOTO salida_final;
        end if;
        
        select count(1) into l_contar from moises.TRABAJADOR_SIT_ESP
        where id_trabajador=P_ID_TRABAJADOR
        and P_DESDE between desde and coalesce(hasta ,P_DESDE-1);
        
        if l_contar>0 then
          l_error:=1;
          l_msgerror:='Hay cruce de fechas';
          GOTO salida_final;
        end if;
        
        
        if l_id_situacion_especial=l_id_situacion_especial_ant then
          l_error:=1;
          l_msgerror:='La modalidad es igual al actual';
          GOTO salida_final;
        end if;
        
        update moises.TRABAJADOR_SIT_ESP set
          HASTA=P_DESDE-1,
          ID_USER_MOD = P_ID_USER, 
          FECHA_MOD =sysdate
        where ID_TRABAJADOR_SIT_ESP=l_id_ant
        and hasta is null;
        
       end if;
       
       select coalesce(max(ID_TRABAJADOR_SIT_ESP),0) + 1 into l_id from moises.TRABAJADOR_SIT_ESP;
       
       insert into moises.TRABAJADOR_SIT_ESP(
          ID_TRABAJADOR_SIT_ESP,
          ID_SITUACION_ESPECIAL,
          ID_TRABAJADOR,
          DESDE,
          HASTA,
          ID_TRABAJADOR_SIT_ESP_ANT,
          ID_USER_REG,
          FECHA_REG
        )values(
         l_id,
         l_id_situacion_especial,
         P_ID_TRABAJADOR,
         P_DESDE,
         P_HASTA,
         l_id_ant,
         P_ID_USER,
         sysdate
        );
       
      
      UPDATE MOISES.TRABAJADOR SET 
          ID_SITUACION_ESPECIAL=l_id_situacion_especial
      WHERE ID_TRABAJADOR=P_ID_TRABAJADOR;
    end case;
    <<salida_final>>
    P_APELLIDONOMBRE:=l_apellidonombre;
    P_ERROR:=l_error;
		P_MSGERROR := l_msgerror;
   END SP_CAMBIO_DATOS;
   
  PROCEDURE SP_CAMBIO_DATOS_ELIMINAR(
	 P_ID NUMBER,
	 P_ID_USER NUMBER,
   P_TIPO VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2)
   AS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_id_ant number;
    l_id_tipo_horario_ant NUMBER;
    l_id_trabajador number;
    l_id_control_personal_ant number;
    l_id_situacion_especial_ant varchar2(5);
    l_desde_ant date;
    l_fec_actual date;
    l_desde date;
   BEGIN
    
    l_fec_actual:= TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD'),'YYYY-MM-DD');
    case P_TIPO
    
      when 'TH' then

       select ID_TIPO_HORARIO_TRAB_ANT, ID_TRABAJADOR,DESDE into l_id_ant,l_id_trabajador,l_desde from ENOC.PLLA_TIPO_HORARIO_TRAB
       where ID_TIPO_HORARIO_TRAB=P_ID;
       
       if l_id_ant is not null then
        
        
        select id_tipo_horario, desde into l_id_tipo_horario_ant,l_desde_ant
        from ENOC.PLLA_TIPO_HORARIO_TRAB
        where ID_TIPO_HORARIO_TRAB=l_id_ant;
        
        IF l_desde<=l_fec_actual THEN
          if to_char(l_fec_actual,'MMYYY')<> to_char(l_desde,'MMYYY') then
              l_error:=1;
              l_msgerror:='No se puede eliminar, fecha desde tiene que ser del mes actual';
              GOTO salida_final;
          end if;
        END IF;
        update ENOC.PLLA_TIPO_HORARIO_TRAB set
          HASTA=NULL,
          ID_USER_MOD = P_ID_USER, 
          FECHA_MOD =sysdate
        where ID_TIPO_HORARIO_TRAB=l_id_ant;
        
        UPDATE MOISES.TRABAJADOR SET 
          ID_TIPO_HORARIO=l_id_tipo_horario_ant
        WHERE ID_TRABAJADOR=l_id_trabajador;
        
       end if;
       
       DELETE FROM ENOC.PLLA_TIPO_HORARIO_TRAB WHERE ID_TIPO_HORARIO_TRAB=P_ID;
       
      
      when 'TP' then
      
       select ID_CONTROL_PERSONAL_TRAB_ANT, ID_TRABAJADOR into l_id_ant,l_id_trabajador from ENOC.PLLA_CONTROL_PERSONAL_TRAB
       where ID_CONTROL_PERSONAL_TRAB=P_ID;
       
       if l_id_ant is not null then
        
        
        select ID_TIPO_CONTROL_PERSONAL into l_id_control_personal_ant
        from ENOC.PLLA_CONTROL_PERSONAL_TRAB
        where ID_CONTROL_PERSONAL_TRAB=l_id_ant;
        
         
        update ENOC.PLLA_CONTROL_PERSONAL_TRAB set
          HASTA=NULL,
          ID_USER_MOD = P_ID_USER, 
          FECHA_MOD =sysdate
        where ID_CONTROL_PERSONAL_TRAB=l_id_ant;
        
        UPDATE MOISES.TRABAJADOR SET 
          ID_TIPO_CONTROL_PERSONAL=l_id_control_personal_ant
        WHERE ID_TRABAJADOR=l_id_trabajador;
        
       end if;
       
       DELETE FROM ENOC.PLLA_CONTROL_PERSONAL_TRAB WHERE ID_CONTROL_PERSONAL_TRAB=P_ID;
       
      
      when 'TM' then
       select ID_TRABAJADOR_SIT_ESP_ANT, ID_TRABAJADOR into l_id_ant,l_id_trabajador from moises.TRABAJADOR_SIT_ESP
       where ID_TRABAJADOR_SIT_ESP=P_ID;
       
       if l_id_ant is not null then
        
        
        select ID_SITUACION_ESPECIAL into l_id_situacion_especial_ant
        from moises.TRABAJADOR_SIT_ESP
        where ID_TRABAJADOR_SIT_ESP=l_id_ant;
        
         
        update moises.TRABAJADOR_SIT_ESP set
          HASTA=NULL,
          ID_USER_MOD = P_ID_USER, 
          FECHA_MOD =sysdate
        where ID_TRABAJADOR_SIT_ESP=l_id_ant;
        
        UPDATE MOISES.TRABAJADOR SET 
          ID_SITUACION_ESPECIAL=l_id_situacion_especial_ant
        WHERE ID_TRABAJADOR=l_id_trabajador;
        
       end if;
       
       DELETE FROM moises.TRABAJADOR_SIT_ESP WHERE ID_TRABAJADOR_SIT_ESP=P_ID;
       
    end case;
    <<salida_final>>
    P_ERROR:=l_error;
		P_MSGERROR := l_msgerror;
   END SP_CAMBIO_DATOS_ELIMINAR;
   
   PROCEDURE SP_VALIDAR_BOTON_MARCACION(
	 P_ID_TRABAJADOR NUMBER,
   P_LAT NUMBER,
   P_LNG NUMBER,
	 P_ID_MAPA_POLIGONO OUT NUMBER,
	 P_CODIGO_TIPO_MODALIDAD OUT VARCHAR2,
   P_FECHA OUT VARCHAR2,
	 P_ERROR OUT NUMBER,
	 P_MSGERROR OUT VARCHAR2
   ) AS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;
    l_items number;
    l_id_anho number;
    l_id_mes number;
    l_id_dia number;
    l_nro_dia number;

    L_ID_MAPA_POLIGONO	NUMBER:=0;
    L_ID_SITUACION_ESPECIAL	VARCHAR2(2 BYTE);
    L_ID_TIPO_CONTROL_PERSONAL	NUMBER;
    L_ID_TIPO_HORARIO	NUMBER;
    L_ID_CONDICION_LABORAL	VARCHAR2(10 BYTE);
    L_ID_SEDEAREA	NUMBER;
    L_ID_PERFIL_PUESTO	NUMBER;
    L_ID_USERDEVICE	NUMBER;
    L_ID_HORARIO_MENSUAL_DET	NUMBER;
    
    l_id_mapa_trabajador NUMBER;
    l_id_mapa_area NUMBER;
    l_id_entidad number;
    l_id_depto_padre VARCHAR2(10);
    l_codigo_tipo_modalidad  VARCHAR2(10);
    l_id_area number;
    l_id_persona number;
    l_id_situacion_trabajador varchar2(5);
    l_tipo_hora varchar2(15);
    l_id_tiempo_trabajado number;
    
    l_id_horario_bloque number;
    l_id_dia_th number;
    l_fec_actual date;
    l_fecha_reg date;
    l_fecha_ult varchar2(50);
    
    l_fec_ayer DATE;
    l_id_anho_ayer NUMBER;
    l_id_mes_ayer NUMBER;
    l_id_dia_ayer NUMBER;
    l_resultado number:=0;
   BEGIN
     l_fec_actual:= TO_DATE(TO_CHAR(sysdate, 'YYYY-MM-DD'),'YYYY-MM-DD');
     l_fecha_reg:= l_fec_actual;
         
         
    select 
         to_number(to_char(l_fec_actual,'YYYY')), 
         to_number(to_char(l_fec_actual,'MM')),
         to_number(to_char(l_fec_actual,'DD')),
         to_number(TO_CHAR(l_fec_actual, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
         into l_id_anho,l_id_mes,l_id_dia,l_nro_dia from dual;
         
         
         select 
            ID_ENTIDAD,
            ID_CONDICION_LABORAL,
            ID_SEDEAREA,
            ID_PERFIL_PUESTO,
            id_persona,
            id_situacion_trabajador,
            ID_TIPO_TIEMPO_TRABAJO
            into
            l_id_entidad,
            L_ID_CONDICION_LABORAL,
            L_ID_SEDEAREA,
            L_ID_PERFIL_PUESTO,
            l_id_persona,
            l_id_situacion_trabajador,
            l_id_tiempo_trabajado
            from enoc.vw_trabajador where id_trabajador=P_ID_TRABAJADOR;
         
          if l_id_situacion_trabajador not in('1') then
                l_error:=1;
                l_msgerror:='Trabajdor no está activo';
                GOTO salida_final;
          end if;
         
         
         --vacacion
          
          select count(*) into l_contar from ENOC.vw_rol_vacacional where id_trabajador=P_ID_TRABAJADOR and (l_fec_actual between fecha_ini and fecha_fin) and condicion='P';
          if l_contar > 0 then
            l_error:=1;
            l_msgerror:='El trabajador está de vacaciones en la fecha '||to_char(l_fec_actual,'DD/MM/YYYY');
            GOTO salida_final;
          end if;
          
           --permisos
          select count(*) into l_contar from(
            select ID_LICENCIA_PERMISO from ENOC.vw_LICENCIA_PERMISO where id_trabajador=P_ID_TRABAJADOR and (l_fec_actual between fecha_desde and fecha_hasta) and engrupo='N' and id_estado_lica_per not in('00','04')
            union
            select a.ID_LICENCIA_PERMISO from ENOC.vw_LICENCIA_PERMISO a, enoc.plla_LICENCIA_PERMISO_DET b where a.ID_LICENCIA_PERMISO=b.ID_LICENCIA_PERMISO and b.id_trabajador=P_ID_TRABAJADOR 
            and (l_fec_actual between a.fecha_desde and a.fecha_hasta) and a.engrupo='S' and a.id_estado_lica_per not in('00','04')
          );
          
          if l_contar > 0 then
            l_error:=1;
            l_msgerror:='El trabajador está de permiso y/o licencia en la fecha '||to_char(l_fec_actual,'DD/MM/YYYY');
            GOTO salida_final;
          end if;
          
        
          ------
         select count(1) into l_contar from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
         
         if l_contar<>1 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion de tipo horario';
            GOTO salida_final;
         end if;
         
         select id_tipo_horario into L_ID_TIPO_HORARIO from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
         
          ------
         select count(1) into l_contar from ENOC.PLLA_CONTROL_PERSONAL_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
        
         if l_contar<>1 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion de tipo control personal';
            GOTO salida_final;
         end if;
         
         select ID_TIPO_CONTROL_PERSONAL into L_ID_TIPO_CONTROL_PERSONAL from ENOC.PLLA_CONTROL_PERSONAL_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between desde and coalesce(hasta,l_fec_actual);
         ----
        
         
         select count(1) into l_contar from  MOISES.TRABAJADOR_SIT_ESP a,  ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
         where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
         and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB
         and a.id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between a.desde and coalesce(a.hasta,l_fec_actual);
         
         if l_contar<>1 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion de modalidad';
            GOTO salida_final;
         end if;
         
         select b.codigo into l_codigo_tipo_modalidad from  MOISES.TRABAJADOR_SIT_ESP a,  ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
         where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
         and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB
         and a.id_trabajador= P_ID_TRABAJADOR
         and l_fecha_reg between a.desde and coalesce(a.hasta,l_fec_actual);
         
         
          ----------
         
          select count(*) into l_contar from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
          
          IF l_contar=0 then
            l_error:=1;
            l_msgerror:='Falta configurar parametros para el año '||to_char(l_id_anho);
            GOTO salida_final;
          end if;
   
          select b.CODIGO into l_tipo_hora from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
          where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
          and a.id_tipo_horario =  L_ID_TIPO_HORARIO;
          
          
          if l_tipo_hora='HM' then
   
              select count(*) into l_contar from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
              where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
              AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
              AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
              AND A.ID_ANHO=l_id_anho
              AND A.ID_MES=l_id_mes
              AND B.ID_DIA=l_id_dia;
              
              if l_contar = 1 then
                select B.ID_HORARIO_MENSUAL_DET, b.id_horario_bloque into L_ID_HORARIO_MENSUAL_DET,l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
                where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                AND A.ID_ANHO=l_id_anho
                AND A.ID_MES=l_id_mes
                AND B.ID_DIA=l_id_dia;
                
                
              else
              
                 select l_fec_actual-1 into l_fec_ayer from dual;
                 
                 select 
                 to_number(to_char(l_fec_ayer,'YYYY')), 
                 to_number(to_char(l_fec_ayer,'MM')),
                 to_number(to_char(l_fec_ayer,'DD'))
                 into l_id_anho_ayer,l_id_mes_ayer,l_id_dia_ayer from dual;
                 
                 select count(*) into l_contar from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B,ENOC.PLLA_horario_bloque HB
                 where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                 AND b.id_horario_bloque=Hb.id_horario_bloque
                 AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                 AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                 AND A.ID_ANHO=l_id_anho_ayer
                 AND A.ID_MES=l_id_mes_ayer
                 AND B.ID_DIA=l_id_dia_ayer
                 AND COALESCE(HB.sal_diasig,0)=1;
                 if l_contar = 1 then
                  select B.ID_HORARIO_MENSUAL_DET, b.id_horario_bloque into L_ID_HORARIO_MENSUAL_DET,l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL A, ENOC.PLLA_HORARIO_MENSUAL_DET B
                  where A.ID_HORARIO_MENSUAL = B.ID_HORARIO_MENSUAL
                  AND A.ID_TRABAJADOR = P_ID_TRABAJADOR
                  AND A.ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
                  AND A.ID_ANHO=l_id_anho_ayer
                  AND A.ID_MES=l_id_mes_ayer
                  AND B.ID_DIA=l_id_dia_ayer;
                 else
                  l_error:=1;
                  l_msgerror:='Horario mensual: No esta configurado para la fecha: '||to_char(l_fec_actual,'DD/MM/YYYY');
                  GOTO salida_final;
                 end if;
                
                
                
              end if;

          else
            if l_tipo_hora<>'SH' then
              select COUNT(*) into l_contar from enoc.plla_horario_detalle where id_tipo_horario=L_ID_TIPO_HORARIO and id_dia=l_nro_dia;
              
              l_id_dia_th:=l_nro_dia;
              if l_contar=0 then
                 l_error:=1;
                 l_msgerror:='Horario fijo: No esta configurado para la fecha: '||to_char(l_fec_actual,'DD/MM/YYYY');
                 GOTO salida_final;
             
              end if;
            end if;
          END IF;
            
          if l_tipo_hora<>'SH' then
                if l_codigo_tipo_modalidad='TP' THEN
                    select id_depto_padre,id_area into l_id_depto_padre,l_id_area from eliseo.VW_SEDE_AREA where ID_SEDEAREA=L_ID_SEDEAREA;
                    
                    select count(*) into l_contar from(
                      select x.id_mapa_poligono from enoc.plla_mapa_trabajador x
                      where x.id_trabajador=P_ID_TRABAJADOR 
                      union
                      select y.id_mapa_poligono from enoc.plla_mapa_area y
                      where y.id_entidad=l_id_entidad 
                      and y.id_depto=l_id_depto_padre 
                      and y.id_area =l_id_area
                    );
                    if l_contar=0 THEN
                       l_error:=1;
                       l_msgerror:='No esta asignado a polígono de marcación';
                       GOTO salida_final;
                    END IF;
                    /*enoc.PKG_ASSISTANCE.SP_VALIDAR_COORDENADA_ASIST(
                       P_ID_TRABAJADOR,
                       P_LAT,
                       P_LNG,
                       l_resultado,
                       l_error,
                       l_msgerror
                     );
                     if l_resultado=0 then
                       l_error:=1;
                       l_msgerror:='Está fuera del Área del trabajo';
                       GOTO salida_final;
                     end if;*/
                end if;
          end if;
          
          
          select coalesce(to_char(max(fechahora),'DD/MM/YYYY HH24:MI:SS'),'-') into l_fecha_ult from enoc.plla_marcacion where id_trabajador=P_ID_TRABAJADOR and to_char(fechahora,'DDMMYYYY')= to_char(l_fec_actual,'DDMMYYYY');
    
    <<salida_final>>
    P_ID_MAPA_POLIGONO:=L_ID_MAPA_POLIGONO;
	  P_CODIGO_TIPO_MODALIDAD:=l_codigo_tipo_modalidad;
    P_FECHA:=l_fecha_ult;
    P_ERROR:=l_error;
		P_MSGERROR := l_msgerror;
   END SP_VALIDAR_BOTON_MARCACION;
   
    PROCEDURE SP_PROGRAMAR_ASIS_DOCENTE(
     P_FECHA DATE,
     P_ID_DEPTO VARCHAR2,
     P_ID_AREA NUMBER,
     P_ID_AREAS VARCHAR2,
     P_ID_TRABAJADOR NUMBER,
     P_RESTRINGIDO VARCHAR2,
     P_ID_TIPO_NIVEL_VISTA number,
     P_ID_USER NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
    
   ) AS
    l_error number:=0;
    l_msgerror varchar2(4000):='';
    l_contar number;
    l_id_horario number;
    l_hor_ini varchar2(20);
    l_hor_fin varchar2(20);
    
    l_horario_tmp varchar2(400);
    l_horario varchar2(400);
    l_j number:=1;
    l_total number:=0;
    l_hora varchar2(5);
    l_num_dia number;
    l_i number:=0;
    
    l_hor_ini_eje varchar2(20);
    l_hor_fin_eje varchar2(20);
    l_id_carga_curso number;
    l_id number;
    l_insert number:=0;
    l_desde date;
    l_hasta date;
    n_horas number:=0;
    
     CURSOR curCab IS
     SELECT
        a.ID_CARGA_CURSO,
        a.ID_CARGA_CURSO_DOCENTE,
        a.ID_PROGRAMA_ESTUDIO,
        a.ID_MODULO,
        a.ID_TIPO_MODALIDAD_DOCENTE,
        a.ID_TIPO_HORARIO,
        a.ID_PERSONA,
        a.ID_SEMESTRE,
        a.FECHA_INICIO,
        a.FECHA_FIN,
        a.HORARIO,
        a.NOMBRE_AREA,
        a.CURSO,
        a.CICLO,
        a.CREDITO,
        a.HP,
        a.HT,
        a.HNP,
        a.ID_SEDEAREA,
        a.GRUPO,
        a.ID_SEMESTRE_PROGRAMA,
        t.id_trabajador,
        t.ID_SEDEAREA AS ID_SEDEAREAT,
        t.ID_TIPO_CONTROL_PERSONAL,
        t.ID_TIPO_TIEMPO_TRABAJO,
        t.ID_CONDICION_LABORAL
     FROM  ENOC.VW_CARGA_DOCENTE  a , moises.trabajador t
     WHERE  a.id_persona=t.id_persona
     and t.id_entidad = 7124
     and a.ID_CARGA_CURSO_DOCENTE in(select ID_CARGA_CURSO_DOCENTE from ENOC.TT_CARGA_DOCENTE_HORARIO);
     
     CURSOR curHor IS
     select
     a.hora_inicio,
     a.hora_fin,
     t.codigo
     from DAVID.ACAD_HORARIO_DETALLE a, DAVID.TIPO_TURNO t
     where a.id_tipo_turno=t.id_tipo_turno
     and a.id_horario=l_id_horario
     order by a.id_tipo_turno,a.periodo;
     
     
    l_query varchar2(4000):='';
    l_id_motivo_asist varchar2(10);
    BEGIN
    
      select
      to_number(TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH')) 
      into
      l_num_dia
      from dual;
      
      l_hor_ini_eje:= null;
      l_hor_fin_eje:= null;
      
      DELETE FROM ENOC.TT_CARGA_DOCENTE_HORARIO;
      
      
      l_query:='INSERT INTO ENOC.TT_CARGA_DOCENTE_HORARIO(ID_CARGA_CURSO,ID_CARGA_CURSO_DOCENTE) ';
      l_query:=l_query||'SELECT ';
      l_query:=l_query||'distinct a.ID_CARGA_CURSO,a.ID_CARGA_CURSO_DOCENTE ';
      l_query:=l_query||'FROM  ENOC.VW_CARGA_DOCENTE  a , moises.trabajador t, ENOC.VW_ENT_DEP_AREA_CCOSTO C ';
      l_query:=l_query||'WHERE  a.id_persona=t.id_persona ';
      l_query:=l_query||'and t.id_sedearea = c.id_sedearea ';
      l_query:=l_query||'and t.id_entidad = 7124 ';
      l_query:=l_query||'and c.id_depto_padre = :p_depto ';
      IF P_ID_TRABAJADOR>0 THEN
        l_query:=l_query||'and t.id_trabajador = '||P_ID_TRABAJADOR||' ';
      END IF;
      IF P_ID_AREA>0 THEN
        l_query:=l_query||'and c.id_area = '||P_ID_AREA||' ';
      END IF;
      l_query:=l_query||'and (:p_fecha Between a.FECHA_INICIO and a.FECHA_FIN) ';
      
      if (P_RESTRINGIDO = 'S') then
            if P_ID_TIPO_NIVEL_VISTA = 4 THEN
               l_query:=l_query||'and c.id_area in( '||P_ID_AREAS||') ';
            END IF;
            if P_ID_TIPO_NIVEL_VISTA = 5 THEN
                l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
            end if;
      end if;
      
      if P_RESTRINGIDO = 'U' then
            l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
      end if;
      
      l_query:=l_query||'and a.ID_CARGA_CURSO_DOCENTE not in(select ID_CARGA_CURSO_DOCENTE from enoc.PLLA_ASISTENCIA_CARGA where fecha=:p_fecha1) ';
      
      EXECUTE IMMEDIATE l_query USING P_ID_DEPTO,P_FECHA,P_FECHA;
      
      
      
   
      FOR curC in curCab LOOP
        BEGIN
         
          select id_horario into l_id_horario from david.acad_semestre_programa where ID_SEMESTRE_PROGRAMA=curC.ID_SEMESTRE_PROGRAMA;
          l_horario:=curC.horario;
          l_total:=length(curC.horario);
          l_horario_tmp := curC.horario;
          l_j:=1;
          l_i:=0;
          l_insert:=0;
          
          
          
          FOR curH in curHor LOOP
            BEGIN
              l_hora:= substr(l_horario_tmp,l_num_dia,1);
              
              if l_hora = '1' then
                IF(curH.codigo='M') THEN
                  SELECT (CASE WHEN (SUBSTR(curH.hora_inicio,0,2))=1 THEN TO_NUMBER(SUBSTR(curH.hora_inicio,0,2))+12 ELSE TO_NUMBER(SUBSTR(curH.hora_inicio,0,2)) END)||SUBSTR(curH.hora_inicio,-3) INTO l_hor_ini FROM DUAL;
                  SELECT (CASE WHEN (SUBSTR(curH.hora_fin,0,2))=1 THEN TO_NUMBER(SUBSTR(curH.hora_fin,0,2))+12 ELSE TO_NUMBER(SUBSTR(curH.hora_fin,0,2)) END)||SUBSTR(curH.hora_fin,-3) INTO l_hor_fin FROM DUAL;
                ELSE
                  SELECT (CASE WHEN (SUBSTR(curH.hora_inicio,0,2))<12 THEN TO_NUMBER(SUBSTR(curH.hora_inicio,0,2))+12 ELSE TO_NUMBER(SUBSTR(curH.hora_inicio,0,2)) END)||SUBSTR(curH.hora_inicio,-3) INTO l_hor_ini FROM DUAL;
                  SELECT (CASE WHEN (SUBSTR(curH.hora_fin,0,2))<12 THEN TO_NUMBER(SUBSTR(curH.hora_fin,0,2))+12 ELSE TO_NUMBER(SUBSTR(curH.hora_fin,0,2)) END)||SUBSTR(curH.hora_fin,-3) INTO l_hor_fin FROM DUAL;
                END IF;
                if l_i=0 then 
                  l_hor_ini_eje:= l_hor_ini;
                  l_hor_fin_eje:=l_hor_fin;
                end if;
                if l_i>0 then 
                  l_hor_fin_eje:=l_hor_fin;
                end if;
                n_horas:= n_horas +1;
                --l_insert:=0;
                l_i:=l_i + 1;
              else
                --if l_id_carga_curso=curC.ID_CARGA_CURSO then
                dbms_output.put_line(l_hor_ini_eje||'*'||l_hor_fin_eje);
                  if l_hor_ini_eje is not null and l_hor_fin_eje is not null then
                    
                    l_desde:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_ini_eje,'YYYY-MM-DD HH24:MI:SS'); 
                    l_hasta:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_fin_eje,'YYYY-MM-DD HH24:MI:SS');
                    
                    SELECT ENOC.FC_MOTIVO_ASIST_DOCENTE(curC.ID_TRABAJADOR,curC.ID_SEDEAREAT,l_desde,l_hasta) INTO l_id_motivo_asist from dual;
                    
                    select coalesce(max(ID_ASISTENCIA_CARGA),0) + 1 into l_id from enoc.PLLA_ASISTENCIA_CARGA;
                    insert into enoc.PLLA_ASISTENCIA_CARGA(
                      ID_ASISTENCIA_CARGA,
                      ID_CARGA_CURSO,
                      ID_CARGA_CURSO_DOCENTE,
                      ID_SEMESTRE,
                      ID_PERSONA,
                      ID_TRABAJADOR,
                      ID_SEMESTRE_PROGRAMA,
                      ID_PROGRAMA_ESTUDIO,
                      ID_SEDEAREA,
                      ID_HORARIO,
                      FECHA,
                      NOMBRE_AREA,
                      CURSO,
                      CICLO,
                      CREDITOS,
                      HP,
                      HT,
                      HNP,
                      HORARIO,
                      GRUPO,
                      FECHA_INICIO,
                      FECHA_FIN,
                      DESDE_PROG,
                      HASTA_PROG,
                      HORAS_PROG,
                      ID_MOTIVO_ASIST,
                      ID_USER_REG,
                      FECHA_REG,
                      ID_TIPO_CONTROL_PERSONAL,
                      ID_TIPO_TIEMPO_TRABAJO,
                      ID_CONDICION_LABORAL
                    )values(
                      l_id,
                      curC.ID_CARGA_CURSO,
                      curC.ID_CARGA_CURSO_DOCENTE,
                      curC.ID_SEMESTRE,
                      curC.ID_PERSONA,
                      curC.ID_TRABAJADOR,
                      curC.ID_SEMESTRE_PROGRAMA,
                      curC.ID_PROGRAMA_ESTUDIO,
                      curC.ID_SEDEAREA,
                      l_id_horario,
                      P_FECHA,
                      curC.NOMBRE_AREA,
                      curC.CURSO,
                      curC.CICLO,
                      curC.CREDITO,
                      curC.HP,
                      curC.HT,
                      curC.HNP,
                      curC.HORARIO,
                      curC.GRUPO,
                      curC.FECHA_INICIO,
                      curC.FECHA_FIN,
                      l_desde,
                      l_hasta,
                      n_horas,
                      l_id_motivo_asist,
                      P_ID_USER,
                      sysdate,
                      curC.ID_TIPO_CONTROL_PERSONAL,
                      curC.ID_TIPO_TIEMPO_TRABAJO,
                      curC.ID_CONDICION_LABORAL
                    );
                    l_insert:=1;
                    l_hor_ini_eje:= null;
                    l_hor_fin_eje:= null;

                  end if;
                  n_horas:=0;
                 
                  l_i:=0;
                --end if;
              end if;
 
              l_j:=l_j + 7; 
              l_horario_tmp := substr(l_horario,l_j,l_total);
              
            END;
          END LOOP;
           --dbms_output.put_line(l_hor_ini_eje||'*'||l_hor_fin_eje);
           if l_hor_ini_eje is not null and l_hor_fin_eje is not null and l_insert=0 then
            l_desde:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_ini_eje,'YYYY-MM-DD HH24:MI:SS');
            l_hasta:= to_date(to_char(P_FECHA,'YYYY-MM-DD')||' '||l_hor_fin_eje,'YYYY-MM-DD HH24:MI:SS');
            
            SELECT ENOC.FC_MOTIVO_ASIST_DOCENTE(curC.ID_TRABAJADOR,curC.ID_SEDEAREAT,l_desde,l_hasta) INTO l_id_motivo_asist from dual;
            
            select coalesce(max(ID_ASISTENCIA_CARGA),0) + 1 into l_id from enoc.PLLA_ASISTENCIA_CARGA;
            insert into enoc.PLLA_ASISTENCIA_CARGA(
              ID_ASISTENCIA_CARGA,
              ID_CARGA_CURSO,
              ID_CARGA_CURSO_DOCENTE,
              ID_SEMESTRE,
              ID_PERSONA,
              ID_TRABAJADOR,
              ID_SEMESTRE_PROGRAMA,
              ID_PROGRAMA_ESTUDIO,
              ID_SEDEAREA,
              ID_HORARIO,
              FECHA,
              NOMBRE_AREA,
              CURSO,
              CICLO,
              CREDITOS,
              HP,
              HT,
              HNP,
              HORARIO,
              GRUPO,
              FECHA_INICIO,
              FECHA_FIN,
              DESDE_PROG,
              HASTA_PROG,
              HORAS_PROG,
              ID_MOTIVO_ASIST,
              ID_USER_REG,
              FECHA_REG,
              ID_TIPO_CONTROL_PERSONAL,
              ID_TIPO_TIEMPO_TRABAJO,
              ID_CONDICION_LABORAL
            )values(
              l_id,
              curC.ID_CARGA_CURSO,
              curC.ID_CARGA_CURSO_DOCENTE,
              curC.ID_SEMESTRE,
              curC.ID_PERSONA,
              curC.ID_TRABAJADOR,
              curC.ID_SEMESTRE_PROGRAMA,
              curC.ID_PROGRAMA_ESTUDIO,
              curC.ID_SEDEAREA,
              l_id_horario,
              P_FECHA,
              curC.NOMBRE_AREA,
              curC.CURSO,
              curC.CICLO,
              curC.CREDITO,
              curC.HP,
              curC.HT,
              curC.HNP,
              curC.HORARIO,
              curC.GRUPO,
              curC.FECHA_INICIO,
              curC.FECHA_FIN,
              l_desde,
              l_hasta,
              n_horas,
              l_id_motivo_asist,
              P_ID_USER,
              sysdate,
              curC.ID_TIPO_CONTROL_PERSONAL,
              curC.ID_TIPO_TIEMPO_TRABAJO,
              curC.ID_CONDICION_LABORAL
            );
           end if;
           l_id_carga_curso:=curC.ID_CARGA_CURSO;
        END;
      END LOOP;
      
      select count(distinct a.ID_TRABAJADOR) into l_contar from enoc.PLLA_ASISTENCIA_CARGA a ,ENOC.VW_ENT_DEP_AREA_CCOSTO b
      where a.id_sedearea=b.id_sedearea
      and b.id_depto_padre=P_ID_DEPTO
      and a.fecha=P_FECHA;
      
      l_msgerror:='('||P_ID_DEPTO||': '||to_char(l_contar)||') ';
      
      <<SALIDA>>
      P_ERROR:=l_error;
      P_MSGERROR := l_msgerror;
    END SP_PROGRAMAR_ASIS_DOCENTE;
    
    PROCEDURE SP_PROCESAR_ASIS_DOCENTE(
     P_FECHA DATE,--SI P_TIPO=FE OBLIAGATORIO
     P_ID_DEPTO VARCHAR2,
     P_ID_AREA NUMBER,
     P_ID_AREAS VARCHAR2,
     P_ID_TRABAJADOR NUMBER,
     P_RESTRINGIDO VARCHAR2,
     P_ID_TIPO_NIVEL_VISTA number,
     P_TIPO VARCHAR2,--AM: Año y Mes,FE: por fecha
     P_ID_ANHO NUMBER, --SI P_TIPO=AM OBLIAGATORIO
     P_ID_MES NUMBER, --SI P_TIPO=AM OBLIAGATORIO
     P_ID_USER NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
    
   ) AS
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_contar number;

    l_total number:=0;
    l_num_dia number;
    l_i number:=0;

    l_insert number:=0;
    n_horas number:=0;
    
    l_query varchar2(4000):='';
    
    L_NUM_TOLE_TAR NUMBER;
    l_id_entidad NUMBER:=7124;
    l_id_anho number;
    l_inicio date;
    l_fin date;

    BEGIN
    
      
      
      if P_TIPO='AM' then
        l_inicio:=TO_DATE(TO_CHAR(P_ID_ANHO)||'-'||TO_CHAR(P_ID_MES)||'-01','YYYY-MM-DD');
        l_fin:= TRUNC(LAST_DAY(l_inicio));
        l_id_anho:=P_ID_ANHO;
      else
        l_inicio:=P_FECHA;
        l_fin:= P_FECHA;
        select
        to_number(to_char(P_FECHA,'YYYY'))
        into
        l_id_anho
        from dual;
      end if;
      
      
      DELETE FROM ENOC.TT_CARGA_DOCENTE_HORARIO;
      
      
      l_query:='INSERT INTO ENOC.TT_CARGA_DOCENTE_HORARIO(ID_CARGA_CURSO) ';
      l_query:=l_query||'SELECT ';
      l_query:=l_query||'distinct a.ID_CARGA_CURSO ';
      l_query:=l_query||'FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t, ENOC.VW_ENT_DEP_AREA_CCOSTO C ';
      l_query:=l_query||'WHERE  a.id_trabajador=t.id_trabajador ';
      l_query:=l_query||'and t.id_sedearea = c.id_sedearea ';
      l_query:=l_query||'and t.id_entidad = 7124 ';
      l_query:=l_query||'and c.id_depto_padre = :p_depto ';
      IF P_ID_TRABAJADOR>0 THEN
        l_query:=l_query||'and t.id_trabajador = '||P_ID_TRABAJADOR||' ';
      END IF;
      IF P_ID_AREA>0 THEN
        l_query:=l_query||'and c.id_area = '||P_ID_AREA||' ';
      END IF;
      l_query:=l_query||'and a.fecha BETWEEN :F_INI AND :F_FIN ';
      
      if (P_RESTRINGIDO = 'S') then
            if P_ID_TIPO_NIVEL_VISTA = 4 THEN
               l_query:=l_query||'and c.id_area in( '||P_ID_AREAS||') ';
            END IF;
            if P_ID_TIPO_NIVEL_VISTA = 5 THEN
                l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
            end if;
      end if;
      
      if P_RESTRINGIDO = 'U' then
            l_query:=l_query||'and t.id_persona = '||P_ID_USER||' ';
      end if;
      
      
      EXECUTE IMMEDIATE l_query USING P_ID_DEPTO,l_inicio,l_fin;
      
      
      select count(*) into l_contar from plla_parametros_valor  a, plla_parametros b
      where b.id_parametro=a.id_parametro
      and a.id_entidad=l_id_entidad
      and a.id_anho=l_id_anho;
      
      IF l_contar=0 then
        l_error:=1;
        l_msgerror:='Falta configurar parametros para el año '||to_char(l_id_anho);
        GOTO SALIDA;
      end if;
      
      
      select coalesce(a.importe,0) into L_NUM_TOLE_TAR from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and b.codigo='TOLE_HORA_ENT'
          and a.id_entidad=l_id_entidad
          and a.id_anho=l_id_anho;
      
      ---motivo asistencia
      MERGE INTO ENOC.PLLA_ASISTENCIA_CARGA S 
          USING(
            SELECT
              a.ID_ASISTENCIA_CARGA,
              a.ID_CARGA_CURSO,
              a.ID_PERSONA,
              a.ID_SEMESTRE,
              t.id_trabajador,
              T.ID_SEDEAREA,
              ENOC.FC_MOTIVO_ASIST_DOCENTE(t.ID_TRABAJADOR,t.ID_SEDEAREA,a.desde_prog,a.hasta_prog) as ID_MOTIVO_ASIST
           FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t
           WHERE  a.id_trabajador=t.id_trabajador
           and t.id_entidad = 7124
           and a.ID_CARGA_CURSO in(select ID_CARGA_CURSO from ENOC.TT_CARGA_DOCENTE_HORARIO)
      )T ON(T.ID_ASISTENCIA_CARGA=S.ID_ASISTENCIA_CARGA)
      WHEN  MATCHED THEN UPDATE SET  
      S.ID_MOTIVO_ASIST=T.ID_MOTIVO_ASIST,
      S.NUM_TOLE_TAR=L_NUM_TOLE_TAR,
      S.ID_USER_MOD=P_ID_USER,
      S.FECHA_MOD= SYSDATE;
      
      MERGE INTO ENOC.PLLA_ASISTENCIA_CARGA S 
          USING(
            SELECT
              a.ID_ASISTENCIA_CARGA,
              a.ID_CARGA_CURSO,
              a.ID_PERSONA,
              a.ID_SEMESTRE,
              t.id_trabajador,
              T.ID_SEDEAREA,
              ENOC.FC_MOTIVO_ASIST_DOCENTE(t.ID_TRABAJADOR,t.ID_SEDEAREA,a.desde_prog,a.hasta_prog) as ID_MOTIVO_ASIST
           FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t
           WHERE  a.id_trabajador=t.id_trabajador
           and t.id_entidad = 7124
           and a.ID_CARGA_CURSO in(select ID_CARGA_CURSO from ENOC.TT_CARGA_DOCENTE_HORARIO)
           and coalesce(a.tipo,'N')='N'
      )T ON(T.ID_ASISTENCIA_CARGA=S.ID_ASISTENCIA_CARGA)
      WHEN  MATCHED THEN UPDATE SET  
      S.TARDANZA=0,
      S.TIPO=NULL;

      --CALCULO TARDANZA FALTA
      
       MERGE INTO  ENOC.PLLA_ASISTENCIA_CARGA S 
          USING(
            SELECT
              a.ID_ASISTENCIA_CARGA,
              a.ID_CARGA_CURSO,
              a.ID_PERSONA,
              a.ID_SEMESTRE,
              t.id_trabajador,
              T.ID_SEDEAREA,
              A.ID_MOTIVO_ASIST,
              A.tipo,
              a.TARDANZA,
              case when a.DESDE_REAL is not null then (a.DESDE_REAL - A.NUM_TOLE_TAR / 1440) else null end as f_ini_cal
           FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t
           WHERE  a.id_trabajador=t.id_trabajador
           and t.id_entidad = 7124
           and a.ID_CARGA_CURSO in(select ID_CARGA_CURSO from ENOC.TT_CARGA_DOCENTE_HORARIO)
           and a.desde_prog<= sysdate
      )T ON(T.ID_ASISTENCIA_CARGA=S.ID_ASISTENCIA_CARGA)
      WHEN  MATCHED THEN UPDATE SET  
      S.ID_MOTIVO_ASIST=T.ID_MOTIVO_ASIST,
      S.TARDANZA=CASE WHEN t.ID_MOTIVO_ASIST='A' THEN 
              CASE WHEN S.DESDE_REAL IS NOT NULL THEN 
                case when t.tipo='J' then
                  0
                else
                  case when T.f_ini_cal>S.DESDE_PROG THEN
                    round((T.f_ini_cal - S.DESDE_PROG)*1440,2)
                  ELSE
                    0
                  END
                end 
              ELSE 
                0 
              END 
            ELSE 
              0 
            END,
            
      S.TIPO=CASE WHEN t.ID_MOTIVO_ASIST='A' THEN 
              CASE WHEN S.DESDE_REAL IS NULL THEN 
                case when t.tipo='J' then
                  'J'
                else
                  'F'
                end 
              ELSE
                  case when t.tipo='J' then
                    'J'
                   ELSE
                    NULL
                   END
             END 
            ELSE 
              NULL 
            END,
      S.ID_USER_MOD=P_ID_USER,
      S.FECHA_MOD= SYSDATE;
      
      <<SALIDA>>  
      P_ERROR:=l_error;
      P_MSGERROR := l_msgerror;
    END SP_PROCESAR_ASIS_DOCENTE;
    
    PROCEDURE SP_REGISTRAR_ASIS_DOCENTE(
     P_ID_ASISTENCIA_CARGA NUMBER,
     P_FECHA DATE,
     P_TIPO VARCHAR2,--E: ENTRADA, S:SALIDA
     P_ID_USER NUMBER,
     P_TIPO_MAR VARCHAR2,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   ) AS
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_contar number;
     l_fecha date;
     l_id_trabajador number;
     l_id_depto varchar2(10);
     L_ASIST_RANGO NUMBER;
     l_desde date;
     l_hasta date;
     l_prog_desde date;
     l_prog_hasta date;
     l_fec_actual date;
     l_id_entidad number:=7124;
     l_id_anho number;
   BEGIN
      
      select to_date(to_char(P_FECHA,'YYYY-MM-DD'),'YYYY-MM-DD'),to_char(sysdate,'YYYY-MM-DD'),to_number(to_char(P_FECHA,'YYYY')) into l_fecha,l_fec_actual,l_id_anho from dual;
      
      select a.id_trabajador,c.id_depto_padre,a.desde_prog,a.hasta_prog 
      into 
      l_id_trabajador,l_id_depto, l_prog_desde,l_prog_hasta
      FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t, ENOC.VW_ENT_DEP_AREA_CCOSTO C
      WHERE  a.id_trabajador=t.id_trabajador
      and t.id_sedearea = c.id_sedearea
      and a.ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      
      select count(*) into l_contar from plla_parametros_valor  a, plla_parametros b
      where b.id_parametro=a.id_parametro
      and a.id_entidad=l_id_entidad
      and a.id_anho=l_id_anho;
      
      
       IF l_contar=0 then
        l_error:=1;
        l_msgerror:='Falta configurar parametros para el año '||to_char(l_id_anho);
        GOTO SALIDA;
      end if;
      
      select coalesce(a.importe,0) into L_ASIST_RANGO from plla_parametros_valor  a, plla_parametros b
      where b.id_parametro=a.id_parametro
      and b.codigo='PARAM_ASIST_DOC_RANG'
      and a.id_entidad=l_id_entidad
      and a.id_anho=l_id_anho;
        

      IF P_TIPO='S' THEN
      
        if l_fecha <> l_fec_actual then
             l_error:=1;
             l_msgerror:='Registre su asistencia en la fecha '||to_char(l_fecha,'DD/MM/YYYY');
             GOTO SALIDA;
        end if;
        
        if P_FECHA < l_prog_desde then
             l_error:=1;
             l_msgerror:='Registre su salida despues de '||to_char(l_prog_desde,'DD/MM/YYYY');
             GOTO SALIDA;
        end if;
        
        
        l_hasta := l_prog_hasta + L_ASIST_RANGO / 1440;
        
        if P_FECHA > l_hasta then 
           l_error:=1;
           l_msgerror:='Registre su asistencia antes de '||to_char(l_hasta,'HH24:MI');
           GOTO SALIDA;
        end if;
        
        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          HASTA_REAL=P_FECHA,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= SYSDATE
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      ELSE

       
        
        l_desde := l_prog_desde - L_ASIST_RANGO / 1440;
        
        if P_FECHA < l_desde then
           l_error:=1;
           l_msgerror:='Registre su asistencia después de '||to_char(l_desde,'HH24:MI');
           GOTO SALIDA;
        end if;
        
        if P_FECHA > l_prog_hasta then
           l_error:=1;
           l_msgerror:='Registre su asistencia antes de '||to_char(l_prog_hasta,'HH24:MI');
           GOTO SALIDA;
        end if;
      
        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          DESDE_REAL=P_FECHA,
          TIPO_MAR=P_TIPO_MAR,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= SYSDATE
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      END IF;
      
      enoc.PKG_ASSISTANCE.SP_PROCESAR_ASIS_DOCENTE(
         l_fecha,--SI P_TIPO=FE OBLIAGATORIO
         l_id_depto,
         0,
         null,
         l_id_trabajador,
         'N',
         0,
         'FE',--AM: Año y Mes,FE: por fecha
         0, --SI P_TIPO=AM OBLIAGATORIO
         0, --SI P_TIPO=AM OBLIAGATORIO
         P_ID_USER,
         l_error,
         l_msgerror
       );
      
      <<SALIDA>>  
      P_ERROR:=l_error;
      P_MSGERROR := l_msgerror;
   END SP_REGISTRAR_ASIS_DOCENTE;
   
   PROCEDURE SP_REGISTRAR_ASIS_DOCENTE_NEW(
     P_ID_ASISTENCIA_CARGA NUMBER,
     P_FECHA DATE,
     P_TIPO VARCHAR2,--E: ENTRADA, S:SALIDA
     P_ID_USER NUMBER,
     P_TIPO_MAR VARCHAR2,
     P_ID_TIPO_MARCACION NUMBER,
     P_LAT VARCHAR2,
     P_LNG VARCHAR2,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   ) AS
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_contar number;
     l_fecha date;
     l_id_trabajador number;
     l_id_depto varchar2(10);
     L_ASIST_RANGO NUMBER;
     l_desde date;
     l_hasta date;
     l_prog_desde date;
     l_prog_hasta date;
     l_fec_actual date;
     l_id_entidad number:=7124;
     l_id_anho number;
     l_codigo_tipo_modalidad  VARCHAR2(10);
     l_id_area number;
     l_fecha_reg date;
     l_resultado number:=0;
   BEGIN

      select to_date(to_char(P_FECHA,'YYYY-MM-DD'),'YYYY-MM-DD'),to_char(sysdate,'YYYY-MM-DD'),to_number(to_char(P_FECHA,'YYYY')) into l_fecha,l_fec_actual,l_id_anho from dual;
      
      l_fecha_reg:= l_fec_actual;
      
      select a.id_trabajador,c.id_depto_padre,a.desde_prog,a.hasta_prog, c.id_area 
      into 
      l_id_trabajador,l_id_depto, l_prog_desde,l_prog_hasta,l_id_area
      FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t, ENOC.VW_ENT_DEP_AREA_CCOSTO C
      WHERE  a.id_trabajador=t.id_trabajador
      and t.id_sedearea = c.id_sedearea
      and a.ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      
      select count(*) into l_contar from plla_parametros_valor  a, plla_parametros b
      where b.id_parametro=a.id_parametro
      and a.id_entidad=l_id_entidad
      and a.id_anho=l_id_anho;
      
      
       IF l_contar=0 then
        l_error:=1;
        l_msgerror:='Falta configurar parametros para el año '||to_char(l_id_anho);
        GOTO SALIDA;
      end if;
      
      select coalesce(a.importe,0) into L_ASIST_RANGO from plla_parametros_valor  a, plla_parametros b
      where b.id_parametro=a.id_parametro
      and b.codigo='PARAM_ASIST_DOC_RANG'
      and a.id_entidad=l_id_entidad
      and a.id_anho=l_id_anho;
      
      IF P_ID_TIPO_MARCACION=1 THEN
      
      
      
          select count(1) into l_contar from  MOISES.TRABAJADOR_SIT_ESP a,  ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
          where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
          and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB
          and a.id_trabajador= l_id_trabajador
          and l_fecha_reg between a.desde and coalesce(a.hasta,l_fec_actual);
          
          if l_contar=0 then
            l_error:=1;
            l_msgerror:='Verificar configuración de asignacion de modalidad';
            GOTO SALIDA;
          end if;
          
          select b.codigo into l_codigo_tipo_modalidad from  MOISES.TRABAJADOR_SIT_ESP a,  ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c
          where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
          and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB
          and a.id_trabajador= l_id_trabajador
          and l_fecha_reg between a.desde and coalesce(a.hasta,l_fec_actual);
          
          if l_codigo_tipo_modalidad='TP' THEN
          
           
            select count(*) into l_contar from(
              select x.id_mapa_poligono from enoc.plla_mapa_trabajador x
              where x.id_trabajador=l_id_trabajador 
              union
              select y.id_mapa_poligono from enoc.plla_mapa_area y
              where y.id_entidad=l_id_entidad 
              and y.id_depto=l_id_depto 
              and y.id_area =l_id_area
            );
            
            if l_contar=0 THEN
               l_error:=1;
               l_msgerror:='No esta asignado a polígono de marcación';
               GOTO SALIDA;
            END IF;
            if P_LAT is null or P_LNG is null then
               l_error:=1;
               l_msgerror:='No es posible marcar asistencia porque debes activar el GPS, ir a ajustes/accesibilidad en tu teléfono.';
               GOTO SALIDA;
            end if;
            enoc.PKG_ASSISTANCE.SP_VALIDAR_COORDENADA_ASIST(
               l_id_trabajador,
               P_LAT,
               P_LNG,
               l_resultado,
               l_error,
               l_msgerror
             );
             if l_resultado=0 then
               l_error:=1;
               l_msgerror:='Está fuera del Área del trabajo';
               GOTO SALIDA;
             end if;
        end if;
      END IF;  

      IF P_TIPO='S' THEN
      
        if l_fecha <> l_fec_actual then
             l_error:=1;
             l_msgerror:='Registre su asistencia en la fecha '||to_char(l_fecha,'DD/MM/YYYY');
             GOTO SALIDA;
        end if;
        
        if P_FECHA < l_prog_desde then
             l_error:=1;
             l_msgerror:='Registre su salida despues de '||to_char(l_prog_desde,'DD/MM/YYYY');
             GOTO SALIDA;
        end if;
        
        
        l_hasta := l_prog_hasta + L_ASIST_RANGO / 1440;
        
        if P_FECHA > l_hasta then 
           l_error:=1;
           l_msgerror:='Registre su asistencia antes de '||to_char(l_hasta,'HH24:MI');
           GOTO SALIDA;
        end if;
        
        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          HASTA_REAL=P_FECHA,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= SYSDATE
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      ELSE

       
        
        l_desde := l_prog_desde - L_ASIST_RANGO / 1440;
        
        if P_FECHA < l_desde then
           l_error:=1;
           l_msgerror:='Registre su asistencia después de '||to_char(l_desde,'HH24:MI');
           GOTO SALIDA;
        end if;
        
        if P_FECHA > l_prog_hasta then
           l_error:=1;
           l_msgerror:='Registre su asistencia antes de '||to_char(l_prog_hasta,'HH24:MI');
           GOTO SALIDA;
        end if;
      
        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          DESDE_REAL=P_FECHA,
          TIPO_MAR=P_TIPO_MAR,
          ID_TIPO_MARCACION=P_ID_TIPO_MARCACION,
          LAT=P_LAT,
          LNG=P_LNG,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= SYSDATE
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      END IF;
      
      enoc.PKG_ASSISTANCE.SP_PROCESAR_ASIS_DOCENTE(
         l_fecha,--SI P_TIPO=FE OBLIAGATORIO
         l_id_depto,
         0,
         null,
         l_id_trabajador,
         'N',
         0,
         'FE',--AM: Año y Mes,FE: por fecha
         0, --SI P_TIPO=AM OBLIAGATORIO
         0, --SI P_TIPO=AM OBLIAGATORIO
         P_ID_USER,
         l_error,
         l_msgerror
       );
      
      <<SALIDA>>  
      P_ERROR:=l_error;
      P_MSGERROR := l_msgerror;
   END SP_REGISTRAR_ASIS_DOCENTE_NEW;
   
   PROCEDURE SP_JUSTIFICAR_ASIS_DOCENTE(
     P_ID_ASISTENCIA_CARGA NUMBER,
     P_TIPO VARCHAR2,--J=JUSTIFICAR, E:ELIMINAR
     P_MOTIVO VARCHAR2,
     P_ID_USER NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   ) AS
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_contar number;
     l_fecha date;
     l_id_trabajador number;
     l_id_depto varchar2(10);
   BEGIN
      
      
      select a.fecha,a.id_trabajador,c.id_depto_padre 
      into 
      l_fecha,l_id_trabajador,l_id_depto
      FROM  ENOC.PLLA_ASISTENCIA_CARGA  a , moises.trabajador t, ENOC.VW_ENT_DEP_AREA_CCOSTO C
      WHERE  a.id_trabajador=t.id_trabajador
      and t.id_sedearea = c.id_sedearea
      and a.ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      
    
      IF P_TIPO = 'E' THEN
        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          DESDE_JUST = NULL,
          HASTA_JUST = NULL,
          JUSTIFICACION = P_MOTIVO,
          ID_USER_JUST=P_ID_USER,
          FECHA_JUST = SYSDATE,
          TIPO = NULL,
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= SYSDATE
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      ELSE
        UPDATE ENOC.PLLA_ASISTENCIA_CARGA SET
          DESDE_JUST=DESDE_PROG,
          HASTA_JUST = CASE WHEN  HASTA_PROG < SYSDATE THEN CASE WHEN HASTA_REAL IS NULL THEN HASTA_PROG ELSE NULL END END,
          JUSTIFICACION = P_MOTIVO,
          ID_USER_JUST=P_ID_USER,
          FECHA_JUST = SYSDATE,
          TIPO = 'J',
          ID_USER_MOD=P_ID_USER,
          FECHA_MOD= SYSDATE
        WHERE ID_ASISTENCIA_CARGA= P_ID_ASISTENCIA_CARGA;
      END IF;
      
      enoc.PKG_ASSISTANCE.SP_PROCESAR_ASIS_DOCENTE(
         l_fecha,--SI P_TIPO=FE OBLIAGATORIO
         l_id_depto,
         0,
         null,
         l_id_trabajador,
         'N',
         0,
         'FE',--AM: Año y Mes,FE: por fecha
         0, --SI P_TIPO=AM OBLIAGATORIO
         0, --SI P_TIPO=AM OBLIAGATORIO
         P_ID_USER,
         l_error,
         l_msgerror
       );
      
      <<SALIDA>>  
      P_ERROR:=l_error;
      P_MSGERROR := l_msgerror;
   END SP_JUSTIFICAR_ASIS_DOCENTE;
   PROCEDURE SP_VALIDAR_COORDENADA_ASIST(
     P_ID_TRABAJADOR NUMBER,
     P_LAT NUMBER,
     P_LNG NUMBER,
     P_RESULTADO OUT NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   ) AS
   l_error number:=0;
   l_msgerror varchar2(200):='';
   l_resultado number:=0;
   l_id_area number;
   l_id_entidad number;
   l_id_depto varchar2(10);
   
   BEGIN
   select 
   a.id_entidad,
   b.id_area,
   b.id_depto_padre
   into
   l_id_entidad,
   l_id_area,
   l_id_depto
   from moises.trabajador a, ENOC.vw_ent_dep_area_ccosto b 
   where a.id_sedearea=b.id_sedearea
   and a.id_trabajador=P_ID_TRABAJADOR;
   

  SELECT count(*) into l_resultado
  FROM ENOC.plla_mapa_coordenada a, enoc.PLLA_MAPA_POLIGONO b 
  WHERE a.id_mapa_poligono=b.id_mapa_poligono
  and (ENOC.FC_DISTANCIA_PUNTOS(a.latn,a.lngn, coalesce(P_LAT,0), coalesce(P_LNG,0))+0.18)<=coalesce(a.radiome,0)
  and b.vigencia=1
  and a.ID_MAPA_POLIGONO in(
     select
     ID_MAPA_POLIGONO
     from enoc.PLLA_MAPA_TRABAJADOR
     where id_trabajador=P_ID_TRABAJADOR
     union
     select
     ID_MAPA_POLIGONO
     from enoc.PLLA_MAPA_AREA
     where ID_ENTIDAD=l_id_entidad
     and id_area=l_id_area
     and ID_DEPTO=l_id_depto
   );
   
   P_RESULTADO:=l_resultado;
   P_ERROR:=l_error;
   P_MSGERROR := l_msgerror;
   
   END SP_VALIDAR_COORDENADA_ASIST;
   PROCEDURE SP_AREAS_ASIGNAR(P_ID_MAPA_POLIGONO NUMBER, CURSOR OUT SYS_REFCURSOR )
   AS
   l_nivel_min number;
   l_nivel_max number;
   l_j number:=0;
   L_ID_ENTIDAD NUMBER; 
   L_ID_DEPTO VARCHAR2(10);
   BEGIN 
     SELECT ID_ENTIDAD,CASE WHEN ID_DEPTO = '0' THEN '' ELSE ID_DEPTO END INTO L_ID_ENTIDAD,L_ID_DEPTO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO;
     DELETE FROM ENOC.TT_AREA_ASIGNAR;
     INSERT INTO ENOC.TT_AREA_ASIGNAR(
      ID,
      ID_AREA,
      ID_PARENT,
      NIVEL,
      ASIGNAR,
      trabajador,
      NOMBRE,
      HIJO,
      HIJO_QUEDA
      )
      SELECT (row_number() OVER( ORDER BY NIVEL,ID_AREA ASC )),T.ID_AREA,T.ID_PARENT,T.NIVEL,T.C1,T.C2,T.NOMBRE,T.CANTIDAD,T.C3
		FROM (select 
	      (row_number() OVER( ORDER BY ID_AREA ASC )),
	      ID_AREA,
	      COALESCE(ID_PARENT,0) AS ID_PARENT,
	      max(LEVEL) AS NIVEL,--LEVEL,
	      0 AS C1,
	      0 AS C2,
	      A.NOMBRE,
	      (SELECT COUNT(*) FROM eliseo.org_area Y WHERE Y.ID_PARENT=A.ID_AREA  AND coalesce(Y.gth,0)=1
	      and Y.id_entidad=L_ID_ENTIDAD) AS CANTIDAD,
	      0 AS C3
	      from eliseo.org_area a
	      where coalesce(a.gth,0)=1
	      and id_entidad=L_ID_ENTIDAD
	      -- START WITH id_area = 3
	      CONNECT BY PRIOR A.ID_AREA = A.id_parent
	     GROUP BY ID_AREA,ID_PARENT,a.NOMBRE)T;
      
      delete from ENOC.TT_AREA_ASIGNAR where hijo=0
      and id_area not in(
        select id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
        where id_entidad=L_ID_ENTIDAD 
        and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
      );
      
      delete from ENOC.TT_AREA_ASIGNAR where hijo=0
      and id_area not in(
        select c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
        where t.id_sedearea=c.id_sedearea
        and t.id_entidad=L_ID_ENTIDAD 
        and c.id_entidad=L_ID_ENTIDAD 
        and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
        and t.id_situacion_trabajador='1'
      );
      
      delete from ENOC.TT_AREA_ASIGNAR
      where hijo=0
      and id_area in(
          select id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );
      
      MERGE INTO ENOC.TT_AREA_ASIGNAR S 
      USING(
       select
          A.ID,
          (SELECT COUNT(*) FROM  ENOC.TT_AREA_ASIGNAR Y WHERE Y.ID_PARENT=A.ID_AREA) AS NRO_HIJO
        FROM  ENOC.TT_AREA_ASIGNAR A
      )T ON(T.ID=S.ID)
      WHEN  MATCHED THEN UPDATE SET  
      S.HIJO_QUEDA=T.NRO_HIJO;
      
      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in(
        select id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
        where id_entidad=L_ID_ENTIDAD 
        and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
      );
      
      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in(
        select c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
        where t.id_sedearea=c.id_sedearea
        and t.id_entidad=L_ID_ENTIDAD 
        and c.id_entidad=L_ID_ENTIDAD 
        and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
        and t.id_situacion_trabajador='1'
      );
      
      delete from ENOC.TT_AREA_ASIGNAR
      where HIJO_QUEDA=0
      and id_area in(
          select id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );
      
      select min(nivel), max(nivel) into l_nivel_min,l_nivel_max
      from ENOC.TT_AREA_ASIGNAR;
      l_j:=l_nivel_max;
      
      while(l_nivel_min<=l_j) loop
          
          
          MERGE INTO ENOC.TT_AREA_ASIGNAR S 
          USING(
           select
              A.ID,
              (SELECT COUNT(*) FROM  ENOC.TT_AREA_ASIGNAR Y WHERE Y.ID_PARENT=A.ID_AREA) AS NRO_HIJO
            FROM  ENOC.TT_AREA_ASIGNAR A
          )T ON(T.ID=S.ID)
          WHEN  MATCHED THEN UPDATE SET  
          S.HIJO_QUEDA=T.NRO_HIJO;
          
          delete from ENOC.TT_AREA_ASIGNAR 
          where HIJO_QUEDA=0
          --and nivel=l_j
          and id_area not in(
            select id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
            where id_entidad=L_ID_ENTIDAD 
            and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          );
          
          delete from ENOC.TT_AREA_ASIGNAR 
          where HIJO_QUEDA=0
          --and nivel=l_j
          and id_area not in(
            select c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
            where t.id_sedearea=c.id_sedearea
            and t.id_entidad=L_ID_ENTIDAD 
            and c.id_entidad=L_ID_ENTIDAD 
            and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
            and t.id_situacion_trabajador='1'
          );
          
          delete from ENOC.TT_AREA_ASIGNAR
          where HIJO_QUEDA=0
          --and nivel=l_j
          and id_area in(
              select id_area from ENOC.plla_mapa_area 
              where id_entidad=L_ID_ENTIDAD 
              and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
              AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
          );
          
           l_j:=l_j - 1;
      
      end loop;
      
      MERGE INTO ENOC.TT_AREA_ASIGNAR S 
      USING(
       select
          A.ID,
          (SELECT COUNT(*) FROM  ENOC.TT_AREA_ASIGNAR Y WHERE Y.ID_PARENT=A.ID_AREA) AS NRO_HIJO
        FROM  ENOC.TT_AREA_ASIGNAR A
      )T ON(T.ID=S.ID)
      WHEN  MATCHED THEN UPDATE SET  
      S.HIJO_QUEDA=T.NRO_HIJO;
      
      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in(
        select id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
        where id_entidad=L_ID_ENTIDAD 
        and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
      );
      
      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in(
        select c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
        where t.id_sedearea=c.id_sedearea
        and t.id_entidad=L_ID_ENTIDAD 
        and c.id_entidad=L_ID_ENTIDAD 
        and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
        and t.id_situacion_trabajador='1'
      );
      
      delete from ENOC.TT_AREA_ASIGNAR
      where HIJO_QUEDA=0
      and id_area in(
          select id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );
      
      
      update ENOC.TT_AREA_ASIGNAR set
      asignar = 2
      where id_area in(
          select id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );
      
      update ENOC.TT_AREA_ASIGNAR set
      asignar = 1
      where id_area  in(
          select id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          
      ) AND asignar=0;
      
      update ENOC.TT_AREA_ASIGNAR set
      trabajador = 1
      where id_area  in(
          select c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
          where t.id_sedearea=c.id_sedearea
          and t.id_entidad=L_ID_ENTIDAD 
          and c.id_entidad=L_ID_ENTIDAD 
          and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          and t.id_situacion_trabajador='1'
      );
  
  
       OPEN cursor FOR  
               
        select 
          ID_AREA,
          ID_PARENT,
          max(LEVEL) as NIVEL,
          ASIGNAR,
          trabajador,
          NOMBRE,
          HIJO,
          HIJO_QUEDA,
          '' as seleccionado
        from ENOC.TT_AREA_ASIGNAR 
        --START WITH id_area = 3
        CONNECT BY PRIOR ID_AREA = id_parent
       GROUP BY ID,ID_AREA,ID_PARENT,ASIGNAR,trabajador,NOMBRE,HIJO,HIJO_QUEDA
      ORDER BY ID;

        
   END SP_AREAS_ASIGNAR;
   
   PROCEDURE SP_AREAS_ASIGNADOS(P_ID_MAPA_POLIGONO NUMBER, CURSOR OUT SYS_REFCURSOR )
   AS
   l_id_area number;
   l_contar number:=0;
   L_ID_ENTIDAD NUMBER; 
   L_ID_DEPTO VARCHAR2(10);
   
   CURSOR curArea IS
   select id_area from enoc.PLLA_MAPA_AREa where id_mapa_poligono=P_ID_MAPA_POLIGONO;
   
   CURSOR curAreaAsig IS
   select 
      a.id_area,
      a.id_parent,
      level as nivel,
      case when b.id_mapa_area is not null then 1 else 0 end as asignado,
      a.nombre,
      (select count(*) from moises.trabajador t,enoc.VW_ENT_DEP_AREA_CCOSTO  cc 
      where cc.id_sedearea=t.id_sedearea 
      and  cc.id_area=a.id_area 
      and t.id_entidad=L_ID_ENTIDAD
      and cc.id_depto_padre LIKE L_ID_DEPTO||'%'
      and t.id_situacion_trabajador='1') as trabajador,
      b.id_mapa_area
      from eliseo.org_area a left join enoc.PLLA_MAPA_AREa b on a.id_area=b.id_area and b.id_mapa_poligono=P_ID_MAPA_POLIGONO
      where a.id_entidad=L_ID_ENTIDAD
      and coalesce(a.id_parent,0) not in(0,1)
      START WITH a.id_area = l_id_area
      CONNECT BY PRIOR a.id_parent=A.ID_AREA;
   
   BEGIN 
   
    SELECT ID_ENTIDAD,CASE WHEN ID_DEPTO = '0' THEN '' ELSE ID_DEPTO END INTO L_ID_ENTIDAD,L_ID_DEPTO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO;
    DELETE FROM ENOC.TT_AREA_ASIGNADO;
   
    FOR cur in curArea LOOP
    BEGIN
      l_id_area:=cur.id_area;
      FOR asi in curAreaAsig LOOP
      BEGIN
        select count(*) into l_contar from ENOC.TT_AREA_ASIGNADO where id_area=asi.id_area;
        if l_contar=0 then
          insert into ENOC.TT_AREA_ASIGNADO( 
          ID_AREA,
          ID_PARENT,
          NIVEL,
          ASIGNADO,
          NOMBRE,
          TRABAJADOR,
          ID_MAPA_AREA,
          ID_MAPA_POLIGONO
          )values(
          asi.id_area,
          asi.id_parent,
          asi.nivel,
          asi.asignado,
          asi.nombre,
          asi.trabajador,
          asi.id_mapa_area,
          P_ID_MAPA_POLIGONO
          );
        end if;
      END;
      END LOOP;
      
    END;
    END LOOP;
          
    
       OPEN cursor FOR  
               
        SELECT (row_number() OVER( ORDER BY NIVEL,ID_AREA ASC )),
        T.ID_AREA,T.ID_AREA,T.ID_PARENT,T.NIVEL,T.ASIGNADO,T.TRABAJADOR,T.NOMBRE,T.ID_MAPA_AREA,T.ID_MAPA_POLIGONO
        FROM (SELECT
        ID_AREA,
        ID_PARENT,
        MAX(LEVEL) as NIVEL,
        ASIGNADO,
        NOMBRE,
        TRABAJADOR,
        ID_MAPA_AREA,
        ID_MAPA_POLIGONO
        from ENOC.TT_AREA_ASIGNADO 
        -- START WITH id_area = 3
        CONNECT BY PRIOR ID_AREA = id_parent
        GROUP BY ID_AREA,ID_PARENT,ASIGNADO,trabajador,NOMBRE,ID_MAPA_AREA,ID_MAPA_POLIGONO)T;

        
   END SP_AREAS_ASIGNADOS;
   
   PROCEDURE SP_PROCESAR_COPIA_ASISTENCIA(
     P_USER NUMBER,
     P_RESULTADO OUT NUMBER,
     P_ERROR OUT NUMBER,
     P_MSGERROR OUT VARCHAR2
   ) AS
   l_error number:=0;
   l_msgerror varchar2(200):='';
   l_resultado number:=0;
   l_j number:=0;
   l_id_entidad number;
   l_id_depto varchar2(10);
   l_id_trabajador number;
   l_desde date;
   l_hasta date;
   
   CURSOR curAsi IS
   select 
    ID_TRABAJADOR,
    IDASISTENCIA,
    FECHA,
    FECHAHORA,
    TIPOINGRESO,
    TIPOMARCACION,
    NUM_MARCADOR,
    NUMDOCUMENTO,
    FOTOCHECK 
    from ENOC.PLLA_ASIST_MARCACION_TMP 
    where id_trabajador is not null
    order by ID_TRABAJADOR,FECHAHORA;
   
   BEGIN
   
    FOR cur in curAsi LOOP
     BEGIN
     if l_j>0 then
      if l_id_trabajador<>cur.ID_TRABAJADOR then
      
          select b.id_entidad,c.id_depto_padre,min(to_date(to_char(a.FECHAHORA,'YYYY-MM-DD'),'YYYY-MM-DD')),max(to_date(to_char(a.FECHAHORA,'YYYY-MM-DD'),'YYYY-MM-DD'))
          into l_id_entidad,l_id_depto,l_desde,l_hasta
          from ENOC.PLLA_ASIST_MARCACION_TMP a,moises.trabajador b, ENOC.VW_ENT_DEP_AREA_CCOSTO c
          where a.ID_TRABAJADOR=b.ID_TRABAJADOR
          and b.id_sedearea=c.id_sedearea
          and a.ID_TRABAJADOR=l_id_trabajador;
          
          ENOC.PKG_ASSISTANCE.SP_PROCESAR_MARCACION(
            l_desde,
            l_hasta,
            l_id_entidad,
            l_id_depto,
            0,
            l_id_trabajador,
            P_USER,
            l_error,
            l_msgerror
          );
          if l_error =1 then
            l_resultado:=l_resultado +1;
          end if;
      end if;
     end if;
     ENOC.PKG_ASSISTANCE.SP_REGISTRAR_MARCACION(
          cur.ID_TRABAJADOR, 
          2,--huella
          cur.FECHAHORA, 
          null,
          null,
          null,
          CUR.NUM_MARCADOR,
          cur.FOTOCHECK,
          NULL,
          'A',
          NULL,
          P_USER, 
          l_error,
          l_msgerror
        );
        l_id_trabajador:=cur.ID_TRABAJADOR;
        l_j:= l_j + 1;
        
     END;
    END LOOP;
   
    if l_j>0 then

      
        select b.id_entidad,c.id_depto_padre,min(to_date(to_char(a.FECHAHORA,'YYYY-MM-DD'),'YYYY-MM-DD')),max(to_date(to_char(a.FECHAHORA,'YYYY-MM-DD'),'YYYY-MM-DD'))
        into l_id_entidad,l_id_depto,l_desde,l_hasta
        from ENOC.PLLA_ASIST_MARCACION_TMP a,moises.trabajador b, ENOC.VW_ENT_DEP_AREA_CCOSTO c
        where a.ID_TRABAJADOR=b.ID_TRABAJADOR
        and b.id_sedearea=c.id_sedearea
        and a.ID_TRABAJADOR=l_id_trabajador;
        
        ENOC.PKG_ASSISTANCE.SP_PROCESAR_MARCACION(
          l_desde,
          l_hasta,
          l_id_entidad,
          l_id_depto,
          0,
          l_id_trabajador,
          P_USER,
          l_error,
          l_msgerror
        );
        if l_error =1 then
            l_resultado:=l_resultado +1;
        end if;
  
     end if;
     
     delete from  ENOC.PLLA_ASIST_MARCACION_TMP ;
     P_RESULTADO:=l_resultado;
     P_ERROR:=l_error;
     P_MSGERROR := l_msgerror;
   
   END SP_PROCESAR_COPIA_ASISTENCIA;
  
  PROCEDURE SP_COPIAR_HORARIO(P_IDS_TIPO_HORARIO VARCHAR2,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,P_ID_USER NUMBER,
	P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) 
	IS 
		L_ERROR NUMBER:=0;
		L_MSGERROR VARCHAR2(5000):='';
		ID_TIPO_HORARIO_MAX NUMBER:=0;
		L_CONTAR NUMBER:=0;
	BEGIN
	
		 FOR TIPOHORARIO IN (
		   		SELECT REGEXP_SUBSTR(P_IDS_TIPO_HORARIO, '[^,]+', 1, LEVEL) ID
				FROM DUAL
				CONNECT BY REGEXP_SUBSTR(P_IDS_TIPO_HORARIO, '[^,]+', 1, LEVEL) IS NOT NULL)
		 LOOP
			
			FOR ITEM IN (
				SELECT C.* FROM (SELECT A.ID_ENTIDAD,A.ID_DEPTO,B.*
				FROM (SELECT DISTINCT D.ID_ENTIDAD,D.ID_DEPTO 
					FROM ELISEO.CONTA_ENTIDAD_DEPTO D
					INNER JOIN ELISEO.VW_SEDE_AREA E ON D.ID_ENTIDAD = E.ID_ENTIDAD AND D.ID_DEPTO = E.ID_DEPTO_PADRE 
					WHERE D.ID_ENTIDAD = 17112 AND D.ES_GRUPO = '1' AND LENGTH(D.ID_DEPTO) = 1) A, 
				(SELECT NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO FROM ENOC.PLLA_TIPO_HORARIO WHERE ID_TIPO_HORARIO = TIPOHORARIO.ID) B
				WHERE 1=1 AND 1 = (CASE WHEN P_ID_DEPTO_TO = '0' THEN 1 ELSE CASE WHEN ID_DEPTO = P_ID_DEPTO_TO THEN 1 ELSE 0 END END))C
				WHERE C.ID_DEPTO <> '0'
			)
		 	LOOP
			 	SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_TIPO_HORARIO 
			 	WHERE UPPER(TRIM(NOMBRE)) = UPPER(TRIM(ITEM.NOMBRE)) AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO;
			 	IF L_CONTAR = 0 THEN 
				 	select coalesce(max(ID_TIPO_HORARIO),0)+1 into ID_TIPO_HORARIO_MAX from enoc.PLLA_TIPO_HORARIO;
				 	INSERT INTO ENOC.PLLA_TIPO_HORARIO(ID_TIPO_HORARIO,ID_ENTIDAD,ID_DEPTO,NOMBRE,DESCRIPCION,VIGENCIA,ID_TIPO_CONFIG_HORARIO,CODIGO,CONTROL_CULTO)
				 	VALUES (ID_TIPO_HORARIO_MAX,ITEM.ID_ENTIDAD,ITEM.ID_DEPTO,ITEM.NOMBRE,ITEM.DESCRIPCION,ITEM.VIGENCIA,ITEM.ID_TIPO_CONFIG_HORARIO,ITEM.CODIGO,ITEM.CONTROL_CULTO);
			 	ELSE 
			 		SELECT ID_TIPO_HORARIO INTO ID_TIPO_HORARIO_MAX FROM ENOC.PLLA_TIPO_HORARIO 
			 		WHERE UPPER(TRIM(NOMBRE)) = UPPER(TRIM(ITEM.NOMBRE)) AND ID_ENTIDAD = P_ID_ENTIDAD_TO AND ID_DEPTO = ITEM.ID_DEPTO AND ROWNUM = 1;
					UPDATE ENOC.PLLA_TIPO_HORARIO SET ID_TIPO_CONFIG_HORARIO = ITEM.ID_TIPO_CONFIG_HORARIO, 
					 DESCRIPCION = ITEM.DESCRIPCION, CODIGO = ITEM.CODIGO , CONTROL_CULTO = ITEM.CONTROL_CULTO
					WHERE ID_TIPO_HORARIO = ID_TIPO_HORARIO_MAX;
			 	END IF;
			 
			 	FOR DETAIL IN (
					SELECT ID_DIA,ID_TIPO_HORARIO_MAX AS ID_TIPO_HORARIO,ID_CONTROL_ASIST,ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,HORA_ENTRADA_REF,
					HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,P_ID_USER AS ID_USER_REG,CURRENT_DATE AS FECHA_REG 
					FROM ENOC.PLLA_HORARIO_DETALLE WHERE ID_TIPO_HORARIO = TIPOHORARIO.ID
				)
			 	LOOP
				 	
				 	SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_HORARIO_DETALLE WHERE ID_TIPO_HORARIO = ID_TIPO_HORARIO_MAX AND ID_DIA = DETAIL.ID_DIA;
				 	IF L_CONTAR > 0 THEN 
				 		UPDATE ENOC.PLLA_HORARIO_DETALLE SET ID_CONTROL_ASIST = DETAIL.ID_CONTROL_ASIST,ID_HORAS_REF = DETAIL.ID_HORAS_REF,
				 		HORA_ENTRADA = DETAIL.HORA_ENTRADA, HORA_SALIDA = DETAIL.HORA_SALIDA, HORA_ENTRADA_REF = DETAIL.HORA_ENTRADA_REF,
				 		HORA_SALIDA_REF = DETAIL.HORA_SALIDA_REF, SAL_DIASIG = DETAIL.SAL_DIASIG, HORAS = DETAIL.HORAS, NUM_HORAS = DETAIL.NUM_HORAS,
				 		ID_USER_MOD = P_ID_USER, FECHA_MOD = CURRENT_DATE
				 		WHERE ID_DIA = DETAIL.ID_DIA AND ID_TIPO_HORARIO = ID_TIPO_HORARIO_MAX;
				 	ELSE 
					 	INSERT INTO ENOC.PLLA_HORARIO_DETALLE(ID_DIA,ID_TIPO_HORARIO,ID_CONTROL_ASIST,ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,
					 	HORA_ENTRADA_REF,HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,ID_USER_REG,FECHA_REG)
					 	VALUES (DETAIL.ID_DIA,ID_TIPO_HORARIO_MAX,DETAIL.ID_CONTROL_ASIST,DETAIL.ID_HORAS_REF,DETAIL.HORA_ENTRADA,
					 	DETAIL.HORA_SALIDA,DETAIL.HORA_ENTRADA_REF,DETAIL.HORA_SALIDA_REF,DETAIL.SAL_DIASIG,DETAIL.HORAS,DETAIL.NUM_HORAS,
					 	P_ID_USER,CURRENT_DATE);
				 	END IF;
			 		
			 	END LOOP;
		 		
		 	END LOOP;
		 	
			
		 END LOOP;
		   
		<<salida_val>> 
	    P_ERROR:= L_ERROR;
	    P_MSGERROR:= L_MSGERROR;
	END SP_COPIAR_HORARIO;
     
    PROCEDURE SP_COPIAR_HORARIO_BLOQUE(P_ID_HORARIO_BLOQUE NUMBER,P_ID_ENTIDAD_TO NUMBER,P_ID_DEPTO_TO VARCHAR2,
		P_ID_USER NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) 
	IS 
		L_ERROR NUMBER:=0;
		L_MSGERROR VARCHAR2(5000):='';
		L_CONTAR NUMBER:=0;
		L_ID_HORARIO_BLOQUE NUMBER:=0;
		L_CODIGO VARCHAR2(200):='';
		L_ID_ENTIDAD NUMBER:=0;
		L_ID_DEPTO VARCHAR2(10):='';
		L_CONTAR_REG NUMBER:=0;
	BEGIN
		-- ha tener en cuenta que sólo se copiará a los deptos padres que estan dentro de la tabla ELISEO.ORG_SEDE_AREA
		 FOR ITEM IN (
		   		SELECT DISTINCT A.ID_ENTIDAD,A.ID_DEPTO FROM ELISEO.CONTA_ENTIDAD_DEPTO A
				INNER JOIN ELISEO.VW_SEDE_AREA B ON A.ID_ENTIDAD = B.ID_ENTIDAD AND A.ID_DEPTO = B.ID_DEPTO_PADRE 
				WHERE A.ID_ENTIDAD = P_ID_ENTIDAD_TO AND A.ES_GRUPO = '1' AND LENGTH(A.ID_DEPTO) = 1
				AND 1 = (CASE WHEN P_ID_DEPTO_TO = '0' THEN 1 ELSE CASE WHEN A.ID_DEPTO = P_ID_DEPTO_TO THEN 1 ELSE 0 END END)
				AND A.ID_DEPTO <> '0')
		 LOOP
			 L_CONTAR_REG := L_CONTAR_REG + 1;
			 SELECT CODIGO,ID_ENTIDAD,ID_DEPTO INTO L_CODIGO,L_ID_ENTIDAD,L_ID_DEPTO 
			 FROM ENOC.PLLA_HORARIO_BLOQUE WHERE ID_HORARIO_BLOQUE = P_ID_HORARIO_BLOQUE AND ROWNUM = 1;
					
			 IF (ITEM.ID_ENTIDAD = L_ID_ENTIDAD AND ITEM.ID_DEPTO <> L_ID_DEPTO ) OR ITEM.ID_ENTIDAD <> L_ID_ENTIDAD THEN 
				
				 SELECT COUNT(*) INTO L_CONTAR FROM ENOC.PLLA_HORARIO_BLOQUE 
				 WHERE UPPER(TRIM(CODIGO)) = UPPER(TRIM(L_CODIGO)) AND ID_ENTIDAD = ITEM.ID_ENTIDAD AND ID_DEPTO = ITEM.ID_DEPTO; 
				 
				IF L_CONTAR > 0 THEN 
					L_ERROR := 1;
					L_MSGERROR := 'Ya existe registrado "'||L_CODIGO||'" con el mismo código en la entidad  "'||ITEM.ID_ENTIDAD||'".';
					GOTO salida_val;
				END IF;
				
				select coalesce(max(ID_HORARIO_BLOQUE),0)+1 into L_ID_HORARIO_BLOQUE from enoc.PLLA_HORARIO_BLOQUE;
				
				 INSERT INTO ENOC.PLLA_HORARIO_BLOQUE(ID_HORARIO_BLOQUE,ID_ENTIDAD,ID_DEPTO,NOMBRE,CODIGO,DESCRIPCION,ID_CONTROL_ASIST,
				 ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,HORA_ENTRADA_REF,HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,
				 ID_USER_REG,FECHA_REG,VIGENCIA)
				 SELECT L_ID_HORARIO_BLOQUE AS ID_HORARIO_BLOQUE,ITEM.ID_ENTIDAD AS ID_ENTIDAD,ITEM.ID_DEPTO AS ID_DEPTO,
				 NOMBRE,CODIGO,DESCRIPCION,ID_CONTROL_ASIST,ID_HORAS_REF,HORA_ENTRADA,HORA_SALIDA,HORA_ENTRADA_REF,HORA_SALIDA_REF,SAL_DIASIG,HORAS,NUM_HORAS,
				P_ID_USER AS ID_USER_REG,CURRENT_DATE AS FECHA_REG, VIGENCIA 
				FROM ENOC.PLLA_HORARIO_BLOQUE WHERE ID_HORARIO_BLOQUE = P_ID_HORARIO_BLOQUE;
			END IF;
		 END LOOP;
		
		IF L_CONTAR_REG = 0 THEN 
			L_ERROR := 2;
			L_MSGERROR := 'No se ha copiado. Sólo se permite copiar a los deptos padres, de los centros de costo registrados.';
		END IF;
		   
		<<salida_val>> 
	    P_ERROR:= L_ERROR;
	    P_MSGERROR:= L_MSGERROR;
	END SP_COPIAR_HORARIO_BLOQUE;
  
  PROCEDURE SP_PROCESAR_BIOMETRICO_DOCENTE(P_DESDE DATE, P_HASTA DATE,P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_AREA number, P_ID_TRABAJADOR number, P_ID_USER NUMBER,P_ERROR OUT number,P_MSGERROR out varchar2)
      IS
        l_error number:=0;
        l_msgerror varchar2(200 byte):='';
        l_contar number;
        
        l_id_tipo_control_personal number;
        l_id_tipo_horario number;
        l_id_sedearea number;

        l_hasta date;
        l_desde date;
        l_id_motivo_asist varchar2(10);
        l_num_rango number;
        l_num_rango_ref number;
        l_fecha_actual date;
        l_marcacion varchar2(5);
        l_codigo varchar2(10);
        

        
        CURSOR curDoc IS
        select ID_ASISTENCIA_CARGA,FECHA, DESDE_PROG, HASTA_PROG,HORAS_PROG,NUM_TOLE_TAR,ID_PERSONA,ID_TRABAJADOR
        from ENOC.TT_ASISTENCIA_CARGA
        order by ID_TRABAJADOR, DESDE_PROG;
  
        L_NUM_TOLE_TAR	NUMBER(10,2):=0;
        L_ASIST_DOC_RANG	NUMBER(10,2):=20;
        l_id_anho number;
        l_desde_rango date;
        l_hasta_rango date;
        l_hora_entrada date;
      BEGIN
      
        delete from ENOC.TT_ASISTENCIA_CARGA;
        insert into ENOC.TT_ASISTENCIA_CARGA(ID_ASISTENCIA_CARGA,FECHA, DESDE_PROG, HASTA_PROG,HORAS_PROG,NUM_TOLE_TAR,ID_PERSONA,ID_TRABAJADOR )
        select a.ID_ASISTENCIA_CARGA,a.FECHA, a.DESDE_PROG, a.HASTA_PROG,a.HORAS_PROG,a.NUM_TOLE_TAR,a.ID_PERSONA,a.ID_TRABAJADOR 
        from ENOC.PLLA_ASISTENCIA_CARGA  a,moises.trabajador t, eliseo.vw_sede_area sa
        where a.id_trabajador=t.id_trabajador
        and t.id_sedearea=sa.id_sedearea
        and a.fecha between P_DESDE and P_HASTA
        and a.DESDE_REAL is null
        AND COALESCE(a.TIPO,'F')<>'J'
        and case when P_ID_DEPTO='0' then '0' else sa.id_depto_padre end = case when P_ID_DEPTO='0' then '0' else P_ID_DEPTO end
        and case when P_ID_AREA=0 then 0 else sa.id_area end = case when P_ID_AREA=0 then 0 else P_ID_AREA end
        and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end = case when P_ID_TRABAJADOR=0 then 0 else P_ID_TRABAJADOR end
        order by a.ID_TRABAJADOR, a.DESDE_PROG;
        
        delete from ENOC.TT_MARCACION;
        insert into ENOC.TT_MARCACION(ID_MARCACION,ID_TRABAJADOR,ID_ANHO,ID_MES,NRO_DIA,ID_TIPO_MARCACION,FECHAHORA )
        select a.ID_MARCACION,a.ID_TRABAJADOR,a.ID_ANHO,a.ID_MES,a.NRO_DIA,a.ID_TIPO_MARCACION,a.FECHAHORA 
        from enoc.plla_marcacion a ,moises.trabajador t, eliseo.vw_sede_area sa
        where a.id_trabajador=t.id_trabajador
        and t.id_sedearea=sa.id_sedearea
        and a.id_tipo_marcacion=6 
        and coalesce(a.idasistencia,0)>0
        AND to_date(TO_CHAR(a.FECHAHORA,'YYYY-MM-DD'),'YYYY-MM-DD') between P_DESDE and P_HASTA
        and case when P_ID_DEPTO='0' then '0' else sa.id_depto_padre end = case when P_ID_DEPTO='0' then '0' else P_ID_DEPTO end
        and case when P_ID_AREA=0 then 0 else sa.id_area end = case when P_ID_AREA=0 then 0 else P_ID_AREA end
        and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end = case when P_ID_TRABAJADOR=0 then 0 else P_ID_TRABAJADOR end
        and t.id_trabajador in(
          select id_trabajador from ENOC.TT_ASISTENCIA_CARGA
        )
        and a.ID_DESCRIP_MARCACION is null
        order by  a.ID_TRABAJADOR, a.FECHAHORA;

        FOR cur in curDoc LOOP
        BEGIN
            l_hora_entrada:= null;
            l_id_anho:=to_number(to_char(cur.FECHA,'YYYY'));
            select count(1) into l_contar from plla_parametros_valor  a, plla_parametros b
            where b.id_parametro=a.id_parametro
            and b.codigo='TOLE_HORA_ENT_DOC'
            and a.id_entidad=P_ID_ENTIDAD
            and a.id_anho=l_id_anho;
            if l_contar=1 then
              select coalesce(a.importe,0) into L_NUM_TOLE_TAR from plla_parametros_valor  a, plla_parametros b
              where b.id_parametro=a.id_parametro
              and b.codigo='TOLE_HORA_ENT_DOC'
              and a.id_entidad=P_ID_ENTIDAD
              and a.id_anho=l_id_anho;
            end if;
            
            select count(1) into l_contar from plla_parametros_valor  a, plla_parametros b
            where b.id_parametro=a.id_parametro
            and b.codigo='PARAM_ASIST_DOC_RANG'
            and a.id_entidad=P_ID_ENTIDAD
            and a.id_anho=l_id_anho;
            if l_contar=1 then
              select coalesce(a.importe,0) into L_ASIST_DOC_RANG from plla_parametros_valor  a, plla_parametros b
              where b.id_parametro=a.id_parametro
              and b.codigo='PARAM_ASIST_DOC_RANG'
              and a.id_entidad=P_ID_ENTIDAD
              and a.id_anho=l_id_anho;
            end if;
            
            l_desde_rango := cur.DESDE_PROG - L_ASIST_DOC_RANG / 1440;
            l_hasta_rango := cur.DESDE_PROG + L_ASIST_DOC_RANG / 1440;
            
            select count(*) into l_contar from  ENOC.TT_MARCACION where id_trabajador= cur.id_trabajador
            and (FECHAHORA BETWEEN l_desde_rango AND l_hasta_rango);
          
            if l_contar>0 then
              select min(FECHAHORA) into l_hora_entrada from  ENOC.TT_MARCACION where id_trabajador= cur.id_trabajador 
              and (FECHAHORA BETWEEN l_desde_rango AND l_hasta_rango);
            end if;
            if l_hora_entrada is not null then
              enoc.PKG_ASSISTANCE.SP_REGISTRAR_ASIS_DOCENTE_NEW(
               cur.ID_ASISTENCIA_CARGA,
               l_hora_entrada,
               'E',--E: ENTRADA, S:SALIDA
               P_ID_USER,
               'P',
               6,
               '',
               '',
               l_error,
               l_msgerror
             );
            end if;
        END;
        END LOOP;
        P_ERROR:=0;
        P_MSGERROR:='OK';
      END SP_PROCESAR_BIOMETRICO_DOCENTE;	
  	
END PKG_ASSISTANCE;