-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

PROCEDURE      spc_user_session_login(
    p_id_persona       int,
    p_token       varchar2,
    p_token_oauth varchar2,
    p_error     OUT number,
    p_msjerror  OUT varchar2,
    p_caduca varchar2 default 'S',
    p_device_source varchar2 default 'WEB'
)
IS
  l_num_documento varchar2(100);
  l_entidad number;
  n_entidad number;
  l_dpto varchar2(10);
  l_contar number:=0;
  l_activo varchar2(1);
  l_existe number;
  l_id_almacen number;
  l_cant INT;

  l_error number:=0;
  l_msjerror varchar2(200);

BEGIN
    -- Validar que la persona tenga una entidad asignada por defecto en el LAMB. SE VALIDA CON LA ENTIDAD 7124 POR QUE ESTA APP ES EXCLUSIVA PARA LA UPEU
    -- SELECT COUNT(1), max(X.id_entidad) into l_contar, l_entidad FROM ELISEO.CONTA_ENTIDAD_USUARIO X WHERE X.ID_ENTIDAD = 7124 AND X.ID_PERSONA = p_id_persona;-- AND X.ESTADO = 1;
	
   -- Validar que la persona tenga una entidad asignada por defecto en el LAMB.
    SELECT COUNT(1), max(X.id_entidad) into l_contar, l_entidad FROM ELISEO.CONTA_ENTIDAD_USUARIO X WHERE X.ID_PERSONA = p_id_persona AND X.ESTADO = 1;
   
    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado una entidad por defecto en el LAMB.';
        goto salida_rapida;
    ELSIF l_contar > 1 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario tiene asignado más de una entidad por defecto en el LAMB.';
        goto salida_rapida;
    END IF;
   
   --Validar si el usuario es trabajador activo de la entidad consultada al inicio. --last update 30/04/2021
   	SELECT COUNT(1) into l_contar FROM MOISES.TRABAJADOR T WHERE T.ID_PERSONA = p_id_persona AND T.ID_ENTIDAD = l_entidad AND T.ID_SITUACION_TRABAJADOR !='0';
  	IF l_contar = 0 THEN
  	--Validar si esta registrado como trabajador activo y si lo esta, seleciona la entidad donde labora actualmente.--last update 30/04/2021
  	IF p_device_source='APP_UPN' OR p_device_source='PORTAL_UPN' THEN 	
  		SELECT  COUNT(1),max(ID_ENTIDAD) into l_contar, l_entidad FROM (SELECT T.ID_TRABAJADOR,T.ID_ENTIDAD,SA.ID_DEPTO_PADRE AS ID_DEPTO FROM MOISES.TRABAJADOR T 
		INNER JOIN ELISEO.VW_SEDE_AREA SA ON SA.ID_SEDEAREA = T.ID_SEDEAREA
		WHERE T.ID_PERSONA = p_id_persona AND T.ID_SITUACION_TRABAJADOR !='0'
		ORDER BY T.FECHA_INICIO DESC) WHERE rownum =1;
	ELSE 
		SELECT  COUNT(1),max(ID_ENTIDAD) into l_contar, l_entidad FROM (SELECT * FROM MOISES.TRABAJADOR T 
		WHERE T.ID_PERSONA = p_id_persona AND T.ID_SITUACION_TRABAJADOR !='0'
		ORDER BY T.FECHA_INICIO DESC ) WHERE rownum =1;
	END IF;
		IF l_contar = 0 THEN
	        l_error := 1;
	        l_msjerror := 'Alto. El usuario no está registrado como un trabajador activo.';
	        goto salida_rapida;
    	END IF;
    END IF;

      -- Validar que la persona tenga una departamento asignado por defecto en el LAMB.
   IF p_device_source='APP_UPN' OR p_device_source='PORTAL_UPN' THEN 
   		SELECT  COUNT(1),min(ID_DEPTO) into l_contar,l_dpto FROM (SELECT T.ID_TRABAJADOR,T.ID_ENTIDAD,SA.ID_DEPTO_PADRE AS ID_DEPTO FROM MOISES.TRABAJADOR T 
		INNER JOIN ELISEO.VW_SEDE_AREA SA ON SA.ID_SEDEAREA = T.ID_SEDEAREA
		WHERE T.ID_PERSONA = p_id_persona AND T.ID_SITUACION_TRABAJADOR !='0'
		ORDER BY T.FECHA_INICIO DESC) WHERE rownum =1;
   ELSE 
	    SELECT count(1), min(A.ID_DEPTO) into l_contar, l_dpto
	        FROM ELISEO.LAMB_USERS_DEPTO A INNER JOIN ELISEO.CONTA_ENTIDAD_DEPTO B ON A.ID_ENTIDAD = B.ID_ENTIDAD AND A.ID_DEPTO = B.ID_DEPTO
	    WHERE A.ID = p_id_persona
	    AND A.ID_ENTIDAD = l_entidad
	    AND A.ESTADO = 1
	    AND B.ES_EMPRESA = '1';
   END IF;

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
        goto salida_rapida;
    /*ELSIF l_contar > 1 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario tiene asignado más de un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
        goto salida_rapida;*/
    END IF;
    
   
    -- Validar que la persona tenga un rol asignado por defecto en el LAMB.
    SELECT count(1) into l_contar FROM ELISEO.LAMB_USUARIO_ROL WHERE ID_PERSONA = p_id_persona AND ID_ENTIDAD = l_entidad;

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado un rol por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
        goto salida_rapida;

    END IF;

    if l_error=0 then   

        -- Validar que todos los modulos que tiene acceso el usuario tenga temas.
        SELECT COUNT(1) INTO l_cant FROM ELISEO.LAMB_MODULO M 
            WHERE ID_MODULO IN (SELECT ID_MODULO 
                                FROM ELISEO.LAMB_ROL_MODULO N
                                WHERE EXISTS  ( SELECT 1 FROM ELISEO.LAMB_USUARIO_ROL R WHERE R.ID_ROL = N.ID_ROL AND ID_PERSONA = p_id_persona)
                                AND EXISTS ( SELECT 1 FROM ELISEO.LAMB_MODULO U WHERE U.NIVEL = '1' AND U.ID_MODULO = N.ID_MODULO) )
            AND NOT EXISTS (SELECT 1 FROM ELISEO.LAMB_ENTIDAD_DEPTO_CONFIG T WHERE T.ID_MODULO = M.ID_MODULO AND T.ID = p_id_persona);

        IF l_cant > 0 THEN
            ELISEO.PKG_SETUP.SP_ASSIGN_THEMES(p_id_persona,l_entidad,l_dpto);
        END IF;

        select count(ID_USER) into l_cant
        from ELISEO.USERS_SESSION where token = p_token and status = '1';

        IF l_cant > 0 THEN
            update ELISEO.USERS_SESSION set LAST_UPDATE = current_timestamp where token = p_token and status = '1';
        ELSE
            insert into ELISEO.USERS_SESSION
                (TOKEN,ID_USER,ID_ENTIDAD,ID_DEPTO,DATE_CREATE,LAST_UPDATE,STATUS,TOKEN_OAUTH,CADUCA) 
            values  (p_token,p_id_persona,l_entidad,l_dpto,current_timestamp,current_timestamp,'1',p_token_oauth,p_caduca);      
        END IF;

    end if;

     <<salida_rapida>>
    p_error:=l_error;
    p_msjerror:=l_msjerror;
    dbms_output.put_line (p_error || ' ' || p_msjerror);

END;

