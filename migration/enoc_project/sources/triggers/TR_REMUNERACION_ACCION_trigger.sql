-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = enoc,public;
\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS tr_remuneracion_accion ON plla_remuneracion CASCADE;
CREATE OR REPLACE FUNCTION enoc.trigger_fct_tr_remuneracion_accion() RETURNS trigger AS $BODY$
DECLARE
  l_tipo  PLLA_REMUNERACION_AUDIT.TIPO%TYPE;
  l_opcion varchar2(2):='N';

BEGIN
  
  IF INSERTING THEN
    l_tipo := 'I';
    l_opcion:='S';
  ELSIF UPDATING THEN
    l_tipo := 'U';
    if :new.SUELDO <> :old.SUELDO then
      l_opcion:='S';
    end if;
    if :new.VIGENCIA <> :old.VIGENCIA then
      l_opcion:='S';
    end if;
    if :new.FMR <> :old.FMR then
      l_opcion:='S';
    end if;
    if :new.ID_ESTADO_REMUNE <> :old.ID_ESTADO_REMUNE then
      l_opcion:='S';
    end if;
    if :new.TIPO_PAGO <> :old.TIPO_PAGO then
      l_opcion:='S';
    end if; 
  ELSIF DELETING THEN
    l_tipo := 'D';
    l_opcion:='N';
    SP_AUDIT_REMUNERACION(
        :old.ID_REMUNERACION,
        :old.ID_TRABAJADOR,
        l_tipo,
        :old.ID_CONTRATO,
        :old.REFERENCIA,
        :old.REFERENCIA_URL,
        :old.FEC_EFECTIVO,
        :old.TIPO_PAGO,
        :old.FMR,
        :old.SUELDO,
        :old.BONIFICACION,
        :old.OBSERVACION,
        :old.ID_ESTADO_REMUNE,
        :old.ESTADO_REMUNE,
        :old.VIGENCIA,
        null 
    );
  ELSE
    DBMS_OUTPUT.PUT_LINE('This code is not reachable.');
  END IF;
  if l_opcion='S' then
     SP_AUDIT_REMUNERACION(
        :new.ID_REMUNERACION,
        :new.ID_TRABAJADOR,
        l_tipo,
        :new.ID_CONTRATO,
        :new.REFERENCIA,
        :new.REFERENCIA_URL,
        :new.FEC_EFECTIVO,
        :new.TIPO_PAGO,
        :new.FMR,
        :new.SUELDO,
        :new.BONIFICACION,
        :new.OBSERVACION,
        :new.ID_ESTADO_REMUNE,
        :new.ESTADO_REMUNE,
        :new.VIGENCIA,
        case when l_tipo='I' then :new.ID_USER_REG else :new.ID_USER_MOD end 
    );
  end if;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION enoc.trigger_fct_tr_remuneracion_accion() FROM PUBLIC;

DROP TRIGGER IF EXISTS tr_remuneracion_accion ON plla_remuneracion;
CREATE TRIGGER tr_remuneracion_accion
	AFTER INSERT OR UPDATE OR DELETE ON plla_remuneracion 
 FOR EACH ROW
	EXECUTE PROCEDURE enoc.trigger_fct_tr_remuneracion_accion();

