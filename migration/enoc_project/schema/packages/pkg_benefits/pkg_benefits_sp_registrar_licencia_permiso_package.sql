-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_benefits,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_benefits_sp_registrar_licencia_permiso ( P_ID_CONCEPTO_PERM_LIC bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_AREA bigint, P_ID_TRABAJADOR bigint, P_PERIODO text, P_MOTIVO text, P_FECHA_DESDE timestamp(0), P_FECHA_HASTA timestamp(0), P_ID_TIPO_INST_ATENCION bigint, P_NOMBRE_INST text,P_CODIGOCITT text, P_CODIGONIT text,"P_CODIGOVIVA" text, P_ID_USER_REG bigint, P_ID_TRABAJADOR_GRUPO text, P_AMBIENTE text,P_ERROR OUT bigint,--P_AMBIENTE  A: administracion, P:Portal
 P_MSGERROR out text, P_ID_LICENCIA_PERMISO_NEW OUT bigint ) AS $body$
DECLARE

          l_error bigint:=0;
          l_msgerror varchar(200):='';
          l_id_licencia_permiso bigint;
          l_contar bigint;
          l_dias bigint:=0;
          l_horas bigint:=0;
          l_id_licencia_permiso_estado bigint;
          PP_ID_TRABAJADOR text:=P_ID_TRABAJADOR_GRUPO||'*';
          l_1 bigint;
          l_id_licencia_permiso_det bigint;
          l_id_trabajador bigint;
          l_id_area bigint;
          l_engrupo varchar(5);
          l_min_dias bigint;
          l_max_dias bigint;
          l_max_dias_anho bigint;
          l_dias_max bigint;
          l_codigo varchar(10);
          l_dias_desmed bigint:=0;
          l_fecha_fin_desmed timestamp(0);
          l_dias_subs bigint:=0;
          l_fecha_ini_subs timestamp(0);
          l_fecha_fin_subs timestamp(0);
          l_s bigint;

BEGIN
        
        SELECT 
        coalesce(ENGRUPO,'N'),
        coalesce(MIN_DIAS,0),
        coalesce(MAX_DIAS,0),
        coalesce(MAX_DIAS_ANHO,0),
        CODIGO
        INTO STRICT 
        l_engrupo,
        l_min_dias,
        l_max_dias,
        l_max_dias_anho,
        l_codigo
        FROM PLLA_CONCEPTO_PERM_LIC 
        WHERE ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC;

        
        if l_engrupo = 'N' then
        
          select count(*) into STRICT l_contar from PLLA_LICENCIA_PERMISO
          where ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC
          and ID_ESTADO_LICA_PER in ('01','02')
          and ID_TRABAJADOR = P_ID_TRABAJADOR;

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay solicitudes pendientes de aprobación por jefe de Área ó DTH';
--               GOTO salida_final;
          end if;
          
        end if;

 
   
        if P_FECHA_HASTA < P_FECHA_DESDE then
          l_error:=1;
          l_msgerror:='Fecha hasta es menor que fecha desde';
--            GOTO salida_final;
        end if;

        --vacacion
        
        select count(*) into STRICT  l_contar from ENOC.VW_ROL_VACACIONAL
        where ID_TRABAJADOR=P_ID_TRABAJADOR
        and (to_date(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY'),'MM/DD/YYYY') between to_date(TO_CHAR(FECHA_INI, 'MM/DD/YYYY'),'MM/DD/YYYY') and to_date(TO_CHAR(FECHA_FIN, 'MM/DD/YYYY'),'MM/DD/YYYY'))
        AND CONDICION ='P';

        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Hay cruce con vacaciones';
--             GOTO salida_final;
        end if;

        select count(*) into STRICT  l_contar from ENOC.VW_ROL_VACACIONAL
        where ID_TRABAJADOR=P_ID_TRABAJADOR
        and (to_date(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY'),'MM/DD/YYYY') between to_date(TO_CHAR(FECHA_INI, 'MM/DD/YYYY'),'MM/DD/YYYY') and to_date(TO_CHAR(FECHA_FIN, 'MM/DD/YYYY'),'MM/DD/YYYY'))
        AND CONDICION ='P';

        
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Hay cruce con vacaciones';
--             GOTO salida_final;
        end if;

        --fin vacacion
        
        if P_PERIODO='D' then
          select count(*) into STRICT  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (to_date(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY'),'MM/DD/YYYY') between to_date(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'),'MM/DD/YYYY') and to_date(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'),'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN ('00','04');

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha desde';
--               GOTO salida_final;
          end if;

          select count(*) into STRICT  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (to_date(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY'),'MM/DD/YYYY') between to_date(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'),'MM/DD/YYYY') and to_date(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'),'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN ('00','04');

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha hasta';
--               GOTO salida_final;
          end if;
        else
           --agregado para validar
          select count(*) into STRICT  l_contar from PLLA_LICENCIA_PERMISO
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (to_date(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY'),'MM/DD/YYYY') between to_date(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'),'MM/DD/YYYY') and to_date(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'),'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN ('00','04')
          AND PERIODO='D';

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha desde';
--               GOTO salida_final;
          end if;

          select count(*) into STRICT  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (to_date(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY'),'MM/DD/YYYY') between to_date(TO_CHAR(FECHA_DESDE, 'MM/DD/YYYY'),'MM/DD/YYYY') and to_date(TO_CHAR(FECHA_HASTA, 'MM/DD/YYYY'),'MM/DD/YYYY'))
          AND ID_ESTADO_LICA_PER NOT IN ('00','04')
          AND PERIODO='D';

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la fecha hasta';
--               GOTO salida_final;
          end if;
          --fin validar
          select count(*) into STRICT  l_contar from PLLA_LICENCIA_PERMISO
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (to_date(TO_CHAR(P_FECHA_DESDE, 'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') between FECHA_DESDE and FECHA_HASTA)
          AND ID_ESTADO_LICA_PER NOT IN ('00','04');

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la hora desde';
--               GOTO salida_final;
          end if;

          select count(*) into STRICT  l_contar from PLLA_LICENCIA_PERMISO 
          where ID_TRABAJADOR=P_ID_TRABAJADOR
          and (to_date(TO_CHAR(P_FECHA_HASTA, 'MM/DD/YYYY HH24:MI:SS'),'MM/DD/YYYY HH24:MI:SS') between FECHA_DESDE and FECHA_HASTA)
          AND ID_ESTADO_LICA_PER NOT IN ('00','04');

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Hay cruce con la hora hasta';
--               GOTO salida_final;
          end if;
        end if;
        
        if P_PERIODO='D' then
          select (P_FECHA_HASTA -  P_FECHA_DESDE)+1 into STRICT  l_dias;
        else
          select round((P_FECHA_HASTA -  P_FECHA_DESDE)*24,2) into STRICT l_horas;
          l_dias:=1;
          if l_horas = 0 then
            l_error:=1;
            l_msgerror:='Cantidad de horas es igual a 0(cero) ';
--             GOTO salida_final;
          end if;
        end if;

        
        if l_min_dias>0 then
          if l_dias<l_min_dias then
            l_error:=1;
            l_msgerror:='Mínimo de días a registrar es  '||l_min_dias::text;
--             GOTO salida_final;
          end if;
        end if;

        if l_max_dias>0 then
          if l_dias>l_max_dias then
            l_error:=1;
            l_msgerror:='Máximo de días a registrar es  '||l_max_dias::text;
--             GOTO salida_final;
          end if;
        end if;

        if l_max_dias_anho>0 AND  l_codigo <> 'DESC_MED' then
        
          IF l_codigo IN ('PERM_SGOCE','PERM_COMP') THEN
            select COALESCE(SUM(A.CANTIDAD),0) INTO STRICT l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P,PLLA_CONCEPTO_PERM_LIC C  
            WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
            AND P.ID_CONCEPTO_PERM_LIC=C.ID_CONCEPTO_PERM_LIC
            AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
            AND P.ID_ENTIDAD = P_ID_ENTIDAD
            AND C.CODIGO IN ('PERM_SGOCE','PERM_COMP')
            AND A.ID_ANHO = (TO_CHAR(P_FECHA_DESDE,'YYYY'))::numeric 
            AND P.ID_ESTADO_LICA_PER NOT IN ('00','04');

            if P_AMBIENTE='P' then
             if (l_dias_max+l_dias)>l_max_dias_anho then
              l_error:=1;
              l_msgerror:='Máximo de días a registrar por año es  '||l_max_dias_anho::text;
--               GOTO salida_final;
            end if;
           end if;
          ELSE
            select COALESCE(SUM(A.CANTIDAD),0) INTO STRICT l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P
            WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
            AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
            AND P.ID_ENTIDAD = P_ID_ENTIDAD
            AND P.ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC
            AND A.ID_ANHO = (TO_CHAR(P_FECHA_DESDE,'YYYY'))::numeric 
            AND P.ID_ESTADO_LICA_PER NOT IN ('00','04');

            if (l_dias_max+l_dias)>l_max_dias_anho then
              l_error:=1;
              l_msgerror:='Máximo de días a registrar por año es  '||l_max_dias_anho::text;
--               GOTO salida_final;
            end if;

          END IF;

          
        end if;

       IF l_codigo = 'DESC_MED' THEN
          select COALESCE(SUM(A.CANTIDAD),0) INTO STRICT l_dias_max  from PLLA_LICENCIA_PERMISO_ANHO A , PLLA_LICENCIA_PERMISO P  
          WHERE A.ID_LICENCIA_PERMISO=P.ID_LICENCIA_PERMISO 
          AND P.ID_TRABAJADOR = P_ID_TRABAJADOR
          AND P.ID_ENTIDAD = P_ID_ENTIDAD
          AND P.ID_CONCEPTO_PERM_LIC= P_ID_CONCEPTO_PERM_LIC
          AND A.ID_ANHO = (TO_CHAR(P_FECHA_DESDE,'YYYY'))::numeric 
          AND P.ID_ESTADO_LICA_PER NOT IN ('00','04');

          IF (l_dias_max+l_dias)>l_max_dias_anho THEN
            
              l_s := (l_dias_max+l_dias) - l_max_dias_anho;
              l_dias_desmed:= l_dias - l_s;
              l_dias_subs:= l_s;

              if l_dias_desmed<0 then
                l_dias_desmed:= 0;
                l_dias_subs:= l_dias;
              end if;

              l_fecha_ini_subs:= P_FECHA_DESDE+l_dias_desmed;
              l_fecha_fin_subs:= P_FECHA_HASTA;

              if l_dias_desmed>0 then
               l_fecha_fin_desmed:=P_FECHA_HASTA - l_dias_subs;
              end if;

          ELSE
              l_dias_desmed:= l_dias;
              l_dias_subs:= 0;
              l_fecha_fin_desmed:=P_FECHA_HASTA;

          END IF;

         

       END IF;

            
  
         select COALESCE(MAX(ID_LICENCIA_PERMISO),0) +1 INTO STRICT   l_id_licencia_permiso from PLLA_LICENCIA_PERMISO;

          
         INSERT INTO PLLA_LICENCIA_PERMISO(
            ID_LICENCIA_PERMISO,
            ID_CONCEPTO_PERM_LIC,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_AREA,
            ID_TRABAJADOR,
            PERIODO,
            MOTIVO,
            FECHA_DESDE,
            FECHA_HASTA,
            DIAS,
            HORAS,
            ID_USER_REG,
            FECHA_REG,
            ID_ESTADO_LICA_PER,
            ID_TIPO_INST_ATENCION,
            NOMBRE_INST,
            CODIGOCITT,
            CODIGONIT,
            CODIGOVIVA,
            DIAS_DESMED,
            FECHA_FIN_DESMED,
            DIAS_SUBS,
            FECHA_INI_SUBS,
            FECHA_FIN_SUBS
         )VALUES (
            l_id_licencia_permiso,
            P_ID_CONCEPTO_PERM_LIC,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_AREA,
            case when l_engrupo='N' then P_ID_TRABAJADOR else null end,
            P_PERIODO,
            P_MOTIVO,
            P_FECHA_DESDE,
            P_FECHA_HASTA,
            l_dias,
            l_horas,
            P_ID_USER_REG,
            clock_timestamp(),
            '01',
            case when P_ID_TIPO_INST_ATENCION=0 then null else P_ID_TIPO_INST_ATENCION end,
            P_NOMBRE_INST,
            P_CODIGOCITT,
            P_CODIGONIT,
            P_CODIGOVIVA,
            l_dias_desmed,
            l_fecha_fin_desmed,
            l_dias_subs,
            l_fecha_ini_subs,
            l_fecha_fin_subs
         );

        
         --CANTIDAD DIAS POR AÑO
         
          IF l_max_dias_anho>0 THEN
          
            IF TO_CHAR(P_FECHA_DESDE,'YYYY') = TO_CHAR(P_FECHA_HASTA,'YYYY') THEN
              INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
              ID_LICENCIA_PERMISO,
              ID_ANHO,
              CANTIDAD,
              ID_USER_REG,
              FECHA_REG
              )VALUES (
              l_id_licencia_permiso,
              (TO_CHAR(P_FECHA_DESDE,'YYYY'))::numeric ,
              l_dias,
              P_ID_USER_REG,
              clock_timestamp()
              );
            ELSE
              if l_dias_subs =0 then
                select (date_trunc('day', ((date_trunc('month',(P_FECHA_DESDE)::timestamp + interval '1 month'))::timestamp(0) - 1)) -  P_FECHA_DESDE)+1 into STRICT  l_dias;
                INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
                ID_LICENCIA_PERMISO,
                ID_ANHO,
                CANTIDAD,
                ID_USER_REG,
                FECHA_REG
                )VALUES (
                l_id_licencia_permiso,
                (TO_CHAR(P_FECHA_DESDE,'YYYY'))::numeric ,
                l_dias,
                P_ID_USER_REG,
                clock_timestamp()
                );

                select (P_FECHA_HASTA - date_trunc('month', P_FECHA_HASTA))+1 into STRICT  l_dias;
                INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
                ID_LICENCIA_PERMISO,
                ID_ANHO,
                CANTIDAD,
                ID_USER_REG,
                FECHA_REG
                )VALUES (
                l_id_licencia_permiso,
                (TO_CHAR(P_FECHA_HASTA,'YYYY'))::numeric ,
                l_dias,
                P_ID_USER_REG,
                clock_timestamp()
                );

              else
                INSERT INTO PLLA_LICENCIA_PERMISO_ANHO(
                ID_LICENCIA_PERMISO,
                ID_ANHO,
                CANTIDAD,
                ID_USER_REG,
                FECHA_REG
                )VALUES (
                l_id_licencia_permiso,
                (TO_CHAR(P_FECHA_DESDE,'YYYY'))::numeric ,
                l_dias,
                P_ID_USER_REG,
                clock_timestamp()
                );

                
              end if;

            END IF;

            if l_dias_subs >0 then
            
               UPDATE PLLA_LICENCIA_PERMISO SET
                  ID_ESTADO_SUBSIDIO='01'
                  WHERE ID_LICENCIA_PERMISO=l_id_licencia_permiso;

               select COALESCE(MAX(ID_LICENCIA_PERMISO_EST_SUB),0) +1 INTO STRICT   l_id_licencia_permiso_estado from PLLA_LICENCIA_PERMISO_EST_SUB;

                 INSERT INTO PLLA_LICENCIA_PERMISO_EST_SUB(
                  ID_LICENCIA_PERMISO_EST_SUB,
                  ID_LICENCIA_PERMISO,
                  ID_ESTADO_SUBSIDIO,
                  COMENTARIO,
                  ID_USER_REG,
                  FECHA_REG
                 )VALUES (
                  l_id_licencia_permiso_estado,
                  l_id_licencia_permiso,
                  '01',
                  null,
                  P_ID_USER_REG,
                  clock_timestamp()
                 );

                 
            END IF;
         END IF;
         --FIN CANTIDAD DIAS POR AÑO
         
         select COALESCE(MAX(ID_LICENCIA_PERMISO_ESTADO),0) +1 INTO STRICT   l_id_licencia_permiso_estado from PLLA_LICENCIA_PERMISO_ESTADO;

         INSERT INTO PLLA_LICENCIA_PERMISO_ESTADO(
           ID_LICENCIA_PERMISO_ESTADO,
           ID_LICENCIA_PERMISO,
           ID_ESTADO_LICA_PER,
           COMENTARIO,
           ID_USER_REG,
           FECHA_REG
         )VALUES (
          l_id_licencia_permiso_estado,
          l_id_licencia_permiso,
          '01',
          null,
          P_ID_USER_REG,
          clock_timestamp()
         );

        --detalle
        if l_engrupo='S' then
          loop
              l_1 := position('*'  in PP_ID_TRABAJADOR);
              exit when coalesce(l_1,0) = 0;

              select (trim(both substr(PP_ID_TRABAJADOR,1, l_1-1)))::numeric  into STRICT l_id_trabajador;

              select COALESCE(MAX(ID_LICENCIA_PERMISO_DET),0) +1 INTO STRICT   l_id_licencia_permiso_det from PLLA_LICENCIA_PERMISO_DET;

              select b.id_area into STRICT l_id_area from moises.trabajador a, ELISEO.ORG_SEDE_AREA b where a.id_sedearea=b.id_sedearea and  a.id_trabajador=l_id_trabajador;

              insert into ENOC.PLLA_LICENCIA_PERMISO_DET(
                ID_LICENCIA_PERMISO_DET,
                ID_LICENCIA_PERMISO,
                ID_TRABAJADOR,
                ID_AREA
              )values (
              l_id_licencia_permiso_det,
              l_id_licencia_permiso,
              l_id_trabajador,
              l_id_area
              );

              PP_ID_TRABAJADOR := substr(PP_ID_TRABAJADOR, l_1+1 );
          end loop;
        end if;
        --fun detalle
--          <<salida_final>>

         P_ID_LICENCIA_PERMISO_NEW :=l_id_licencia_permiso;

         P_ERROR:=l_error;
         P_MSGERROR:= l_msgerror;

        END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_benefits_sp_registrar_licencia_permiso ( P_ID_CONCEPTO_PERM_LIC bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_AREA bigint, P_ID_TRABAJADOR bigint, P_PERIODO text, P_MOTIVO text, P_FECHA_DESDE timestamp(0), P_FECHA_HASTA timestamp(0), P_ID_TIPO_INST_ATENCION bigint, P_NOMBRE_INST text,P_CODIGOCITT text, P_CODIGONIT text,"P_CODIGOVIVA" text, P_ID_USER_REG bigint, P_ID_TRABAJADOR_GRUPO text, P_AMBIENTE text,P_ERROR OUT bigint, P_MSGERROR out text, P_ID_LICENCIA_PERMISO_NEW OUT bigint ) FROM PUBLIC;
