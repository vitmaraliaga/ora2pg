-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_benefits,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_benefits_sp_generar_periodo_vac_masivo (P_ID_ENTIDAD bigint, P_ID_DEPTO_PARENT text,P_ID_AREA bigint, P_ID_PERIODO_VAC bigint,P_ID_DEPTO text,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_error1 bigint:=0;
        l_msgerror1 varchar(200):='';
        l_i integer:=0;
         curPER CURSOR FOR
         SELECT
              ID_TRABAJADOR
            FROM MOISES.TRABAJADOR 
            WHERE ID_SEDEAREA IN (
              SELECT ID_SEDEAREA FROM ELISEO.VW_SEDE_AREA 
              WHERE ID_AREA=P_ID_AREA AND ID_ENTIDAD = CASE WHEN P_ID_ENTIDAD = 0 THEN (SELECT ID_ENTIDAD FROM ENOC.PLLA_PERIODO_VAC WHERE ID_PERIODO_VAC = P_ID_PERIODO_VAC) ELSE P_ID_ENTIDAD END
              AND 1 = CASE WHEN P_ID_DEPTO_PARENT = '0' THEN 1 ELSE CASE WHEN P_ID_DEPTO_PARENT = ID_DEPTO_PADRE THEN 1 ELSE 0 END END
              --AND ID_DEPTO LIKE P_ID_DEPTO_PARENT||'%'
 
            )
            AND ID_SITUACION_TRABAJADOR='1'
            AND (fecha_inicio IS NOT NULL AND fecha_inicio::text <> '')
            AND ID_TRABAJADOR NOT IN (
              SELECT ID_PERSONA
              FROM PLLA_PERIODO_VAC_TRAB 
              WHERE ID_PERIODO_VAC=P_ID_PERIODO_VAC
            );

            
            curPERDEPTO CURSOR FOR
         SELECT 
              ID_TRABAJADOR
            FROM MOISES.TRABAJADOR 
            WHERE ID_SEDEAREA IN (
              SELECT ID_SEDEAREA FROM ELISEO.VW_SEDE_AREA 
              WHERE ID_ENTIDAD = CASE WHEN P_ID_ENTIDAD = 0 THEN (SELECT ID_ENTIDAD FROM ENOC.PLLA_PERIODO_VAC WHERE ID_PERIODO_VAC = P_ID_PERIODO_VAC) ELSE P_ID_ENTIDAD END
              AND 1 = CASE WHEN P_ID_DEPTO = '0' THEN 1 ELSE CASE WHEN P_ID_DEPTO = ID_DEPTO_PADRE THEN 1 ELSE 0 END END
              --ID_DEPTO LIKE P_ID_DEPTO||'%'
 
            )
            AND ID_SITUACION_TRABAJADOR='1'
            AND (fecha_inicio IS NOT NULL AND fecha_inicio::text <> '')
            AND ID_TRABAJADOR NOT IN (
              SELECT ID_PERSONA
              FROM PLLA_PERIODO_VAC_TRAB 
              WHERE ID_PERIODO_VAC=P_ID_PERIODO_VAC
            );

        
BEGIN
        
        IF (P_ID_DEPTO IS NOT NULL AND P_ID_DEPTO::text <> '') THEN
          FOR cur in curPERDEPTO LOOP
            BEGIN
              CALL pkg_benefits_sp_generar_periodo_vac_trab(cur.id_trabajador,P_ID_PERIODO_VAC,l_i,l_error1,l_msgerror1);
              l_i:=l_i + 1;
            END;
          END LOOP;

        ELSE
          FOR cur in curPER LOOP
            BEGIN
              CALL pkg_benefits_sp_generar_periodo_vac_trab(cur.id_trabajador,P_ID_PERIODO_VAC,l_i,l_error1,l_msgerror1);
              l_i:=l_i + 1;
            END;
          END LOOP;
        END IF;

        if l_i=0 then
          l_error:=1;
          l_msgerror:='No hay datos para generar';
        end if;

        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

        END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_benefits_sp_generar_periodo_vac_masivo (P_ID_ENTIDAD bigint, P_ID_DEPTO_PARENT text,P_ID_AREA bigint, P_ID_PERIODO_VAC bigint,P_ID_DEPTO text,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
