-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_selection,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_selection_sp_reg_reunion ( P_ID_ENTREVISTA_CAND bigint, P_ID_TIPO_REUNION bigint, P_ID_SOLIC_REQ_CANDIDATO bigint, P_ID_REQ_CAND_PLANTILLA bigint, P_LINK_LUGAR text, P_FECHA timestamp(0), P_ENVIADO bigint, P_ID_PARENT bigint, P_USER bigint, P_ID_ENTREVISTA_CAND_NEW out bigint, P_ENVIAR out text, P_ERROR OUT bigint, P_MSGERROR out text ) AS $body$
DECLARE

    l_contar bigint;
    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_id bigint;
    l_apro bigint:=0;
    l_enviar varchar(1):='N';
    l_id_estado_req_cand bigint;
    l_correo varchar(200);

BEGIN
  
   select pn.correo into STRICT l_correo from enoc.vw_persona_natural pn, enoc.plla_SOLIC_REQ_CANDIDATO s
   where pn.id_persona=s.id_persona
   and ID_SOLIC_REQ_CANDIDATO=P_ID_SOLIC_REQ_CANDIDATO;

   IF P_ID_ENTREVISTA_CAND=0 THEN
   
     select coalesce(max(ID_ENTREVISTA_CAND),0) + 1 into STRICT l_id from enoc.PLLA_ENTREVISTA_CAND;

    
     
     insert into enoc.PLLA_ENTREVISTA_CAND(
      ID_ENTREVISTA_CAND,
      ID_TIPO_REUNION,
      ID_SOLIC_REQ_CANDIDATO,
      ID_REQ_CAND_PLANTILLA,
      LINK_LUGAR,
      FECHA,
      ID_ESTADO_REUNION_CAND,
      CORREO,
      ENVIADO,
      ID_PARENT,
      ID_USER_REG,
      FECHA_REG    
    )values (
       l_id,
       P_ID_TIPO_REUNION,
       P_ID_SOLIC_REQ_CANDIDATO,
       P_ID_REQ_CAND_PLANTILLA,
       P_LINK_LUGAR,
       P_FECHA,
       '01',
       l_correo,
       P_ENVIADO,
       P_ID_PARENT,
       P_USER,
       clock_timestamp()
     );
   ELSE
    UPDATE enoc.PLLA_ENTREVISTA_CAND SET
    ID_TIPO_REUNION=P_ID_TIPO_REUNION,
    ID_REQ_CAND_PLANTILLA=P_ID_REQ_CAND_PLANTILLA,
    LINK_LUGAR=P_LINK_LUGAR,
    FECHA=P_FECHA,
    CORREO=l_correo,
    ENVIADO=P_ENVIADO,
    ID_USER_MOD=P_USER,
    FECHA_MOD=clock_timestamp()
    WHERE ID_ENTREVISTA_CAND=P_ID_ENTREVISTA_CAND;
    l_id:=P_ID_ENTREVISTA_CAND;
   END IF;

   SELECT count(*) INTO STRICT l_contar FROM ENOC.PLLA_REQ_CAND_PLANTILLA WHERE ID_REQ_CAND_PLANTILLA=P_ID_REQ_CAND_PLANTILLA;

   if l_contar > 0 then
     SELECT ID_ESTADO_REQ_CAND INTO STRICT l_id_estado_req_cand FROM ENOC.PLLA_REQ_CAND_PLANTILLA WHERE ID_REQ_CAND_PLANTILLA=P_ID_REQ_CAND_PLANTILLA;

     select coalesce(REUNION,0) into STRICT l_apro from enoc.plla_ESTADO_REQ_CAND where ID_ESTADO_REQ_CAND= l_id_estado_req_cand;

     if l_apro = 1 and P_ENVIADO =1 then
      enoc.CALL pkg_selection_sp_gen_plantilla_reunion(l_id,l_error,l_msgerror);
      if l_error=0 then
        l_enviar:='S';
      end if;
     end if;
   else
    l_error:=1;
    l_msgerror:='No esta configurado plantilla';
--     goto salida_proc;
   end if;
--     <<salida_proc>>
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
    P_ENVIAR:= l_enviar;
    P_ID_ENTREVISTA_CAND_NEW:=l_id;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_selection_sp_reg_reunion ( P_ID_ENTREVISTA_CAND bigint, P_ID_TIPO_REUNION bigint, P_ID_SOLIC_REQ_CANDIDATO bigint, P_ID_REQ_CAND_PLANTILLA bigint, P_LINK_LUGAR text, P_FECHA timestamp(0), P_ENVIADO bigint, P_ID_PARENT bigint, P_USER bigint, P_ID_ENTREVISTA_CAND_NEW out bigint, P_ENVIAR out text, P_ERROR OUT bigint, P_MSGERROR out text ) FROM PUBLIC;
