-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_compensacion,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_compensacion_sp_generar_trabajador_sctr (P_ID_ENTIDAD bigint, P_ID_DEPTO text,P_ID_TRABAJADOR_SCTR bigint, P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint, P_MSGERROR out text) AS $body$
DECLARE

    l_contar bigint;
    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_fmr decimal(10,5):= 0;
    l_igv decimal(10,5):= 0;
    l_tasa_salud decimal(10,5):= 0;
    l_factor_de decimal(10,5):= 0;
    l_rmv decimal(10,5):= 0;
    l_max_id bigint:=0;

BEGIN
  
    select  count(1) into STRICT l_contar from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO;
    if l_contar=0 then
      l_error :=1;
      l_msgerror := 'Falta generar configuraciÃ³n de parametro para el periodo '||P_ID_ANHO;
--       goto salida;
    end if;

    select coalesce(importe,0) into STRICT l_fmr from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'PARAM_FMR';
    select coalesce(importe,0) into STRICT l_igv from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'PARAM_IGV';
    select coalesce(importe,0) into STRICT l_tasa_salud from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'TASA_SALUD';
    select coalesce(importe,0) into STRICT l_factor_de from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'FACTOR_DE';
    select coalesce(importe,0) into STRICT l_rmv from ENOC.VW_PLLA_PARAMETROS_VALOR where id_entidad=P_ID_ENTIDAD and id_anho=P_ID_ANHO and codigo= 'PARAM_RMV';

    DELETE FROM TT_TRABAJADOR_SCTR;

    if P_ID_TRABAJADOR_SCTR>0 then
      insert into ENOC.TT_TRABAJADOR_SCTR(
        ID_TRABAJADOR_SCTR,
        ID_PERFIL_PUESTO,
        ID_TRABAJADOR,
        SCTR,
        SUELDO_REAL,
        SUELDO,
        TASA_SALUD,
        IGV,
        FMR,
        RMV,
        FACTOR_DE,
        COSTO_SALUD
      )
      SELECT 
      P_ID_TRABAJADOR_SCTR,
      pp.id_perfil_puesto,
      t.id_trabajador,
      pp.sctr,
      case when t.id_condicion_laboral='M' then 
        re.fmr*l_fmr 
      else 
        case when re.tipo_pago='H' then (SELECT coalesce(sum(d.importe),0) from enoc.PLLA_REMUNERACION_DET  d 
          where d.id_remuneracion=re.id_remuneracion
          and d.id_anho=P_ID_ANHO
          and d.id_mes=P_ID_MES
          and d.vigencia=1
          ) 
        else 
          re.sueldo 
        end      
      end as SUELDO_REAL,
      0,
      l_tasa_salud,
      l_igv*100,
      l_fmr,
      CASE WHEN t.id_tipo_tiempo_trabajo=2 THEN l_rmv/2 ELSE l_rmv END,
      l_factor_de,
      0
      from moises.trabajador t, enoc.plla_perfil_puesto pp,enoc.PLLA_REMUNERACION re 
      where t.id_perfil_puesto=pp.id_perfil_puesto
      AND t.id_trabajador=re.id_trabajador
      and re.vigencia=1
      and t.id_entidad=P_ID_ENTIDAD
      AND T.ID_TRABAJADOR IN (
        SELECT X.ID_TRABAJADOR FROM  ENOC.PLLA_TRABAJADOR_SCTR X
        WHERE X.ID_TRABAJADOR_SCTR=P_ID_TRABAJADOR_SCTR
      );
    else
      insert into ENOC.TT_TRABAJADOR_SCTR(
        ID_TRABAJADOR_SCTR,
        ID_PERFIL_PUESTO,
        ID_TRABAJADOR,
        SCTR,
        SUELDO_REAL,
        SUELDO,
        TASA_SALUD,
        IGV,
        FMR,
        RMV,
        FACTOR_DE,
        COSTO_SALUD
      )
      SELECT
      0,
      pp.id_perfil_puesto,
      t.id_trabajador,
      pp.sctr,
      case when t.id_condicion_laboral='M' then 
        re.fmr*l_fmr 
      else 
        case when re.tipo_pago='H' then (SELECT coalesce(sum(d.importe),0) from enoc.PLLA_REMUNERACION_DET  d 
          where d.id_remuneracion=re.id_remuneracion
          and d.id_anho=P_ID_ANHO
          and d.id_mes=P_ID_MES
          and d.vigencia=1
          ) 
        else 
          re.sueldo 
        end      
      end as SUELDO_REAL,
      0,
      l_tasa_salud,
      l_igv*100,
      l_fmr,
      CASE WHEN t.id_tipo_tiempo_trabajo=2 THEN l_rmv/2 ELSE l_rmv END,
      l_factor_de,
      0
      from moises.trabajador t, enoc.plla_perfil_puesto pp,enoc.PLLA_REMUNERACION re, enoc.VW_ENT_DEP_AREA_CCOSTO sa
      where t.id_perfil_puesto=pp.id_perfil_puesto
      AND t.id_trabajador=re.id_trabajador
      AND t.id_sedearea=sa.id_sedearea
      and re.vigencia=1
      and t.id_entidad=P_ID_ENTIDAD
      and sa.id_depto_padre=P_ID_DEPTO
      and case when P_ID_TRABAJADOR=0 then 0 else t.id_trabajador end =P_ID_TRABAJADOR
      and coalesce(pp.sctr,'N') ='S'
      and t.id_tipo_tiempo_trabajo not in (3)
      and t.id_trabajador not in (
        select x.id_trabajador from
        enoc.PLLA_TRABAJADOR_SCTR x
        where x.id_anho=P_ID_ANHO
        and x.id_mes=P_ID_MES
      );

      
    end if;

    UPDATE ENOC.TT_TRABAJADOR_SCTR SET
    SUELDO=CASE WHEN SUELDO_REAL<RMV THEN RMV ELSE SUELDO_REAL END;

    UPDATE ENOC.TT_TRABAJADOR_SCTR SET
    COSTO_SALUD=((SUELDO) + ( SUELDO * TASA_SALUD * IGV ))/ 100;

    if P_ID_TRABAJADOR_SCTR>0 then
    
      MERGE INTO ENOC.PLLA_TRABAJADOR_SCTR S 
      USING(
      SELECT 
      ID_TRABAJADOR_SCTR,
      ID_PERFIL_PUESTO,
      ID_TRABAJADOR,
      SCTR,
      SUELDO_REAL,
      SUELDO,
      TASA_SALUD,
      IGV,
      FMR,
      RMV,
      FACTOR_DE,
      COSTO_SALUD
      from ENOC.TT_TRABAJADOR_SCTR
      where ID_TRABAJADOR_SCTR=P_ID_TRABAJADOR_SCTR
      )T ON (T.ID_TRABAJADOR_SCTR=S.ID_TRABAJADOR_SCTR)
      WHEN  MATCHED THEN UPDATE SET 
      S.ID_PERFIL_PUESTO=T.ID_PERFIL_PUESTO,
      S.SCTR=T.SCTR,
      S.SUELDO_REAL=T.SUELDO_REAL,
      S.SUELDO=T.SUELDO,
      S.TASA_SALUD=T.TASA_SALUD,
      S.IGV=T.IGV,
      S.FMR=T.FMR,
      S.RMV=T.RMV,
      S.FACTOR_DE=T.FACTOR_DE,
      S.COSTO_SALUD=T.COSTO_SALUD;

    ELSE
      select coalesce(max(ID_TRABAJADOR_SCTR),0) into STRICT l_max_id from ENOC.PLLA_TRABAJADOR_SCTR;
      insert into enoc.PLLA_TRABAJADOR_SCTR(
        ID_TRABAJADOR_SCTR,
        ID_PERFIL_PUESTO,
        ID_TRABAJADOR,
        ID_ANHO,
        ID_MES,
        SCTR,
        SUELDO_REAL,
        SUELDO,
        TASA_SALUD,
        IGV,
        FMR,
        RMV,
        FACTOR_DE,
        COSTO_SALUD,
        VIGENCIA,
        ID_USER_REG,
        FECHA_REG
        )
        SELECT (row_number() OVER ( ORDER BY ID_TRABAJADOR ASC )) + l_max_id AS  ID_TRABAJADOR_SCTR,
          ID_PERFIL_PUESTO,
          ID_TRABAJADOR,
          P_ID_ANHO,
          P_ID_MES,
          SCTR,
          SUELDO_REAL,
          SUELDO,
          TASA_SALUD,
          IGV,
          FMR,
          RMV,
          FACTOR_DE,
          COSTO_SALUD,
          1,
          P_ID_USER_REG,
          clock_timestamp()
        from ENOC.TT_TRABAJADOR_SCTR
        order by ID_TRABAJADOR;
    END IF;

--     <<salida>>
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_compensacion_sp_generar_trabajador_sctr (P_ID_ENTIDAD bigint, P_ID_DEPTO text,P_ID_TRABAJADOR_SCTR bigint, P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint, P_MSGERROR out text) FROM PUBLIC;
