-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_categorization,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_categorization_sp_generar_autoevaluador (P_ID_CATEGORIZACION bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

 l_contar bigint;
 l_error bigint:=0;
 l_msgerror varchar(200):='';
 l_id bigint;
 l_id_tipo_evaluador bigint;
 l_id_tipo_eval_instrumento bigint;

BEGIN

  SELECT id_tipo_evaluador into STRICT l_id_tipo_evaluador FROM  ENOC.CAT_TIPO_EVALUADOR where CODIGO='AU';

  SELECT COUNT(1) INTO STRICT l_contar FROM ENOC.CAT_TIPO_EVAL_INSTRUMENTO
  WHERE  ID_TIPO_EVALUADOR=l_id_tipo_evaluador
  AND ID_CATEGORIZACION=P_ID_CATEGORIZACION;

  if l_contar =0 THEN
      l_error:=1;
      l_msgerror:='FALTA ASIGNAR INSTRUMENTO PARA TIPO AUTOEVALUADOR';
--       goto salida;
  ELSE
    if l_contar >1 THEN
      l_error:=1;
      l_msgerror:='M√ÅS DE UN INSTRUMENTO ASIGNADO PARA TIPO AUTOEVALUADOR';
--       goto salida;
    END IF;

  end if;

  --INSERTA COMO EVALUADORES
  select coalesce(max(ID_EVALUADOR),0) into STRICT l_id from enoc.CAT_EVALUADOR;
  INSERT INTO ENOC.CAT_EVALUADOR(
  ID_EVALUADOR,
  ID_CATEGORIZACION,
  ID_PERSONA,
  ID_USER_REG,
  FECHA_REG
  )
  SELECT (row_number() OVER ( ORDER BY ID_DOCENTE ASC )) + l_id as ID_EVALUADOR ,
  P_ID_CATEGORIZACION,
  ID_PERSONA,
  P_ID_USER,
  clock_timestamp()
  from ENOC.CAT_DOCENTE
  WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  AND ID_ESTADO_DOCENTE NOT IN ('00')
  AND ID_PERSONA NOT IN (
    SELECT ID_PERSONA from ENOC.CAT_EVALUADOR 
    WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  );

  --INSERTAR TIPO EVALUADOR
   select coalesce(max(ID_EVALUADOR_DET),0) into STRICT l_id from enoc.CAT_EVALUADOR_DET;
  INSERT INTO ENOC.CAT_EVALUADOR_DET(
  ID_EVALUADOR_DET,
  ID_EVALUADOR,
  ID_TIPO_EVALUADOR,
  ID_USER_REG,
  FECHA_REG
  )
  SELECT (row_number() OVER ( ORDER BY ID_EVALUADOR ASC )) + l_id as ID_EVALUADOR_DET ,
  ID_EVALUADOR,
  l_id_tipo_evaluador,
  P_ID_USER,
  clock_timestamp()
  from ENOC.CAT_EVALUADOR
  WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  AND ID_PERSONA  IN (
      SELECT ID_PERSONA from ENOC.CAT_DOCENTE 
      WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
  ) AND ID_EVALUADOR NOT IN (
    SELECT ID_EVALUADOR FROM ENOC.CAT_EVALUADOR_DET 
    WHERE  ID_TIPO_EVALUADOR=l_id_tipo_evaluador
    AND ID_EVALUADOR IN (
       SELECT ID_EVALUADOR FROM ENOC.CAT_EVALUADOR
       WHERE ID_CATEGORIZACION=P_ID_CATEGORIZACION
    ) 
  );

  SELECT id_tipo_eval_instrumento INTO STRICT l_id_tipo_eval_instrumento 
  FROM ENOC.CAT_TIPO_EVAL_INSTRUMENTO
  WHERE  ID_TIPO_EVALUADOR=l_id_tipo_evaluador
  AND ID_CATEGORIZACION=P_ID_CATEGORIZACION;

  --insertar evaluador docente
  select coalesce(max(ID_DOCENTE_EVALUADOR),0) into STRICT l_id from enoc.CAT_DOCENTE_EVALUADOR;
  insert into ENOC.CAT_DOCENTE_EVALUADOR(
  ID_DOCENTE_EVALUADOR,
  ID_DOCENTE,
  ID_EVALUADOR_DET,
  ID_TIPO_EVAL_INSTRUMENTO,
  ID_USER_REG,
  FECHA_REG,
  FINALIZADO
  )
  SELECT (row_number() OVER ( ORDER BY ID_EVALUADOR_DET ASC )) + l_id as ID_DOCENTE_EVALUADOR ,
  c.id_docente,
  a.ID_EVALUADOR_DET,
  l_id_tipo_eval_instrumento,
  P_ID_USER,
  clock_timestamp(),
  'N'
  from ENOC.CAT_EVALUADOR_DET a, ENOC.CAT_EVALUADOR b, ENOC.CAT_DOCENTE c
  WHERE a.ID_EVALUADOR=b.ID_EVALUADOR
  and b.id_persona=c.id_persona
  and b.ID_CATEGORIZACION=c.ID_CATEGORIZACION
  and b.ID_CATEGORIZACION=P_ID_CATEGORIZACION
  and a.ID_TIPO_EVALUADOR=l_id_tipo_evaluador
  and c.id_docente not in (
    SELECT x.id_docente from ENOC.CAT_DOCENTE_EVALUADOR x
    where x.ID_EVALUADOR_DET=a.ID_EVALUADOR_DET
    and x.ID_TIPO_EVAL_INSTRUMENTO=l_id_tipo_eval_instrumento
  );

 
--   <<salida>>
  P_ERROR:=l_error;
  P_MSGERROR:=l_msgerror;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_categorization_sp_generar_autoevaluador (P_ID_CATEGORIZACION bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
