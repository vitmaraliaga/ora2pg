-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_registrar_justificacion ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_TRABAJADOR bigint, P_ID_MOTIVO_JUSTIF bigint, P_FECHA timestamp(0), P_DESCRIPCION text, P_EVIDENCIA_ADJ text, P_ID_ESTADO_JUSTIF text, P_ID_USER bigint, P_ERROR OUT bigint, P_MSGERROR OUT text, P_ID_SOLIC_JUSTIF OUT bigint) AS $body$
DECLARE

	L_CONTAR bigint:=0;
	L_ID_SOLIC_JUSTIF bigint;
	L_ID_SOLIC_JUSTIF_ESTADO bigint;
	L_ID_SITUACION_TRABAJADOR bigint;
	
BEGIN
		P_ERROR:=0;
		P_MSGERROR := 'Se guardó correctamente.';
	
		--VERIFICA SI ES UN TRABAJADOR ACTIVO
-- 		<<FIND_DATOS>>
			BEGIN
	 		select
            t.id_situacion_trabajador
            into STRICT
            L_ID_SITUACION_TRABAJADOR
           from enoc.vw_trabajador t
            INNER JOIN enoc.PLLA_CONTRATO pc ON pc.ID_CONTRATO =t.ID_CONTRATO AND t.ID_ENTIDAD = pc.ID_ENTIDAD  AND t.ID_PERSONA = pc.ID_PERSONA
           where t.id_trabajador=P_ID_TRABAJADOR AND t.ID_ENTIDAD=P_ID_ENTIDAD AND pc.ID_DEPTO = P_ID_DEPTO;
         EXCEPTION WHEN no_data_found THEN
	            P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
	            RETURN;
	        END;
-- 	       	<<FIND_DATOS>>
          if L_ID_SITUACION_TRABAJADOR not in ('1') then
                P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
                RETURN;
          end if;
		SELECT COALESCE(MAX((ID_SOLIC_JUSTIF)::numeric ),0)+1 INTO STRICT L_ID_SOLIC_JUSTIF FROM ENOC.PLLA_SOLIC_JUSTIF;
-- 		<<INSERT_JUSTIFICACION>>
	    BEGIN
		    INSERT INTO ENOC.PLLA_SOLIC_JUSTIF(ID_SOLIC_JUSTIF,ID_ENTIDAD,ID_DEPTO,ID_TRABAJADOR,ID_MOTIVO_JUSTIF,DESCRIPCION,FECHA,EVIDENCIA_ADJ,ID_ESTADO_JUSTIF,ID_USER_REG,FECHA_REG)
		    VALUES (L_ID_SOLIC_JUSTIF,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_TRABAJADOR,P_ID_MOTIVO_JUSTIF,P_DESCRIPCION,P_FECHA,P_EVIDENCIA_ADJ,P_ID_ESTADO_JUSTIF,P_ID_USER,clock_timestamp());
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo registrar la justificación.';
	        P_ERROR := 1;
	       	RETURN;
		END;
		SELECT COALESCE(MAX((ID_SOLIC_JUSTIF_ESTADO)::numeric ),0)+1 INTO STRICT L_ID_SOLIC_JUSTIF_ESTADO FROM ENOC.PLLA_SOLIC_JUSTIF_ESTADO;
-- 		<<INSERT_ESTADO_JUSTIFICACION>>
		    BEGIN
			    INSERT INTO ENOC.PLLA_SOLIC_JUSTIF_ESTADO(ID_SOLIC_JUSTIF_ESTADO,ID_SOLIC_JUSTIF,ID_ESTADO_JUSTIF,COMENTARIO,ID_USER_REG,FECHA_REG)
			    VALUES (L_ID_SOLIC_JUSTIF_ESTADO,L_ID_SOLIC_JUSTIF,P_ID_ESTADO_JUSTIF,'',P_ID_USER,clock_timestamp());
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo registrar el estado de la justificación.';
	        P_ERROR := 2;
	       	RETURN;
		END;
		P_ID_SOLIC_JUSTIF:=L_ID_SOLIC_JUSTIF;
  	END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_registrar_justificacion ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_TRABAJADOR bigint, P_ID_MOTIVO_JUSTIF bigint, P_FECHA timestamp(0), P_DESCRIPCION text, P_EVIDENCIA_ADJ text, P_ID_ESTADO_JUSTIF text, P_ID_USER bigint, P_ERROR OUT bigint, P_MSGERROR OUT text, P_ID_SOLIC_JUSTIF OUT bigint) FROM PUBLIC;
