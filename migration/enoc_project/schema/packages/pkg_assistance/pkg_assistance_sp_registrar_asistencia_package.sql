-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_registrar_asistencia (P_ID_ENTIDAD bigint, P_ID_TRABAJADOR bigint, P_ID_SEDEAREA bigint, P_ID_TIPO_HORARIO bigint, P_ID_MOTIVO_ASIST text, P_FECHA timestamp(0), P_HORA_ENTRADA timestamp(0), P_HORA_SALIDA timestamp(0), P_HORA_ENTRADA_REF timestamp(0), P_HORA_SALIDA_REF timestamp(0), P_TIPO text, --F:FICALIZABLE, N: NO FISCALIZABLE, 
 P_ID_USER_REG bigint ) AS $body$
DECLARE


      l_id_asistencia varchar(35);
      l_contar bigint:=0;
      l_contar1 bigint:=0;
      L_HORA_BASE_ENT varchar(20);
      L_HORA_BASE_SAL varchar(20);
      L_HORA_BASE_ENT_REF varchar(20);
      L_HORA_BASE_SAL_REF varchar(20);
      L_NUM_HORAS_BASE decimal(10,2):=0;
      L_NUM_REFRIGERIO decimal(10,2):=0;
      l_codigo varchar(10);
      l_horas decimal(10,2):=0;
      l_hora1 decimal(10,2):=0;
      l_hora2 decimal(10,2):=0;
      l_sal_diassig bigint:=0;

      l_horasc decimal(10,2):=0;
      l_hora1c decimal(10,2):=0;
      l_hora2c decimal(10,2):=0;

      F_HORA_BASE_ENT timestamp(0);
      F_HORA_BASE_SAL timestamp(0);
      F_HORA_BASE_ENT_REF timestamp(0);
      F_HORA_BASE_SAL_REF timestamp(0);

      C_HORA_ENT timestamp(0);
      C_HORA_SAL_REF timestamp(0);
      C_HORA_ENT_REF timestamp(0);
      C_HORA_SAL timestamp(0);

      l_tole_ent decimal(10,2):=0;
      l_tole_ent_ref decimal(10,2):=0;

      l_id_entidad bigint;
      l_tard_ent decimal(10,2):=0;
      l_tard_ent_ref decimal(10,2):=0;

      l_tipo_hora varchar(15);
      l_id_horario_mensual_det bigint;

      U_ID_TIPO_CONTROL_PERSONAL bigint;
      U_ID_CONDICION_LABORAL varchar(10);
      U_ID_SEDEAREA bigint;
      U_ID_PERFIL_PUESTO bigint;
      L_ID_MAPA_POLIGONO bigint;
      l_id_mapa_trabajador bigint;
      l_id_mapa_area bigint;
      l_id_depto_padre varchar(10);
      l_id_area bigint;
      l_ID_SITUACION_ESPECIAL bigint;
      L_ID_USERDEVICE bigint;
      l_id_horario_bloque bigint;
      L_ID_HORAS_REF bigint;
      l_id_tipo_tiempo_trabajo bigint;

      S_HORA_ENT varchar(10);
      S_HORA_SAL_REF varchar(10);
      S_HORA_ENT_REF varchar(10);
      S_HORA_SAL varchar(10);
      l_id_anho  bigint;
      l_id_mes  bigint;
      l_id_dia  bigint;
      l_nro_dia  bigint;


BEGIN
      
      select 
      id_entidad
      into STRICT l_id_entidad
      from moises.trabajador where id_trabajador=P_ID_TRABAJADOR;

      select 
         (to_char(P_FECHA,'YYYY'))::numeric , 
         (to_char(P_FECHA,'MM'))::numeric ,
         (to_char(P_FECHA,'DD'))::numeric ,
         (TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))::numeric  
         into STRICT l_id_anho,l_id_mes,l_id_dia,l_nro_dia;

     if P_ID_MOTIVO_ASIST in ('A','PLH') then
                  
          select 
            ID_MAPA_POLIGONO,
            ID_SITUACION_ESPECIAL,
            ID_TIPO_CONTROL_PERSONAL,
            ID_CONDICION_LABORAL,
            ID_SEDEAREA,
            ID_PERFIL_PUESTO,
            ID_USERDEVICE,
            ID_HORARIO_MENSUAL_DET,
            NUM_TOLE_TAR,
            NUM_TOLE_TAR_REF,
            ID_TIPO_TIEMPO_TRABAJO
            into STRICT
            L_ID_MAPA_POLIGONO,
            l_ID_SITUACION_ESPECIAL,
            U_ID_TIPO_CONTROL_PERSONAL,
            U_ID_CONDICION_LABORAL,
            U_ID_SEDEAREA,
            U_ID_PERFIL_PUESTO,
            L_ID_USERDEVICE,
            l_id_horario_mensual_det,
            l_tole_ent,
            l_tole_ent_ref,
            l_id_tipo_tiempo_trabajo
            from ENOC.PLLA_ASISTENCIA_HIST
            where ID_TRABAJADOR=P_ID_TRABAJADOR
            and id_anho=l_id_anho
            and id_mes=l_id_mes
            and id_dia=l_id_dia;

        select b.CODIGO into STRICT l_tipo_hora from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
        where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
        and a.id_tipo_horario =  P_ID_TIPO_HORARIO;

          
          if l_tipo_hora='HM' then
          
            select ID_HORARIO_BLOQUE into STRICT l_id_horario_bloque from ENOC.PLLA_HORARIO_MENSUAL_DET where ID_HORARIO_MENSUAL_DET=l_id_horario_mensual_det;

            select 
              a.HORA_ENTRADA,
              a.HORA_SALIDA,
              a.HORA_ENTRADA_REF,
              a.HORA_SALIDA_REF,
              a.NUM_HORAS,
              b.codigo,
              coalesce(a.SAL_DIASIG,0),
              to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA,'YYYY-MM-DD HH24:MI:SS') as hora_entrada_f,
              case when  b.codigo in ('REFCMA','DOTU') then to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA_REF,'YYYY-MM-DD HH24:MI:SS') else null end as hora_salida_ref_f,
              case when  b.codigo in ('REFCMA','DOTU') then to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA_REF,'YYYY-MM-DD HH24:MI:SS') else null end as hora_entrada_ref_f,
              to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA,'YYYY-MM-DD HH24:MI:SS') as hora_salida_f,
              ID_HORAS_REF
              into STRICT
              L_HORA_BASE_ENT,
              L_HORA_BASE_SAL,
              L_HORA_BASE_ENT_REF,
              L_HORA_BASE_SAL_REF,
              L_NUM_HORAS_BASE,
              l_codigo,
              l_sal_diassig,
              F_HORA_BASE_ENT,
              F_HORA_BASE_SAL_REF,
              F_HORA_BASE_ENT_REF,
              F_HORA_BASE_SAL,
              L_ID_HORAS_REF
              from enoc.PLLA_HORARIO_BLOQUE a, ENOC.PLLA_CONTROL_ASIST b 
              where a.ID_CONTROL_ASIST=b.ID_CONTROL_ASIST
              and a.ID_HORARIO_BLOQUE=l_id_horario_bloque;
          else
             select
              a.HORA_ENTRADA,
              a.HORA_SALIDA,
              a.HORA_ENTRADA_REF,
              a.HORA_SALIDA_REF,
              a.NUM_HORAS,
              b.codigo,
              coalesce(a.SAL_DIASIG,0),
              to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA,'YYYY-MM-DD HH24:MI:SS') as hora_entrada_f,
              case when  b.codigo in ('REFCMA','DOTU') then to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA_REF,'YYYY-MM-DD HH24:MI:SS') else null end as hora_salida_ref_f,
              case when  b.codigo in ('REFCMA','DOTU') then to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_ENTRADA_REF,'YYYY-MM-DD HH24:MI:SS') else null end as hora_entrada_ref_f,
              to_date(TO_CHAR(P_FECHA, 'YYYY-MM-DD')||' '||HORA_SALIDA,'YYYY-MM-DD HH24:MI:SS') as hora_salida_f,
              ID_HORAS_REF
              into STRICT
              L_HORA_BASE_ENT,
              L_HORA_BASE_SAL,
              L_HORA_BASE_ENT_REF,
              L_HORA_BASE_SAL_REF,
              L_NUM_HORAS_BASE,
              l_codigo,
              l_sal_diassig,
              F_HORA_BASE_ENT,
              F_HORA_BASE_SAL_REF,
              F_HORA_BASE_ENT_REF,
              F_HORA_BASE_SAL,
              L_ID_HORAS_REF
              from enoc.plla_horario_detalle a, ENOC.PLLA_CONTROL_ASIST b 
              where a.ID_CONTROL_ASIST=b.ID_CONTROL_ASIST
              and a.id_tipo_horario=P_ID_TIPO_HORARIO 
              and a.id_dia=l_nro_dia;
          end if;
            IF P_TIPO='F' THEN
              if l_sal_diassig=1 then
                F_HORA_BASE_SAL:= F_HORA_BASE_SAL + 1;
              end if;
              ---hora real
              select count(*) into STRICT l_contar from ENOC.PLLA_HORAS_REF where ID_HORAS_REF=L_ID_HORAS_REF;
              if l_contar>0 then
                select HORA_DEC into STRICT L_NUM_REFRIGERIO from ENOC.PLLA_HORAS_REF where ID_HORAS_REF=L_ID_HORAS_REF;
              end if;

              if l_codigo in ('REFCMA','DOTU') then
                if (P_HORA_ENTRADA IS NOT NULL AND P_HORA_ENTRADA::text <> '') and (P_HORA_SALIDA_REF IS NOT NULL AND P_HORA_SALIDA_REF::text <> '') then
                  select round((P_HORA_SALIDA_REF -  P_HORA_ENTRADA)*24,2) into STRICT l_hora1;
                else
                  l_hora1 := 0;
                end if;
                if (P_HORA_ENTRADA_REF IS NOT NULL AND P_HORA_ENTRADA_REF::text <> '') and (P_HORA_SALIDA IS NOT NULL AND P_HORA_SALIDA::text <> '') then
                  select round((P_HORA_SALIDA -  P_HORA_ENTRADA_REF)*24,2) into STRICT l_hora2;
                else
                  l_hora2 := 0;
                end if;
                l_horas := l_hora1 + l_hora2;
              else
                if (P_HORA_ENTRADA IS NOT NULL AND P_HORA_ENTRADA::text <> '') and (P_HORA_SALIDA IS NOT NULL AND P_HORA_SALIDA::text <> '') then
                  select round((P_HORA_SALIDA -  P_HORA_ENTRADA)*24,2) into STRICT l_horas;
                else
                  l_horas := 0;
                end if;
                if l_horas>0 then
                  l_horas:= l_horas - L_NUM_REFRIGERIO;
                end if;
              end if;

              
              
              --hora asistencia
               if (P_HORA_ENTRADA IS NOT NULL AND P_HORA_ENTRADA::text <> '') then
                if P_HORA_ENTRADA>F_HORA_BASE_ENT then
                  C_HORA_ENT:= P_HORA_ENTRADA;
                else
                  C_HORA_ENT:= F_HORA_BASE_ENT;
                end if;
               end if;

               if (P_HORA_SALIDA_REF IS NOT NULL AND P_HORA_SALIDA_REF::text <> '') then
                if P_HORA_SALIDA_REF>F_HORA_BASE_SAL_REF then
                  C_HORA_SAL_REF:= F_HORA_BASE_SAL_REF;
                else
                  C_HORA_SAL_REF:= P_HORA_SALIDA_REF;
                end if;
               end if;

               if (P_HORA_ENTRADA_REF IS NOT NULL AND P_HORA_ENTRADA_REF::text <> '') then
                if P_HORA_ENTRADA_REF>F_HORA_BASE_ENT_REF then
                  C_HORA_ENT_REF:= P_HORA_ENTRADA_REF;
                else
                  C_HORA_ENT_REF:= F_HORA_BASE_ENT_REF;
                end if;
               end if;

               if (P_HORA_SALIDA IS NOT NULL AND P_HORA_SALIDA::text <> '') then
                if P_HORA_SALIDA>F_HORA_BASE_SAL then
                  C_HORA_SAL:= F_HORA_BASE_SAL;
                else
                  C_HORA_SAL:= P_HORA_SALIDA;
                end if;
               end if;
               -----*-------------
              if l_codigo in ('REFCMA','DOTU') then
                if (C_HORA_ENT IS NOT NULL AND C_HORA_ENT::text <> '') and (C_HORA_SAL_REF IS NOT NULL AND C_HORA_SAL_REF::text <> '') then
                  select round((C_HORA_SAL_REF -  C_HORA_ENT)*24,2) into STRICT l_hora1c;
                else
                  l_hora1c := 0;
                end if;
                if (C_HORA_ENT_REF IS NOT NULL AND C_HORA_ENT_REF::text <> '') and (C_HORA_SAL IS NOT NULL AND C_HORA_SAL::text <> '') then
                  select round((C_HORA_SAL -  C_HORA_ENT_REF)*24,2) into STRICT l_hora2c;
                else
                  l_hora2c := 0;
                end if;
                l_horasc := l_hora1c + l_hora2c;
              else
                if (C_HORA_ENT IS NOT NULL AND C_HORA_ENT::text <> '') and (C_HORA_SAL IS NOT NULL AND C_HORA_SAL::text <> '') then
                  select round((C_HORA_SAL -  C_HORA_ENT)*24,2) into STRICT l_horasc;
                else
                  l_horasc := 0;
                end if;
                if l_horasc>0 then
                  l_horasc:= l_horasc - L_NUM_REFRIGERIO;
                end if;
              end if;

              
              S_HORA_ENT:= TO_CHAR(C_HORA_ENT,'HH24:MI');
              S_HORA_SAL_REF:= TO_CHAR(C_HORA_SAL_REF,'HH24:MI');
              S_HORA_ENT_REF:= TO_CHAR(C_HORA_ENT_REF,'HH24:MI');
              S_HORA_SAL:= TO_CHAR(C_HORA_SAL,'HH24:MI');

           ELSE
            S_HORA_ENT:= L_HORA_BASE_ENT;
            S_HORA_SAL_REF:= L_HORA_BASE_SAL_REF;
            S_HORA_ENT_REF:= L_HORA_BASE_ENT_REF;
            S_HORA_SAL:= L_HORA_BASE_SAL;
            l_horasc:=L_NUM_HORAS_BASE;
            l_horas:=L_NUM_HORAS_BASE;
           END IF;


 
       end if;
        l_id_asistencia:=to_char(P_FECHA,'YYYYMMDD')||P_ID_TRABAJADOR::text;

        select count(*) into STRICT l_contar from enoc.PLLA_ASISTENCIA where ID_ASISTENCIA= l_id_asistencia;

        
        
        if l_contar =0 then
               
          l_nro_dia:= (TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))::numeric;

  
          
          insert into enoc.PLLA_ASISTENCIA(
            ID_ASISTENCIA,
            ID_TRABAJADOR,
            FECHA,
            ID_ANHO,
            ID_MES,
            ID_DIA,
            NRO_DIA,
            HORA_BASE_ENT,
            HORA_BASE_SAL,
            HORA_BASE_ENT_REF,
            HORA_BASE_SAL_REF,
            NUM_HORAS_BASE,
            NUM_REFRIGERIO,
            HORA_ENTRADA,
            HORA_SALIDA,
            HORA_ENTRADA_REF,
            HORA_SALIDA_REF,
            NUM_HORAS,
            NUM_TOLE_TAR,
            NUM_MINUTOS_TAR_ENT,
            NUM_TOLE_TAR_REF,
            NUM_MINUTOS_TAR_REF,
            NUM_MINUTOS_TAR,
            HORA_ENTRADA_REAL,
            HORA_SALIDA_REAL,
            HORA_ENTRADA_REF_REAL,
            HORA_SALIDA_REF_REAL,
            NUM_HORAS_REAL,
            ID_MOTIVO_ASIST,
            ID_MAPA_POLIGONO,
            ID_SITUACION_ESPECIAL,
            ID_TIPO_CONTROL_PERSONAL,
            id_tipo_tiempo_trabajo,
            ID_TIPO_HORARIO,
            ID_CONDICION_LABORAL,
            ID_SEDEAREA,
            ID_PERFIL_PUESTO,
            ID_USERDEVICE,
            ID_HORARIO_MENSUAL_DET,
            SAL_DIASIG,
            ID_USER_REG,
            FECHA_REG
            
            
          )values (
            l_id_asistencia,
            P_ID_TRABAJADOR,
            P_FECHA,
            (TO_CHAR(P_FECHA,'YYYY'))::numeric ,
            (TO_CHAR(P_FECHA,'MM'))::numeric ,
            (TO_CHAR(P_FECHA,'DD'))::numeric ,
            (TO_CHAR(P_FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))::numeric ,
            
            L_HORA_BASE_ENT,
            L_HORA_BASE_SAL,
            L_HORA_BASE_ENT_REF,
            L_HORA_BASE_SAL_REF,
            L_NUM_HORAS_BASE,
            L_NUM_REFRIGERIO,
            
            S_HORA_ENT,--TO_CHAR(C_HORA_ENT,'HH24:MI'),
            S_HORA_SAL,--TO_CHAR(C_HORA_SAL,'HH24:MI'),
            S_HORA_ENT_REF,--TO_CHAR(C_HORA_ENT_REF,'HH24:MI'),
            S_HORA_SAL_REF,--TO_CHAR(C_HORA_SAL_REF,'HH24:MI'),
            l_horasc,
            l_tole_ent,
            0,--l_tard_ent,
            l_tole_ent_ref,
            0,--l_tard_ent_ref,
            0,--l_tard_ent + l_tard_ent_ref,
            TO_CHAR(P_HORA_ENTRADA,'HH24:MI'),
            TO_CHAR(P_HORA_SALIDA,'HH24:MI'),
            TO_CHAR(P_HORA_ENTRADA_REF ,'HH24:MI'),
            TO_CHAR(P_HORA_SALIDA_REF,'HH24:MI'),
            l_horas,
            P_ID_MOTIVO_ASIST,
            L_ID_MAPA_POLIGONO,
            l_ID_SITUACION_ESPECIAL,
            U_ID_TIPO_CONTROL_PERSONAL,
            l_id_tipo_tiempo_trabajo,
            P_ID_TIPO_HORARIO,
            U_ID_CONDICION_LABORAL,
            U_ID_SEDEAREA,
            U_ID_PERFIL_PUESTO,
            L_ID_USERDEVICE,
            l_id_horario_mensual_det,
            l_sal_diassig,
            
            P_ID_USER_REG,
            clock_timestamp()
          );
        else

         update PLLA_ASISTENCIA set
            HORA_BASE_ENT	=	L_HORA_BASE_ENT,
            HORA_BASE_SAL	=	  L_HORA_BASE_SAL,
            HORA_BASE_ENT_REF	=	   L_HORA_BASE_ENT_REF,
            HORA_BASE_SAL_REF	=	   L_HORA_BASE_SAL_REF,
            NUM_HORAS_BASE	=	    L_NUM_HORAS_BASE,
            NUM_REFRIGERIO	=	    L_NUM_REFRIGERIO,
            HORA_ENTRADA	=	     S_HORA_ENT,-- TO_CHAR(C_HORA_ENT,'HH24:MI'),
            HORA_SALIDA	=	       S_HORA_SAL,-- TO_CHAR(C_HORA_SAL,'HH24:MI'),
            HORA_ENTRADA_REF	=	 S_HORA_ENT_REF, --TO_CHAR(C_HORA_ENT_REF,'HH24:MI'),
            HORA_SALIDA_REF	=	   S_HORA_SAL_REF,--  TO_CHAR(C_HORA_SAL_REF,'HH24:MI'),
            NUM_HORAS	=	           l_horasc,
            NUM_TOLE_TAR	=	       l_tole_ent,
            NUM_MINUTOS_TAR_ENT	=	 0,--l_tard_ent,
            NUM_TOLE_TAR_REF	=	     l_tole_ent_ref,
            NUM_MINUTOS_TAR_REF	=	         0,--   l_tard_ent_ref,
            NUM_MINUTOS_TAR	=	           0,-- l_tard_ent + l_tard_ent_ref,
            HORA_ENTRADA_REAL	=	            TO_CHAR(P_HORA_ENTRADA,'HH24:MI'),
            HORA_SALIDA_REAL	=	            TO_CHAR(P_HORA_SALIDA,'HH24:MI'),
            HORA_ENTRADA_REF_REAL	=	            TO_CHAR(P_HORA_ENTRADA_REF ,'HH24:MI'),
            HORA_SALIDA_REF_REAL	=	            TO_CHAR(P_HORA_SALIDA_REF,'HH24:MI'),
            NUM_HORAS_REAL	=	            l_horas,
            ID_MOTIVO_ASIST	=	            P_ID_MOTIVO_ASIST,
            ID_MAPA_POLIGONO	=	            L_ID_MAPA_POLIGONO,
            ID_SITUACION_ESPECIAL	=	            l_ID_SITUACION_ESPECIAL,
            ID_TIPO_CONTROL_PERSONAL	=	            U_ID_TIPO_CONTROL_PERSONAL,
            id_tipo_tiempo_trabajo   =      l_id_tipo_tiempo_trabajo,
            ID_TIPO_HORARIO	=	            P_ID_TIPO_HORARIO,
            ID_CONDICION_LABORAL	=	            U_ID_CONDICION_LABORAL,
            ID_SEDEAREA	=	            U_ID_SEDEAREA,
            ID_PERFIL_PUESTO	=	            U_ID_PERFIL_PUESTO,
            ID_USERDEVICE	=	            L_ID_USERDEVICE,
            ID_HORARIO_MENSUAL_DET	=	            l_id_horario_mensual_det,
            SAL_DIASIG	=	            l_sal_diassig,
            ID_USER_MOD=P_ID_USER_REG,
            FECHA_MOD = clock_timestamp()
         where id_asistencia = l_id_asistencia;
         

        end if;

       if P_ID_MOTIVO_ASIST='A' and  P_TIPO='F' and ( (C_HORA_ENT IS NOT NULL AND C_HORA_ENT::text <> '')  OR  (C_HORA_ENT_REF IS NOT NULL AND C_HORA_ENT_REF::text <> '')) then
        CALL pkg_assistance_sp_generar_tardanza(l_id_asistencia,P_ID_USER_REG);
       end if;

      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_registrar_asistencia (P_ID_ENTIDAD bigint, P_ID_TRABAJADOR bigint, P_ID_SEDEAREA bigint, P_ID_TIPO_HORARIO bigint, P_ID_MOTIVO_ASIST text, P_FECHA timestamp(0), P_HORA_ENTRADA timestamp(0), P_HORA_SALIDA timestamp(0), P_HORA_ENTRADA_REF timestamp(0), P_HORA_SALIDA_REF timestamp(0), P_TIPO text, P_ID_USER_REG bigint ) FROM PUBLIC;
