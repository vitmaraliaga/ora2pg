-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_marcar_asistencia_movil ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_TRABAJADOR bigint, P_ID_USER bigint, P_LAT text, P_LNG text, P_UUID text, P_ID_DESCRIP_MARCACION text, P_CODIGO_MODALIDAD text, P_OPTION text, P_ERROR OUT bigint, P_MSGERROR OUT text) AS $body$
DECLARE

	L_CONTAR bigint;
	L_ID_MAPA_POLIGONO bigint;
	L_FECHAHORA timestamp(0);
	L_DESDE timestamp(0);
	L_HASTA timestamp(0);
	L_NOMBRE_POLIGONO varchar(150);
	
BEGIN
		P_ERROR:=0;
		P_MSGERROR := '';
		L_FECHAHORA := to_date(TO_CHAR(clock_timestamp)|%, 'YYYY-MM-DD HH24:MI:SS'),'YYYY-MM-DD HH24:MI:SS');

		--VERIFICA SI HAY OTROS DISPOSITIVOS ACTIVOS
        SELECT COUNT(1) INTO STRICT L_CONTAR FROM ELISEO.APS_USER_DEVICE
			WHERE ID_PERSONA = P_ID_USER
			AND UUID = P_UUID
			AND STATE = '1';
         IF L_CONTAR <> 1 THEN
         	SELECT COUNT(1) INTO STRICT L_CONTAR FROM ELISEO.APS_USER_DEVICE
			WHERE ID_PERSONA = P_ID_USER
			AND STATE = '1';
			IF L_CONTAR = 1 THEN
	         	P_ERROR:=1;
	            P_MSGERROR:='Existe otro dispositivo activo, comunícate con tu jefe o DTH';
	            RETURN;
	        ELSIF L_CONTAR > 1 THEN
	        	P_ERROR:=1;
	            P_MSGERROR:='Existe más un dispositivo activo, comunícate con tu jefe o DTH';
	            RETURN;
	        ELSE
	        	P_ERROR:=1;
	            P_MSGERROR:='No existe un dispositivo activo. Vuelva a iniciar sessión';
	            RETURN;
	        END IF;
         END IF;

        IF P_CODIGO_MODALIDAD = 'TP' THEN 
        	ENOC.CALL pkg_assistance_sp_idmapapoligono_trabajador(P_ID_TRABAJADOR,L_ID_MAPA_POLIGONO);
        	SELECT COUNT(1) into STRICT L_CONTAR FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
        	IF L_CONTAR=0 THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No estás asignado a un polígono para la marcación';
	            RETURN;
           	ELSE
           		L_CONTAR := 0;
	            --VALIDA SI ESTA DENTRO DEL AREA DE TRABAJO
	           	select CASE WHEN SUM(CASE WHEN ST_Distance)ORA2PG_COMMENT1231%
				  geometry(2001, 4326, sdo_point_type(LNG, LAT, null), null, null),
				  geometry(2001, 4326, sdo_point_type(P_LNG, P_LAT, null), null, null))<=RADIOME THEN 1 ELSE 0 END)>0 THEN 1 ELSE 0 END INTO STRICT L_CONTAR
				from ENOC.PLLA_MAPA_COORD_RADIO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
				IF L_CONTAR<>1 THEN
           	    	SELECT NOMBRE into STRICT L_NOMBRE_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
					P_ERROR:=1;
					P_MSGERROR := 'Estás fuera del área de trabajo, polígono "'||L_NOMBRE_POLIGONO||'"';
					RETURN;
				END IF;
			END IF;
        END IF;

      	ENOC.CALL pkg_assistance_sp_registrar_marcacion(
                    P_ID_TRABAJADOR,
                    1,--MOVIL
                    L_FECHAHORA,
                    NULL,
                    P_LAT,
                    P_LNG,
                    NULL,
                    NULL,
                    NULL,
                    'A',--ASISTENCIA
                    P_ID_DESCRIP_MARCACION,
                    P_ID_USER,
                    P_ERROR,
                    P_MSGERROR
                    );
        IF P_ERROR <> 0 THEN
        	RETURN;
        END IF;

       L_DESDE := to_date(TO_CHAR(L_FECHAHORA, 'YYYY-MM-DD'),'YYYY-MM-DD');
       L_HASTA := case when date_trunc('day', ((date_trunc('month',(to_char(L_FECHAHORA,'YYYY-MM-DD'))::timestamp + interval '1 month'))::timestamp(0) - 1))> to_date(to_char(clock_timestamp(),'YYYY-MM-DD'),'YYYY-MM-DD') then to_date(to_char(clock_timestamp(),'YYYY-MM-DD'),'YYYY-MM-DD') else date_trunc('day', ((date_trunc('month',(to_char(L_FECHAHORA,'YYYY-MM-DD'))::timestamp + interval '1 month'))::timestamp(0) - 1)) END;
      	
      	IF P_OPTION = 'A' THEN
	      	ENOC.CALL pkg_assistance_sp_procesar_marcacion(
                    L_DESDE,
                    L_HASTA,
                    P_ID_ENTIDAD,
                    P_ID_DEPTO,
                    0,
                    P_ID_TRABAJADOR,
                    P_ID_USER,
                    P_ERROR,
                    P_MSGERROR
                    );
        ELSIF P_OPTION = 'ST' THEN
           CALL ENOC.pkg_assistance_sp_procesar_sobretiempo(
            L_DESDE,
            L_HASTA,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            0,
            '05',
            '',
            '',
            '',
            0,
            P_ID_USER,
            P_ID_TRABAJADOR
            );
        END IF;
  	END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_marcar_asistencia_movil ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_TRABAJADOR bigint, P_ID_USER bigint, P_LAT text, P_LNG text, P_UUID text, P_ID_DESCRIP_MARCACION text, P_CODIGO_MODALIDAD text, P_OPTION text, P_ERROR OUT bigint, P_MSGERROR OUT text) FROM PUBLIC;
