-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_areas_asignar (P_ID_MAPA_POLIGONO bigint, OUT CURSOR REFCURSOR ) AS $body$
DECLARE

   l_nivel_min bigint;
   l_nivel_max bigint;
   l_j bigint:=0;
   L_ID_ENTIDAD bigint;
   L_ID_DEPTO varchar(10);

BEGIN 
     SELECT ID_ENTIDAD,CASE WHEN ID_DEPTO = '0' THEN '' ELSE ID_DEPTO END INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO;
     DELETE FROM ENOC.TT_AREA_ASIGNAR;
     INSERT INTO ENOC.TT_AREA_ASIGNAR(
      ID,
      ID_AREA,
      ID_PARENT,
      NIVEL,
      ASIGNAR,
      trabajador,
      NOMBRE,
      HIJO,
      HIJO_QUEDA
      )
      SELECT (row_number() OVER ( ORDER BY NIVEL,ID_AREA ASC )),T.ID_AREA,T.ID_PARENT,T.NIVEL,T.C1,T.C2,T.NOMBRE,T.CANTIDAD,T.C3
		FROM (WITH RECURSIVE cte AS (
SELECT (row_number() OVER ( ORDER BY ID_AREA ASC )),ID_AREA,COALESCE(ID_PARENT,0) AS ID_PARENT,max(1) AS NIVEL,--LEVEL,
	      0 AS C1,0 AS C2,A.NOMBRE,(SELECT COUNT(*) FROM eliseo.org_area Y WHERE Y.ID_PARENT=A.ID_AREA  AND coalesce(Y.gth,0)=1
	      and Y.id_entidad=L_ID_ENTIDAD ) AS CANTIDAD,0 AS C3
	      from eliseo.org_area a
	      where coalesce(a.gth,0)=1
	      and id_entidad=L_ID_ENTIDAD
	      -- START WITH id_area = 3
   UNION ALL
SELECT (row_number() OVER ( ORDER BY ID_AREA ASC )),ID_AREA,COALESCE(ID_PARENT,0) AS ID_PARENT,max(c.level+1) AS NIVEL,
	      0 AS C1,0 AS C2,A.NOMBRE,(SELECT COUNT(*) FROM eliseo.org_area Y WHERE Y.ID_PARENT=A.ID_AREA  AND coalesce(Y.gth,0)=1
	      and Y.id_entidad=L_ID_ENTIDAD ) AS CANTIDAD,0 AS C3
	      from eliseo.org_area a
	      where coalesce(a.gth,0)=1
	      and id_entidad=L_ID_ENTIDAD
	      
 JOIN cte c ON (c.ID_AREA = a.A.id_parent)

) SELECT * FROM cte
	     GROUP BY ID_AREA,ID_PARENT,a.NOMBRE)T;

      delete from ENOC.TT_AREA_ASIGNAR where hijo=0
      and id_area not in (
        SELECT id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
        where id_entidad=L_ID_ENTIDAD 
        and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
      );

      delete from ENOC.TT_AREA_ASIGNAR where hijo=0
      and id_area not in (
        SELECT c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
        where t.id_sedearea=c.id_sedearea
        and t.id_entidad=L_ID_ENTIDAD 
        and c.id_entidad=L_ID_ENTIDAD 
        and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
        and t.id_situacion_trabajador='1'
      );

      delete from ENOC.TT_AREA_ASIGNAR
      where hijo=0
      and id_area in (
          SELECT id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );

      MERGE INTO ENOC.TT_AREA_ASIGNAR S 
      USING(
       SELECT
          A.ID,
          (SELECT COUNT(*) FROM  ENOC.TT_AREA_ASIGNAR Y WHERE Y.ID_PARENT=A.ID_AREA) AS NRO_HIJO
        FROM  ENOC.TT_AREA_ASIGNAR A
      )T ON (T.ID=S.ID)
      WHEN  MATCHED THEN UPDATE SET  
      S.HIJO_QUEDA=T.NRO_HIJO;

      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in (
        SELECT id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
        where id_entidad=L_ID_ENTIDAD 
        and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
      );

      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in (
        SELECT c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
        where t.id_sedearea=c.id_sedearea
        and t.id_entidad=L_ID_ENTIDAD 
        and c.id_entidad=L_ID_ENTIDAD 
        and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
        and t.id_situacion_trabajador='1'
      );

      delete from ENOC.TT_AREA_ASIGNAR
      where HIJO_QUEDA=0
      and id_area in (
          SELECT id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );

      select min(nivel), max(nivel) into STRICT l_nivel_min,l_nivel_max
      from ENOC.TT_AREA_ASIGNAR;
      l_j:=l_nivel_max;

      while(l_nivel_min<=l_j) loop
          
          
          MERGE INTO ENOC.TT_AREA_ASIGNAR S 
          USING(
           SELECT
              A.ID,
              (SELECT COUNT(*) FROM  ENOC.TT_AREA_ASIGNAR Y WHERE Y.ID_PARENT=A.ID_AREA) AS NRO_HIJO
            FROM  ENOC.TT_AREA_ASIGNAR A
          )T ON (T.ID=S.ID)
          WHEN  MATCHED THEN UPDATE SET  
          S.HIJO_QUEDA=T.NRO_HIJO;

          delete from ENOC.TT_AREA_ASIGNAR 
          where HIJO_QUEDA=0
          --and nivel=l_j
          and id_area not in (
            SELECT id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
            where id_entidad=L_ID_ENTIDAD 
            and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          );

          delete from ENOC.TT_AREA_ASIGNAR 
          where HIJO_QUEDA=0
          --and nivel=l_j
          and id_area not in (
            SELECT c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
            where t.id_sedearea=c.id_sedearea
            and t.id_entidad=L_ID_ENTIDAD 
            and c.id_entidad=L_ID_ENTIDAD 
            and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
            and t.id_situacion_trabajador='1'
          );

          delete from ENOC.TT_AREA_ASIGNAR
          where HIJO_QUEDA=0
          --and nivel=l_j
          and id_area in (
              SELECT id_area from ENOC.plla_mapa_area 
              where id_entidad=L_ID_ENTIDAD 
              and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
              AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
          );

           l_j:=l_j - 1;

      end loop;

      MERGE INTO ENOC.TT_AREA_ASIGNAR S 
      USING(
       SELECT
          A.ID,
          (SELECT COUNT(*) FROM  ENOC.TT_AREA_ASIGNAR Y WHERE Y.ID_PARENT=A.ID_AREA) AS NRO_HIJO
        FROM  ENOC.TT_AREA_ASIGNAR A
      )T ON (T.ID=S.ID)
      WHEN  MATCHED THEN UPDATE SET  
      S.HIJO_QUEDA=T.NRO_HIJO;

      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in (
        SELECT id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
        where id_entidad=L_ID_ENTIDAD 
        and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
      );

      delete from ENOC.TT_AREA_ASIGNAR where HIJO_QUEDA=0
      and id_area not in (
        SELECT c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
        where t.id_sedearea=c.id_sedearea
        and t.id_entidad=L_ID_ENTIDAD 
        and c.id_entidad=L_ID_ENTIDAD 
        and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
        and t.id_situacion_trabajador='1'
      );

      delete from ENOC.TT_AREA_ASIGNAR
      where HIJO_QUEDA=0
      and id_area in (
          SELECT id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );

      
      update ENOC.TT_AREA_ASIGNAR set
      asignar = 2
      where id_area in (
          SELECT id_area from ENOC.plla_mapa_area 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          AND ID_MAPA_POLIGONO=P_ID_MAPA_POLIGONO
      );

      update ENOC.TT_AREA_ASIGNAR set
      asignar = 1
      where id_area  in (
          SELECT id_area from enoc.VW_ENT_DEP_AREA_CCOSTO 
          where id_entidad=L_ID_ENTIDAD 
          and id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          
      ) AND asignar=0;

      update ENOC.TT_AREA_ASIGNAR set
      trabajador = 1
      where id_area  in (
          SELECT c.id_area from moises.trabajador t, enoc.VW_ENT_DEP_AREA_CCOSTO  c
          where t.id_sedearea=c.id_sedearea
          and t.id_entidad=L_ID_ENTIDAD 
          and c.id_entidad=L_ID_ENTIDAD 
          and c.id_depto_padre like L_ID_DEPTO||'%'-- =L_ID_DEPTO
          and t.id_situacion_trabajador='1'
      );WITH RECURSIVE cte AS (


  
       OPEN CURSOR FOR  
               
        SELECT 
          ID_AREA,ID_PARENT,max(1) as NIVEL,ASIGNAR,trabajador,NOMBRE,HIJO,HIJO_QUEDA,'' as seleccionado
        from ENOC.TT_AREA_ASIGNAR 
        --START WITH id_area = 3
  UNION ALL

  
  
       OPEN FOR EXECUTE CURSOR  
               
        SELECT 
          ID_AREA,ID_PARENT,max(c.level+1) as NIVEL,ASIGNAR,trabajador,NOMBRE,HIJO,HIJO_QUEDA,'' as seleccionado
        from ENOC.TT_AREA_ASIGNAR 
        
 JOIN cte c ON (c.ID_AREA = %ORA2PG_COMMENT1188.id_parent)

) SELECT * FROM cte
       GROUP BY ID,ID_AREA,ID_PARENT,ASIGNAR,trabajador,NOMBRE,HIJO,HIJO_QUEDA ORDER BY  ID;


   END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_areas_asignar (P_ID_MAPA_POLIGONO bigint, OUT CURSOR REFCURSOR ) FROM PUBLIC;
