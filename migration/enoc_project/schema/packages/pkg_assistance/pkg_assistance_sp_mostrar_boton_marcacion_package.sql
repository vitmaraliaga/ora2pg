-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;

    
  --SE USA PARA HABILITAR UN BUTTON EN EL APLICATIVO MOBIL PARA LA MARCACION DE LA ASISTENCIA
CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_mostrar_boton_marcacion ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_TRABAJADOR bigint, P_LAT text, P_LNG text, P_SHOW_BUTTON OUT text,--0:NO SE MUESTRA EL BOTON, 1: SE MUESTRA EL BOTON, 2: NO SE MUESTRA Y YA HA SIDO MARCADO, 3:  OTRA ACTIVIDAD,4: FUERA DEL AREA DE TRABAJO
 P_TEXT_BUTTON OUT text, P_CODE_MODALITY OUT text, P_FECHA_HORA OUT timestamp(0), P_ID_DESCRIP_MARCACION OUT text, P_MINUTOS_TOLERANCIA OUT bigint, P_ERROR OUT bigint, P_MSGERROR OUT text, P_OPTION OUT text) AS $body$
DECLARE
 IS   ---A = ASISTENCIA, ST = SOBRE TIEMPO
	L_CONTAR bigint;
	L_ID_TIPO_HORARIO bigint;
	L_CONFIG_TIP_HORA_CODIGO varchar(3);
	L_TIPO_MODALIDAD_CODIGO varchar(3);
	L_HORA_ENTRADA timestamp(0);
	L_HORA_SALIDA_REF timestamp(0);
	L_HORA_ENTRADA_REF timestamp(0);
	L_HORA_SALIDA timestamp(0);
	L_RANGO_ENTRADA_SALIDA bigint;
	L_RANGO_SAL_ENT_REF bigint;
	L_TOLER_ENTRADA bigint;
	L_TOLER_ENTRADA_REF bigint;
	L_ID_ANHO bigint;
	L_ID_MES bigint;
	L_ID_DIA bigint;
	L_NRO_DIA bigint;
	L_ID_PERSONA bigint;
	L_ID_SITUACION_TRABAJADOR bigint;
	L_ID_SEDEAREA bigint;
	L_ID_AREA bigint;
	L_ID_MAPA_POLIGONO bigint;
	L_FEC_ACTUAL timestamp(0);
	L_FEC_REG timestamp(0);
	L_NOMBRE_POLIGONO varchar(150);
	L_RANGO_ASIST_SOBRETIEMPO bigint;
	L_TOLER_ENT_SOBRETIEMPO bigint;
	L_FECHA_HORARIO timestamp(0);
	
  ITEM RECORD;

BEGIN
		P_OPTION := 'A';
		P_SHOW_BUTTON:='0';
		P_TEXT_BUTTON:='';
		P_CODE_MODALITY:='';
		P_FECHA_HORA:= clock_timestamp)|%;
		P_ID_DESCRIP_MARCACION:= '';
		P_ERROR:=0;
		P_MSGERROR := '';
		P_MINUTOS_TOLERANCIA:=0;
		L_FEC_ACTUAL:= to_date(TO_CHAR(clock_timestamp)|%, 'YYYY-MM-DD'),'YYYY-MM-DD');
		L_FEC_REG:= L_FEC_ACTUAL;
		   SELECT
         extract(year from clock_timestamp)|% ),
         extract(month from clock_timestamp)|% ),
         extract(day from clock_timestamp)|% ),
         (TO_CHAR(clock_timestamp)|%,'D','NLS_DATE_LANGUAGE=ENGLISH'))::numeric 
         INTO STRICT L_ID_ANHO,L_ID_MES,L_ID_DIA,L_NRO_DIA;

		--VERIFICA SI ES UN TRABAJADOR ACTIVO
--         <<FIND_DATOS>>
			BEGIN
			 select 
		            t.id_persona,
		            t.id_situacion_trabajador,
		            t.id_sedearea
		            into STRICT
		            L_ID_PERSONA,
		            L_ID_SITUACION_TRABAJADOR,
		            L_ID_SEDEAREA
		           from (SELECT id_persona,id_situacion_trabajador,id_sedearea,ID_ENTIDAD,ID_CONTRATO FROM  enoc.vw_trabajador WHERE id_trabajador=id_trabajador AND ID_ENTIDAD=P_ID_ENTIDAD) t
		            INNER JOIN enoc.PLLA_CONTRATO pc ON pc.ID_CONTRATO =t.ID_CONTRATO
		            AND t.ID_ENTIDAD = pc.ID_ENTIDAD  AND t.ID_PERSONA = pc.ID_PERSONA LIMIT 1;
         EXCEPTION WHEN no_data_found THEN
	            P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
	            RETURN;
	        END;
-- 	       	<<FIND_DATOS>>
          if L_ID_SITUACION_TRABAJADOR not in ('1') then
                P_ERROR:=1;
                P_MSGERROR:='Trabajador no está activo';
                RETURN;
          end if;

         
         --VERIFICA SI TIENE VACACIONES
          
          select count(*) into STRICT L_CONTAR from (SELECT ID_PERIODO_VAC_TRAB FROM ENOC.vw_rol_vacacional WHERE id_trabajador=P_ID_TRABAJADOR AND (CONFIRMACION_SALIDA IS NOT NULL AND CONFIRMACION_SALIDA::text <> '') AND (L_FEC_ACTUAL between fecha_ini and fecha_fin) ) rv
          INNER JOIN(SELECT ID_PERIODO_VAC_TRAB FROM ENOC.PLLA_PERIODO_VAC_TRAB WHERE ID_ESTADO_VAC_TRAB ='02') ppvt ON ppvt.ID_PERIODO_VAC_TRAB = rv.ID_PERIODO_VAC_TRAB;
          if L_CONTAR > 0 then
            P_ERROR:=1;
            P_MSGERROR:='Usted está de vacaciones en la fecha '||to_char(L_FEC_ACTUAL,'DD/MM/YYYY');
           	P_SHOW_BUTTON:='3';
            RETURN;
          end if;

           --VERIFICA SI TIENE PERMISOS
          select count(*) into STRICT L_CONTAR from(
            SELECT ID_LICENCIA_PERMISO from ENOC.vw_LICENCIA_PERMISO where id_trabajador=P_ID_TRABAJADOR and (L_FEC_ACTUAL between fecha_desde and fecha_hasta) and engrupo='N' and id_estado_lica_per ='03' 
            
union

            SELECT a.ID_LICENCIA_PERMISO from (SELECT ID_LICENCIA_PERMISO FROM ENOC.vw_LICENCIA_PERMISO WHERE (L_FEC_ACTUAL between fecha_desde and fecha_hasta) and engrupo='S' and id_estado_lica_per ='03' ) a,
            (SELECT ID_LICENCIA_PERMISO FROM enoc.plla_LICENCIA_PERMISO_DET WHERE id_trabajador=P_ID_TRABAJADOR)b 
            where a.ID_LICENCIA_PERMISO=b.ID_LICENCIA_PERMISO);

          if L_CONTAR > 0 then
            P_ERROR:=1;
            P_MSGERROR:='Usted está de permiso y/o licencia en la fecha '||to_char(L_FEC_ACTUAL,'DD/MM/YYYY');
           	P_SHOW_BUTTON:='3';
            RETURN;
          end if;

        
          --VERFIFICA SI TIENE CONFIGURADO TIPO HORARIO
         select count(*) into STRICT L_CONTAR from ENOC.PLLA_TIPO_HORARIO_TRAB
         where id_trabajador= P_ID_TRABAJADOR
         and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL);

         if L_CONTAR<>1 THEN
--           	<<FIND_DATOS>>
			BEGIN	
				SELECT ID_TIPO_HORARIO INTO STRICT L_ID_TIPO_HORARIO FROM MOISES.TRABAJADOR 
				WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_TRABAJADOR = P_ID_TRABAJADOR;
			EXCEPTION WHEN no_data_found THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado un tipo de horario, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	        END;
-- 	       	<<FIND_DATOS>>
	       	IF coalesce(L_ID_TIPO_HORARIO::text, '') = '' THEN
	       	 	P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado un tipo de horario, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	       	END IF;
	     ELSE
		     select id_tipo_horario into STRICT L_ID_TIPO_HORARIO from ENOC.PLLA_TIPO_HORARIO_TRAB
	         where id_trabajador= P_ID_TRABAJADOR
	         and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL);
         end if;

         
        
         --VERIFICA SI TIENE CONFIGURADO UNA MODALIDAD
         select count(1) into STRICT L_CONTAR 
         from (SELECT ID_SITUACION_ESPECIAL FROM MOISES.TRABAJADOR_SIT_ESP WHERE id_trabajador= P_ID_TRABAJADOR and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL) ) a,
         ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c 
         where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
         and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB;

         if L_CONTAR<>1 THEN
--          	<<FIND_DATOS>>
			BEGIN	
				SELECT b.codigo INTO STRICT L_TIPO_MODALIDAD_CODIGO FROM (SELECT ID_ENTIDAD,ID_SITUACION_ESPECIAL FROM MOISES.TRABAJADOR WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_TRABAJADOR = P_ID_TRABAJADOR) a,
				ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c 
				WHERE a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL 
				AND b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB;
			EXCEPTION WHEN no_data_found THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado una modalidad, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	        END;
-- 	       	<<FIND_DATOS>>
	       	IF coalesce(L_TIPO_MODALIDAD_CODIGO::text, '') = '' THEN
	       	 	P_ERROR:=1;
	            P_MSGERROR:='No tienes asignado una modalidad, comunícate con tu jefe inmediato o DTH';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
	       	END IF;
         ELSE
	         select b.codigo into STRICT L_TIPO_MODALIDAD_CODIGO from (SELECT ID_SITUACION_ESPECIAL FROM MOISES.TRABAJADOR_SIT_ESP WHERE id_trabajador= P_ID_TRABAJADOR and L_FEC_REG between desde and coalesce(hasta,L_FEC_ACTUAL) ) a,  
	         ENOC.PLLA_TIPO_MODALIDAD_TRAB b, MOISES.SITUACION_ESPECIAL c 
	         where a.ID_SITUACION_ESPECIAL=C.ID_SITUACION_ESPECIAL
	         and b.ID_TIPO_MODALIDAD_TRAB = c.ID_TIPO_MODALIDAD_TRAB;
         end if;
         --VERIFICA SI SE HA CONFIGURADO UN POLIGONO PARA EL TRABAJADOR SIEMPRE Y CUANDO ESTE EN TRABAJO PRESENCIAL
        P_CODE_MODALITY:=L_TIPO_MODALIDAD_CODIGO;
        IF L_TIPO_MODALIDAD_CODIGO='TP' THEN
        	ENOC.CALL pkg_assistance_sp_idmapapoligono_trabajador(P_ID_TRABAJADOR,L_ID_MAPA_POLIGONO);
        	SELECT COUNT(1) into STRICT L_CONTAR FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
        	IF L_CONTAR=0 THEN
	            P_ERROR:=1;
	            P_MSGERROR:='No estás asignado a un polígono para la marcación';
	           	P_SHOW_BUTTON:='3';
	            RETURN;
			END IF;
        END IF;

         --VERIFICA SI SE HA CONFIGURADO LOS PARAMETROS
          select count(*) into STRICT L_CONTAR from plla_parametros_valor  a, plla_parametros b
          where b.id_parametro=a.id_parametro
          and a.id_entidad=P_ID_ENTIDAD
          and a.id_anho=L_ID_ANHO;

          IF L_CONTAR=0 then
            P_ERROR:=1;
            P_MSGERROR:='Falta configurar parametros para el año '||L_ID_ANHO::text;
           	P_SHOW_BUTTON:='3';
            RETURN;
          end if;
       	
		--CONSULTA LOS PARAMETROS DE ASISTENCIA
-- 		<<FIND_DATOS>>
		BEGIN
			SELECT IMPORTE INTO STRICT L_RANGO_ENTRADA_SALIDA FROM ENOC.VW_PLLA_PARAMETROS_VALOR
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from clock_timestamp)|% ) AND CODIGO='PARAM_ASIST_RANG';
		EXCEPTION WHEN no_data_found THEN
            L_RANGO_ENTRADA_SALIDA:=20;--POR DEFECTO
        END;
--        <<FIND_DATOS>>
		BEGIN	
			SELECT IMPORTE INTO STRICT L_RANGO_SAL_ENT_REF FROM ENOC.VW_PLLA_PARAMETROS_VALOR
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from clock_timestamp)|% ) AND CODIGO='PARAM_REF_RANG';
		EXCEPTION WHEN no_data_found THEN
            L_RANGO_SAL_ENT_REF:=10;--POR DEFECTO
        END;
--        	<<FIND_DATOS>>
		BEGIN	
			SELECT IMPORTE INTO STRICT L_TOLER_ENTRADA FROM ENOC.VW_PLLA_PARAMETROS_VALOR
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from clock_timestamp)|% ) AND CODIGO='TOLE_HORA_ENT';
		EXCEPTION WHEN no_data_found THEN
            L_TOLER_ENTRADA:=10;--POR DEFECTO
        END;
--        	<<FIND_DATOS>>
		BEGIN	
			SELECT IMPORTE INTO STRICT L_TOLER_ENTRADA_REF FROM ENOC.VW_PLLA_PARAMETROS_VALOR
			WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ANHO = extract(year from clock_timestamp)|% ) AND CODIGO='TOLE_HORA_ENT_REF';
		EXCEPTION WHEN no_data_found THEN
            L_TOLER_ENTRADA_REF:=5;--POR DEFECTO
        END;

--        	<<FIND_DATOS>>
		BEGIN
       		SELECT ID_AREA INTO STRICT L_ID_AREA FROM ELISEO.ORG_SEDE_AREA WHERE ID_SEDEAREA = L_ID_SEDEAREA  LIMIT 1;
       	EXCEPTION WHEN no_data_found THEN
            L_ID_AREA:=0;
        END;

		SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_FERIADOS A 
      	INNER JOIN ENOC.PLLA_TIPO_FERIADO B ON A.ID_TIPO_FERIADO = B.ID_TIPO_FERIADO 
      	LEFT JOIN ENOC.PLLA_FERIADO_INST C ON A.ID_FERIADO = C.ID_FERIADO 
      	WHERE TO_CHAR(A.FECHA,'YYYY-MM-DD') = TO_CHAR(clock_timestamp)|%,'YYYY-MM-DD')
      	AND CASE WHEN B.CODIGO = 'FN' THEN 1 
      		WHEN B.CODIGO = 'FNL' THEN 1 
	      	WHEN B.CODIGO = 'FI' THEN 
      			CASE WHEN C.TIPO = 'E' THEN CASE WHEN C.ID_ENTIDAD = P_ID_ENTIDAD THEN 1 ELSE 0 END
      			WHEN C.TIPO = 'D' THEN CASE WHEN C.ID_ENTIDAD = P_ID_ENTIDAD AND C.ID_DEPTO = P_ID_DEPTO THEN 1 ELSE 0 END
      			WHEN C.TIPO = 'A' THEN CASE WHEN C.ID_ENTIDAD = P_ID_ENTIDAD AND C.ID_DEPTO = P_ID_DEPTO AND C.ID_AREA = L_ID_AREA THEN 1 ELSE 0 END
      			ELSE 0 END
	      	ELSE 0 END = 1;

      	IF L_CONTAR > 0 THEN
      		SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_SOBRETIEMPO A 
	       	WHERE A.ID_TRABAJADOR = P_ID_TRABAJADOR AND A.ID_ENTIDAD = P_ID_ENTIDAD 
	      	AND A.ID_ESTADO_SOBRETIEMPO = '05' 
	      	AND A.PERIODO = 'D' 
	      	AND TO_CHAR(A.FECHA,'YYYY-MM-DD') = TO_CHAR(clock_timestamp)|%,'YYYY-MM-DD');
	      	IF L_CONTAR = 0 THEN
	      		P_ERROR:=1;
	            P_MSGERROR:='Hoy es feriado.';
	           	P_SHOW_BUTTON:='0';
	           RETURN;
	        ELSE
	          P_OPTION := 'ST';
	      	END IF;
      	END IF;

        select b.CODIGO into STRICT L_CONFIG_TIP_HORA_CODIGO from enoc.plla_tipo_horario a, enoc.PLLA_TIPO_CONFIG_HORARIO b
        where a.ID_TIPO_CONFIG_HORARIO=b.ID_TIPO_CONFIG_HORARIO
        and a.id_tipo_horario =  L_ID_TIPO_HORARIO;

		--SI ES HORARIO MENSUAL
		IF L_CONFIG_TIP_HORA_CODIGO='HM' THEN 
			--Para obtener la fecha a usar en la marcacion, basicamente servira para cuando es un horario del dia siguiente
			SELECT
				t.fecha,extract(year from t.fecha),extract(month from t.fecha),extract(day from t.fecha) 
				INTO STRICT L_FECHA_HORARIO,L_ID_ANHO,L_ID_MES,L_ID_DIA
			FROM (WITH
			  ayer AS (
				SELECT
					clock_timestamp)|%-(1 * ('1'||'day')::interval) AS fecha
				
			  ),
				hoy AS (
				SELECT
					clock_timestamp)|% AS fecha
				
			  )
				SELECT
					ayer.fecha AS fecha,
					to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(b.hora_salida,'hh24:mi')<to_date(b.hora_entrada,'hh24:mi') THEN 
			        to_char(ayer.fecha + (1 * ('1'||'day')::interval), 'yyyy-mm-dd')|| ' ' || b.hora_salida
						ELSE to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_salida
					END AS fechahora_salida
				FROM
					enoc.PLLA_HORARIO_MENSUAL a
					INNER JOIN enoc.plla_horario_mensual_det c ON a.ID_HORARIO_MENSUAL = c.ID_HORARIO_MENSUAL
					INNER JOIN enoc.PLLA_HORARIO_BLOQUE b ON c.ID_HORARIO_BLOQUE = b.ID_HORARIO_BLOQUE 
				CROSS JOIN ayer
				WHERE
					a.ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND to_char(to_date(a.ID_ANHO||LPAD(a.ID_MES,2,'0')||LPAD(c.ID_DIA,2,'0'),'yyyy-mm-dd'),'yyyy-mm-dd') = to_char(ayer.fecha, 'yyyy-mm-dd') 
			
UNION ALL

				SELECT
					hoy.fecha AS fecha,
					to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(b.hora_salida,'hh24:mi')<to_date(b.hora_entrada,'hh24:mi') THEN 
			        to_char(hoy.fecha + (1 * ('1'||'day')::interval), 'yyyy-mm-dd')|| ' ' || b.hora_salida
						ELSE to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || b.hora_salida
					END AS fechahora_salida
				FROM 
					enoc.PLLA_HORARIO_MENSUAL a
					INNER JOIN enoc.plla_horario_mensual_det c ON a.ID_HORARIO_MENSUAL = c.ID_HORARIO_MENSUAL
					INNER JOIN enoc.PLLA_HORARIO_BLOQUE b ON c.ID_HORARIO_BLOQUE = b.ID_HORARIO_BLOQUE 
				CROSS JOIN hoy
				WHERE
					a.ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND a.ID_ANHO = L_ID_ANHO AND a.ID_MES = L_ID_MES AND c.ID_DIA=L_ID_DIA) t
			WHERE
				clock_timestamp)|% BETWEEN to_date(t.fechahora_entrada,'YYYY-MM-DD HH24:MI') AND to_date(t.fechahora_salida,'YYYY-MM-DD HH24:MI')   LIMIT 1;
		
			IF coalesce(L_FECHA_HORARIO::text, '') = '' THEN
				L_FECHA_HORARIO := clock_timestamp)|%;
				 SELECT
			         extract(year from clock_timestamp)|% ),
			         extract(month from clock_timestamp)|% ),
			         extract(day from clock_timestamp)|% ),
			         (TO_CHAR(clock_timestamp)|%,'D','NLS_DATE_LANGUAGE=ENGLISH'))::numeric 
			         INTO STRICT L_ID_ANHO,L_ID_MES,L_ID_DIA,L_NRO_DIA;
			END IF;
		
			FOR ITEM IN (SELECT PHB.* FROM (SELECT * FROM ENOC.PLLA_HORARIO_MENSUAL WHERE ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
				AND ID_TRABAJADOR=P_ID_TRABAJADOR AND ID_ANHO=L_ID_ANHO AND ID_MES=L_ID_MES) phm
				INNER JOIN(SELECT * FROM ENOC.PLLA_HORARIO_MENSUAL_DET WHERE ID_DIA=L_ID_DIA) phmd ON PHM.ID_HORARIO_MENSUAL = PHMD.ID_HORARIO_MENSUAL 
				INNER JOIN ENOC.PLLA_HORARIO_BLOQUE phb ON PHB.ID_HORARIO_BLOQUE = PHMD.ID_HORARIO_BLOQUE  LIMIT 1)
			LOOP
				-- P_OPTION := 'A';
				--HORA ENTRADA 
				L_HORA_ENTRADA:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA,'YYYY-MM-DD HH24:MI');
				--VALIDA SI LA HORA SALIDA AL REF PUEDE SER DEL DIA SIGUIENTE
				IF (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') AND ITEM.SAL_DIASIG='1' AND to_date(ITEM.HORA_SALIDA_REF,'HH24:MI') < to_date(ITEM.HORA_ENTRADA,'HH24:MI') THEN
					L_HORA_SALIDA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF,'YYYY-MM-DD HH24:MI');
				ELSIF (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') THEN
					L_HORA_SALIDA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF,'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA ENTRADA DEL REF PUEDE SER DEL DIA SIGUIENTE
				IF (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') AND ITEM.SAL_DIASIG='1' AND to_date(ITEM.HORA_ENTRADA_REF,'HH24:MI') < to_date(ITEM.HORA_ENTRADA,'HH24:MI') THEN
					L_HORA_ENTRADA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF,'YYYY-MM-DD HH24:MI');
				ELSIF (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') THEN
					L_HORA_ENTRADA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF,'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA SALIDA PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.SAL_DIASIG='1' AND to_date(ITEM.HORA_SALIDA,'HH24:MI') < to_date(ITEM.HORA_ENTRADA,'HH24:MI') THEN
					L_HORA_SALIDA:=to_date(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA,'YYYY-MM-DD HH24:MI');
				ELSE
					L_HORA_SALIDA:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA,'YYYY-MM-DD HH24:MI');
				END IF;
				
				IF clock_timestamp)|%>=L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND
				clock_timestamp)|%< CASE WHEN (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') AND (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') 
				THEN L_HORA_SALIDA_REF-(L_RANGO_SAL_ENT_REF * ('1'||'MINUTE')::interval) ELSE L_HORA_SALIDA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) END THEN 
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='01'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						P_SHOW_BUTTON:='2';
					ELSE
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='ENTRADA';
					P_ID_DESCRIP_MARCACION:='01';
					P_FECHA_HORA:=L_HORA_ENTRADA;
					P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA;
				ELSIF (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') AND (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') AND clock_timestamp)|%>=L_HORA_SALIDA_REF AND clock_timestamp)|%< L_HORA_SALIDA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) THEN
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='02'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						IF clock_timestamp)|% >=L_HORA_ENTRADA_REF-(L_RANGO_SAL_ENT_REF * ('1'||'MINUTE')::interval) THEN 
							SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
							IF L_CONTAR>0 THEN
								P_SHOW_BUTTON:='2';
							ELSE
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE
							P_SHOW_BUTTON:='2';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					ELSE
						IF clock_timestamp)|% >=L_HORA_ENTRADA_REF-(L_RANGO_SAL_ENT_REF * ('1'||'MINUTE')::interval) THEN 
							SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
							IF L_CONTAR>0 THEN
								P_SHOW_BUTTON:='2';
							ELSE
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE
							P_SHOW_BUTTON:='1';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					END IF;
				ELSIF clock_timestamp)|%>=L_HORA_SALIDA AND clock_timestamp)|%<= L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) THEN
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='04'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						P_SHOW_BUTTON:='2';
					ELSE
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='SALIDA';
					P_ID_DESCRIP_MARCACION:='04';
					P_FECHA_HORA:=L_HORA_SALIDA;
				ELSE
					P_SHOW_BUTTON:='0';
					P_ERROR:=6;
					P_MSGERROR := 'Estas fuera del horario';
				END IF;
			END LOOP;
		--SI ES HORARIO FIJO
		ELSIF L_CONFIG_TIP_HORA_CODIGO='HF' THEN 
			--Para obtener la fecha a usar en la marcacion, basicamente servira para cuando es un horario del dia siguiente
			   SELECT
				t.fecha,(TO_CHAR(t.fecha,'D','NLS_DATE_LANGUAGE=ENGLISH'))::numeric  INTO STRICT L_FECHA_HORARIO,L_NRO_DIA
			FROM (WITH
			  ayer AS (
				SELECT
					clock_timestamp)|%-(1 * ('1'||'day')::interval) AS fecha,(TO_CHAR(clock_timestamp)|%-(1 * ('1'||'day')::interval),'D','NLS_DATE_LANGUAGE=ENGLISH'))::numeric  AS nro_dia
				
			  ),
				hoy AS (
				SELECT
					clock_timestamp)|% AS fecha,(TO_CHAR(clock_timestamp)|%,'D','NLS_DATE_LANGUAGE=ENGLISH'))::numeric  AS nro_dia
				
			  )
				SELECT
					ayer.fecha AS fecha,
					to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(hora_salida,'hh24:mi')<to_date(hora_entrada,'hh24:mi') THEN 
			        to_char(ayer.fecha + (1 * ('1'||'day')::interval), 'yyyy-mm-dd')|| ' ' || hora_salida
						ELSE to_char(ayer.fecha, 'yyyy-mm-dd')|| ' ' || hora_salida
					END AS fechahora_salida
				FROM
					enoc.plla_horario_detalle 
				CROSS JOIN ayer
				WHERE
					ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND 
					ID_DIA = ayer.nro_dia
			
UNION ALL

				SELECT
					hoy.fecha AS fecha,
					to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || hora_entrada AS fechahora_entrada,
					CASE
						WHEN sal_diasig = '1'
						AND to_date(hora_salida,'hh24:mi')<to_date(hora_entrada,'hh24:mi') THEN 
			        to_char(hoy.fecha + (1 * ('1'||'day')::interval), 'yyyy-mm-dd')|| ' ' || hora_salida
						ELSE to_char(hoy.fecha, 'yyyy-mm-dd')|| ' ' || hora_salida
					END AS fechahora_salida
				FROM
					enoc.plla_horario_detalle
				CROSS JOIN hoy
				WHERE
					ID_TIPO_HORARIO = L_ID_TIPO_HORARIO AND 
					ID_DIA = hoy.nro_dia) t
			WHERE
				clock_timestamp)|% BETWEEN to_date(t.fechahora_entrada,'YYYY-MM-DD HH24:MI') AND to_date(t.fechahora_salida,'YYYY-MM-DD HH24:MI')   LIMIT 1;
			
			IF coalesce(L_FECHA_HORARIO::text, '') = '' THEN
				L_FECHA_HORARIO := clock_timestamp)|%;
				 SELECT
			         extract(year from clock_timestamp)|% ),
			         extract(month from clock_timestamp)|% ),
			         extract(day from clock_timestamp)|% ),
			         (TO_CHAR(clock_timestamp)|%,'D','NLS_DATE_LANGUAGE=ENGLISH'))::numeric 
			         INTO STRICT L_ID_ANHO,L_ID_MES,L_ID_DIA,L_NRO_DIA;
			END IF;
			
			FOR ITEM IN (SELECT * FROM ENOC.PLLA_HORARIO_DETALLE WHERE ID_TIPO_HORARIO=L_ID_TIPO_HORARIO
				AND ID_DIA = L_NRO_DIA  LIMIT 1)
			LOOP
				--P_OPTION := 'A';
				--HORA ENTRADA 
				L_HORA_ENTRADA:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA,'YYYY-MM-DD HH24:MI');
				--VALIDA SI LA HORA SALIDA AL REF PUEDE SER DEL DIA SIGUIENTE
				IF (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') AND ITEM.SAL_DIASIG='1' AND to_date(ITEM.HORA_SALIDA_REF,'HH24:MI') < to_date(ITEM.HORA_ENTRADA,'HH24:MI') THEN
					L_HORA_SALIDA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF,'YYYY-MM-DD HH24:MI');
				ELSIF (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') THEN
					L_HORA_SALIDA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA_REF,'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA ENTRADA DEL REF PUEDE SER DEL DIA SIGUIENTE
				IF (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') AND ITEM.SAL_DIASIG='1' AND to_date(ITEM.HORA_ENTRADA_REF,'HH24:MI') < to_date(ITEM.HORA_ENTRADA,'HH24:MI') THEN
					L_HORA_ENTRADA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF,'YYYY-MM-DD HH24:MI');
				ELSIF (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') THEN
					L_HORA_ENTRADA_REF:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_ENTRADA_REF,'YYYY-MM-DD HH24:MI');
				END IF;
				--VALIDA SI LA HORA SALIDA PUEDE SER DEL DIA SIGUIENTE
				IF ITEM.SAL_DIASIG='1' AND to_date(ITEM.HORA_SALIDA,'HH24:MI') < to_date(ITEM.HORA_ENTRADA,'HH24:MI') THEN
					L_HORA_SALIDA:=to_date(TO_CHAR(L_FECHA_HORARIO+1,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA,'YYYY-MM-DD HH24:MI');
				ELSE
					L_HORA_SALIDA:=to_date(TO_CHAR(L_FECHA_HORARIO,'YYYY-MM-DD')||' '||ITEM.HORA_SALIDA,'YYYY-MM-DD HH24:MI');
				END IF;
				IF clock_timestamp)|%>=L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND
					clock_timestamp)|%< CASE WHEN (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') AND (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') 
					THEN L_HORA_SALIDA_REF-(L_RANGO_SAL_ENT_REF * ('1'||'MINUTE')::interval) ELSE L_HORA_SALIDA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) END 
				THEN 
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='01'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						P_SHOW_BUTTON:='2';
					ELSE
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='ENTRADA';
					P_ID_DESCRIP_MARCACION:='01';
					P_FECHA_HORA:=L_HORA_ENTRADA;
					P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA;
				ELSIF (ITEM.HORA_SALIDA_REF IS NOT NULL AND ITEM.HORA_SALIDA_REF::text <> '') AND (ITEM.HORA_ENTRADA_REF IS NOT NULL AND ITEM.HORA_ENTRADA_REF::text <> '') AND clock_timestamp)|%>=L_HORA_SALIDA_REF AND clock_timestamp)|%< L_HORA_SALIDA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) THEN
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='02'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						IF clock_timestamp)|% >=L_HORA_ENTRADA_REF-(L_RANGO_SAL_ENT_REF * ('1'||'MINUTE')::interval) THEN 
							SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
							IF L_CONTAR>0 THEN
								P_SHOW_BUTTON:='2';
							ELSE
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE
							P_SHOW_BUTTON:='2';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					ELSE
						IF clock_timestamp)|% >=L_HORA_ENTRADA_REF-(L_RANGO_SAL_ENT_REF * ('1'||'MINUTE')::interval) THEN 
							SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='03'
							AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
							BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
							IF L_CONTAR>0 THEN
								P_SHOW_BUTTON:='2';
							ELSE
								P_SHOW_BUTTON:='1';
							END IF;
							P_TEXT_BUTTON:='ENTRADA DEL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='03';
							P_FECHA_HORA:=L_HORA_ENTRADA_REF;
							P_MINUTOS_TOLERANCIA:=L_TOLER_ENTRADA_REF;
						ELSE
							P_SHOW_BUTTON:='1';
							P_TEXT_BUTTON:='SALIDA AL REFRIGERIO';
							P_ID_DESCRIP_MARCACION:='02';
							P_FECHA_HORA:=L_HORA_SALIDA_REF;
						END IF;
					END IF;
				ELSIF clock_timestamp)|%>=L_HORA_SALIDA AND clock_timestamp)|%<= L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) THEN
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='04'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						P_SHOW_BUTTON:='2';
					ELSE
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='SALIDA';
					P_ID_DESCRIP_MARCACION:='04';
					P_FECHA_HORA:=L_HORA_SALIDA;
				ELSE
					P_SHOW_BUTTON:='0';
					P_ERROR:=6;
					P_MSGERROR := 'Estas fuera del horario';
				END IF;
			END LOOP;
		END IF;
	
		IF P_SHOW_BUTTON = '1' THEN
			IF L_TIPO_MODALIDAD_CODIGO='TP' THEN 
				L_CONTAR := 0;
	            --VALIDA SI ESTA DENTRO DEL AREA DE TRABAJO
	           	select CASE WHEN SUM(CASE WHEN ST_Distance)ORA2PG_COMMENT1225%
				  geometry(2001, 4326, sdo_point_type(LNG, LAT, null), null, null),
				  geometry(2001, 4326, sdo_point_type(P_LNG, P_LAT, null), null, null))<=RADIOME THEN 1 ELSE 0 END)>0 THEN 1 ELSE 0 END INTO STRICT L_CONTAR
				from ENOC.PLLA_MAPA_COORD_RADIO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
				IF L_CONTAR<>1 THEN
	       	    	SELECT NOMBRE into STRICT L_NOMBRE_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
					P_SHOW_BUTTON:='4';--4= cuando estas fuera del area de trabajo
					P_ERROR:=6;
					P_MSGERROR := 'Estás fuera del área de trabajo, polígono "'||L_NOMBRE_POLIGONO||'"';
					RETURN;
				END IF;
			END IF;
			RETURN;
		END IF;
	
		FOR ITEM IN (SELECT A.HORA_DESDE,A.HORA_HASTA FROM ENOC.PLLA_SOBRETIEMPO A
			WHERE A.ID_TRABAJADOR = P_ID_TRABAJADOR AND A.ID_ENTIDAD = P_ID_ENTIDAD 
			AND A.ID_ESTADO_SOBRETIEMPO = '05' AND A.PERIODO = 'H'
			AND TO_CHAR(FECHA,'YYYY-MM-DD') = TO_CHAR(clock_timestamp)|%,'YYYY-MM-DD')   LIMIT 1)
			LOOP
				P_OPTION := 'ST';
				P_ERROR:=0;
				P_MSGERROR:='';
-- 				<<FIND_DATOS>>
				BEGIN	
					SELECT IMPORTE INTO STRICT L_RANGO_ASIST_SOBRETIEMPO FROM ENOC.VW_PLLA_PARAMETROS_VALOR
					WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = extract(year from clock_timestamp)|% ) AND CODIGO='PARAM_ASIST_EXT_RANG';
				EXCEPTION WHEN no_data_found THEN
		            L_RANGO_ASIST_SOBRETIEMPO:=10;--POR DEFECTO
		        END;
		
-- 		       <<FIND_DATOS>>
				BEGIN	
					SELECT IMPORTE INTO STRICT L_TOLER_ENT_SOBRETIEMPO FROM ENOC.VW_PLLA_PARAMETROS_VALOR 
					WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = extract(year from clock_timestamp)|% ) AND CODIGO='TOLE_HORA_EXT_ENT';
				EXCEPTION WHEN no_data_found THEN
		            L_TOLER_ENT_SOBRETIEMPO:=5;--POR DEFECTO
		        END;
		
		       	--HORA ENTRADA 
				L_HORA_ENTRADA:=to_date(TO_CHAR(clock_timestamp)|%,'YYYY-MM-DD')||' '||ITEM.HORA_DESDE,'YYYY-MM-DD HH24:MI');
				--HORA SALIDA
				L_HORA_SALIDA:=to_date(TO_CHAR(clock_timestamp)|%,'YYYY-MM-DD')||' '||ITEM.HORA_HASTA,'YYYY-MM-DD HH24:MI');
			
				IF clock_timestamp)|%>=L_HORA_ENTRADA-(L_RANGO_ASIST_SOBRETIEMPO * ('1'||'MINUTE')::interval) AND
					clock_timestamp)|%<L_HORA_SALIDA
				THEN
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='01'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END 
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ASIST_SOBRETIEMPO * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ASIST_SOBRETIEMPO * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						P_SHOW_BUTTON:='2';
					ELSE
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='ENTRADA';
					P_ID_DESCRIP_MARCACION:='01';
					P_FECHA_HORA:=L_HORA_ENTRADA;
					P_MINUTOS_TOLERANCIA:=L_TOLER_ENT_SOBRETIEMPO;
				ELSIF clock_timestamp)|%>=L_HORA_SALIDA AND clock_timestamp)|%<= L_HORA_SALIDA+(L_RANGO_ENTRADA_SALIDA * ('1'||'MINUTE')::interval) THEN
					SELECT COUNT(*) INTO STRICT L_CONTAR FROM ENOC.PLLA_MARCACION WHERE ID_TRABAJADOR = P_ID_TRABAJADOR AND ID_DESCRIP_MARCACION ='04'
					AND (CASE WHEN coalesce(FECHAHORA_MANUAL::text, '') = '' THEN FECHAHORA ELSE FECHAHORA_MANUAL END
					BETWEEN L_HORA_ENTRADA-(L_RANGO_ASIST_SOBRETIEMPO * ('1'||'MINUTE')::interval) AND L_HORA_SALIDA+(L_RANGO_ASIST_SOBRETIEMPO * ('1'||'MINUTE')::interval));
					IF L_CONTAR>0 THEN
						P_SHOW_BUTTON:='2';
					ELSE
						P_SHOW_BUTTON:='1';
					END IF;
					P_TEXT_BUTTON:='SALIDA';
					P_ID_DESCRIP_MARCACION:='04';
					P_FECHA_HORA:=L_HORA_SALIDA;
				ELSE
					P_SHOW_BUTTON:='0';
					P_ERROR:=6;
					P_MSGERROR := 'Estas fuera del horario';
				END IF;
			END LOOP;
			IF P_SHOW_BUTTON = '1' AND L_TIPO_MODALIDAD_CODIGO='TP' THEN
				L_CONTAR := 0;
	            --VALIDA SI ESTA DENTRO DEL AREA DE TRABAJO
	           	select CASE WHEN SUM(CASE WHEN ST_Distance)ORA2PG_COMMENT1229%
				  geometry(2001, 4326, sdo_point_type(LNG, LAT, null), null, null),
				  geometry(2001, 4326, sdo_point_type(P_LNG, P_LAT, null), null, null))<=RADIOME THEN 1 ELSE 0 END)>0 THEN 1 ELSE 0 END INTO STRICT L_CONTAR
				from ENOC.PLLA_MAPA_COORD_RADIO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
				IF L_CONTAR<>1 THEN
	       	    	SELECT NOMBRE into STRICT L_NOMBRE_POLIGONO FROM ENOC.PLLA_MAPA_POLIGONO WHERE ID_MAPA_POLIGONO = L_ID_MAPA_POLIGONO;
					P_SHOW_BUTTON:='4';--4= cuando estas fuera del area de trabajo
					P_ERROR:=6;
					P_MSGERROR := 'Estás fuera del área de trabajo, polígono "'||L_NOMBRE_POLIGONO||'"';
					RETURN;
				END IF;
			END IF;
  	END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_mostrar_boton_marcacion ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_ID_TRABAJADOR bigint, P_LAT text, P_LNG text, P_SHOW_BUTTON OUT text, P_TEXT_BUTTON OUT text, P_CODE_MODALITY OUT text, P_FECHA_HORA OUT timestamp(0), P_ID_DESCRIP_MARCACION OUT text, P_MINUTOS_TOLERANCIA OUT bigint, P_ERROR OUT bigint, P_MSGERROR OUT text, P_OPTION OUT text) FROM PUBLIC;
