-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_control_sobretiempo (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_sobretiempo varchar(25);
        l_id_trabajador bigint;
        l_tipo varchar(5);
        l_id_sedearea bigint;
        l_fecha timestamp(0);
        l_hora_desde varchar(10);
        l_hora_hasta varchar(10);
        l_hasta_rango timestamp(0);
        l_desde_rango timestamp(0);
        l_rango  bigint:=0;
        l_entrada varchar(10);
        l_salida varchar(10);
        l_contar_rango bigint:=0;
        l_hora_base_ent varchar(10);
        l_hora_base_sal varchar(10);
        l_id_tipo_horario bigint;
        l_id_tipo_control_personal bigint;
        l_dia bigint;
        l_horas bigint;
        l_horas_final bigint;
        l_horasrefrigerio bigint;
        l_num_horas bigint;

        l_entrada_mod varchar(10);
        l_salida_mod varchar(10);

        l_entrada_final varchar(10);
        l_salida_final varchar(10);

        l_id_motivo_asist varchar(2):='S';

        
        curSB CURSOR FOR SELECT
          A.ID_SOBRETIEMPO,
          A.ID_TRABAJADOR,
          null,--A.TIPO,
          A.ID_SEDEAREA,
          A.FECHA,
          A.HORA_DESDE,
          A.HORA_HASTA,
          null ,--case when A.TIPO in('HE','BH') then 0 else coalesce(A.HORASREFRIGERIO,0) end ,
          A.NUM_HORAS,
          (TO_CHAR(A.FECHA, 'D', 'NLS_DATE_LANGUAGE=ENGLISH'))::numeric ,
          null,--A.HORA_DESDE_MOD,
          null  --A.HORA_HASTA_MOD
          FROM PLLA_SOBRETIEMPO A, ELISEO.ORG_SEDE_AREA S
          WHERE A.ID_SEDEAREA=S.ID_SEDEAREA
          AND S.ID_ENTIDAD = P_ID_ENTIDAD
          AND A.ID_ESTADO_SOBRETIEMPO='03'
          AND S.ID_DEPTO LIKE P_ID_DEPTO||'%'
          AND (to_char(A.FECHA,'YYYY'))::numeric =P_ID_ANHO and (to_char(A.FECHA,'MM'))::numeric =P_ID_MES
          AND case when P_ID_TRABAJADOR=0 then 0 else A.ID_TRABAJADOR end = P_ID_TRABAJADOR 
          ORDER BY A.ID_TRABAJADOR,A.FECHA;

      
BEGIN
        l_rango:=45;

        
        
        OPEN curSB;
        FETCH curSB INTO l_id_sobretiempo,l_id_trabajador,l_tipo,l_id_sedearea,l_fecha,l_hora_desde,l_hora_hasta,l_horasrefrigerio,l_num_horas,l_dia,l_entrada_mod,l_salida_mod;

        WHILE curSB%FOUND LOOP
        
          l_entrada:=null;
          l_salida:=null;
          l_hora_base_ent:='';
          l_hora_base_sal:='';

          l_entrada_final :='';
          l_salida_final :='';
          
          l_horas_final:=0;

          l_horas:=0;

          select id_tipo_horario,id_tipo_control_personal into STRICT l_id_tipo_horario,l_id_tipo_control_personal from MOISES.TRABAJADOR where id_trabajador=l_id_trabajador;

          
          select count(*) into STRICT l_contar from PLLA_HORARIO_DETALLE where id_tipo_horario=l_id_tipo_horario and ID_DIA=l_dia;

          if l_contar>0 then
            select hora_entrada,hora_salida into STRICT l_hora_base_ent,l_hora_base_sal from PLLA_HORARIO_DETALLE where id_tipo_horario=l_id_tipo_horario and ID_DIA=l_dia;
          end if;

          if l_tipo in ('HE','BH') then
            l_entrada:=l_hora_desde;

            l_desde_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde,'YYYY-MM-DD HH24:MI:SS');

           
            
            select count(*) into STRICT l_contar_rango 
            from  PLLA_ASIST_MARCACION 
            where id_trabajador=l_id_trabajador 
            and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
            and FECHAHORA >= l_desde_rango;

            if l_contar_rango>0 then
              select to_char(max(FECHAHORA),'HH24:MI') into STRICT l_salida 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador 
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and FECHAHORA >= l_desde_rango;
            else
              l_desde_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde,'YYYY-MM-DD HH24:MI:SS');

              l_hasta_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_hasta,'YYYY-MM-DD HH24:MI:SS');

              select count(*) into STRICT l_contar_rango 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador 
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and (FECHAHORA between l_desde_rango and  l_hasta_rango);

              if l_contar_rango>0 then
                select to_char(max(FECHAHORA),'HH24:MI') into STRICT l_salida 
                from PLLA_ASIST_MARCACION 
                where id_trabajador=l_id_trabajador 
                and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
                and (FECHAHORA between l_desde_rango and  l_hasta_rango);
              end if;
            end if;


          else
            l_desde_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde,'YYYY-MM-DD HH24:MI:SS') - l_rango / 1440;
            if l_num_horas>1 then
              l_hasta_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde,'YYYY-MM-DD HH24:MI:SS') + l_rango / 1440;
            else
              l_hasta_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde,'YYYY-MM-DD HH24:MI:SS') + 20 / 1440;
            end if;

            --entrada
            select count(*) into STRICT l_contar_rango 
            from  PLLA_ASIST_MARCACION 
            where id_trabajador=l_id_trabajador 
            and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
            and FECHAHORA >= l_desde_rango
            and FECHAHORA<l_hasta_rango;

            if l_contar_rango>0 then
              select to_char(max(FECHAHORA),'HH24:MI') into STRICT l_entrada 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador 
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and FECHAHORA >= l_desde_rango
              and FECHAHORA<l_hasta_rango;
            end if;

            --salida
            select count(*) into STRICT l_contar_rango 
            from  PLLA_ASIST_MARCACION 
            where id_trabajador=l_id_trabajador 
            and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
            and FECHAHORA >= l_hasta_rango;

            if l_contar_rango>0 then
              select to_char(max(FECHAHORA),'HH24:MI') into STRICT l_salida 
              from PLLA_ASIST_MARCACION 
              where id_trabajador=l_id_trabajador  
              and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
              and FECHAHORA >= l_hasta_rango;
            else
              if (l_entrada IS NOT NULL AND l_entrada::text <> '') then
                l_desde_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_entrada,'YYYY-MM-DD HH24:MI:SS');

                l_hasta_rango := to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_hasta,'YYYY-MM-DD HH24:MI:SS');

                select count(*) into STRICT l_contar_rango  
                from PLLA_ASIST_MARCACION 
                where id_trabajador=l_id_trabajador  
                and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
                and FECHAHORA > l_desde_rango
                and FECHAHORA<=l_hasta_rango;
                if l_contar_rango>0 then
                  select to_char(max(FECHAHORA),'HH24:MI') into STRICT l_salida
                  from PLLA_ASIST_MARCACION 
                  where id_trabajador=l_id_trabajador  
                  and to_char(fecha,'YYYY-MM-DD') =to_char(l_fecha,'YYYY-MM-DD') 
                  and FECHAHORA > l_desde_rango
                  and FECHAHORA<=l_hasta_rango;
                end if;
              end if;
            end if;

          end if;

           if (l_entrada IS NOT NULL AND l_entrada::text <> '') and (l_salida IS NOT NULL AND l_salida::text <> '') then
              select round((to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_salida,'YYYY-MM-DD HH24:MI:SS') -  to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_entrada,'YYYY-MM-DD HH24:MI:SS'))*24,2) - l_horasrefrigerio  into STRICT l_horas;
          end if;

 
          if to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||coalesce(l_entrada_mod,l_entrada),'YYYY-MM-DD HH24:MI:SS')<to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_desde,'YYYY-MM-DD HH24:MI:SS') then
            l_entrada_final := l_hora_desde;
          else
            l_entrada_final := coalesce(l_entrada_mod,l_entrada);
          end if;

          if to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||coalesce(l_salida_mod,l_salida),'YYYY-MM-DD HH24:MI:SS')>to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_hora_hasta,'YYYY-MM-DD HH24:MI:SS') then
            l_salida_final := l_hora_hasta;
          else
            l_salida_final := coalesce(l_salida_mod,l_salida);
          end if;

           if (l_entrada_final IS NOT NULL AND l_entrada_final::text <> '') and (l_salida_final IS NOT NULL AND l_salida_final::text <> '') then
              select round((to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_salida_final,'YYYY-MM-DD HH24:MI:SS') -  to_date(TO_CHAR(l_fecha, 'YYYY-MM-DD')||' '||l_entrada_final,'YYYY-MM-DD HH24:MI:SS'))*24,2) - l_horasrefrigerio  into STRICT l_horas_final;
          end if;

          if coalesce(l_horas_final::text, '') = '' then
           l_horas_final:=0;
          end if;

          if coalesce(l_horas::text, '') = '' then
           l_horas:=0;
          end if;

          if ((l_entrada IS NOT NULL AND l_entrada::text <> '') and (l_salida IS NOT NULL AND l_salida::text <> '') and l_horas>0) or (l_horas_final>0) then
            update PLLA_SOBRETIEMPO set
              HORA_DESDE_REAL = l_entrada,
              HORA_HASTA_REAL = l_salida,
              NUM_HORAS_REAL = l_horas,
              --NUM_HORAS_FINAL = l_horas_final,
              HORAS_PEND = case when l_tipo in ('BH') then l_horas else case when l_tipo in ('FE','DJ') and COMPENSADO='S' then l_horas else 0 end end,
              ID_USER_REG = P_ID_USER_REG,
              FECHA_REG = clock_timestamp(),
              HORA_BASE_ENT = l_hora_base_ent,
              HORA_BASE_SAL = l_hora_base_sal,
              ID_TIPO_HORARIO = l_id_tipo_horario,
              ID_TIPO_CONTROL_PERSONAL = l_id_tipo_control_personal
              --HORA_DESDE_FINAL = l_entrada_final
              --HORA_HASTA_FINAL = l_salida_final
            where ID_SOBRETIEMPO = l_id_sobretiempo;
          else
            update PLLA_SOBRETIEMPO set
              HORA_DESDE_REAL  = NULL,
              HORA_HASTA_REAL  = NULL,
              NUM_HORAS_REAL = 0,
              --NUM_HORAS_FINAL = 0,
              HORAS_PEND = 0,
              ID_USER_REG = P_ID_USER_REG,
              FECHA_REG = clock_timestamp(),
              HORA_BASE_ENT  = NULL,
              HORA_BASE_SAL  = NULL,
              ID_TIPO_HORARIO  = NULL,
              ID_TIPO_CONTROL_PERSONAL  = NULL
              --HORA_DESDE_FINAL = null
              --HORA_HASTA_FINAL = null
            where ID_SOBRETIEMPO = l_id_sobretiempo;
          end if;

          FETCH curSB INTO l_id_sobretiempo,l_id_trabajador,l_tipo,l_id_sedearea,l_fecha,l_hora_desde,l_hora_hasta,l_horasrefrigerio,l_num_horas,l_dia,l_entrada_mod,l_salida_mod;

        END LOOP;
        CLOSE curSB;

        delete from PLLA_CONTROL_ASISTENCIA where (to_char(FECHA,'YYYY'))::numeric =P_ID_ANHO and (to_char(FECHA,'MM'))::numeric =P_ID_MES
        and ID_MOTIVO_ASIST = l_id_motivo_asist AND case when P_ID_TRABAJADOR=0 then 0 else ID_TRABAJADOR end = P_ID_TRABAJADOR
        AND ID_SEDEAREA IN (
          SELECT ID_SEDEAREA FROM eliseo.ORG_SEDE_AREA WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO LIKE P_ID_DEPTO||'%'
        );
        /*
        INSERT INTO PLLA_CONTROL_ASISTENCIA(          
          ID_CONTROL_ASISTENCIA,
          ITEM,
          ID_TRABAJADOR,
          ID_SEDEAREA,
          ID_MOTIVO_ASIST,
          FECHA,
          HORA_DESDE_REAL,
          HORA_HASTA_REAL,
          HORA_DESDE_PLA,
          HORA_HASTA_PLA,
          NUM_HORAS_REF,
          NUM_HORAS_REAL,
          NUM_HORAS_PLA,
          ID_SOBRETIEMPO,
          ID_USER_REG,
          FECHA_REG,
          HORA_ENTRADA_BASE,
          HORA_SALIDA_BASE
        )
        SELECT
          A.ID_SOBRETIEMPO,
          (row_number() OVER( PARTITION BY A.FECHA  ORDER BY A.ID_SOBRETIEMPO ASC )) AS ITEM,
          A.ID_TRABAJADOR,
          A.ID_SEDEAREA,
          l_id_motivo_asist,
          A.FECHA,
          --COALESCE(A.HORA_DESDE_MOD,A.HORA_DESDE_REAL),
          --COALESCE(A.HORA_HASTA_MOD,A.HORA_HASTA_REAL),
         -- COALESCE(A.HORA_DESDE_MOD,A.HORA_DESDE_REAL),
          --COALESCE(A.HORA_HASTA_MOD,A.HORA_HASTA_REAL),
          --coalesce(A.HORASREFRIGERIO,0),
          --A.NUM_HORAS_FINAL,
          --A.NUM_HORAS_FINAL,
          A.ID_SOBRETIEMPO,
          P_ID_USER_REG,
          SYSDATE,
          A.HORA_BASE_ENT,
          A.HORA_BASE_SAL 
          FROM PLLA_SOBRETIEMPO A, ELISEO.ORG_SEDE_AREA S
          WHERE A.ID_SEDEAREA=S.ID_SEDEAREA
         -- AND COALESCE(A.HORA_DESDE_MOD,A.HORA_DESDE_REAL) IS NOT NULL
         -- AND COALESCE(A.HORA_HASTA_MOD,A.HORA_HASTA_REAL) IS NOT NULL
         -- AND COALESCE(A.NUM_HORAS_FINAL,0) >0
          AND S.ID_ENTIDAD = P_ID_ENTIDAD
          AND A.ID_ESTADO_SOBRETIEMPO='03'
          AND S.ID_DEPTO LIKE P_ID_DEPTO||'%'
          AND to_number(to_char(A.FECHA,'YYYY'))=P_ID_ANHO and to_number(to_char(A.FECHA,'MM'))=P_ID_MES
          AND case when P_ID_TRABAJADOR=0 then 0 else A.ID_TRABAJADOR end = P_ID_TRABAJADOR
          ORDER BY A.ID_TRABAJADOR,A.FECHA;
        
        */
        P_ERROR:=l_error;
        P_MSGERROR:= l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_control_sobretiempo (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TRABAJADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
