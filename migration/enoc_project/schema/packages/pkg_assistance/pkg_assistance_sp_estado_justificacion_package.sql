-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_assistance,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_assistance_sp_estado_justificacion ( P_ID_SOLIC_JUSTIF bigint, P_ID_ESTADO_JUSTIF text, P_ID_TRABAJADOR bigint, P_COMENTARIO text, P_ID_USER bigint, P_ERROR OUT bigint, P_MSGERROR OUT text) AS $body$
DECLARE

	L_EXIST_ID_SOLIC_JUSTIF bigint;
	L_ID_SOLIC_JUSTIF bigint;
	L_ID_ESTADO_JUSTIF bigint;
	L_ID_SOLIC_JUSTIF_ESTADO bigint;
	L_ID_ENTIDAD bigint;
	L_ID_DEPTO varchar(30);
	L_FECHA timestamp(0);
	
  ITEM RECORD;

BEGIN
		P_ERROR:=0;
		P_MSGERROR := 'Se guardó correctamente.';
-- 		<<FIND_DATOS>>
		BEGIN
			SELECT ID_SOLIC_JUSTIF,FECHA INTO STRICT L_ID_SOLIC_JUSTIF,L_FECHA FROM ENOC.PLLA_SOLIC_JUSTIF WHERE ID_SOLIC_JUSTIF=P_ID_SOLIC_JUSTIF;
		EXCEPTION WHEN no_data_found THEN
            P_ERROR := 1;
            P_MSGERROR := 'No existe la justificación.';
            RETURN;
        END;
--        <<FIND_DATOSS>>
        BEGIN
			SELECT ID_ESTADO_JUSTIF INTO STRICT L_ID_ESTADO_JUSTIF FROM ENOC.PLLA_ESTADO_JUSTIF WHERE ID_ESTADO_JUSTIF=P_ID_ESTADO_JUSTIF;
		EXCEPTION WHEN no_data_found THEN
            P_ERROR := 2;
            P_MSGERROR := 'No existe el estado de justificación.';
            RETURN;
        END;
		SELECT COALESCE(MAX((ID_SOLIC_JUSTIF_ESTADO)::numeric ),0)+1 INTO STRICT L_ID_SOLIC_JUSTIF_ESTADO FROM ENOC.PLLA_SOLIC_JUSTIF_ESTADO;
-- 		<<INSERT_ESTADO_JUSTIFICACION>>
		    BEGIN
			    INSERT INTO ENOC.PLLA_SOLIC_JUSTIF_ESTADO(ID_SOLIC_JUSTIF_ESTADO,ID_SOLIC_JUSTIF,ID_ESTADO_JUSTIF,COMENTARIO,ID_USER_REG,FECHA_REG)
			    VALUES (L_ID_SOLIC_JUSTIF_ESTADO,P_ID_SOLIC_JUSTIF,P_ID_ESTADO_JUSTIF,P_COMENTARIO,P_ID_USER,clock_timestamp());
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo guardar.';
	        P_ERROR := 3;
	       	RETURN;
		END;
-- 		<<UPDATE_JUSTIFICACION>>
	    BEGIN
		    UPDATE ENOC.PLLA_SOLIC_JUSTIF SET ID_ESTADO_JUSTIF=P_ID_ESTADO_JUSTIF,ID_USER_MOD=P_ID_USER,FECHA_MOD=clock_timestamp()
		    WHERE ID_SOLIC_JUSTIF = P_ID_SOLIC_JUSTIF;
	    EXCEPTION WHEN OTHERS THEN
		    P_MSGERROR:='No se pudo actualizar el estado de la justificación.';
	        P_ERROR := 4;
	       	RETURN;
		END;
		SELECT T.ID_ENTIDAD,EDC.ID_DEPTO_PADRE INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO FROM MOISES.TRABAJADOR t
	      INNER JOIN ENOC.VW_ENT_DEP_AREA_CCOSTO EDC ON T.ID_SEDEAREA = EDC.ID_SEDEAREA 
	      WHERE T.ID_TRABAJADOR = P_ID_TRABAJADOR;
		FOR ITEM IN (SELECT psjdm.*,PDM.NOMBRE AS NOMBRE_DESCRIP_MARC FROM ENOC.PLLA_SOLIC_JUSTIF_DESC_MARC psjdm
		INNER JOIN ENOC.PLLA_DESCRIP_MARCACION pdm ON PSJDM.ID_DESCRIP_MARCACION = PDM.ID_DESCRIP_MARCACION 
		WHERE ID_SOLIC_JUSTIF=P_ID_SOLIC_JUSTIF)
		LOOP
			IF (ITEM.ID_MARCACION IS NOT NULL AND ITEM.ID_MARCACION::text <> '') THEN 
				SELECT ID_SOLIC_JUSTIF INTO STRICT L_EXIST_ID_SOLIC_JUSTIF FROM ENOC.PLLA_MARCACION WHERE ID_MARCACION = ITEM.ID_MARCACION;
				IF (L_EXIST_ID_SOLIC_JUSTIF IS NOT NULL AND L_EXIST_ID_SOLIC_JUSTIF::text <> '') THEN 
				P_MSGERROR:='Ya fue justificado en la marcación "'||ITEM.NOMBRE_DESCRIP_MARC||'".';
				P_ERROR := 6;
				RETURN;
				ELSIF P_ID_ESTADO_JUSTIF='03' THEN
-- 					<<UPDATE_MARCACION>>
				    BEGIN
					    UPDATE ENOC.PLLA_MARCACION SET FECHAHORA_MANUAL=ITEM.FECHAHORA,ID_SOLIC_JUSTIF=P_ID_SOLIC_JUSTIF, ID_DESCRIP_MARCACION=ITEM.ID_DESCRIP_MARCACION
					    WHERE ID_MARCACION = ITEM.ID_MARCACION;
				    EXCEPTION WHEN OTHERS THEN
					    P_MSGERROR:='No se pudo guardar.';
				        P_ERROR := 5;
				       	RETURN;
					END;
				END IF;
			ELSIF P_ID_ESTADO_JUSTIF='03' THEN
    			ENOC.CALL pkg_assistance_sp_registrar_marcacion(
	                P_ID_TRABAJADOR,
	                3,
	                null,--ITEM.FECHAHORA,
	                ITEM.FECHAHORA,
	                NULL,
	                NULL,
	                NULL,
	                NULL,
	                P_ID_SOLIC_JUSTIF,
	                'M',
                  ITEM.ID_DESCRIP_MARCACION,
	                P_ID_USER,
	                P_ERROR,
	                P_MSGERROR
	            );
	           IF P_ERROR>0 THEN
	           	RETURN;
	           END IF;
			END IF;
		END LOOP;
		IF P_ID_ESTADO_JUSTIF='03' THEN
		ENOC.CALL pkg_assistance_sp_procesar_marcacion(L_FECHA,L_FECHA,L_ID_ENTIDAD,L_ID_DEPTO,0,P_ID_TRABAJADOR,P_ID_USER,P_ERROR,P_MSGERROR);
		END IF;
  	END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_assistance_sp_estado_justificacion ( P_ID_SOLIC_JUSTIF bigint, P_ID_ESTADO_JUSTIF text, P_ID_TRABAJADOR bigint, P_COMENTARIO text, P_ID_USER bigint, P_ERROR OUT bigint, P_MSGERROR OUT text) FROM PUBLIC;
