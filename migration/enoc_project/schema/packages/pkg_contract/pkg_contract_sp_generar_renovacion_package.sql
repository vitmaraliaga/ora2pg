-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_contract,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_contract_sp_generar_renovacion (P_ID_CONTRATO_ANT bigint,P_ID_PERFIL_PUESTO bigint,P_SUELDO bigint,P_CAMBIO_SUELDO char,P_FECHA_FIN timestamp(0), P_ID_USER bigint,P_ID_CONTRATO OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='ok';
        l_id_contrato bigint;
        l_fecha_ini timestamp(0);
        l_id_trabajador bigint;
        l_id_persona bigint;
        l_tipo_pago varchar(5);
        l_id_escala_salarial bigint;
        l_sueldo decimal(10,2);
        l_pje_fmr  decimal(10,2);
        l_id_estado_cont_depto bigint;
        l_id_depto varchar(10);
        l_id_entidad bigint;
        l_id_contrato_estado bigint;
        l_persona varchar(150);

      
BEGIN
        
        select FECHA_FIN + 1, ID_PERSONA, ID_DEPTO, ID_ENTIDAD INTO STRICT l_fecha_ini,l_id_persona, l_id_depto,l_id_entidad FROM ENOC.PLLA_CONTRATO WHERE ID_CONTRATO=P_ID_CONTRATO_ANT;

        
        select nombreapellido into STRICT l_persona from vw_persona_natural where id_persona = l_id_persona;

        if l_fecha_ini> P_FECHA_FIN then
            l_error:=1;
            l_msgerror:='Fecha fin debe ser mayor que fecha de inicio';
--             goto salida_gen_renov;
        end if;

        SELECT count(*) into STRICT l_contar
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=l_id_entidad 
         AND a.ID_DEPTO=l_id_depto 
         AND a.TIPO='R' 
         AND b.ID_ESTADO_CONT='01';

         IF l_contar = 0 THEN
            l_error:=1;
            l_msgerror:='Falta configurar los pasos para renovación';
--             goto salida_gen_renov;
        END IF;

        
        select count(*) INTO STRICT l_contar from ENOC.PLLA_CONTRATO
        where ID_CONTRATO_PARENT=P_ID_CONTRATO_ANT
        and ID_ESTADO_CONT_DEPTO  in (
           SELECT ID_ESTADO_CONT_DEPTO 
           FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
           WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
           AND  a.ID_ENTIDAD=l_id_entidad 
           AND a.ID_DEPTO=l_id_depto 
           AND a.TIPO = 'R'    
           AND b.ID_ESTADO_CONT not in ('00')--09
 
        );

         IF l_contar > 0 THEN
            l_error:=1;
            l_msgerror:='Ya esta asignado para renovación';
--             goto salida_gen_renov;
        END IF;

         SELECT ID_ESTADO_CONT_DEPTO into STRICT l_id_estado_cont_depto
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=l_id_entidad 
         AND a.ID_DEPTO=l_id_depto 
         AND a.TIPO = 'R' 
         AND b.ID_ESTADO_CONT='01';

        SELECT ID_TRABAJADOR INTO STRICT l_id_trabajador FROM MOISES.TRABAJADOR WHERE ID_PERSONA=l_id_persona AND ID_ENTIDAD= l_id_entidad;
        
        select count(*) INTO STRICT l_contar from ENOC.PLLA_REMUNERACION WHERE ID_TRABAJADOR=l_id_trabajador AND VIGENCIA=1;
        IF l_contar = 0 then
            l_error:=1;
            l_msgerror:='Trabajador sin registro en remuneraciones';
--             goto salida_gen_renov;
        end if;

        SELECT 
        TIPO_PAGO,
        ID_ESCALA_SALARIAL,
        SUELDO,
        FMR AS PJE_FMR
        INTO STRICT 
        l_tipo_pago,
        l_id_escala_salarial,
        l_sueldo,
        l_pje_fmr
        FROM ENOC.PLLA_REMUNERACION
        WHERE ID_TRABAJADOR=l_id_trabajador
        AND VIGENCIA=1;

        --select coalesce(max(l_id_contrato),0) + 1 into l_id_contrato from ENOC.PLLA_CONTRATO;
        select coalesce(max(ID_CONTRATO),0) + 1 into STRICT l_id_contrato  from ENOC.PLLA_CONTRATO;

        insert into ENOC.PLLA_CONTRATO(
        ID_CONTRATO,
        ID_ENTIDAD,
        ID_DEPTO,
        ID_PERSONA,
        ID_SEDEAREA,
        ID_PERFIL_PUESTO,
        ID_TIPO_TIEMPO_TRABAJO,
        ID_CONDICION_LABORAL,
        TIPO,
        ID_CONTRATO_PARENT,
        ID_SOLIC_REQUE,
        ID_SOLIC_REQ_CANDIDATO,
        FECHA_INI,
        FECHA_FIN,
        CV_URL,
        MENOREDAD,
        MENOREDAD_URL,
        PLANCAP_URL,
        TIPO_PAGO,
        ID_ESCALA_SALARIAL,
        SUELDO,
        PJE_FMR,
        ID_TIPO_REGIMEN_LABORAL,
        ID_TIPO_OCUPACION,
        ID_TIPO_CONTRATO,
        ID_TIPO_SCTR_PENSION,
        SUJREGALT,
        SUJJORTRAMAX,
        SUJJORHORNOC,
        ESSINDICALIZADO,
        ID_PERIODO_REMU,
        EXOTACAT,
        ID_SITUACION_TRABAJADOR,
        ID_TIPO_PAGO,
        ID_TIPO_CATEG_OCUPA,
        ID_SITUACION_ESPECIAL,
        ID_TIPO_DOBLE_TRIB,
        ID_CONTRATO_PLANTILLA,
        ID_ESTADO_CONT_DEPTO,
        OBSERVACION,
        CONTRATO,
        CONTARTO_URL,
        TREGISTRO_URL,
        ID_USER_REG,
        FECHA_REG,
        ID_USER_MOD,
        FECHA_MOD,
        ID_LICENCIA_PERMISO,
        FECHA_INICIO_MISIONERO,
        MISIONERO_URL,
        ID_TIPO_STATUS,
        ID_GRUPO_PLANILLA,
        ID_PUESTO_REMP,
        FECHA_ING,
        ID_TIPO_TIEMPO_REGIMEN,
        ID_RENOVACION,
        CAMBIO_SUELDO,
        SUELDO_ANT
        )
        SELECT
        l_id_contrato as ID_CONTRATO,
        c.ID_ENTIDAD,
        substr(c.ID_DEPTO,1,1) as ID_DEPTO,
        b.ID_PERSONA,
        b.ID_SEDEAREA,
        P_ID_PERFIL_PUESTO,
        b.ID_TIPO_TIEMPO_TRABAJO,
        b.ID_CONDICION_LABORAL,
        'R' as TIPO,
        a.ID_CONTRATO as ID_CONTRATO_PARENT,
        null as ID_SOLIC_REQUE,
        null as ID_SOLIC_REQ_CANDIDATO,
        l_fecha_ini as FECHA_INI,
        P_FECHA_FIN AS FECHA_FIN,
        null AS CV_URL,
        null AS MENOREDAD,
        null AS MENOREDAD_URL,
        NULL AS PLANCAP_URL,
        l_tipo_pago,
        l_id_escala_salarial,
        --l_sueldo,
        P_SUELDO,
        l_pje_fmr,
        a.ID_TIPO_REGIMEN_LABORAL,
        b.ID_TIPO_OCUPACION,
        b.ID_TIPO_CONTRATO,
        a.ID_TIPO_SCTR_PENSION,
        a.SUJREGALT,
        a.SUJJORTRAMAX,
        a.SUJJORHORNOC,
        a.ESSINDICALIZADO,
        a.ID_PERIODO_REMU,
        a.EXOTACAT,
        b.ID_SITUACION_TRABAJADOR,
        a.ID_TIPO_PAGO,
        a.ID_TIPO_CATEG_OCUPA,
        a.ID_SITUACION_ESPECIAL,
        a.ID_TIPO_DOBLE_TRIB,
        NULL AS ID_CONTRATO_PLANTILLA,
        l_id_estado_cont_depto as ID_ESTADO_CONT_DEPTO,
        NULL AS OBSERVACION,
        NULL AS CONTRATO,
        NULL AS CONTARTO_URL,
        NULL AS TREGISTRO_URL,
        P_ID_USER as ID_USER_REG,
        clock_timestamp() as FECHA_REG,
        null as ID_USER_MOD,
        null as FECHA_MOD,
        null as ID_LICENCIA_PERMISO,
        a.FECHA_INICIO_MISIONERO,
        a.MISIONERO_URL,
        b.ID_TIPO_STATUS,
        a.ID_GRUPO_PLANILLA,
        null as ID_PUESTO_REMP,
        null as FECHA_ING,
        b.ID_TIPO_TIEMPO_REGIMEN,
        NULL as ID_RENOVACION,
        P_CAMBIO_SUELDO,
        l_sueldo
        FROM ENOC.PLLA_CONTRATO a, moises.trabajador b, eliseo.org_sede_area c
        WHERE a.ID_PERSONA=b.ID_PERSONA
        and b.id_sedearea=c.id_sedearea
        and a.id_contrato=P_ID_CONTRATO_ANT;

        select coalesce(max(ID_CONTRATO_ESTADO),0) + 1 into STRICT l_id_contrato_estado  from ENOC.PLLA_CONTRATO_ESTADO;
        insert into ENOC.PLLA_CONTRATO_ESTADO(
            id_contrato_estado,
            id_estado_cont_depto,
            id_contrato,
            id_autoriza,
            fecha
        ) values (
            l_id_contrato_estado,
            l_id_estado_cont_depto,
            l_id_contrato,
            P_ID_USER,
            clock_timestamp()
        );

--         <<salida_gen_renov>> 
        if l_error=1 then
          l_msgerror:=l_msgerror||' - '||l_persona;
        end if;

        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
       	P_ID_CONTRATO:=l_id_contrato;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_contract_sp_generar_renovacion (P_ID_CONTRATO_ANT bigint,P_ID_PERFIL_PUESTO bigint,P_SUELDO bigint,P_CAMBIO_SUELDO char,P_FECHA_FIN timestamp(0), P_ID_USER bigint,P_ID_CONTRATO OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
