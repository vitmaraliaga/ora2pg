-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_contract,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_contract_sp_costoxhora_previo (P_ID_CONTRATO bigint,P_ID_SEMESTRE bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='ok';
        l_id_carga_curso bigint;
        l_horario varchar(400);
        l_horario_tmp varchar(400);
        l_id_tipo_formato_modulo bigint;
        l_dias bigint:=7;
        l_i bigint:=1;
        l_j bigint:=1;
        l_total bigint:=0;
        l_fecha timestamp(0);
        l_hora bigint:=0;
        l_fecha_ini timestamp(0);
        l_num_dia bigint;
        l_n_resta bigint;
        l_id_persona bigint;
        l_item bigint;
        l_costo decimal(10,2);
        l_id_escala_sala_docente_det bigint;
        l_id_tipo_hora_pago bigint;
        l_fecha_inic timestamp(0);
        l_fecha_finc  timestamp(0);
        l_id_solic_reque bigint;
        l_fecha_inicio_proc timestamp(0);
        l_fecha_fin_proc timestamp(0);
        l_fecha_ini_proc timestamp(0);
        l_nohaymod varchar(200);

        l_fin_select timestamp(0);
        l_ini_select timestamp(0);

        curCab CURSOR FOR
        SELECT 
          ID_CARGA_CURSO,
          ID_PROGRAMA_ESTUDIO,
          MIN(FECHA_INI_PROC) AS FECHA_INICIO,
          MAX(FECHA_FIN) AS FECHA_FIN
        FROM ENOC.TT_CARGA_DOCENTE 
        WHERE ID_PERSONA=l_id_persona 
        AND ID_SEMESTRE=P_ID_SEMESTRE
        --AND ID_MODULO_DETALLE in(4892,4893,4894,4895,4896,4897)
        GROUP BY ID_CARGA_CURSO,ID_PROGRAMA_ESTUDIO
        ORDER BY ID_CARGA_CURSO;

        
        curDet CURSOR FOR
        SELECT 
          ID_MODULO_DETALLE,
          ID_MODULO,
          ID_TIPO_MODALIDAD_DOCENTE,
          ID_TIPO_HORARIO,
          FECHA_INICIO,
          FECHA_FIN,
          HORARIO,
          ID_SEDEAREA,
          NOMBRE_AREA,
          CURSO,
          CICLO,
          CREDITOS,
          HP,
          HT,
          HNP,
          GRUPO,
          FECHA_INI_PROC
        FROM ENOC.TT_CARGA_DOCENTE 
        WHERE ID_PERSONA=l_id_persona 
        AND ID_SEMESTRE=P_ID_SEMESTRE
        AND ID_CARGA_CURSO=l_id_carga_curso
        --AND ID_MODULO_DETALLE in(18300)
        ORDER BY FECHA_INICIO;

        /*
        CURSOR curCont IS
        select 
        ID_ANHO,
        ID_MES,
        ID_SEDEAREA,
        ID_PROGRAMA_ESTUDIO,
        ID_PERSONA,
        ID_SEMESTRE,
        ID_TIPO_MODALIDAD_DOCENTE,
        DIAS,
        HORAS
        from ENOC.VW_COSTOXHORA_CARGA_SUM
        where id_contrato=P_ID_CONTRATO
        and id_semestre=P_ID_SEMESTRE
        order by ID_ANHO, ID_MES;
        */
        
        f_fecha_fin_proc timestamp(0);

      
BEGIN
      
       select id_persona, fecha_ini,fecha_fin,ID_SOLIC_REQUE into STRICT l_id_persona,l_fecha_inic,l_fecha_finc,l_id_solic_reque from enoc.plla_contrato where id_contrato=P_ID_CONTRATO;

        select count(*) into STRICT l_contar from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;

        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='El contrato no tiene requerimiento';
--             goto salida_previo;
        END IF;

        select fecha_ini,fecha_fin into STRICT l_fecha_inic,l_fecha_finc from ENOC.PLLA_SOLIC_REQUE WHERE ID_SOLIC_REQUE = l_id_solic_reque;

        
        INSERT INTO ENOC.TT_CARGA_DOCENTE
        SELECT
        ID_MODULO_DETALLE,
        ID_CARGA_CURSO,
        ID_PROGRAMA_ESTUDIO,
        ID_MODULO,
        ID_TIPO_MODALIDAD_DOCENTE,
        ID_TIPO_HORARIO,
        ID_PERSONA,
        ID_SEMESTRE,
        FINICIO,--FECHA_INICIO,
        FECHA_FIN,
        HORARIO,
        NOMBRE_AREA,
        CURSO,
        CICLO,
        CREDITO,
        HP,
        HT,
        HNP,
        ID_SEDEAREA,
        GRUPO,
        FECHA_INICIO
        FROM  ENOC.VW_CARGA_DOCENTE 
        WHERE id_persona=l_id_persona
        and id_semestre=P_ID_SEMESTRE
        order by fecha_inicio;

        delete from enoc.PLLA_COSTOXHORA_CARGA where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;

       -- delete from enoc.PLLA_CONTRATO_DET where ID_SEMESTRE=P_ID_SEMESTRE and ID_CONTRATO=P_ID_CONTRATO;
       
       select count(*) into STRICT l_contar from ENOC.TT_CARGA_DOCENTE where coalesce(ID_TIPO_MODALIDAD_DOCENTE::text, '') = '';
       IF l_contar>0 THEN

            select 
            substr(string_agg(substr(NOMBRE_AREA,0,20)||': '||substr(CURSO,0,50)||' - Ciclo: '||CICLO::text||' Gpo: '||GRUPO,', ' ORDER BY ID_MODULO_DETALLE),0,180)
            into STRICT l_nohaymod
            from ENOC.TT_CARGA_DOCENTE where coalesce(ID_TIPO_MODALIDAD_DOCENTE::text, '') = '';

            l_error:=1;
            l_msgerror:='No tiene Modalidad. '||substr(l_nohaymod,0,174);
--             goto salida_previo;
        END IF;

        
        select count(*) into STRICT l_contar from ENOC.TT_CARGA_DOCENTE;
        IF l_contar=0 THEN
            l_error:=1;
            l_msgerror:='No tiene carga horario';
--             goto salida_previo;
        END IF;

        FOR curC in curCab LOOP
          BEGIN
            l_id_carga_curso:=curC.ID_CARGA_CURSO;

            --validacion fecha fin
            if curC.FECHA_FIN<l_fecha_finc then
              f_fecha_fin_proc := curC.FECHA_FIN;
            else
              f_fecha_fin_proc := l_fecha_finc;
            end if;
            --fin validar
            
            --validacion INI fin
            if curC.FECHA_INICIO>l_fecha_inic then
              l_fecha_ini_proc := curC.FECHA_INICIO;
            else
              l_fecha_ini_proc := l_fecha_inic;
            end if;
            --fin validar
            FOR curD in curDet LOOP
              BEGIN
                DELETE FROM ENOC.TT_CARGA_SEMANA;
                select id_tipo_formato_modulo into STRICT l_id_tipo_formato_modulo from david.acad_modulo where id_modulo=curD.id_modulo;
                if l_id_tipo_formato_modulo<>2 then
                  l_horario:=curD.horario;
                  l_total:=length(l_horario);
                  l_horario_tmp := l_horario;

                  l_fin_select:=l_fecha_finc;
                  if l_fecha_finc > curD.fecha_fin then
                    l_fin_select:=curD.fecha_fin;
                  end if;
                  l_ini_select:=l_fecha_inic;
                  if curD.fecha_ini_proc > l_fecha_inic then
                    l_ini_select:=curD.fecha_ini_proc;
                  end if;

                  
        
                  l_j:=1;
                  while l_j<=l_total loop
                    l_horario_tmp := substr(l_horario_tmp,0,l_dias);
                    l_i:=1;
                    ----
                    l_fecha_inicio_proc:=l_fecha_inic;
                    if curD.fecha_inicio < l_fecha_inic then
                      l_fecha_inicio_proc:=curD.fecha_inicio;
                    end if;
                    --if curD.fecha_ini_proc > l_fecha_inic then
                      --l_fecha_inicio_proc:=curD.fecha_ini_proc ;
                    --end if;
                    l_fecha_fin_proc:=l_fecha_finc;
                    if curD.fecha_fin > l_fecha_finc then
                      l_fecha_fin_proc:=curD.fecha_fin;
                    end if;

                    ----
                    
                    l_num_dia:= (to_char(curD.fecha_inicio, 'd'))::numeric;
                    l_n_resta:= l_num_dia - 1;
                    l_fecha_ini:= curD.fecha_inicio - l_n_resta;
                    l_fecha:=l_fecha_ini;
                    while l_i<=l_dias LOOP
                      l_hora:= substr(l_horario_tmp,l_i,1);
                      if l_hora = '1' then

                        --if l_fecha>=l_fecha_inic and l_fecha <=l_fecha_finc then
                        if l_fecha>=l_fecha_inicio_proc and l_fecha <=l_fecha_fin_proc then
                          --if l_fecha>=curD.fecha_ini_proc then
                          
                          INSERT INTO ENOC.TT_CARGA_SEMANA(DIA,HORA,ID_TIPO_MODALIDAD_DOCENTE,ID_TIPO_HORARIO,FECHA) VALUES (l_i,(l_hora)::numeric ,curD.ID_TIPO_MODALIDAD_DOCENTE,curD.ID_TIPO_HORARIO, l_fecha);
                           --dbms_output.put_line(to_char(l_fecha,'DD/MM/YYYY')||'-'||to_char(l_id_carga_curso));
                          --end if;
                       end if;
                      end if;
                      l_fecha:= l_fecha + 1;
                      l_i:=l_i + 1;
                    END LOOP;
                    l_j:=l_j + 7;
                    l_horario_tmp := substr(l_horario,l_j,l_total);

                  END LOOP;

                  
                 
                  
                                
                  INSERT INTO enoc.PLLA_COSTOXHORA_CARGA(
                    ID_CARGA_CURSO,
                    ID_SEMESTRE,
                    ID_PERSONA,
                    ID_TIPO_MODALIDAD_DOCENTE,
                    ID_TIPO_HORARIO,
                    FECHA,
                    HORAS,
                    ID_PROGRAMA_ESTUDIO,
                    HORARIO,
                    ID_SEDEAREA,
                    NOMBRE_AREA,
                    CURSO,
                    CICLO,
                    CREDITOS,
                    HP,
                    HT,
                    HNP,
                    ID_CONTRATO,
                    GRUPO
                  )
                  SELECT 
                  l_id_carga_curso,
                  P_ID_SEMESTRE,
                  l_id_persona,
                  ID_TIPO_MODALIDAD_DOCENTE, 
                  coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),
                  FECHA, 
                  SUM(HORA) ,
                  curC.ID_PROGRAMA_ESTUDIO,
                  curD.HORARIO,
                  curD.ID_SEDEAREA,
                  curD.NOMBRE_AREA,
                  curD.CURSO,
                  curD.CICLO,
                  curD.CREDITOS,
                  curD.HP,
                  curD.HT,
                  curD.HNP,
                  P_ID_CONTRATO,
                  curD.GRUPO
                  FROM ENOC.TT_CARGA_SEMANA 
                  WHERE HORA>0 
                  --AND FECHA BETWEEN l_fecha_ini_proc and f_fecha_fin_proc--l_fecha_fin_proc
                  AND FECHA BETWEEN l_ini_select and l_fin_select --l_fecha_fin_proc
                  GROUP BY FECHA,ID_TIPO_MODALIDAD_DOCENTE,coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE)  
                  ORDER BY FECHA;

      
                   
                  l_fecha:= curD.fecha_inicio + 7;
                  l_j:=7;

                  WHILE l_fecha<=curD.fecha_fin loop
                  
                      
                      INSERT INTO enoc.PLLA_COSTOXHORA_CARGA(
                        ID_CARGA_CURSO,
                        ID_SEMESTRE,
                        ID_PERSONA,
                        ID_TIPO_MODALIDAD_DOCENTE,
                        ID_TIPO_HORARIO,
                        FECHA,
                        HORAS,
                        ID_PROGRAMA_ESTUDIO,
                        HORARIO,
                        ID_SEDEAREA,
                        NOMBRE_AREA,
                        CURSO,
                        CICLO,
                        CREDITOS,
                        HP,
                        HT,
                        HNP,
                        ID_CONTRATO,
                        GRUPO
                      )
                      SELECT 
                      l_id_carga_curso,
                      P_ID_SEMESTRE,
                      l_id_persona, 
                      ID_TIPO_MODALIDAD_DOCENTE,
                      coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE),
                      FECHA+l_j, 
                      SUM(HORA) ,
                      curC.ID_PROGRAMA_ESTUDIO,
                      curD.HORARIO,
                      curD.ID_SEDEAREA,
                      curD.NOMBRE_AREA,
                      curD.CURSO,
                      curD.CICLO,
                      curD.CREDITOS,
                      curD.HP,
                      curD.HT,
                      curD.HNP,
                      P_ID_CONTRATO,
                      curD.GRUPO
                      FROM ENOC.TT_CARGA_SEMANA 
                      WHERE HORA>0 
                      AND FECHA+l_j BETWEEN l_fecha_ini_proc and f_fecha_fin_proc --l_fecha_finc
                      GROUP BY FECHA,ID_TIPO_MODALIDAD_DOCENTE,coalesce(ID_TIPO_HORARIO,ID_TIPO_MODALIDAD_DOCENTE)  
                      ORDER BY FECHA;

                      l_fecha:= l_fecha + 7;
                      l_j:=l_j+7;

                  END LOOP;

                  
                end if;
              END;
            END LOOP;
            /*delete  from enoc.PLLA_COSTOXHORA_CARGA where id_persona=l_id_persona and id_semestre=P_ID_SEMESTRE and id_contrato=P_ID_CONTRATO
            and FECHA not BETWEEN curC.FECHA_INICIO and curC.FECHA_fin;*/
          END;
        END LOOP;

        CALL pkg_contract_sp_costoxhora_previo_asin(P_ID_CONTRATO,P_ID_SEMESTRE,l_fecha_finc,l_id_persona,l_fecha_inic,l_fecha_finc,l_error,l_msgerror);

        if l_error=0 then
          select count(*) into STRICT l_contar from ENOC.PLLA_COSTOXHORA_CARGA where id_contrato=P_ID_CONTRATO and id_semestre=P_ID_SEMESTRE;
          IF l_contar=0 THEN
              l_error:=1;
              l_msgerror:='No tiene asignado horario';
--               goto salida_previo;
          END IF;
        end if;
--         <<salida_previo>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_contract_sp_costoxhora_previo (P_ID_CONTRATO bigint,P_ID_SEMESTRE bigint,P_ID_USER bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
