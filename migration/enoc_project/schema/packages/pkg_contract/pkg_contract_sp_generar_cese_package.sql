-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_contract,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_contract_sp_generar_cese ( P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_TRABAJDOR bigint, P_ID_MOTIVO_CESE text, P_FECHA_CESE timestamp(0), P_OBSERVACION text , P_ID_CONTRATO bigint, P_ID_USER bigint, P_ID_CESE OUT bigint, P_ERROR OUT bigint, P_MSGERROR out text ) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='ok';
        l_id_cese bigint;

        l_fecha_fin_previsto timestamp(0);
        l_id_estado_cont_depto bigint;
        l_id_cese_estado bigint;
        l_id_persona bigint;
        l_id_contrato_estado bigint;
        l_persona varchar(150);

      
BEGIN
        
        select ID_PERSONA,FECHA_FIN_PREVISTO INTO STRICT l_id_persona,l_fecha_fin_previsto FROM MOISES.TRABAJADOR WHERE ID_TRABAJADOR=P_ID_TRABAJDOR;

        
        select nombreapellido into STRICT l_persona from vw_persona_natural where id_persona = l_id_persona;

        if (l_fecha_fin_previsto IS NOT NULL AND l_fecha_fin_previsto::text <> '') then
          if P_FECHA_CESE > l_fecha_fin_previsto then
              l_error:=1;
              l_msgerror:='Fecha cese debe ser igual 贸 menor que fecha fin de contrato';
--               goto salida_gen_cese;
          end if;
        end if;

        SELECT count(*) into STRICT l_contar
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
         AND a.ID_DEPTO=P_ID_DEPTO 
         AND a.TIPO='T' 
         AND b.ID_ESTADO_CONT='01';

         IF l_contar = 0 THEN
            l_error:=1;
            l_msgerror:='Falta configurar los pasos para proceso de desvinculaci贸n';
--             goto salida_gen_cese;
        END IF;

         
        
        select count(*) INTO STRICT l_contar from ENOC.PLLA_CESE
        where ID_CONTRATO=P_ID_CONTRATO
        and ID_ESTADO_CONT_DEPTO  in (
           SELECT ID_ESTADO_CONT_DEPTO 
           FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
           WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
           AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
           AND a.ID_DEPTO=P_ID_DEPTO 
           AND a.TIPO='T' 
           AND b.ID_ESTADO_CONT not in ('09','00') 
        );

         IF l_contar > 0 THEN
            l_error:=1;
            l_msgerror:='Ya esta asignado para desvinculaci贸n';
--             goto salida_gen_cese;
        END IF;

       
        select count(*) INTO STRICT l_contar from ENOC.PLLA_CONTRATO
        where ID_CONTRATO_PARENT=P_ID_CONTRATO
        and ID_ESTADO_CONT_DEPTO  in(
           SELECT ID_ESTADO_CONT_DEPTO 
           FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
           WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
           AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
           AND a.ID_DEPTO=P_ID_DEPTO 
           AND a.TIPO='R' 
           AND b.ID_ESTADO_CONT not in ('00')--'09'
        );

         IF l_contar > 0 THEN
            l_error:=1;
            l_msgerror:='Ya esta asignado para renovaci贸n';
--             goto salida_gen_cese;
        END IF;

        
         SELECT ID_ESTADO_CONT_DEPTO into STRICT l_id_estado_cont_depto
         FROM enoc.PLLA_ESTADO_CONT_DEPTO a,  enoc.PLLA_ESTADO_CONT b 
         WHERE a.ID_ESTADO_CONT=b.ID_ESTADO_CONT 
         AND  a.ID_ENTIDAD=P_ID_ENTIDAD 
         AND a.ID_DEPTO=P_ID_DEPTO 
         AND a.TIPO='T' 
         AND b.ID_ESTADO_CONT='01';

           
     
        select coalesce(max(ID_CESE),0) + 1 into STRICT l_id_cese  from ENOC.PLLA_CESE;

        insert into ENOC.PLLA_CESE(
          ID_CESE,
          ID_ENTIDAD,
          ID_DEPTO,
          ID_TRABAJADOR,
          ID_MOTIVO_CESE,
          FECHA_CESE,
          OBSERVACION,
          ID_CONTRATO,
          ID_ESTADO_CONT_DEPTO,
          ID_USER_REG,
          FECHA_REG
        )VALUES (
          l_id_cese,
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_TRABAJDOR,
          P_ID_MOTIVO_CESE,
          P_FECHA_CESE,
          P_OBSERVACION,
          P_ID_CONTRATO,
          l_id_estado_cont_depto,
          P_ID_USER,
          clock_timestamp()
        );

        select coalesce(max(ID_CESE_ESTADO),0) + 1 into STRICT l_id_cese_estado  from ENOC.PLLA_CESE_ESTADO;
        insert into ENOC.PLLA_CESE_ESTADO(
            id_cese_estado,
            id_estado_cont_depto,
            id_cese,
            id_autoriza,
            fecha
        ) values (
            l_id_cese_estado,
            l_id_estado_cont_depto,
            l_id_cese,
            P_ID_USER,
            clock_timestamp()
        );

--         <<salida_gen_cese>> 
        if l_error=1 then
          l_msgerror:=l_msgerror||' - '||l_persona;
        end if;

        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        P_ID_CESE:= l_id_cese;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_contract_sp_generar_cese ( P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_TRABAJDOR bigint, P_ID_MOTIVO_CESE text, P_FECHA_CESE timestamp(0), P_OBSERVACION text , P_ID_CONTRATO bigint, P_ID_USER bigint, P_ID_CESE OUT bigint, P_ERROR OUT bigint, P_MSGERROR out text ) FROM PUBLIC;
