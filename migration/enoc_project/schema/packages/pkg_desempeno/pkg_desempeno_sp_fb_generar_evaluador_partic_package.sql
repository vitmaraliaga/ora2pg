-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_desempeno,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_desempeno_sp_fb_generar_evaluador_partic (P_ID_DESEMPENO bigint,P_ID_PARTICIPANTE bigint,P_ID_EVALUADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint, P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_evaluador_particip bigint;
        l_num_partipante bigint;
        l_num_partipante_eje bigint;
        l_num_eval bigint;
        l_jefes bigint;
        l_num_div bigint;

        curEval CURSOR FOR
        SELECT id_evaluador,id_trabajador,id_perfil_puesto, id_sedearea from ENOC.DES_FB_EVALUADOR
        where ID_DESEMPENO = P_ID_DESEMPENO
        and CASE WHEN P_ID_EVALUADOR =0 THEN 0 ELSE id_evaluador END = CASE WHEN P_ID_EVALUADOR =0 THEN 0 ELSE P_ID_EVALUADOR END
        order by id_evaluador;

        l_id_est bigint;

      
      
BEGIN
        
       
        
        if P_ID_EVALUADOR>0 and P_ID_PARTICIPANTE>0 then
              
              select count(1) into STRICT l_contar from enoc.DES_FB_EVALUADOR_PARTICIP
              where ID_PARTICIPANTE=P_ID_PARTICIPANTE;

              if l_contar=0 then
              
                select coalesce(max(ID_EVALUADOR_PARTICIP),0) + 1 into STRICT l_id_evaluador_particip from enoc.DES_FB_EVALUADOR_PARTICIP;

                insert into enoc.DES_FB_EVALUADOR_PARTICIP(
                  ID_EVALUADOR_PARTICIP,
                  ID_PARTICIPANTE,
                  ID_EVALUADOR,
                  ID_SEDEAREA,
                  ID_PERFIL_PUESTO,
                  ID_CONDICION_LABORAL,
                  ID_TIPO_TIEMPO_TRABAJO,
                  ID_ESTADO_EVA,
                  ID_USER_REG,
                  FECHA_REG
                )
                
                SELECT
                l_id_evaluador_particip,
                P_ID_PARTICIPANTE,
                P_ID_EVALUADOR,
                a.ID_SEDEAREA,
                a.ID_PERFIL_PUESTO,
                a.ID_CONDICION_LABORAL,
                a.ID_TIPO_TIEMPO_TRABAJO,
                '01',--registro
                P_ID_USER_REG,
                clock_timestamp()
                from moises.trabajador a, enoc.DES_PARTICIPANTE p
                where a.id_trabajador=p.id_trabajador
                and p.ID_PARTICIPANTE=P_ID_PARTICIPANTE
                and a.id_situacion_trabajador='1';

                select coalesce(max(ID_EVALUADOR_PARTICIP_EST),0) + 1 into STRICT l_id_est from enoc.DES_FB_EVALUADOR_PARTICIP_EST;

                insert into ENOC.DES_FB_EVALUADOR_PARTICIP_EST(
                  ID_EVALUADOR_PARTICIP_EST,
                  ID_EVALUADOR_PARTICIP,
                  ID_ESTADO_EVA,
                  ID_USER_REG,
                  FECHA_REG
                )
                SELECT
                l_id_est,
                l_id_evaluador_particip,
                '01',--registro
                P_ID_USER_REG,
                clock_timestamp()
                from moises.trabajador a, enoc.DES_PARTICIPANTE p
                where a.id_trabajador=p.id_trabajador
                and p.ID_PARTICIPANTE=P_ID_PARTICIPANTE
                and a.id_situacion_trabajador='1';
            else
              l_error:=1;
              l_msgerror:='Ya esta asignado';
--               goto salida;
            end if;

        else
         
          FOR curE in curEval LOOP
          BEGIN
          
            select coalesce(max(ID_EVALUADOR_PARTICIP),0)  into STRICT l_id_evaluador_particip from enoc.DES_FB_EVALUADOR_PARTICIP;

            select count(1) into STRICT l_jefes from moises.trabajador where id_perfil_puesto=curE.id_perfil_puesto and  id_situacion_trabajador='1';

            if l_jefes=1 then
            
             
               insert into enoc.TT_FB_EVALUADOR_PARTICIP(
                ID_EVALUADOR_PARTICIP,
                ID_PARTICIPANTE,
                ID_EVALUADOR,
                ID_SEDEAREA,
                ID_PERFIL_PUESTO,
                ID_CONDICION_LABORAL,
                ID_TIPO_TIEMPO_TRABAJO
                )
               
               SELECT (row_number() OVER ( ORDER BY p.id_participante ASC )) + l_id_evaluador_particip,
                  p.id_participante,
                  curE.id_evaluador,
                  a.ID_SEDEAREA,
                  a.ID_PERFIL_PUESTO,
                  a.ID_CONDICION_LABORAL,
                  a.ID_TIPO_TIEMPO_TRABAJO
                  from moises.trabajador a, enoc.DES_PARTICIPANTE p,enoc.plla_perfil_puesto pp
                  where a.id_trabajador = p.id_trabajador
                  and a.id_perfil_puesto=pp.id_perfil_puesto
                  and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curE.id_perfil_puesto
                  and p.ID_DESEMPENO=P_ID_DESEMPENO
                  and a.id_situacion_trabajador='1'
                  and p.id_participante not in (
                    SELECT id_participante from enoc.DES_FB_EVALUADOR_PARTICIP x,enoc.DES_FB_EVALUADOR y
                    where x.id_evaluador=y.id_evaluador
                    and y.ID_DESEMPENO=P_ID_DESEMPENO
                  ) 
                  order by p.id_participante;

              elsif l_jefes>1 then
                select count(1) into STRICT l_num_partipante from moises.trabajador a, enoc.DES_PARTICIPANTE p,enoc.plla_perfil_puesto pp
                where a.id_trabajador = p.id_trabajador
                and a.id_perfil_puesto=pp.id_perfil_puesto
                and a.id_situacion_trabajador='1'
                and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curE.id_perfil_puesto
                and p.ID_DESEMPENO=P_ID_DESEMPENO;

                
                select count(distinct y.id_evaluador) into STRICT l_num_eval from enoc.DES_FB_EVALUADOR_PARTICIP x,enoc.DES_FB_EVALUADOR y
                where x.id_evaluador=y.id_evaluador
                and y.id_perfil_puesto=curE.id_perfil_puesto
                and y.ID_DESEMPENO=P_ID_DESEMPENO;

                              
                l_num_div:= l_num_partipante/l_jefes;
                if l_jefes=(l_num_eval+1) then
                  l_num_partipante_eje:= FLOOR(l_num_div)*2;
                else
                  l_num_partipante_eje:= FLOOR(l_num_div);
                end if;

                
                
                insert into enoc.TT_FB_EVALUADOR_PARTICIP(
                  ID_EVALUADOR_PARTICIP,
                  ID_PARTICIPANTE,
                  ID_EVALUADOR,
                  ID_SEDEAREA,
                  ID_PERFIL_PUESTO,
                  ID_CONDICION_LABORAL,
                  ID_TIPO_TIEMPO_TRABAJO
                )               
                SELECT (row_number() OVER ( ORDER BY x.id_participante ASC )) + l_id_evaluador_particip,
                 x.id_participante,
                 curE.id_evaluador,
                 x.ID_SEDEAREA,
                 x.ID_PERFIL_PUESTO,
                 x.ID_CONDICION_LABORAL,
                 x.ID_TIPO_TIEMPO_TRABAJO
                 from (
                  SELECT
                    p.id_participante,
                    a.ID_SEDEAREA,
                    a.ID_PERFIL_PUESTO,
                    a.ID_CONDICION_LABORAL,
                    a.ID_TIPO_TIEMPO_TRABAJO
                    from moises.trabajador a, enoc.DES_PARTICIPANTE p,enoc.plla_perfil_puesto pp
                    where a.id_trabajador = p.id_trabajador
                    and a.id_perfil_puesto=pp.id_perfil_puesto
                    and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curE.id_perfil_puesto
                    and p.ID_DESEMPENO=P_ID_DESEMPENO
                    and a.id_situacion_trabajador='1'
                    and p.id_participante not in (
                      select id_participante from enoc.DES_FB_EVALUADOR_PARTICIP x,enoc.DES_FB_EVALUADOR y
                      where x.id_evaluador=y.id_evaluador
                      and y.ID_DESEMPENO=P_ID_DESEMPENO
                    ) 
--                     ORDER BY DBMS_RANDOM.VALUE
                )x LIMIT (l_num_partipante_eje);
              end if;

              
             insert into enoc.DES_FB_EVALUADOR_PARTICIP(
                    ID_EVALUADOR_PARTICIP,
                    ID_PARTICIPANTE,
                    ID_EVALUADOR,
                    ID_SEDEAREA,
                    ID_PERFIL_PUESTO,
                    ID_CONDICION_LABORAL,
                    ID_TIPO_TIEMPO_TRABAJO,
                    ID_ESTADO_EVA,
                    ID_USER_REG,
                    FECHA_REG
              )
              SELECT
                ID_EVALUADOR_PARTICIP,
                ID_PARTICIPANTE,
                ID_EVALUADOR,
                ID_SEDEAREA,
                ID_PERFIL_PUESTO,
                ID_CONDICION_LABORAL,
                ID_TIPO_TIEMPO_TRABAJO,
                '01',--registro
                P_ID_USER_REG,
                clock_timestamp()
              from enoc.TT_FB_EVALUADOR_PARTICIP;

              select coalesce(max(ID_EVALUADOR_PARTICIP_EST),0)  into STRICT l_id_est from enoc.DES_FB_EVALUADOR_PARTICIP_EST;

              insert into ENOC.DES_FB_EVALUADOR_PARTICIP_EST(
                  ID_EVALUADOR_PARTICIP_EST,
                  ID_EVALUADOR_PARTICIP,
                  ID_ESTADO_EVA,
                  ID_USER_REG,
                  FECHA_REG
                )
                SELECT (row_number() OVER ( ORDER BY ID_EVALUADOR_PARTICIP ASC )) + l_id_est,
                ID_EVALUADOR_PARTICIP,
                '01',--registro
                P_ID_USER_REG,
                clock_timestamp()
                from enoc.TT_FB_EVALUADOR_PARTICIP;

              
            END;
          END LOOP;
        end if;

--         <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_desempeno_sp_fb_generar_evaluador_partic (P_ID_DESEMPENO bigint,P_ID_PARTICIPANTE bigint,P_ID_EVALUADOR bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint, P_MSGERROR out text) FROM PUBLIC;
