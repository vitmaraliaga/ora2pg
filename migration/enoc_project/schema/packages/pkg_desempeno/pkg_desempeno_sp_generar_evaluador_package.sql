-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_desempeno,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_desempeno_sp_generar_evaluador (P_ID_DESEMPENO bigint,P_ID_PARTICIPANTE bigint,P_ID_EVALUADOR bigint,P_ID_TIPO_EVALUADOR bigint,P_ID_PROGRAMA_ESTUDIO bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint, P_MSGERROR out text) AS $body$
DECLARE

        l_contar bigint;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_participante_evaluador bigint;
        l_id_tipo_evaluacion bigint;
        l_id_entidad bigint;
        l_id_perfil_puesto_jefe bigint;
        l_id_evaluador bigint;
        l_codigo varchar(20);
        l_query varchar(4000):='';
        l_num_pares bigint;
        l_num_pares_eje bigint;
        curPart CURSOR FOR
        SELECT id_participante,id_trabajador,id_perfil_puesto, id_sedearea from ENOC.DES_PARTICIPANTE
        where ID_DESEMPENO = P_ID_DESEMPENO
        and CASE WHEN P_ID_PARTICIPANTE =0 THEN 0 ELSE id_participante END = CASE WHEN P_ID_PARTICIPANTE =0 THEN 0 ELSE P_ID_PARTICIPANTE END
        order by id_participante;

        curTipo CURSOR FOR
        SELECT
        a.ID_EVALUACION_EVALUADOR,
        a.ID_TIPO_EVALUADOR,
        b.codigo
        from enoc.DES_EVALUACION_EVALUADOR a,enoc.des_tipo_evaluador b
        where a.ID_TIPO_EVALUADOR=b.ID_TIPO_EVALUADOR
        and a.ID_TIPO_EVALUACION=l_id_tipo_evaluacion
        and a.vigencia=1
        and a.id_entidad=l_id_entidad;


      
BEGIN
      
      
        if P_ID_EVALUADOR>0 and P_ID_PARTICIPANTE>0 then
          if (P_ID_PROGRAMA_ESTUDIO IS NOT NULL AND P_ID_PROGRAMA_ESTUDIO::text <> '') then
            select count(1) into STRICT l_contar from  enoc.DES_PARTICIPANTE_EVALUADOR 
            where ID_PARTICIPANTE=P_ID_PARTICIPANTE 
            and ID_PROGRAMA_ESTUDIO=P_ID_PROGRAMA_ESTUDIO;

            if l_contar > 0  then
              l_error:=1;
              l_msgerror:='Ya esta asignado evaluador para el programa';
--               goto salida;
            end if;
          end if;
        end if;

        select id_tipo_evaluacion,id_entidad,NUM_PARES into STRICT l_id_tipo_evaluacion,l_id_entidad,l_num_pares from enoc.DES_DESEMPENO where ID_DESEMPENO=P_ID_DESEMPENO;

        FOR curP in curPart LOOP
        BEGIN
            
            if P_ID_EVALUADOR>0 and P_ID_PARTICIPANTE>0 then
              
              select count(1) into STRICT l_contar from enoc.DES_PARTICIPANTE_EVALUADOR
              where ID_PARTICIPANTE=curP.id_participante
              and ID_EVALUADOR=P_ID_EVALUADOR
              and ID_TIPO_EVALUADOR=P_ID_TIPO_EVALUADOR;

              if l_contar=0 then
              
                select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0) + 1 into STRICT l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;

                insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                  ID_PARTICIPANTE_EVALUADOR,
                  ID_PARTICIPANTE,
                  ID_EVALUADOR,
                  ID_TIPO_EVALUADOR,
                  ID_PROGRAMA_ESTUDIO,
                  FINALIZADO,
                  ID_USER_REG,
                  FECHA_REG
                )values (
                  l_id_participante_evaluador,
                  curP.id_participante,
                  P_ID_EVALUADOR,
                  P_ID_TIPO_EVALUADOR,
                  P_ID_PROGRAMA_ESTUDIO,
                  0,
                  P_ID_USER_REG,
                  clock_timestamp()
                );
              end if;
            else
              FOR curT in curTipo LOOP
              BEGIN
                l_codigo:=curT.codigo;

                case l_codigo
                  when 'AUT' then  --AutoevaluaciÃ³n
                  
                    select count(1) into STRICT l_contar from enoc.DES_PARTICIPANTE_EVALUADOR
                    where ID_PARTICIPANTE=curP.id_participante
                    and ID_EVALUADOR=curP.id_participante
                    and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR;

                    if l_contar=0 then
                      select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0) + 1 into STRICT l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                      insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                        ID_PARTICIPANTE_EVALUADOR,
                        ID_PARTICIPANTE,
                        ID_EVALUADOR,
                        ID_TIPO_EVALUADOR,
                        FINALIZADO,
                        ID_USER_REG,
                        FECHA_REG
                      )values (
                        l_id_participante_evaluador,
                        curP.id_participante,
                        curP.id_participante,
                        curT.ID_TIPO_EVALUADOR,
                        0,
                        P_ID_USER_REG,
                        clock_timestamp()
                      );
                    end if;
                  when 'COEQ' then  --Colaboradores,Equipo a cargo
                    
                      select coalesce(ID_PERFIL_PUESTO_JEFE,0) into STRICT l_id_perfil_puesto_jefe from enoc.plla_perfil_puesto 
                      where id_perfil_puesto=curP.id_perfil_puesto;

                      if l_id_perfil_puesto_jefe>0 then
                      
                         select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into STRICT l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                          insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                          ID_PARTICIPANTE_EVALUADOR,
                          ID_PARTICIPANTE,
                          ID_EVALUADOR,
                          ID_TIPO_EVALUADOR,
                          FINALIZADO,
                          ID_USER_REG,
                          FECHA_REG
                         )
                        SELECT (row_number() OVER ( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                          curP.id_participante,
                          a.id_participante,
                          curT.ID_TIPO_EVALUADOR,
                          0,
                          P_ID_USER_REG,
                          clock_timestamp()
                          from enoc.des_participante a
                          where  a.id_perfil_puesto=l_id_perfil_puesto_jefe
                          and a.id_participante not in (
                            SELECT id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                            where id_participante=curP.id_participante
                            and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                          );

                      /*
                        select count(1) into l_contar from enoc.des_participante where id_perfil_puesto=l_id_perfil_puesto_jefe;
                        
                        if l_contar=1 then
                          select id_participante into l_id_evaluador from enoc.des_participante where id_perfil_puesto=l_id_perfil_puesto_jefe;
                          
                          select count(1) into l_contar from enoc.DES_PARTICIPANTE_EVALUADOR
                          where ID_PARTICIPANTE=curP.id_participante
                          and ID_EVALUADOR=l_id_evaluador
                          and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR;
                          
                          if l_contar=0 then
                            select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0) + 1 into l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                            insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                              ID_PARTICIPANTE_EVALUADOR,
                              ID_PARTICIPANTE,
                              ID_EVALUADOR,
                              ID_TIPO_EVALUADOR,
                              FINALIZADO,
                              ID_USER_REG,
                              FECHA_REG
                            )values(
                              l_id_participante_evaluador,
                              curP.id_participante,
                              l_id_evaluador,
                              curT.ID_TIPO_EVALUADOR,
                              0,
                              P_ID_USER_REG,
                              sysdate
                            );
                          end if;
                        
                        end if;
                        */
                      end if;

                      
                      select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into STRICT l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                      insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                      ID_PARTICIPANTE_EVALUADOR,
                      ID_PARTICIPANTE,
                      ID_EVALUADOR,
                      ID_TIPO_EVALUADOR,
                      FINALIZADO,
                      ID_USER_REG,
                      FECHA_REG
                     )
                    SELECT (row_number() OVER ( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                      curP.id_participante,
                      a.id_participante,
                      curT.ID_TIPO_EVALUADOR,
                      0,
                      P_ID_USER_REG,
                      clock_timestamp()
                      from enoc.des_participante a,enoc.plla_perfil_puesto_jefe_fun pp
                      where  a.id_perfil_puesto=pp.id_perfil_puesto
                      and coalesce(pp.ID_PUESTO_PUESTO_JEFE,0) = curP.id_perfil_puesto
                      and a.id_participante not in (
                        SELECT id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                        where id_participante=curP.id_participante
                        and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                      );

                      
                  when 'JEIM' then  --Jefe inmediato
                  
                    
                    select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into STRICT l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                    insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                      ID_PARTICIPANTE_EVALUADOR,
                      ID_PARTICIPANTE,
                      ID_EVALUADOR,
                      ID_TIPO_EVALUADOR,
                      FINALIZADO,
                      ID_USER_REG,
                      FECHA_REG
                    )
                    SELECT (row_number() OVER ( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                      curP.id_participante,
                      a.id_participante,
                      curT.ID_TIPO_EVALUADOR,
                      0,
                      P_ID_USER_REG,
                      clock_timestamp()
                      from enoc.des_participante a,enoc.plla_perfil_puesto pp
                      where  a.id_perfil_puesto=pp.id_perfil_puesto
                      and coalesce(pp.ID_PERFIL_PUESTO_JEFE,0) = curP.id_perfil_puesto
                      and a.id_participante not in (
                        SELECT id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                        where id_participante=curP.id_participante
                        and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                      );

                    select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into STRICT l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                      insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                      ID_PARTICIPANTE_EVALUADOR,
                      ID_PARTICIPANTE,
                      ID_EVALUADOR,
                      ID_TIPO_EVALUADOR,
                      FINALIZADO,
                      ID_USER_REG,
                      FECHA_REG
                     )
                    SELECT (row_number() OVER ( ORDER BY a.id_participante ASC )) + l_id_participante_evaluador,
                      curP.id_participante,
                      a.id_participante,
                      curT.ID_TIPO_EVALUADOR,
                      0,
                      P_ID_USER_REG,
                      clock_timestamp()
                      from enoc.des_participante a,enoc.plla_perfil_puesto_jefe_fun pp
                      where  a.id_perfil_puesto=COALESCE(pp.ID_PUESTO_PUESTO_JEFE,0)
                      and coalesce(pp.id_perfil_puesto,0) = curP.id_perfil_puesto
                      and a.id_participante not in (
                        SELECT id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                        where id_participante=curP.id_participante
                        and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                      );
                when 'PAR' then  --PAR
                      
                      select count(1) into STRICT l_contar from enoc.DES_PARTICIPANTE_EVALUADOR where ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR and ID_PARTICIPANTE=curP.id_participante;
                      l_num_pares_eje:=0;
                      if l_contar<l_num_pares then
                        l_num_pares_eje:=l_num_pares-l_contar;
                        select coalesce(max(ID_PARTICIPANTE_EVALUADOR),0)  into STRICT l_id_participante_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR;
                        insert into enoc.DES_PARTICIPANTE_EVALUADOR(
                            ID_PARTICIPANTE_EVALUADOR,
                            ID_PARTICIPANTE,
                            ID_EVALUADOR,
                            ID_TIPO_EVALUADOR,
                            FINALIZADO,
                            ID_USER_REG,
                            FECHA_REG
                           )
                          SELECT (row_number() OVER ( ORDER BY x.id_participante ASC )) + l_id_participante_evaluador,
                          curP.id_participante,
                          x.id_participante,
                          curT.ID_TIPO_EVALUADOR,
                          0,
                          P_ID_USER_REG,
                          clock_timestamp()
                        FROM (
                            SELECT
                            a.id_participante
                            from enoc.des_participante a
                            where  a.id_perfil_puesto= curP.id_perfil_puesto
                            and a.id_participante<>curP.id_participante
                            and a.id_participante not in (
                              select id_evaluador from enoc.DES_PARTICIPANTE_EVALUADOR
                              where id_participante=curP.id_participante
                              and ID_TIPO_EVALUADOR=curT.ID_TIPO_EVALUADOR
                            ) 
-- -- -- --                             ORDER BY DBMS_RANDOM.VALUE
                            )x LIMIT (l_num_pares_eje);
                    end if;
                else
                    l_error:=0;
                end case;
              END;
              END LOOP;
            end if;
        END;
        END LOOP;

       
--         <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_desempeno_sp_generar_evaluador (P_ID_DESEMPENO bigint,P_ID_PARTICIPANTE bigint,P_ID_EVALUADOR bigint,P_ID_TIPO_EVALUADOR bigint,P_ID_PROGRAMA_ESTUDIO bigint,P_ID_USER_REG bigint,P_ERROR OUT bigint, P_MSGERROR out text) FROM PUBLIC;
