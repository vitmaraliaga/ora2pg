-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_desempeno,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_desempeno_sp_fb_validar_fecha_reunion (P_ID_EVALUADOR_PARTICIP bigint,P_FECHA_REUNION timestamp(0),P_ERROR OUT bigint, P_MSGERROR out text) AS $body$
DECLARE

       l_contar bigint;
       l_error bigint:=0;
       l_msgerror varchar(200):='';
       l_id_evaluador bigint;
       l_id_participante bigint;
       l_id_desempeno bigint;
       l_fecha_fin timestamp(0);
       l_tiempo bigint;
       l_fecha timestamp(0);
       l_id_trabajadorev bigint;
       l_id_trabajadorpa bigint;

BEGIN
        SELECT A.ID_EVALUADOR, A.ID_PARTICIPANTE ,B.ID_DESEMPENO, B.ID_TRABAJADOR
        INTO STRICT l_id_evaluador,l_id_participante,l_id_desempeno,l_id_trabajadorev
        FROM ENOC.DES_FB_EVALUADOR_PARTICIP A, ENOC.DES_FB_EVALUADOR B
        WHERE A.ID_EVALUADOR=B.ID_EVALUADOR
        AND A.ID_EVALUADOR_PARTICIP=P_ID_EVALUADOR_PARTICIP;

        select id_trabajador into STRICT l_id_trabajadorpa from enoc.des_participante  where id_participante= l_id_participante;

        select coalesce(FEEDBACK_TIEMPO,0) into STRICT l_tiempo from enoc.DES_DESEMPENO where id_desempeno=l_id_desempeno;

        select 
        to_date(to_char(P_FECHA_REUNION,'YYYY-MM-DD'),'YYYY-MM-DD'),
        P_FECHA_REUNION + l_tiempo / 1440
        into STRICT  
        l_fecha,
        l_fecha_fin 
;
        
        --vacacion evaluador
        select count(1) into STRICT l_contar from enoc.PLLA_PERIODO_VAC_TRAB a,enoc.PLLA_ROL_VACACIONAL b
        where a.ID_PERIODO_VAC_TRAB=b.ID_PERIODO_VAC_TRAB
        and a.id_trabajador=l_id_trabajadorev
        and l_fecha between FECHA_INI and FECHA_FIN
        and b.condicion='P';

        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Evaluador tiene programadas sus vacaciones en esta fecha. Por favor elija una nueva fecha';
--             GOTO salida;
        end if;

        --vacacion participante
        select count(1) into STRICT l_contar from enoc.PLLA_PERIODO_VAC_TRAB a,enoc.PLLA_ROL_VACACIONAL b
        where a.ID_PERIODO_VAC_TRAB=b.ID_PERIODO_VAC_TRAB
        and a.id_trabajador=l_id_trabajadorpa
        and l_fecha between FECHA_INI and FECHA_FIN
        and b.condicion='P';

        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Participante tiene programadas sus vacaciones en esta fecha. Por favor elija una nueva fecha';
--             GOTO salida;
        end if;

        
         --lic_permi evaluador
        select count(1) into STRICT l_contar  from (
          SELECT id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorev
          and l_fecha between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in ('00','04')
          and PERIODO ='D' 
          
union

          SELECT id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorev
          and P_FECHA_REUNION between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in ('00','04')
          and PERIODO ='H' 
        ) alias3;

        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Evaluador tiene una Licencia/Permiso registrada en la fecha seleccionada. Por favor elija una nueva fecha';
--             GOTO salida;
        end if;

         --lic_permi participante
        select count(1) into STRICT l_contar  from (
          SELECT id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorpa
          and l_fecha between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in ('00','04')
          and PERIODO ='D' 
          
union

          SELECT id_licencia_permiso from enoc.VW_LICENCIA_PERMISO_ASIST
          where id_trabajador=l_id_trabajadorpa
          and P_FECHA_REUNION between FECHA_DESDE and FECHA_HASTA
          and ID_ESTADO_LICA_PER not in ('00','04')
          and PERIODO ='H' 
        ) alias3;

        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Participante tiene una Licencia/Permiso registrada en la fecha seleccionada. Por favor elija una nueva fecha';
--             GOTO salida;
        end if;

        --feriado
        select count(1) into STRICT l_contar from ENOC.plla_feriados where FECHA=l_fecha;
        if l_contar>0 then
            l_error:=1;
            l_msgerror:='La fecha seleccionada es un feriado. Por favor elija una nueva fecha';
--             GOTO salida;
        end if;

        --cruce del evaluador
        select count(1) into STRICT l_contar from ENOC.DES_FB_EVALUADOR_PARTICIP
        where id_evaluador=l_id_evaluador
        and (P_FECHA_REUNION between FECHA_REUNION and FECHA_REUNION + l_tiempo / 1440) 
        and ID_EVALUADOR_PARTICIP<>P_ID_EVALUADOR_PARTICIP;

        if l_contar>0 then
            l_error:=1;
            l_msgerror:='Evaluador ya tiene programado en la fecha y hora seleccionada ';
--             GOTO salida;
        end if;

        --cruce del evaluador como participante
        select count(1) into STRICT l_contar from enoc.DES_PARTICIPANTE where id_desempeno=l_id_desempeno and id_trabajador=l_id_trabajadorev;

        if l_contar>0 then
          select id_participante into STRICT l_id_participante from enoc.DES_PARTICIPANTE where id_desempeno=l_id_desempeno and id_trabajador=l_id_trabajadorev;

          select count(1) into STRICT l_contar from ENOC.DES_FB_EVALUADOR_PARTICIP
          where id_participante=l_id_participante
          and (P_FECHA_REUNION between FECHA_REUNION and FECHA_REUNION + l_tiempo / 1440) 
          and ID_EVALUADOR_PARTICIP<>P_ID_EVALUADOR_PARTICIP;

          if l_contar>0 then
              l_error:=1;
              l_msgerror:='Evaluador ya tiene programado como participante en la fecha y hora seleccionada';
--               GOTO salida;
          end if;
        end if;

--         <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_desempeno_sp_fb_validar_fecha_reunion (P_ID_EVALUADOR_PARTICIP bigint,P_FECHA_REUNION timestamp(0),P_ERROR OUT bigint, P_MSGERROR out text) FROM PUBLIC;
