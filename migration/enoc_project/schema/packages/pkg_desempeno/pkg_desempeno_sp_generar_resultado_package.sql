-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = enoc,pkg_desempeno,public;




CREATE OR REPLACE PROCEDURE enoc.pkg_desempeno_sp_generar_resultado (P_ID_CUESTIONARIO bigint,P_COD_TIPO_INT text,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

       l_contar bigint:=0;
       l_error bigint:=0;
       l_msgerror varchar(200):='';
       l_id_entidad bigint;
       l_id_desempeno bigint;
       l_id_tipo_eval_instrumento bigint;
       l_tipo varchar(5);
       l_id_persona bigint;
       l_id_instrumento bigint;
       l_id_sala bigint;
       l_id_evaluador bigint;
       l_id_participante_evaluador bigint;
       l_id_tipo_evaluador bigint;
       l_cant_puntaje bigint;
       l_id_participante bigint;

BEGIN 
      
        SELECT ID_INSTRUMENTO,ID_SALA,ID_PERSONA,ID_EVALUADOR INTO STRICT l_id_instrumento,l_id_sala,l_id_persona,l_id_evaluador FROM LUCAS.INSTRUMENTO_CUESTIONARIO WHERE ID_CUESTIONARIO=P_ID_CUESTIONARIO;
        --calculo por persona
        LUCAS.pcd_calc_cuest_person_likert(
          l_id_instrumento,
          l_id_sala,
          l_id_persona
        );

        
       
         
        SELECT a.id_desempeno, a.id_entidad INTO STRICT l_id_desempeno,l_id_entidad from enoc.des_desempeno a, enoc.des_participante b 
        where a.id_desempeno=b.id_desempeno
        and b.id_participante=l_id_evaluador;

        
        
        
        SELECT count(1) INTO STRICT l_contar 
        from enoc.des_participante a, moises.trabajador t ,ENOC.DES_PARTICIPANTE_EVALUADOR P
        where a.id_trabajador=t.id_trabajador
        AND A.ID_PARTICIPANTE=P.ID_PARTICIPANTE
        AND P.ID_EVALUADOR=l_id_evaluador
        and t.ID_PERSONA=l_id_persona
        and t.id_entidad=l_id_entidad
        AND a.ID_desempeno=l_id_desempeno;

        if l_contar = 0  then
          l_error:=1;
          l_msgerror:='1-No hay evaluador';
--           goto salida;
        end if;

         
        SELECT p.ID_PARTICIPANTE_EVALUADOR,p.ID_TIPO_EVALUADOR, p.id_participante INTO STRICT l_id_participante_evaluador,l_id_tipo_evaluador,l_id_participante
        from enoc.des_participante a, moises.trabajador t ,ENOC.DES_PARTICIPANTE_EVALUADOR P
        where a.id_trabajador=t.id_trabajador
        AND A.ID_PARTICIPANTE=P.ID_PARTICIPANTE
        AND P.ID_EVALUADOR=l_id_evaluador
        and t.ID_PERSONA=l_id_persona
        and t.id_entidad=l_id_entidad
        AND a.ID_desempeno=l_id_desempeno;

        
        SELECT count(1) into STRICT  l_contar FROM ENOC.DES_PARTICIPANTE_EVALUADOR A, ENOC.DES_DESEMPENO_TIPO_EVAL B
        WHERE B.ID_DESEMPENO=l_id_desempeno
        AND A.ID_TIPO_EVALUADOR=B.ID_TIPO_EVALUADOR
        AND A.ID_PARTICIPANTE_EVALUADOR=l_id_participante_evaluador
        AND B.ID_SALA=l_id_sala
        AND A.ID_EVALUADOR=l_id_evaluador
        AND B.ID_TIPO_EVALUADOR=l_id_tipo_evaluador
        and B.id_instrumento=l_id_instrumento;

     
        if l_contar = 0 or l_contar > 1  then
          l_error:=1;
          l_msgerror:='1-No procesa';
--           goto salida;
        end if;

        select  round((coalesce(avg(x.puntaje_con_formula),0))::numeric,0)  INTO STRICT l_cant_puntaje
        from lucas.instrumento_cuestionario  X
        where X.id_instrumento= l_id_instrumento
        and X.id_persona=l_id_persona
        AND X.ID_SALA=l_id_sala
        AND X.ID_EVALUADOR IN (
            SELECT Y.id_evaluador from  enoc.DES_PARTICIPANTE_EVALUADOR Y
            WHERE ID_PARTICIPANTE_EVALUADOR = l_id_participante_evaluador
        );

        update ENOC.DES_PARTICIPANTE_EVALUADOR set 
        finalizado=1,
        PUNTAJE=l_cant_puntaje,
        TIPO_EVAL='Q',
        ID_USER_MOD=l_id_persona, 
        FECHA_MOD=clock_timestamp()
        where  ID_PARTICIPANTE_EVALUADOR = l_id_participante_evaluador;

        enoc.CALL pkg_desempeno_sp_generar_puntaje(
            l_id_participante,
            'P',
            l_id_persona,
            l_error,
            l_msgerror
          );
--          <<salida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
      END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE enoc.pkg_desempeno_sp_generar_resultado (P_ID_CUESTIONARIO bigint,P_COD_TIPO_INT text,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
