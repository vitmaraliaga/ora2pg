-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE VIEW vw_order_purchases (id_entidad, id_depto, id_anho, id_mes, id_pedido, id_persona, pid_pedido, id_tipopedido, nombre_pedido, nombre_actividad, id_areaorigen, nombre_areaorigen, id_areadestino, nombre_areadestino, numero, acuerdo, fecha_pedido, fecha_entrega, motivo, estado, fecha_registro, email, id_departamento, tipo_articulo, id_dexec, id_paso_actual, id_paso_next, codigo_paso, serie, nro_comprobante, importe, importe_me, id_proveedor, provedor, tramite_pago, id_actividad, ruc, comentario, id_tramite_pago, id_pcompra, id_compra, user_paso, fecha_paso, estado_voucher_compra, arreglo, id_task, color_task, codigo_task, id_proceso, es_ret_det, es_servicio, estado_compra, estado_compra_orden, id_orden, pendiente, fecha_pecompra, id_pbancaria, codigo_tramite_pago) AS SELECT A.ID_ENTIDAD,
          A.ID_DEPTO,
          A.ID_ANHO,
          A.ID_MES,
          A.ID_PEDIDO,
          A.ID_PERSONA,
          'P' || A.NUMERO AS PID_PEDIDO,
          A.ID_TIPOPEDIDO,
          (SELECT NVL (X.NOMBRE, '') AS NOMBRE_PEDIDO
             FROM TIPO_PEDIDO X
            WHERE X.ID_TIPOPEDIDO = A.ID_TIPOPEDIDO)
             AS NOMBRE_PEDIDO,
          (SELECT NVL (X.NOMBRE, '') AS NOMBRE_ACTIVIDAD
             FROM PSTO_ACTIVIDAD X
            WHERE X.ID_ACTIVIDAD = A.ID_ACTIVIDAD)
             AS NOMBRE_ACTIVIDAD,
          A.ID_AREAORIGEN,
          (SELECT NVL (Y.ID_DEPTO || ' - ' || X.NOMBRE, '') AS AREA
             FROM ORG_AREA X, ORG_SEDE_AREA Y
            WHERE X.ID_AREA = Y.ID_AREA AND Y.ID_SEDEAREA = A.ID_AREAORIGEN)
             AS NOMBRE_AREAORIGEN,
          A.ID_AREADESTINO,
          (SELECT NVL (Y.ID_DEPTO || ' - ' || X.NOMBRE, '') AS AREA
             FROM ORG_AREA X, ORG_SEDE_AREA Y
            WHERE X.ID_AREA = Y.ID_AREA AND Y.ID_SEDEAREA = A.ID_AREADESTINO)
             AS NOMBRE_AREADESTINO,
          A.NUMERO,
          A.ACUERDO,
          (CASE
              WHEN G.ID_PEDIDO IS NOT NULL THEN G.FECHA_PEDIDO
              ELSE A.FECHA_PEDIDO
           END)
             AS FECHA_PEDIDO,
          (CASE
              WHEN G.ID_PEDIDO IS NOT NULL THEN G.FECHA_ENTREGA
              ELSE A.FECHA_ENTREGA
           END)
             AS FECHA_ENTREGA,
          A.MOTIVO,
          A.ESTADO,
          A.FECHA_PEDIDO AS FECHA_REGISTRO,
          B.EMAIL,
          (SELECT B.ID_DEPTO AS AREA
             FROM ORG_AREA A, ORG_SEDE_AREA B
            WHERE A.ID_AREA = B.ID_AREA AND B.ID_SEDEAREA = A.ID_AREAORIGEN)
             AS ID_DEPARTAMENTO,
          (CASE
              WHEN A.ID_AREADESTINO = 45
              THEN
                    (SELECT DISTINCT
                            PKG_INVENTORIES.FC_ARTICULO (X.ID_ARTICULO)
                       FROM PEDIDO_DETALLE X
                      WHERE     X.ID_PEDIDO = A.ID_PEDIDO
                            AND FC_CODIGO_ARTICULO_CODIGO (X.ID_ARTICULO,
                                                           A.ID_ANHO) =
                                   '32-001')
                 || '|'
                 || (SELECT DISTINCT
                            PKG_INVENTORIES.FC_ARTICULO (X.ID_ARTICULO)
                       FROM PEDIDO_DETALLE X
                      WHERE     X.ID_PEDIDO = A.ID_PEDIDO
                            AND FC_CODIGO_ARTICULO_CODIGO (X.ID_ARTICULO,
                                                           A.ID_ANHO) =
                                   '32-002')
                 || '|'
                 || (SELECT DISTINCT
                            PKG_INVENTORIES.FC_ARTICULO (X.ID_ARTICULO)
                       FROM PEDIDO_DETALLE X
                      WHERE     X.ID_PEDIDO = A.ID_PEDIDO
                            AND FC_CODIGO_ARTICULO_CODIGO (X.ID_ARTICULO,
                                                           A.ID_ANHO) =
                                   '32-003')
              ELSE
                 ''
           END)
             AS TIPO_ARTICULO,
          A.ID_DEXEC,
          (SELECT X.ID_PASO_ACTUAL
             FROM LAMB_PROCESS_EXEC_PASO X
            WHERE X.ID_DEXEC = A.ID_DEXEC)
             ID_PASO_ACTUAL,
          (SELECT X.ID_PASO_NEXT
             FROM LAMB_PROCESS_EXEC_PASO X
            WHERE X.ID_DEXEC = A.ID_DEXEC)
             ID_PASO_NEXT,
          (SELECT Y.CODIGO
             FROM LAMB_PROCESS_EXEC_PASO X
                  JOIN LAMB_PROCESS_PASO Y ON X.ID_PASO_ACTUAL = Y.ID_PASO
            WHERE X.ID_DEXEC = A.ID_DEXEC)
             AS CODIGO_PASO,
          NVL (E.SERIE, D.SERIE) AS SERIE,
          NVL (E.NUMERO, D.NUMERO) AS NRO_COMPROBANTE,
          NVL (
             (CASE
                 WHEN F.ID_PEDIDO IS NOT NULL THEN D.IMPORTE
                 WHEN E.ID_COMPRA IS NOT NULL THEN E.IMPORTE
                 ELSE D.IMPORTE
              END),
             0)
             AS IMPORTE,
          NVL (
             (CASE
                 WHEN F.ID_PEDIDO IS NOT NULL THEN D.IMPORTE_ME
                 WHEN E.ID_COMPRA IS NOT NULL THEN E.IMPORTE_ME
                 ELSE D.IMPORTE_ME
              END),
             0)
             AS IMPORTE_ME,
          NVL (
             (CASE
                 WHEN G.ID_PROVEEDOR IS NOT NULL THEN G.ID_PROVEEDOR
                 WHEN E.ID_PROVEEDOR IS NOT NULL THEN E.ID_PROVEEDOR
                 ELSE D.ID_PROVEEDOR
              END),
             0)
             AS ID_PROVEEDOR,
          (SELECT UPPER (NVL (X.PATERNO || ' ', '')|| NVL (X.MATERNO || ', ', ''))|| X.NOMBRE--COALESCE (X.NOMBRE, X.PATERNO, X.MATERNO)
             FROM MOISES.PERSONA X
            WHERE X.ID_PERSONA =
                     NVL (
                        (CASE
                            WHEN G.ID_PROVEEDOR IS NOT NULL
                            THEN
                               G.ID_PROVEEDOR
                            WHEN E.ID_PROVEEDOR IS NOT NULL
                            THEN
                               E.ID_PROVEEDOR
                            ELSE
                               D.ID_PROVEEDOR
                         END),
                        0) AND ROWNUM = 1)
             AS PROVEDOR,
          /*(CASE D.TRAMITE_PAGO
              WHEN '1' THEN 'Pago al Proveedor'
              WHEN '2' THEN 'Reembolso al Funcionario'
              WHEN '3' THEN 'Rendicion'
              WHEN '4' THEN 'Fondo Fijo'
              ELSE ' ' 
           END)
             AS TRAMITE_PAGO,*/
         CTP.NOMBRES AS TRAMITE_PAGO,
          D.ID_ACTIVIDAD,
          /*(SELECT MIN(X.ID_RUC)
             FROM MOISES.PERSONA_JURIDICA X
            WHERE X.ID_PERSONA =
                     NVL (
                        (CASE
                            WHEN G.ID_PROVEEDOR IS NOT NULL
                            THEN
                               G.ID_PROVEEDOR
                            WHEN E.ID_PROVEEDOR IS NOT NULL
                            THEN
                               E.ID_PROVEEDOR
                            ELSE
                               D.ID_PROVEEDOR
                         END),
                        0)
           UNION ALL
           SELECT MIN(X.NUM_DOCUMENTO)
             FROM MOISES.PERSONA_NATURAL X
            WHERE     X.ID_PERSONA =
                         NVL (
                            (CASE
                                WHEN G.ID_PROVEEDOR IS NOT NULL
                                THEN
                                   G.ID_PROVEEDOR
                                WHEN E.ID_PROVEEDOR IS NOT NULL
                                THEN
                                   E.ID_PROVEEDOR
                                ELSE
                                   D.ID_PROVEEDOR
                             END),
                            0)
                  AND X.ID_TIPODOCUMENTO = 6)*/
                  (SELECT DISTINCT X.ID_RUC FROM (         
            SELECT ID_RUC,ID_PERSONA FROM MOISES.PERSONA_JURIDICA 
            UNION ALL
            SELECT NUM_DOCUMENTO,ID_PERSONA FROM MOISES.PERSONA_DOCUMENTO WHERE ID_TIPODOCUMENTO = 6
            ) X WHERE X.ID_PERSONA = NVL (
                            (CASE WHEN G.ID_PROVEEDOR IS NOT NULL
                                THEN G.ID_PROVEEDOR
                                WHEN E.ID_PROVEEDOR IS NOT NULL
                                THEN E.ID_PROVEEDOR
                                ELSE D.ID_PROVEEDOR
                             END),
                            0)
                            )
             AS RUC,
          A.COMENTARIO,
          D.TRAMITE_PAGO AS ID_TRAMITE_PAGO,
          D.ID_PCOMPRA,
          D.ID_COMPRA,
          PKG_PURCHASES_ORDERS.FC_USER_PASO (A.ID_DEXEC, 'RA002') USER_PASO,
          PKG_PURCHASES_ORDERS.FC_FECHA_PASO (A.ID_DEXEC, 'RA002')
             AS FECHA_PASO,
          PKG_PURCHASES_ORDERS.FC_ESTADO_VOUCHER_COMPRA (D.ID_COMPRA)
             AS ESTADO_VOUCHER_COMPRA,
          AR.ID_ARREGLO,
          A.ID_TASK,
          PKG_PURCHASES_ORDERS.FC_COLOR_TASK (A.ID_TASK) AS COLOR_TASK,
          PT.CODIGO AS CODIGO_TASK,
          PT.ID_PROCESO,
          E.ES_RET_DET,
          E.ES_SERVICIO,
          E.ESTADO AS ESTADO_COMPRA,
          G.ESTADO AS ESTADO_COMPRA_ORDEN,
          G.ID_ORDEN,
          A.PENDIENTE,
          D.FECHA as FECHA_PECOMPRA,
          NVL(A.ID_PBANCARIA, D.ID_PBANCARIA) AS ID_PBANCARIA,
          CTP.CODIGO AS CODIGO_TRAMITE_PAGO
     FROM PEDIDO_REGISTRO A
          JOIN USERS B ON A.ID_PERSONA = B.ID
          JOIN TIPO_PEDIDO C ON A.ID_TIPOPEDIDO = C.ID_TIPOPEDIDO
          JOIN LAMB_PROCESS_TASK PT ON PT.ID_TASK = A.ID_TASK
          LEFT JOIN PEDIDO_COMPRA D ON A.ID_PEDIDO = D.ID_PEDIDO
          LEFT JOIN COMPRA E ON D.ID_COMPRA = E.ID_COMPRA
          LEFT JOIN PEDIDO_COTIZACION F
             ON F.ID_PEDIDO = A.ID_PEDIDO AND F.ES_ELEGIDO = 'S'
          LEFT JOIN COMPRA_ORDEN G ON G.ID_PEDIDO = A.ID_PEDIDO
          LEFT JOIN ARREGLO AR ON D.ID_COMPRA = AR.ID_ORIGEN AND AR.ID_TIPOORIGEN = 3
          LEFT JOIN COMPRA_TRAMITE_PAGO CTP ON D.TRAMITE_PAGO = CTP.ID_TRAMITE_PAGO;

