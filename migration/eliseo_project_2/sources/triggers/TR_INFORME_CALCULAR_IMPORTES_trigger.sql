-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS tr_informe_calcular_importes ON informe_ayuda CASCADE;
CREATE OR REPLACE FUNCTION eliseo.trigger_fct_tr_informe_calcular_importes() RETURNS trigger AS $BODY$
DECLARE
TIENE_VARIABLE VARCHAR2(1);
TIPO_VALOR VARCHAR2(1);
VALOR NUMBER;
IMPORTE_AYUDA NUMBER;
ID_CVARIABLE NUMBER;
ID_CONCEPTOAPS VARCHAR2(50);
ES_CONCEPTOAPS_PERSONA VARCHAR2(1):='0';
CONTAR NUMBER :=0;
BEGIN
	
--	EL calculo se hace desde laravel
	RETURN;
	
	VALOR:=0;
	IMPORTE_AYUDA:=0;
	ID_CVARIABLE:=:NEW.ID_CVARIABLE;
	ID_CONCEPTOAPS:=:NEW.ID_CONCEPTOAPS;
	IF :NEW.ES_CONCEPTOAPS_PERSONA IS NOT NULL THEN
		ES_CONCEPTOAPS_PERSONA := :NEW.ES_CONCEPTOAPS_PERSONA;
	END IF;
	IF ID_CONCEPTOAPS IS NOT NULL THEN
		IF ES_CONCEPTOAPS_PERSONA = '1' THEN 
			SELECT COUNT(1),MAX(ICP.TIENE_VARIABLE),MAX(ICP.TIPO_VALOR),MAX(ICP.VALOR) INTO CONTAR,TIENE_VARIABLE,TIPO_VALOR,VALOR
			FROM ELISEO.INFORME_CONCEPTOAPS_PERSONA ICP,
			ELISEO.INFORME I
			WHERE ICP.ID_PERSONA = I.ID_PERSONA AND ICP.ID_ENTIDAD = I.ID_ENTIDAD 
				AND ICP.ID_ANHO = I.ID_ANHO 
				AND ICP.ID_MES = I.ID_MES 
			 AND ICP.ID_CONCEPTOAPS =:NEW.ID_CONCEPTOAPS
				AND I.ID_INFORME = :NEW.ID_INFORME;
		END IF;
		IF CONTAR = 0 THEN 
			SELECT TIENE_VARIABLE,TIPO_VALOR,VALOR INTO TIENE_VARIABLE,TIPO_VALOR,VALOR
			FROM  ELISEO.INFORME_CONCEPTOAPS_CONFIG 
			WHERE ID_CONCEPTOAPS =:NEW.ID_CONCEPTOAPS;
		END IF;
		IF TIENE_VARIABLE='1' THEN 
			IF ID_CVARIABLE IS NOT NULL
			THEN 
				SELECT VALOR INTO VALOR FROM ELISEO.CONCEPTO_CONFIG_VARIABLE
				WHERE ID_CVARIABLE  =:NEW.ID_CVARIABLE;
			END IF;
		END IF;
		IF TIPO_VALOR='P' THEN 
			IMPORTE_AYUDA:=(VALOR/100)*:NEW.IMPORTE_DOC;
		ELSE
			IMPORTE_AYUDA:=VALOR;
		END IF;
		:NEW.IMPORTE_AYUDA:=IMPORTE_AYUDA;
		:NEW.IMPORTE_OBRERO:=:NEW.IMPORTE_DOC-IMPORTE_AYUDA;
	END IF;

EXCEPTION
WHEN OTHERS THEN
-- Consider logging the error and then re-raise
RAISE;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION eliseo.trigger_fct_tr_informe_calcular_importes() FROM PUBLIC;

DROP TRIGGER IF EXISTS tr_informe_calcular_importes ON informe_ayuda;
CREATE TRIGGER tr_informe_calcular_importes
	BEFORE INSERT OR UPDATE ON informe_ayuda FOR EACH ROW
	EXECUTE PROCEDURE eliseo.trigger_fct_tr_informe_calcular_importes();

