-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

PROCEDURE        SPC_USER_SESSION_LOGIN_REMAD (
    -- spc_user_session_login_portal_padre_mobile
    -- LOGIN PARA LA AUTENTICACIÓN DEL SISTEMA REMAD
    
    p_id_persona       int,
    p_token       varchar2,
    p_token_oauth varchar2,
    p_id_entidad OUT number,
    p_error     OUT number,
    p_msjerror  OUT varchar2,
    p_caduca varchar2 default 'S'
)
IS
  -- l_num_documento varchar2(100);
  l_entidad number;
  -- n_entidad number;
  l_dpto varchar2(10);
  l_contar number:=0;
  -- l_activo varchar2(1);
  -- l_existe number;
  -- l_id_almacen number;
  l_cant INT;

  l_error number:=0;
  l_msjerror varchar2(200);

BEGIN

	-- Validar que la persona tenga una entidad asignada por defecto en el LAMB.
    SELECT COUNT(1), max(X.id_entidad) into l_contar, l_entidad FROM CONTA_ENTIDAD_USUARIO X WHERE X.ID_PERSONA = p_id_persona AND X.ESTADO = 1;

    IF l_contar = 0 THEN -- Si el usuario no tiene asignado una entidad le asignamos otra. 
        l_entidad := 17112;
    END IF;
   
    -- Validar que la persona tenga una departamento asignado por defecto en el LAMB.
    SELECT count(1), max(A.ID_DEPTO) into l_contar, l_dpto
        FROM LAMB_USERS_DEPTO A
        INNER JOIN CONTA_ENTIDAD_DEPTO B ON A.ID_ENTIDAD = B.ID_ENTIDAD AND A.ID_DEPTO = B.ID_DEPTO
    WHERE A.ID = p_id_persona
    AND A.ID_ENTIDAD = l_entidad
    AND A.ESTADO = 1
    AND B.ES_EMPRESA = '1';
   
    IF l_contar = 0 THEN -- Si el usuario no tiene asignado una departamento le asignamos otra. 
        l_dpto := '0';
    END IF;
   
    
    /*
    -- Validar que la persona tenga una entidad asignada por defecto en el LAMB.
    SELECT COUNT(1), max(X.id_entidad) into l_contar, l_entidad FROM CONTA_ENTIDAD_USUARIO X WHERE X.ID_PERSONA = p_id_persona AND X.ESTADO = 1;

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado una entidad por defecto en el LAMB.';
        goto salida_rapida;
    ELSIF l_contar > 1 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario tiene asignado más de una entidad por defecto en el LAMB.';
        goto salida_rapida;
    END IF;
    */
    /*
    -- Validar que la persona tenga una departamento asignado por defecto en el LAMB.
    SELECT count(1), max(A.ID_DEPTO) into l_contar, l_dpto
        FROM LAMB_USERS_DEPTO A INNER JOIN CONTA_ENTIDAD_DEPTO B ON A.ID_ENTIDAD = B.ID_ENTIDAD AND A.ID_DEPTO = B.ID_DEPTO
    WHERE A.ID = p_id_persona
    AND A.ID_ENTIDAD = l_entidad
    AND A.ESTADO = 1
    AND B.ES_EMPRESA = '1';

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
        goto salida_rapida;
    ELSIF l_contar > 1 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario tiene asignado más de un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
        goto salida_rapida;
    END IF;
    */
    /*
    -- Validar que la persona tenga un rol asignado por defecto en el LAMB.
    SELECT count(1) into l_contar FROM LAMB_USUARIO_ROL WHERE ID_PERSONA = p_id_persona AND ID_ENTIDAD = l_entidad;

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado un rol por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
        goto salida_rapida;
    ELSIF l_contar > 1 THEN
        -- l_error := 1;
        -- l_msjerror := 'Alto. El usuario tiene asignado más de un rol por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
        -- goto salida_rapida;
    END IF;
    */
    -- if l_error=0 then   
        /*
        -- Validar que todos los modulos que tiene acceso el usuario tenga temas.
        SELECT COUNT(1) INTO l_cant FROM LAMB_MODULO M 
            WHERE ID_MODULO IN (SELECT ID_MODULO 
                                FROM LAMB_ROL_MODULO N
                                WHERE EXISTS  ( SELECT 1 FROM LAMB_USUARIO_ROL R WHERE R.ID_ROL = N.ID_ROL AND ID_PERSONA = p_id_persona)
                                AND EXISTS ( SELECT 1 FROM LAMB_MODULO U WHERE U.NIVEL = '1' AND U.ID_MODULO = N.ID_MODULO) )
            AND NOT EXISTS (SELECT 1 FROM LAMB_ENTIDAD_DEPTO_CONFIG T WHERE T.ID_MODULO = M.ID_MODULO AND T.ID = p_id_persona);
        */
        /*
        IF l_cant > 0 THEN
            PKG_SETUP.SP_ASSIGN_THEMES(p_id_persona,l_entidad,l_dpto);
        END IF;
        */
		-- Valor que el padre tenga un cotrato a un colegio en especifico.
		/*
		SELECT COUNT(1), MAX(B.ID_CAMPO), MAX(B.ID_DEPTO) INTO l_contar, l_entidad, l_dpto
		FROM JOSE.MAT_CONTRATO A 
		INNER JOIN JOSE.SCHOOL_INSTITUCION B ON A.ID_INSTITUCION =B.ID_INSTITUCION 
		WHERE A.ID_RESP_FINANCIERO =p_id_persona
		-- AND A.ESTADO ='1'
		AND ROWNUM=1 
		ORDER BY FECHA DESC;
		
		IF l_contar = 0 THEN
	        l_error := 1;
	        l_msjerror := 'Alto. El usuario no es responsable financiero de ningún contrato.';
	        goto salida_rapida;
	    END IF;
	   */
        select count(ID_USER) into l_cant
        from USERS_SESSION where token = p_token and status = '1';

        IF l_cant > 0 THEN
            update USERS_SESSION set LAST_UPDATE = current_timestamp where token = p_token and status = '1';
        ELSE
            insert into USERS_SESSION
                (TOKEN,ID_USER,ID_ENTIDAD,ID_DEPTO,DATE_CREATE,LAST_UPDATE,STATUS,TOKEN_OAUTH,CADUCA) 
            values  (p_token,p_id_persona,l_entidad,l_dpto,current_timestamp,current_timestamp,'1',p_token_oauth,p_caduca);      
        END IF;

     <<salida_rapida>>
    p_id_entidad := l_entidad;
    p_error:=l_error;
    p_msjerror:=l_msjerror;

END;

