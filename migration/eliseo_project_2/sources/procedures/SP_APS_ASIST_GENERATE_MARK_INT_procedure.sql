-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

PROCEDURE sp_aps_asist_generate_mark_int(
    v_year  IN NUMBER,
    v_month IN NUMBER,
    v_day   IN NUMBER )
AS
  v_iCodUsuario          NUMBER(10,0);
  v_cantidad_marcaciones NUMBER(10,0);
  v_fechahora            DATE;
  v_FECHA                DATE;
  v_HORARIOENTRADA       DATE;
  v_HORARIOSALIDA        DATE;
  v_INICIOREFRIGERIO     DATE;
  v_FINREFRIGERIO        DATE;
  v_ID_HORARIOENTRADA    NUMBER(10,0);
  v_ID_HORARIOSALIDA     NUMBER(10,0);
  v_ID_INICIOREFRIGERIO  NUMBER(10,0);
  v_ID_FINREFRIGERIO     NUMBER(10,0);
  v__id_worker           NUMBER(10,0);
  v__id_min_worker       NUMBER(10,0);
  v__id_max_worker       NUMBER(10,0);
  v__iCodUsuario         NUMBER(10,0);
  v__id                  NUMBER(10,0);
  v__id_min              NUMBER(10,0);
  v__id_max              NUMBER(10,0);
  v__fechahora           DATE;
  v__estado              NUMBER(10,0);
  v__id_lm               NUMBER(10,0);
  v__puntaje_lm          NUMBER(10,0);
  v__mark_lm             NUMBER(10,0);
  v__id_temp             NUMBER(10,0);
  v_tiene_registros      NUMBER(10,0);
  v_fecha_text           VARCHAR2(10);
  v_cantidad           NUMBER(10,0);
BEGIN
  DELETE FROM tt_listmarks;
  v_fecha_text           := SUBSTR('0000' || UTILS.CONVERT_TO_VARCHAR2(v_year,4), -4, 4) || '-' || SUBSTR('00' || UTILS.CONVERT_TO_VARCHAR2(v_month,2), -2, 2) || '-' || SUBSTR('00' || UTILS.CONVERT_TO_VARCHAR2(v_day,2), -2, 2) ;
  v_iCodUsuario          := 42924612 ;
  v_cantidad_marcaciones := 4 ;
  --Create temp table from permanent table
  DELETE FROM tt_temptable;
  UTILS.IDENTITY_RESET('tt_temptable');
  
  v_cantidad := 0;
  SELECT count(*) into v_cantidad
  FROM APS_ASIST_MARCACIONES
  WHERE utils.datepart('YEAR', fechahora) = v_year
  AND utils.datepart('MONTH', fechahora)  = v_month
  AND utils.datepart('DAY', fechahora)    = v_day;
  
if v_cantidad >0 then 
  INSERT INTO tt_temptable
  SELECT utils.identity('tt_temptable', 1, 1) ,
    iCodUsuario ,
    fechahora ,
    0 estado
  FROM APS_ASIST_MARCACIONES
  WHERE utils.datepart('YEAR', fechahora) = v_year
  AND utils.datepart('MONTH', fechahora)  = v_month
  AND utils.datepart('DAY', fechahora)    = v_day
  ORDER BY iCodUsuario,
    FechaHora;
  DELETE FROM tt_listWorker;
  UTILS.IDENTITY_RESET('tt_listWorker');
  INSERT
  INTO tt_listWorker
    (SELECT utils.identity('tt_listWorker', 1, 1) ,
        iCodUsuario
      FROM tt_temptable
      GROUP BY iCodUsuario
    );
  SELECT MIN(id) ,
    MAX(id)
  INTO v__id_min_worker,
    v__id_max_worker
  FROM tt_listWorker ;
  WHILE v__id_min_worker <= v__id_max_worker
  LOOP
    BEGIN
      SELECT iCodUsuario
      INTO v_iCodUsuario
      FROM tt_listWorker
      WHERE id = v__id_min_worker;
      
      SELECT COUNT(*)
      INTO v_cantidad_marcaciones
      FROM tt_temptable
      WHERE iCodUsuario         = v_iCodUsuario;
      
      DBMS_OUTPUT.PUT_LINE('v_iCodUsuario');
      DBMS_OUTPUT.PUT_LINE(v_iCodUsuario);
      DBMS_OUTPUT.PUT_LINE('v_cantidad_marcaciones');
      DBMS_OUTPUT.PUT_LINE(v_cantidad_marcaciones);
      IF v_cantidad_marcaciones = 4 THEN
        BEGIN
          
          SELECT coalesce(max(fechahora),v_FECHA)
          INTO v_FECHA
          FROM
            (SELECT fechahora
            FROM tt_temptable
            WHERE iCodUsuario = v_iCodUsuario
            ORDER BY id
            )
          WHERE ROWNUM <= 1;
          
          SELECT coalesce(max(fechahora),v_HORARIOENTRADA)
          INTO v_HORARIOENTRADA
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v__id_temp;
          
          SELECT coalesce(max(fechahora),v_INICIOREFRIGERIO)
          INTO v_INICIOREFRIGERIO
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v__id_temp+1;
          
          SELECT coalesce(max(fechahora),v_FINREFRIGERIO)
          INTO v_FINREFRIGERIO
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v__id_temp+2;
          
          SELECT coalesce(max(fechahora),v_HORARIOSALIDA)
          INTO v_HORARIOSALIDA
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v__id_temp +3;          
          
          iudp_Aps_Asist_Marc_Interno(v_iCodUsuario, 0, v_FECHA, v_HORARIOENTRADA, v_HORARIOSALIDA, v_INICIOREFRIGERIO, v_FINREFRIGERIO) ;
        END;
      ELSE
        BEGIN
          INSERT
          INTO tt_listmarks
            (SELECT id ,
                ABS(utils.datediff('SECOND', FechaHora, v_fecha_text
                || ' 08:00:00.0000000')) puntaje ,
                1 marcacion
              FROM tt_temptable
              WHERE iCodUsuario = v_iCodUsuario
            );
          INSERT
          INTO tt_listmarks
            (SELECT id ,
                ABS(utils.datediff('SECOND', FechaHora, v_fecha_text
                || ' 12:30:00.0000000')) puntaje ,
                2 marcacion
              FROM tt_temptable
              WHERE iCodUsuario = v_iCodUsuario
            );
          INSERT
          INTO tt_listmarks
            (SELECT id ,
                ABS(utils.datediff('SECOND', FechaHora, v_fecha_text
                || ' 13:30:00.0000000')) puntaje ,
                3 marcacion
              FROM tt_temptable
              WHERE iCodUsuario = v_iCodUsuario
            );
          INSERT
          INTO tt_listmarks
            (SELECT id ,
                ABS(utils.datediff('SECOND', FechaHora, v_fecha_text
                || ' 17:30:00.0000000')) puntaje ,
                4 marcacion
              FROM tt_temptable
              WHERE iCodUsuario = v_iCodUsuario
            );

          v_tiene_registros := -1 ;
      
          SELECT 
            coalesce(max(id),v_tiene_registros), 
            coalesce(max(id2),v__id_lm), 
            coalesce(max(puntaje),v__puntaje_lm),  
            coalesce(max(marcacion),v__mark_lm) 
          INTO v_tiene_registros,
            v__id_lm,
            v__puntaje_lm,
            v__mark_lm
          FROM
            (SELECT id ,
              id as id2 ,
              puntaje ,
              marcacion
            FROM tt_listmarks
            ORDER BY puntaje ASC
            )
          WHERE ROWNUM            <= 1;
          v_ID_HORARIOENTRADA     := NULL ;
          v_ID_HORARIOSALIDA      := NULL ;
          v_ID_INICIOREFRIGERIO   := NULL ;
          v_ID_FINREFRIGERIO      := NULL ;
          WHILE v_tiene_registros != -1
          LOOP
            BEGIN
              IF v__mark_lm = 1 THEN
                BEGIN
                  v_ID_HORARIOENTRADA := v__id_lm ;
                END;
              END IF;
              IF v__mark_lm = 2 THEN
                BEGIN
                  v_ID_INICIOREFRIGERIO := v__id_lm ;
                END;
              END IF;
              IF v__mark_lm = 3 THEN
                BEGIN
                  v_ID_FINREFRIGERIO := v__id_lm ;
                END;
              END IF;
              IF v__mark_lm = 4 THEN
                BEGIN
                  v_ID_HORARIOSALIDA := v__id_lm ;
                END;
              END IF;
              DELETE tt_listmarks WHERE id = v__id_lm;
              DELETE tt_listmarks WHERE marcacion = v__mark_lm;
              v_tiene_registros := -1 ;

              SELECT 
                coalesce(max(id),v_tiene_registros), 
                coalesce(max(id2),v__id_lm), 
                coalesce(max(puntaje),v__puntaje_lm),  
                coalesce(max(marcacion),v__mark_lm) 
              INTO v_tiene_registros,
                v__id_lm,
                v__puntaje_lm,
                v__mark_lm
              FROM
                (SELECT id ,
                  id as id2 ,
                  puntaje ,
                  marcacion
                FROM tt_listmarks
                ORDER BY puntaje ASC
                )
              WHERE ROWNUM <= 1;
              
            END;
            DBMS_OUTPUT.put_line('finde loop');
          END LOOP;
          DELETE tt_listmarks ;
          v_FECHA            := NULL ;
          v_HORARIOENTRADA   := NULL ;
          v_HORARIOSALIDA    := NULL ;
          v_INICIOREFRIGERIO := NULL ;
          v_FINREFRIGERIO    := NULL ;

          SELECT coalesce(max(fechahora),v_FECHA)
          INTO v_FECHA
          FROM
            (SELECT fechahora
            FROM tt_temptable
            WHERE iCodUsuario = v_iCodUsuario
            ORDER BY id
            )
          WHERE ROWNUM <= 1;
          
          SELECT coalesce(max(fechahora),v_HORARIOENTRADA)
          INTO v_HORARIOENTRADA
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v_ID_HORARIOENTRADA;
          
          SELECT coalesce(max(fechahora),v_INICIOREFRIGERIO)
          INTO v_INICIOREFRIGERIO
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v_ID_INICIOREFRIGERIO;
          
          SELECT coalesce(max(fechahora),v_FINREFRIGERIO)
          INTO v_FINREFRIGERIO
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v_ID_FINREFRIGERIO;
          
          SELECT coalesce(max(fechahora),v_HORARIOSALIDA)
          INTO v_HORARIOSALIDA
          FROM tt_temptable
          WHERE iCodUsuario = v_iCodUsuario
          AND id            = v_ID_HORARIOSALIDA;
          
          iudp_Aps_Asist_Marc_Interno(v_iCodUsuario, 0, v_FECHA, v_HORARIOENTRADA, v_HORARIOSALIDA, v_INICIOREFRIGERIO, v_FINREFRIGERIO) ;
        END;
      END IF;
      --Get next record
      SELECT MIN(id)
      INTO v__id_min_worker
      FROM tt_listWorker
      WHERE id > v__id_min_worker;
    END;
  END LOOP;
end if;  
EXCEPTION
WHEN OTHERS THEN
  utils.handleerror(SQLCODE,SQLERRM);
END;

