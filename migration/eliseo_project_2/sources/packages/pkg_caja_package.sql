-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_CAJA AS 

  PROCEDURE SP_CREAR_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2, P_ID_VALE INT default null,P_ID_DEPOSITO OUT NUMBER) ;
  PROCEDURE SP_CREAR_DEPOSITO_ALUMNO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_AUTOMATICO VARCHAR2,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2,P_ID_DEPOSITO OUT NUMBER);                              
  PROCEDURE SP_CREAR_DEPOSITO_BANCO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO varchar2, P_ID_ANHO NUMBER, P_ID_MES NUMBER,P_ID_DEPOSITO NUMBER, P_ID_DINAMICA NUMBER,P_ID_MONEDA NUMBER, P_ID_CTABANCARIA NUMBER,P_ID_TIPOTARJETA NUMBER,
                                P_ID_PERSONA NUMBER,P_ID_MEDIOPAGO varchar2,P_OPERACION varchar2,P_FECHA date,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,
                                P_GLOSA varchar2,P_ID_TIPOASIENTO varchar2,P_ESTADO VARCHAR2, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2,P_ID_VALE INT default null, P_ID_CIERRE INT default null);
  PROCEDURE SP_CREAR_DEPOSITO_DETALLE(P_ID_DEPOSITO NUMBER,P_VENTAS VARCHAR2,P_IMP_VENTAS VARCHAR2,P_TIPO VARCHAR2,P_ID_MONEDA NUMBER,P_TIPO_CAMBIO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);
  PROCEDURE SP_CREAR_DEPOSITO_DETALLE_ACES(P_ID_DEPOSITO NUMBER,P_VENTAS VARCHAR2,P_IMP_VENTAS VARCHAR2,P_TIPO VARCHAR2,P_ID_MONEDA NUMBER,P_TIPO_CAMBIO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);
  PROCEDURE SP_CREAR_DEPOSITO_IMP(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_MONEDA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,
                              P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_CREAR_DEPOSITO_IMP_FIN(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2);                            
  PROCEDURE SP_GENERAR_ASIENTO_DEPOSITO(P_ID_DEPOSITO NUMBER,P_ID_DINAMICA NUMBER,P_ID_CTABANCARIA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER ,P_IMPORTE_TRANS NUMBER,P_DETALLE VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2,P_DEP_B VARCHAR2 default null);
  PROCEDURE SP_CREAR_PAGO(P_ID_MEDIOPAGO VARCHAR2,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_VALE NUMBER,P_ID_VOUCHER NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_USER NUMBER,
                              P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA  NUMBER,P_NUMERO VARCHAR2,P_FECHA DATE,P_TIPOCAMBIO NUMBER,P_ID_PAGO OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) ;
  
  PROCEDURE SP_CREAR_PAGO_DEP_CAJACHICA(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_ANHO NUMBER, P_ID_MES NUMBER, P_ID_USER NUMBER, P_ID_TIPOTRANSACCION NUMBER, P_ID_DINAMICA NUMBER,P_ID_CTABANCARIA NUMBER,P_NUMERO VARCHAR2,P_ID_CHEQUERA NUMBER,P_ID_MONEDA NUMBER,P_TIPOCAMBIO NUMBER,P_DETALLE VARCHAR2,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ID_PAGO IN OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2);
                                        
  PROCEDURE SP_CREAR_PAGO_GASTO(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_PERSONA NUMBER,P_DETALLE VARCHAR2, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_FECHA DATE,P_ID_PGASTO IN OUT NUMBER,P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);

  PROCEDURE SP_CREAR_PAGO_GASTO_ASIENTO(P_ID_FONDO NUMBER,P_ID_DEPTO VARCHAR2,P_ID_CUENTAAASI VARCHAR2, P_ID_RESTRICCION VARCHAR2,P_ID_CTACTE VARCHAR2, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_IS_DC VARCHAR2, P_DESCRIPCION VARCHAR2, P_ID_PGASTO NUMBER,P_ERROR OUT NUMBER, P_ID_GASIENTO IN OUT NUMBER);
  
  PROCEDURE SP_CREAR_PAGO_COMPRA(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_COMPRA NUMBER, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ID_PAGO_COMPRA IN OUT NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);
 /*
 PROCEDURE SP_CREAR_VALE_COMPRA(P_ID_VALE NUMBER,P_ID_DINAMICA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_COMPRA NUMBER, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ID_VALE_COMPRA IN OUT NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);
  */
  PROCEDURE SP_CREAR_PAGO_VENTA(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_CLIENTE NUMBER,P_ID_VENTA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2); --P_ID_ARTICULO NUMBER  QUITADO ESE PARAMETRO
  PROCEDURE SP_ELIMINAR_PAGO_DETALLE(P_ID_PAGO NUMBER,P_ID_DETALLE VARCHAR2,P_TIPO NUMBER,P_PLACE NUMBER);
  PROCEDURE SP_ELIMINAR_PAGO(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_ELIMINAR_PAGO_DEPOSITO(P_ID_PAGO NUMBER);
  PROCEDURE SP_GENERAR_ASIENTO_PAGO(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_PAGO_BK(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_RENDICION(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_VALE(P_ID_VALE NUMBER,P_ID_CUENTAAASI VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_VALE_END(P_ID_VALE NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_PAGO_UPN(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_PAGOGASTOU(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_DEP_CAJACHI(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_GENERAR_ASIENTO_DEV_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_FINALIZAR_PAGO(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  
  PROCEDURE SP_FINALIZAR_DEVOLUCION_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
   
  PROCEDURE SP_RENDIR_VALE_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_VALE NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER, P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER, P_ID_DINAMICA NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER, P_SERIE VARCHAR2,P_NUMERO VARCHAR2, P_FECHA DATE, P_IMPORTE NUMBER, P_IMPORTE_ME NUMBER, P_TIPO_CAMBIO NUMBER, P_GLOSA VARCHAR2,
  P_ID_DEPOSITO IN OUT NUMBER, P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  
  PROCEDURE SP_RENDIR_VALE_DEPOSITO_BANK(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_VALE NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,
        P_ID_CLIENTE NUMBER,P_ID_TIPOTRANSACCION NUMBER,P_ID_TIPOTARJETA NUMBER, P_ID_CTABANCARIA NUMBER, P_OPERACION VARCHAR2,
        P_ID_MONEDA NUMBER, P_ID_DINAMICA NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER, P_FECHA DATE, P_IMPORTE NUMBER,
        P_IMPORTE_ME NUMBER, P_TIPO_CAMBIO NUMBER, P_GLOSA VARCHAR2,
        P_ID_DEPBANCO IN OUT NUMBER, P_ERROR OUT number,P_MSGERROR out VARCHAR2);
        
  PROCEDURE SP_RENDIR_VALE(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  
  PROCEDURE SP_ACTUALIZAR_PAGO(P_ID_PAGO NUMBER,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_VALE NUMBER,P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER, P_TIPO_CAMBIO NUMBER,P_NUMERO VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_REGISTRA_VALE(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TIPOVALE INT,P_ID_PERSONA NUMBER,P_ID_EMPLEADO NUMBER,
                            P_ID_MONEDA INT, P_FECHA DATE, P_IMPORTE NUMBER, P_IMPORTE_ME NUMBER, P_DETALLE VARCHAR2,P_CELULAR VARCHAR2, P_EMAIL VARCHAR2, P_ID_VALE OUT NUMBER,P_FECHA_VENCIMIENTO DATE,P_TERMINO_CONDICION VARCHAR2);
    
  PROCEDURE SP_AUTORIZA_VALE(P_ID_VALE IN INT, P_ID_DINAMICA IN INT, P_ID_PERSONA_AUTO IN NUMBER,P_ID_MEDIOPAGO IN VARCHAR2,P_ID_CTABANCARIA IN NUMBER, P_CTA_BANCARIA IN VARCHAR2,P_FECHA_VENC DATE,P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2);
  PROCEDURE SP_ASIENTO_VALE(P_ID_VALE IN NUMBER,P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2);
  
  PROCEDURE SP_CREAR_RETENCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_ANHO NUMBER,
                                P_ID_MES NUMBER,P_ID_MONEDA  NUMBER,P_NUMERO VARCHAR2,P_FECHA_EMISION DATE,P_SERIE VARCHAR2,P_NRO_RETENCION VARCHAR2,P_ID_RETENCION IN OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_CREAR_RETENCION_DETALLE(P_ID_RETENCION NUMBER,P_ID_COMPRA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE_TOTAL NUMBER,P_IMPORTE_RET NUMBER,P_IMPORTE_RET_ME NUMBER, P_ID_RETDETALLE IN OUT NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);
  PROCEDURE SP_ELIMINAR_RETENCION(P_ID_RETENCION NUMBER);
  PROCEDURE SP_ELIMINAR_VALE(P_ID_VALE NUMBER);
  PROCEDURE SP_ELIMINAR_RETENCION_DETALLE(P_ID_RETENCION NUMBER,P_ID_RETDETALLE VARCHAR2,P_TIPO NUMBER);
  PROCEDURE SP_ELIMINAR_DETRACCION(P_ID_DETRACCION NUMBER);
  PROCEDURE SP_ELIMINAR_DETRACCION_ALL(P_ID_DETRACCION NUMBER);
  PROCEDURE SP_ACTUALIZAR_RETENCION(P_ID_RETENCION NUMBER,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_MONEDA  NUMBER,P_NUMERO VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
  PROCEDURE SP_FINALIZAR_RETENCION(P_ID_RETENCION NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);   
  PROCEDURE SP_CREAR_DETRACCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_CTABANCARIA NUMBER,
                                P_ID_CHEQUERA NUMBER,P_ID_OPERACION VARCHAR2,P_ID_TIPOBIENSERVICIO VARCHAR2,P_ID_MONEDA  NUMBER,P_AUTODETRACCION VARCHAR2,P_NUMERO VARCHAR2,P_NRO_CONSTANCIA VARCHAR2,P_NRO_OPERACION VARCHAR2,
                                P_FECHA_EMISION DATE,P_ID_COMPRA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_ID_DETRACCION IN OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_TIPO_AUTO VARCHAR2 default null);                       
    PROCEDURE SP_CREAR_DETRACCION_DETALLE(P_ID_DETRACCION NUMBER,P_ID_COMPRA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);
    PROCEDURE SP_CREAR_AUTO_DETRAC_DETALLE(P_ID_DETRACCION NUMBER,P_ID_VENTA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);
    PROCEDURE SP_GENERAR_ASIENTO_RET_DET(P_ID_OPERORIGEN NUMBER,P_ID_ORIGEN NUMBER,P_ID_DINAMICA NUMBER,P_ID_CTABANCARIA NUMBER,P_IMPORTE NUMBER,P_DETALLE VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
    FUNCTION FC_CUENTA_BANCARIA(P_ID_CTABANCARIA IN NUMBER) RETURN VARCHAR2;
    FUNCTION FC_NAME_CTA_BANCARIA(P_ID_CTABANCARIA IN NUMBER) RETURN VARCHAR2;
    FUNCTION FC_RUC(
    P_ID_PROVEEDOR NUMBER
    ) RETURN VARCHAR2;
    FUNCTION FC_NOMBRE_CTA_BANCARIA(P_ID_CHEQUERA IN NUMBER) RETURN VARCHAR2;
    FUNCTION FC_VALE_COMPROBANTE(P_ID_VALE IN NUMBER) RETURN VARCHAR2;
    FUNCTION FC_VALE_GASTO(P_ID_VALE IN NUMBER) RETURN VARCHAR2;
    PROCEDURE SP_VALIDAR_AJUSTE_PAGO_COMPRA(P_ID_PAGO_COMPRA NUMBER, P_ID_PERSONA NUMBER, P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2);
  
  
  PROCEDURE SP_CREAR_ACTUALIZAR_VALE(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TIPOVALE INT,P_ID_DINAMICA INT,P_ID_MEDIOPAGO VARCHAR2,P_ID_CTABANCARIA NUMBER,P_NUMERO VARCHAR2,P_ID_CHEQUERA NUMBER,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_EMPLEADO NUMBER,
                            P_ID_CUENTAAASI VARCHAR2, P_ID_MONEDA INT, P_TIPOCAMBIO IN NUMBER, P_FECHA DATE, P_IMPORTE NUMBER, P_IMPORTE_ME NUMBER, P_DETALLE VARCHAR2,P_CELULAR VARCHAR2, P_EMAIL VARCHAR2, P_ID_VALE IN OUT NUMBER
                            ,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
    PROCEDURE SP_CONTA_ASIENTO_VALE(P_ID_VALE NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_GENERAR_ASIENTO_GASTO (P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_CERRAR_CAJA(P_ID_VOUCHER NUMBER,P_ID_DINAMICA NUMBER,P_ID_PERSONA NUMBER,P_GLOSA VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
    PROCEDURE SP_CREAR_PAGO_ASIENTO(P_ID_PAGO NUMBER,P_ID_CUENTAAASI VARCHAR2,P_ID_RESTRICCION VARCHAR2,P_ID_CTACTE VARCHAR2,P_ID_FONDO NUMBER,P_ID_DEPTO VARCHAR2,P_DESCRIPCION VARCHAR2,P_DC VARCHAR2, P_AGRUPA VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_ELIMINAR_PROVISION_VALE(P_ID_VALE IN INT,P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2);
    FUNCTION FC_CTA_CTE_RENDICION(P_ID_PAGO IN NUMBER) RETURN VARCHAR2;
    PROCEDURE SP_DOCUMENTO_ASIENTO(P_ID_DOCUMENTO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_VALE_GASTO_ASIENTO(P_ID_VGASTO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_RECHAZAR_VALE(P_ID_VALE NUMBER);
    PROCEDURE SP_CREAR_DEPOSITO_ALUMNO_ADM(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_PERSONA_INSCRIPCION NUMBER,
                              P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2,P_ID_DEPOSITO OUT NUMBER);
    PROCEDURE SP_CREAR_VENTA_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,
                                    P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                                    P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_EVENTO_PARTICIPANTE VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2, P_ID_VENTA OUT NUMBER);
    PROCEDURE SP_CREAR_DEPOSITO_ALUMNO_NEW(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_AUTOMATICO VARCHAR2,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_TIPO_VENTAS  VARCHAR2,P_NRO_CUOTA_VENTAS VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2, P_ID_DEPOSITO OUT NUMBER);
    
END PKG_CAJA;


CREATE OR REPLACE PACKAGE BODY                      PKG_CAJA AS
    PROCEDURE SP_CREAR_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_ID_VALE INT default null,P_ID_DEPOSITO OUT NUMBER) IS
                              
        l_serie varchar2(4);
        l_numero varchar2(8);
        l_deposito number:=0;
        l_estado varchar2(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher number :=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_correlativo number :=0;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_automatico varchar2(2);
        l_contar number;
        l_fecha date;
        --l_id_ctabancaria number;
        l_importedet number(10,2);
        l_importeasiento number(10,2);
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(255);
        L_ID_TIPOASIENTO VARCHAR2(4);
        L_IMP NUMBER(10,2);
        L_IMP_ME NUMBER(10,2);
        L_IMP_TARJ NUMBER(10,2);
        BEGIN
            IF P_ID_MONEDA = 9 THEN
                L_IMP :=P_IMPORTE*P_TIPOCAMBIO;
                L_IMP_ME :=P_IMPORTE;
                L_IMP_TARJ := P_IMPORTE_TARJETA*P_TIPOCAMBIO;
            ELSE
                L_IMP :=P_IMPORTE;
                L_IMP_ME :=0;
                L_IMP_TARJ := P_IMPORTE_TARJETA;
            END IF;
            
            select sysdate into l_fecha from dual;
            IF P_ID_VALE = 0 THEN
                L_ID_VALE := NULL;
            ELSE
                L_ID_VALE := P_ID_VALE;
            END IF;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
            
            IF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '1' THEN
                L_ID_TIPOASIENTO := 'MB';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '4' THEN
                L_ID_TIPOASIENTO := 'MBC';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '5' THEN
                L_ID_TIPOASIENTO := 'MBJ';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '6' THEN
                L_ID_TIPOASIENTO := 'MBT';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '7' THEN
                L_ID_TIPOASIENTO := 'MBL';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '8' THEN
                L_ID_TIPOASIENTO := 'MBS';
            ELSE
                L_ID_TIPOASIENTO := P_ID_TIPOASIENTO;
            END IF;
            --obtiene numero y serie y actualiza correlativo
            PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, NULL, l_serie,l_correlativo);
          
            if l_correlativo=0 or l_correlativo is null then
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||'), (No existe el documento o no se asignó un punto de impresión.';
                GOTO salida_rapida;
            else
                --obtener voucher
                select count(1) into l_contar from CONTA_VOUCHER_CONFIG  
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=L_ID_TIPOASIENTO 
                and ID_ANHO=P_ID_ANHO
                and id_tipovoucher = 5; 
          
                if l_contar>0  then
                    select AUTOMATICO into l_automatico from CONTA_VOUCHER_CONFIG  
                    where ID_ENTIDAD=P_ID_ENTIDAD 
                    and ID_DEPTO= P_ID_DEPTO
                    and ID_TIPOASIENTO=L_ID_TIPOASIENTO 
                    and ID_ANHO=P_ID_ANHO
                    and id_tipovoucher = 5; -- 5= tipo voucher ingresos   

                    if l_automatico='S' then
                        PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,L_ID_TIPOASIENTO,5,null, 'S', P_ID_PERSONA, l_id_voucher);
                    end if;
                end if;
            end if;
      
            if l_id_voucher=0 then
                l_error:=2; --no existe voucher
                l_msgerror:='Depósito: No existe voucher ';
                GOTO salida_rapida;
            end if;
      
      --goto salida_rapida;
      if l_error=0 then
        
        select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
        
        SELECT 
                (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||DECODE(L_ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep-'||DECODE(L_ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper-'||RTRIM((LTRIM(P_OPERACION)))||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||l_serie||'-'||to_number(l_numero)||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                WHEN '001' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep-'||FC_SIGLA_CTA_BANCARIA(L_ID_CTABANCARIA)||'-Oper-'||RTRIM((LTRIM(P_OPERACION)))||'-'||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||l_serie||'-'||to_number(l_numero)||'-'||P_GLOSA
                ELSE 'DEPOSITO CLIENTES' END )
                 as GLOSA INTO L_GLOSA
        FROM DUAL;
        
        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_VALE,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_CANAL
        )VALUES( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          l_id_voucher, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_VALE,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          l_serie,
          l_numero,
          l_fecha,
          L_IMP,
          --P_IMPORTE, 
          L_IMP_ME,
          --P_IMPORTE_ME,
          P_TIPOCAMBIO,
          --P_GLOSA, 
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          l_estado,
          P_FECHA_OP,
          --P_OPERACION
          RTRIM((LTRIM(P_OPERACION))),
          P_ID_CANAL
        ) RETURNING ID_DEPOSITO INTO l_deposito;
        
        /*
        SELECT MAX(ID_DEPOSITO) INTO l_deposito FROM CAJA_DEPOSITO 
            WHERE ID_ENTIDAD= P_ID_ENTIDAD 
                AND ID_DEPTO=P_ID_DEPTO AND ID_ANHO=P_ID_ANHO 
                AND ID_MES=P_ID_MES AND ID_VOUCHER=l_id_voucher 
                AND ID_PERSONA=P_ID_PERSONA;*/
        
        --l_error:=1; --no existe voucher
        --l_msgerror:=l_deposito;
        --goto salida_rapida;
        
        /*if P_IMPORTE_TARJETA>0 and l_error=0 then --ya no se usa, solo se registra en caja_deposito
            PKG_CAJA.SP_CREAR_DEPOSITO_BANCO(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO , P_ID_MES ,l_deposito, P_ID_DINAMICA ,P_ID_MONEDA,P_ID_CTABANCARIA, P_ID_TIPOTARJETA,
                                P_ID_PERSONA,P_ID_MEDIOPAGO,P_OPERACION,l_fecha,P_IMPORTE_TARJETA,P_IMPORTE_ME,P_TIPOCAMBIO,
                                P_GLOSA,P_ID_TIPOASIENTO,l_estado,l_error,l_msgerror);
        end if;*/
        
        if coalesce(length(P_VENTAS),0)>0 and l_error=0 then
                IF P_ID_ENTIDAD = 9415 THEN
                    PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE_ACES(l_deposito,P_VENTAS,P_IMP_VENTAS,'V',P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
                ELSE
                    PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE(l_deposito,P_VENTAS,P_IMP_VENTAS,'V',P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
                END IF;
          
            select coalesce(sum(importe),0) into l_importedet from caja_deposito_detalle
            where id_deposito=l_deposito;
          
            if L_IMP<>l_importedet then
                l_error:=2; 
                l_msgerror:='Depósito: Importe depósito('||to_char(L_IMP)||') es diferente a la suma de importe de los documentos('||to_char(l_importedet)||') pagados';
               GOTO salida_rapida;
            end if;
          
        end if;
        
        
        
        l_importeasiento:=L_IMP;
        
        if coalesce(P_IMPORTE_TARJETA,0)>0 then
            l_importeasiento:=0;
        end if;
        
        if coalesce(P_IMPORTE_TRANS,0)>0 then
            l_importeasiento:=0;
        end if;
        if l_error=0  then
            --PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,l_importeasiento,L_IMP_TARJ,P_IMPORTE_TRANS,L_GLOSA,l_error,l_msgerror);
           
            IF P_ID_MEDIOPAGO = '008' THEN
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,l_importeasiento,0,0,L_GLOSA,l_error,l_msgerror);
            ELSE
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMP_TARJ,P_IMPORTE_TRANS,L_GLOSA,l_error,l_msgerror);
            END IF;
           
        end if;
        
      end if;

      <<salida_rapida>>
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
      P_ID_DEPOSITO := l_deposito;
  END SP_CREAR_DEPOSITO;
  PROCEDURE SP_CREAR_DEPOSITO_ALUMNO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_AUTOMATICO VARCHAR2,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2, P_ID_DEPOSITO OUT NUMBER) IS
                              
        L_SERIE VARCHAR2(4);
        L_NUMERO VARCHAR2(8);
        L_DEPOSITO NUMBER:=0;
        L_ESTADO VARCHAR2(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        L_ID_VOUCHER NUMBER :=0;
        L_ERROR NUMBER:=0;
        L_MSGERROR VARCHAR2(200):='';
        L_CORRELATIVO NUMBER :=0;
        L_ID_COMPROBANTE VARCHAR2(3):='00';  --deposito
        L_AUTOMATICO VARCHAR2(2);
        L_CONTAR NUMBER;
        L_FECHA DATE;
        --l_id_ctabancaria number;
        L_IMPORTEDET NUMBER(10,2);
        L_IMPORTEASIENTO NUMBER(10,2) :=0;
        L_IMPORTE_DEP NUMBER(10,2) :=0;
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(200);
        L_ID_DDETALLE NUMBER;
        L_TIPO_TARJETA VARCHAR2(30);
        L_COD_DINAMICA_ANT VARCHAR2(5);
        L_IMPORTE_TRANS NUMBER := 0;
        L_VENTAS  VARCHAR2(200);
        L_VENTAS_IMP VARCHAR2(300);
        L_TIPO VARCHAR2(300);
        L_VENTAS_D  VARCHAR2(200);
        L_VENTAS_IMP_D VARCHAR2(300);
        L_TIPO_D VARCHAR2(300);
        L_ID_DINAMICA NUMBER;
        L_ID_TIPODEPOSITO NUMBER  := 1;--DEPOSITOS ALUMNOS
        L_BANCO VARCHAR2(20);
        BEGIN
            IF P_ID_MEDIOPAGO = '008' THEN
                L_IMPORTE_DEP := P_IMPORTE;
            ELSE
                L_IMPORTE_DEP := P_IMPORTE_TARJETA;
                --valida que no se duplique importar depositos
                --Validacion de Nro Operacion Bancaria
                SELECT COUNT(1) INTO L_CONTAR FROM CAJA_DEPOSITO
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND NRO_OPERACION = P_OPERACION
                AND IMPORTE <> 0;
                /*IF L_CONTAR > 0 THEN
                    L_ERROR:=1; --no existe serie y numero del documento
                    L_MSGERROR:='Depósito: Operacion ya esta registrada - '||P_OPERACION;
                    GOTO SALIDA_RAPIDA;
                END IF;*/
            END IF;
            
            SELECT SYSDATE INTO L_FECHA FROM DUAL;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
            
            --obtiene numero y serie y actualiza correlativo
            PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,L_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO, NULL, L_SERIE,L_CORRELATIVO);
          
            IF L_CORRELATIVO=0 OR L_CORRELATIVO IS NULL THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSGERROR:='Depósito: No existe serie y número de documento ('||L_ID_COMPROBANTE||')';
                GOTO SALIDA_RAPIDA;
            ELSE
                --obtener voucher
                SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG  
                WHERE ID_ENTIDAD=P_ID_ENTIDAD 
                AND ID_DEPTO= P_ID_DEPTO
                AND ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                AND ID_ANHO=P_ID_ANHO
                AND ID_TIPOVOUCHER = 5; 
          
                IF L_CONTAR>0  THEN
                    SELECT AUTOMATICO INTO L_AUTOMATICO FROM CONTA_VOUCHER_CONFIG  
                    WHERE ID_ENTIDAD=P_ID_ENTIDAD 
                    AND ID_DEPTO= P_ID_DEPTO
                    AND ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                    AND ID_ANHO=P_ID_ANHO
                    AND ID_TIPOVOUCHER = 5; -- 5= tipo voucher ingresos   

                    IF L_AUTOMATICO='S' THEN
                        PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,SYSDATE,P_ID_TIPOASIENTO,5,NULL, 'S', P_ID_PERSONA, L_ID_VOUCHER);
                    END IF;
                END IF;
            END IF;
      
            IF L_ID_VOUCHER=0 THEN
                L_ERROR:=2; --no existe voucher
                L_MSGERROR:='Depósito: No existe voucher ';
                GOTO SALIDA_RAPIDA;
            END IF;
      
      --goto salida_rapida;
      IF L_ERROR=0 THEN
        SELECT LPAD(TO_CHAR(L_CORRELATIVO),8,'0') INTO L_NUMERO FROM DUAL;
        SELECT COUNT(1) INTO L_CONTAR FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        IF L_CONTAR>0 THEN
           SELECT NOMBRE INTO L_TIPO_TARJETA FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        END IF;
        
        SELECT COUNT(1) INTO L_CONTAR FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
        ON A.ID_BANCO = B.ID_BANCO
        WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        IF L_CONTAR > 0 THEN
            SELECT B.SIGLA INTO L_BANCO FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
            ON A.ID_BANCO = B.ID_BANCO
            WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        END IF;
        
        SELECT 
                (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'- Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||SUBSTR(P_GLOSA,1,20)
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alumn:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||L_TIPO_TARJETA||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alum:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                ELSE 
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alumn:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||L_TIPO_TARJETA||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||': Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||SUBSTR(P_GLOSA,1,20)
                END )
                 AS GLOSA INTO L_GLOSA
        FROM DUAL;
        
        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_TIPODEPOSITO,
          ID_CANAL
        )VALUES( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          L_ID_VOUCHER, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          L_SERIE,
          L_NUMERO,
          L_FECHA,
          L_IMPORTE_DEP, 
          P_IMPORTE_ME,
          P_TIPOCAMBIO,
          --P_GLOSA, 
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          L_ESTADO,
          P_FECHA_OP,
          P_OPERACION,
          L_ID_TIPODEPOSITO,
          P_ID_CANAL
        ) RETURNING ID_DEPOSITO INTO L_DEPOSITO;
        
        --obtiene ventas a pagar
        IF  P_AUTOMATICO = 'S' THEN
            PKG_PAYONLINE.SP_VENTAS_DEPOSITAR(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_CLIENTE,L_IMPORTE_DEP,L_VENTAS,L_VENTAS_IMP,L_TIPO);
            L_VENTAS_D := L_VENTAS;
            L_VENTAS_IMP_D := L_VENTAS_IMP;
            L_TIPO_D:=L_TIPO;
        ELSE
            IF COALESCE(LENGTH(P_VENTAS),0)> 0  THEN 
                L_VENTAS_D := P_VENTAS;
                L_VENTAS_IMP_D := P_IMP_VENTAS;
                L_TIPO_D:='V';
            ELSE
                PKG_PAYONLINE.SP_VENTAS_DEPOSITAR(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_CLIENTE,L_IMPORTE_DEP,L_VENTAS,L_VENTAS_IMP,L_TIPO);
                L_VENTAS_D := L_VENTAS;
                L_VENTAS_IMP_D := L_VENTAS_IMP;
                L_TIPO_D:=L_TIPO;
            END IF;
            
        END IF;
        
        SELECT A.ID_DINAMICA INTO L_ID_DINAMICA FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 13
        AND C.CODIGO = 'AN' --ANTICIPOS
        AND A.ACTIVO = 'S';
        
        IF COALESCE(LENGTH(L_VENTAS_D),0)>0 AND L_ERROR=0 THEN --VALIDA VENTAS POR PAGAR Y LA DIFERENCIA LO ENVIA A ANTICIPOS
            PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE(L_DEPOSITO,L_VENTAS_D,L_VENTAS_IMP_D,L_TIPO_D,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,L_ERROR,L_MSGERROR);
          
            SELECT COALESCE(SUM(IMPORTE),0) INTO L_IMPORTEDET FROM CAJA_DEPOSITO_DETALLE
            WHERE ID_DEPOSITO=L_DEPOSITO;
          
            IF L_IMPORTE_DEP>L_IMPORTEDET THEN
                --insert dep sin venta
                SELECT COALESCE(MAX(ID_DDETALLE),0)+1 INTO L_ID_DDETALLE FROM CAJA_DEPOSITO_DETALLE;
                INSERT INTO CAJA_DEPOSITO_DETALLE(--ID_DDETALLE,
                ID_DEPOSITO,ID_VENTA,IMPORTE,IMPORTE_ME)VALUES(--L_ID_DDETALLE,
                L_DEPOSITO,NULL,L_IMPORTE_DEP-L_IMPORTEDET,0);
                --insert Anticipo
                L_COD_DINAMICA_ANT:='AN';-- anticipo a favor del cliente
                PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,L_DEPOSITO,L_IMPORTE_DEP-L_IMPORTEDET,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);
                --genera asiento
                IF P_ID_MEDIOPAGO = '008' THEN
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP-L_IMPORTEDET,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
                ELSE
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP-L_IMPORTEDET,0,L_GLOSA,L_ERROR,L_MSGERROR);
                END IF;
                
            END IF;
        ELSE-- TODO EL IMPORTE VA A ANTICIPOS
            SELECT COALESCE(MAX(ID_DDETALLE),0)+1 INTO L_ID_DDETALLE FROM CAJA_DEPOSITO_DETALLE;
            INSERT INTO CAJA_DEPOSITO_DETALLE(--ID_DDETALLE,
            ID_DEPOSITO,ID_VENTA,IMPORTE,IMPORTE_ME)VALUES(--L_ID_DDETALLE,
            L_DEPOSITO,NULL,L_IMPORTE_DEP,0);
            --insert Anticipo
            L_COD_DINAMICA_ANT:='AN';-- anticipo a favor del cliente
            PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,L_DEPOSITO,L_IMPORTE_DEP,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);
            --genera asiento
            IF P_ID_MEDIOPAGO = '008' THEN
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
            ELSE
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP,0,L_GLOSA,L_ERROR,L_MSGERROR);
            END IF;
        END IF;
        
        IF L_IMPORTEDET > 0 THEN
            IF L_ERROR=0  THEN
                IF P_ID_MEDIOPAGO = '008' THEN
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTEDET,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
                ELSE
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTEDET,0,L_GLOSA,L_ERROR,L_MSGERROR);
                END IF;
            END IF;
        END IF;
            
      END IF;

      <<SALIDA_RAPIDA>>
      P_ERROR:=L_ERROR;
      P_MSGERROR:=L_MSGERROR;
      P_ID_DEPOSITO := L_DEPOSITO;
  END SP_CREAR_DEPOSITO_ALUMNO;
  PROCEDURE SP_CREAR_DEPOSITO_BANCO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO varchar2, P_ID_ANHO NUMBER, P_ID_MES NUMBER,P_ID_DEPOSITO NUMBER, P_ID_DINAMICA NUMBER,P_ID_MONEDA NUMBER,P_ID_CTABANCARIA NUMBER, P_ID_TIPOTARJETA NUMBER,
                                P_ID_PERSONA NUMBER,P_ID_MEDIOPAGO varchar2,P_OPERACION varchar2,P_FECHA date,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,
                                P_GLOSA varchar2,P_ID_TIPOASIENTO varchar2,P_ESTADO VARCHAR2, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2,P_ID_VALE INT default null, P_ID_CIERRE INT default null) IS
    --l_id_depbanco number;
    --l_estado varchar2(1):='1';
    l_id_voucher number :=0;
    l_contar number;
    l_automatico  varchar2(2);
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_id_tipoasiento varchar2(5);--:='MB';
    l_id_ctabancaria number;
    L_ID_DEPOSITO NUMBER;
    L_ID_TIPOTARJETA NUMBER;
    L_DIF NUMBER(10,2);
    L_ID_VALE NUMBER;
    L_DEP_B VARCHAR2(1) :='S';
    BEGIN
        IF P_ID_DEPOSITO IS NULL OR P_ID_DEPOSITO = 0 THEN
            L_ID_DEPOSITO:=null;
        ELSE
            L_ID_DEPOSITO:=P_ID_DEPOSITO;
        END IF;
        IF P_ID_TIPOTARJETA IS NULL OR P_ID_TIPOTARJETA = 0 THEN
            L_ID_TIPOTARJETA:=null;
        ELSE
            L_ID_TIPOTARJETA:=P_ID_TIPOTARJETA;
        END IF;
        l_id_tipoasiento:=P_ID_TIPOASIENTO;
        
        IF P_ID_VALE IS NULL OR P_ID_VALE = 0 THEN
            L_ID_VALE:=null;
        ELSE
            L_ID_VALE:=P_ID_VALE;
        END IF;
        
        --obtener voucher
        select count(1) into l_contar from CONTA_VOUCHER_CONFIG  
        where ID_ENTIDAD=P_ID_ENTIDAD 
        and ID_DEPTO= P_ID_DEPTO
        and ID_TIPOASIENTO=l_id_tipoasiento 
        and ID_ANHO=P_ID_ANHO
        AND ID_TIPOVOUCHER = 5; 
        
        --dbms_output.put_line(l_id_entidad||'-'||l_id_depto||'-'||l_id_anho);
        
        --====
        IF P_ID_CIERRE IS NOT NULL THEN
            IF P_ID_DEPTO = '5' THEN
                SELECT count(1) into l_contar
                FROM CONTA_VOUCHER A, CONTA_VOUCHER_PERSONA B
                WHERE A.ID_VOUCHER = B.ID_VOUCHER
                AND A.ID_ENTIDAD = P_ID_ENTIDAD
                AND A.ID_DEPTO = P_ID_DEPTO
                AND B.ID_PERSONA = P_ID_PERSONA
                AND A.ID_TIPOVOUCHER = 5
                AND B.ESTADO = '1'
                AND A.ACTIVO = 'S';
                IF l_contar > 0 THEN
                    SELECT A.ID_VOUCHER INTO l_id_voucher
                    FROM CONTA_VOUCHER A, CONTA_VOUCHER_PERSONA B
                    WHERE A.ID_VOUCHER = B.ID_VOUCHER
                    AND A.ID_ENTIDAD = P_ID_ENTIDAD
                    AND A.ID_DEPTO = P_ID_DEPTO
                    AND B.ID_PERSONA = P_ID_PERSONA
                    AND A.ID_TIPOVOUCHER = 5
                    AND B.ESTADO = '1'
                    AND A.ACTIVO = 'S';
                END IF;
            ELSE
                SELECT ID_VOUCHER INTO l_id_voucher
                FROM CAJA_CIERRE
                WHERE ID_CIERRE = P_ID_CIERRE;
            END IF;
        ELSE
            if l_contar>0  then
                select AUTOMATICO into l_automatico from CONTA_VOUCHER_CONFIG  
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=l_id_tipoasiento 
                and ID_ANHO=P_ID_ANHO
                AND ID_TIPOVOUCHER = 5;   
              
                if l_automatico='S' then
                    IF P_ESTADO = '1' THEN
                        PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,5,null,'S', P_ID_PERSONA, l_id_voucher);
                    ELSE
                        l_id_voucher := NULL;
                        l_error:=1; --no existe voucher
                        l_msgerror:='Depósito Banco: No existe voucher';
                    END IF;
                end if;
            end if;
        END IF;
        if l_id_voucher = 0 then
            l_error:=1; --no existe voucher
            l_msgerror:='Depósito Banco: No existe voucher';
        end if;
        if l_error=0 then
            select count(1) into l_contar from CONTA_DINAMICA a,CAJA_CUENTA_BANCARIA b
            where a.ID_CTABANCARIA=b.ID_CTABANCARIA
            and a.ID_DINAMICA=P_ID_DINAMICA;
            
            if P_ID_CTABANCARIA is null then
                if l_contar>0 then
                    select a.ID_CTABANCARIA into l_id_ctabancaria 
                    from CONTA_DINAMICA a,CAJA_CUENTA_BANCARIA b
                    where a.ID_CTABANCARIA=b.ID_CTABANCARIA
                    and a.ID_DINAMICA=P_ID_DINAMICA;
                else
                    l_error:=1;
                    l_msgerror:='Depósito Banco: No existe cta corriente bancario para generar depósito al banco';
                end if;
            else
                l_id_ctabancaria := P_ID_CTABANCARIA;
            end if;
        end if;    
  
        if l_error=0 then
            SELECT (A.IMPORTE+A.IMPORTE_ME)-(NVL(SUM(B.IMPORTE),0)+SUM(NVL(B.IMPORTE_ME,0))+P_IMPORTE+NVL(P_IMPORTE_ME,0)) INTO L_DIF
            FROM CAJA_CIERRE A LEFT JOIN CAJA_DEPOSITO_BANCO B
            ON A.ID_CIERRE = B.ID_CIERRE
            WHERE A.ID_CIERRE = P_ID_CIERRE
            GROUP BY A.ID_CIERRE,A.IMPORTE,A.IMPORTE_ME;
            
            IF L_DIF = 0 OR L_DIF > 0 THEN
                INSERT INTO CAJA_DEPOSITO_BANCO (
                                     ID_ENTIDAD,
                                     ID_DEPTO,
                                     ID_ANHO,
                                     ID_MES,
                                     ID_DEPOSITO,
                                     ID_DINAMICA,
                                     ID_MONEDA,
                                     ID_TIPOTARJETA,
                                     ID_PERSONA,
                                     ID_CTABANCARIA,
                                     ID_MEDIOPAGO,
                                     ID_VOUCHER,
                                     OPERACION,
                                     FECHA,
                                     IMPORTE,
                                     IMPORTE_ME,
                                     TIPOCAMBIO,
                                     GLOSA,
                                     ESTADO,
                                     ID_VALE,
                                     ID_CIERRE)
                         VALUES (
                                 P_ID_ENTIDAD,
                                 P_ID_DEPTO,
                                 P_ID_ANHO,
                                 P_ID_MES,
                                 L_ID_DEPOSITO,
                                 P_ID_DINAMICA,
                                 P_ID_MONEDA,
                                 L_ID_TIPOTARJETA,
                                 P_ID_PERSONA,
                                 l_id_ctabancaria,
                                 P_ID_MEDIOPAGO,
                                 l_id_voucher,
                                 P_OPERACION,
                                 P_FECHA,
                                 P_IMPORTE,
                                 P_IMPORTE_ME,
                                 P_TIPOCAMBIO,
                                 P_GLOSA,
                                 P_ESTADO,
                                 L_ID_VALE,
                                 P_ID_CIERRE)
                                RETURNING ID_DEPBANCO INTO L_ID_DEPOSITO;
                
                IF L_ID_DEPOSITO IS NOT NULL THEN -- is null  then
                   PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_ID_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,P_IMPORTE,0,0,P_GLOSA,l_error,l_msgerror,L_DEP_B);
                END IF;
            ELSE
                l_error :=1;
                l_msgerror := 'ERROR: Importe a Depositar Mayor al Cierre del Día '||L_DIF;
            END IF;
        end if;  
    
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_BANCO;
  
  PROCEDURE SP_CREAR_DEPOSITO_DETALLE(P_ID_DEPOSITO NUMBER,P_VENTAS VARCHAR2,P_IMP_VENTAS VARCHAR2,P_TIPO VARCHAR2,P_ID_MONEDA NUMBER,P_TIPO_CAMBIO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
    l_id_ddetalle number;
    l_id_voucher number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_total number(10,2);
    l_importe number(10,2);
    l_importe_me number(10,2);
    s_ventas tablastring; 
    s_importes tablastring;
    s_tipo tablastring;
    l_id_venta number;
    l_imp  number(10,2);
    l_cont number;
    l_id_saldo number;
    l_id_cliente number;
    l_id_transferencia number;
    BEGIN
 
      
      select FC_SPLIT_1(P_VENTAS,'|') into s_ventas  from dual;
      select FC_SPLIT_1(P_IMP_VENTAS,'|') into s_importes  from dual; 
      select FC_SPLIT_1(P_TIPO,'|') into s_tipo  from dual;
      
    IF  s_ventas.count > 0  AND s_tipo.count = 1 THEN
        s_tipo.extend(s_ventas.count);
        FOR a IN s_ventas.first..s_ventas.last LOOP
            s_tipo(a) := P_TIPO;
        END LOOP; 
    END IF;
      
      FOR i IN s_ventas.FIRST .. s_ventas.LAST
      LOOP
          select cast(s_ventas(i) as number) into l_id_venta from dual;
           
          select cast(s_importes(i) as number) into l_imp from dual;
          
          
          l_importe:=0;
          
          select id_cliente into l_id_cliente from caja_deposito
          where id_deposito = P_ID_DEPOSITO;
          
          --select count(1) into l_cont from VENTA where ID_VENTA=l_id_venta and id_cliente = l_id_cliente;
          
          --if l_cont > 0 then
          if s_tipo(i)='V' then
            select total into l_total from VENTA where ID_VENTA=l_id_venta and id_cliente = l_id_cliente;
            --L_ID_SALDO := NULL;
            select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_VENTA=l_id_venta;
          else
            if s_tipo(i)='S' then
                select total into l_total from VENTA_SALDO where id_saldo = l_id_venta and id_cliente = l_id_cliente;
                select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_SALDO=l_id_venta;
            else
                select importe into l_total from VENTA_TRANSFERENCIA where id_transferencia = l_id_venta and id_cliente = l_id_cliente;
                select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_TRANSFERENCIA=l_id_venta;
            end if;
            --l_id_venta :=NULL;
            --L_ID_SALDO := l_id_venta;
          end if;
          
          
          --select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_VENTA=l_id_venta;
          
          l_importe:=l_importe + l_imp;
          
          select coalesce(max(ID_DDETALLE),0)+1 into l_id_ddetalle from CAJA_DEPOSITO_DETALLE;
          
          if l_importe > l_total then
              l_error:=1; --no existe voucher
              l_msgerror:='Depósito Detalle: Importe pago mayor a total venta';
          end if;
        
         l_importe_me:=0;
         if P_ID_MONEDA=9 then
           l_importe_me:=l_imp;
           l_imp:=l_imp*P_TIPO_CAMBIO;
         end if;
         
         --Valida si la venta y deposito tiene a misma cuenta contable
         select count(*) into l_contar from VENTA_DETALLE A,CONTA_DINAMICA B, CONTA_DINAMICA_ASIENTO C
         WHERE A.ID_DINAMICA=B.ID_DINAMICA
         AND B.ID_DINAMICA=C.ID_DINAMICA
         AND A.ID_VENTA=ID_VENTA
         and C.ID_INDICADOR='IMPORTE'
         AND C.ID_CUENTAAASI IN(
            select ID_CUENTAAASI from CONTA_DINAMICA_ASIENTO where ID_DINAMICA=P_ID_DINAMICA
         );
         
         if l_contar=0 then
              l_error:=2; --no existe voucher
              l_msgerror:='Depósito Detalle: Cuenta contable del depósito es distinto a la cuenta contable de venta';
         end if;
         
         if l_error=0 then
         
        --if l_cont > 0 then
        if s_tipo(i)='V' then
            l_id_saldo := NULL;
            l_id_transferencia := NULL;
        else
            if s_tipo(i)='S' then
                l_id_saldo := l_id_venta;
                l_id_venta :=NULL;
                l_id_transferencia := NULL;
            else
                l_id_transferencia := l_id_venta;
                l_id_saldo := NULL;
                l_id_venta :=NULL;
            end if;
        end if;
         
          insert into CAJA_DEPOSITO_DETALLE(
            --ID_DDETALLE,
            ID_DEPOSITO,
            ID_VENTA,
            IMPORTE,
            IMPORTE_ME,
            ID_SALDO,
            ID_TRANSFERENCIA
          )values(
            --l_id_ddetalle,
            P_ID_DEPOSITO,
            l_id_venta,
            l_imp,
            l_importe_me,
            l_id_saldo,
            l_id_transferencia
          );
        end if;  
    END LOOP;
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_DETALLE;
  PROCEDURE SP_CREAR_DEPOSITO_DETALLE_ACES(P_ID_DEPOSITO NUMBER,P_VENTAS VARCHAR2,P_IMP_VENTAS VARCHAR2,P_TIPO VARCHAR2,P_ID_MONEDA NUMBER,P_TIPO_CAMBIO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
    l_id_ddetalle number;
    l_id_voucher number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_total number(10,2);
    l_importe number(10,2);
    l_importe_me number(10,2);
    s_ventas tablastring; 
    s_importes tablastring;
    --s_tipo tablastring;
    s_tipo VARCHAR2(4);
    l_id_venta number;
    l_imp  number(10,2);
    l_cont number;
    l_id_saldo number;
    l_id_cliente number;
    l_id_transferencia number;
    l_id_entidad number;
    BEGIN
      
      select FC_SPLIT (P_VENTAS,'|') into s_ventas  from dual;
      select FC_SPLIT (P_IMP_VENTAS,'|') into s_importes  from dual; 
      --select FC_SPLIT (P_TIPO,'|') into s_tipo  from dual;
      
      FOR i IN s_ventas.FIRST .. s_ventas.LAST
      LOOP
          select cast(s_ventas(i) as number) into l_id_venta from dual;
           
          select cast(s_importes(i) as number) into l_imp from dual;
          
          l_importe:=0;
          
          select id_entidad,id_cliente into l_id_entidad,l_id_cliente from caja_deposito
          where id_deposito = P_ID_DEPOSITO;
          
            SELECT  TIPO INTO s_tipo
            FROM VW_SALES_MOV
            WHERE ID_ENTIDAD = l_id_entidad AND ID_CLIENTE = l_id_cliente AND ID_VENTA = l_id_venta  
            GROUP BY ID_VENTA,TIPO HAVING SUM(TOTAL)>0 ;
          
          --select count(1) into l_cont from VENTA where ID_VENTA=l_id_venta and id_cliente = l_id_cliente;
          
          --if l_cont > 0 then
          if s_tipo = 'V' then
            select total into l_total from VENTA where ID_VENTA=l_id_venta and id_cliente = l_id_cliente;
            --L_ID_SALDO := NULL;
            select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_VENTA=l_id_venta;
          else
            if s_tipo = 'S' then
                select total into l_total from VENTA_SALDO where id_saldo = l_id_venta and id_cliente = l_id_cliente;
                select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_SALDO=l_id_venta;
            else
                select importe into l_total from VENTA_TRANSFERENCIA where id_transferencia = l_id_venta and id_cliente = l_id_cliente;
                select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_TRANSFERENCIA=l_id_venta;
            end if;
            --l_id_venta :=NULL;
            --L_ID_SALDO := l_id_venta;
          end if;
          
          
          --select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE where ID_VENTA=l_id_venta;
          
          l_importe:=l_importe + l_imp;
          
          select coalesce(max(ID_DDETALLE),0)+1 into l_id_ddetalle from CAJA_DEPOSITO_DETALLE;
          
          if l_importe > l_total then
              l_error:=1; --no existe voucher
              l_msgerror:='Depósito Detalle: Importe pago mayor a total venta';
          end if;
        
         l_importe_me:=0;
         if P_ID_MONEDA=9 then
           l_importe_me:=l_imp;
           l_imp:=l_imp*P_TIPO_CAMBIO;
         end if;
         
         --Valida si la venta y deposito tiene a misma cuenta contable
         select count(1) into l_contar from VENTA_DETALLE A,CONTA_DINAMICA B, CONTA_DINAMICA_ASIENTO C
         WHERE A.ID_DINAMICA=B.ID_DINAMICA
         AND B.ID_DINAMICA=C.ID_DINAMICA
         AND A.ID_VENTA=ID_VENTA
         and C.ID_INDICADOR='IMPORTE'
         AND C.ID_CUENTAAASI IN(
            select ID_CUENTAAASI from CONTA_DINAMICA_ASIENTO where ID_DINAMICA=P_ID_DINAMICA
         );
         
         if l_contar=0 then
              l_error:=2; --no existe voucher
              l_msgerror:='Depósito Detalle: Cuenta contable del depósito es distinto a la cuenta contable de venta';
         end if;
         
         if l_error=0 then
         
        --if l_cont > 0 then
        if s_tipo = 'V' then
            l_id_saldo := NULL;
            l_id_transferencia := NULL;
        else
            if s_tipo = 'S' then
                l_id_saldo := l_id_venta;
                l_id_venta :=NULL;
                l_id_transferencia := NULL;
            else
                l_id_transferencia := l_id_venta;
                l_id_saldo := NULL;
                l_id_venta :=NULL;
            end if;
        end if;
         
          insert into CAJA_DEPOSITO_DETALLE(
            --ID_DDETALLE,
            ID_DEPOSITO,
            ID_VENTA,
            IMPORTE,
            IMPORTE_ME,
            ID_SALDO,
            ID_TRANSFERENCIA
          )values(
            --l_id_ddetalle,
            P_ID_DEPOSITO,
            l_id_venta,
            l_imp,
            l_importe_me,
            l_id_saldo,
            l_id_transferencia
          );
        end if;  
    END LOOP;
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_DETALLE_ACES;
  PROCEDURE SP_CREAR_DEPOSITO_IMP(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_MONEDA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,
                              P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
    
    l_deposito number:=0;
    l_id_mediopago VARCHAR2(3);
    l_id_tipotransaccion NUMBER;
    l_id_dinamica NUMBER;
    l_id_tipoasiento varchar2(3) :='MB';
    l_id_tipotarjeta number:=null;
    l_estado varchar2(1):='X'; --1:vigente, 0:anulado, X:temporal al importar en 2 pasos
    l_error number:=0;
    l_msgerror varchar2(200):='';
    BEGIN
    
--        ASIENTO :
--        CAJA - CLIENTE
--        CAJA - BANCOS
        l_id_mediopago := '008'; --EFECTIVO:ASEI
        l_id_tipotransaccion := 14; --DEPOSITOS ALUMNOS
        l_id_dinamica := 21;--DEPOSITOS ALUMNOS BANCOS
      if l_error=0 then
        select coalesce(max(id_deposito),0)+1 into l_deposito from CAJA_DEPOSITO;
        -- insert into test_cli values(l_deposito);
        INSERT INTO CAJA_DEPOSITO (ID_DEPOSITO,
                           ID_ENTIDAD,
                           ID_DEPTO,
                           ID_ANHO,
                           ID_MES,
                           ID_MEDIOPAGO,
                           ID_PERSONA,
                           ID_CLIENTE,
                           ID_TIPOTRANSACCION,
                           ID_MONEDA,
                           ID_DINAMICA,
                           FECHA,
                           IMPORTE,
                           IMPORTE_ME,
                           TIPOCAMBIO,
                           GLOSA,
                           ESTADO)
        VALUES (l_deposito,
                 P_ID_ENTIDAD,
                 P_ID_DEPTO,
                 P_ID_ANHO,
                 P_ID_MES,
                 l_id_mediopago,
                 P_ID_PERSONA,
                 P_ID_CLIENTE,
                 l_id_tipotransaccion,
                 P_ID_MONEDA,
                 l_id_dinamica,
                 SYSDATE,
                 P_IMPORTE,
                 P_IMPORTE_ME,
                 P_TIPOCAMBIO,
                 P_GLOSA||' - Oper:'||P_OPERACION||' Fecha:'||TO_CHAR(P_FECHA_OP,'DD/MM/YYYY'),
                 l_estado);
                l_id_mediopago := '001'; --deposito en cuenta
                PKG_CAJA.SP_CREAR_DEPOSITO_BANCO(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_deposito,l_id_dinamica,P_ID_MONEDA,P_ID_CTABANCARIA,l_id_tipotarjeta,P_ID_PERSONA,l_id_mediopago,P_OPERACION,P_FECHA_OP,P_IMPORTE,P_IMPORTE_ME,P_TIPOCAMBIO,P_GLOSA,l_id_tipoasiento,l_estado,l_error,l_msgerror);
      end if;
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_IMP;
  PROCEDURE SP_CREAR_DEPOSITO_IMP_FIN(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_PERSONA NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
    l_id_voucher number;
    l_id_tipoasiento varchar2(4) :='MB';
    l_serie varchar2(4);
    l_numero varchar2(8);
    l_correlativo number :=0;
    l_id_comprobante varchar2(3):='00';  --deposito
    l_automatico varchar2(1);
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    BEGIN
    
        --obtiene numero y serie y actualiza correlativo
        PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, NULL, l_serie,l_correlativo);
          
      if l_correlativo=0 or l_correlativo is null then
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||')';
      else
            --obtener voucher
          select count(*) into l_contar from CONTA_VOUCHER_CONFIG  
          where ID_ENTIDAD=P_ID_ENTIDAD 
          and ID_DEPTO= P_ID_DEPTO
          and ID_TIPOASIENTO=l_id_tipoasiento 
          and ID_ANHO=P_ID_ANHO
          and id_tipovoucher = 5; 
          
          --dbms_output.put_line(l_id_entidad||'-'||l_id_depto||'-'||l_id_anho);
          
          if l_contar>0  then
            select AUTOMATICO into l_automatico from CONTA_VOUCHER_CONFIG  
            where ID_ENTIDAD=P_ID_ENTIDAD 
            and ID_DEPTO= P_ID_DEPTO
            and ID_TIPOASIENTO=l_id_tipoasiento 
            and ID_ANHO=P_ID_ANHO
            and id_tipovoucher = 5; -- 5= tipo voucher ingresos   
            
            if l_automatico='S' then
              PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,l_id_tipoasiento,5,null,'S',P_ID_PERSONA,l_id_voucher);
            end if;
          end if;
      end if;
      
      if l_id_voucher=0 then
          l_error:=2; --no existe voucher
          l_msgerror:='Depósito: No existe voucher';
      end if;
        if l_error=0 then
            UPDATE CAJA_DEPOSITO_BANCO SET  ID_VOUCHER = l_id_voucher,
                                            ESTADO = '1'
            WHERE ID_DEPOSITO IN (
                SELECT ID_DEPOSITO FROM CAJA_DEPOSITO 
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO
                AND ID_ANHO = P_ID_ANHO
                AND ID_PERSONA = P_ID_PERSONA
                AND ESTADO = 'X'
            );
            
            UPDATE CAJA_DEPOSITO SET 
                                        ID_VOUCHER = l_id_voucher,
                                        SERIE = l_serie,
                                        NUMERO = l_numero,
                                        ESTADO = '1'
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = P_ID_ANHO
            AND ID_PERSONA = P_ID_PERSONA
            AND ESTADO = 'X';
        end if;
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_IMP_FIN;
  PROCEDURE SP_GENERAR_ASIENTO_DEPOSITO(P_ID_DEPOSITO NUMBER,P_ID_DINAMICA NUMBER,P_ID_CTABANCARIA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER ,P_IMPORTE_TRANS NUMBER,P_DETALLE VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2,P_DEP_B VARCHAR2 default null) IS
     
        l_dinamica number;
        l_asiento number;
        l_detalle varchar2(200);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_tarjeta number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher number;
        l_id_depto_deposito varchar2(20);
        l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        --l_id_operorigen number:=5;
        l_id_tipoorigen number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_id_cliente number;
        l_agrupa varchar2(1);
        /*
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        */
        L_CC VARCHAR2(8);
        L_DIA NUMBER;
        l_esanonima varchar2(1);
        l_id_moneda number;
        l_importeasiento_me number(10,2);
        l_importe_me number(10,2);
        
        CURSOR cdet IS	
        SELECT  ID_DINAMICA,ID_ENTIDAD
        FROM CONTA_DINAMICA 
        WHERE ID_DINAMICA=P_ID_DINAMICA;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;

    BEGIN
     
        l_detalle:=P_DETALLE;
        l_importe:= P_IMPORTE;
        l_importe_tarjeta:=P_IMPORTE_TARJETA;
        l_importe_trans:=P_IMPORTE_TRANS;
        l_fondo:='10';
        
        --VALIDA EL TIPO DE PAGO PARA GENERAR EL ASIENTO
        IF P_IMPORTE > 0 THEN --PAGO CON EFECTIVO
            l_importe_tarjeta := 0;
            l_importe_trans :=0;
        ELSIF P_IMPORTE_TARJETA > 0 THEN --PAGO CON TARJETA
            l_importe := 0;
            l_importe_trans :=0;
        ELSE --PAGO A CUENTA PERSONAL
             l_importe := 0;
            l_importe_tarjeta :=0;
        END IF;
        
        if P_ID_DEPOSITO is not null then
            IF P_DEP_B = 'S' THEN 
                SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO_BANCO WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN 
                    SELECT ID_DEPTO, ID_VOUCHER, ID_TIPOORIGEN, '-' AS SERIE, OPERACION AS NUMERO into l_id_depto_deposito, l_voucher,l_id_tipoorigen, l_serie, l_numero
                    FROM CAJA_DEPOSITO_BANCO
                    WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                END IF;
            ELSE
                SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO  WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN 
                    select ID_DEPTO, ID_CLIENTE,ID_VOUCHER, ID_TIPOORIGEN, SERIE, NUMERO,IMPORTE_ME into l_id_depto_deposito, l_id_cliente,l_voucher,l_id_tipoorigen, l_serie, l_numero,l_importe_me
                    from CAJA_DEPOSITO 
                    WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                END IF;
            END IF;
            /*
            SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO  WHERE ID_DEPOSITO = P_ID_DEPOSITO;
            IF l_cont > 0 THEN 
                select ID_DEPTO, ID_CLIENTE,ID_VOUCHER, ID_TIPOORIGEN, SERIE, NUMERO into l_id_depto_deposito, l_id_cliente,l_voucher,l_id_tipoorigen, l_serie, l_numero
                from CAJA_DEPOSITO 
                WHERE ID_DEPOSITO = P_ID_DEPOSITO;
            ELSE
                SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO_BANCO WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN 
                    SELECT ID_DEPTO, ID_VOUCHER, ID_TIPOORIGEN, '-' AS SERIE, OPERACION AS NUMERO into l_id_depto_deposito, l_voucher,l_id_tipoorigen, l_serie, l_numero
                    FROM CAJA_DEPOSITO_BANCO
                    WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                END IF;
            END IF;*/
            --IDENTIFICO EL CENTRO DEL COSTO DEL PERSONAL
            SELECT COUNT(1) INTO l_cont
            FROM CAJA_DEPOSITO A JOIN APS_TRABAJADOR B
            ON A.ID_CLIENTE = B.ID_PERSONA
            WHERE A.ID_DEPOSITO = P_ID_DEPOSITO
            AND A.ID_MEDIOPAGO = '999';
            IF l_cont > 0 THEN
                SELECT SUBSTR(B.ID_DEPTO,1,1) INTO L_CC
                FROM CAJA_DEPOSITO A JOIN APS_TRABAJADOR B
                ON A.ID_CLIENTE = B.ID_PERSONA
                WHERE A.ID_DEPOSITO = P_ID_DEPOSITO
                AND A.ID_MEDIOPAGO = '999';
            END IF;
        end if;
        IF l_voucher IS NULL OR l_voucher = 0 THEN
            l_error :=1;
            l_msgerror:='No existe Voucher-'||P_ID_DEPOSITO;
            --goto salida_rapida;
        END IF;
      
        SELECT to_char(l_id_tipoorigen) || '-' || to_char(P_ID_DEPOSITO) INTO l_memo FROM DUAL;
        
        --l_detalle := '(Dep: '|| COALESCE(l_serie,'-') || '-' || COALESCE(l_numero,'-') || ') ' || l_detalle;
        
     --OBTIENE DATOS DE LA VENTA
      --select ID_ENTIDAD,SERIE,NUMERO,FECHA,ID_CLIENTE into l_id_entidad,l_serie,l_numero,l_fecha,l_id_cliente from VENTA where ID_VENTA=P_ID_VENTA;

     --DETALLE
        OPEN cdet;
        FETCH cdet INTO l_dinamica,l_id_entidad;

        WHILE cdet%FOUND LOOP
        
            ---DENAMICA ASIENTO
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
            WHILE casi%FOUND LOOP
            
                select (case when l_id_indicador='IMPORTE' then 
                            (l_importe)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then
                            (l_importe_tarjeta)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TRANS' then
                               (l_importe_trans)*(l_porcentaje)
                          else
                          0
                          end),
                        (case when l_id_indicador='IMPORTE' then 
                            (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then
                            (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TRANS' then
                               (l_importe_me)*(l_porcentaje)
                          else
                          0
                          end) into l_importeasiento,l_importeasiento_me
                from dual;
                
                l_depto:=null;
                l_cuenta_cte:=null;
                
                if l_importeasiento<>0 then
                
                    if l_unico='U' then
                      select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unico='M') then
                       SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif(l_unico='X') then
                       select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                    elsif l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_deposito;
                    end if;
                
                    if l_unicoctate='U' then
                      
                      
                      --IMPORTAR DEPOSITO
                        SELECT COUNT(1) into l_cont FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                        IF l_cont > 0 THEN
                            if l_dc = 'D' then
                                SELECT ID_MONEDA,ES_ANONIMA into l_id_moneda,l_esanonima FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                IF l_esanonima = 'S' THEN 
                                    SELECT ID_CUENTAAASI,ID_TIPOCTACTE INTO l_id_cuentaaasi,l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                ELSE
                                    SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                END IF;
                                if l_id_moneda = 9 then
                                    SELECT ID_CUENTAAASI INTO l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                end if;
                            end if;
                        END IF;
                        IF l_cuenta_cte IS NULL THEN
                            select  count(1) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        END IF;
                      --LO COMENTÉ TODO IVA A UNA CTA DE BANCO
                      --if l_cont>0 then
                        --select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                      --end if;
                    elsif(l_unicoctate='M') then
                       SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif(l_unicoctate='X') then
                        select COUNT(1) into l_cont from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;
                        IF l_cont > 0 THEN
                            select MIN(NUM_DOCUMENTO) into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;
                        ELSE
                            SELECT COUNT(1) into l_cont  FROM MOISES.VW_PERSONA_NATURAL WHERE ID_PERSONA=l_id_cliente AND ID_TIPODOCUMENTO = 4;
                            IF l_cont > 0 THEN
                                SELECT NUM_DOCUMENTO INTO l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL WHERE ID_PERSONA=l_id_cliente AND ID_TIPODOCUMENTO = 4;
                            ELSE
                                SELECT COUNT(1) into l_cont FROM MOISES.VW_PERSONA_JURIDICA WHERE ID_PERSONA=l_id_cliente;
                                IF l_cont > 0 THEN
                                    SELECT ID_RUC INTO l_cuenta_cte FROM MOISES.VW_PERSONA_JURIDICA WHERE ID_PERSONA=l_id_cliente;
                                END IF;
                            END IF;
                        END IF;
                    elsif(l_unicoctate='B') then--LA CTA CTE SE OBTIENE DEL LA CTA BANCARIA
                        SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                    end if;
                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                      l_importeasiento_me:=l_importeasiento_me*(-1);
                    end if;
                
                    select count(1) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_DEPOSITO
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                    
                    --== LA CUENTA 1135001 SOLO ES PARA SEDE, PARA LOS CENTROS DE COSTO ES LA CTA PUENTE
                    SELECT TO_NUMBER(TO_CHAR(SYSDATE,'DD')) INTO L_DIA FROM DUAL;
                    IF L_DIA < 25 THEN
                        IF (L_CC = '2' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '21010101';
                            l_depto := '11010101';
                        ELSIF (L_CC = '3' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '31010101';
                            l_depto := '11010101';
                        ELSIF (L_CC = '4' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '41010101';
                            l_depto := '11010101';
                        ELSE
                            l_cont := 0;
                        END IF;
                    ELSE --VENTAS AL CREDITO A PARTIR DEL 26
                        IF l_id_cuentaaasi = '1135001' THEN
                            l_id_cuentaaasi := '1139090';
                            l_cuenta_cte := '21';
                            l_depto := '11010101';
                        END IF;
                    END IF;
                
                  if l_cont=0 then
                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA,
                    IMPORTE_ME
                    )VALUES ( 
                    l_id_tipoorigen,
                    P_ID_DEPOSITO,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    l_detalle,
                    l_memo,
                    l_voucher,
                    null,
                    l_ref_id ,
                    l_agrupa,
                    l_importeasiento_me
                    );
                  else
                  
                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento,IMPORTE_ME = IMPORTE_ME+l_importeasiento_me
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_DEPOSITO
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                    
                  end if;
                end if;
                  --DESTINO
                  OPEN casides;
                  FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  WHILE casides%FOUND LOOP
                  
                  
                    select (case when l_id_indicadord='IMPORTE' then 
                            (l_importe)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TARJETA' then
                              (l_importe_tarjeta)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TRANS' then
                               (l_importe_trans)*(l_porcentaje)
                          else
                          0
                          end),
                        (case when l_id_indicador='IMPORTE' then 
                            (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then
                            (l_importe_me)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TRANS' then
                               (l_importe_me)*(l_porcentaje)
                          else
                          0
                          end) into l_importeasiento,l_importeasiento_me
                from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                  
                    if l_unicod='U' then
                      select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                    elsif(l_unicod='M') then
                       SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into l_depto from dual;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif(l_unicod='X') then
                       select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                    end if;
                    
                    if l_unicoctated='U' then
                      select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      if l_cont>0 then
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      end if;

                    elsif(l_unicoctated='M') then
                       SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into l_cuenta_cte from dual;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif(l_unicoctated='X') then
                      select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                    end if;
                    
                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    if l_importeasiento<>0 then
                    
                      select count(*) into l_cont from CONTA_ASIENTO
                      where ID_TIPOORIGEN=l_id_tipoorigen
                      and ID_ORIGEN=P_ID_DEPOSITO
                      and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                      and CUENTA =l_id_cuentaaasid
                      and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                      and case when importe>0 then 'D' else 'C' end=l_dc;
                      
                    
                      IF l_agrupa='S' and l_cont>0 THEN
                        update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento,IMPORTE_ME = IMPORTE_ME+l_importeasiento_me
                        where ID_TIPOORIGEN=l_id_tipoorigen
                        and ID_ORIGEN=P_ID_DEPOSITO
                        and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                        and CUENTA =l_id_cuentaaasid
                        and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                        and case when importe>0 then 'D' else 'C' end=l_dc;
                      
                      ELSE
                        INSERT INTO CONTA_ASIENTO (
                        ID_TIPOORIGEN,
                        ID_ORIGEN, 
                        FONDO,
                        DEPTO,
                        CUENTA, 
                        CUENTA_CTE,
                        RESTRICCION,
                        IMPORTE,
                        DESCRIPCION,
                        MEMO,
                        VOUCHER, 
                        PARENT_ID,
                        REF_ID,
                        IMPORTE_ME
                        )VALUES ( 
                        l_id_tipoorigen,
                        P_ID_DEPOSITO,
                        l_fondo,
                        l_depto,
                        l_id_cuentaaasid,
                        l_cuenta_cte,
                        l_id_restricciond,
                        l_importeasiento,
                        l_detalle,
                        l_memo,
                        l_voucher,
                        null,
                        l_ref_id,
                        l_importeasiento_me
                        );
                      END IF;
                    
                      
                    end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  END LOOP;
                  CLOSE casides; 
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                
              END LOOP;
              CLOSE casi; 

            FETCH cdet INTO l_dinamica,l_id_entidad;

        END LOOP;
        CLOSE cdet; 
        
        
        select count(1) into l_contar from CONTA_ASIENTO
        where ID_TIPOORIGEN=l_id_tipoorigen
        and ID_ORIGEN=P_ID_DEPOSITO;
        
        if l_contar=0 then
          l_error:=3; --no se ha generado el asiento
          l_msgerror:='Asiento Depósito: No se ha generado el asiento';    
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN=P_ID_DEPOSITO;
          
          if l_credito=0 or l_credito=0 then
             l_error:=4; --importe de debito o credito igual a cero
             l_msgerror:='Asiento Depósito: Importe de débito o crédito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=5; --descuadre de asiento
              l_msgerror:='Asiento Depósito: Descuadre de asiento';
             end if;
          end if;
          
        end if;
        
       -- <<salida_rapida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_GENERAR_ASIENTO_DEPOSITO;
    PROCEDURE SP_CREAR_PAGO(P_ID_MEDIOPAGO VARCHAR2,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_VALE NUMBER,P_ID_VOUCHER NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_USER NUMBER,
                              P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA  NUMBER,P_NUMERO VARCHAR2,P_FECHA DATE,P_TIPOCAMBIO NUMBER,P_ID_PAGO OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
                              
        l_pago number:=0;
        l_estado varchar2(1):='0'; --1:vigente, 0:anulado
        L_ID_CTABANCARIA number := null;
        L_ID_CHEQUERA number :=null;
        L_ID_VALE number :=null;
        L_ID_MONEDA number :=null;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        L_FECHA date;
        L_ID_TIPOTRANSACCION NUMBER;
        BEGIN
            
            --l_error := 1;
            -- l_msgerror := 'hOA';
            --select TO_CHAR(fecha, 'DD/MM/YYYY') into L_FECHA from caja_chequera WHERE ID_CHEQUERA=P_ID_CHEQUERA;
            
            if l_error=0 then
                
                DELETE FROM CAJA_PAGO_GASTO_ASIENTO
                WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO WHERE ID_PAGO IN (
                            SELECT ID_PAGO FROM CAJA_PAGO
                            WHERE ID_USER = P_ID_USER
                            AND ESTADO = '0'
                            )
                );
                
                --ELIMINNA LOS FILES QUE EL USER SUBE MIESTRAS ESTE EN PROCESO
                DELETE  FROM CAJA_VALE_FILE WHERE ID_PGASTO IN(
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO WHERE ID_USER = P_ID_USER  AND ESTADO = '0'
                    )
                )
                AND ID_USER = P_ID_USER
                AND ORIGEN = '2';
                
                --ACTUALIZA EL FILE A NULL CUANDO ESTA EN PROCESO
                UPDATE CAJA_VALE_FILE SET ID_PGASTO = NULL WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO WHERE ID_USER = P_ID_USER  AND ESTADO = '0'
                    )
                )
                --AND ID_USER = P_ID_USER --IS NULL;
                ;
                
                
                UPDATE CAJA_VALE_GASTO SET ID_PGASTO = NULL WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO
                        WHERE ID_USER = P_ID_USER
                        AND ESTADO = '0'
                    )
                );
                
                --UPDATE CAJA_DOCUMENTO
                UPDATE CAJA_DOCUMENTO SET ID_PGASTO = NULL 
                WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO
                        WHERE ID_USER = P_ID_USER
                        AND ESTADO = '0'
                    )
                )
                AND CODIGO = 'AUTDOC';
                
                DELETE FROM CAJA_PAGO_GASTO
                WHERE ID_PAGO IN (
                    SELECT ID_PAGO FROM CAJA_PAGO
                    WHERE ID_USER = P_ID_USER
                    AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_COMPRA
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_VENTA
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );
                
                DELETE FROM CAJA_PAGO_ASIENTO
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );
                
                DELETE FROM CAJA_PAGO_FILE
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0';
      
                --SELECT coalesce(max(ID_PAGO),0)+1 into l_pago FROM CAJA_PAGO;
        
                IF P_ID_CTABANCARIA IS NULL OR P_ID_CTABANCARIA = 0 THEN
                    L_ID_CTABANCARIA:=null;
                ELSE
                    L_ID_CTABANCARIA:=P_ID_CTABANCARIA;
                END IF;
                
                IF P_FECHA IS NULL THEN
                    L_FECHA := NULL;
                ELSE
                    L_FECHA := to_date(to_char(P_FECHA, 'dd/mm')||'/20'||to_char(P_FECHA,'yy'), 'dd/mm/yyyy');
                END IF;
                
                IF P_ID_CHEQUERA IS NULL OR P_ID_CHEQUERA = 0 THEN
                    L_ID_CHEQUERA:=null;
                ELSE --FECHA PARA CHEQUE ES DE LA CHEQUERA
                    L_ID_CHEQUERA:=P_ID_CHEQUERA;
                    SELECT FECHA INTO L_FECHA FROM CAJA_CHEQUERA WHERE ID_CHEQUERA=P_ID_CHEQUERA;
                END IF;
                
                IF P_ID_VALE IS NULL OR P_ID_VALE = 0 THEN
                    L_ID_VALE:=null;
                ELSE
                    L_ID_VALE:=P_ID_VALE;
                END IF;
                
                IF P_ID_MONEDA IS NULL OR P_ID_MONEDA = 0 THEN
                    L_ID_MONEDA:=null;
                ELSE 
                    L_ID_MONEDA:=P_ID_MONEDA;
                END IF;
                
                IF P_ID_TIPOTRANSACCION IS NULL OR P_ID_TIPOTRANSACCION = 0 THEN
                    L_ID_TIPOTRANSACCION:=null;
                ELSE 
                    L_ID_TIPOTRANSACCION := P_ID_TIPOTRANSACCION;
                END IF;
        
                INSERT INTO CAJA_PAGO(
                    ID_PAGO,
                    ID_MEDIOPAGO,
                    ID_ENTIDAD,
                    ID_DEPTO,
                    ID_CTABANCARIA,
                    ID_CHEQUERA,
                    ID_VALE,
                    ID_VOUCHER,
                    ID_ANHO,
                    ID_MES,
                    ID_USER,
                    ID_TIPOTRANSACCION,
                    ID_MONEDA,
                    NUMERO,
                    FECHA,
                    FECHA_REG,
                    TIPOCAMBIO,
                    ESTADO
                )VALUES(
                  l_pago,
                  P_ID_MEDIOPAGO, 
                  P_ID_ENTIDAD, 
                  P_ID_DEPTO, 
                  L_ID_CTABANCARIA,
                  L_ID_CHEQUERA,
                  L_ID_VALE,
                  P_ID_VOUCHER,
                  P_ID_ANHO, 
                  P_ID_MES,  
                  P_ID_USER, 
                  L_ID_TIPOTRANSACCION,
                  L_ID_MONEDA,
                  P_NUMERO,
                  L_FECHA,
                  sysdate,
                  TO_NUMBER(P_TIPOCAMBIO), 
                  l_estado
                ) RETURNING ID_PAGO INTO l_pago;
            end if;
        P_ID_PAGO :=l_pago;  
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_PAGO;
  
  PROCEDURE SP_CREAR_PAGO_DEP_CAJACHICA(P_ID_ENTIDAD NUMBER, P_ID_DEPTO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_ANHO NUMBER, P_ID_MES NUMBER, P_ID_USER NUMBER,
                                        P_ID_TIPOTRANSACCION NUMBER, P_ID_DINAMICA NUMBER,P_ID_CTABANCARIA NUMBER,P_NUMERO VARCHAR2,
                                        P_ID_CHEQUERA NUMBER,P_ID_MONEDA NUMBER,P_TIPOCAMBIO NUMBER,P_DETALLE VARCHAR2,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,
                                        P_ID_PAGO IN OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
                              
        l_estado varchar2(1):='1'; --1:vigente, 0:anulado
        L_ID_CTABANCARIA number := null;
        L_ID_CHEQUERA number :=null;
        L_ID_MONEDA number :=null;
        L_FECHA date;
        L_ID_MEDIOPAGO varchar2(200):='007'; -- Cheque
        
        l_id_pago number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        BEGIN
            
            if l_error=0 then
                
                /*
                DELETE FROM CAJA_PAGO_GASTO_ASIENTO
                WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO WHERE ID_PAGO IN (
                            SELECT ID_PAGO FROM CAJA_PAGO
                            WHERE ID_USER = P_ID_USER
                            AND ESTADO = '0'
                            )
                );
                */
                --ACTUALIZA EL FILE A NULL CUANDO ESTA EN PROCESO
                UPDATE CAJA_VALE_FILE SET ID_PGASTO = NULL WHERE ID_PGASTO IN (
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO WHERE ID_USER = P_ID_USER  AND ESTADO = '0'
                    )
                )
                AND ID_USER IS NULL;
                --ELIMINNA LOS FILES QUE EL USER SUBE MIESTRAS ESTE EN PROCESO
                DELETE  FROM CAJA_VALE_FILE WHERE ID_PGASTO IN(
                    SELECT ID_PGASTO FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO IN (
                        SELECT ID_PAGO FROM CAJA_PAGO WHERE ID_USER = P_ID_USER  AND ESTADO = '0'
                    )
                )
                AND ID_USER = P_ID_USER;
                
                DELETE FROM CAJA_PAGO_GASTO
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_COMPRA
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO_VENTA
                WHERE ID_PAGO IN (
                SELECT ID_PAGO FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0'
                );

                DELETE FROM CAJA_PAGO
                WHERE ID_USER = P_ID_USER
                AND ESTADO = '0';
      
                -- SELECT coalesce(max(ID_PAGO),0)+1 into l_pago FROM CAJA_PAGO;
        
                IF P_ID_CTABANCARIA IS NULL OR P_ID_CTABANCARIA = 0 THEN
                    L_ID_CTABANCARIA:=null;
                ELSE
                    L_ID_CTABANCARIA:=P_ID_CTABANCARIA;
                END IF;
                
                /*
                IF P_FECHA IS NULL THEN
                    L_FECHA := NULL;
                ELSE
                    L_FECHA := P_FECHA;
                END IF;
                */
                
                IF P_ID_CHEQUERA IS NULL OR P_ID_CHEQUERA = 0 THEN
                    L_ID_CHEQUERA:=null;
                ELSE
                    L_ID_CHEQUERA:=P_ID_CHEQUERA;
                    select TO_CHAR(fecha, 'DD/MM/YYYY') into L_FECHA from caja_chequera WHERE ID_CHEQUERA=P_ID_CHEQUERA;
                END IF;
                
                IF P_ID_MONEDA IS NULL OR P_ID_MONEDA = 0 THEN
                    L_ID_MONEDA:=null;
                ELSE 
                    L_ID_MONEDA:=P_ID_MONEDA;
                END IF;
        
                INSERT INTO CAJA_PAGO(
                    ID_MEDIOPAGO,
                    ID_ENTIDAD,
                    ID_DEPTO,
                    ID_CTABANCARIA,
                    ID_CHEQUERA,
                    ID_VOUCHER,
                    ID_ANHO,
                    ID_MES,
                    ID_USER,
                    ID_TIPOTRANSACCION,
                    ID_MONEDA,
                    NUMERO,
                    FECHA,
                    FECHA_REG,
                    TIPOCAMBIO,
                    ESTADO
                )VALUES(
                  L_ID_MEDIOPAGO, 
                  P_ID_ENTIDAD, 
                  P_ID_DEPTO, 
                  L_ID_CTABANCARIA,
                  L_ID_CHEQUERA,
                  P_ID_VOUCHER,
                  P_ID_ANHO, 
                  P_ID_MES,  
                  P_ID_USER, 
                  P_ID_TIPOTRANSACCION,
                  L_ID_MONEDA,
                  P_NUMERO,
                  L_FECHA,
                  sysdate,
                  P_TIPOCAMBIO, 
                  l_estado
                ) RETURNING ID_PAGO INTO l_id_pago;
                
                INSERT INTO CAJA_PAGO_GASTO(
                    ID_PAGO, ID_DINAMICA, ID_PERSONA, DETALLE,
                    IMPORTE, IMPORTE_ME, FECHA,ID_MONEDA
                )VALUES(
                  l_id_pago, P_ID_DINAMICA, P_ID_USER, P_DETALLE,
                  P_IMPORTE, P_IMPORTE_ME, L_FECHA,L_ID_MONEDA
                );
                
                INSERT INTO CAJA_DEPOSITO(
                    ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_VOUCHER,ID_MEDIOPAGO,
                    ID_PERSONA,ID_CLIENTE,ID_SUCURSAL,ID_TIPOTRANSACCION,ID_MONEDA, 
                    ID_DINAMICA, SERIE, NUMERO, FECHA, IMPORTE, IMPORTE_ME, TIPOCAMBIO,  
                    GLOSA, NOMBRE_DEP, DOCUMENTO_DEP, ESTADO,
                    ID_PAGO
                    --ID_TIPOORIGEN, ID_VALE, ID_TIPOTARJETA,ID_CTABANCARIA, FECHA_OPERACION, NRO_OPERACION
                )VALUES(
                    P_ID_ENTIDAD,P_ID_DEPTO, P_ID_ANHO, P_ID_MES, P_ID_VOUCHER, L_ID_MEDIOPAGO, 
                    P_ID_USER, P_ID_USER, NULL, P_ID_TIPOTRANSACCION, L_ID_MONEDA, 
                    P_ID_DINAMICA, NULL, NULL, L_FECHA, P_IMPORTE, P_IMPORTE_ME, P_TIPOCAMBIO, 
                    P_DETALLE, NULL, NULL, '1',
                    l_id_pago
                );
                
                
                PKG_CAJA.SP_GENERAR_ASIENTO_DEP_CAJACHI(l_id_pago,l_error,l_msgerror);
            end if;
        P_ID_PAGO :=l_id_pago;  
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_PAGO_DEP_CAJACHICA;
  
    PROCEDURE SP_CREAR_PAGO_GASTO(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_PERSONA NUMBER,P_DETALLE VARCHAR2, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,
        P_FECHA DATE, P_ID_PGASTO IN OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
        l_id_pgasto NUMBER(38); 
        l_contar NUMBER;
        l_error NUMBER:=0;
        l_msgerror VARCHAR2(300):='';
        --l_importe_me number(10,2);
        L_ID_PERSONA NUMBER :=NULL;
        L_ID_DINAMICA NUMBER :=NULL;
        --L_ID_TIPOORIGEN NUMBER;
        L_DETALLE VARCHAR2(100);
    
        BEGIN
        	l_error:=0;
	        SELECT COUNT(1) into l_contar FROM ELISEO.CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
	        -- Validamos que exista el pago.
            IF l_contar = 0 THEN
              l_error := 1;
              l_msgerror := 'Alto! El pago con Id: ' || P_ID_PAGO || ' no existe, vuelva a crear el pago.';
              GOTO salida_rapida;
            END IF;
           
            --- CADA VEZ QUE SE ACTUALIZE O SE AGREGUE ALGO DE DETALLE AL PAGO EL PAGO AUTOMATICAMENTE SE PONE EN ESTADO 0
            UPDATE ELISEO.CAJA_PAGO SET ESTADO='0' WHERE ID_PAGO=P_ID_PAGO;
            ---
            
            
            
            SELECT ID_ENTIDAD||'-'||COALESCE(P_DETALLE,'')||'-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||TO_NUMBER(NUMERO)||'-'||TO_CHAR(FECHA,'DD/MM/YY') GLOSA INTO L_DETALLE
            FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
            IF P_ID_PERSONA IS NULL OR P_ID_PERSONA = 0 THEN
                L_ID_PERSONA:=null;
            ELSE --A/C
                L_ID_PERSONA := P_ID_PERSONA;
            END IF;
            
            IF P_ID_DINAMICA IS NULL OR P_ID_DINAMICA = 0 THEN
                L_ID_DINAMICA:=null;
            ELSE
                L_ID_DINAMICA :=P_ID_DINAMICA;
            END IF;
            --l_error := 1;
            --l_msgerror:=L_ID_DINAMICA;
            if l_error=0 then
                INSERT INTO CAJA_PAGO_GASTO(
                ID_PAGO,
                ID_DINAMICA,
                ID_PERSONA,
                --ID_TIPOORIGEN,
                DETALLE,
                IMPORTE,
                IMPORTE_ME,
                FECHA
                )values(
                P_ID_PAGO,
                L_ID_DINAMICA,
                L_ID_PERSONA,
                --L_ID_TIPOORIGEN,
                L_DETALLE,
                P_IMPORTE,
                P_IMPORTE_ME,
                P_FECHA
                )returning ID_PGASTO into l_id_pgasto;
                l_msgerror:='Pago OK';
            end if;
        
        <<salida_rapida>>
        P_ID_PGASTO :=l_id_pgasto;  
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_PAGO_GASTO;
    
    PROCEDURE SP_CREAR_PAGO_GASTO_ASIENTO(P_ID_FONDO NUMBER,P_ID_DEPTO VARCHAR2,P_ID_CUENTAAASI VARCHAR2, P_ID_RESTRICCION VARCHAR2,P_ID_CTACTE VARCHAR2,
       P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_IS_DC VARCHAR2, P_DESCRIPCION VARCHAR2, P_ID_PGASTO NUMBER,P_ERROR OUT NUMBER, P_ID_GASIENTO IN OUT NUMBER
    ) IS
        L_EDITABLE VARCHAR2(1) := 'S';
        -- L_ID_PARENT NUMBER := NULL;
        L_ID_TIPOREGISTRO VARCHAR2(1) := 'D';
        -- L_DC VARCHAR2(1) := NULL;
        -- L_DC_HIJO VARCHAR2(1) := NULL;
        -- L_DC_HIJO_CONTRA VARCHAR2(1) := NULL;
        
        L_IMPORTE NUMBER := 0;
        L_IMPORTE_ME NUMBER := 0;
        L_IS_DC VARCHAR2(10) := '';
        
        l_id_gasiento number;
        l_error number:=0;
    BEGIN
        l_error:=0;
		L_IS_DC := P_IS_DC;
       	IF L_IS_DC = 'False' OR L_IS_DC = 'false' THEN -- Arreglo para evitar errores 
       		L_IS_DC := 'D';
       	END IF;
       	
        IF L_IS_DC = 'C' THEN
            L_IMPORTE := (P_IMPORTE)*(-1);
            L_IMPORTE_ME := (P_IMPORTE_ME)*(-1);
        ELSE 
            L_IMPORTE := P_IMPORTE;
            L_IMPORTE_ME := P_IMPORTE_ME;
        END IF;
        
        if l_error=0 then
            --SELECT NVL(MAX(ID_GASIENTO),0)+1 INTO l_id_gasiento FROM CAJA_PAGO_GASTO_ASIENTO;
            INSERT INTO CAJA_PAGO_GASTO_ASIENTO
                (
                --ID_GASIENTO, 
                ID_PGASTO, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, 
                ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, AGRUPA)
            VALUES 
                (
                --l_id_gasiento, 
                P_ID_PGASTO, P_ID_CUENTAAASI, P_ID_RESTRICCION, P_ID_CTACTE, P_ID_FONDO,
                P_ID_DEPTO, L_IMPORTE, L_IMPORTE_ME, 
                SUBSTR(P_DESCRIPCION,0,50),
                L_EDITABLE, null, L_ID_TIPOREGISTRO, L_IS_DC, 'N') RETURNING ID_GASIENTO INTO l_id_gasiento;
        end if;
        
        P_ID_GASIENTO :=l_id_gasiento;  
        P_ERROR:=l_error;
    END SP_CREAR_PAGO_GASTO_ASIENTO;
    
    PROCEDURE SP_CREAR_PAGO_COMPRA(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_COMPRA NUMBER, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ID_PAGO_COMPRA IN OUT NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
        l_id_pcompra number := 0;
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        L_ID_PERSONA number :=null;
        L_IMPORTE_SALDO number(10,2);
        L_IMPORTE_SALDO_ME number(10,2);

        L_ID_TIPOORIGEN number := 8;
    
        L_IMPORTE_PAGADO number(10,2);
        L_IMPORTE_PAGADO_ME number(10,2);
        L_PROVEEDOR VARCHAR2(200);
        --L_CORRELATIVO NUMBER;
        L_DETALLE VARCHAR2(80);
        L_ID_MONEDA NUMBER;
        L_TIPOCAMBIO NUMBER;
        
        L_IMPORTE NUMBER;
        L_ID_COMPRA NUMBER :=NULL;
        L_ID_SALDO NUMBER :=NULL;
        L_DOC VARCHAR2(40);
        L_ID_ANHO VARCHAR2(5);
    
        BEGIN
        
            --- CADA VEZ QUE SE ACTUALIZE O SE AGREGUE ALGO DE DETALLE AL PAGO EL PAGO AUTOMATICAMENTE SE PONE EN ESTADO 0
            UPDATE ELISEO.CAJA_PAGO SET ESTADO='0' WHERE ID_PAGO=P_ID_PAGO;
            ---
            
            l_error:=0;
            if l_error=0 then
                /*SELECT 
                        SUBSTR(FC_NOMBRE_PERSONA(ID_PROVEEDOR),1,100) PROVEEDOR
                        --- ,CORRELATIVO
                        INTO
                        L_PROVEEDOR
                        -- ,L_CORRELATIVO
                FROM COMPRA
                WHERE ID_COMPRA = P_ID_COMPRA;*/
                
                SELECT COUNT(1) INTO l_contar FROM COMPRA_SALDO WHERE ID_SALDO = P_ID_COMPRA;
                IF l_contar = 1 THEN
                    L_ID_SALDO := P_ID_COMPRA;
                    SELECT id_anho INTO L_ID_ANHO FROM COMPRA_SALDO WHERE ID_SALDO = P_ID_COMPRA;
                ELSE
                    L_ID_COMPRA := P_ID_COMPRA;
                    SELECT id_anho INTO L_ID_ANHO FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA;
                END IF;
                
                SELECT SUBSTR(FC_NOMBRE_PERSONA(P_ID_PROVEEDOR),1,100) PROVEEDOR INTO L_PROVEEDOR
                FROM DUAL;
                
                SELECT DISTINCT DECODE(ID_COMPROBANTE,'01','FAC:','03','BOL:','02','RH:','DOC:')||SERIE||'-'||NUMERO INTO L_DOC
                FROM VW_PURCHASES_MOV
                WHERE ID_COMPRA = P_ID_COMPRA
                AND ID_PROVEEDOR = P_ID_PROVEEDOR
                AND ID_ANHO = L_ID_ANHO;
                
                SELECT 
                SUBSTR((CASE ID_ENTIDAD 
                WHEN 7124 
                THEN ID_ENTIDAD||'-'||L_DOC||'-'||SUBSTR(L_PROVEEDOR,1,20)||'-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||TO_NUMBER(NUMERO)||'-'||TO_CHAR(FECHA,'DD/MM/YYYY')
                WHEN 9415 
                THEN ID_ENTIDAD||'-'||L_DOC||'-'||SUBSTR(L_PROVEEDOR,1,20)||'-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||TO_NUMBER(NUMERO)||'-'||TO_CHAR(FECHA,'DD/MM/YYYY')
                --THEN DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||'-'||TO_CHAR(FECHA,'DD/MM/YYYY')||'-'||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)||'-'||L_PROVEEDOR
                ELSE 
                -- TO_CHAR(FECHA,'DD/MM/YYYY')||'-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||'-'||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)
                DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||' | '||TO_CHAR(FECHA,'DD/MM/YYYY')||' | '||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)
                END ),1,80) AS GLOSA, ID_MONEDA, TIPOCAMBIO INTO L_DETALLE, L_ID_MONEDA, L_TIPOCAMBIO
                FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                
                SELECT NVL(IMPORTE,0),NVL(IMPORTE_ME,0) INTO L_IMPORTE_SALDO,L_IMPORTE_SALDO_ME
                FROM VW_PURCHASES_SALDO
                WHERE ID_COMPRA = P_ID_COMPRA
                AND ID_PROVEEDOR = P_ID_PROVEEDOR
                AND ID_ANHO = L_ID_ANHO;
                
                
                
                IF P_ID_PAGO_COMPRA <> 0 THEN -- UPDATE
                    -- ELIMINAR CONTA_ASIENTO
                    SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN FROM CAJA_PAGO_COMPRA WHERE ID_PCOMPRA=P_ID_PAGO_COMPRA; 
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN=P_ID_PAGO_COMPRA;
                
                    SELECT NVL(IMPORTE,0), NVL(IMPORTE_ME,0) INTO L_IMPORTE_PAGADO, L_IMPORTE_PAGADO_ME FROM CAJA_PAGO_COMPRA WHERE ID_PCOMPRA = P_ID_PAGO_COMPRA;
                    
                    IF L_ID_MONEDA = '7' THEN -- Soles
                        IF NVL(P_IMPORTE,0) > (NVL(L_IMPORTE_SALDO,0)+NVL(L_IMPORTE_PAGADO,0)) THEN
                            l_error := 1;
                            l_msgerror:='El importe en soles, es mayor al saldo del documento.'||ABS(NVL(P_IMPORTE,0)-(NVL(L_IMPORTE_SALDO,0)+NVL(L_IMPORTE_PAGADO,0)));
                            l_id_pcompra := P_ID_PAGO_COMPRA;
                        END IF;
                        L_IMPORTE := P_IMPORTE;
                    ELSE 
                        IF NVL(P_IMPORTE_ME,0) > (NVL(L_IMPORTE_SALDO_ME,0)+NVL(L_IMPORTE_PAGADO_ME,0)) THEN
                            l_error := 1;
                            l_msgerror:='El importe en moneda extranjera, es mayor al saldo del documento.';
                            l_id_pcompra := P_ID_PAGO_COMPRA;
                        END IF;
                        --L_IMPORTE := (P_IMPORTE_ME * L_TIPOCAMBIO);
                        L_IMPORTE := P_IMPORTE;
                    END IF;
                    
                    IF l_error = 0 THEN
                        UPDATE CAJA_PAGO_COMPRA
                            SET ID_DINAMICA = P_ID_DINAMICA, 
                            IMPORTE = L_IMPORTE, IMPORTE_ME = P_IMPORTE_ME
                        WHERE ID_PCOMPRA=P_ID_PAGO_COMPRA;
                        
                        l_id_pcompra := P_ID_PAGO_COMPRA;

                        --SELECT IMPORTE_ME INTO L_IMPORTE  FROM CAJA_PAGO_COMPRA WHERE ID_PCOMPRA=P_ID_PAGO_COMPRA;
                        --l_msgerror := L_IMPORTE;
                        --l_error:=1;
                    END IF;
                    
                ELSE 
                    
                    IF NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0) > 0 THEN
                    
                        IF L_ID_MONEDA = '7' THEN -- Soles
                            IF NVL(P_IMPORTE,0) > NVL(L_IMPORTE_SALDO,0) THEN
                                 
                                IF (NVL(P_IMPORTE,0)-NVL(L_IMPORTE_SALDO,0)) >= 0.02 THEN 
                                    l_error := 1;
                                    l_msgerror:='El importe en soles, es mayor al saldo del documento ..' ||NVL(P_IMPORTE,0)||NVL(L_IMPORTE_SALDO,0);
                                    l_id_pcompra := P_ID_PAGO_COMPRA;
                                END IF;
                            END IF;
                            L_IMPORTE := P_IMPORTE;
                        ELSE 
                            IF NVL(P_IMPORTE_ME,0) > NVL(L_IMPORTE_SALDO_ME,0) THEN
                                l_error := 1;
                                l_msgerror:='El importe en moneda extranjera, es mayor al saldo del documento.';
                                l_id_pcompra := P_ID_PAGO_COMPRA;
                            END IF;
                            --L_IMPORTE := (P_IMPORTE_ME * L_TIPOCAMBIO);
                            L_IMPORTE := P_IMPORTE;
                        END IF;

                       IF l_error = 0 THEN
                            -- <<COMENTADO POR VITMAR>> SELECT COALESCE(MAX(ID_PCOMPRA),0)+1 into l_id_pcompra FROM CAJA_PAGO_COMPRA;
                            --SELECT DECODE(ID_MEDIOPAGO,'001',9,'007',8,'008',7) INTO L_ID_TIPOORIGEN FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                            INSERT INTO CAJA_PAGO_COMPRA(
                                --ID_PCOMPRA,
                                ID_PAGO,
                                ID_PROVEEDOR,
                                ID_COMPRA,
                                ID_DINAMICA,
                                --ID_TIPOORIGEN,
                                IMPORTE,
                                IMPORTE_ME,
                                DETALLE,
                                ID_SALDO
                            )values(
                                --l_id_pcompra,
                                P_ID_PAGO,
                                P_ID_PROVEEDOR,
                                L_ID_COMPRA,
                                P_ID_DINAMICA,
                                --L_ID_TIPOORIGEN,
                                L_IMPORTE,
                                P_IMPORTE_ME,
                                SUBSTR(L_DETALLE,1,80),
                                L_ID_SALDO
                            ) returning ID_PCOMPRA into l_id_pcompra;
                            
                            l_msgerror:='El pago se agregó con éxito.';
                        END IF;
                        
                    ELSE
                        l_error := 1;
                        l_msgerror:='No existen importes';
                    END IF;
                END IF;
            end if;  
            
        P_ERROR:=l_error;
        P_ID_PAGO_COMPRA:=l_id_pcompra;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_PAGO_COMPRA;
    
    /*
    PROCEDURE SP_CREAR_VALE_COMPRA(P_ID_VALE NUMBER,P_ID_DINAMICA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_COMPRA NUMBER, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ID_VALE_COMPRA IN OUT NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
        l_id_vcompra number := 0;
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        L_ID_PERSONA number :=null;
        L_IMPORTE_SALDO number(10,2);
        L_IMPORTE_SALDO_ME number(10,2);

        L_ID_TIPOORIGEN number := 0;
    
        L_IMPORTE_PAGADO number(10,2);
        L_IMPORTE_PAGADO_ME number(10,2);
        L_PROVEEDOR VARCHAR2(200);
        --L_CORRELATIVO NUMBER;
        L_DETALLE VARCHAR2(50);
        L_ID_MONEDA NUMBER;
        L_TIPOCAMBIO NUMBER;
        
        L_IMPORTE NUMBER;
    
        BEGIN
            l_error:=0;
            
            
            
            if l_error=0 then
                SELECT 
                        SUBSTR(FC_NOMBRE_PERSONA(ID_PROVEEDOR),1,100) PROVEEDOR
                        --- ,CORRELATIVO
                        INTO
                        L_PROVEEDOR
                        -- ,L_CORRELATIVO
                FROM COMPRA
                WHERE ID_COMPRA = P_ID_COMPRA;
                
                SELECT 
                SUBSTR((CASE ID_ENTIDAD 
                WHEN 7124 THEN DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||'-'||TO_CHAR(FECHA,'DD/MM/YYYY')||'-'||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)||'-'||L_PROVEEDOR
                ELSE 
                ---ID_ENTIDAD||'-'
                --||L_CORRELATIVO||'-'
                --||
                TO_CHAR(FECHA,'DD/MM/YYYY')||'-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||'-'||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)
                --||'-'||L_PROVEEDOR
                END ),1,50) AS GLOSA, ID_MONEDA, TIPO_CAMBIO INTO L_DETALLE, L_ID_MONEDA, L_TIPOCAMBIO
                FROM CAJA_VALE WHERE ID_VALE = P_ID_VALE;
                
                SELECT NVL(IMPORTE,0),NVL(IMPORTE_ME,0) INTO L_IMPORTE_SALDO,L_IMPORTE_SALDO_ME
                        FROM VW_PURCHASES_SALDO
                        WHERE ID_COMPRA = P_ID_COMPRA;
                
                IF P_ID_VALE_COMPRA <> 0 THEN -- UPDATE
                    -- ELIMINAR CONTA_ASIENTO
                    SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN FROM CAJA_VALE_COMPRA WHERE ID_VCOMPRA=P_ID_VALE_COMPRA; 
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN=P_ID_VALE_COMPRA;
                
                    SELECT NVL(IMPORTE,0), NVL(IMPORTE_ME,0) INTO L_IMPORTE_PAGADO, L_IMPORTE_PAGADO_ME FROM CAJA_PAGO_COMPRA WHERE ID_PCOMPRA = P_ID_VALE_COMPRA;
                    
                    IF L_ID_MONEDA = '7' THEN -- Soles
                        IF NVL(P_IMPORTE,0) > (NVL(L_IMPORTE_SALDO,0)+NVL(L_IMPORTE_PAGADO,0)) THEN
                            l_error := 1;
                            l_msgerror:='El importe en soles, es mayor al saldo del documento.';
                            l_id_vcompra := P_ID_VALE_COMPRA;
                        END IF;
                        L_IMPORTE := P_IMPORTE;
                    ELSE 
                        IF NVL(P_IMPORTE_ME,0) > (NVL(L_IMPORTE_SALDO_ME,0)+NVL(L_IMPORTE_PAGADO_ME,0)) THEN
                            l_error := 1;
                            l_msgerror:='El importe en moneda extranjera, es mayor al saldo del documento.';
                            l_id_vcompra := P_ID_VALE_COMPRA;
                        END IF;
                        L_IMPORTE := (P_IMPORTE_ME * L_TIPOCAMBIO);
                    END IF;
                    
                    IF l_error = 0 THEN
                        UPDATE CAJA_VALE_COMPRA
                            SET ID_DINAMICA = P_ID_DINAMICA, 
                            IMPORTE = L_IMPORTE, IMPORTE_ME = P_IMPORTE_ME
                        WHERE ID_VCOMPRA=P_ID_VALE_COMPRA;
                        
                        l_id_vcompra := P_ID_VALE_COMPRA;
                    END IF;
                ELSE 
                    
                    IF NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0) > 0 THEN
                    
                        IF L_ID_MONEDA = '7' THEN -- Soles
                            IF NVL(P_IMPORTE,0) > NVL(L_IMPORTE_SALDO,0) THEN
                                l_error := 1;
                                l_msgerror:='El importe en soles, es mayor al saldo del documento.';
                                l_id_vcompra := P_ID_VALE_COMPRA;
                            END IF;
                            L_IMPORTE := P_IMPORTE;
                        ELSE 
                            IF NVL(P_IMPORTE_ME,0) > NVL(L_IMPORTE_SALDO_ME,0) THEN
                                l_error := 1;
                                l_msgerror:='El importe en moneda extranjera, es mayor al saldo del documento.';
                                l_id_vcompra := P_ID_VALE_COMPRA;
                            END IF;
                            L_IMPORTE := (P_IMPORTE_ME * L_TIPOCAMBIO);
                        END IF;
 
                        IF l_error = 0 THEN
                            SELECT COALESCE(MAX(ID_VCOMPRA),0)+1 into l_id_vcompra FROM CAJA_VALE_COMPRA;
                            SELECT DECODE(ID_MEDIOPAGO,'001',9,'007',8,'008',7) INTO L_ID_TIPOORIGEN FROM CAJA_VALE WHERE ID_VALE = P_ID_VALE;
                            INSERT INTO CAJA_VALE_COMPRA(
                                ID_VCOMPRA,
                                ID_VALE,
                                ID_PROVEEDOR,
                                ID_COMPRA,
                                ID_DINAMICA,
                                ID_TIPOORIGEN,
                                IMPORTE,
                                IMPORTE_ME,
                                DETALLE
                            )values(
                                l_id_vcompra,
                                P_ID_VALE,
                                P_ID_PROVEEDOR,
                                P_ID_COMPRA,
                                P_ID_DINAMICA,
                                L_ID_TIPOORIGEN,
                                L_IMPORTE,
                                P_IMPORTE_ME,
                                SUBSTR(L_DETALLE,1,50)
                            );
                            
                            
                            l_msgerror:='El vale fué rendido con éxito.';
                        END IF;
                        
                    ELSE
                        l_error := 1;
                        l_msgerror:='No existen importes';
                    END IF;
                END IF;
            end if;  
            
        P_ERROR:=l_error;
        P_ID_VALE_COMPRA:=l_id_vcompra;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_VALE_COMPRA;
    */
    PROCEDURE SP_CREAR_PAGO_VENTA(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_CLIENTE NUMBER,P_ID_VENTA NUMBER, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS --P_ID_ARTICULO NUMBER, QUITADO
        l_error number:=0;
        l_msgerror varchar2(180):='';
        l_importe_me number(10,2);
        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(10);
        L_ID_ANHO NUMBER;
        L_ID_ARTICULO NUMBER;
        L_ID_VENTA NUMBER;
        L_TOTAL_ANTICIPO NUMBER(10,2);
        L_CLIENTE VARCHAR2(80);
        L_DETALLE VARCHAR2(80);
        --L_ID_PERSONA number :=null;
    
        BEGIN
        
            --- CADA VEZ QUE SE ACTUALIZE O SE AGREGUE ALGO DE DETALLE AL PAGO EL PAGO AUTOMATICAMENTE SE PONE EN ESTADO 0
            UPDATE ELISEO.CAJA_PAGO SET ESTADO='0' WHERE ID_PAGO=P_ID_PAGO;
            ---
            
            l_error:=0;
            --l_error:=1;
            --l_msgerror:='NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0)';
            if l_error=0 then
                IF P_ID_VENTA = 0 OR P_ID_VENTA IS NULL THEN
                    L_ID_VENTA := NULL;
                ELSE
                    L_ID_VENTA := P_ID_VENTA;
                END IF;
                SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
                FROM VW_SALES_ADVANCES
                WHERE ID_ENTIDAD = L_ID_ENTIDAD
                AND ID_DEPTO = L_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                AND ID_CLIENTE = P_ID_CLIENTE;
                
                IF L_TOTAL_ANTICIPO >= P_IMPORTE THEN
                    
                    SELECT SUBSTR(FC_NOMBRE_PERSONA(P_ID_CLIENTE),1,100) CLIENTE INTO L_CLIENTE FROM DUAL;
                    
                    SELECT 
                    SUBSTR((CASE ID_ENTIDAD 
                    WHEN 7124 
                    THEN ID_ENTIDAD||'-ALUM-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||TO_NUMBER(NUMERO)||'-'||SUBSTR(L_CLIENTE,1,20)||'-'||TO_CHAR(FECHA,'DD/MM/YYYY')
                    ELSE 
                    DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||' | '||TO_CHAR(FECHA,'DD/MM/YYYY')||' | '||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)
                    END ),1,80) AS GLOSA INTO L_DETALLE
                    FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                
                    /*SE VA AGENERAR UN ANTICIPO DE TIPO CREDITO Y SE VA AGUARDAR EL ID_PVENTA DEL PAGO Y EL ANTICIPO NO GENERARÁ ASIENTO, EL ASIENTO LO HARÁ LA SALIDA DE DINERO
                    --7124 = solo permite sacar dinero si tengo saldo en Anticipos
                    SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
                    FROM VW_SALES_ADVANCES
                    WHERE ID_ENTIDAD = L_ID_ENTIDAD
                    AND ID_DEPTO = L_ID_DEPTO
                    AND ID_ANHO = L_ID_ANHO
                    AND ID_CLIENTE = L_ID_CLIENTE;
                    IF L_TOTAL_ANTICIPO > 0 THEN
                        IF L_TOTAL_ANTICIPO >= L_TOTAL THEN
                            L_IMPORTE_ANTICIPO := L_TOTAL;
                        ELSE
                            L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
                        END IF;
                        PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_CLIENTE,L_ID_PERSONA,P_ID_VENTA,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,L_ERROR,L_MSGERROR,L_TIPO);
                        IF L_ERROR > 0 THEN
                          --l_msgerror := l_msgerror;
                          GOTO SALIDA_RAPIDA;
                      END IF;
                    END IF;*/
                
                    IF NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0) > 0 THEN
                        INSERT INTO CAJA_PAGO_VENTA(
                        ID_PAGO,
                        ID_CLIENTE,
                        ID_VENTA,
                        ID_ARTICULO,
                        ID_DINAMICA,
                        IMPORTE,
                        IMPORTE_ME,
                        DETALLE
                        )values(
                        P_ID_PAGO,
                        P_ID_CLIENTE,
                        L_ID_VENTA,
                        L_ID_ARTICULO,
                        P_ID_DINAMICA,
                        P_IMPORTE,
                        P_IMPORTE_ME,
                        L_DETALLE
                        );
                        l_msgerror:='Pago OK';
                    ELSE
                        l_error := 1;
                        l_msgerror:='No existen Importes';
                    END IF;
                ELSE
                    l_error := 1;
                    l_msgerror:='ERROR: Importe Mayor al Monto del Anticipo '||L_TOTAL_ANTICIPO;
                END IF;
            end if;  
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_PAGO_VENTA;
    
    
    PROCEDURE SP_ELIMINAR_PAGO_DEPOSITO(P_ID_PAGO NUMBER) IS
        L_ID_ORIGEN NUMBER;
        L_ID_TIPOORIGEN NUMBER;
        
        CURSOR C_PAGO_GASTO IS	
            SELECT ID_TIPOORIGEN, ID_PGASTO
            FROM CAJA_PAGO_GASTO
            WHERE ID_PAGO=P_ID_PAGO;
        
        BEGIN
        
        OPEN C_PAGO_GASTO;
        FETCH C_PAGO_GASTO INTO L_ID_TIPOORIGEN, L_ID_ORIGEN;

        WHILE C_PAGO_GASTO%FOUND LOOP
        
            DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN=L_ID_ORIGEN;

            FETCH C_PAGO_GASTO INTO L_ID_TIPOORIGEN, L_ID_ORIGEN;
        END LOOP;
        CLOSE C_PAGO_GASTO; 
        
        DELETE CAJA_PAGO_GASTO where ID_PAGO = P_ID_PAGO;
        DELETE CAJA_DEPOSITO where ID_PAGO = P_ID_PAGO;
        DELETE CAJA_PAGO where ID_PAGO = P_ID_PAGO;
        
    END SP_ELIMINAR_PAGO_DEPOSITO;

   
    PROCEDURE SP_ELIMINAR_PAGO_DETALLE(P_ID_PAGO NUMBER,P_ID_DETALLE VARCHAR2,P_TIPO NUMBER,P_PLACE NUMBER) IS
        P_TABLA VARCHAR2(1);
        L_ID_DETALLE NUMBER;
        L_IMPORTE NUMBER := 0;
        L_IMPORTE_ME NUMBER := 0;
        L_COUNT_DETALLE NUMBER := 0;
        L_ID_TIPOORIGEN NUMBER;
        L_ID_TRANSFERENCIA NUMBER;
        L_ID_VOUCHER NUMBER;
        L_ID_USER NUMBER;
        L_ID_USER_FILE NUMBER;
        L_CANT NUMBER;
        L_ID_DOCUMENTO NUMBER;
        L_CODIGO VARCHAR2(10);
        L_ID_DPROCESO NUMBER;
        BEGIN
            SELECT TO_CHAR(SUBSTR(P_ID_DETALLE,1,1)), TO_NUMBER(SUBSTR(P_ID_DETALLE,2)) INTO P_TABLA, L_ID_DETALLE FROM DUAL;
            --SELECT DECODE(ID_MEDIOPAGO,'001',9,'007',8,'008',7) INTO L_ID_TIPOORIGEN FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
            SELECT ID_USER,ID_VOUCHER INTO L_ID_USER,L_ID_VOUCHER FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
            if P_TIPO=0 then -- Solo un detalle
                IF P_TABLA = 'G' THEN --gastos
                
                 dbms_output.put_line('ERA--> 00 : '||P_TABLA);
                 
                    SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN FROM CAJA_PAGO_GASTO WHERE ID_PGASTO = L_ID_DETALLE;
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = L_ID_DETALLE;
                    DELETE FROM CAJA_PAGO_GASTO_ASIENTO WHERE ID_PGASTO = L_ID_DETALLE;
                    SELECT COUNT(1) INTO L_CANT FROM CAJA_VALE_FILE WHERE ID_PGASTO = L_ID_DETALLE AND TIPO = '3' AND ORIGEN = '2';
                    IF L_CANT > 0 THEN
                        SELECT ID_USER INTO L_ID_USER_FILE FROM CAJA_VALE_FILE WHERE ID_PGASTO = L_ID_DETALLE AND TIPO = '3';
                    END IF;
                    
                    IF L_ID_USER = L_ID_USER_FILE THEN
                        DELETE FROM CAJA_VALE_FILE WHERE ID_PGASTO = L_ID_DETALLE AND TIPO = '3' AND ORIGEN = '2';
                    ELSE
                        UPDATE CAJA_VALE_FILE SET ID_PGASTO = NULL WHERE ID_PGASTO = L_ID_DETALLE AND TIPO = '3';
                    END IF;
                    
                    SELECT COUNT(1) INTO L_CANT FROM CAJA_VALE_GASTO WHERE ID_PGASTO = L_ID_DETALLE;
                    IF L_CANT > 0 THEN
                        UPDATE CAJA_VALE_GASTO SET ID_PGASTO = NULL WHERE ID_PGASTO = L_ID_DETALLE;
                    END IF;
                    
                    SELECT COUNT(1) INTO L_CANT FROM CAJA_DOCUMENTO WHERE ID_PGASTO = L_ID_DETALLE;
                    IF L_CANT > 0 THEN
                        SELECT ID_DOCUMENTO,CODIGO INTO L_ID_DOCUMENTO,L_CODIGO
                        FROM CAJA_DOCUMENTO WHERE ID_PGASTO = L_ID_DETALLE;
                        
                        IF L_CODIGO = 'PRODOC' THEN 
                            SELECT ID_DPROCESO INTO L_ID_DPROCESO FROM PROCESO_DOCUMENTO WHERE CODIGO = L_CODIGO; 
                            DELETE CAJA_DOCUMENTO_PROCESO WHERE ID_DOCUMENTO = L_ID_DOCUMENTO AND ID_DPROCESO = L_ID_DPROCESO;
                        END IF;
                        UPDATE CAJA_DOCUMENTO SET ID_PGASTO = NULL, CODIGO = 'AUTDOC' WHERE ID_PGASTO = L_ID_DETALLE;
                    END IF;
                    
                    DELETE FROM CAJA_PAGO_GASTO WHERE ID_PGASTO = L_ID_DETALLE;
                    DELETE FROM CAJA_PAGO_ASIENTO WHERE  ID_PAGO = P_ID_PAGO;
                    
                    
                /*ELSE --ESTA PARA ANALIZAR
                    DELETE FROM CONTA_ASIENTO WHERE ID_ORIGEN IN (
                                    SELECT ID_AJUSTE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN 
                                        (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO AND ID_PCOMPRA = L_ID_DETALLE))
                    AND ID_TIPOORIGEN = L_ID_TIPOORIGEN; -- COMPRA TRANSFERENCIA O AJUS 
                    
                    DELETE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO AND ID_PCOMPRA = L_ID_DETALLE);
                    -- Eliminar conta_asiento
                    
                    DELETE FROM CONTA_ASIENTO WHERE ID_ORIGEN IN (SELECT ID_PCOMPRA FROM CAJA_PAGO_COMPRA WHERE ID_PAGO=P_ID_PAGO AND ID_PCOMPRA=L_ID_DETALLE)
                    AND ID_TIPOORIGEN = L_ID_TIPOORIGEN; --Cheques o tranferencias
                    
                    DELETE from CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO
                    AND ID_PCOMPRA = L_ID_DETALLE;*/
                END IF;
                
                IF P_TABLA = 'D' THEN --COMPRA
                
                    SELECT NVL(MAX(ID_TIPOORIGEN),0) INTO L_ID_TIPOORIGEN FROM COMPRA_AJUSTE WHERE ID_COMPRA IN 
                                        (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO AND ID_PCOMPRA = L_ID_DETALLE);
                                        
                    IF L_ID_TIPOORIGEN <> 0 THEN
                        DELETE FROM CONTA_ASIENTO WHERE ID_ORIGEN IN (
                                        SELECT ID_AJUSTE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN 
                                            (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO AND ID_PCOMPRA = L_ID_DETALLE))
                        AND ID_TIPOORIGEN = L_ID_TIPOORIGEN; -- COMPRA TRANSFERENCIA O AJUS 
                        
                        DELETE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO AND ID_PCOMPRA = L_ID_DETALLE);
                    END IF;
                    
                    SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN FROM CAJA_PAGO_COMPRA WHERE ID_PCOMPRA = L_ID_DETALLE;
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = L_ID_DETALLE;
                    DELETE from CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO AND ID_PCOMPRA = L_ID_DETALLE;
                END IF;
                IF P_TABLA = 'V' THEN --VENTA
                    SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN FROM CAJA_PAGO_VENTA WHERE ID_PVENTA = L_ID_DETALLE;
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = L_ID_DETALLE AND VOUCHER = L_ID_VOUCHER;
                    SELECT ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA FROM VENTA_TRANSFERENCIA_DETALLE WHERE ID_PVENTA = L_ID_DETALLE;
                    UPDATE VENTA_TRANSFERENCIA SET IMPORTE = 0 , GLOSA = '<< Anulado >>' WHERE ID_TRANSFERENCIA = L_ID_TRANSFERENCIA;
                    UPDATE VENTA_TRANSFERENCIA_DETALLE SET ID_PVENTA = NULL, IMPORTE = 0, DETALLE = '<< Anulado >>' WHERE ID_TRANSFERENCIA = L_ID_TRANSFERENCIA;
                    DELETE FROM CAJA_PAGO_VENTA WHERE ID_PAGO = P_ID_PAGO AND ID_PVENTA = L_ID_DETALLE;
                END IF;
                IF P_TABLA = 'X' THEN --VALES
                    SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN FROM CAJA_VALE WHERE ID_VALE = L_ID_DETALLE;
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = L_ID_DETALLE;
                    --UPDATE CAJA_VALE SET 
                    --WHERE ID_VALE = L_ID_DETALLE;
                END IF;
            --else --- Eliminar todos los detalles del pago.
                /*
                IF P_TABLA = 'G' THEN --GASTO
                    DELETE FROM CAJA_PAGO_GASTO_ASIENTO WHERE ID_PGASTO IN (SELECT ID_PGASTO FROM CAJA_PAGO_GASTO where ID_PAGO = P_ID_PAGO);
                    DELETE from CAJA_PAGO_GASTO where ID_PAGO = P_ID_PAGO;
                --ELSE
                    
                    --DELETE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO);
                    
                    --DELETE from CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO;
                END IF;
                --ESTA PARA ANALIZAR
                IF P_TABLA = 'D' THEN --COMPRA
                    DELETE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO);
                
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = L_ID_DETALLE;
                    DELETE from CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO;
                END IF;
                IF P_TABLA = 'V' THEN --VENTA
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = L_ID_DETALLE;
                    DELETE from CAJA_PAGO_VENTA where ID_PAGO = P_ID_PAGO;
                END IF;
                */
            end if;
            
            IF P_PLACE = 2 THEN
            
                -- Recalculamos el monto del pago
                SELECT 
                    NVL(SUM(IMPORTE),0) IMPORTE,
                    NVL(SUM(IMPORTE_ME),0) IMPORTE_ME INTO L_IMPORTE,L_IMPORTE_ME
                FROM (
                    SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_COMPRA
                    WHERE ID_PAGO = P_ID_PAGO
                    UNION ALL
                    SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_GASTO
                    WHERE ID_PAGO = P_ID_PAGO
                    UNION ALL
                    SELECT IMPORTE, IMPORTE_ME FROM CAJA_PAGO_VENTA
                    WHERE ID_PAGO = P_ID_PAGO
                );
                
                IF L_IMPORTE+L_IMPORTE_ME > 0 THEN
                    UPDATE CAJA_PAGO SET IMPORTE = L_IMPORTE, 
                                        IMPORTE_ME = L_IMPORTE_ME, 
                                        ESTADO = '1'
                    WHERE ID_PAGO = P_ID_PAGO;
                END IF;
                --
            
                -- Si ya no tiene detalle lo eliminamos
                SELECT SUM(CANTIDAD) INTO L_COUNT_DETALLE  FROM 
                (SELECT COUNT(1) CANTIDAD FROM CAJA_PAGO_GASTO where ID_PAGO = P_ID_PAGO
                UNION ALL 
                SELECT COUNT(1) CANTIDAD FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO
                UNION ALL
                SELECT COUNT(1) CANTIDAD FROM CAJA_PAGO_VENTA WHERE ID_PAGO = P_ID_PAGO);
                
                dbms_output.put_line('ERA--> 01 : '||L_COUNT_DETALLE);
                dbms_output.put_line('ERA--> 02 : '||P_ID_PAGO);
                IF L_COUNT_DETALLE = 0 THEN
                    DELETE FROM CAJA_PAGO_FILE WHERE  ID_PAGO = P_ID_PAGO;
                    DELETE FROM CAJA_PAGO_ASIENTO WHERE  ID_PAGO = P_ID_PAGO;
                    DELETE FROM CAJA_PAGO WHERE  ID_PAGO = P_ID_PAGO;
                END IF;
               
                    
            END IF;
                     
    END SP_ELIMINAR_PAGO_DETALLE;
    
    PROCEDURE SP_ELIMINAR_PAGO(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
        l_error number:=0;
        l_msgerror varchar2(200):='';
        L_ID_TIPOORIGEN NUMBER;
        L_ACTIVO VARCHAR2(4);
        BEGIN
            SELECT B.ACTIVO INTO L_ACTIVO
            FROM CAJA_PAGO A JOIN CONTA_VOUCHER B
            ON A.ID_VOUCHER = B.ID_VOUCHER
            WHERE A.ID_PAGO = P_ID_PAGO;
            
            IF L_ACTIVO = 'S' THEN
        
                IF l_error = 0 THEN 
                
                    -- Seleccionar id_tipoorigen de las COMPRA AJUSTE.
                    SELECT NVL(MAX(ID_TIPOORIGEN),0) INTO L_ID_TIPOORIGEN FROM COMPRA_AJUSTE WHERE ID_COMPRA IN 
                                            (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO);
                    IF L_ID_TIPOORIGEN <> 0 THEN
                        -- Eliminar asientos de ajuste
                        DELETE CONTA_ASIENTO WHERE ID_ORIGEN IN (
                            SELECT ID_AJUSTE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN (
                                SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA WHERE ID_PAGO=P_ID_PAGO
                            )
                        )
                        AND ID_TIPOORIGEN = L_ID_TIPOORIGEN; --COMPRA TRANSFERENCIA O AJUS
                        -- Eliminar compra ajuste
                        DELETE FROM COMPRA_AJUSTE WHERE ID_COMPRA IN (SELECT ID_COMPRA FROM CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO);
                    END IF;
                
                    -- Seleccionar id_tipoorigen de los PAGO COMPRA.
                    SELECT NVL(MAX(ID_TIPOORIGEN),0) INTO L_ID_TIPOORIGEN FROM CAJA_PAGO_COMPRA WHERE ID_PAGO = P_ID_PAGO;
                    IF L_ID_TIPOORIGEN <> 0 THEN
                    -- Eliminar asientos de pago compra
                        DELETE FROM CONTA_ASIENTO WHERE ID_ORIGEN IN (SELECT ID_PCOMPRA FROM CAJA_PAGO_COMPRA WHERE ID_PAGO=P_ID_PAGO)
                                AND ID_TIPOORIGEN =L_ID_TIPOORIGEN; 
                                --AND ID_TIPOORIGEN IN (8, 9); --Cheques o tranferencias.
                    -- Eliminar caja pago compra
                        DELETE from CAJA_PAGO_COMPRA where ID_PAGO = P_ID_PAGO;
                    END IF;
                    
                    
                    -- Seleccionar id_tipoorigen de los PAGO GASTO.
                    SELECT NVL(MAX(ID_TIPOORIGEN),0) INTO L_ID_TIPOORIGEN FROM CAJA_PAGO_GASTO WHERE ID_PAGO = P_ID_PAGO;
                    IF L_ID_TIPOORIGEN <> 0 THEN
                    -- Eliminar asientos de pago gasto.
                        DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN IN (SELECT ID_PGASTO FROM CAJA_PAGO_GASTO WHERE ID_PAGO=P_ID_PAGO);
                    -- Eliminar caja pago gasto asiento
                        DELETE FROM CAJA_PAGO_GASTO_ASIENTO WHERE ID_PGASTO IN (SELECT ID_PGASTO FROM CAJA_PAGO_GASTO WHERE ID_PAGO=P_ID_PAGO);
                    -- Eliminar caja pago gasto
                        DELETE from CAJA_PAGO_GASTO where ID_PAGO = P_ID_PAGO;
                    END IF;
                    
                    
                    -- Seleccionar id_tipoorigen de los PAGOS VENTA.
                    SELECT NVL(MAX(ID_TIPOORIGEN),0) INTO L_ID_TIPOORIGEN FROM CAJA_PAGO_VENTA WHERE ID_PAGO = P_ID_PAGO;
                    IF L_ID_TIPOORIGEN <> 0 THEN
                        -- Eliminar asientos de pago venta.
                        DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN IN (SELECT ID_PVENTA FROM CAJA_PAGO_VENTA WHERE ID_PAGO=P_ID_PAGO);
                        -- Eliminar caja pago venta
                        DELETE FROM CAJA_PAGO_VENTA where ID_PAGO = P_ID_PAGO;
                    END IF;
                    --ELIMINO EL ASIENTO TEMP DE REDNICION
                    DELETE from CAJA_PAGO_ASIENTO where ID_PAGO = P_ID_PAGO;
                    -- Eliminar PAGO
                    DELETE from CAJA_PAGO where ID_PAGO = P_ID_PAGO;
                END IF;
            ELSE
                l_error :=1;
                l_msgerror :='ALTO: Voucher Exportado, No se puede Eliminar';
            END IF;
            
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;    
    END SP_ELIMINAR_PAGO;
    
    PROCEDURE  SP_GENERAR_ASIENTO_PAGO(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_dinamica number;
        l_asiento number;
        l_id_persona number;
        l_detalle varchar2(100);
        l_detalle_in varchar2(100);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_importe_me number(10,2);
        l_correlativo number(10,2); --Add by @vitmar
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importeasiento_me number(10,2);
        l_importe_cheque number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_id_depto_pago varchar2(20);
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_operorigen number:=5;
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        --l_id_cliente number;
        l_id_ctabancaria number;
        l_id_mediopago varchar2(4);
        l_pgasto number;
        l_tipoorigen number;
        l_origen number;
        l_pago varchar2(10);
        l_fecha_oper varchar2(10);
        l_numero_oper varchar2(10);
        L_BANCO VARCHAR2(20);
        l_det varchar2(20);
        ES_VALE NUMBER;
        L_ID_VALE NUMBER;
        L_GLOSA VARCHAR2(200);
        
        CURSOR cdet IS	
        SELECT 
        ID_PGASTO, ID_PGASTO as ID_ORIGEN, ID_TIPOORIGEN,ID_DINAMICA,ID_PERSONA,SUBSTR(DETALLE, 1, 50),IMPORTE,IMPORTE_ME, 0 as CORRELATIVO, 'Pagos Diversos' AS DET
        FROM CAJA_PAGO_GASTO
        WHERE ID_PAGO = P_ID_PAGO
        AND ID_DINAMICA IS NOT NULL
        UNION ALL
        SELECT 
        A.ID_PCOMPRA, A.ID_PCOMPRA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_PROVEEDOR, SUBSTR(A.DETALLE, 1, 50), A.IMPORTE,A.IMPORTE_ME, C.CORRELATIVO,'Pagos Proveedores' AS DET
        FROM CAJA_PAGO_COMPRA A
        INNER JOIN COMPRA C ON A.ID_COMPRA=C.ID_COMPRA
        WHERE A.ID_PAGO = P_ID_PAGO
        UNION ALL
         SELECT 
        A.ID_PCOMPRA, A.ID_PCOMPRA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_PROVEEDOR, SUBSTR(A.DETALLE, 1, 50), A.IMPORTE,A.IMPORTE_ME, 1 AS CORRELATIVO,'Pagos Proveedores' AS DET
        FROM CAJA_PAGO_COMPRA A
        INNER JOIN COMPRA_SALDO C ON A.ID_SALDO=C.ID_SALDO
        WHERE A.ID_PAGO = P_ID_PAGO
        UNION ALL
        SELECT 
        A.ID_PVENTA, A.ID_PVENTA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_CLIENTE, SUBSTR((A.DETALLE || '-' || ' Clientes'), 1, 50),A.IMPORTE, A.IMPORTE_ME, 0 as CORRELATIVO,'Pagos Clientes' AS DET
        FROM CAJA_PAGO_VENTA A LEFT JOIN VENTA B ON A.ID_VENTA=B.ID_VENTA
        WHERE A.ID_PAGO = P_ID_PAGO;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, ID_FONDO 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;
        
        CURSOR gastos_otros_deptos IS		
        SELECT ID_DEPTO, IMPORTE, IMPORTE_ME FROM COMPRA_ASIENTO
        WHERE ID_COMPRA=l_origen
        AND ID_DEPTO <> l_depto;
        
        l_gastos_otros_id_depto varchar2(10);
        l_gastos_otros_importe number(10,2);
        l_gastos_otros_importe_me number(10,2);
       
        BEGIN
            SELECT COUNT(ID_VALE) INTO ES_VALE FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
            IF ES_VALE > 0 THEN
                SELECT ID_VALE INTO L_ID_VALE  FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                SELECT ID_ENTIDAD||'-'||ID_DEPTO||'-[Vale :'||NRO_VALE||']-Rendicion-'||FC_NOMBRE_PERSONA(ID_EMPLEADO) INTO L_GLOSA
                FROM CAJA_VALE WHERE ID_VALE = L_ID_VALE;
            END IF;
        
        
            
            l_detalle:='';--P_DETALLE;
            l_detalle_in:='';--P_DETALLE Ya preparado para guardar;
            -- l_fondo:='10';
            
            --OBTIENE DATOS DEL PAGO
            SELECT 
                    ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,DECODE(ID_MEDIOPAGO,'008',7,'007',8,'001',9) AS ID_OPERACION,DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC','999','REND') AS PAGO,TO_CHAR(FECHA,'DD/MM/YY') AS FECHA,NUMERO
                    --ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,DECODE(ID_MEDIOPAGO,'008',7,'007',8,'001',9) 
                    into l_id_entidad,l_id_depto_pago, l_id_ctabancaria,l_voucher,l_id_mediopago,l_id_operorigen,l_pago,l_fecha_oper,l_numero_oper
            FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;
            
            SELECT B.SIGLA INTO L_BANCO FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
            ON A.ID_BANCO = B.ID_BANCO
            WHERE A.ID_CTABANCARIA = l_id_ctabancaria;
            --DETALLE
            OPEN cdet;
             
            FETCH cdet INTO l_pgasto, l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe,l_importe_me,l_correlativo,l_det;
            WHILE cdet%FOUND LOOP
                l_memo :=l_tipoorigen || '-' || l_pgasto;
                ---DiNAMICA ASIENTO
                OPEN casi;
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                WHILE casi%FOUND LOOP
                    IF l_id_entidad <> 7124 THEN 
                        IF l_agrupa = 'S' THEN 
                            --l_detalle_in := SUBSTR(l_id_entidad || '-' || l_detalle, 1,50);
                            l_detalle_in := SUBSTR(l_id_entidad||'-'||l_id_depto_pago||'-'||l_pago||'-'||L_BANCO||'-OP-'||l_numero_oper||'-'||l_fecha_oper||'-'||l_det, 1,50);
                        ELSE 
                            l_detalle_in:=l_detalle;
                            --l_detalle_in := SUBSTR( l_id_entidad || '-' || l_correlativo || '-' || l_detalle || '-' || SUBSTR(FC_NOMBRE_PERSONA(l_id_persona),1,100), 1,50);
                        END IF;
                    ELSE 
                        IF l_agrupa = 'S' THEN 
                            l_detalle_in := SUBSTR(l_id_entidad||'-'||l_id_depto_pago||'-'||l_pago||'-'||L_BANCO||'-OP-'||l_numero_oper||'-'||l_fecha_oper||'-'||l_det, 1,50);
                        ELSE 
                            l_detalle_in:=l_detalle;
                        END IF;
                    END IF;
                    
                    select (case when l_id_indicador='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              else
                              0
                              end), 
                              (case when l_id_indicador='IMPORTE' then 
                                (l_importe_me)*(l_porcentaje)
                              else
                              0
                              end)
                              into l_importeasiento, l_importeasiento_me
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unico='M') then
                        SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                        if l_buscar>0 then
                            select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                            select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                            select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                        else
                            l_depto:=l_deptos;
                        end if;
                    elsif(l_unico='X') then
                       --select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                       select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                    elsif l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_pago;
                    end if;
                
                    if l_unicoctate='U' then
                        select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        if l_cont>0 then
                            if l_id_mediopago = '008' then 
                                select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            else
                                if l_dc = 'D' then
                                    select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                else
                                    SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                                end if;
                            end if;
                        end if;
                    elsif(l_unicoctate='M') then
                        if l_dc = 'C' then
                            SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                        end if;
                        /*SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                        if l_buscar>0 then
                            select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                            select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                            select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                        else
                            l_cuenta_cte:=l_ctates;
                        end if;*/
                    elsif(l_unicoctate='B') then
                        if l_dc = 'C' then
                            SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                        end if;
                    elsif(l_unicoctate='X') then
                        --select NUM_DOCUMENTO into l_cuenta_cte from VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                        select count(ID_RUC) into l_count_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;  
                        if(l_count_cuenta_cte = 1) then --CTA CTE RUC PROVEEDOR
                            select ID_RUC into l_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;
                        else --CTA CTE PERSONAL - EMPLEADO
                            select COUNT(1) into l_cont from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_persona and id_tipodocumento = 1;
                            IF l_cont > 0 THEN
                                select MIN(NUM_DOCUMENTO) into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_persona and id_tipodocumento = 1;
                            END IF;
                        end if;
                    end if; 
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                        l_importeasiento_me:=l_importeasiento_me*(-1);
                         ---=====
                        IF ES_VALE > 0 THEN 
                            SELECT B.CUENTA,CUENTA_CTE INTO l_id_cuentaaasi,l_cuenta_cte
                            FROM CAJA_VALE A JOIN CONTA_ASIENTO B ON A.ID_TIPOORIGEN = B.ID_TIPOORIGEN 
                            AND A.ID_VALE = B.ID_ORIGEN AND A.ID_VOUCHER = B.VOUCHER 
                            WHERE A.ID_VALE = L_ID_VALE
                            AND B.IMPORTE > 0;
                            l_detalle_in := L_GLOSA;
                            l_agrupa := 'S';
                        END IF;
                        --------
                    end if;
                    
                    select count(1) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_tipoorigen
                    and ID_ORIGEN=l_pgasto
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                
                    if l_importeasiento<>0 then
                        if l_cont=0 then
                        --if l_cont=0 and l_agrupa = 'N' then 
                            INSERT INTO CONTA_ASIENTO (
                                            ID_TIPOORIGEN,
                                            ID_ORIGEN, 
                                            FONDO,
                                            DEPTO,
                                            CUENTA, 
                                            CUENTA_CTE,
                                            RESTRICCION,
                                            IMPORTE,
                                            DESCRIPCION,
                                            MEMO,
                                            VOUCHER, 
                                            PARENT_ID,
                                            REF_ID,
                                            AGRUPA,
                                            IMPORTE_ME
                            )VALUES ( 
                                            l_tipoorigen,
                                            l_pgasto,
                                            l_fondo,
                                            l_depto,
                                            l_id_cuentaaasi,
                                            l_cuenta_cte,
                                            l_id_restriccion,
                                            l_importeasiento,
                                            l_detalle_in,
                                            l_memo,
                                            l_voucher,
                                            null,
                                            l_ref_id,
                                            l_agrupa,
                                            l_importeasiento_me
                            );
                          
                        else
                        
                            update CONTA_ASIENTO set IMPORTE=l_importeasiento, IMPORTE_ME = l_importeasiento_me
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasi
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                            --AND 1=2;
                        end if;
                        
                        --l_error:=0; --no se ha generado el asiento
                        --l_msgerror:=l_id_operorigen||'-'||P_ID_PAGO||'-'||l_depto||'-'||l_id_cuentaaasi||'-'||l_cuenta_cte||'-'||l_dc;
                    end if;
                    
                    
                    -- Add by @vitmar INTERDEPARTAMENTOS.
                    IF l_id_entidad <> 7124 THEN 
                        l_asiento := l_id_asiento;
                        --l_depto := '0000';
                        -- Saber si el gasto de la proivision esta en diferenctes departamentos
                        OPEN gastos_otros_deptos;
                        FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe, l_gastos_otros_importe_me;
                        WHILE gastos_otros_deptos%FOUND LOOP
                            
                            OPEN casides;
                            FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                            WHILE casides%FOUND LOOP
                                
                                 select case when l_id_indicadord='IMPORTE' then 
                                    (l_gastos_otros_importe)*(l_porcentaje)
                                  else
                                  0
                                  end into l_gastos_otros_importe
                                from dual;  
                               
                               select case when l_id_indicadord='IMPORTE' then 
                                    (l_gastos_otros_importe_me)*(l_porcentaje)
                                  else
                                  0
                                  end into l_gastos_otros_importe_me
                                from dual; 
                                
                                l_depto:=null;
                                l_cuenta_cte:=null;
                                
                                if l_unicod='N' then
                                    l_depto := l_gastos_otros_id_depto;
                                elsif l_unicod='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                                   
                                end if;
                            
                                if l_unicoctated='N' then
                                    l_cuenta_cte := l_gastos_otros_id_depto;
                                    --l_cuenta_cte := 'XXXX';
                                elsif l_unicoctated='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                                end if;
                                if l_dcd='C' then
                                    l_gastos_otros_importe:=l_gastos_otros_importe*(-1);
                                    l_gastos_otros_importe_me:=l_gastos_otros_importe_me*(-1);
                                end if;
                                 
                                if l_gastos_otros_importe<>0 then
                                    INSERT INTO CONTA_ASIENTO (
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA,
                                        IMPORTE_ME
                                    )VALUES ( 
                                        l_tipoorigen,
                                        l_pgasto,
                                        l_fondo,
                                        l_depto,
                                        l_id_cuentaaasid,
                                        l_cuenta_cte,
                                        l_id_restricciond,
                                        l_gastos_otros_importe,
                                        l_detalle_in ,
                                        l_memo,
                                        l_voucher,
                                        null,
                                        l_ref_id,
                                        l_agrupa,
                                        l_gastos_otros_importe_me
                                    );
                                
                                end if;

                                FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                            END LOOP;
                            CLOSE casides; 
                            
                            FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe, l_gastos_otros_importe_me;
                        END LOOP;
                        CLOSE gastos_otros_deptos;
                        l_asiento := 0;
                    END IF;
                    
                    --DESTINO
                    OPEN casides;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                    WHILE casides%FOUND LOOP
                        
                        select (case when l_id_indicadord='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              when l_id_indicadord='IMPORTE_TARJETA' then
                                  (l_importe_cheque)*(l_porcentaje)
                              when l_id_indicadord='IMPORTE_TRANS' then
                                   (l_importe_trans)*(l_porcentaje)
                              else
                              0
                              end),
                              (case when l_id_indicadord='IMPORTE' then 
                                (l_importe_me)*(l_porcentaje)
                              when l_id_indicadord='IMPORTE_TARJETA' then
                                  (l_importe_cheque)*(l_porcentaje)
                              when l_id_indicadord='IMPORTE_TRANS' then
                                   (l_importe_trans)*(l_porcentaje)
                              else
                              0
                              end) into l_importeasiento,l_importeasiento_me
                        from dual;
                
                        l_depto:=null;
                        l_cuenta_cte:=null;
                  
                        if l_unicod='U' then
                            select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                        elsif(l_unicod='M') then
                            SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                           if l_buscar>0 then
                                select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                                select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into l_depto from dual;
                            else
                                l_depto:=l_deptos;
                            end if;
                        elsif(l_unicod='X') then
                           --select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                           select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                        end if;
                    
                        if l_unicoctated='U' then
                            select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                            if l_cont>0 then
                                select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                            end if;

                        elsif(l_unicoctated='M') then
                            SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                            if l_buscar>0 then
                                select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                                select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into l_cuenta_cte from dual;
                            else
                                l_cuenta_cte:=l_ctates;
                            end if;
                        elsif(l_unicoctated='X') then
                            --select NUM_DOCUMENTO into l_cuenta_cte from VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                            select count(ID_RUC) into l_count_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;  
                            if(l_count_cuenta_cte = 1) then
                                select ID_RUC into l_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;
                            end if;
                        end if;
                    
                        if l_dc='C' then
                            l_importeasiento:=l_importeasiento*(-1);
                            l_importeasiento_me:=l_importeasiento_me*(-1);
                        end if;
                        if l_importeasiento<>0 then
                            select count(*) into l_cont from CONTA_ASIENTO
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasid
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                            
                            IF l_agrupa='S' and l_cont>0 THEN
                                update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento,IMPORTE_ME=IMPORTE_ME+l_importeasiento_me
                                where ID_TIPOORIGEN=l_tipoorigen
                                and ID_ORIGEN=l_pgasto
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasid
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=l_dc;
                            ELSE
                                INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA,
                                IMPORTE_ME
                                )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasid,
                                l_cuenta_cte,
                                l_id_restricciond,
                                l_importeasiento,
                                l_detalle_in,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id,
                                l_agrupa,
                                l_importeasiento_me
                                );
                            END IF;
                        end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                    END LOOP;
                    CLOSE casides; 
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                END LOOP;
                CLOSE casi; 

            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe, l_importe_me, l_correlativo,l_det;
            END LOOP;
            CLOSE cdet; 

            select count(*) into l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;
        
            if l_contar=0 then
              l_error:=3; --no se ha generado el asiento
              l_msgerror:='Asiento Pago: No se ha generado el asiento';    
            else
                select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
                COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
                into l_debito,l_credito
                from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_tipoorigen
                and ID_ORIGEN=l_pgasto;

                if l_credito=0 or l_credito=0 then
                    l_error:=4; --importe de debito o credito igual a cero
                    l_msgerror:='Asiento Pago: Importe de débito o crédito igual a cero';
                else
                    if l_credito<>l_credito then
                        l_error:=5; --descuadre de asiento
                        l_msgerror:='Asiento Pago: Descuadre de asiento';
                    end if;
                end if;
            end if;
        
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
        
    END SP_GENERAR_ASIENTO_PAGO;
    PROCEDURE  SP_GENERAR_ASIENTO_PAGO_BK(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_dinamica number;
        l_asiento number;
        l_id_persona number;
        l_detalle varchar2(100);
        l_detalle_in varchar2(100);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_correlativo number(10,2); --Add by @vitmar
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_cheque number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_id_depto_pago varchar2(20);
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_operorigen number:=5;
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        --l_id_cliente number;
        l_id_ctabancaria number;
        l_id_mediopago varchar2(4);
        l_pgasto number;
        l_tipoorigen number;
        l_origen number;
        l_pago varchar2(10);
        l_fecha_oper varchar2(10);
        l_numero_oper varchar2(10);
        
        CURSOR cdet IS	
        SELECT 
        A.ID_PCOMPRA, A.ID_PCOMPRA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_PROVEEDOR, SUBSTR(A.DETALLE, 1, 50), A.IMPORTE, 1 AS CORRELATIVO
        FROM CAJA_PAGO_COMPRA A
        INNER JOIN COMPRA_SALDO C ON A.ID_SALDO=C.ID_SALDO
        WHERE A.ID_PAGO = P_ID_PAGO;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, ID_FONDO 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;
        
        CURSOR gastos_otros_deptos IS		
        SELECT ID_DEPTO, IMPORTE FROM COMPRA_ASIENTO
        WHERE ID_COMPRA=l_origen
        AND ID_DEPTO <> l_depto;
        
        l_gastos_otros_id_depto varchar2(10);
        l_gastos_otros_importe number(10,2);
        
        BEGIN
            
            l_detalle:='';--P_DETALLE;
            l_detalle_in:='';--P_DETALLE Ya preparado para guardar;
            -- l_fondo:='10';
            
            --OBTIENE DATOS DEL PAGO
            SELECT 
                    ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,DECODE(ID_MEDIOPAGO,'008',7,'007',8,'001',9) AS ID_OPERACION,DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC','999','REND') AS PAGO,TO_CHAR(FECHA,'DD/MM/YY') AS FECHA,NUMERO
                    --ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,DECODE(ID_MEDIOPAGO,'008',7,'007',8,'001',9) 
                    into l_id_entidad,l_id_depto_pago, l_id_ctabancaria,l_voucher,l_id_mediopago,l_id_operorigen,l_pago,l_fecha_oper,l_numero_oper
            FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;

            --DETALLE
            OPEN cdet;
             
            FETCH cdet INTO l_pgasto, l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe,l_correlativo;
            WHILE cdet%FOUND LOOP
                l_memo :=l_tipoorigen || '-' || l_pgasto;
                ---DiNAMICA ASIENTO
                OPEN casi;
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                WHILE casi%FOUND LOOP
                    IF l_id_entidad <> 7124 THEN 
                        IF l_agrupa = 'S' THEN 
                            l_detalle_in := SUBSTR(l_id_entidad || '-' || l_detalle, 1,50);
                        ELSE 
                            l_detalle_in := SUBSTR( l_id_entidad || '-' || l_correlativo || '-' || l_detalle || '-' || SUBSTR(FC_NOMBRE_PERSONA(l_id_persona),1,100), 1,50);
                        END IF;
                    ELSE 
                        IF l_agrupa = 'S' THEN 
                            l_detalle_in := SUBSTR(l_id_entidad||'-'||l_id_depto_pago||'-'||l_pago||':'||l_numero_oper||':'||l_fecha_oper, 1,50);
                        ELSE 
                            l_detalle_in:=l_detalle;
                        END IF;
                    END IF;
                    
                    select case when l_id_indicador='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unico='M') then
                        SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                        if l_buscar>0 then
                            select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                            select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                            select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                        else
                            l_depto:=l_deptos;
                        end if;
                    elsif(l_unico='X') then
                       --select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                       select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                    elsif l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_pago;
                    end if;
                
                    if l_unicoctate='U' then
                        select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        if l_cont>0 then
                            if l_id_mediopago = '008' then 
                                select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            else
                                if l_dc = 'D' then
                                    select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                else
                                    SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                                end if;
                            end if;
                        end if;
                    elsif(l_unicoctate='M') then
                        if l_dc = 'C' then
                            SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                        end if;
                        /*SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                        if l_buscar>0 then
                            select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                            select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                            select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                        else
                            l_cuenta_cte:=l_ctates;
                        end if;*/
                    elsif(l_unicoctate='B') then
                        if l_dc = 'C' then
                            SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                        end if;
                    elsif(l_unicoctate='X') then
                        --select NUM_DOCUMENTO into l_cuenta_cte from VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                        select count(ID_RUC) into l_count_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;  
                            if(l_count_cuenta_cte = 1) then
                                select ID_RUC into l_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;
                            end if;
                    end if; 
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    
                    select count(1) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_tipoorigen
                    and ID_ORIGEN=l_pgasto
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                
                    if l_importeasiento<>0 then
                        if l_cont=0 then
                        --if l_cont=0 and l_agrupa = 'N' then 
                            INSERT INTO CONTA_ASIENTO (
                                            ID_TIPOORIGEN,
                                            ID_ORIGEN, 
                                            FONDO,
                                            DEPTO,
                                            CUENTA, 
                                            CUENTA_CTE,
                                            RESTRICCION,
                                            IMPORTE,
                                            DESCRIPCION,
                                            MEMO,
                                            VOUCHER, 
                                            PARENT_ID,
                                            REF_ID,
                                            AGRUPA
                            )VALUES ( 
                                            l_tipoorigen,
                                            l_pgasto,
                                            l_fondo,
                                            l_depto,
                                            l_id_cuentaaasi,
                                            l_cuenta_cte,
                                            l_id_restriccion,
                                            l_importeasiento,
                                            l_detalle_in,
                                            l_memo,
                                            l_voucher,
                                            null,
                                            l_ref_id,
                                            l_agrupa
                            );
                          
                        else
                        
                            update CONTA_ASIENTO set IMPORTE=l_importeasiento
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasi
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                            --AND 1=2;
                        end if;
                        
                        --l_error:=0; --no se ha generado el asiento
                        --l_msgerror:=l_id_operorigen||'-'||P_ID_PAGO||'-'||l_depto||'-'||l_id_cuentaaasi||'-'||l_cuenta_cte||'-'||l_dc;
                    end if;
                    
                    
                    -- Add by @vitmar INTERDEPARTAMENTOS.
                    IF l_id_entidad <> 7124 THEN 
                        l_asiento := l_id_asiento;
                        --l_depto := '0000';
                        -- Saber si el gasto de la proivision esta en diferenctes departamentos
                        OPEN gastos_otros_deptos;
                        FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe;
                        WHILE gastos_otros_deptos%FOUND LOOP
                            
                            OPEN casides;
                            FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                            WHILE casides%FOUND LOOP
                                
                                 select case when l_id_indicadord='IMPORTE' then 
                                    (l_gastos_otros_importe)*(l_porcentaje)
                                  else
                                  0
                                  end into l_gastos_otros_importe
                                from dual;    
                                
                                l_depto:=null;
                                l_cuenta_cte:=null;
                                
                                if l_unicod='N' then
                                    l_depto := l_gastos_otros_id_depto;
                                elsif l_unicod='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                                   
                                end if;
                            
                                if l_unicoctated='N' then
                                    l_cuenta_cte := l_gastos_otros_id_depto;
                                    --l_cuenta_cte := 'XXXX';
                                elsif l_unicoctated='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                                end if;
                                if l_dcd='C' then
                                    l_gastos_otros_importe:=l_gastos_otros_importe*(-1);
                                end if;
                                 
                                if l_gastos_otros_importe<>0 then
                                    INSERT INTO CONTA_ASIENTO (
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        l_tipoorigen,
                                        l_pgasto,
                                        l_fondo,
                                        l_depto,
                                        l_id_cuentaaasid,
                                        l_cuenta_cte,
                                        l_id_restricciond,
                                        l_gastos_otros_importe,
                                        l_detalle_in ,
                                        l_memo,
                                        l_voucher,
                                        null,
                                        l_ref_id,
                                        l_agrupa
                                    );
                                
                                end if;

                                FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                            END LOOP;
                            CLOSE casides; 
                            
                            FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe;
                        END LOOP;
                        CLOSE gastos_otros_deptos;
                        l_asiento := 0;
                    END IF;
                    
                    --DESTINO
                    OPEN casides;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                    WHILE casides%FOUND LOOP
                        
                        select case when l_id_indicadord='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              when l_id_indicadord='IMPORTE_TARJETA' then
                                  (l_importe_cheque)*(l_porcentaje)
                              when l_id_indicadord='IMPORTE_TRANS' then
                                   (l_importe_trans)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento
                        from dual;
                
                        l_depto:=null;
                        l_cuenta_cte:=null;
                  
                        if l_unicod='U' then
                            select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                        elsif(l_unicod='M') then
                            SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                           if l_buscar>0 then
                                select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                                select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into l_depto from dual;
                            else
                                l_depto:=l_deptos;
                            end if;
                        elsif(l_unicod='X') then
                           --select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                           select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                        end if;
                    
                        if l_unicoctated='U' then
                            select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                            if l_cont>0 then
                                select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                            end if;

                        elsif(l_unicoctated='M') then
                            SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                            if l_buscar>0 then
                                select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                                select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into l_cuenta_cte from dual;
                            else
                                l_cuenta_cte:=l_ctates;
                            end if;
                        elsif(l_unicoctated='X') then
                            --select NUM_DOCUMENTO into l_cuenta_cte from VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                            select count(ID_RUC) into l_count_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;  
                            if(l_count_cuenta_cte = 1) then
                                select ID_RUC into l_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;
                            end if;
                        end if;
                    
                        if l_dc='C' then
                            l_importeasiento:=l_importeasiento*(-1);
                        end if;
                        if l_importeasiento<>0 then
                            select count(*) into l_cont from CONTA_ASIENTO
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasid
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                            
                            IF l_agrupa='S' and l_cont>0 THEN
                                update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                                where ID_TIPOORIGEN=l_tipoorigen
                                and ID_ORIGEN=l_pgasto
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasid
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=l_dc;
                            ELSE
                                INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA
                                )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasid,
                                l_cuenta_cte,
                                l_id_restricciond,
                                l_importeasiento,
                                l_detalle_in,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id,
                                l_agrupa
                                );
                            END IF;
                        end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                    END LOOP;
                    CLOSE casides; 
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                END LOOP;
                CLOSE casi; 

            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe, l_correlativo;
            END LOOP;
            CLOSE cdet; 

            select count(*) into l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;
        
            if l_contar=0 then
              l_error:=3; --no se ha generado el asiento
              l_msgerror:='Asiento Pago: No se ha generado el asiento';    
            else
                select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
                COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
                into l_debito,l_credito
                from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_tipoorigen
                and ID_ORIGEN=l_pgasto;

                if l_credito=0 or l_credito=0 then
                    l_error:=4; --importe de debito o credito igual a cero
                    l_msgerror:='Asiento Pago: Importe de débito o crédito igual a cero';
                else
                    if l_credito<>l_credito then
                        l_error:=5; --descuadre de asiento
                        l_msgerror:='Asiento Pago: Descuadre de asiento';
                    end if;
                end if;
            end if;
        
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
        
    END SP_GENERAR_ASIENTO_PAGO_BK;
    PROCEDURE  SP_GENERAR_ASIENTO_RENDICION(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
        L_ID_ENTIDAD NUMBER;
        L_VOUCHER NUMBER;
        L_TIPOORIGEN NUMBER;
        L_ID_ORIGEN NUMBER;
        L_FONDO NUMBER;
        L_DEPTO VARCHAR2(10);
        L_ID_CUENTAAASI VARCHAR2(10);
        L_CUENTA_CTE VARCHAR2(10);
        L_ID_RESTRICCION VARCHAR2(10);
        L_IMPORTE NUMBER(10,2);
        L_DETALLE VARCHAR2(100);
        L_MEMO VARCHAR2(50);
        L_AGRUPA VARCHAR2(4);
        
        ID_FONDO_D NUMBER;
        L_ID_DEPTO_D VARCHAR2(10);
        L_ID_CUENTAAASI_D VARCHAR2(10);
        L_ID_CTACTE_D VARCHAR2(10);
        L_ID_RESTRICCION_D VARCHAR2(10);
        L_DESCRIPCION_D  VARCHAR2(100);
        L_AGRUPA_D VARCHAR2(4);
        L_DEBITO NUMBER(10,2);
        L_CREDITO NUMBER(10,2);
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(200);
        L_CONTAR NUMBER;
        L_DC VARCHAR2(1);
        
        CURSOR casi IS		
        SELECT DISTINCT 
                B.ID_TIPOORIGEN,B.ID_PCOMPRA,A.ID_FONDO,(SELECT X.ID_DEPTO FROM CONTA_DINAMICA_DEPTO X WHERE X.ID_ASIENTO = A.ID_ASIENTO) AS ID_DEPTO,
                A.ID_CUENTAAASI,
                (SELECT MAX(X.ID_CTACTE) FROM CONTA_DINAMICA_CTA_CTE X WHERE X.ID_ASIENTO = A.ID_ASIENTO) AS ID_CTACTE,
                A.ID_RESTRICCION,B.IMPORTE*(DECODE(A.DC,'C',-1,1)) AS IMP,B.DETALLE AS DESCRIPCION,A.AGRUPA,A.DC
        FROM CONTA_DINAMICA_ASIENTO A JOIN CAJA_PAGO_COMPRA B
        ON A.ID_DINAMICA = B.ID_DINAMICA
        WHERE B.ID_PAGO = P_ID_PAGO
        AND A.DC = 'D'
        UNION ALL
        SELECT
                A.ID_TIPOORIGEN,A.ID_PGASTO,B.ID_FONDO,B.ID_DEPTO,B.ID_CUENTAAASI,B.ID_CTACTE,B.ID_RESTRICCION,B.IMPORTE*(DECODE(B.DC,'C',-1,1)) AS IMP,A.DETALLE,B.AGRUPA,B.DC
        FROM CAJA_PAGO_GASTO A JOIN CAJA_PAGO_GASTO_ASIENTO B
        ON A.ID_PGASTO = B.ID_PGASTO
        WHERE A.ID_PAGO = P_ID_PAGO
        ORDER BY DC DESC,DESCRIPCION;
        
        BEGIN
            --OBTIENE DATOS DEL PAGO
            SELECT ID_ENTIDAD,ID_VOUCHER INTO L_ID_ENTIDAD,L_VOUCHER 
            FROM CAJA_PAGO 
            WHERE ID_PAGO=P_ID_PAGO;
            
            --DATOS PARA ASIENTO DE CREDITO - A RENDIR
            SELECT 
                    B.ID_FONDO,B.ID_DEPTO,B.ID_CUENTAAASI,B.ID_CTACTE,B.ID_RESTRICCION,A.ID_ENTIDAD||'-'||A.ID_DEPTO||'-'||B.DESCRIPCION as DESCRIPCION,B.AGRUPA 
                    INTO ID_FONDO_D,L_ID_DEPTO_D,L_ID_CUENTAAASI_D,L_ID_CTACTE_D,L_ID_RESTRICCION_D,L_DESCRIPCION_D,L_AGRUPA_D
            FROM CAJA_PAGO A JOIN CAJA_PAGO_ASIENTO B
            ON A.ID_PAGO = B.ID_PAGO
            WHERE A.ID_PAGO = P_ID_PAGO;
            
            OPEN casi;
            FETCH casi INTO L_TIPOORIGEN,L_ID_ORIGEN,L_FONDO,L_DEPTO,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,L_IMPORTE,L_DETALLE,L_AGRUPA,L_DC;
                WHILE casi%FOUND LOOP
                    
                    L_MEMO :=L_TIPOORIGEN || '-' || L_ID_ORIGEN;
                    
                    --INSERTO EL DEBITO
                    INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,AGRUPA)
                    VALUES (L_TIPOORIGEN,L_ID_ORIGEN,L_FONDO,L_DEPTO,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,L_IMPORTE,L_DETALLE,L_MEMO,L_VOUCHER,L_AGRUPA);
                    
                    --INSERTO EL CREDITO
                    INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN,FONDO,DEPTO,CUENTA,CUENTA_CTE,RESTRICCION,IMPORTE,DESCRIPCION,MEMO,VOUCHER,AGRUPA)
                    VALUES (L_TIPOORIGEN,L_ID_ORIGEN,ID_FONDO_D,L_ID_DEPTO_D,L_ID_CUENTAAASI_D,L_ID_CTACTE_D,L_ID_RESTRICCION_D,L_IMPORTE*-1,L_DESCRIPCION_D,L_MEMO,L_VOUCHER,L_AGRUPA_D);
                    
                FETCH casi INTO L_TIPOORIGEN,L_ID_ORIGEN,L_FONDO,L_DEPTO,L_ID_CUENTAAASI,L_CUENTA_CTE,L_ID_RESTRICCION,L_IMPORTE,L_DETALLE,L_AGRUPA,L_DC;
                END LOOP;
            CLOSE casi;
            
            SELECT COUNT(1) INTO L_CONTAR FROM CONTA_ASIENTO
            WHERE ID_TIPOORIGEN=L_TIPOORIGEN
            AND ID_ORIGEN=L_ID_ORIGEN;
        
            IF L_CONTAR=0 THEN
              L_ERROR:=3; --no se ha generado el asiento
              L_MSGERROR:='Asiento Pago: No se ha generado el asiento';    
            ELSE
                SELECT COALESCE(SUM(CASE WHEN IMPORTE>0 THEN IMPORTE ELSE 0 END),0) AS DEBITO,
                COALESCE(SUM(CASE WHEN IMPORTE<0 THEN IMPORTE*(-1) ELSE 0 END),0) AS CREDITO
                INTO L_DEBITO,L_CREDITO
                FROM CONTA_ASIENTO
                WHERE ID_TIPOORIGEN=L_TIPOORIGEN
                AND ID_ORIGEN=L_ID_ORIGEN;

                IF L_CREDITO=0 OR L_CREDITO=0 THEN
                    L_ERROR:=4; --importe de debito o credito igual a cero
                    L_MSGERROR:='Asiento Pago: Importe de débito o crédito igual a cero';
                ELSE
                    IF L_CREDITO<>L_CREDITO THEN
                        L_ERROR:=5; --descuadre de asiento
                        L_MSGERROR:='Asiento Pago: Descuadre de asiento';
                    END IF;
                END IF;
            END IF;
        
            P_ERROR:=L_ERROR;
            P_MSGERROR:=L_MSGERROR;
        
    END SP_GENERAR_ASIENTO_RENDICION;
    PROCEDURE  SP_GENERAR_ASIENTO_PAGO_UPN(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_dinamica number;
        l_asiento number;
        l_id_persona number;
        l_detalle varchar2(100);
        l_detalle_in varchar2(100);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_importe_me number(10,2);
        l_correlativo number(10,2); --Add by @vitmar
        l_es_credito varchar2(1);
        l_id_comprobante varchar2(10);
        l_serie_numero varchar2(25);
        l_fecha_doc varchar2(15);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        L_COMPROBANTE_NC varchar2(25) :='';
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_cheque number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        l_primario varchar2(10);
        
        depto_clientes varchar2(20);
        depto_banco varchar2(20);
        
        l_id_entidad number;
        l_id_depto_pago varchar2(20);
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_operorigen number:=5;
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        --l_id_cliente number;
        l_id_ctabancaria number;
        l_id_mediopago varchar2(4);
        l_pgasto number;
        l_tipoorigen number;
        l_origen number;
        
        CURSOR cdet IS	
        /*
        SELECT 
        ID_PGASTO, 0 as ID_ORIGEN, ID_TIPOORIGEN,ID_DINAMICA,ID_PERSONA,SUBSTR(DETALLE, 1, 50),IMPORTE, 0 as CORRELATIVO, 'N' AS ES_CREDITO,
        'X' as ID_COMPROBANTE, '-' AS SERIE_NUMERO, TO_CHAR(FECHA,'DD/MM/YYYY') AS FECHA
        FROM CAJA_PAGO_GASTO
        WHERE ID_PAGO = P_ID_PAGO
        UNION ALL
        */
        SELECT 
        A.ID_PCOMPRA, A.ID_COMPRA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_PROVEEDOR, SUBSTR(A.DETALLE, 1, 50), A.IMPORTE, A.IMPORTE_ME, C.CORRELATIVO, C.ES_CREDITO,
        C.ID_COMPROBANTE, (COALESCE(C.SERIE,'') || '-' ||COALESCE(C.NUMERO,'')) AS SERIE_NUMERO, TO_CHAR(C.FECHA_DOC,'DD/MM/YYYY') AS FECHA
        FROM CAJA_PAGO_COMPRA A
        INNER JOIN COMPRA C ON A.ID_COMPRA=C.ID_COMPRA
        WHERE A.ID_PAGO = P_ID_PAGO
        UNION ALL
        SELECT 
        A.ID_PVENTA, A.ID_VENTA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_CLIENTE, SUBSTR((B.ID_ENTIDAD || '-' || ' Clientes'), 1, 50),A.IMPORTE,A.IMPORTE_ME,
        0 as CORRELATIVO, 'N' AS ES_CREDITO,
        B.ID_COMPROBANTE,  (COALESCE(B.SERIE,'') || '-' ||COALESCE(B.NUMERO,'')) AS SERIE_NUMERO, TO_CHAR(B.FECHA,'DD/MM/YYYY') AS FECHA
        FROM CAJA_PAGO_VENTA A INNER JOIN VENTA B ON A.ID_VENTA=B.ID_VENTA
        WHERE A.ID_PAGO = P_ID_PAGO;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO, a.PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        /*
        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, ID_FONDO 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        AND ID_DINAMICA=l_dinamica
        ORDER BY NRO_ASIENTO,DC desc;
        
        CURSOR gastos_otros_deptos IS		
        SELECT ID_DEPTO
        , IMPORTE 
        FROM COMPRA_ASIENTO
        WHERE ID_COMPRA=l_origen
        AND ID_DEPTO <> l_depto;
        */
        L_TIENE_HIJO VARCHAR2(1);
        L_ID_CUENTAAASI_HIJO_DEDITO VARCHAR2(30);
        L_ID_CUENTAAASI_HIJO_CREDITO VARCHAR2(20);
        L_ID_FONDO_HIJO_DEBITO VARCHAR2(5);
        
        l_gastos_otros_id_depto varchar2(10);
        l_gastos_otros_importe number(10,2);
        
        BEGIN
            
            l_detalle:='';--P_DETALLE;
            l_detalle_in:='';--P_DETALLE Ya preparado para guardar;
            -- l_fondo:='10';
            
            --OBTIENE DATOS DEL PAGO
            SELECT ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,DECODE(ID_MEDIOPAGO,'008',7,'007',8,'001',9) into l_id_entidad,l_id_depto_pago, l_id_ctabancaria,l_voucher,l_id_mediopago,l_id_operorigen 
            FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;

            --DETALLE
            OPEN cdet;
             
            FETCH cdet INTO l_pgasto, l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle, l_importe, l_importe_me,l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            WHILE cdet%FOUND LOOP
                l_memo :=l_tipoorigen || '-' || l_pgasto;
                -- l_gastos_otros_importe := l_importe;
                ---DiNAMICA ASIENTO
                OPEN casi;
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_primario;
                WHILE casi%FOUND LOOP
                   
                   IF l_agrupa = 'S' THEN 
                        l_detalle_in := SUBSTR('Op. ' || l_detalle, 1,50);
                    ELSE
                        select coalesce(NOMBRE_CORTO,'') into L_COMPROBANTE_NC from TIPO_COMPROBANTE WHERE ID_COMPROBANTE=l_id_comprobante;
                        l_detalle_in := SUBSTR( (l_correlativo || ' | ' || L_COMPROBANTE_NC || '. ' || l_serie_numero || ' | ' || l_fecha_doc), 1,50);
                    END IF;
                    
                    select case when l_id_indicador='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento
                    from dual;
                   
                   select case when l_id_indicador='IMPORTE' then 
                                (l_importe_me)*(l_porcentaje)
                              else
                              0
                              end into l_importe_me
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unico='M') then
                        SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                        if l_buscar>0 then
                            select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                            select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                            select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                        else
                            l_depto:=l_deptos;
                        end if;
                    elsif(l_unico='X') then
                       --select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                       select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                    ELSIF l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_pago;
                    END IF;
                
                    IF l_es_credito = 'S' and l_dc <> 'C' THEN
                        SELECT FC_RUC(l_id_persona) into l_cuenta_cte from dual;
                    ELSE 
                        if l_unicoctate='U' then
                            select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            if l_cont>0 then
                                if l_id_mediopago = '008' then 
                                    select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                else
                                    if l_dc = 'D' then
                                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                    else
                                        SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                                    end if;
                                end if;
                            end if;
                        elsif(l_unicoctate='M') then
                            if l_dc = 'C' then
                                SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                        elsif(l_unicoctate='B') then
                            if l_dc = 'C' then
                                SELECT COALESCE(ID_DEPTO_OPER, l_depto), ID_TIPOCTACTE, ID_CUENTAAASI into l_depto, l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                        elsif(l_unicoctate='X') then
                            SELECT FC_RUC(l_id_persona) into l_cuenta_cte from dual;
                            /*
                            select count(ID_RUC) into l_count_cuenta_cte from VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;  
                            if(l_count_cuenta_cte = 1) then
                                select ID_RUC into l_cuenta_cte from VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;
                            end if;
                            */
                        end if; 
                    END IF; 
                    
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                        l_importe_me := l_importe_me*(-1);
                    end if;
                    
                    select count(*) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_tipoorigen
                    and ID_ORIGEN=l_pgasto
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                
                    if l_importeasiento<>0 then
                        if l_cont=0 then
                        --if l_cont=0 and l_agrupa = 'N' then 
                            INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                IMPORTE_ME,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA,
                                PRIMARIO
                            )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importeasiento,
                                l_importe_me,
                                l_detalle_in,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id,
                                l_agrupa,
                                l_primario
                            );
                        else
                        
                            update CONTA_ASIENTO set IMPORTE=l_importeasiento, IMPORTE_ME=l_importe_me
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasi
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                            --AND 1=2;
                        end if;
                       
                       
                       IF l_fondo = '69' THEN  -- Fondo de publicaciones
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171045';
                        ELSIF l_fondo = '68' THEN -- Fondo Comunicación
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171060';
                        ELSIF l_fondo = '66' THEN -- Fondo Educación
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171020';
                        ELSIF l_fondo = '25' THEN -- Inversión em Inmovilizado
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171005';
                        ELSIF l_fondo = '93' THEN -- Fondo Asistencial
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171030';
                        ELSIF l_fondo = '81' THEN -- Fondo Donaciones Restringidas
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171081';
                        ELSE 
                            L_TIENE_HIJO := 'N';
                        END IF;
                        
                        IF L_TIENE_HIJO = 'S' THEN
                            L_ID_CUENTAAASI_HIJO_CREDITO := '1171001'; --Credito Deto 0000
                            L_ID_FONDO_HIJO_DEBITO := '10';
                            
                            -- AGREGAR ASIENTO -- DEBITO
                            INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                        CUENTA, CUENTA_CTE,
                                        RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                        MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                    values( l_tipoorigen,l_pgasto, L_ID_FONDO_HIJO_DEBITO, '0000',
                                    L_ID_CUENTAAASI_HIJO_DEDITO, '',
                                    '0A', l_importeasiento, l_importe_me,'Asiento por inter-fondos',
                                    l_tipoorigen || '-' || l_pgasto,l_voucher, NULL, l_pgasto, 'S');
                            
                            -- AGREGAR ASIENTO CONTRA PARTIDA -- CREDITO
                            INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                        CUENTA, CUENTA_CTE,
                                        RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                        MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                    values( l_tipoorigen,l_pgasto, l_fondo, '0000',
                                    L_ID_CUENTAAASI_HIJO_CREDITO, '',
                                    '0A', (l_importeasiento*-1), (l_importe_me*-1),'Asiento por inter-fondos',
                                    l_tipoorigen || '-' || l_pgasto,l_voucher, NULL, l_pgasto, 'S');        
                        END IF;
                    end if;
                    
                    /*
                    -- Add by @vitmar INTERDEPARTAMENTOS.
                    l_asiento := l_id_asiento;
                    --l_depto := '0000';
                    -- Saber si el gasto de la proivision esta en diferenctes departamentos
                    OPEN gastos_otros_deptos;
                    FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe;
                    WHILE gastos_otros_deptos%FOUND LOOP
                        
                        OPEN casides;
                        FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                        WHILE casides%FOUND LOOP
                            
                             select case when l_id_indicadord='IMPORTE' then 
                                (l_gastos_otros_importe)*(l_porcentaje)
                              else
                              0
                              end into l_gastos_otros_importe
                            from dual;    
                            
                            l_depto:=null;
                            l_cuenta_cte:=null;
                            
                            if l_unicod='N' then
                                l_depto := l_gastos_otros_id_depto;
                            elsif l_unicod='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                               -- END IF;
                            end if;
                        
                            if l_unicoctated='N' then
                                l_cuenta_cte := l_gastos_otros_id_depto;
                            elsif l_unicoctated='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                               -- END IF;
                            end if;
                            l_detalle_in:='Por inter-departamento a cobrar.';
                            if l_dcd='C' then
                                l_gastos_otros_importe:=l_gastos_otros_importe*(-1);
                                l_detalle_in:='Por inter-departamento a pagar.';
                            end if;
                             
                            if l_gastos_otros_importe<>0 then
                                INSERT INTO CONTA_ASIENTO (
                                    ID_TIPOORIGEN,
                                    ID_ORIGEN, 
                                    FONDO,
                                    DEPTO,
                                    CUENTA, 
                                    CUENTA_CTE,
                                    RESTRICCION,
                                    IMPORTE,
                                    DESCRIPCION,
                                    MEMO,
                                    VOUCHER, 
                                    PARENT_ID,
                                    REF_ID,
                                    AGRUPA
                                )VALUES ( 
                                    l_tipoorigen,
                                    l_pgasto,
                                    l_fondo,
                                    l_depto,
                                    l_id_cuentaaasid,
                                    l_cuenta_cte,
                                    l_id_restricciond,
                                    l_gastos_otros_importe,
                                    l_detalle_in ,
                                    l_memo,
                                    l_voucher,
                                    null,
                                    l_ref_id,
                                    l_agrupa
                                );
                            
                            end if;

                            FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                        END LOOP;
                        CLOSE casides; 
                        
                        FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe;
                    END LOOP;
                    CLOSE gastos_otros_deptos;
                    */
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_primario;
                END LOOP;
                CLOSE casi; 

            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe,l_importe_me, l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            END LOOP;
            CLOSE cdet; 
            
            /*
            OPEN cdet;
            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe, l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            WHILE cdet%FOUND LOOP
            
                select MAX(DEPTO) into depto_clientes from conta_asiento where id_tipoorigen=l_tipoorigen and id_origen=l_pgasto and primario='S' AND ROWNUM=1;
                select MAX(DEPTO), MAX(AGRUPA) into depto_banco, l_agrupa from conta_asiento where id_tipoorigen=l_tipoorigen and id_origen=l_pgasto and primario !='S' AND ROWNUM=1;
                if depto_clientes is not null and depto_banco is not null and  depto_clientes <> depto_banco then 
                
                    l_memo :=l_tipoorigen || '-' || l_pgasto;
                    
                    INSERT INTO CONTA_ASIENTO (
                            ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                            CUENTA_CTE,RESTRICCION, IMPORTE,DESCRIPCION, MEMO,
                            VOUCHER, PARENT_ID, REF_ID,AGRUPA
                        )VALUES (
                            l_tipoorigen,l_pgasto,'10',depto_clientes,'2136080',
                            depto_banco, '0A', (l_importe*-1),'Por inter-departamento a pagar' ,l_memo,
                            l_voucher, null, l_ref_id,l_agrupa
                        );
                                
                     INSERT INTO CONTA_ASIENTO (
                            ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                            CUENTA_CTE,RESTRICCION, IMPORTE,DESCRIPCION, MEMO,
                            VOUCHER, PARENT_ID, REF_ID,AGRUPA
                        )VALUES ( 
                            l_tipoorigen,l_pgasto,'10',depto_banco, '1136080',
                            depto_clientes, '0A', l_importe,'Por inter-departamento a cobrar' ,l_memo,
                            l_voucher, null, l_ref_id,l_agrupa
                        );
                end if;
            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe, l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            END LOOP;
            CLOSE cdet; 
            */

            select count(*) into l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;
        
            if l_contar=0 then
              l_error:=3; --no se ha generado el asiento
              l_msgerror:='Asiento Pago: No se ha generado el asiento';    
            else
                select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
                COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
                into l_debito,l_credito
                from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_tipoorigen
                and ID_ORIGEN=l_pgasto;

                if l_credito=0 or l_credito=0 then
                    l_error:=4; --importe de debito o credito igual a cero
                    l_msgerror:='Asiento Pago: Importe de débito o crédito igual a cero';
                else
                    if l_credito<>l_credito then
                        l_error:=5; --descuadre de asiento
                        l_msgerror:='Asiento Pago: Descuadre de asiento';
                    end if;
                end if;
            end if;
        
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
        
    END SP_GENERAR_ASIENTO_PAGO_UPN;
    
    
    PROCEDURE SP_GENERAR_ASIENTO_PAGOGASTOU(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        /*
        l_dinamica number;
        l_id_persona number;
        l_detalle varchar2(100);
        l_detalle_in varchar2(100);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_correlativo number(10,2); --Add by @vitmar
        l_es_credito varchar2(1);
        l_id_comprobante varchar2(10);
        l_serie_numero varchar2(25);
        l_fecha_doc varchar2(15);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        L_COMPROBANTE_NC varchar2(25) :='';
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_cheque number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        l_primario varchar2(10);
        
        depto_clientes varchar2(20);
        depto_banco varchar2(20);

        l_id_entidad number;
        l_id_depto_pago varchar2(20);
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_operorigen number:=5;
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        --l_id_cliente number;
        l_id_ctabancaria number;
        l_id_mediopago varchar2(4);
        l_pgasto number;
        l_tipoorigen number;
        l_origen number;
        */
        l_cont number;
        L_ID_PGASTO NUMBER;
        L_ID_VOUCHER NUMBER;
        L_ID_DINAMICA NUMBER;
        L_ID_ASIENTO NUMBER;
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_id_cuentaaasi NUMBER;
        
        l_deptod varchar2(10);
        l_cuenta_cted varchar2(50);
        
        l_detalle_in VARCHAR2(200);
        l_detalle_sub_dep_in VARCHAR2(200);
        
        l_importeasiento NUMBER;
        l_importeasiento_child NUMBER;
        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(30);
        
        l_id_ctabancaria NUMBER;
        
        CURSOR cdet is
        SELECT 
        ID_PGASTO, ID_DINAMICA, DETALLE, IMPORTE, IMPORTE_ME, FECHA, ID_TIPOORIGEN
        FROM CAJA_PAGO_GASTO WHERE ID_PAGO=P_ID_PAGO;
       
        CURSOR casiento IS	
        SELECT A.ID_CUENTAAASI,A.ID_FONDO,A.ID_DEPTO,A.ID_CTACTE,A.ID_RESTRICCION,A.IMPORTE,
        A.IMPORTE_ME,A.DESCRIPCION,A.EDITABLE,A.ID_TIPOREGISTRO,A.DC,A.AGRUPA
        FROM CAJA_PAGO_GASTO_ASIENTO A 
        WHERE A.ID_PGASTO=L_ID_PGASTO;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO, a.PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, ID_FONDO, PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=L_ID_ASIENTO
        AND ID_DINAMICA=L_ID_DINAMICA
        ORDER BY NRO_ASIENTO,DC desc;
        
        L_MEDIOPAGO VARCHAR2(30);
        L_NUMERO VARCHAR2(30);
        L_FECHA_PAGO VARCHAR2(30);
        
        L_TIENE_HIJO VARCHAR2(1);
        L_ID_CUENTAAASI_HIJO_DEDITO VARCHAR2(30);
        L_ID_CUENTAAASI_HIJO_CREDITO VARCHAR2(20);
        L_ID_FONDO_HIJO_DEBITO VARCHAR2(5);
        /*
        CURSOR gastos_otros_deptos IS		
        SELECT ID_DEPTO
        , IMPORTE 
        FROM COMPRA_ASIENTO
        WHERE ID_COMPRA=l_origen
        AND ID_DEPTO <> l_depto;
        */
        
        -- l_gastos_otros_id_depto varchar2(10);
        -- l_gastos_otros_importe number(10,2);
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        BEGIN
            
            SELECT ID_VOUCHER, ID_ENTIDAD, ID_DEPTO, coalesce(ID_CTABANCARIA, 0),
            DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC'),
            NUMERO, TO_CHAR(FECHA,'DD/MM/YYYY')
            INTO L_ID_VOUCHER, L_ID_ENTIDAD, L_ID_DEPTO, l_id_ctabancaria,
            L_MEDIOPAGO,
            L_NUMERO, L_FECHA_PAGO 
            FROM CAJA_PAGO A WHERE A.ID_PAGO=P_ID_PAGO;
            
            FOR gasto in cdet
                LOOP
                BEGIN
                    L_ID_DINAMICA := gasto.ID_DINAMICA;
                    L_ID_PGASTO := gasto.id_pgasto;
                 -- Insertar asiento de dinamicas
                    FOR a_casi in casi
                    LOOP
                    BEGIN
                        L_ID_ASIENTO := a_casi.ID_ASIENTO;
                        l_id_cuentaaasi := a_casi.id_cuentaaasi;
                        
                        IF a_casi.AGRUPA = 'S' THEN 
                            if l_id_ctabancaria = 0 then 
                                l_detalle_in := SUBSTR(('Op. '||L_MEDIOPAGO||'-'||L_NUMERO||' | '||L_FECHA_PAGO),1, 50);
                            else 
                                l_detalle_in := SUBSTR(('Op. '||L_MEDIOPAGO||'-'||L_NUMERO||' | '||L_FECHA_PAGO||' | '||PKG_CAJA.FC_CUENTA_BANCARIA(l_id_ctabancaria)),1, 50);
                            end if;
                            -- l_detalle_in := SUBSTR( (gasto.fecha || ' ' || gasto.detalle), 1,50);
                            
                        ELSE
                            -- select coalesce(NOMBRE_CORTO,'') into L_COMPROBANTE_NC from TIPO_COMPROBANTE WHERE ID_COMPROBANTE=l_id_comprobante;
                            l_detalle_in := SUBSTR(gasto.detalle, 1,50);
                        END IF;
                        
                        select case when a_casi.id_indicador='IMPORTE' then 
                                    (gasto.importe)*(a_casi.porcentaje)
                                  else
                                  0
                                  end into l_importeasiento
                        from dual;
                        
                        l_depto:=null;
                        l_cuenta_cte:=null;
                    
                        if a_casi.unico='U' then
                            select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=a_casi.id_asiento;
                        -- elsif(a_casi.unico='X') then
                           -- select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                        ELSIF a_casi.unico='S' THEN -- Si es sesión
                            l_depto := L_ID_DEPTO;
                        END IF;
                    
                        if a_casi.UNICO_CTACTE='U' then
                            select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento=a_casi.id_asiento;
                            if l_cont>0 then
                                select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento= a_casi.id_asiento;
                            end if;
                        /* elsif(a_casi.unicoctate='M') then
                            if l_dc = 'C' then
                                SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                            */
                        elsif(a_casi.UNICO_CTACTE='B') then
                            -- if a_casi.dc = 'C' then
                                SELECT COALESCE(ID_DEPTO_OPER, l_depto), ID_TIPOCTACTE, ID_CUENTAAASI into l_depto, l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            -- end if;
                        /*elsif(a_casi.unicoctate='X') then
                            SELECT FC_RUC(l_id_persona) into l_cuenta_cte from dual;*/
                        end if; 
                        
                        FOR gasto_asiento in casiento
                        LOOP
                        BEGIN
                        
                    
                            INSERT INTO CONTA_ASIENTO (
                                                ID_TIPOORIGEN,
                                                ID_ORIGEN, 
                                                FONDO,
                                                DEPTO,
                                                CUENTA, 
                                                CUENTA_CTE,
                                                RESTRICCION,
                                                IMPORTE,
                                                IMPORTE_ME,
                                                DESCRIPCION,
                                                MEMO,
                                                VOUCHER, 
                                                PARENT_ID,
                                                REF_ID,
                                                AGRUPA
                                            )
                                            values( 
                                            gasto.ID_TIPOORIGEN,
                                            gasto.ID_PGASTO,
                                            gasto_asiento.ID_FONDO,
                                            gasto_asiento.ID_DEPTO,
                                            gasto_asiento.ID_CUENTAAASI,
                                            gasto_asiento.ID_CTACTE,
                                            gasto_asiento.ID_RESTRICCION,
                                            gasto_asiento.IMPORTE,
                                            gasto_asiento.IMPORTE_ME,
                                            gasto_asiento.DESCRIPCION,
                                            gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,
                                            L_ID_VOUCHER,
                                            NULL,
                                            gasto.ID_PGASTO,
                                            'N');
                                            
                                            
                                if l_depto <> gasto_asiento.ID_DEPTO then
                                
                                    FOR child_asiento in casides
                                    LOOP
                                    BEGIN
                                    
                                        select case when child_asiento.id_indicador='IMPORTE' then 
                                            -- (l_gastos_otros_importe)*(l_porcentaje)
                                            (gasto_asiento.IMPORTE)*(child_asiento.porcentaje)
                                          else
                                          0
                                          end into l_importeasiento_child
                                        from dual;    
                                        
                                        l_deptod:=null;
                                        l_cuenta_cted:=null;
                                        
                                        if child_asiento.unico='N' then
                                            l_deptod := gasto_asiento.ID_DEPTO;
                                        elsif child_asiento.unico='U' then
                                            select  count(*) into l_cont from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            if l_cont=1 then
                                                select ID_DEPTO into l_deptod from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            end if;
                                        end if;
                                        
                                        if child_asiento.unico_ctacte='N' then
                                            l_cuenta_cted := gasto_asiento.ID_DEPTO;
                                        elsif child_asiento.unico_ctacte='U' then
                                            select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            if l_cont=1 then
                                                select ID_CTACTE into l_cuenta_cted from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            end if;
                                        end if;
                                        l_detalle_sub_dep_in:='Por inter-departamento a cobrar.';
                                        if child_asiento.dc='C' then
                                            l_importeasiento_child:=l_importeasiento_child*(-1);
                                            l_detalle_sub_dep_in:='Por inter-departamento a pagar.';
                                        end if;
                                         
                                        if l_importeasiento_child<>0 then
                                        
                                            -- SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO P_ID_CASIENTO FROM COMPRA_ASIENTO;
                                            INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE, RESTRICCION,
                                                                    IMPORTE, DESCRIPCION, MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA, PRIMARIO
                                            )VALUES ( gasto.id_tipoorigen, gasto.id_pgasto, child_asiento.id_fondo, l_deptod, child_asiento.id_cuentaaasi, l_cuenta_cted, child_asiento.id_restriccion,
                                            l_importeasiento_child, l_detalle_sub_dep_in, gasto.id_tipoorigen || '-' || gasto.id_pgasto, L_ID_VOUCHER, null, gasto.id_pgasto,
                                                 child_asiento.agrupa, child_asiento.primario
                                            );
                                            
                                            /*
                                            INSERT INTO COMPRA_ASIENTO
                                                (ID_CASIENTO, ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, 
                                                ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, FECHA_ACTUALIZACION, AGRUPA)
                                            VALUES 
                                                (P_ID_CASIENTO, P_ID_COMPRA, l_id_cuentaaasid, l_id_restricciond, l_cuenta_cted, l_fondod,
                                                l_deptod, L_IMPORTE, L_IMPORTE_ME, 
                                                l_detalle_sub_dep_in,
                                                -- SUBSTR(L_CORRELATIVO || ' | ' || L_ID_COMPROBANTE_NC || '. ' || L_SERIE || '-' || L_NUMERO || ' | ' ||  P_DESCRIPCION,0,50),
                                                'N', L_ID_PARENT, L_ID_TIPOREGISTRO, l_dcd, systimestamp, 'N');
                                            */
                                        end if;
                                        END;     
                                    END LOOP;
                                end if;
                                
                                    
                                IF gasto_asiento.ID_FONDO = '69' THEN  -- Fondo de publicaciones
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171045';
                                ELSIF gasto_asiento.ID_FONDO = '68' THEN -- Fondo Comunicación
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171060';
                                ELSIF gasto_asiento.ID_FONDO = '66' THEN -- Fondo Educación
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171020';
                                ELSIF gasto_asiento.ID_FONDO = '25' THEN -- Inversión em Inmovilizado
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171005';
                                ELSIF gasto_asiento.ID_FONDO = '93' THEN -- Fondo Asistencial
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171030';
                                ELSIF gasto_asiento.ID_FONDO = '81' THEN -- Fondo Donaciones Restringidas
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171081';
                                ELSE 
                                    L_TIENE_HIJO := 'N';
                                END IF;
                                
                                IF L_TIENE_HIJO = 'S' AND a_casi.id_fondo<> gasto_asiento.ID_FONDO THEN
                                --IF L_TIENE_HIJO = 'S' THEN
                                    L_ID_CUENTAAASI_HIJO_CREDITO := '1171001'; --Credito Deto 0000
                                    L_ID_FONDO_HIJO_DEBITO := '10';
                                    
                                    -- AGREGAR ASIENTO -- DEBITO
                                    INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                                CUENTA, CUENTA_CTE,
                                                RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                                MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                            values(  gasto.ID_TIPOORIGEN,gasto.ID_PGASTO, L_ID_FONDO_HIJO_DEBITO, '0000',
                                            L_ID_CUENTAAASI_HIJO_DEDITO, '',
                                            '0A', gasto_asiento.IMPORTE, gasto_asiento.IMPORTE_ME,'Asiento por inter-fondos',
                                            gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,L_ID_VOUCHER, NULL, gasto.ID_PGASTO, 'N');
                                    
                                    -- AGREGAR ASIENTO CONTRA PARTIDA -- CREDITO
                                    INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                                CUENTA, CUENTA_CTE,
                                                RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                                MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                            values(  gasto.ID_TIPOORIGEN,gasto.ID_PGASTO, gasto_asiento.ID_FONDO, '0000',
                                            L_ID_CUENTAAASI_HIJO_CREDITO, '',
                                            '0A', (gasto_asiento.IMPORTE*-1), (gasto_asiento.IMPORTE_ME*-1),'Asiento por inter-fondos',
                                            gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,L_ID_VOUCHER, NULL, gasto.ID_PGASTO, 'N');        
                                END IF;
                                
                                
                                
                                    
                            END;     
                        END LOOP;
                        
                    
                   
                        if a_casi.dc='C' then
                            l_importeasiento:=l_importeasiento*(-1);
                        end if;
                        DBMS_OUTPUT.put_line('.... id_tipoorigen '|| gasto.id_tipoorigen);
                        DBMS_OUTPUT.put_line('.... id_pgasto '|| gasto.id_pgasto);
                        DBMS_OUTPUT.put_line('.... l_depto '|| l_depto);
                        DBMS_OUTPUT.put_line('.... l_id_cuentaaasi '|| l_id_cuentaaasi);
                        DBMS_OUTPUT.put_line('.... l_cuenta_cte '|| l_cuenta_cte);
                        DBMS_OUTPUT.put_line('.... dc '|| a_casi.dc);
                        select count(*) into l_cont from CONTA_ASIENTO
                        where ID_TIPOORIGEN=to_number(gasto.id_tipoorigen)
                        and ID_ORIGEN=to_number(gasto.id_pgasto)
                        and coalesce(DEPTO,'-') =coalesce(to_char(l_depto),'-')
                        and CUENTA =to_char(l_id_cuentaaasi)
                        and coalesce(CUENTA_CTE,'-')=coalesce(to_char(l_cuenta_cte),'-')
                        and case when importe>0 then 'D' else 'C' end=a_casi.dc;
                        
                        if l_importeasiento<>0 then
                            if l_cont=0 then
                            --if l_cont=0 and l_agrupa = 'N' then 
                                INSERT INTO CONTA_ASIENTO (
                                    ID_TIPOORIGEN,
                                    ID_ORIGEN, 
                                    FONDO,
                                    DEPTO,
                                    CUENTA, 
                                    CUENTA_CTE,
                                    RESTRICCION,
                                    IMPORTE,
                                    DESCRIPCION,
                                    MEMO,
                                    VOUCHER, 
                                    PARENT_ID,
                                    REF_ID,
                                    AGRUPA,
                                    PRIMARIO
                                )VALUES ( 
                                    gasto.id_tipoorigen,
                                    gasto.id_pgasto,
                                    a_casi.id_fondo,
                                    l_depto,
                                    l_id_cuentaaasi,
                                    l_cuenta_cte,
                                    a_casi.id_restriccion,
                                    l_importeasiento,
                                    l_detalle_in,
                                    gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,
                                    L_ID_VOUCHER,
                                    null,
                                    gasto.ID_PGASTO,
                                    a_casi.agrupa,
                                    a_casi.primario
                                );
                            else
                            
                                update CONTA_ASIENTO set IMPORTE=l_importeasiento
                                where ID_TIPOORIGEN=gasto.id_tipoorigen
                                and ID_ORIGEN=gasto.id_pgasto
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasi
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=a_casi.dc;
                            end if;
                            --l_error:=0; --no se ha generado el asiento
                            --l_msgerror:=l_id_operorigen||'-'||P_ID_PAGO||'-'||l_depto||'-'||l_id_cuentaaasi||'-'||l_cuenta_cte||'-'||l_dc;
                        end if;
                            
                         
                    END;     
                END LOOP;
            END;     
            END LOOP;
            
            /*
            select count(*) into l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;
        
            if l_contar=0 then
              l_error:=3; --no se ha generado el asiento
              l_msgerror:='Asiento Pago: No se ha generado el asiento';    
            else
                select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
                COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
                into l_debito,l_credito
                from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_tipoorigen
                and ID_ORIGEN=l_pgasto;

                if l_credito=0 or l_credito=0 then
                    l_error:=4; --importe de debito o credito igual a cero
                    l_msgerror:='Asiento Pago: Importe de débito o crédito igual a cero';
                else
                    if l_credito<>l_credito then
                        l_error:=5; --descuadre de asiento
                        l_msgerror:='Asiento Pago: Descuadre de asiento';
                    end if;
                end if;
            end if;
            */
            <<salida_rapida>>
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
        
    END SP_GENERAR_ASIENTO_PAGOGASTOU;
    
    PROCEDURE SP_GENERAR_ASIENTO_DEP_CAJACHI(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_dinamica number;
        l_id_persona number;
        l_detalle varchar2(100);
        l_detalle_in varchar2(100);
        l_importe number(10,2);
        l_es_credito varchar2(1);
        
        l_id_asiento number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_id_depto_pago varchar2(20);

        --validacion
        l_contar number;
        l_cont number;
        l_agrupa varchar2(1);
        l_id_ctabancaria number;
        l_pgasto number;
        l_tipoorigen number;
        
        CURSOR cdet IS	
        SELECT 
        ID_PGASTO, ID_TIPOORIGEN,ID_DINAMICA,ID_PERSONA,SUBSTR(DETALLE, 1, 50),IMPORTE
        FROM CAJA_PAGO_GASTO
        WHERE ID_PAGO = P_ID_PAGO;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO, a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        BEGIN
            
            l_detalle:='';--P_DETALLE;
            l_detalle_in:='';--P_DETALLE Ya preparado para guardar;
            
            --OBTIENE DATOS DEL PAGO
            SELECT ID_ENTIDAD,ID_DEPTO,
                    ID_CTABANCARIA,
                    ID_VOUCHER
                into l_id_entidad,l_id_depto_pago,
                    l_id_ctabancaria,
                    l_voucher
            FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;

            OPEN cdet;
             
            FETCH cdet INTO l_pgasto, l_tipoorigen,l_dinamica,l_id_persona,l_detalle, l_importe;
            WHILE cdet%FOUND LOOP
                l_memo :=l_tipoorigen || '-' || l_pgasto;
                ---DiNAMICA ASIENTO
                OPEN casi;
                FETCH casi INTO l_id_asiento, l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                WHILE casi%FOUND LOOP
                   
                    l_detalle_in := SUBSTR(l_id_entidad || '-(Rep-Caja chica), ' || l_detalle, 1,50);
                    
                    select case when l_id_indicador='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    ELSIF l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_pago;
                    END IF;
                
                    if l_unicoctate='U' then
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unicoctate='B') then
                        SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                    elsif(l_unicoctate='X') then
                        SELECT FC_RUC(l_id_persona) into l_cuenta_cte from dual;
                    end if; 
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    
                    select count(*) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_tipoorigen
                    and ID_ORIGEN=l_pgasto
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                
                    if l_importeasiento<>0 then
                        if l_cont=0 then
                        --if l_cont=0 and l_agrupa = 'N' then 
                            INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA
                            )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importeasiento,
                                l_detalle_in,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id,
                                l_agrupa
                            );
                        else
                        
                            update CONTA_ASIENTO set IMPORTE=l_importeasiento
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasi
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                        end if;
                    end if;
                FETCH casi INTO l_id_asiento, l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                END LOOP;
                CLOSE casi; 

            FETCH cdet INTO l_pgasto, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe;
            END LOOP;
            CLOSE cdet; 

            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
    END SP_GENERAR_ASIENTO_DEP_CAJACHI;
    
    
    PROCEDURE SP_GENERAR_ASIENTO_DEV_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_dinamica number;
        l_asiento number;
        l_id_persona number;
        l_detalle varchar2(100);
        l_detalle_in varchar2(100);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_id_articulo number(10,2);
        l_correlativo number(10,2); --Add by @vitmar
        l_es_credito varchar2(1);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_cheque number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_id_depto_pago varchar2(20);
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_operorigen number:=5;
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        --l_id_cliente number;
        l_id_ctabancaria number;
        l_id_mediopago varchar2(4);
        l_pgasto number;
        l_tipoorigen number;
        l_id_venta number;
        
        l_id_vdetalle_venta number;
        l_id_tipoorigen_venta number;
        
        CURSOR cdet IS	
        SELECT 
        A.ID_PVENTA, A.ID_VENTA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_CLIENTE, SUBSTR((B.ID_ENTIDAD || '-' || ' Proveedores'), 1, 50),A.IMPORTE,
        A.ID_ARTICULO,
        0 as CORRELATIVO, 'N' AS ES_CREDITO
        FROM CAJA_PAGO_VENTA A INNER JOIN VENTA B ON A.ID_VENTA=B.ID_VENTA
        WHERE A.ID_PAGO = P_ID_PAGO;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        BEGIN
            
            l_detalle:='';--P_DETALLE;
            l_detalle_in:='';--P_DETALLE Ya preparado para guardar;
            
            --OBTIENE DATOS DEL PAGO
            SELECT ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,DECODE(ID_MEDIOPAGO,'008',7,'007',8,'001',9) into l_id_entidad,l_id_depto_pago, l_id_ctabancaria,l_voucher,l_id_mediopago,l_id_operorigen 
            FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;

            --DETALLE
            OPEN cdet;
            FETCH cdet INTO l_pgasto, l_id_venta, l_tipoorigen,l_dinamica,l_id_persona,l_detalle, l_importe, l_id_articulo, l_correlativo, l_es_credito;
            WHILE cdet%FOUND LOOP
                l_memo :=l_tipoorigen || '-' || l_pgasto;
                
                OPEN casi;
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                WHILE casi%FOUND LOOP
                   
                    l_detalle_in := SUBSTR(l_id_entidad || '-' || l_correlativo || '-' || l_detalle || '-' || SUBSTR(FC_NOMBRE_PERSONA(l_id_persona),1,100), 1,50);
                    
                    select case when l_id_indicador='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unico='X') then
                       select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                    ELSIF l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_pago;
                    END IF;
                
                    if l_unicoctate='U' then
                        select  count(1) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        if l_cont>0 then
                            if l_id_mediopago = '008' then -- Efectivo
                                select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            else
                                SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                        end if;
                    elsif(l_unicoctate='B') then
                        SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                    elsif(l_unicoctate='X') then
                        SELECT FC_RUC(l_id_persona) into l_cuenta_cte from dual;
                    end if; 
                    
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    
                    select count(*) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_tipoorigen
                    and ID_ORIGEN=l_pgasto
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                
                    if l_importeasiento<>0 then
                        if l_cont=0 then
                        --if l_cont=0 and l_agrupa = 'N' then 
                            INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA
                            )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importeasiento,
                                l_detalle_in,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id,
                                l_agrupa
                            );
                        else
                        
                            update CONTA_ASIENTO set IMPORTE=l_importeasiento
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasi
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                        end if;
                    end if;
                    
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                END LOOP;
                CLOSE casi; 
                
                -- CONTRA PARTIDA
                l_importeasiento := l_importeasiento*-1;
                SELECT ID_VDETALLE, ID_TIPOORIGEN INTO l_id_vdetalle_venta, l_id_tipoorigen_venta FROM VENTA_DETALLE WHERE ID_VENTA=l_id_venta AND ID_ARTICULO=l_id_articulo;

                SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
                FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen_venta AND ID_ORIGEN=l_id_vdetalle_venta AND PRIMARIO='S' AND ROWNUM = 1;
                
                INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                    CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                    MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                    )VALUES ( 
                    l_tipoorigen,
                    l_pgasto,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    l_detalle_in,
                    l_memo,
                    l_voucher,
                    null,
                    null,
                    l_agrupa 
                    );

            FETCH cdet INTO l_pgasto, l_id_venta, l_tipoorigen,l_dinamica,l_id_persona,l_detalle, l_importe, l_id_articulo, l_correlativo, l_es_credito;
            END LOOP;
            CLOSE cdet; 

            select count(*) into l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;
        
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
        
    END SP_GENERAR_ASIENTO_DEV_VENTA;
    
    PROCEDURE SP_ACTUALIZAR_PAGO(P_ID_PAGO NUMBER,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_VALE NUMBER,P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_TIPO_CAMBIO NUMBER,P_NUMERO VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        L_ID_CTABANCARIA number := null;
        L_ID_CHEQUERA number :=null;
        L_ID_VALE number :=null;
        L_ID_MONEDA number :=null;
        L_FECHA_CHEQUERA DATE;
        BEGIN
        IF P_ID_CTABANCARIA IS NULL OR P_ID_CTABANCARIA = 0 THEN
            L_ID_CTABANCARIA:=null;
        ELSE 
            L_ID_CTABANCARIA:=P_ID_CTABANCARIA;
        END IF;
        IF P_ID_CHEQUERA IS NULL OR P_ID_CHEQUERA = 0 THEN
            L_ID_CHEQUERA:=null;
        ELSE 
            L_ID_CHEQUERA:=P_ID_CHEQUERA;
             select TO_CHAR(fecha, 'DD/MM/YYYY') into L_FECHA_CHEQUERA from caja_chequera WHERE ID_CHEQUERA=P_ID_CHEQUERA;
        END IF;
        
        IF P_ID_VALE IS NULL OR P_ID_VALE = 0 THEN
            L_ID_VALE:=null;
        ELSE 
            L_ID_VALE:=P_ID_VALE;
        END IF;
        
        IF P_ID_MONEDA IS NULL OR P_ID_MONEDA = 0 THEN
            L_ID_MONEDA:=null;
        ELSE 
            L_ID_MONEDA:=P_ID_MONEDA;
        END IF;
        
        UPDATE CAJA_PAGO SET    ID_CTABANCARIA = L_ID_CTABANCARIA,
                                ID_CHEQUERA = L_ID_CHEQUERA,
                                ID_TIPOTRANSACCION = P_ID_TIPOTRANSACCION,
                                ID_MONEDA = L_ID_MONEDA,
                                TIPOCAMBIO = P_TIPO_CAMBIO,
                                NUMERO = P_NUMERO,
                                FECHA = L_FECHA_CHEQUERA,
                                ID_VALE = L_ID_VALE
                                --,ESTADO = '1'
        WHERE ID_PAGO = P_ID_PAGO;
        P_ERROR := 0;
        P_MSGERROR := 'PAGO FINALIZADO CON EXITO';
    END SP_ACTUALIZAR_PAGO;
    
    PROCEDURE SP_RENDIR_VALE(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        
        -----------------------------------------
        -- DATOS DEL DETALLE
        L_PCOMPRA NUMBER;
        L_ORIGEN NUMBER;
        L_TIPOORIGEN NUMBER;
        L_ID_DINAMICA NUMBER;
        L_PROVEEDOR NUMBER;
        L_DETALLE VARCHAR2(100);
        L_DETALLE_IN VARCHAR2(50);
        --L_IMPORTE NUMBER(10,2);
        --L_IMPORTE_ME NUMBER(10,2);
        L_CORRELATIVO NUMBER(10,2);
        L_ES_CREDITO VARCHAR2(1);
        
        -- DATOS DE LA DINAMICA
        L_ID_ASIENTO NUMBER;
        L_ID_PARENT NUMBER;
        L_ID_TIPOPLAN NUMBER;
        L_ID_RESTRICCION VARCHAR2(50);
        L_ID_CUENTAAASI VARCHAR2(10);
        L_DC VARCHAR2(1);
        L_DESTINO VARCHAR2(1);
        L_ID_INDICADOR VARCHAR2(10);
        L_UNICO VARCHAR2(1);
        L_UNICOCTATE VARCHAR2(1);
        L_PORCENTAJE NUMBER(10,2);
        L_DESCRIPCION VARCHAR2(255);
        L_AGRUPA VARCHAR2(1);
        L_FONDO VARCHAR2(10);
        
        -- DATOS DEL VALE
        L_ID_VALE NUMBER;
        L_ID_ENTIDAD_PAGO NUMBER;
        L_ID_DEPTO_PAGO VARCHAR2(20);
        L_ID_VOUCHER_PAGO NUMBER;
        -- L_ID_ASIENTO NUMBER;
        -- L_ID_CTABANCARIA NUMBER;
        -- L_IMPORTE_VALE NUMBER;
        -- L_IMPORTE_ME_VALE NUMBER;

        -- Datos asiento vale
        L_ID_CUENTAAASI_DEBITO_VALE VARCHAR2(10);
        L_ID_CTACTE_DEBITO_VALE VARCHAR2(50);
        L_FONDO_DEBITO_VALE VARCHAR2(10);
        L_DEPTO_DEBITO_VALE VARCHAR2(10);
        L_RESTRICCION_DEBITO_VALE VARCHAR2(50);
        L_AGRUPA_DEBITO_VALE VARCHAR2(1);
        L_DESCRIPCION_DEBITO_VALE VARCHAR2(50);

        -- Other dates
        L_MEMO varchar2(255);
        L_IMPORTEASIENTO NUMBER(10,2);
        L_IMPORTEASIENTO_ME NUMBER(10,2);
        L_DEPTO VARCHAR2(10);
        L_CUENTA_CTE VARCHAR2(50);
        L_CONT NUMBER;
        L_CONT_CUENTA_CTE NUMBER;

        CURSOR CU_PAGO_COMPRAS IS
        SELECT 
            A.ID_PCOMPRA, A.ID_PAGO, A.ID_TIPOORIGEN, A.ID_DINAMICA, A.ID_PROVEEDOR, SUBSTR(A.DETALLE,1,50), A.IMPORTE, A.IMPORTE_ME, C.CORRELATIVO, C.ES_CREDITO
        FROM CAJA_PAGO_COMPRA A
        INNER JOIN COMPRA C ON A.ID_COMPRA=C.ID_COMPRA
        WHERE A.ID_PAGO=P_ID_PAGO;
        
        CURSOR CU_DINAMICA_ASIENTOS IS
        SELECT 
            A.ID_ASIENTO, A.ID_PARENT, A.ID_TIPOPLAN, A.ID_RESTRICCION, A.ID_CUENTAAASI, A.DC, A.DESTINO, A.ID_INDICADOR, A.UNICO, A.UNICO_CTACTE, A.PORCENTAJE,
            A.NOMBRE, A.AGRUPA, A.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO A
        WHERE A.ID_DINAMICA=L_ID_DINAMICA
        AND COALESCE(A.ID_PARENT,0)=0
        ORDER BY A.NRO_ASIENTO, A.DC DESC;
        
        
        CURSOR CU_PAGO_GASTO IS
        SELECT 
        ID_PGASTO, ID_DINAMICA, DETALLE, IMPORTE, IMPORTE_ME, FECHA, ID_TIPOORIGEN
        FROM CAJA_PAGO_GASTO WHERE ID_PAGO=P_ID_PAGO;
        -- Datos del gasto.
        L_ID_PGASTO NUMBER;
        L_ID_DINAMICA_GASTO NUMBER;
        L_DETALLE_GASTO VARCHAR2(50);
        L_IMPORTE_GASTO NUMBER;
        L_IMPORTE_ME_GASTO NUMBER;
        L_FECHA_GASTO DATE;
        L_ID_TIPOORIGEN_GASTO NUMBER;
        -----------------------------------------
        
        -- l_id_pcompra number:=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
    BEGIN
    
        SELECT 
                NVL(SUM(IMPORTE),0) IMPORTE,
                NVL(SUM(IMPORTE_ME),0) IMPORTE_ME INTO L_IMPORTE,L_IMPORTE_ME
        FROM (
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_COMPRA
            WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_GASTO
            WHERE ID_PAGO = P_ID_PAGO
        );
            
        IF l_error=0 THEN
            
            IF (L_IMPORTE + L_IMPORTE_ME) > 0 THEN
                
                UPDATE CAJA_PAGO SET IMPORTE = L_IMPORTE, 
                                    IMPORTE_ME = L_IMPORTE_ME, 
                                    ESTADO = '1'
                WHERE ID_PAGO = P_ID_PAGO;
                
                -- OBTIENE DATOS DEL PAGO
                SELECT ID_VALE, ID_VOUCHER, ID_ENTIDAD, ID_DEPTO INTO L_ID_VALE, L_ID_VOUCHER_PAGO, L_ID_ENTIDAD_PAGO, L_ID_DEPTO_PAGO  FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                
                SELECT CUENTA, CUENTA_CTE, FONDO, DEPTO, RESTRICCION, AGRUPA, SUBSTR(DESCRIPCION,1, 49)AS DESCRIPCION
                INTO L_ID_CUENTAAASI_DEBITO_VALE, L_ID_CTACTE_DEBITO_VALE, L_FONDO_DEBITO_VALE, L_DEPTO_DEBITO_VALE, L_RESTRICCION_DEBITO_VALE, L_AGRUPA_DEBITO_VALE ,
                    L_DESCRIPCION_DEBITO_VALE
                    FROM CONTA_ASIENTO WHERE ID_ORIGEN = L_ID_VALE AND ID_TIPOORIGEN = 15 AND IMPORTE > 0 AND ROWNUM=1;

                -- CURSOR DE LAS COMPRAS
                L_DETALLE := '';
                L_DETALLE_IN := '';
                OPEN CU_PAGO_COMPRAS;
                FETCH CU_PAGO_COMPRAS INTO L_PCOMPRA, L_ORIGEN, L_TIPOORIGEN, L_ID_DINAMICA, L_PROVEEDOR, L_DETALLE, L_IMPORTE, L_IMPORTE_ME, L_CORRELATIVO, L_ES_CREDITO;
                WHILE CU_PAGO_COMPRAS%FOUND LOOP
                    L_MEMO := L_TIPOORIGEN || '-' || L_ORIGEN;
                    
                    OPEN CU_DINAMICA_ASIENTOS;
                    FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    WHILE CU_DINAMICA_ASIENTOS%FOUND LOOP
                        
                        IF L_AGRUPA='S' THEN
                            L_DETALLE_IN := SUBSTR(L_ID_ENTIDAD_PAGO || '-' || L_DETALLE, 1,50);
                        ELSE 
                            L_DETALLE_IN := SUBSTR( L_ID_ENTIDAD_PAGO || '-' || L_CORRELATIVO || '-' || L_DETALLE || '-' || SUBSTR(FC_NOMBRE_PERSONA(L_PROVEEDOR),1,100), 1,50);
                        END IF;
                        
                        IF L_ID_INDICADOR='IMPORTE' THEN
                            L_IMPORTEASIENTO := (L_IMPORTE)*(L_PORCENTAJE);
                            L_IMPORTEASIENTO_ME := (L_IMPORTE_ME)*(L_PORCENTAJE);
                        ELSE 
                            L_IMPORTEASIENTO := 0;
                            L_IMPORTEASIENTO_ME := 0;
                        END IF;
                        
                        L_DEPTO:=null;
                        L_CUENTA_CTE:=null;
                        IF L_UNICO='U' THEN
                            SELECT ID_DEPTO INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=L_ID_ENTIDAD_PAGO AND ID_ASIENTO=L_ID_ASIENTO;
                        ELSIF L_UNICO='X' THEN
                            SELECT FC_DEPTO_CLIENTE(L_PROVEEDOR) INTO L_DEPTO FROM dual;
                        ELSIF L_UNICO='S' THEN -- Si es sesión
                            L_DEPTO := L_ID_DEPTO_PAGO;
                        END IF;
                        
                        IF L_ES_CREDITO = 'S' and L_DC <> 'C' THEN
                            SELECT FC_RUC(L_PROVEEDOR) INTO L_CUENTA_CTE FROM dual;
                        ELSE 
                            IF L_UNICOCTATE='U' THEN
                                SELECT  count(*) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=L_ID_ENTIDAD_PAGO AND ID_ASIENTO=L_ID_ASIENTO;
                                IF L_CONT>0 THEN
                                    SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=L_ID_ENTIDAD_PAGO AND ID_ASIENTO=L_ID_ASIENTO;
                                END IF;
                            ELSIF(L_UNICOCTATE='B') THEN
                                L_ID_CUENTAAASI := L_ID_CUENTAAASI_DEBITO_VALE;
                                L_CUENTA_CTE := L_ID_CTACTE_DEBITO_VALE;
                                L_DETALLE_IN := L_DESCRIPCION_DEBITO_VALE;
                                L_FONDO := L_FONDO_DEBITO_VALE;
                                L_DEPTO := L_DEPTO_DEBITO_VALE;
                                L_ID_RESTRICCION := L_RESTRICCION_DEBITO_VALE;
                            ELSIF(L_UNICOCTATE='X') THEN
                                SELECT FC_RUC(L_PROVEEDOR) INTO L_CUENTA_CTE FROM dual;
                            END IF; 
                        END IF;
                                
                        IF L_DC='C' THEN
                            L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                            L_IMPORTEASIENTO_ME:=L_IMPORTEASIENTO_ME*(-1);
                        END IF;
                           
                            
                        SELECT COUNT(*) INTO L_CONT FROM CONTA_ASIENTO
                        WHERE ID_TIPOORIGEN=L_TIPOORIGEN
                        AND ID_ORIGEN=L_ORIGEN
                        AND COALESCE(DEPTO,'-') =COALESCE(L_DEPTO,'-')
                        AND CUENTA =L_ID_CUENTAAASI
                        AND COALESCE(CUENTA_CTE,'-')=COALESCE(L_CUENTA_CTE,'-')
                        AND CASE WHEN IMPORTE>0 THEN 'D' ELSE 'C' END=L_DC;
                        
                        IF NVL(L_IMPORTEASIENTO,0)+NVL(L_IMPORTEASIENTO_ME,0) <>0 THEN
                            IF L_CONT=0 THEN
                                    INSERT INTO CONTA_ASIENTO (
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        L_TIPOORIGEN,
                                        L_PCOMPRA,
                                        L_FONDO,
                                        L_DEPTO,
                                        L_ID_CUENTAAASI,
                                        L_CUENTA_CTE,
                                        L_ID_RESTRICCION,
                                        L_IMPORTEASIENTO,
                                        L_IMPORTEASIENTO_ME,
                                        L_DETALLE_IN,
                                        L_MEMO,
                                        L_ID_VOUCHER_PAGO,
                                        null,
                                        NULL,
                                        l_agrupa
                                    );
                                ELSE
                                    update CONTA_ASIENTO set 
                                    IMPORTE=L_IMPORTEASIENTO,
                                    IMPORTE_ME=L_IMPORTEASIENTO_ME
                                    where ID_TIPOORIGEN=L_TIPOORIGEN
                                    and ID_ORIGEN=L_ORIGEN
                                    and coalesce(DEPTO,'-') =coalesce(L_DEPTO,'-')
                                    and CUENTA =L_ID_CUENTAAASI
                                    and coalesce(CUENTA_CTE,'-')=coalesce(L_CUENTA_CTE,'-')
                                    and case when IMPORTE>0 then 'D' else 'C' end=L_DC;
                                END IF;
                        END IF;
                        
                        FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO,L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    END LOOP;
                    CLOSE CU_DINAMICA_ASIENTOS;
                    
                    FETCH CU_PAGO_COMPRAS INTO L_PCOMPRA, L_ORIGEN, L_TIPOORIGEN, L_ID_DINAMICA, L_PROVEEDOR, L_DETALLE, L_IMPORTE, L_IMPORTE_ME, L_CORRELATIVO, L_ES_CREDITO;
                END LOOP;
                CLOSE CU_PAGO_COMPRAS;
                
                -- CURSOR DE LOS GASTOS
                OPEN CU_PAGO_GASTO;
                FETCH CU_PAGO_GASTO INTO L_ID_PGASTO, L_ID_DINAMICA_GASTO, L_DETALLE_GASTO, L_IMPORTE_GASTO, L_IMPORTE_ME_GASTO, L_FECHA_GASTO, L_ID_TIPOORIGEN_GASTO;
                WHILE CU_PAGO_GASTO%FOUND LOOP
                    
                    INSERT INTO CONTA_ASIENTO (
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )
                                    SELECT 
                                    L_ID_TIPOORIGEN_GASTO,
                                    L_ID_PGASTO,
                                    A.ID_FONDO,
                                    A.ID_DEPTO,
                                    A.ID_CUENTAAASI,
                                    A.ID_CTACTE,
                                    A.ID_RESTRICCION,
                                    A.IMPORTE,
                                    A.IMPORTE_ME,
                                    SUBSTR(L_ID_ENTIDAD_PAGO || '-' || L_ID_DEPTO_PAGO || '-[REN]-' || TO_CHAR(L_FECHA_GASTO, 'DD/MM/YYYY') || '-' || L_DETALLE_GASTO, 1,50),
                                    L_ID_TIPOORIGEN_GASTO || '-' || L_ID_PGASTO,
                                    L_ID_VOUCHER_PAGO,
                                    NULL,
                                    L_ID_PGASTO,
                                    'N'
                                    FROM CAJA_PAGO_GASTO_ASIENTO A WHERE A.ID_PGASTO=L_ID_PGASTO;
                                    
                    -- Crédito del vale
                    INSERT INTO CONTA_ASIENTO (
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        L_ID_TIPOORIGEN_GASTO,
                                        L_ID_PGASTO,
                                        L_FONDO_DEBITO_VALE,
                                        L_DEPTO_DEBITO_VALE,
                                        L_ID_CUENTAAASI_DEBITO_VALE,
                                        L_ID_CTACTE_DEBITO_VALE,
                                        L_RESTRICCION_DEBITO_VALE,
                                        (L_IMPORTE_GASTO * -1),
                                        (L_IMPORTE_ME_GASTO * -1),
                                        --L_DESCRIPCION_DEBITO_VALE,
                                        SUBSTR(L_ID_ENTIDAD_PAGO || '-' || L_ID_DEPTO_PAGO || '-[REN]-' || TO_CHAR(L_FECHA_GASTO, 'DD/MM/YYYY') || '-' || L_DETALLE_GASTO, 1,50),
                                        L_ID_TIPOORIGEN_GASTO || '-' || L_ID_PGASTO,
                                        L_ID_VOUCHER_PAGO,
                                        NULL,
                                        L_ID_PGASTO,
                                        'S'
                                    );                
                            
                FETCH CU_PAGO_GASTO INTO L_ID_PGASTO, L_ID_DINAMICA_GASTO, L_DETALLE_GASTO, L_IMPORTE_GASTO, L_IMPORTE_ME_GASTO, L_FECHA_GASTO, L_ID_TIPOORIGEN_GASTO;
                END LOOP;
                CLOSE CU_PAGO_GASTO;
            ELSE 
                P_ERROR := 0;
                P_MSGERROR := 'Error, la suma del importe de los items es cero(0).';
            END IF;
            
        END IF;
        
        
        P_ERROR := 0;
        P_MSGERROR := 'Generación de asientos del vale rendido con exito.';
    END SP_RENDIR_VALE;
    
    PROCEDURE SP_RENDIR_VALE_DEPOSITO_BANK(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_VALE NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,
        P_ID_CLIENTE NUMBER, P_ID_TIPOTRANSACCION NUMBER,P_ID_TIPOTARJETA NUMBER, P_ID_CTABANCARIA NUMBER, P_OPERACION VARCHAR2,
        P_ID_MONEDA NUMBER, P_ID_DINAMICA NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER, P_FECHA DATE, P_IMPORTE NUMBER,
        P_IMPORTE_ME NUMBER, P_TIPO_CAMBIO NUMBER, P_GLOSA VARCHAR2,
        P_ID_DEPBANCO IN OUT NUMBER, P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        -- Datos asiento vale
        L_ID_CUENTAAASI_DEBITO_VALE VARCHAR2(10);
        L_ID_CTACTE_DEBITO_VALE VARCHAR2(50);
        L_FONDO_DEBITO_VALE VARCHAR2(10);
        L_DEPTO_DEBITO_VALE VARCHAR2(10);
        L_RESTRICCION_DEBITO_VALE VARCHAR2(50);
        L_AGRUPA_DEBITO_VALE VARCHAR2(1);
        L_DESCRIPCION_DEBITO_VALE VARCHAR2(50);
        
        -- DATOS DE LA DINAMICA
        L_ID_ASIENTO NUMBER;
        L_ID_PARENT NUMBER;
        L_ID_TIPOPLAN NUMBER;
        L_ID_RESTRICCION VARCHAR2(50);
        L_ID_CUENTAAASI VARCHAR2(10);
        L_DC VARCHAR2(1);
        L_DESTINO VARCHAR2(1);
        L_ID_INDICADOR VARCHAR2(10);
        L_UNICO VARCHAR2(1);
        L_UNICOCTATE VARCHAR2(1);
        L_PORCENTAJE NUMBER(10,2);
        L_DESCRIPCION VARCHAR2(255);
        L_AGRUPA VARCHAR2(1);
        L_FONDO VARCHAR2(10);
        L_PRIMARIO VARCHAR2(1);

         -- Other dates
        L_MEMO varchar2(255);
        L_IMPORTEASIENTO NUMBER(10,2);
        L_IMPORTEASIENTO_ME NUMBER(10,2);
        L_DEPTO VARCHAR2(10);
        L_CUENTA_CTE VARCHAR2(50);
        L_CONT NUMBER;
        L_CONT_CUENTA_CTE NUMBER;
        L_DETALLE_IN VARCHAR2(50);
        
        -- DATOS DEL DEPOSITO
        L_ID_TIPOORIGEN NUMBER;
        
        CURSOR CU_DINAMICA_ASIENTOS IS
        SELECT 
            A.ID_ASIENTO, A.ID_PARENT, A.ID_TIPOPLAN, A.ID_RESTRICCION, A.ID_CUENTAAASI, A.DC, A.DESTINO, A.ID_INDICADOR, A.UNICO, A.UNICO_CTACTE, A.PORCENTAJE,
            A.NOMBRE, A.AGRUPA, A.ID_FONDO, A.PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO A
        WHERE A.ID_DINAMICA=P_ID_DINAMICA
        AND COALESCE(A.ID_PARENT,0)=0
        ORDER BY A.NRO_ASIENTO, A.DC DESC;
        
        l_id_deposito number:=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        BEGIN
            IF P_ID_MONEDA = 7 THEN 
                L_IMPORTE := P_IMPORTE;
                L_IMPORTE_ME := P_IMPORTE_ME;
            ELSE 
                L_IMPORTE := P_IMPORTE * P_TIPO_CAMBIO;
                L_IMPORTE_ME := P_IMPORTE_ME * P_TIPO_CAMBIO;
            END IF;
            -- l_msgerror:='HOLA MUNDO CRUEL';
            -- l_error:=1;
            IF l_error = 0 THEN
                IF P_ID_DEPBANCO = 0 THEN 
                
                INSERT INTO CAJA_DEPOSITO(
                  ID_ENTIDAD, 
                  ID_DEPTO, 
                  ID_ANHO, 
                  ID_MES, 
                  ID_DINAMICA,
                  ID_MONEDA, 
                  ID_TIPOTARJETA, 
                  ID_PERSONA, 
                  ID_CLIENTE, 
                  ID_TIPOTRANSACCION, 
                  ID_CTABANCARIA, 
                  ID_MEDIOPAGO, 
                  ID_VOUCHER, 
                  NRO_OPERACION, 
                  FECHA, -- FECHA
                  FECHA_OPERACION, -- FECHA
                  IMPORTE, 
                  IMPORTE_ME,
                  TIPOCAMBIO,
                  GLOSA, 
                  ESTADO,
                  ID_VALE
                )VALUES(
                  P_ID_ENTIDAD, 
                  P_ID_DEPTO, 
                  P_ID_ANHO, 
                  P_ID_MES, 
                  P_ID_DINAMICA,
                  P_ID_MONEDA,
                  P_ID_TIPOTARJETA,
                  P_ID_PERSONA, 
                  P_ID_CLIENTE,
                  P_ID_TIPOTRANSACCION,
                  P_ID_CTABANCARIA,
                  P_ID_MEDIOPAGO, 
                  P_ID_VOUCHER,
                  SUBSTR(P_OPERACION, 0,12),
                  P_FECHA,
                  P_FECHA,
                  L_IMPORTE, 
                  L_IMPORTE_ME,
                  P_TIPO_CAMBIO,
                  SUBSTR(P_GLOSA, 0,69), 
                  '1',
                  P_ID_VALE
                ) RETURNING ID_DEPOSITO INTO l_id_deposito;
                -- select coalesce(max(ID_DEPBANCO),0) into l_id_depbanco from CAJA_DEPOSITO_BANCO;
            ELSE 
                UPDATE CAJA_DEPOSITO
                SET  ID_MONEDA = P_ID_MONEDA
                  , ID_DINAMICA = P_ID_DINAMICA
                  , ID_TIPOTRANSACCION = P_ID_TIPOTRANSACCION
                  , ID_CTABANCARIA = P_ID_CTABANCARIA
                  , IMPORTE = L_IMPORTE 
                  , IMPORTE_ME = L_IMPORTE_ME
                  , TIPOCAMBIO = P_TIPO_CAMBIO
                  , GLOSA = SUBSTR(P_GLOSA, 69)
                  ,FECHA_OPERACION=P_FECHA
                WHERE ID_DEPOSITO = P_ID_DEPBANCO;
                l_id_deposito := P_ID_DEPBANCO;
            END IF;
            
            --Generar asientos
            IF (NVL(L_IMPORTE,0) + NVL(L_IMPORTE_ME,0)) > 0 THEN
                
                -- OBTIENE DATOS DEL DEPOSITO.
                SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN  FROM CAJA_DEPOSITO WHERE ID_DEPOSITO = l_id_deposito;
                
                -- Traer los asientos del vale.
                SELECT CUENTA, CUENTA_CTE, FONDO, DEPTO, RESTRICCION, AGRUPA, SUBSTR(DESCRIPCION,1, 49)AS DESCRIPCION
                INTO L_ID_CUENTAAASI_DEBITO_VALE, L_ID_CTACTE_DEBITO_VALE, L_FONDO_DEBITO_VALE, L_DEPTO_DEBITO_VALE, L_RESTRICCION_DEBITO_VALE, L_AGRUPA_DEBITO_VALE ,
                    L_DESCRIPCION_DEBITO_VALE
                    FROM CONTA_ASIENTO WHERE ID_ORIGEN = P_ID_VALE AND ID_TIPOORIGEN = 15 AND IMPORTE > 0 AND ROWNUM=1;

                OPEN CU_DINAMICA_ASIENTOS;
                    FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO, L_PRIMARIO;
                    WHILE CU_DINAMICA_ASIENTOS%FOUND LOOP
                        
                        L_DETALLE_IN := SUBSTR(P_ID_ENTIDAD || '-' || P_ID_DEPTO || '-[DEP]-' || TO_CHAR(P_FECHA,'DD/MM/YYYY') || '-' || PKG_CAJA.FC_CUENTA_BANCARIA(P_ID_CTABANCARIA) || '-' || P_GLOSA, 1,50);
                        L_MEMO := L_ID_TIPOORIGEN || '-' || l_id_deposito;
                        --TO_CHAR(FECHA,'DD/MM/YYYY')||'-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||'-'||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)
               
                        IF L_ID_INDICADOR='IMPORTE' THEN
                            L_IMPORTEASIENTO := (L_IMPORTE)*(L_PORCENTAJE);
                            L_IMPORTEASIENTO_ME := (L_IMPORTE_ME)*(L_PORCENTAJE);
                        ELSE 
                            L_IMPORTEASIENTO := 0;
                            L_IMPORTEASIENTO_ME := 0;
                        END IF;
                        
                        L_DEPTO:=null;
                        L_CUENTA_CTE:=null;
                        IF L_UNICO='U' THEN
                            SELECT ID_DEPTO INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                        ELSIF L_UNICO='S' THEN -- Si es sesión
                            L_DEPTO := P_ID_DEPTO;
                        end if;

                        IF L_UNICOCTATE='U' THEN
                            SELECT  count(*) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                            IF L_CONT>0 THEN
                                SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                            END IF;
                        ELSIF(L_UNICOCTATE='X') THEN
                            L_ID_CUENTAAASI := L_ID_CUENTAAASI_DEBITO_VALE;
                            L_CUENTA_CTE := L_ID_CTACTE_DEBITO_VALE;
                            --L_DETALLE_IN := L_DESCRIPCION_DEBITO_VALE;
                            L_FONDO := L_FONDO_DEBITO_VALE;
                            L_DEPTO := L_DEPTO_DEBITO_VALE;
                            L_ID_RESTRICCION := L_RESTRICCION_DEBITO_VALE;
                        ELSIF(L_UNICOCTATE='B') THEN
                            SELECT ID_TIPOCTACTE, ID_CUENTAAASI into L_CUENTA_CTE, L_ID_CUENTAAASI FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                        END IF;
                        
                                
                        IF L_DC='C' THEN
                            L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                            L_IMPORTEASIENTO_ME:=L_IMPORTEASIENTO_ME*(-1);
                        END IF;
                           
                            
                        SELECT COUNT(*) INTO L_CONT FROM CONTA_ASIENTO
                        WHERE ID_TIPOORIGEN=L_ID_TIPOORIGEN
                        AND ID_ORIGEN=l_id_deposito
                        AND COALESCE(DEPTO,'-') =COALESCE(L_DEPTO,'-')
                        AND CUENTA =L_ID_CUENTAAASI
                        AND COALESCE(CUENTA_CTE,'-')=COALESCE(L_CUENTA_CTE,'-')
                        AND CASE WHEN IMPORTE>0 THEN 'D' ELSE 'C' END=L_DC;
                        
                        IF NVL(L_IMPORTEASIENTO,0)+NVL(L_IMPORTEASIENTO_ME,0) <>0 THEN
                            IF L_CONT=0 THEN
                                    INSERT INTO CONTA_ASIENTO (
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        L_ID_TIPOORIGEN,
                                        l_id_deposito,
                                        L_FONDO,
                                        L_DEPTO,
                                        L_ID_CUENTAAASI,
                                        L_CUENTA_CTE,
                                        L_ID_RESTRICCION,
                                        L_IMPORTEASIENTO,
                                        L_IMPORTEASIENTO_ME,
                                        L_DETALLE_IN,
                                        L_MEMO,
                                        P_ID_VOUCHER,
                                        null,
                                        l_id_deposito,
                                        l_agrupa
                                    );
                                ELSE
                                    update CONTA_ASIENTO set 
                                    IMPORTE=L_IMPORTEASIENTO,
                                    IMPORTE_ME=L_IMPORTEASIENTO_ME
                                    where ID_TIPOORIGEN=L_ID_TIPOORIGEN
                                    and ID_ORIGEN=l_id_deposito
                                    and coalesce(DEPTO,'-') =coalesce(L_DEPTO,'-')
                                    and CUENTA =L_ID_CUENTAAASI
                                    and coalesce(CUENTA_CTE,'-')=coalesce(L_CUENTA_CTE,'-')
                                    and case when IMPORTE>0 then 'D' else 'C' end=L_DC;
                                END IF;
                        END IF;
                        
                        FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO,L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO, L_PRIMARIO;
                    END LOOP;
                    CLOSE CU_DINAMICA_ASIENTOS;
            END IF;
            END IF;
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
        P_ID_DEPBANCO := l_id_deposito;
    END SP_RENDIR_VALE_DEPOSITO_BANK;
      
    PROCEDURE SP_RENDIR_VALE_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_VALE NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER, P_ID_TIPOTRANSACCION NUMBER,
        P_ID_MONEDA NUMBER, P_ID_DINAMICA NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER, P_SERIE VARCHAR2, P_NUMERO VARCHAR2, P_FECHA DATE, P_IMPORTE NUMBER,
        P_IMPORTE_ME NUMBER, P_TIPO_CAMBIO NUMBER, P_GLOSA VARCHAR2,
        P_ID_DEPOSITO IN OUT NUMBER, P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
  
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        -- Datos asiento vale
        L_ID_CUENTAAASI_DEBITO_VALE VARCHAR2(10);
        L_ID_CTACTE_DEBITO_VALE VARCHAR2(50);
        L_FONDO_DEBITO_VALE VARCHAR2(10);
        L_DEPTO_DEBITO_VALE VARCHAR2(10);
        L_RESTRICCION_DEBITO_VALE VARCHAR2(50);
        L_AGRUPA_DEBITO_VALE VARCHAR2(1);
        L_DESCRIPCION_DEBITO_VALE VARCHAR2(50);
        
        -- DATOS DE LA DINAMICA
        L_ID_ASIENTO NUMBER;
        L_ID_PARENT NUMBER;
        L_ID_TIPOPLAN NUMBER;
        L_ID_RESTRICCION VARCHAR2(50);
        L_ID_CUENTAAASI VARCHAR2(10);
        L_DC VARCHAR2(1);
        L_DESTINO VARCHAR2(1);
        L_ID_INDICADOR VARCHAR2(10);
        L_UNICO VARCHAR2(1);
        L_UNICOCTATE VARCHAR2(1);
        L_PORCENTAJE NUMBER(10,2);
        L_DESCRIPCION VARCHAR2(255);
        L_AGRUPA VARCHAR2(1);
        L_FONDO VARCHAR2(10);
        
         -- Other dates
        L_MEMO varchar2(255);
        L_IMPORTEASIENTO NUMBER(10,2);
        L_IMPORTEASIENTO_ME NUMBER(10,2);
        L_DEPTO VARCHAR2(10);
        L_CUENTA_CTE VARCHAR2(50);
        L_CONT NUMBER;
        L_CONT_CUENTA_CTE NUMBER;
        L_DETALLE_IN VARCHAR2(50);
        
        -- DATOS DEL DEPOSITO
        L_ID_TIPOORIGEN NUMBER;
        
        CURSOR CU_DINAMICA_ASIENTOS IS
        SELECT 
            A.ID_ASIENTO, A.ID_PARENT, A.ID_TIPOPLAN, A.ID_RESTRICCION, A.ID_CUENTAAASI, A.DC, A.DESTINO, A.ID_INDICADOR, A.UNICO, A.UNICO_CTACTE, A.PORCENTAJE,
            A.NOMBRE, A.AGRUPA, A.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO A
        WHERE A.ID_DINAMICA=P_ID_DINAMICA
        AND COALESCE(A.ID_PARENT,0)=0
        ORDER BY A.NRO_ASIENTO, A.DC DESC;
  
        l_id_deposito number:=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        BEGIN
        
        IF P_ID_MONEDA = 7 THEN 
            L_IMPORTE := P_IMPORTE;
            L_IMPORTE_ME := P_IMPORTE_ME;
        ELSE 
            L_IMPORTE := P_IMPORTE * P_TIPO_CAMBIO;
            L_IMPORTE_ME := P_IMPORTE_ME * P_TIPO_CAMBIO;
        END IF;
        
        --l_msgerror:=P_ID_DEPOSITO;
        --l_error:=1;
        IF l_error = 0 THEN
            IF P_ID_DEPOSITO = 0 THEN 
                -- select coalesce(max(ID_DEPOSITO),0)+1 into l_id_deposito from CAJA_DEPOSITO;
                INSERT INTO CAJA_DEPOSITO(
                  --ID_DEPOSITO, 
                  ID_ENTIDAD, 
                  ID_DEPTO, 
                  ID_ANHO, 
                  ID_MES, 
                  ID_VOUCHER, 
                  ID_MEDIOPAGO, 
                  ID_PERSONA, 
                  ID_CLIENTE, 
                  ID_TIPOTRANSACCION,
                  ID_MONEDA,
                  ID_DINAMICA,
                  SERIE,
                  NUMERO,
                  FECHA,
                  IMPORTE, 
                  IMPORTE_ME,
                  TIPOCAMBIO,
                  GLOSA, 
                  --NOMBRE_DEP, 
                  --DOCUMENTO_DEP,
                  ESTADO,
                  --ID_TIPOORIGEN,
                  ID_VALE
                )VALUES(
                  --l_id_deposito, 
                  P_ID_ENTIDAD, 
                  P_ID_DEPTO, 
                  P_ID_ANHO, 
                  P_ID_MES, 
                  P_ID_VOUCHER, 
                  P_ID_MEDIOPAGO, 
                  P_ID_PERSONA, 
                  P_ID_CLIENTE, 
                  P_ID_TIPOTRANSACCION,
                  P_ID_MONEDA,
                  P_ID_DINAMICA,
                  P_SERIE, -- No estoy seguro si esto se genera por default.
                  P_NUMERO, -- No estoy seguro si esto se genera por default.
                  P_FECHA,
                  L_IMPORTE, 
                  L_IMPORTE_ME,
                  P_TIPO_CAMBIO,
                  P_GLOSA, 
                  --SUBSTR(P_NOMBRE_DEP,0,50), 
                  --P_DOCUMENTO_DEP,
                  '1',
                  P_ID_VALE
                );
                select coalesce(max(ID_DEPOSITO),0) into l_id_deposito from CAJA_DEPOSITO;
                --P_ID_DEPOSITO := l_id_deposito;
            ELSE 
                UPDATE CAJA_DEPOSITO
                SET  ID_MONEDA = P_ID_MONEDA
                  ,ID_DINAMICA = P_ID_DINAMICA
                  --, SERIE = l_serie,
                  --, NUMERO = l_numero,
                  --, FECHA = l_fecha,
                  , IMPORTE = L_IMPORTE 
                  , IMPORTE_ME = L_IMPORTE_ME
                  , TIPOCAMBIO = P_TIPO_CAMBIO
                  , GLOSA = P_GLOSA
                  -- , NOMBRE_DEP = SUBSTR(P_NOMBRE_DEP,0,50) 
                  -- , DOCUMENTO_DEP = P_DOCUMENTO_DEP
                  -- , ESTADO = 1
                WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                l_id_deposito := P_ID_DEPOSITO;
            END IF;
            
            --Generar asientos
            IF (NVL(L_IMPORTE,0) + NVL(L_IMPORTE_ME,0)) > 0 THEN
                
                -- OBTIENE DATOS DEL DEPOSITO.
                SELECT ID_TIPOORIGEN INTO L_ID_TIPOORIGEN  FROM CAJA_DEPOSITO WHERE ID_DEPOSITO = l_id_deposito;
                
                -- Traer los asientos del vale.
                SELECT CUENTA, CUENTA_CTE, FONDO, DEPTO, RESTRICCION, AGRUPA, SUBSTR(DESCRIPCION,1, 49)AS DESCRIPCION
                INTO L_ID_CUENTAAASI_DEBITO_VALE, L_ID_CTACTE_DEBITO_VALE, L_FONDO_DEBITO_VALE, L_DEPTO_DEBITO_VALE, L_RESTRICCION_DEBITO_VALE, L_AGRUPA_DEBITO_VALE ,
                    L_DESCRIPCION_DEBITO_VALE
                    FROM CONTA_ASIENTO WHERE ID_ORIGEN = P_ID_VALE AND ID_TIPOORIGEN = 15 AND IMPORTE > 0 AND ROWNUM=1;

                OPEN CU_DINAMICA_ASIENTOS;
                    FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    WHILE CU_DINAMICA_ASIENTOS%FOUND LOOP
                        
                        L_DETALLE_IN := SUBSTR(P_ID_ENTIDAD || '-' || P_ID_DEPTO || '-[DEP]-' || P_GLOSA, 1,50);
                        L_MEMO := L_ID_TIPOORIGEN || '-' || l_id_deposito;
                        
                        IF L_ID_INDICADOR='IMPORTE' THEN
                            L_IMPORTEASIENTO := (L_IMPORTE)*(L_PORCENTAJE);
                            L_IMPORTEASIENTO_ME := (L_IMPORTE_ME)*(L_PORCENTAJE);
                        ELSE 
                            L_IMPORTEASIENTO := 0;
                            L_IMPORTEASIENTO_ME := 0;
                        END IF;
                        
                        L_DEPTO:=null;
                        L_CUENTA_CTE:=null;
                        IF L_UNICO='U' THEN
                            SELECT ID_DEPTO INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                        ELSIF L_UNICO='S' THEN -- Si es sesión
                            L_DEPTO := P_ID_DEPTO;
                        end if;

                        IF L_UNICOCTATE='U' THEN
                            SELECT  count(*) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                            IF L_CONT>0 THEN
                                SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_ASIENTO=L_ID_ASIENTO;
                            END IF;
                        ELSIF(L_UNICOCTATE='X') THEN
                            L_ID_CUENTAAASI := L_ID_CUENTAAASI_DEBITO_VALE;
                            L_CUENTA_CTE := L_ID_CTACTE_DEBITO_VALE;
                            --L_DETALLE_IN := L_DESCRIPCION_DEBITO_VALE;
                            L_FONDO := L_FONDO_DEBITO_VALE;
                            L_DEPTO := L_DEPTO_DEBITO_VALE;
                            L_ID_RESTRICCION := L_RESTRICCION_DEBITO_VALE;
                        END IF; 
                                
                        IF L_DC='C' THEN
                            L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                            L_IMPORTEASIENTO_ME:=L_IMPORTEASIENTO_ME*(-1);
                        END IF;
                           
                            
                        SELECT COUNT(*) INTO L_CONT FROM CONTA_ASIENTO
                        WHERE ID_TIPOORIGEN=L_ID_TIPOORIGEN
                        AND ID_ORIGEN=l_id_deposito
                        AND COALESCE(DEPTO,'-') =COALESCE(L_DEPTO,'-')
                        AND CUENTA =L_ID_CUENTAAASI
                        AND COALESCE(CUENTA_CTE,'-')=COALESCE(L_CUENTA_CTE,'-')
                        AND CASE WHEN IMPORTE>0 THEN 'D' ELSE 'C' END=L_DC;
                        
                        IF NVL(L_IMPORTEASIENTO,0)+NVL(L_IMPORTEASIENTO_ME,0) <>0 THEN
                            IF L_CONT=0 THEN
                                    INSERT INTO CONTA_ASIENTO (
                                        ID_TIPOORIGEN,
                                        ID_ORIGEN, 
                                        FONDO,
                                        DEPTO,
                                        CUENTA, 
                                        CUENTA_CTE,
                                        RESTRICCION,
                                        IMPORTE,
                                        IMPORTE_ME,
                                        DESCRIPCION,
                                        MEMO,
                                        VOUCHER, 
                                        PARENT_ID,
                                        REF_ID,
                                        AGRUPA
                                    )VALUES ( 
                                        L_ID_TIPOORIGEN,
                                        l_id_deposito,
                                        L_FONDO,
                                        L_DEPTO,
                                        L_ID_CUENTAAASI,
                                        L_CUENTA_CTE,
                                        L_ID_RESTRICCION,
                                        L_IMPORTEASIENTO,
                                        L_IMPORTEASIENTO_ME,
                                        L_DETALLE_IN,
                                        L_MEMO,
                                        P_ID_VOUCHER,
                                        null,
                                        l_id_deposito,
                                        l_agrupa
                                    );
                                ELSE
                                    update CONTA_ASIENTO set 
                                    IMPORTE=L_IMPORTEASIENTO,
                                    IMPORTE_ME=L_IMPORTEASIENTO_ME
                                    where ID_TIPOORIGEN=L_ID_TIPOORIGEN
                                    and ID_ORIGEN=l_id_deposito
                                    and coalesce(DEPTO,'-') =coalesce(L_DEPTO,'-')
                                    and CUENTA =L_ID_CUENTAAASI
                                    and coalesce(CUENTA_CTE,'-')=coalesce(L_CUENTA_CTE,'-')
                                    and case when IMPORTE>0 then 'D' else 'C' end=L_DC;
                                END IF;
                        END IF;
                        
                        FETCH CU_DINAMICA_ASIENTOS INTO L_ID_ASIENTO,L_ID_PARENT, L_ID_TIPOPLAN, L_ID_RESTRICCION, L_ID_CUENTAAASI, L_DC,
                                                    L_DESTINO, L_ID_INDICADOR, L_UNICO, L_UNICOCTATE, L_PORCENTAJE, L_DESCRIPCION, L_AGRUPA, L_FONDO;
                    END LOOP;
                    CLOSE CU_DINAMICA_ASIENTOS;

            END IF;
            
        END IF;
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
        P_ID_DEPOSITO := l_id_deposito;
      END SP_RENDIR_VALE_DEPOSITO;
    
    PROCEDURE SP_FINALIZAR_PAGO(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        L_ENTIDAD_PAGO NUMBER;
        L_ID_MEDIOPAGO VARCHAR2(4);
        L_ID_DEPTO VARCHAR2(10);
        L_ID_ANHO NUMBER;
        L_ID_MES NUMBER;
        L_ID_PERSONA NUMBER;
        L_CANT NUMBER;
        L_ID_PVENTA NUMBER;
        L_ID_CLIENTE NUMBER;
        L_IMPORTE_DEP NUMBER(10,2);
        L_TOTAL_ANTICIPO NUMBER(10,2);
        L_TIPO VARCHAR2(1) := 'P';
        L_DC VARCHAR2(1) := 'C';
        L_CODIGO VARCHAR2(2) := 'NA';
        L_ID_VALE NUMBER;
        L_SALDO NUMBER(10,2);
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        CURSOR VENTA_DET IS
        SELECT ID_PVENTA,ID_CLIENTE,IMPORTE 
        FROM CAJA_PAGO_VENTA
        WHERE ID_PAGO = P_ID_PAGO
        ORDER BY ID_PVENTA;
        
        BEGIN
        
        SELECT COALESCE(ID_ENTIDAD, 0),ID_MEDIOPAGO,ID_DEPTO,ID_ANHO,ID_MES,ID_USER,ID_VALE INTO L_ENTIDAD_PAGO,L_ID_MEDIOPAGO,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_PERSONA,L_ID_VALE FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;
        
        SELECT 
                NVL(SUM(IMPORTE),0) IMPORTE,
                NVL(SUM(IMPORTE_ME),0) IMPORTE_ME INTO L_IMPORTE,L_IMPORTE_ME
        FROM (
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_COMPRA
            WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_GASTO
            WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_VENTA
            WHERE ID_PAGO = P_ID_PAGO
        );
        
        IF l_error=0 AND L_ENTIDAD_PAGO <> 0 THEN
            
            IF L_IMPORTE+L_IMPORTE_ME > 0 THEN
                UPDATE CAJA_PAGO SET    IMPORTE = L_IMPORTE, 
                                        IMPORTE_ME = L_IMPORTE_ME, 
                                        ESTADO = '1'
                WHERE ID_PAGO = P_ID_PAGO;
                l_error := 0;
                l_msgerror := 'El pago fue finalizado con éxito.';
                if l_error=0  then
                    IF L_ENTIDAD_PAGO = 7124 OR  L_ENTIDAD_PAGO = 9415 THEN
                        IF L_ID_MEDIOPAGO = '999' THEN
                            PKG_CAJA.SP_GENERAR_ASIENTO_RENDICION(P_ID_PAGO,l_error,l_msgerror);--GENERA UN ASIENTO DE PAGO POR LAS RENDICIONES
                        ELSE
                            --SI SE DEPOSITA DINERO AL ALUMNO, SE GENERA UNA TRASNFERENCIA DE ANTICIPO DE SALIDA DE DINERO
                            OPEN VENTA_DET;
                                FETCH VENTA_DET INTO L_ID_PVENTA,L_ID_CLIENTE,L_IMPORTE_DEP;
                                WHILE VENTA_DET%FOUND LOOP
                                
                                    SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
                                    FROM VW_SALES_ADVANCES WHERE ID_ENTIDAD = L_ENTIDAD_PAGO AND ID_DEPTO = L_ID_DEPTO AND ID_ANHO = L_ID_ANHO AND ID_CLIENTE = L_ID_CLIENTE;
                                    
                                    IF L_TOTAL_ANTICIPO >= L_IMPORTE_DEP THEN
                                        PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(L_ENTIDAD_PAGO,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_CLIENTE,L_ID_PERSONA,L_ID_PVENTA,L_IMPORTE_DEP,L_DC,L_CODIGO,l_error,l_msgerror,L_TIPO);
                                    END IF;
                                FETCH VENTA_DET INTO L_ID_PVENTA,L_ID_CLIENTE,L_IMPORTE_DEP;
                                END LOOP;
                            CLOSE VENTA_DET;
                            
                           PKG_CAJA.SP_GENERAR_ASIENTO_PAGO(P_ID_PAGO,l_error,l_msgerror);
                           PKG_CAJA.SP_GENERAR_ASIENTO_GASTO(P_ID_PAGO,l_error,l_msgerror);
                        END IF;
                    ELSE
                        PKG_CAJA.SP_GENERAR_ASIENTO_PAGO_UPN(P_ID_PAGO,l_error,l_msgerror);
                        PKG_CAJA.SP_GENERAR_ASIENTO_PAGOGASTOU(P_ID_PAGO,l_error,l_msgerror);
                    END IF;
                end if;
            ELSE
                --SE RENDIRÁ LOS VALES SIN GENERAR ASIENTO ,SOLO RINDIENDO EL VALE CON EL DEPOSITO
                SELECT COUNT(1) INTO L_CANT
                FROM CAJA_VALE A JOIN CAJA_DEPOSITO B ON A.ID_VALE = B.ID_VALE WHERE A.ID_VALE = L_ID_VALE;
                
                IF L_CANT > 0 THEN
                    SELECT sum(NVL(A.IMPORTE,0))-sum(NVL(B.IMPORTE,0)) INTO L_SALDO
                    FROM CAJA_VALE A JOIN CAJA_DEPOSITO B ON A.ID_VALE = B.ID_VALE WHERE A.ID_VALE = L_ID_VALE;
                    IF L_SALDO = 0 THEN
                        UPDATE CAJA_PAGO SET  ESTADO = '1'
                        WHERE ID_PAGO = P_ID_PAGO;
                        l_error := 0;
                        l_msgerror := 'El vale se Rendirá sin asientos, solo con Deposito.';
                    END IF;
                ELSE
                    l_error := 1;
                    l_msgerror := 'Error, la suma del importe de los items es cero(0).';
                END IF;
            END IF;
        END IF;
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
    END SP_FINALIZAR_PAGO;
    
    PROCEDURE SP_FINALIZAR_DEVOLUCION_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        L_ENTIDAD_PAGO NUMBER;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        BEGIN
        
        SELECT COALESCE(ID_ENTIDAD, 0) INTO L_ENTIDAD_PAGO FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;
        
        SELECT 
                NVL(SUM(IMPORTE),0) IMPORTE,
                NVL(SUM(IMPORTE_ME),0) IMPORTE_ME INTO L_IMPORTE,L_IMPORTE_ME
        FROM (
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_COMPRA
            WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_GASTO
            WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_VENTA
            WHERE ID_PAGO = P_ID_PAGO
        );
        
        IF l_error=0 AND L_ENTIDAD_PAGO <> 0 THEN
            
            IF L_IMPORTE+L_IMPORTE_ME > 0 THEN
                UPDATE CAJA_PAGO SET    IMPORTE = L_IMPORTE, 
                                        IMPORTE_ME = L_IMPORTE_ME, 
                                        ESTADO = '1'
                WHERE ID_PAGO = P_ID_PAGO;
                if l_error=0  then
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEV_VENTA(P_ID_PAGO,l_error,l_msgerror);
                end if;
            ELSE
                l_error := 1;
                l_msgerror := 'Error, la suma del importe de los items es cero(0).';
            END IF;
        END IF;
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
    END SP_FINALIZAR_DEVOLUCION_VENTA;
    
    PROCEDURE SP_CREAR_ACTUALIZAR_VALE(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TIPOVALE INT,
                                        P_ID_DINAMICA INT,P_ID_MEDIOPAGO VARCHAR2,P_ID_CTABANCARIA NUMBER,P_NUMERO VARCHAR2,P_ID_CHEQUERA NUMBER,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_EMPLEADO NUMBER,
                                        P_ID_CUENTAAASI VARCHAR2, P_ID_MONEDA INT, P_TIPOCAMBIO IN NUMBER, P_FECHA DATE, P_IMPORTE NUMBER, P_IMPORTE_ME NUMBER,
                                        P_DETALLE VARCHAR2,P_CELULAR VARCHAR2, P_EMAIL VARCHAR2, P_ID_VALE IN OUT NUMBER
                                        ,P_ERROR OUT number,P_MSGERROR out VARCHAR2)
                            IS
        L_ID_CTABANCARIA number;
        L_ID_CHEQUERA number;
        L_ID_VALE number:=0;
        
        L_NRO_VALE number:=0;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
    BEGIN
        -- l_error := 1;
        -- l_msgerror := P_ID_VALE;
        if P_ID_CTABANCARIA = '' or P_ID_CTABANCARIA = 0  then
            L_ID_CTABANCARIA := null;
        else 
            L_ID_CTABANCARIA := P_ID_CTABANCARIA;
        end if;
        
         if P_ID_CHEQUERA = '' or P_ID_CHEQUERA = 0  then
            L_ID_CHEQUERA := null;
        else 
            L_ID_CHEQUERA := P_ID_CHEQUERA;
        end if;
        
        --L_NUMERO := P_ID_ENTIDAD || '-' || ID_DEPTO  || '-' ||
        
        IF l_error = 0 THEN
        
            IF P_ID_VALE=0 THEN
                
                --SELECT NVL(MAX(ID_VALE),0)+1 INTO L_ID_VALE FROM CAJA_VALE;
                
                SELECT (COUNT(*)+1) INTO L_NRO_VALE FROM CAJA_VALE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO;
                
                INSERT INTO CAJA_VALE(
                                    --ID_VALE, 
                                    ID_ENTIDAD, ID_DEPTO, ID_ANHO, ID_MES,
                                    ID_TIPOVALE, ID_DINAMICA, ID_MEDIOPAGO, ID_CTABANCARIA,
                                    NUMERO,
                                    NRO_VALE,
                                    ID_CHEQUERA, ID_VOUCHER,ID_PERSONA, ID_EMPLEADO, ID_MONEDA,
                                    FECHA, FECHA_VENCIMIENTO, IMPORTE, IMPORTE_ME,
                                    TIPO_CAMBIO, DETALLE, CELULAR, EMAIL, ESTADO)
                                VALUES(
                                    --L_ID_VALE, 
                                    P_ID_ENTIDAD, P_ID_DEPTO, P_ID_ANHO, P_ID_MES,
                                    P_ID_TIPOVALE, P_ID_DINAMICA, P_ID_MEDIOPAGO, L_ID_CTABANCARIA,
                                    P_NUMERO,
                                    (P_ID_ENTIDAD || '.' || P_ID_DEPTO  || '.' || L_NRO_VALE )
                                    , L_ID_CHEQUERA,P_ID_VOUCHER, P_ID_PERSONA, P_ID_EMPLEADO, P_ID_MONEDA,
                                    P_FECHA, SYSDATE, P_IMPORTE, P_IMPORTE_ME,
                                    P_TIPOCAMBIO, P_DETALLE, P_CELULAR, P_EMAIL, '1'
                                ) RETURNING ID_VALE INTO L_ID_VALE;
                                
                P_ID_VALE := L_ID_VALE;
            ELSE 
                UPDATE CAJA_VALE
                    SET ID_DINAMICA = P_ID_DINAMICA,
                        ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                        ID_TIPOVALE = P_ID_TIPOVALE,
                        ID_CTABANCARIA = L_ID_CTABANCARIA,
                        NUMERO = P_NUMERO,
                        ID_EMPLEADO = P_ID_EMPLEADO,
                        ID_MONEDA = P_ID_MONEDA,
                        FECHA = P_FECHA,
                        ID_CHEQUERA = L_ID_CHEQUERA,
                        IMPORTE = P_IMPORTE,IMPORTE_ME = P_IMPORTE_ME,TIPO_CAMBIO = P_TIPOCAMBIO,
                        DETALLE = P_DETALLE,CELULAR = P_CELULAR,EMAIL = P_EMAIL
                        -- ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                WHERE ID_VALE=P_ID_VALE;
                        
            END IF;
                
            PKG_CAJA.SP_GENERAR_ASIENTO_VALE(P_ID_VALE, P_ID_CUENTAAASI, l_error, l_msgerror);
            PKG_CAJA.SP_GENERAR_ASIENTO_VALE_END(P_ID_VALE, l_error, l_msgerror);
        END IF;
        
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;  
    END SP_CREAR_ACTUALIZAR_VALE;
    
    
    PROCEDURE  SP_GENERAR_ASIENTO_VALE(P_ID_VALE NUMBER,P_ID_CUENTAAASI VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     --Datos de asiento
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        l_descripcion varchar2(255);
        l_agrupa varchar2(1);
        l_fondo varchar2(10);
        l_nro_asiento number;

        l_importeasiento number(10,2);
        l_importeasiento_me number(10,2);
        
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_memo varchar2(255);

        l_cont number:=0;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        L_ID_ENTIDAD number;
        L_ID_DEPTO varchar2(10);
        L_ID_DINAMICA number;
        L_ID_EMPLEADO number(10,2);
        L_DETALLE varchar2(100);
        L_ID_CTABANCARIA number(10,2);
        L_IMPORTE number(10,2);
        L_IMPORTE_ME number(10,2);
        L_ID_TIPOORIGEN number(10,2);
        L_ID_VOUCHER number;
        
        CURSOR CONTA_DINAMICA_ASIENTO_CURSOR IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
                a.NOMBRE,a.AGRUPA, a.ID_FONDO, a.NRO_ASIENTO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        

    BEGIN
        
        -- Obtener datos del vale
        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_EMPLEADO, SUBSTR(DETALLE, 0.90), ID_CTABANCARIA, IMPORTE, IMPORTE_ME, ID_TIPOORIGEN, ID_VOUCHER INTO
                L_ID_ENTIDAD, L_ID_DEPTO, L_ID_DINAMICA, L_ID_EMPLEADO, L_DETALLE, L_ID_CTABANCARIA, L_IMPORTE, L_IMPORTE_ME, L_ID_TIPOORIGEN,
                L_ID_VOUCHER FROM CAJA_VALE WHERE ID_VALE=P_ID_VALE;
        
        IF L_ID_VOUCHER IS NULL THEN
        	l_error := 1;
        	l_msgerror := 'Alto! La operación no esta asignada a un voucher.';       
        	GOTO salida_rapida;  
        END IF;
     
        IF l_error = 0 THEN
            l_memo := L_ID_TIPOORIGEN || '-' || P_ID_VALE;
                    -- Generar asinto en el caja_vale_asiento
            OPEN CONTA_DINAMICA_ASIENTO_CURSOR;
            FETCH CONTA_DINAMICA_ASIENTO_CURSOR INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,
                                        l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_nro_asiento;
                WHILE CONTA_DINAMICA_ASIENTO_CURSOR%FOUND LOOP
                    
                    l_descripcion := SUBSTR(L_ID_ENTIDAD || '-' || L_ID_DEPTO || '-[VALE]-' || L_DETALLE || '-' || SUBSTR(FC_NOMBRE_PERSONA(L_ID_EMPLEADO),1,100), 1,50);
                    
                    select case when l_id_indicador='IMPORTE' then 
                            (L_IMPORTE)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento
                    from dual;
                    select case when l_id_indicador='IMPORTE' then 
                            (L_IMPORTE_ME)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento_me
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=l_id_asiento;
                    elsif(l_unico='X') then
                       select FC_DEPTO_CLIENTE(L_ID_EMPLEADO) into l_depto from dual;
                    elsif l_unico='S' THEN -- Si es sesión
                        l_depto := L_ID_DEPTO;
                    end if;
                    
                    -- Ingresamos la cuenta aasi que el usuario ingresa.
                    IF (P_ID_CUENTAAASI <> '' OR P_ID_CUENTAAASI IS NOT NULL) AND l_dc='D'  THEN
                        l_id_cuentaaasi := P_ID_CUENTAAASI;
                    END IF;
                
                    IF l_unicoctate='U' then
                        select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento=l_id_asiento;
                        if l_cont>0 then
                            select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        end if;
                    elsif(l_unicoctate='B') then
                        IF l_dc = 'C' AND L_ID_CTABANCARIA IS NOT NULL then
                            SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = L_ID_CTABANCARIA;
                        end IF;
                    elsif(l_unicoctate='X') then
                        SELECT COUNT(DISTINCT NUM_DOCUMENTO) INTO l_count_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO GROUP BY NUM_DOCUMENTO;  
                        IF(l_count_cuenta_cte = 1) THEN
                            select NUM_DOCUMENTO into l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO GROUP BY NUM_DOCUMENTO;
                        END IF;
                    END IF; 
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                        l_importeasiento_me:=l_importeasiento_me*(-1);
                    end if;
                 
                    SELECT COUNT(*) INTO l_cont FROM CAJA_VALE_ASIENTO WHERE ID_VALE=P_ID_VALE
                    AND coalesce(ID_DEPTO,'-')=coalesce(l_depto,'-')
                    -- AND ID_CUENTAAASI=l_id_cuentaaasi
                    AND coalesce(ID_CTACTE,'-')=coalesce(l_cuenta_cte,'-')
                    AND case when IMPORTE>0 then 'D' else 'C' end=l_dc;

                    IF NVL(l_importeasiento,0)+NVL(l_importeasiento_me,0) <>0 THEN
                        IF l_cont=0 THEN
                            
                            INSERT INTO CAJA_VALE_ASIENTO(
                                ID_VALE, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, ID_DEPTO, IMPORTE, IMPORTE_ME, 
                                DESCRIPCION, DC, AGRUPA, NRO_ASIENTO
                            ) VALUES(
                                P_ID_VALE, l_id_cuentaaasi, l_id_restriccion, l_cuenta_cte, l_fondo, l_depto, l_importeasiento, l_importeasiento_me,
                                l_descripcion, l_dc, l_agrupa, l_nro_asiento
                            );
                          
                        ELSE
                            UPDATE CAJA_VALE_ASIENTO
                            SET IMPORTE=l_importeasiento, IMPORTE_ME=l_importeasiento_me, ID_CUENTAAASI=l_id_cuentaaasi,
                            DESCRIPCION=l_descripcion
                            where ID_VALE=P_ID_VALE
                            AND coalesce(ID_DEPTO,'-')=coalesce(l_depto,'-')
                            AND coalesce(ID_CTACTE,'-')=coalesce(l_cuenta_cte,'-')
                            AND case when IMPORTE>0 then 'D' else 'C' end=l_dc;
                            
                        END IF;
                    END IF;
                    
                FETCH CONTA_DINAMICA_ASIENTO_CURSOR INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,
                                        l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_nro_asiento;
                END LOOP;
                CLOSE CONTA_DINAMICA_ASIENTO_CURSOR; 


        END IF;
       <<salida_rapida>>
            -- Generar asiento en el conta_asiento
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;  
    END SP_GENERAR_ASIENTO_VALE;
   
   PROCEDURE SP_GENERAR_ASIENTO_VALE_END(P_ID_VALE NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS

        l_cont number:=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        
        L_ID_TIPOORIGEN number(10,2);
        L_ID_VOUCHER number;
        l_memo varchar2(255);
        
        CURSOR vale_asiento_cursor IS
        SELECT ID_ASIENTO, ID_VALE, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO,
		ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, AGRUPA 
		FROM CAJA_VALE_ASIENTO cva WHERE ID_VALE =P_ID_VALE;

    BEGIN
        
	    	-- Obtener datos del vale
        	SELECT ID_TIPOORIGEN, ID_VOUCHER INTO
                L_ID_TIPOORIGEN, L_ID_VOUCHER FROM CAJA_VALE WHERE ID_VALE=P_ID_VALE;
          	
            -- Eliminarmos todo los asiento generados para esta operación
            DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN= L_ID_TIPOORIGEN
            	AND ID_ORIGEN=P_ID_VALE; 
		    
            FOR c_avale in vale_asiento_cursor
            LOOP
            BEGIN
	           
	            l_memo := L_ID_TIPOORIGEN || '-' || P_ID_VALE;
	            
	            INSERT INTO CONTA_ASIENTO (
                ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE,
                RESTRICCION, IMPORTE, IMPORTE_ME, DESCRIPCION,
                MEMO, VOUCHER, PARENT_ID,
                REF_ID, AGRUPA
                )VALUES ( 
                L_ID_TIPOORIGEN, P_ID_VALE, c_avale.id_fondo, c_avale.id_depto, c_avale.id_cuentaaasi, c_avale.id_ctacte,
                c_avale.id_restriccion, c_avale.importe, c_avale.importe_me, c_avale.descripcion,
                l_memo, L_ID_VOUCHER, null,
                P_ID_VALE, c_avale.agrupa
                );
            
                --end if;
                END;     
            END LOOP;
           
        <<salida_rapida>>
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;  
    END SP_GENERAR_ASIENTO_VALE_END;
    
    PROCEDURE SP_REGISTRA_VALE(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_TIPOVALE INT,P_ID_PERSONA NUMBER,P_ID_EMPLEADO NUMBER,
                            P_ID_MONEDA INT, P_FECHA DATE, P_IMPORTE NUMBER, P_IMPORTE_ME NUMBER, P_DETALLE VARCHAR2,P_CELULAR VARCHAR2, P_EMAIL VARCHAR2, P_ID_VALE OUT NUMBER,P_FECHA_VENCIMIENTO DATE,P_TERMINO_CONDICION VARCHAR2) IS
        L_ID_VALE INT;
        L_TC NUMBER(10,3);
        L_ID_MONEDA_TC number;
        L_NRO_VALE VARCHAR2(20);
        L_IMPORTE NUMBER(10,2);
        L_CELULAR VARCHAR2(20);
        
        BEGIN   
            L_CELULAR:= replace(P_CELULAR,' ','');
            L_ID_MONEDA_TC:=9;
            --obtiene tipo de cambio del dia
            SELECT FC_TIPOCAMBIO(L_ID_MONEDA_TC,CURRENT_DATE,'D' ) INTO L_TC FROM DUAL;
            -- SELECT NVL(MAX(ID_VALE),0)+1 INTO L_ID_VALE FROM CAJA_VALE;
            
            IF P_ID_MONEDA = 9 THEN
                L_IMPORTE := P_IMPORTE_ME*L_TC;
            ELSE
                L_IMPORTE := P_IMPORTE;
            END IF;
            
            SELECT --(COUNT(1)+1) INTO L_NRO_VALE
                    NVL(MAX(TO_NUMBER(NRO_VALE)),0)+1 INTO L_NRO_VALE
            FROM CAJA_VALE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO;
            INSERT INTO CAJA_VALE(
                                    --ID_VALE,
                                    ID_ENTIDAD,
                                    ID_DEPTO,
                                    ID_ANHO,
                                    ID_MES,
                                    ID_TIPOVALE,
                                    ID_PERSONA,
                                    ID_EMPLEADO,
                                    ID_MONEDA,
                                    FECHA,
                                    FECHA_REG,
                                    FECHA_VENCIMIENTO,
                                    IMPORTE,
                                    IMPORTE_ME,
                                    TIPO_CAMBIO,
                                    DETALLE,
                                    CELULAR,
                                    EMAIL,
                                    TERMINO_CONDICION,
                                    ESTADO,
                                    NRO_VALE)VALUES(
                                    --L_ID_VALE,
                                    P_ID_ENTIDAD,
                                    P_ID_DEPTO,
                                    P_ID_ANHO,
                                    P_ID_MES,
                                    P_ID_TIPOVALE,
                                    P_ID_PERSONA,
                                    P_ID_EMPLEADO,
                                    P_ID_MONEDA,
                                    P_FECHA,
                                    SYSDATE,
                                    P_FECHA_VENCIMIENTO,
                                    L_IMPORTE,
                                    P_IMPORTE_ME,
                                    L_TC,
                                    P_DETALLE,
                                    L_CELULAR,
                                    P_EMAIL,
                                    P_TERMINO_CONDICION,
                                    '1',
                                    L_NRO_VALE
                                ) RETURNING ID_VALE INTO L_ID_VALE;
            P_ID_VALE := L_ID_VALE;
    END SP_REGISTRA_VALE;
    
    PROCEDURE SP_AUTORIZA_VALE(P_ID_VALE IN INT, P_ID_DINAMICA IN INT, P_ID_PERSONA_AUTO IN NUMBER,P_ID_MEDIOPAGO IN VARCHAR2,P_ID_CTABANCARIA IN NUMBER, P_CTA_BANCARIA IN VARCHAR2,P_FECHA_VENC DATE,P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2) IS
        L_ID_ASIENTO INT;
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(200);
        L_CONT NUMBER :=0;
        BEGIN
            SELECT COUNT(*) INTO L_CONT FROM CAJA_VALE_AUTORIZA
            WHERE ID_PERSONA = P_ID_PERSONA_AUTO;
            IF L_CONT = 0 THEN
                P_MSGERROR := 'VALE: No Existe Cta Cte Configurada para el Tesorero(a)';
                P_ERROR := 1;
            ELSE
                IF P_ID_MEDIOPAGO = '007' THEN
                    UPDATE CAJA_VALE SET ID_PERSONA_AUTO = P_ID_PERSONA_AUTO,
                                        ID_DINAMICA = P_ID_DINAMICA,
                                        ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                                        FECHA_VENCIMIENTO = P_FECHA_VENC
                    WHERE ID_VALE = P_ID_VALE;
                ELSE
                    UPDATE CAJA_VALE SET ID_PERSONA_AUTO = P_ID_PERSONA_AUTO,
                                        ID_DINAMICA = P_ID_DINAMICA,
                                        ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                                        ID_CTABANCARIA = P_ID_CTABANCARIA,
                                        CTA_BANCARIA = P_CTA_BANCARIA,
                                        FECHA_VENCIMIENTO = P_FECHA_VENC
                    WHERE ID_VALE = P_ID_VALE;
                END IF;
                
                
                PKG_CAJA.SP_ASIENTO_VALE(P_ID_VALE,L_ERROR,L_MSGERROR);
                P_MSGERROR := L_MSGERROR;
                P_ERROR := L_ERROR;
            END IF;
            /*
            SELECT NVL(MAX(ID_ASIENTO),0)+1 INTO L_ID_ASIENTO FROM CAJA_VALE_ASIENTO;
            INSERT INTO CAJA_VALE_ASIENTO ( ID_ASIENTO,
                                            ID_VALE,
                                            ID_CUENTAAASI,
                                            ID_CTACTE,
                                            ID_DEPTO,
                                            ID_RESTRICCION,
                                            DC
                                            -- ,ESTADO
                                        )VALUES(
                                            L_ID_ASIENTO,
                                            P_ID_VALE,
                                            P_ID_CUENTAAASI,
                                            P_ID_CTACTE,
                                            P_ID_DEPTO,
                                            P_ID_RESTRICCION,
                                            'D'
                                            --, '1'
                                        );*/
            
    END SP_AUTORIZA_VALE;
    PROCEDURE  SP_ASIENTO_VALE(P_ID_VALE IN NUMBER,P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2) IS
     --Datos de asiento
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        l_descripcion varchar2(255);
        l_agrupa varchar2(1);
        l_fondo varchar2(10);
        l_nro_asiento number;
        l_importeasiento number(10,2);
        l_importeasiento_me number(10,2);
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_cont number:=0;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        L_ID_ENTIDAD number;
        L_ID_DEPTO varchar2(10);
        L_ID_DINAMICA number;
        L_ID_EMPLEADO number(10,2);
        L_DETALLE varchar2(200);
        L_ID_CTABANCARIA number(10,2);
        L_IMPORTE number(10,2);
        L_IMPORTE_ME number(10,2);
        L_ID_PERSONA_AUTO NUMBER;
        L_ID_TIPOVALE NUMBER;
        L_NRO_VALE VARCHAR(50);
        
        CURSOR CONTA_DINAMICA_ASIENTO_CURSOR IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,a.NOMBRE,a.AGRUPA, a.ID_FONDO, a.NRO_ASIENTO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
    BEGIN
        -- Obtener datos del vale
        SELECT ID_ENTIDAD, ID_DEPTO, ID_DINAMICA, ID_EMPLEADO,ID_PERSONA_AUTO, ID_TIPOVALE,SUBSTR(DETALLE, 0,90), ID_CTABANCARIA, IMPORTE, IMPORTE_ME, NRO_VALE INTO
                L_ID_ENTIDAD, L_ID_DEPTO, L_ID_DINAMICA, L_ID_EMPLEADO, L_ID_PERSONA_AUTO,L_ID_TIPOVALE,L_DETALLE, L_ID_CTABANCARIA, L_IMPORTE, L_IMPORTE_ME, L_NRO_VALE 
        FROM CAJA_VALE WHERE ID_VALE=P_ID_VALE;
        
        IF L_ID_DINAMICA IS NULL THEN
            l_error := 1;
            l_msgerror := 'ERROR: NO EXISTE DIAMICA CONTABLE - '||L_ID_DINAMICA;
        END IF;
        
        IF l_error = 0 THEN
            DELETE CAJA_VALE_ASIENTO WHERE ID_VALE=P_ID_VALE;
                    -- Generar asinto en el caja_vale_asiento
            OPEN CONTA_DINAMICA_ASIENTO_CURSOR;
            FETCH CONTA_DINAMICA_ASIENTO_CURSOR INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,
                                        l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_nro_asiento;
                WHILE CONTA_DINAMICA_ASIENTO_CURSOR%FOUND LOOP
                  
                    l_descripcion := SUBSTR(L_ID_ENTIDAD || '-' || '-[VALE-'||L_NRO_VALE||']-'|| L_DETALLE || '-' || SUBSTR(FC_NOMBRE_PERSONA(L_ID_EMPLEADO),1,100), 1,50);
                    
                    SELECT CASE WHEN l_id_indicador = 'IMPORTE' THEN (L_IMPORTE) * (l_porcentaje) ELSE 0 END INTO l_importeasiento
                    FROM DUAL;

                    SELECT CASE WHEN l_id_indicador = 'IMPORTE' THEN (L_IMPORTE_ME) * (l_porcentaje) ELSE 0 END INTO l_importeasiento_me
                    FROM DUAL;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=l_id_asiento;
                    elsif(l_unico='X') then
                       select FC_DEPTO_CLIENTE(L_ID_EMPLEADO) into l_depto from dual;
                    elsif l_unico='S' THEN -- Si es sesión
                        l_depto := L_ID_DEPTO;
                    end if;
                
                    IF(l_unicoctate='B') then
                        IF l_dc = 'C' then
                            BEGIN
                                SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = L_ID_CTABANCARIA;
                                EXCEPTION WHEN NO_DATA_FOUND THEN
                                l_cuenta_cte := '';
                            END;
                        end IF;
                    elsif(l_unicoctate='X') then
                        IF L_ID_TIPOVALE = 1 THEN --si el vale es a rendir
                            --SELECT ID_CTACTE INTO l_cuenta_cte 
                            --FROM CAJA_VALE_AUTORIZA
                            --WHERE ID_PERSONA = L_ID_PERSONA_AUTO;
                            SELECT COUNT(NUM_DOCUMENTO) INTO l_count_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;  
                            IF(l_count_cuenta_cte >= 1) THEN
                                select max(NUM_DOCUMENTO) into l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;
                            END IF;
                        ELSE
                            SELECT COUNT(NUM_DOCUMENTO) INTO l_count_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;  
                            IF(l_count_cuenta_cte >= 1) THEN
                                select max(NUM_DOCUMENTO) into l_cuenta_cte FROM MOISES.VW_PERSONA_NATURAL_TRABAJADOR WHERE ID_PERSONA=L_ID_EMPLEADO;
                            END IF;
                        END IF;
                    END IF; 
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                        l_importeasiento_me:=l_importeasiento_me*(-1);
                    end if;

                    IF l_cont=0 THEN
                        INSERT INTO CAJA_VALE_ASIENTO(
                            ID_VALE, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, ID_DEPTO, IMPORTE, IMPORTE_ME, 
                            DESCRIPCION, DC, AGRUPA, NRO_ASIENTO
                        ) VALUES(
                            P_ID_VALE, l_id_cuentaaasi, l_id_restriccion, l_cuenta_cte, l_fondo, l_depto, l_importeasiento, l_importeasiento_me,
                            l_descripcion, l_dc, l_agrupa, l_nro_asiento
                        );
                    END IF;
                    
                FETCH CONTA_DINAMICA_ASIENTO_CURSOR INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,
                                        l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_nro_asiento;
                END LOOP;
                CLOSE CONTA_DINAMICA_ASIENTO_CURSOR; 

        END IF;
            -- Generar asiento en el conta_asiento
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;  
    END SP_ASIENTO_VALE; 
    PROCEDURE SP_CREAR_RETENCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_ANHO NUMBER,
                                P_ID_MES NUMBER,P_ID_MONEDA  NUMBER,P_NUMERO VARCHAR2,P_FECHA_EMISION DATE,P_SERIE VARCHAR2,P_NRO_RETENCION VARCHAR2,P_ID_RETENCION IN OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
                              
        l_retencion number:=0;
        l_estado varchar2(1):='0'; --1:vigente, 0:anulado
        L_ID_CTABANCARIA number := null;
        L_ID_CHEQUERA number :=null;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        L_FECHA date;
        BEGIN
            IF LENGTH(P_SERIE) > 4 THEN 
                    l_error := 1;
                    l_msgerror := 'La série de la retención debe contener solo 4 caracteres';
            END IF;
            IF LENGTH(P_NRO_RETENCION) > 8 THEN 
                    l_error := 1;
                    l_msgerror := 'El número de la retención debe contener solo 8 caracteres';
            END IF;
                
            if l_error=0 then
      
                -- SELECT coalesce(max(ID_RETENCION),0)+1 into l_retencion FROM CAJA_RETENCION;
        
                IF P_ID_CTABANCARIA IS NULL OR P_ID_CTABANCARIA = 0 THEN
                    L_ID_CTABANCARIA:=null;
                ELSE
                    L_ID_CTABANCARIA:=P_ID_CTABANCARIA;
                END IF;
                IF P_ID_CHEQUERA IS NULL OR P_ID_CHEQUERA = 0 THEN
                    L_ID_CHEQUERA:=null;
                ELSE
                    L_ID_CHEQUERA:=P_ID_CHEQUERA;
                END IF;
                IF P_FECHA_EMISION IS NULL THEN
                    L_FECHA := NULL;
                ELSE
                    L_FECHA := P_FECHA_EMISION;
                END IF;
                
                IF P_ID_RETENCION <> 0 THEN -- Editar 
                
                    UPDATE CAJA_RETENCION
                        SET ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                        ID_PROVEEDOR = P_ID_PROVEEDOR,
                        ID_CTABANCARIA = L_ID_CTABANCARIA,
                        ID_CHEQUERA = L_ID_CHEQUERA,
                        ID_ANHO = P_ID_ANHO,
                        ID_MES = P_ID_MES,
                        ID_MONEDA = P_ID_MONEDA,
                        NUMERO = P_NUMERO,
                        FECHA_EMISION = L_FECHA,
                        SERIE = P_SERIE,
                        NRO_RETENCION = P_NRO_RETENCION
                    WHERE ID_RETENCION=P_ID_RETENCION;
                    l_retencion := P_ID_RETENCION;
                  
                ELSE -- Nuevo
                    
                    INSERT INTO CAJA_RETENCION(
                        -- ID_RETENCION,
                        ID_ENTIDAD,
                        ID_DEPTO,
                        ID_MEDIOPAGO,
                        ID_VOUCHER,
                        ID_PERSONA,
                        ID_PROVEEDOR,
                        ID_CTABANCARIA,
                        ID_CHEQUERA,
                        ID_ANHO,
                        ID_MES,
                        ID_MONEDA,
                        NUMERO,
                        FECHA_EMISION,
                        FECHA,
                        SERIE,
                        NRO_RETENCION,
                        ESTADO
                    )VALUES(
                      -- l_retencion,
                      P_ID_ENTIDAD, 
                      P_ID_DEPTO, 
                      P_ID_MEDIOPAGO,
                      P_ID_VOUCHER, 
                      P_ID_PERSONA, 
                      P_ID_PROVEEDOR, 
                      L_ID_CTABANCARIA,
                      L_ID_CHEQUERA,
                      P_ID_ANHO, 
                      P_ID_MES,  
                      P_ID_MONEDA,
                      P_NUMERO,
                      L_FECHA,
                      sysdate, 
                      P_SERIE,
                      P_NRO_RETENCION,
                      l_estado
                    ) RETURNING ID_RETENCION INTO l_retencion;
                    l_retencion := l_retencion;
                END IF;
            END IF;
        P_ERROR:=l_error;
        P_ID_RETENCION :=l_retencion;  
        --P_MSGERROR:='l_error ss';
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_RETENCION;
    PROCEDURE SP_CREAR_RETENCION_DETALLE(P_ID_RETENCION NUMBER,P_ID_COMPRA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE_TOTAL NUMBER,P_IMPORTE_RET NUMBER,P_IMPORTE_RET_ME NUMBER, P_ID_RETDETALLE IN OUT NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
        l_id_retdetalle number;
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_importe_me number(10,2);
        L_DETALLE VARCHAR2(100);
        L_ID_COMPRA NUMBER;
        L_ID_SALDO NUMBER;
        L_ID_PROVEEDOR NUMBER;
    
        BEGIN
            l_error:=0;
            
            if l_error=0 then
                 IF P_ID_RETDETALLE <> 0 then -- Update
                    UPDATE CAJA_RETENCION_COMPRA
                    SET
                    IMPORTE_TOTAL = P_IMPORTE_TOTAL,
                    IMPORTE_RET = P_IMPORTE_RET,
                    IMPORTE_RET_ME = P_IMPORTE_RET_ME
                    WHERE ID_RETDETALLE=P_ID_RETDETALLE;
                    l_msgerror:='Pago OK';
                    l_id_retdetalle := P_ID_RETDETALLE;
                 ELSE
                    --SELECT coalesce(max(ID_RETDETALLE),0)+1 into l_id_retdetalle FROM CAJA_RETENCION_COMPRA;
     
     
                    IF NVL(P_IMPORTE_RET,0)+NVL(P_IMPORTE_RET_ME,0) > 0 THEN
                    
                        SELECT
                                ID_PROVEEDOR,ID_ENTIDAD||'-'||ID_DEPTO||'-Ret:'||SERIE||'-'||NRO_RETENCION||'-'||SUBSTR(FC_NOMBRE_PERSONA(ID_PROVEEDOR),1,20)||'-'||TO_CHAR(FECHA_EMISION,'DD/MM/YYYY') INTO L_ID_PROVEEDOR,L_DETALLE
                        FROM CAJA_RETENCION
                        WHERE ID_RETENCION = P_ID_RETENCION;
                        
                        SELECT COUNT(1) INTO l_contar FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA AND ID_PROVEEDOR = L_ID_PROVEEDOR;
                        
                        IF l_contar > 0 THEN
                            L_ID_COMPRA := P_ID_COMPRA;
                            L_ID_SALDO := NULL;
                        ELSE
                            L_ID_COMPRA := NULL;
                            L_ID_SALDO := P_ID_COMPRA;
                        END IF;
                        
                        INSERT INTO CAJA_RETENCION_COMPRA(
                        --ID_RETDETALLE,
                        ID_RETENCION,
                        ID_COMPRA,
                        ID_DINAMICA,
                        IMPORTE_TOTAL,
                        IMPORTE_RET,
                        IMPORTE_RET_ME,
                        DETALLE,
                        ESTADO,
                        ID_SALDO
                        )values(
                        --l_id_retdetalle,
                        P_ID_RETENCION,
                        L_ID_COMPRA,
                        P_ID_DINAMICA,
                        P_IMPORTE_TOTAL,
                        P_IMPORTE_RET,
                        P_IMPORTE_RET_ME,
                        L_DETALLE,
                        '1',
                        L_ID_SALDO
                        ) RETURNING ID_RETDETALLE INTO l_id_retdetalle;
                        l_msgerror:='Pago OK';
                    ELSE
                        l_error := 1;
                        l_msgerror:='No existen Importes';
                    END IF;
                END IF;
            end if;  
       
        P_ERROR:=l_error;
        P_ID_RETDETALLE := l_id_retdetalle;
        P_MSGERROR:=l_msgerror;
        
    END SP_CREAR_RETENCION_DETALLE;
    
    PROCEDURE SP_ELIMINAR_RETENCION(P_ID_RETENCION NUMBER) IS
        
        L_ID_TIPOORIGEN NUMBER;
        L_ID_ORIGEN NUMBER;
        
        CURSOR c_ret_compra IS	
        SELECT ID_TIPOORIGEN, ID_RETDETALLE
        FROM CAJA_RETENCION_COMPRA 
        WHERE ID_RETENCION=P_ID_RETENCION;
        
        BEGIN
        
        OPEN c_ret_compra;
        FETCH c_ret_compra INTO L_ID_TIPOORIGEN, L_ID_ORIGEN;

        WHILE c_ret_compra%FOUND LOOP
        
            DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN=P_ID_RETENCION;

            FETCH c_ret_compra INTO L_ID_TIPOORIGEN, L_ID_ORIGEN;
        END LOOP;
        CLOSE c_ret_compra; 
        
        DELETE CAJA_RETENCION_COMPRA where ID_RETENCION = P_ID_RETENCION;
        DELETE CAJA_RETENCION where ID_RETENCION = P_ID_RETENCION;

    END SP_ELIMINAR_RETENCION;
    
    PROCEDURE SP_ELIMINAR_VALE(P_ID_VALE NUMBER) IS
        
        L_ID_TIPOORIGEN NUMBER;
        L_ID_ORIGEN NUMBER;
        
        BEGIN
        
        SELECT ID_VALE, ID_TIPOORIGEN INTO L_ID_ORIGEN, L_ID_TIPOORIGEN FROM CAJA_VALE WHERE ID_VALE=P_ID_VALE;
        
        DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = L_ID_ORIGEN;
        
        DELETE CAJA_VALE_ASIENTO WHERE ID_VALE=P_ID_VALE;
        
        DELETE CAJA_VALE WHERE ID_VALE=P_ID_VALE;
        
    END SP_ELIMINAR_VALE;
    
    PROCEDURE SP_ELIMINAR_RETENCION_DETALLE(P_ID_RETENCION NUMBER,P_ID_RETDETALLE VARCHAR2,P_TIPO NUMBER) IS
        BEGIN
            if P_TIPO=1 then
                DELETE from CAJA_RETENCION_COMPRA where ID_RETENCION = P_ID_RETENCION
                AND ID_RETDETALLE = P_ID_RETDETALLE;
            else
                DELETE from CAJA_RETENCION_COMPRA where ID_RETENCION = P_ID_RETENCION;
            end if;
    END SP_ELIMINAR_RETENCION_DETALLE;
    
    PROCEDURE SP_ELIMINAR_DETRACCION(P_ID_DETRACCION NUMBER) IS
        L_ID_VOUCHER INTEGER;
        L_ID_TIPOORIGEN NUMBER;
        L_ID_ORIGEN NUMBER;
        
        CURSOR c_det_compra IS	
        SELECT ID_TIPOORIGEN, ID_DETDETALLE
        FROM CAJA_DETRACCION_COMPRA 
        WHERE ID_DETRACCION=P_ID_DETRACCION;
        
        BEGIN
        
        SELECT ID_VOUCHER INTO L_ID_VOUCHER 
        FROM CAJA_DETRACCION
        WHERE ID_DETRACCION = P_ID_DETRACCION;
        
        OPEN c_det_compra;
        FETCH c_det_compra INTO L_ID_TIPOORIGEN, L_ID_ORIGEN;

        WHILE c_det_compra%FOUND LOOP
        
            DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN=P_ID_DETRACCION AND VOUCHER = L_ID_VOUCHER;

            FETCH c_det_compra INTO L_ID_TIPOORIGEN, L_ID_ORIGEN;
        END LOOP;
        CLOSE c_det_compra; 
        
        DELETE CAJA_DETRACCION_COMPRA where ID_DETRACCION = P_ID_DETRACCION;
        DELETE CAJA_DETRACCION where ID_DETRACCION = P_ID_DETRACCION;

    END SP_ELIMINAR_DETRACCION;
    PROCEDURE SP_ELIMINAR_DETRACCION_ALL(P_ID_DETRACCION NUMBER) IS
        L_ID_VOUCHER INTEGER;
        L_ID_TIPOORIGEN NUMBER;
        L_ID_ORIGEN NUMBER;
    BEGIN
        SELECT ID_VOUCHER,ID_TIPOORIGEN INTO L_ID_VOUCHER,L_ID_TIPOORIGEN 
        FROM CAJA_DETRACCION
        WHERE ID_DETRACCION = P_ID_DETRACCION;
        
        
        DELETE FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN
        AND ID_ORIGEN = P_ID_DETRACCION
        AND VOUCHER = L_ID_VOUCHER;
        
        DELETE CAJA_DETRACCION_COMPRA where ID_DETRACCION = P_ID_DETRACCION;
        DELETE CAJA_DETRACCION_VENTA where ID_DETRACCION = P_ID_DETRACCION;
        DELETE CAJA_DETRACCION where ID_DETRACCION = P_ID_DETRACCION;

    END SP_ELIMINAR_DETRACCION_ALL;
    PROCEDURE SP_ACTUALIZAR_RETENCION(P_ID_RETENCION NUMBER,P_ID_CTABANCARIA NUMBER,P_ID_CHEQUERA NUMBER,P_ID_MONEDA  NUMBER,P_NUMERO VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        L_ID_CTABANCARIA number := null;
        L_ID_CHEQUERA number :=null;
        BEGIN
        IF P_ID_CTABANCARIA IS NULL OR P_ID_CTABANCARIA = 0 THEN
            L_ID_CTABANCARIA:=null;
        END IF;
        IF P_ID_CHEQUERA IS NULL OR P_ID_CHEQUERA = 0 THEN
            L_ID_CHEQUERA:=null;
        END IF;
        UPDATE CAJA_RETENCION SET   ID_CTABANCARIA = L_ID_CTABANCARIA,
                                    ID_CHEQUERA = L_ID_CHEQUERA,
                                    ID_MONEDA = P_ID_MONEDA,
                                    NUMERO = P_NUMERO
        WHERE ID_RETENCION = P_ID_RETENCION;
        P_ERROR := 0;
        P_MSGERROR := 'PAGO FINALIZADO CON EXITO';
    END SP_ACTUALIZAR_RETENCION;
    PROCEDURE SP_FINALIZAR_RETENCION(P_ID_RETENCION NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        L_ID_ENTIDAD NUMBER;
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_ID_DINAMICA NUMBER;
        L_CANT NUMBER;
        
        L_SERIE varchar2(20):='';
        L_NRO_RETENCION varchar2(50):='';
        L_CUENTA_CORRIENTE varchar2(50):='';
        L_ID_RETDETALLE NUMBER;
        L_IMPORTE_RET NUMBER(10,2);
        L_DETALLE VARCHAR2(50);
        L_PROVEEDOR VARCHAR2(50);
        
        /*CURSOR ret IS
        SELECT 
                B.ID_RETDETALLE,B.IMPORTE_RET,SUBSTR(B.DETALLE,1,50)
        FROM CAJA_RETENCION A JOIN CAJA_RETENCION_COMPRA B
        ON A.ID_RETENCION = B.ID_RETENCION
        WHERE A.ID_RETENCION = P_ID_RETENCION
        ORDER BY ID_RETDETALLE;*/
        
        BEGIN
        
        SELECT NVL(SUM(IMPORTE_RET),0),NVL(SUM(IMPORTE_RET_ME),0) INTO L_IMPORTE, L_IMPORTE_ME
        FROM CAJA_RETENCION_COMPRA
        WHERE ID_RETENCION = P_ID_RETENCION;
        
        SELECT ID_ENTIDAD,ID_CTABANCARIA, SERIE, NRO_RETENCION,SUBSTR(FC_NOMBRE_PERSONA(ID_PROVEEDOR),1,20) INTO L_ID_ENTIDAD,L_ID_CTABANCARIA, L_SERIE, L_NRO_RETENCION, L_PROVEEDOR
        FROM CAJA_RETENCION
        WHERE ID_RETENCION = P_ID_RETENCION;
        
        IF L_ID_CTABANCARIA IS NOT NULL THEN 
            SELECT CUENTA_CORRIENTE INTO L_CUENTA_CORRIENTE  FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA=L_ID_CTABANCARIA;
        ELSE 
            L_CUENTA_CORRIENTE := '';
        END IF;
        
        --IF L_ID_ENTIDAD = 7124 THEN
        SELECT COUNT(ID_DINAMICA) INTO L_CANT
        FROM CAJA_RETENCION_COMPRA
        WHERE ID_RETENCION = P_ID_RETENCION
        GROUP BY ID_DINAMICA;
        /*ELSE
            L_CANT := 1;
        END IF;*/
        
        -- DELETE ASIENTOS CONTABLES ANTERIORES
        DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN=12 AND ID_ORIGEN=P_ID_RETENCION;
        
        IF L_CANT >= 1 THEN
            SELECT ID_DINAMICA INTO L_ID_DINAMICA
            FROM CAJA_RETENCION_COMPRA
            WHERE ID_RETENCION = P_ID_RETENCION
            GROUP BY ID_DINAMICA;
        
            IF L_IMPORTE+L_IMPORTE_ME > 0 THEN
                UPDATE CAJA_RETENCION SET   IMPORTE = L_IMPORTE, 
                                            ESTADO = '1'
                WHERE ID_RETENCION = P_ID_RETENCION;
                
                UPDATE CAJA_RETENCION_COMPRA SET    ESTADO = '1'
                WHERE ID_RETENCION = P_ID_RETENCION;
                P_ERROR := 0;
                P_MSGERROR := 'La retención se finalizó con éxito.';
                if P_ERROR=0  then
                    P_ERROR := 0;
                       --PKG_CAJA.SP_GENERAR_ASIENTO_PAGO(P_ID_RETENCION,P_ERROR,P_MSGERROR);
                       --12 = ID_OPERORIGEN = RETENCION
                        --IF L_ID_ENTIDAD = 7124 THEN
                        PKG_CAJA.SP_GENERAR_ASIENTO_RET_DET(12,P_ID_RETENCION,L_ID_DINAMICA,L_ID_CTABANCARIA,L_IMPORTE,
                        
                        SUBSTR((L_ID_ENTIDAD || '-' || L_SERIE || '-' || L_NRO_RETENCION || '-' ||L_PROVEEDOR||'-'||L_CUENTA_CORRIENTE || '-PAGO DE RETENCIONES'), 1, 50),
                        P_ERROR,P_MSGERROR);
                        
                        --END IF;
                        
                        /*OPEN ret;
                        FETCH ret INTO L_ID_RETDETALLE,L_IMPORTE_RET,L_DETALLE;
                        WHILE ret%FOUND LOOP
                            PKG_CAJA.SP_GENERAR_ASIENTO_RET_DET(12,L_ID_RETDETALLE,L_ID_DINAMICA,L_ID_CTABANCARIA,L_IMPORTE_RET,L_DETALLE,P_ERROR,P_MSGERROR);
                        FETCH ret INTO L_ID_RETDETALLE,L_IMPORTE_RET,L_DETALLE;
                        END LOOP;
                        CLOSE ret;*/
                end if;
            ELSE
                P_ERROR := 1;
                P_MSGERROR := 'Error Al finalizar retención, La suma del importe de los items es cero(0).';
            END IF;
        elsif (L_CANT = 0) THEN
            P_ERROR := 1;
            P_MSGERROR := 'Error al finalizar retención, No exite asiento para retenciones.';
        /*
        elsif (L_CANT > 1) THEN
            P_ERROR := 1;
            P_MSGERROR := 'ERROR AL FINALIZAR, HAY MAS DE UN ASIENTO PARA LA RETENCION';
            */
        END IF;
    END SP_FINALIZAR_RETENCION;
    
    -- Este procedimiento crea o actualiza
    PROCEDURE SP_CREAR_DETRACCION(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_MEDIOPAGO VARCHAR2,P_ID_VOUCHER NUMBER,P_ID_PERSONA NUMBER,P_ID_PROVEEDOR NUMBER,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_CTABANCARIA NUMBER,
                                P_ID_CHEQUERA NUMBER,P_ID_OPERACION VARCHAR2,P_ID_TIPOBIENSERVICIO VARCHAR2,P_ID_MONEDA  NUMBER,P_AUTODETRACCION VARCHAR2,P_NUMERO VARCHAR2,P_NRO_CONSTANCIA VARCHAR2,P_NRO_OPERACION VARCHAR2,
                                P_FECHA_EMISION DATE,P_ID_COMPRA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER,P_ID_DETRACCION IN OUT NUMBER,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_TIPO_AUTO VARCHAR2 default null) IS
                              
        l_detraccion number:=0;
        l_estado varchar2(1):='0'; --1:vigente, 0:anulado
        L_ID_CTABANCARIA number := null;
        L_CTA_CTE_CTABANCARIA varchar2(100):='';
        L_ID_CHEQUERA number :=null;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        L_FECHA date;
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        L_DETALLE VARCHAR2(255);
        BEGIN
            
            IF LENGTH(P_NRO_CONSTANCIA) > 10 THEN 
                    l_error := 1;
                    l_msgerror := 'El número de constancia de la detracción debe contener máximo 10 caracteres.';
            END IF;
            IF LENGTH(P_NRO_OPERACION) > 18 THEN 
                    l_error := 1;
                    l_msgerror := 'El número de operación de la detracción debe contener máximo 18 caracteres.';
            END IF;
            
            if l_error=0 then
      
        
                IF P_ID_CTABANCARIA IS NULL OR P_ID_CTABANCARIA = 0 THEN
                    L_ID_CTABANCARIA:=null;
                    L_CTA_CTE_CTABANCARIA := '';
                ELSE
                    L_ID_CTABANCARIA:=P_ID_CTABANCARIA;
                    SELECT COALESCE(CUENTA_CORRIENTE,' ') INTO L_CTA_CTE_CTABANCARIA FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA=P_ID_CTABANCARIA;
                END IF;
                IF P_ID_CHEQUERA IS NULL OR P_ID_CHEQUERA = 0 THEN
                    L_ID_CHEQUERA:=null;
                ELSE
                    L_ID_CHEQUERA:=P_ID_CHEQUERA;
                END IF;
                IF P_FECHA_EMISION IS NULL THEN
                    L_FECHA := NULL;
                ELSE
                    L_FECHA := P_FECHA_EMISION;
                END IF;
                
                IF P_ID_DETRACCION <> 0 THEN -- Actualizar
                    UPDATE CAJA_DETRACCION
                    SET 
                       ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                       ID_PERSONA = P_ID_PERSONA,
                       ID_CTABANCARIA = L_ID_CTABANCARIA,
                       ID_CHEQUERA = L_ID_CHEQUERA,
                       ID_OPERACION = P_ID_OPERACION,
                       ID_TIPOBIENSERVICIO = P_ID_TIPOBIENSERVICIO,
                       ID_MONEDA = P_ID_MONEDA,
                       NUMERO = P_NUMERO,
                       NRO_CONSTANCIA = P_NRO_CONSTANCIA,
                       NRO_OPERACION = P_NRO_OPERACION,
                       FECHA_EMISION = L_FECHA,
                       TIPO_AUTODETRACCION = P_TIPO_AUTO
                    WHERE 
                    ID_DETRACCION=P_ID_DETRACCION;
                    
                ELSE -- Nuevo 
                    --SELECT coalesce(max(ID_DETRACCION),0)+1 into l_detraccion FROM CAJA_DETRACCION;
                    INSERT INTO CAJA_DETRACCION(
                        --ID_DETRACCION,
                        ID_ENTIDAD,
                        ID_DEPTO,
                        ID_MEDIOPAGO,
                        ID_VOUCHER,
                        ID_PERSONA,
                        ID_PROVEEDOR,
                        ID_ANHO,
                        ID_MES,
                        ID_CTABANCARIA,
                        ID_CHEQUERA,
                        ID_OPERACION,
                        ID_TIPOBIENSERVICIO,
                        ID_MONEDA,
                        AUTODETRACCION,
                        NUMERO,
                        NRO_CONSTANCIA,
                        NRO_OPERACION,
                        FECHA_EMISION,
                        FECHA,
                        ESTADO,
                        TIPO_AUTODETRACCION
                    )VALUES(
                      -- l_detraccion,
                      P_ID_ENTIDAD, 
                      P_ID_DEPTO, 
                      P_ID_MEDIOPAGO,
                      P_ID_VOUCHER, 
                      P_ID_PERSONA, 
                      P_ID_PROVEEDOR, 
                      P_ID_ANHO, 
                      P_ID_MES, 
                      L_ID_CTABANCARIA,
                      L_ID_CHEQUERA,
                      P_ID_OPERACION,
                      P_ID_TIPOBIENSERVICIO,
                      P_ID_MONEDA,
                      P_AUTODETRACCION,
                      P_NUMERO,
                      P_NRO_CONSTANCIA,
                      P_NRO_OPERACION,
                      L_FECHA,
                      sysdate,
                      l_estado,
                      P_TIPO_AUTO
                    ) returning id_detraccion INTO l_detraccion;
                    P_ID_DETRACCION :=l_detraccion;  
                END IF;
            end if;
        IF l_error = 0 THEN
            -- Eliminar los detalle que tuviece y los asientos que tuviece para crear uno nuevo.
            DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN=11 AND ID_ORIGEN = P_ID_DETRACCION;

            -- DELETE CAJA_DETRACCION_COMPRA WHERE ID_DETRACCION=P_ID_DETRACCION;
            -- Volvemos a crear todo.
            /*PKG_CAJA.SP_CREAR_DETRACCION_DETALLE(P_ID_DETRACCION,P_ID_COMPRA,P_ID_DINAMICA,P_IMPORTE,P_IMPORTE_ME,P_ERROR,P_MSGERROR);
            SELECT NVL(SUM(IMPORTE),0),NVL(SUM(IMPORTE_ME),0) INTO L_IMPORTE, L_IMPORTE_ME
            FROM CAJA_DETRACCION_COMPRA
            WHERE ID_DETRACCION = P_ID_DETRACCION;*/



            --IF P_TIPO_AUTO = 'S' AND P_AUTODETRACCION = 'S' THEN
            IF P_TIPO_AUTO IN ('S','C') AND P_AUTODETRACCION = 'S' THEN
                DELETE CAJA_DETRACCION_VENTA WHERE ID_DETRACCION=P_ID_DETRACCION;

                -- P_ID_COMPRA cuando es autodetraccion el contenido es id_venta

                PKG_CAJA.SP_CREAR_AUTO_DETRAC_DETALLE(P_ID_DETRACCION,P_ID_COMPRA,P_ID_DINAMICA,P_IMPORTE,P_IMPORTE_ME,P_ERROR,P_MSGERROR);
                SELECT NVL(SUM(IMPORTE),0),NVL(SUM(IMPORTE_ME),0),DETALLE INTO L_IMPORTE, L_IMPORTE_ME,L_DETALLE
                FROM CAJA_DETRACCION_VENTA
                WHERE ID_DETRACCION = P_ID_DETRACCION
                GROUP BY DETALLE;
            ELSE

                DELETE CAJA_DETRACCION_COMPRA WHERE ID_DETRACCION=P_ID_DETRACCION;

                PKG_CAJA.SP_CREAR_DETRACCION_DETALLE(P_ID_DETRACCION,P_ID_COMPRA,P_ID_DINAMICA,P_IMPORTE,P_IMPORTE_ME,P_ERROR,P_MSGERROR);
                SELECT NVL(SUM(IMPORTE),0),NVL(SUM(IMPORTE_ME),0),DETALLE INTO L_IMPORTE, L_IMPORTE_ME,L_DETALLE
                FROM CAJA_DETRACCION_COMPRA
                WHERE ID_DETRACCION = P_ID_DETRACCION
                GROUP BY DETALLE;

            END IF;

            IF P_TIPO_AUTO <> 'S' AND P_AUTODETRACCION = 'S' AND ( L_IMPORTE+NVL(L_IMPORTE_ME,0)) = 0 THEN
                UPDATE CAJA_DETRACCION SET   IMPORTE = L_IMPORTE, 
                                            ESTADO = '1'
                WHERE ID_DETRACCION = P_ID_DETRACCION;
            ELSE
            
                IF L_IMPORTE+L_IMPORTE_ME > 0 THEN
                    UPDATE CAJA_DETRACCION SET   IMPORTE = L_IMPORTE, 
                                                ESTADO = '1'
                    WHERE ID_DETRACCION = P_ID_DETRACCION;
                    
                    l_error := 0;
                    P_MSGERROR := 'La detracción se finalizó con éxito.';
                    
                    
                    if P_ERROR=0  then
                        P_ERROR := 0;
                           --PKG_CAJA.SP_GENERAR_ASIENTO_PAGO(P_ID_RETENCION,P_ERROR,P_MSGERROR);
                           --11 = ID_OPERORIGEN = DETRACCION
                           PKG_CAJA.SP_GENERAR_ASIENTO_RET_DET(11,P_ID_DETRACCION,P_ID_DINAMICA,L_ID_CTABANCARIA,P_IMPORTE,
                           --SUBSTR((P_ID_ENTIDAD || '- Det.:' || P_NRO_CONSTANCIA || '-' || P_NRO_OPERACION || '-' || L_CTA_CTE_CTABANCARIA || '-PAGO DE DETRACCIONES'), 1, 50),
                           L_DETALLE,
                           P_ERROR,P_MSGERROR);
                    end if;
                ELSE
                    l_error := 1;
                    l_msgerror := 'Error al finalizar detracción, la suma del importe de los items es cero(0).';
                END IF;
            END IF;
        ELSE
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
        END IF;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_DETRACCION;
    PROCEDURE SP_CREAR_DETRACCION_DETALLE(P_ID_DETRACCION NUMBER,P_ID_COMPRA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
        l_id_detdetalle number;
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_importe_me number(10,2);
        L_NRO_OPERACION VARCHAR(20);
        L_DETALLE VARCHAR2(255);
        L_ID_PROVEEDOR NUMBER;
        L_ID_COMPRA NUMBER;
        L_ID_SALDO NUMBER;
    
        BEGIN
            l_error:=0;
            
            SELECT ID_PROVEEDOR,NRO_OPERACION INTO L_ID_PROVEEDOR,L_NRO_OPERACION
            FROM CAJA_DETRACCION
            WHERE ID_DETRACCION = P_ID_DETRACCION;
            
            SELECT 
                COUNT(1) INTO l_contar
            FROM COMPRA
            WHERE ID_COMPRA = P_ID_COMPRA AND ID_PROVEEDOR = L_ID_PROVEEDOR;
            
            IF l_contar > 0 THEN
                SELECT 
                    ID_ENTIDAD||'-'||ID_DEPTO||', Det.:'||L_NRO_OPERACION||' Doc:'||SERIE||'-'||NUMERO||' '||FC_NOMBRE_PERSONA(ID_PROVEEDOR) INTO L_DETALLE
                FROM COMPRA
                WHERE ID_COMPRA = P_ID_COMPRA AND ID_PROVEEDOR = L_ID_PROVEEDOR;
                L_ID_COMPRA := P_ID_COMPRA;
                L_ID_SALDO := NULL;
            ELSE
                SELECT 
                    ID_ENTIDAD||'-'||ID_DEPTO||', Det.:'||L_NRO_OPERACION||' Doc:'||SERIE||'-'||NUMERO||' '||FC_NOMBRE_PERSONA(ID_PROVEEDOR) INTO L_DETALLE
                FROM COMPRA_SALDO
                WHERE ID_SALDO = P_ID_COMPRA AND ID_PROVEEDOR = L_ID_PROVEEDOR;
                L_ID_COMPRA := NULL;
                L_ID_SALDO := P_ID_COMPRA;
            END IF;
            
            -- SELECT coalesce(max(ID_DETDETALLE),0)+1 into l_id_detdetalle FROM CAJA_DETRACCION_COMPRA;
        
            if l_error=0 then
                --IF NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0) > 0 THEN
                    INSERT INTO CAJA_DETRACCION_COMPRA(
                    -- ID_DETDETALLE,
                    ID_DETRACCION,
                    ID_COMPRA,
                    ID_DINAMICA,
                    IMPORTE,
                    IMPORTE_ME,
                    DETALLE,
                    ID_SALDO
                    )values(
                    --l_id_detdetalle,
                    P_ID_DETRACCION,
                    L_ID_COMPRA,
                    P_ID_DINAMICA,
                    P_IMPORTE,
                    P_IMPORTE_ME,
                    L_DETALLE,
                    L_ID_SALDO
                    ) returning id_detdetalle INTO l_id_detdetalle;
                    l_msgerror:='Pago OK';
                /*ELSE
                    l_error := 1;
                    l_msgerror:='No existen Importes';
                END IF;*/
            end if;  
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_DETRACCION_DETALLE;
    PROCEDURE SP_CREAR_AUTO_DETRAC_DETALLE(P_ID_DETRACCION NUMBER,P_ID_VENTA NUMBER,P_ID_DINAMICA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
        l_id_detdetalle number;
        l_contar number;
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_importe_me number(10,2);
        L_NRO_OPERACION VARCHAR(20);
        L_DETALLE VARCHAR2(255);
    
        BEGIN
            l_error:=0;
            
            SELECT NRO_OPERACION INTO L_NRO_OPERACION
            FROM CAJA_DETRACCION
            WHERE ID_DETRACCION = P_ID_DETRACCION;
            
            SELECT 
                ID_ENTIDAD||'-'||ID_DEPTO||', Det.:'||L_NRO_OPERACION||' Doc:'||SERIE||'-'||NUMERO||' '||FC_NOMBRE_PERSONA(ID_CLIENTE) INTO L_DETALLE
            FROM VENTA
            WHERE ID_VENTA = P_ID_VENTA;
            
            --SELECT coalesce(max(ID_DETDETALLE),0)+1 into l_id_detdetalle FROM CAJA_DETRACCION_VENTA;
        
            if l_error=0 then
                IF NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0) > 0 THEN
                    INSERT INTO CAJA_DETRACCION_VENTA(
                    --ID_DETDETALLE,
                    ID_DETRACCION,
                    ID_VENTA,
                    ID_DINAMICA,
                    IMPORTE,
                    IMPORTE_ME,
                    DETALLE
                    )values(
                    --l_id_detdetalle,
                    P_ID_DETRACCION,
                    P_ID_VENTA,
                    P_ID_DINAMICA,
                    P_IMPORTE,
                    P_IMPORTE_ME,
                    L_DETALLE
                    ) returning id_detdetalle INTO l_id_detdetalle;
                    l_msgerror:='Pago OK';
                ELSE
                    l_error := 1;
                    l_msgerror:='No existen Importes';
                END IF;
            end if;  
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_AUTO_DETRAC_DETALLE;
    PROCEDURE SP_GENERAR_ASIENTO_RET_DET(P_ID_OPERORIGEN NUMBER,P_ID_ORIGEN NUMBER,P_ID_DINAMICA NUMBER,P_ID_CTABANCARIA NUMBER,P_IMPORTE NUMBER,P_DETALLE VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_dinamica number;
        l_asiento number;
        l_detalle varchar2(255);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_tarjeta number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_operorigen number:=11; --DETRACCIONES
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        l_id_cliente number;
        l_id_depto_ret_det varchar2(20);
        
        CURSOR cdet IS	
        SELECT  ID_DINAMICA,ID_ENTIDAD
        FROM CONTA_DINAMICA 
        WHERE ID_DINAMICA=P_ID_DINAMICA;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;

    BEGIN
     
        l_detalle:=P_DETALLE;
        l_importe:= P_IMPORTE;
     
        l_fondo:='10';
        IF P_ID_OPERORIGEN = 12 THEN
            SELECT ID_DEPTO, ID_PROVEEDOR,ID_VOUCHER INTO l_id_depto_ret_det, l_id_cliente,l_voucher FROM CAJA_RETENCION WHERE ID_RETENCION = P_ID_ORIGEN;
        ELSE
            SELECT ID_DEPTO, ID_PROVEEDOR,ID_VOUCHER INTO l_id_depto_ret_det, l_id_cliente,l_voucher FROM CAJA_DETRACCION WHERE ID_DETRACCION = P_ID_ORIGEN;
        END IF;
        
        SELECT to_char(P_ID_OPERORIGEN) || '-' ||to_char(P_ID_ORIGEN) INTO l_memo FROM DUAL;

     --DETALLE
      OPEN cdet;
      FETCH cdet INTO l_dinamica,l_id_entidad;

      WHILE cdet%FOUND LOOP
        
            ---DENAMICA ASIENTO
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
            WHILE casi%FOUND LOOP
            
                select case when l_id_indicador='IMPORTE' then 
                            (l_importe)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then
                            (l_importe_tarjeta)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TRANS' then
                               (l_importe_trans)*(l_porcentaje)
                              
                          else
                          0
                          end into l_importeasiento
                from dual;
                
                l_depto:=null;
                l_cuenta_cte:=null;
                
                if l_unico='U' then
                  select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif(l_unico='M') then
                   SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                   if l_buscar>0 then
                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                     select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                     select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                   else
                    l_depto:=l_deptos;
                   end if;
                elsif(l_unico='X') then
                   select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                ELSIF l_unico='S' THEN -- Si es sesión
                    l_depto := l_id_depto_ret_det;
                end if;
                
                if l_unicoctate='U' then
                  select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                  if l_cont>0 then
                    select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                  end if;
                elsif(l_unicoctate='M') then
                   SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                   if l_buscar>0 then
                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                     select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                     select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                   else
                    l_cuenta_cte:=l_ctates;
                   end if;
                elsif(l_unicoctate='X') then
                    select ID_RUC into l_cuenta_cte from MOISES.VW_PERSONA_JURIDICA where ID_PERSONA=l_id_cliente;  
                elsif(l_unicoctate='B') then--LA CTA CTE SE OBTIENE DEL LA CTA BANCARIA
                    SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                end if;
                
                
                
                if l_dc='C' then
                  l_importeasiento:=l_importeasiento*(-1);
                end if;
                
                
                select count(*) into l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=P_ID_OPERORIGEN
                and ID_ORIGEN=P_ID_ORIGEN
                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'D' else 'C' end=l_dc;
                
                --NUEVA GLOSA 
                IF P_ID_OPERORIGEN = 11 THEN
                    IF l_dc = 'C' THEN
                        SELECT 
                        A.ID_ENTIDAD||'-'||A.ID_DEPTO||'- '||C.SIGLA||' - Det. - '||A.NRO_OPERACION||' - '||TO_CHAR(A.FECHA_EMISION,'DD/MM/YY')||'-'||D.NOMBRE||'-'||D.ID_RUC AS GLOSA INTO l_detalle
                        FROM CAJA_DETRACCION A JOIN CAJA_CUENTA_BANCARIA B
                        ON A.ID_CTABANCARIA = B.ID_CTABANCARIA
                        JOIN CAJA_ENTIDAD_FINANCIERA C
                        ON B.ID_BANCO = C.ID_BANCO
                        LEFT JOIN MOISES.VW_PERSONA_NATURAL_LEGAL D
                        ON A.ID_PROVEEDOR = D.ID_PERSONA
                        WHERE A.ID_DETRACCION = P_ID_ORIGEN AND ROWNUM<=1;
                    /*ELSE
                        SELECT 
                        ID_ENTIDAD||'-'||ID_DEPTO||'- Det. - '||NRO_OPERACION||' - '||TO_CHAR(FECHA_EMISION,'DD/MM/YY')||'-'||B.NOMBRE||'-'||B.ID_RUC AS GLOSA INTO l_detalle
                        FROM CAJA_DETRACCION A LEFT JOIN MOISES.VW_PERSONA_NATURAL_LEGAL B
                        ON A.ID_PROVEEDOR = B.ID_PERSONA
                        WHERE ID_DETRACCION = P_ID_ORIGEN;*/
                    END IF;
                END IF;
                
                if l_importeasiento<>0 then
                
                  if l_cont=0 then
                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    P_ID_OPERORIGEN,
                    P_ID_ORIGEN,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    substr(l_detalle,1,50),
                    l_memo,
                    l_voucher,
                    null,
                    l_ref_id,
                    l_agrupa
                    );
                  else
                  
                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=P_ID_OPERORIGEN
                    and ID_ORIGEN=P_ID_ORIGEN
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                    
                  end if;
                end if;
                  --DESTINO
                  OPEN casides;
                  FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  WHILE casides%FOUND LOOP
                  
                    -- En la distribución de gasto de la compra tiene otros departamentos?
                    
                  
                    select case when l_id_indicadord='IMPORTE' then 
                            (l_importe)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TARJETA' then
                              (l_importe_tarjeta)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TRANS' then
                               (l_importe_trans)*(l_porcentaje)
                          else
                          0
                          end into l_importeasiento
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                  
                    if l_unicod='U' then
                      select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                    elsif(l_unicod='M') then
                       SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into l_depto from dual;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif(l_unicod='X') then
                       select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                    end if;
                    
                    if l_unicoctated='U' then
                      select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      if l_cont>0 then
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      end if;

                    elsif(l_unicoctated='M') then
                       SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into l_cuenta_cte from dual;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif(l_unicoctated='X') then
                      select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                    end if;
                    
                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    if l_importeasiento<>0 then
                    
                      select count(*) into l_cont from CONTA_ASIENTO
                      where ID_TIPOORIGEN=P_ID_OPERORIGEN
                      and ID_ORIGEN=P_ID_ORIGEN
                      and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                      and CUENTA =l_id_cuentaaasid
                      and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                      and case when importe>0 then 'D' else 'C' end=l_dc;
                      
                    
                      IF l_agrupa='S' and l_cont>0 THEN
                        update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                        where ID_TIPOORIGEN=P_ID_OPERORIGEN
                        and ID_ORIGEN=P_ID_ORIGEN
                        and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                        and CUENTA =l_id_cuentaaasid
                        and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                        and case when importe>0 then 'D' else 'C' end=l_dc;
                      
                      ELSE
                        INSERT INTO CONTA_ASIENTO (
                        ID_TIPOORIGEN,
                        ID_ORIGEN, 
                        FONDO,
                        DEPTO,
                        CUENTA, 
                        CUENTA_CTE,
                        RESTRICCION,
                        IMPORTE,
                        DESCRIPCION,
                        MEMO,
                        VOUCHER, 
                        PARENT_ID,
                        REF_ID,
                        AGRUPA
                        )VALUES ( 
                        P_ID_OPERORIGEN,
                        P_ID_ORIGEN,
                        l_fondo,
                        l_depto,
                        l_id_cuentaaasid,
                        l_cuenta_cte,
                        l_id_restricciond,
                        l_importeasiento,
                        l_detalle,
                        l_memo,
                        l_voucher,
                        null,
                        l_ref_id,
                        l_agrupa
                        );
                      END IF;
                    
                      
                    end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  END LOOP;
                  CLOSE casides; 
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                
              END LOOP;
              CLOSE casi; 

            FETCH cdet INTO l_dinamica,l_id_entidad;

        END LOOP;
        CLOSE cdet; 
        
        
        select count(*) into l_contar from CONTA_ASIENTO
        where ID_TIPOORIGEN=P_ID_OPERORIGEN
        and ID_ORIGEN=P_ID_ORIGEN;
        
        if l_contar=0 then
            l_error:=3; --no se ha generado el asiento
            if P_ID_OPERORIGEN = 11 then
                l_msgerror:='Asiento Detraccion: No se ha generado el asiento';
            else 
                l_msgerror:='Asiento Retencion: No se ha generado el asiento';
            end if;   
        else
            select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
            COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
            into l_debito,l_credito
            from CONTA_ASIENTO
            where ID_TIPOORIGEN=P_ID_OPERORIGEN
            and ID_ORIGEN=P_ID_ORIGEN;
          
            if l_credito=0 or l_credito=0 then
                l_error:=4; --importe de debito o credito igual a cero
                if P_ID_OPERORIGEN = 11 then
                    l_msgerror:='Asiento Detraccion: Importe de débito o crédito igual a cero';
                else
                    l_msgerror:='Asiento Retencion: Importe de débito o crédito igual a cero';
                end if;
                
            else
                if l_credito<>l_credito then
                    l_error:=5; --descuadre de asiento
                    if P_ID_OPERORIGEN = 11 then
                        l_msgerror:='Asiento Detraccion: Descuadre de asiento';
                    else
                        l_msgerror:='Asiento Retencion: Descuadre de asiento';
                    end if;
                    
                end if;
            end if;
          
        end if;
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_GENERAR_ASIENTO_RET_DET;
    FUNCTION FC_CUENTA_BANCARIA(P_ID_CTABANCARIA IN NUMBER) RETURN VARCHAR2 IS
        L_CUENTA_CORRIENTE VARCHAR2(255);
        BEGIN
            SELECT 
                    NVL(CUENTA_CORRIENTE,'') INTO L_CUENTA_CORRIENTE
            FROM CAJA_CUENTA_BANCARIA
            WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
            
            RETURN (L_CUENTA_CORRIENTE);
    END;
    FUNCTION FC_NAME_CTA_BANCARIA(P_ID_CTABANCARIA IN NUMBER) RETURN VARCHAR2 IS
        L_CUENTA_CORRIENTE VARCHAR2(255);
        BEGIN
            SELECT NVL(A.SIGLA||' - '||B.NOMBRE,'') INTO L_CUENTA_CORRIENTE
            FROM CAJA_ENTIDAD_FINANCIERA A JOIN CAJA_CUENTA_BANCARIA B ON A.ID_BANCO = B.ID_BANCO
            WHERE B.ID_CTABANCARIA = P_ID_CTABANCARIA;
            
            RETURN (L_CUENTA_CORRIENTE);
    END;
    
    FUNCTION FC_RUC(P_ID_PROVEEDOR NUMBER) RETURN VARCHAR2 AS
        L_ID_RUC VARCHAR2(50);
    BEGIN
            SELECT ID_RUC INTO L_ID_RUC FROM (
            SELECT ID_RUC AS ID_RUC
            FROM MOISES.VW_PERSONA_JURIDICA
            WHERE ID_PERSONA = P_ID_PROVEEDOR
            UNION ALL
            SELECT NUM_DOCUMENTO AS ID_RUC
            FROM MOISES.VW_PERSONA_NATURAL
            WHERE ID_PERSONA = P_ID_PROVEEDOR
            AND ID_TIPODOCUMENTO=6
             ) X where rownum =1;
             
            RETURN(L_ID_RUC);
    END;
    FUNCTION FC_NOMBRE_CTA_BANCARIA(P_ID_CHEQUERA IN NUMBER) RETURN VARCHAR2 IS
        L_BANCO VARCHAR2(255);
        BEGIN
            SELECT 
            A.SIGLA||' - '||B.NOMBRE||' - '||B.CUENTA_CORRIENTE INTO L_BANCO
            FROM CAJA_ENTIDAD_FINANCIERA A JOIN CAJA_CUENTA_BANCARIA B
            ON A.ID_BANCO = B.ID_BANCO
            JOIN CAJA_CHEQUERA C
            ON B.ID_CTABANCARIA = C.ID_CTABANCARIA
            WHERE C.ID_CHEQUERA = P_ID_CHEQUERA;
            
            RETURN (L_BANCO);
    END;
    FUNCTION FC_VALE_COMPROBANTE(P_ID_VALE IN NUMBER) RETURN VARCHAR2 IS
        L_IMPORTE NUMBER(10,2);
        BEGIN
            SELECT SUM(IMPORTE) AS IMPORTE INTO L_IMPORTE
            FROM PEDIDO_COMPRA WHERE ID_VALE = P_ID_VALE;
            
            RETURN (L_IMPORTE);
    END;
    FUNCTION FC_VALE_GASTO(P_ID_VALE IN NUMBER) RETURN VARCHAR2 IS
        L_IMPORTE NUMBER(10,2);
        BEGIN
            SELECT SUM(IMPORTE) AS IMPORTE INTO L_IMPORTE
            FROM CAJA_VALE_GASTO  WHERE ID_VALE = P_ID_VALE AND AUTORIZADO <> 'R';
            
            RETURN (L_IMPORTE);
    END;
   PROCEDURE SP_VALIDAR_AJUSTE_PAGO_COMPRA(P_ID_PAGO_COMPRA NUMBER, P_ID_PERSONA NUMBER, P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2)
   IS
        L_ID_PAGO NUMBER;
        L_ID_COMPRA NUMBER;
        L_ID_MONEDA_PAGO NUMBER;
        
        L_IMPORTE_ME_COMPRA NUMBER;
        L_TIPOCAMBIO_COMPRA NUMBER;
        L_ID_VOUCHER_COMPRA NUMBER;
        L_ID_PROVEEDOR_COMPRA NUMBER;
        L_CORRELATIVO_COMPRA NUMBER;
        
        L_IMPORTE_PAGO_TCC NUMBER :=0; -- Importe pagado según el tipo de cambio de la compra.
        L_IMPORTE_PAGO_TCC_DIF NUMBER :=0; -- Diferencia
        L_IMPORTE_PAGO_TCC_DIF_POS NUMBER :=0; -- Diferencia
        
        L_ID_ENTIDAD_PAGO NUMBER;
        L_ID_DEPTO_PAGO NUMBER;
        L_ID_ANHO_PAGO NUMBER;
        L_ID_MES_PAGO NUMBER;
        L_ID_PERSONA_PAGO NUMBER;
        L_ID_VOUCHER_PAGO NUMBER;
        L_FECHA_REG_PAGO DATE;
        
        L_DC_AJUSTE VARCHAR2(10):='';
        L_ID_DINAMICA NUMBER:=0;
        L_ID_AJUSTE NUMBER:=0;
        L_ID_TIPOORIGEN_AJUSTE NUMBER:=0;
        L_NUMERO_AJUSTE VARCHAR2(8):='';
        L_FECHA_AJUSTE DATE;
        
        L_IMPORTE_PAGO NUMBER;
        L_IMPORTE_ME_PAGO NUMBER;
   
   
        L_ID_ASIENTO NUMBER;
        L_ID_PARENT NUMBER;
        L_ID_TIPO_PLAN NUMBER;
        L_ID_RESTRICCION VARCHAR2(50);
        L_ID_CUENTAAASI VARCHAR2(10);
        L_DC VARCHAR2(1);
        L_DESTINO VARCHAR2(1);
        L_ID_INDICADOR VARCHAR2(35);
        L_UNICO VARCHAR2(1);
        L_UNICOCTACTE VARCHAR2(1);
        L_PORCENTAJE NUMBER(10,2);
        L_DESCRIPCION VARCHAR2(255);
        L_AGRUPA VARCHAR2(1);
        
        L_ID_FONDO VARCHAR2(50);
        
        L_IMPORTE NUMBER(10,2):=0;
        L_IMPORTE_ME NUMBER(10,2):=0;
        
        L_DEPTO VARCHAR2(10);
        l_DEPTOS VARCHAR2(200) := '';
        L_CUENTA_CTE VARCHAR2(50);
        L_CTATES VARCHAR2(200);
        L_BUSCAR NUMBER;
        
        L_CTAS varchar2(200);
        L_ACTAS tablastring;
        L_ADEPTOS tablastring;
        L_ACTATES tablastring;
        
        L_CONT number;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,
        a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA,A.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
   
        l_error number:=0;
        l_msgerror varchar2(200):='';
   BEGIN
        l_error:=0;
        --l_msgerror:=P_ID_PAGO_COMPRA;
        IF l_error = 0 THEN
           
           SELECT ID_PAGO, ID_COMPRA, COALESCE(IMPORTE, 0), COALESCE(IMPORTE_ME, 0), ID_DINAMICA INTO L_ID_PAGO, L_ID_COMPRA,
           L_IMPORTE_PAGO, L_IMPORTE_ME_PAGO, L_ID_DINAMICA
           FROM CAJA_PAGO_COMPRA WHERE ID_PCOMPRA=P_ID_PAGO_COMPRA;
           
           SELECT  COALESCE(IMPORTE_ME, 0), COALESCE(TIPOCAMBIO, 0), ID_VOUCHER, ID_PROVEEDOR, CORRELATIVO 
                INTO L_IMPORTE_ME_COMPRA, L_TIPOCAMBIO_COMPRA, L_ID_VOUCHER_COMPRA, L_ID_PROVEEDOR_COMPRA, L_CORRELATIVO_COMPRA
                FROM COMPRA WHERE ID_COMPRA = L_ID_COMPRA;
           
           SELECT ID_MONEDA, ID_ENTIDAD, ID_DEPTO, ID_ANHO, ID_MES, ID_PERSONA, ID_VOUCHER, FECHA_REG INTO L_ID_MONEDA_PAGO, L_ID_ENTIDAD_PAGO,
           L_ID_DEPTO_PAGO
           , L_ID_ANHO_PAGO, L_ID_MES_PAGO, L_ID_PERSONA_PAGO, L_ID_VOUCHER_PAGO, L_FECHA_REG_PAGO
           FROM CAJA_PAGO WHERE ID_PAGO=L_ID_PAGO;
           
           IF L_ID_MONEDA_PAGO <> '7' THEN -- Moneda extranjera
               L_IMPORTE_PAGO_TCC := (L_IMPORTE_ME_PAGO * L_TIPOCAMBIO_COMPRA);
               
               L_IMPORTE_PAGO_TCC_DIF := L_IMPORTE_PAGO-L_IMPORTE_PAGO_TCC;
               
               IF L_IMPORTE_PAGO_TCC_DIF<>0 THEN
                    -- Agregar Ajuste
                    IF L_IMPORTE_PAGO_TCC_DIF > 0 THEN
                        L_DC_AJUSTE := 'D';
                        L_IMPORTE_PAGO_TCC_DIF_POS:=L_IMPORTE_PAGO_TCC_DIF;
                    ELSE 
                        L_DC_AJUSTE := 'C';
                        L_IMPORTE_PAGO_TCC_DIF_POS := L_IMPORTE_PAGO_TCC_DIF*-1;
                    END IF;
                    
                    -- Eliminar ajustes anteriores y sus asientos
                    DELETE CONTA_ASIENTO WHERE ID_TIPOORIGEN=4 AND ID_ORIGEN IN ( 
                                SELECT ID_AJUSTE FROM COMPRA_AJUSTE WHERE ID_DINAMICA=L_ID_DINAMICA AND ID_COMPRA=L_ID_COMPRA);
                    DELETE COMPRA_AJUSTE WHERE ID_DINAMICA=L_ID_DINAMICA AND ID_COMPRA=L_ID_COMPRA;
                    
                    pkg_purchases.SP_CREAR_AJUSTE(
                    L_ID_ENTIDAD_PAGO, L_ID_DEPTO_PAGO, L_ID_ANHO_PAGO, L_ID_MES_PAGO, P_ID_PERSONA, L_ID_COMPRA,
                    L_ID_DINAMICA,
                    L_ID_VOUCHER_PAGO, L_FECHA_REG_PAGO, L_IMPORTE_PAGO_TCC_DIF_POS, 
                    --IMPORTE_ME,
                    0, L_DC_AJUSTE, L_ID_AJUSTE, l_error );
                    
                    
                    IF l_error = 0 AND L_ID_DINAMICA IS NOT NULL THEN
                        OPEN casi;
                        FETCH casi INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPO_PLAN, L_ID_RESTRICCION,
                                    L_ID_CUENTAAASI,L_DC, L_DESTINO, L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,
                                    L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA, L_ID_FONDO;
                        
                        WHILE casi%FOUND LOOP
                        
                            L_DEPTO:=NULL;
                            L_CUENTA_CTE:=NULL;
                            
                            IF L_UNICO='U' THEN -- Único
                                -- SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD;
                                SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ASIENTO=L_ID_ASIENTO;
                            ELSIF(L_UNICO='M') THEN -- Muchos
                                SELECT INSTR(l_DEPTOS, '|') INTO L_BUSCAR FROM dual;
                                IF L_BUSCAR>0 THEN
                                    SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM dual;
                                    SELECT FC_SPLIT(L_DEPTOS,'|') INTO L_ADEPTOS  FROM dual; 
                                    SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ADEPTOS ,L_ID_CUENTAAASI) INTO L_DEPTO FROM dual;
                                ELSE
                                    L_DEPTO:=L_DEPTOS;
                                END IF;
                            ELSIF L_UNICO='S' THEN -- Si es sesión
                                L_DEPTO := L_ID_DEPTO_PAGO;
                            END IF;
                            
                            IF L_UNICOCTACTE='U' THEN
                              SELECT  count(*) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=L_ID_ASIENTO;
                              if L_CONT>0 THEN
                                SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=L_ID_ASIENTO;
                              END IF;
                            ELSIF(L_UNICOCTACTE='M') THEN
                               SELECT INSTR(L_CTATES, '|') INTO L_BUSCAR FROM dual;
                               if l_buscar>0 THEN
                                 SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM dual;
                                 SELECT FC_SPLIT(L_CTATES,'|') INTO L_ACTATES  FROM dual; 
                                 SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ACTATES ,L_ID_CUENTAAASI) INTO L_CUENTA_CTE FROM dual;
                               ELSE
                                L_CUENTA_CTE:=L_CTATES;
                               END IF;
                            ELSIF(L_UNICOCTACTE='X') THEN
                                SELECT PKG_PURCHASES.FC_RUC(L_ID_PROVEEDOR_COMPRA) into L_CUENTA_CTE from dual;
                            END IF;
                            
                            L_IMPORTE :=  (L_IMPORTE_PAGO_TCC_DIF)*(L_PORCENTAJE);
                            IF L_DC='C' THEN
                                L_IMPORTE:= case when L_IMPORTE > 0 then L_IMPORTE *(-1) ELSE L_IMPORTE END;
                                L_IMPORTE_ME:=0;
                             ELSE 
                                L_IMPORTE := case when L_IMPORTE > 0 then L_IMPORTE ELSE L_IMPORTE *(-1) END;
                                L_IMPORTE_ME := 0;
                            END IF;
                           
                        	IF L_IMPORTE <> 0 THEN 
                        	
	                            SELECT ID_TIPOORIGEN, NUMERO, FECHA INTO L_ID_TIPOORIGEN_AJUSTE, L_NUMERO_AJUSTE, L_FECHA_AJUSTE FROM COMPRA_AJUSTE WHERE ID_AJUSTE=L_ID_AJUSTE;
	                            IF L_IMPORTE_PAGO_TCC_DIF > 0 AND L_ID_INDICADOR = 'VARIACION_CAMBIARIA_PASIVO' THEN 
	                                
	                                   INSERT INTO CONTA_ASIENTO (
	                                            ID_TIPOORIGEN,
	                                            ID_ORIGEN, 
	                                            FONDO,
	                                            DEPTO,
	                                            CUENTA, 
	                                            CUENTA_CTE,
	                                            RESTRICCION,
	                                            IMPORTE,
	                                            DESCRIPCION,
	                                            MEMO,
	                                            VOUCHER, 
	                                            PARENT_ID,
	                                            REF_ID,
	                                            AGRUPA
	                                    )VALUES ( 
	                                            L_ID_TIPOORIGEN_AJUSTE,
	                                            L_ID_AJUSTE,
	                                            L_ID_FONDO,
	                                            L_DEPTO,
	                                            L_ID_CUENTAAASI,
	                                            L_CUENTA_CTE,
	                                            L_ID_RESTRICCION,
	                                            L_IMPORTE,
	                                            --'VARIACION CAMBIARIA DEL PASIVO TC',
	                                            SUBSTR((L_ID_ENTIDAD_PAGO || '-' || L_CORRELATIVO_COMPRA || ' ' || L_NUMERO_AJUSTE || '-' ||TO_CHAR(L_FECHA_AJUSTE, 'DD/MM/YYYY') || '-' || 'VAR-CAMB-PASIVO-TC'),1,50),
	                                            L_ID_AJUSTE,
	                                            L_ID_VOUCHER_PAGO,
	                                            null,
	                                            L_ID_AJUSTE,
	                                            L_AGRUPA
	                                    );
	                                
	                            ELSIF L_IMPORTE_PAGO_TCC_DIF < 0 AND L_ID_INDICADOR = 'VARIACION_CAMBIARIA_ACTIVO' THEN
	                                    INSERT INTO CONTA_ASIENTO (
	                                            ID_TIPOORIGEN,
	                                            ID_ORIGEN, 
	                                            FONDO,
	                                            DEPTO,
	                                            CUENTA, 
	                                            CUENTA_CTE,
	                                            RESTRICCION,
	                                            IMPORTE,
	                                            DESCRIPCION,
	                                            MEMO,
	                                            VOUCHER, 
	                                            PARENT_ID,
	                                            REF_ID,
	                                            AGRUPA
	                                    )VALUES ( 
	                                            L_ID_TIPOORIGEN_AJUSTE,
	                                            L_ID_AJUSTE,
	                                            L_ID_FONDO,
	                                            L_DEPTO,
	                                            L_ID_CUENTAAASI,
	                                            L_CUENTA_CTE,
	                                            L_ID_RESTRICCION,
	                                            L_IMPORTE,
	                                            -- 'VARIACION CAMBIARIA DEL ACTIVO TC',
	                                            SUBSTR((L_ID_ENTIDAD_PAGO || '-' || L_CORRELATIVO_COMPRA || ' ' || L_NUMERO_AJUSTE || '-' ||TO_CHAR(L_FECHA_AJUSTE, 'DD/MM/YYYY') || '-' || 'VAR-CAMB-ACTIVO-TC'),1,50),
	                                            L_ID_AJUSTE,
	                                            L_ID_VOUCHER_PAGO,
	                                            null,
	                                            L_ID_AJUSTE,
	                                            L_AGRUPA
	                                    );
	                            END IF;
	                        END IF;
                           
                            FETCH casi INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPO_PLAN, L_ID_RESTRICCION,
                                    L_ID_CUENTAAASI,L_DC, L_DESTINO, L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,
                                    L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA, L_ID_FONDO;
                            END LOOP;
                        CLOSE casi; 
                    END IF;
               END IF;
           END IF;
        END IF;
   
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_VALIDAR_AJUSTE_PAGO_COMPRA;
    PROCEDURE SP_CONTA_ASIENTO_VALE(P_ID_VALE NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
        L_ID_ASIENTO NUMBER;
        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(10);
        L_ID_ANHO NUMBER;
        L_ID_MES NUMBER;
        L_ID_VOUCHER NUMBER;
        L_ID_TIPOORIGEN NUMBER;
        L_ERROR NUMBER;
        L_MSGERROR VARCHAR2(200);
        L_ID_FONDO NUMBER;
        L_ID_CUENTAAASI VARCHAR2(10);
        L_ID_CTACTE VARCHAR2(50);
        L_ID_RESTRICCION VARCHAR2(50);
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        L_DESCRIPCION VARCHAR2(255);
        L_ESTADO VARCHAR2(1);
        L_CONT NUMBER;
        L_AGRUPA VARCHAR2(1);
        L_DC VARCHAR2(1);
        L_ID_CTABANCARIA NUMBER;
        L_BANCO VARCHAR2(50);
        L_GLOSA VARCHAR2(500);

        CURSOR CUR_VALE_ASIENTO IS
        SELECT ID_FONDO,ID_DEPTO,ID_CUENTAAASI,ID_CTACTE,ID_RESTRICCION,IMPORTE,IMPORTE_ME,DESCRIPCION,AGRUPA,DC
        FROM CAJA_VALE_ASIENTO
        WHERE ID_VALE = P_ID_VALE;
    BEGIN
        P_ERROR := 0;
        P_MSGERROR := '';
        SELECT ID_ENTIDAD,ID_ANHO,ID_MES,ID_VOUCHER,ID_TIPOORIGEN,ID_CTABANCARIA,ESTADO INTO L_ID_ENTIDAD,L_ID_ANHO,L_ID_MES,L_ID_VOUCHER,L_ID_TIPOORIGEN,L_ID_CTABANCARIA,L_ESTADO 
        FROM CAJA_VALE
        WHERE ID_VALE = P_ID_VALE;
        
        SELECT B.SIGLA INTO L_BANCO FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
        ON A.ID_BANCO = B.ID_BANCO
        WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;

        SELECT A.ID_ENTIDAD||'-'||A.ID_DEPTO||'-[VALE-'||A.NRO_VALE||']-'||DECODE(A.ID_MEDIOPAGO,'001','TLC','007','CHQ','EFE')||'-'||L_BANCO||'-OP-'||TO_NUMBER(A.NUMERO)||'-'||TO_CHAR(A.FECHA,'DD/MM/YY')||'-'||A.DETALLE INTO L_GLOSA
        FROM CAJA_VALE A 
        WHERE ID_VALE = P_ID_VALE;
       
        OPEN CUR_VALE_ASIENTO;
            FETCH CUR_VALE_ASIENTO INTO L_ID_FONDO,L_ID_DEPTO,L_ID_CUENTAAASI,L_ID_CTACTE,L_ID_RESTRICCION,L_IMPORTE,L_IMPORTE_ME,L_DESCRIPCION,L_AGRUPA, L_DC;
            WHILE CUR_VALE_ASIENTO%FOUND LOOP
                IF L_IMPORTE <> 0 THEN
                
                    IF L_DC = 'C' then
                        BEGIN
                            SELECT ID_TIPOCTACTE into L_ID_CTACTE FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = L_ID_CTABANCARIA;
                            EXCEPTION WHEN NO_DATA_FOUND THEN
                            L_ID_CTACTE := '';
                        END;
                    END IF;
                
                    SELECT NVL(MAX(ID_ASIENTO),0)+1 INTO L_ID_ASIENTO FROM CONTA_ASIENTO;
                    INSERT INTO CONTA_ASIENTO (ID_ASIENTO,
                                               ID_TIPOORIGEN,
                                               ID_ORIGEN,
                                               FONDO,
                                               DEPTO,
                                               CUENTA,
                                               CUENTA_CTE,
                                               RESTRICCION,
                                               IMPORTE,
                                               DESCRIPCION,
                                               MEMO,
                                               VOUCHER,
                                               AGRUPA,
                                               IMPORTE_ME)
                         VALUES (L_ID_ASIENTO,
                                 L_ID_TIPOORIGEN,
                                 P_ID_VALE,
                                 L_ID_FONDO,
                                 L_ID_DEPTO,
                                 L_ID_CUENTAAASI,
                                 L_ID_CTACTE,
                                 L_ID_RESTRICCION,
                                 L_IMPORTE,
                                 --L_DESCRIPCION,
                                 L_GLOSA,
                                 P_ID_VALE,
                                 L_ID_VOUCHER,
                                 L_AGRUPA,
                                 L_IMPORTE_ME);  
                END IF;              
            FETCH CUR_VALE_ASIENTO INTO L_ID_FONDO,L_ID_DEPTO,L_ID_CUENTAAASI,L_ID_CTACTE,L_ID_RESTRICCION,L_IMPORTE,L_IMPORTE_ME,L_DESCRIPCION,L_AGRUPA, L_DC;
            END LOOP;
        CLOSE CUR_VALE_ASIENTO;
    END SP_CONTA_ASIENTO_VALE;
    
PROCEDURE SP_GENERAR_ASIENTO_GASTO (P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2)
IS
    l_id_entidad              NUMBER;
    l_id_detpo                VARCHAR2(10);
    l_dinamica                NUMBER;
    l_id_persona              NUMBER;
    l_detalle                 VARCHAR2 (200);
    l_importe                 NUMBER (10, 2);
    l_importe_me              NUMBER (10, 2);
    l_correlativo             NUMBER (10, 2); 
    l_id_asiento              NUMBER;
    l_id_tipoplan             NUMBER;
    l_id_restriccion          VARCHAR2 (50);
    l_id_cuentaaasi           VARCHAR2 (10);
    l_dc                      VARCHAR2 (1);
    l_depto                   VARCHAR2 (10);
    l_cuenta_cte              VARCHAR2 (50);
    l_descripcion             VARCHAR2 (255);
    l_memo                    VARCHAR2 (255);
    l_voucher                 VARCHAR2 (10);
    l_error                   NUMBER := 0;
    l_msgerror                VARCHAR2 (200) := '';
    l_agrupa                  VARCHAR2 (1);
    l_id_ctabancaria          NUMBER;
    l_id_mediopago            VARCHAR2 (4);
    l_pgasto                  NUMBER;
    l_tipoorigen              NUMBER;
    l_fondo                   NUMBER;
    l_importe_t               NUMBER(10,2);
    l_pago                    VARCHAR2(10);
    l_fecha                   VARCHAR2(10);
    l_numero                  VARCHAR2(10);
    ES_VALE NUMBER;
    L_ID_VALE NUMBER;
    L_GLOSA VARCHAR2(200);
    
    CURSOR casi
    IS
        SELECT 
                B.ID_PGASTO,B.ID_TIPOORIGEN, 1 AS ID_TIPOPLAN,A.ID_RESTRICCION,A.ID_CUENTAAASI,A.ID_CTACTE,A.ID_DEPTO,A.DC,B.DETALLE,A.IMPORTE,A.IMPORTE_ME,A.AGRUPA,A.ID_FONDO
        FROM CAJA_PAGO_GASTO_ASIENTO A JOIN CAJA_PAGO_GASTO B
        ON A.ID_PGASTO = B.ID_PGASTO
        WHERE B.ID_PAGO = P_ID_PAGO
        AND B.ID_DINAMICA IS NULL;
    BEGIN
        SELECT ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,IMPORTE,DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC','999','REND') AS PAGO,TO_CHAR(FECHA,'DD/MM/YY') AS FECHA,NUMERO
            INTO l_id_entidad,l_id_detpo,l_id_ctabancaria,l_voucher,l_id_mediopago,l_importe_t,l_pago,l_fecha,l_numero
        FROM CAJA_PAGO
        WHERE ID_PAGO = P_ID_PAGO;
        
        SELECT COUNT(ID_VALE) INTO ES_VALE FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
        IF ES_VALE > 0 THEN
            SELECT ID_VALE INTO L_ID_VALE
            FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
            
            SELECT ID_ENTIDAD||'-'||ID_DEPTO||'-[Vale :'||NRO_VALE||']-Rendicion-'||FC_NOMBRE_PERSONA(ID_EMPLEADO) INTO L_GLOSA
            FROM CAJA_VALE WHERE ID_VALE = L_ID_VALE;
        END IF;
        
        OPEN casi;
            FETCH casi INTO l_pgasto,l_tipoorigen,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_cuenta_cte,l_depto,l_dc,l_descripcion,l_importe,l_importe_me,l_agrupa,l_fondo;

                WHILE casi%FOUND LOOP
                        
                    IF l_id_entidad = 7124 THEN
                        l_detalle := l_descripcion;
                    ELSE
                        l_detalle := SUBSTR(l_id_entidad|| '-'|| l_correlativo|| '-'|| l_descripcion|| '-'|| SUBSTR (FC_NOMBRE_PERSONA (l_id_persona), 1, 100),1,50);
                    END IF;
                   
                    IF l_importe <> 0 THEN
                        --GASTOS DEBITOS
                        INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,
                                                   ID_ORIGEN,
                                                   FONDO,
                                                   DEPTO,
                                                   CUENTA,
                                                   CUENTA_CTE,
                                                   RESTRICCION,
                                                   IMPORTE,
                                                   DESCRIPCION,
                                                   MEMO,
                                                   VOUCHER,
                                                   PARENT_ID,
                                                   REF_ID,
                                                   AGRUPA,
                                                   IMPORTE_ME)
                        VALUES (l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importe,
                                l_detalle,
                                l_memo,
                                l_voucher,
                                NULL,
                                '',
                                l_agrupa,
                                l_importe_me);
                        -- contra partida CREDITOS
                        
                        IF ES_VALE > 0 THEN 
                            SELECT B.CUENTA,CUENTA_CTE INTO l_id_cuentaaasi,l_cuenta_cte
                            FROM CAJA_VALE A JOIN CONTA_ASIENTO B ON A.ID_TIPOORIGEN = B.ID_TIPOORIGEN 
                            AND A.ID_VALE = B.ID_ORIGEN AND A.ID_VOUCHER = B.VOUCHER 
                            WHERE A.ID_VALE = L_ID_VALE
                            AND B.IMPORTE > 0;
                            
                            l_agrupa := 'S';
                            l_detalle := L_GLOSA;
                        ELSE
                            SELECT ID_CUENTAAASI,ID_TIPOCTACTE into l_id_cuentaaasi,l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            
                            IF l_agrupa = 'S' THEN
                                l_detalle := SUBSTR(l_id_entidad||'-'||l_id_detpo||'-'||l_pago||':'||l_numero||':'||l_fecha, 1,50);
                            ELSE
                                l_detalle := l_descripcion;
                            END IF;
                        END IF;
                        
                        --l_id_cuentaaasi := '1112001';
                        if l_id_entidad = 7124 and l_id_detpo = '1' then
                            l_depto := '11010101';
                        elsif l_id_entidad = 7124 and l_id_detpo = '3' then
                            l_depto := '31010101';
                        elsif l_id_entidad = 7124 and l_id_detpo = '4' then
                            l_depto := '41010101';
                        elsif l_id_entidad = 7124 and l_id_detpo = '5' then
                            l_depto := '51010101';
                        elsif l_id_entidad = 7124 and l_id_detpo = '6' then
                            l_depto := '61010101';
                        elsif l_id_entidad = 7124 and l_id_detpo = '7' then
                            l_depto := '71010101';
                        elsif l_id_entidad = 7124 and l_id_detpo = '8' then
                            l_depto := '81010101';
                        else
                            l_depto := '131111';
                        end if;
                        
                        l_id_restriccion := '0A';
                        INSERT INTO CONTA_ASIENTO (ID_TIPOORIGEN,
                                                   ID_ORIGEN,
                                                   FONDO,
                                                   DEPTO,
                                                   CUENTA,
                                                   CUENTA_CTE,
                                                   RESTRICCION,
                                                   IMPORTE,
                                                   DESCRIPCION,
                                                   MEMO,
                                                   VOUCHER,
                                                   PARENT_ID,
                                                   REF_ID,
                                                   AGRUPA,
                                                   IMPORTE_ME)
                                        VALUES (l_tipoorigen,
                                                l_pgasto,
                                                l_fondo,
                                                l_depto,
                                                l_id_cuentaaasi,
                                                l_cuenta_cte,
                                                l_id_restriccion,
                                                l_importe*-1,
                                                l_detalle,
                                                l_memo,
                                                l_voucher,
                                                NULL,
                                                '',
                                                l_agrupa,
                                                l_importe_me);
                    END IF;
                    FETCH casi INTO l_pgasto,l_tipoorigen,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_cuenta_cte,l_depto,l_dc,l_descripcion,l_importe,l_importe_me,l_agrupa,l_fondo;
                END LOOP;
        CLOSE casi;
        
    P_ERROR := 0;
    P_MSGERROR := 'OK';
END SP_GENERAR_ASIENTO_GASTO;
PROCEDURE SP_CERRAR_CAJA(P_ID_VOUCHER NUMBER,P_ID_DINAMICA NUMBER,P_ID_PERSONA NUMBER,P_GLOSA VARCHAR2,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
    L_ID_CIERRE NUMBER;
    L_ID_ENTIDAD NUMBER;
    L_ID_DEPTO VARCHAR2(10);
    L_ID_ANHO NUMBER;
    L_ID_MES NUMBER;
    L_CODIGO VARCHAR2(20);
    L_IMPORTE NUMBER(10,2);
    L_IMPORTE_ME NUMBER(10,2);
    L_CANT NUMBER;
    BEGIN
        SELECT 
                SUM(IMPORTE), NVL(SUM(IMPORTE_ME),0) INTO L_IMPORTE,L_IMPORTE_ME
        FROM CAJA_DEPOSITO
        WHERE ID_VOUCHER = P_ID_VOUCHER
        AND ID_MEDIOPAGO = '008';
        
        IF (L_IMPORTE+L_IMPORTE_ME > 0) THEN 
            SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES
            FROM CONTA_VOUCHER
            WHERE ID_VOUCHER = P_ID_VOUCHER;
            
            SELECT L_ID_ENTIDAD||'-'||L_ID_DEPTO||'-'||TO_CHAR(COUNT(1)+1) INTO L_CODIGO
            FROM CAJA_CIERRE
            WHERE ID_ENTIDAD = L_ID_ENTIDAD
            AND ID_DEPTO = L_ID_DEPTO;
            
            SELECT COUNT(1) INTO L_CANT 
            FROM CAJA_CIERRE
            WHERE ID_VOUCHER = P_ID_VOUCHER;
            IF L_CANT = 0 THEN 
                INSERT INTO CAJA_CIERRE (ID_ENTIDAD,
                                         ID_DEPTO,
                                         ID_ANHO,
                                         ID_MES,
                                         ID_VOUCHER,
                                         ID_DINAMICA,
                                         ID_PERSONA,
                                         FECHA,
                                         CODIGO,
                                         GLOSA,
                                         IMPORTE,
                                         IMPORTE_ME,
                                         ESTADO)
                     VALUES (L_ID_ENTIDAD,
                             L_ID_DEPTO,
                             L_ID_ANHO,
                             L_ID_MES,
                             P_ID_VOUCHER,
                             P_ID_DINAMICA,
                             P_ID_PERSONA,
                             SYSDATE,
                             L_CODIGO,
                             P_GLOSA,
                             L_IMPORTE,
                             L_IMPORTE_ME,
                             '1');
                --GENERA ASIENTO DE CIERRE DE CAJA 
                --SP_ASIENTO_CIERRE
                SELECT MAX(ID_CIERRE) INTO L_ID_CIERRE FROM CAJA_CIERRE;
                PKG_ACCOUNTING.SP_ASIENTO_CONTABLE(P_ID_DINAMICA,16,L_ID_CIERRE,L_IMPORTE,P_GLOSA,P_ID_VOUCHER,L_IMPORTE_ME ,P_ERROR,P_MSGERROR);
                P_ERROR := 0;
                P_MSGERROR := 'CIERRE DE CAJA, FINALIZADO CON EXITO';
            ELSE
                P_ERROR := 1;
                P_MSGERROR := 'ERROR: YA ESTA CERRADO EL DIA';
            END IF;
        ELSE
            P_ERROR := 1;
            P_MSGERROR := 'ERROR: AL REALIZAR EL CIERRE DEL DIA';
        END IF; 
    END SP_CERRAR_CAJA;
    PROCEDURE SP_CREAR_PAGO_ASIENTO(P_ID_PAGO NUMBER,P_ID_CUENTAAASI VARCHAR2,P_ID_RESTRICCION VARCHAR2,P_ID_CTACTE VARCHAR2,P_ID_FONDO NUMBER,P_ID_DEPTO VARCHAR2,P_DESCRIPCION VARCHAR2,P_DC VARCHAR2, P_AGRUPA VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
        L_ID_PASIENTO NUMBER;
        L_EDITABLE VARCHAR2(1) := 'S';
        L_ERROR NUMBER:=0;
    BEGIN
        L_ERROR:=0;
        IF L_ERROR=0 THEN
            SELECT NVL(MAX(ID_PASIENTO),0)+1 INTO L_ID_PASIENTO FROM CAJA_PAGO_ASIENTO;
            INSERT INTO CAJA_PAGO_ASIENTO(ID_PASIENTO,ID_PAGO,ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_FONDO,ID_DEPTO,DESCRIPCION,EDITABLE,DC,AGRUPA)
            VALUES (L_ID_PASIENTO,P_ID_PAGO,P_ID_CUENTAAASI,P_ID_RESTRICCION,P_ID_CTACTE,P_ID_FONDO,P_ID_DEPTO,P_DESCRIPCION,L_EDITABLE,P_DC,P_AGRUPA);
        END IF;  
        P_ERROR:=L_ERROR;
        P_MSGERROR :='OK';
    END SP_CREAR_PAGO_ASIENTO;
    
    PROCEDURE SP_ELIMINAR_PROVISION_VALE(P_ID_VALE IN INT,P_ERROR OUT NUMBER, P_MSGERROR OUT VARCHAR2) IS
        L_ID_TIPOVALE NUMBER;
        L_ID_VOUCHER NUMBER;
        L_ID_TIPOORIGEN NUMBER;
        L_ID_REGISTRO NUMBER;
        L_ID_PROCESO NUMBER := 5;--PROCESO DE VALES
        L_PASO_AUTORIZADO NUMBER :=14;
        L_PASO_PROVISIONADO NUMBER := 227;
        L_ACTIVO VARCHAR2(1);
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(200);
        L_CANT NUMBER :=0;
        BEGIN
            SELECT ID_VOUCHER,ID_TIPOVALE,ID_TIPOORIGEN INTO L_ID_VOUCHER,L_ID_TIPOVALE,L_ID_TIPOORIGEN FROM CAJA_VALE WHERE ID_VALE = P_ID_VALE;
            SELECT ACTIVO INTO L_ACTIVO FROM CONTA_VOUCHER WHERE ID_VOUCHER = L_ID_VOUCHER;
            IF L_ACTIVO = 'S' THEN 
                IF L_ID_TIPOVALE = 1 THEN --A RENDIR
                    SELECT COUNT(1) INTO L_CANT FROM CAJA_PAGO WHERE ID_VALE = P_ID_VALE AND ESTADO <> '0';
                    IF L_CANT > 0 THEN -- YA ESTA REDIDO
                        L_MSGERROR := 'VALE: Ya está Rendido o e Proceso';
                        L_ERROR := 1; 
                    ELSE
                        DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = P_ID_VALE;
                        UPDATE CAJA_VALE SET ID_VOUCHER = NULL, NUMERO = '',PAGADO = '' WHERE ID_VALE = P_ID_VALE;
                        DELETE CAJA_VALE_FILE  WHERE ID_VALE = P_ID_VALE AND TIPO = '2';--CONSTANCIA DE DEPOSITO
                        
                        SELECT ID_REGISTRO INTO L_ID_REGISTRO  FROM PROCESS_RUN WHERE ID_PROCESO = L_ID_PROCESO AND ID_OPERACION = P_ID_VALE;
                        DELETE FROM PROCESS_PASO_RUN WHERE ID_REGISTRO = L_ID_REGISTRO AND ID_PASO = L_PASO_PROVISIONADO;--PASO DE PROVISIONADO
                        UPDATE PROCESS_PASO_RUN SET ESTADO = '0' WHERE ID_REGISTRO = L_ID_REGISTRO AND ID_PASO = L_PASO_AUTORIZADO;--PASO DE AUTORIZADO
                        UPDATE PROCESS_RUN SET ESTADO = '0', ID_PASO_ACTUAL = L_PASO_AUTORIZADO WHERE ID_PROCESO = L_ID_PROCESO AND ID_OPERACION = P_ID_VALE; --PASO 14 = AUTORIZADO
                        L_MSGERROR := 'VALE: OK';
                        L_ERROR := 0;
                    END IF;
                ELSE --AC ELIMINA
                    DELETE FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = P_ID_VALE;
                    UPDATE CAJA_VALE SET ID_VOUCHER = NULL, NUMERO = '',PAGADO = '' WHERE ID_VALE = P_ID_VALE;
                    DELETE CAJA_VALE_FILE  WHERE ID_VALE = P_ID_VALE AND TIPO = '2';--CONSTANCIA DE DEPOSITO;
                    
                    SELECT ID_REGISTRO INTO L_ID_REGISTRO FROM PROCESS_RUN WHERE ID_PROCESO = L_ID_PROCESO AND ID_OPERACION = P_ID_VALE;
                    DELETE FROM PROCESS_PASO_RUN WHERE ID_REGISTRO = L_ID_REGISTRO AND ID_PASO = L_PASO_PROVISIONADO;--PASO DE PRROVISIONADO
                    UPDATE PROCESS_PASO_RUN SET ESTADO = '0' WHERE ID_REGISTRO = L_ID_REGISTRO AND ID_PASO = L_PASO_AUTORIZADO;--PASO DE AUTORIZADO
                    UPDATE PROCESS_RUN SET ESTADO = '0', ID_PASO_ACTUAL = L_PASO_AUTORIZADO WHERE ID_PROCESO = L_ID_PROCESO AND ID_OPERACION = P_ID_VALE;
                    L_MSGERROR := 'VALE: OK';
                    L_ERROR := 0;
                END IF; 
            ELSE
                --NO SE PUEDE ELIMINAR, YA ESTA CONTABILIZADO
                L_MSGERROR := 'VALE: Voucher Contabilizado';
                L_ERROR := 1;
            END IF;
            P_MSGERROR := L_MSGERROR;
            P_ERROR := L_ERROR;
    END SP_ELIMINAR_PROVISION_VALE;
    FUNCTION FC_CTA_CTE_RENDICION(P_ID_PAGO IN NUMBER) RETURN VARCHAR2 IS
        L_CTACTE VARCHAR2(255);
        BEGIN
            SELECT L_CTACTE INTO L_CTACTE FROM (
            SELECT NVL(ID_CTACTE,'') AS L_CTACTE FROM CAJA_PAGO_ASIENTO WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT NVL(MAX(C.ID_CTACTE),'') AS L_CTACTE
            FROM CAJA_PAGO A JOIN CAJA_VALE B ON A.ID_VALE = B.ID_VALE JOIN CAJA_VALE_ASIENTO C ON B.ID_VALE = C.ID_VALE
            WHERE A.ID_PAGO = P_ID_PAGO
            AND C.IMPORTE > 0
            ) WHERE ROWNUM = 1;
            
            RETURN (L_CTACTE);
    END;
    PROCEDURE SP_DOCUMENTO_ASIENTO(P_ID_DOCUMENTO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
        L_ID_ASIENTO NUMBER;
        L_ID_PARENT NUMBER;
        L_ID_TIPO_PLAN NUMBER;
        L_ID_RESTRICCION VARCHAR2(50);
        L_ID_CUENTAAASI VARCHAR2(10);
        L_DC VARCHAR2(1);
        L_DESTINO VARCHAR2(1);
        L_ID_INDICADOR VARCHAR2(35);
        L_UNICO VARCHAR2(1);
        L_UNICOCTACTE VARCHAR2(1);
        L_PORCENTAJE NUMBER(10,2);
        L_DESCRIPCION VARCHAR2(255);
        L_AGRUPA VARCHAR2(1);
        
        L_IMPORTEASIENTO NUMBER(10,2);
        L_IMPORTEASIENTO_ME NUMBER(10,2);
        
        L_DEPTO VARCHAR2(10);
        L_DEPTOS VARCHAR2(200) := '';
        L_CUENTA_CTE VARCHAR2(50);
        L_CTATES VARCHAR2(200);
        L_BUSCAR NUMBER;
        L_CTAS VARCHAR2(200);
        
        L_ACTAS TABLASTRING;
        L_ADEPTOS TABLASTRING;
        L_ACTATES TABLASTRING;

        --validacion
        L_CONT NUMBER;

        L_ID_CASIENTO VARCHAR2(50);
        L_ID_FONDO VARCHAR2(50);
        L_CORRELATIVO NUMBER;
        L_ID_COMPROBANTE VARCHAR2(20);
        L_ID_COMPROBANTE_NC VARCHAR2(25);
        L_ID_DEPTO_COMPRA VARCHAR2(20);
        L_ES_CREDITO VARCHAR2(1);
        L_ID_PROVEEDOR NUMBER;
        L_SERIE VARCHAR2(50);
        L_NUMERO VARCHAR2(50);
		L_IMPORTE NUMBER(10,2);
        L_IMPORTE_ME NUMBER(10,2) := 0;
        L_IGV NUMBER(10,2);
        L_BASE NUMBER(10,2);
        L_ID_ENTIDAD NUMBER;
        L_EDITABLE VARCHAR2(1) := 'N';
       
        CURSOR CASI IS		
            SELECT 
                    A.ID_ASIENTO,A.ID_PARENT,A.ID_TIPOPLAN,A.ID_RESTRICCION,
                    A.ID_CUENTAAASI,A.DC,A.DESTINO,A.ID_INDICADOR,A.UNICO,A.UNICO_CTACTE,A.PORCENTAJE,
                    A.NOMBRE,A.AGRUPA,A.ID_FONDO
            FROM CONTA_DINAMICA_ASIENTO A
            WHERE A.ID_DINAMICA =P_ID_DINAMICA
            AND COALESCE(A.ID_PARENT,0)=0 
            AND A.DC = 'D' -- SOLO ASIENTOS DE GASTOS
            ORDER BY A.NRO_ASIENTO,A.DC;
        
    BEGIN
        P_ERROR :=0;
        IF P_ERROR = 0 THEN
            
            OPEN CASI;
            FETCH CASI INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPO_PLAN, L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC, L_DESTINO, L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA, L_ID_FONDO;
            WHILE CASI%FOUND LOOP
                
                SELECT CASE L_ID_INDICADOR 
                    WHEN 'IMPORTE' THEN  (L_IMPORTE)*(L_PORCENTAJE)
                    WHEN 'BASE' THEN (L_BASE)*(L_PORCENTAJE)
                    WHEN 'IGV' THEN (L_IGV)*(L_PORCENTAJE)
                    ELSE 0 END INTO L_IMPORTEASIENTO
                FROM DUAL;
                
                SELECT IMPORTE,IMPORTE_ME INTO L_IMPORTEASIENTO,L_IMPORTEASIENTO_ME  FROM CAJA_DOCUMENTO WHERE ID_DOCUMENTO = P_ID_DOCUMENTO;
                    
                L_DEPTO:=NULL;
                L_CUENTA_CTE:=NULL;
                    
                IF L_UNICO='U' THEN -- Único
                    -- SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD;
                    SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ASIENTO=L_ID_ASIENTO;
                ELSIF(L_UNICO='M') THEN -- Muchos
                    SELECT INSTR(L_DEPTOS, '|') INTO L_BUSCAR FROM DUAL;
                    IF L_BUSCAR>0 THEN
                        SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM DUAL;
                        SELECT FC_SPLIT(L_DEPTOS,'|') INTO L_ADEPTOS  FROM DUAL; 
                        SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ADEPTOS ,L_ID_CUENTAAASI) INTO L_DEPTO FROM DUAL;
                    ELSE
                        L_DEPTO:=L_DEPTOS;
                    END IF;
                ELSIF L_UNICO='S' THEN -- Si es sesión
                    L_DEPTO := L_ID_DEPTO_COMPRA;
                END IF;
                    
                IF L_ES_CREDITO = 'S' AND L_UNICOCTACTE='U' THEN
                    SELECT FC_RUC(L_ID_PROVEEDOR) INTO L_CUENTA_CTE FROM DUAL;
                ELSE 
                    IF L_UNICOCTACTE='U' THEN
                      SELECT  COUNT(1) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=L_ID_ASIENTO;
                      IF L_CONT>0 THEN
                        SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=L_ID_ASIENTO;
                      END IF;
                    ELSIF(L_UNICOCTACTE='M') THEN
                       SELECT INSTR(L_CTATES, '|') INTO L_BUSCAR FROM DUAL;
                       IF L_BUSCAR>0 THEN
                         SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM DUAL;
                         SELECT FC_SPLIT(L_CTATES,'|') INTO L_ACTATES  FROM DUAL; 
                         SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ACTATES ,L_ID_CUENTAAASI) INTO L_CUENTA_CTE FROM DUAL;
                       ELSE
                        L_CUENTA_CTE:=L_CTATES;
                       END IF;
                    ELSIF(L_UNICOCTACTE='X') THEN
                        SELECT FC_RUC(L_ID_PROVEEDOR) INTO L_CUENTA_CTE FROM DUAL;
                    END IF;
                END IF; 
                   
                IF L_DC='C' THEN
                    L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                    L_IMPORTEASIENTO_ME:=L_IMPORTE_ME*(-1);
                 ELSE 
                    L_IMPORTEASIENTO := L_IMPORTEASIENTO;
                    L_IMPORTEASIENTO_ME := L_IMPORTE_ME;
                END IF;
                   
                IF L_IMPORTEASIENTO<>0 THEN
                    
                    SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO L_ID_CASIENTO FROM CAJA_DOCUMENTO_ASIENTO;
                    
                    INSERT INTO CAJA_DOCUMENTO_ASIENTO(ID_CASIENTO,ID_DOCUMENTO,ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_FONDO,ID_DEPTO,IMPORTE,IMPORTE_ME,DC,EDITABLE,AGRUPA) 
                    VALUES(L_ID_CASIENTO,P_ID_DOCUMENTO, L_ID_CUENTAAASI, L_ID_RESTRICCION,L_CUENTA_CTE,L_ID_FONDO,L_DEPTO,L_IMPORTEASIENTO,L_IMPORTEASIENTO_ME,L_DC,L_EDITABLE,L_AGRUPA);
                  END IF;
                
            FETCH CASI INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPO_PLAN, L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC, L_DESTINO, L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA, L_ID_FONDO;
            END LOOP;
            CLOSE CASI; 
            P_ERROR :=0;
        END IF;
    END SP_DOCUMENTO_ASIENTO;
    PROCEDURE SP_VALE_GASTO_ASIENTO(P_ID_VGASTO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2) IS
        L_ID_ASIENTO NUMBER;
        L_ID_PARENT NUMBER;
        L_ID_TIPO_PLAN NUMBER;
        L_ID_RESTRICCION VARCHAR2(50);
        L_ID_CUENTAAASI VARCHAR2(10);
        L_DC VARCHAR2(1);
        L_DESTINO VARCHAR2(1);
        L_ID_INDICADOR VARCHAR2(35);
        L_UNICO VARCHAR2(1);
        L_UNICOCTACTE VARCHAR2(1);
        L_PORCENTAJE NUMBER(10,2);
        L_DESCRIPCION VARCHAR2(255);
        L_AGRUPA VARCHAR2(1);
        
        L_IMPORTEASIENTO NUMBER(10,2);
        L_IMPORTEASIENTO_ME NUMBER(10,2);
        
        L_DEPTO VARCHAR2(10);
        L_DEPTOS VARCHAR2(200) := '';
        L_CUENTA_CTE VARCHAR2(50);
        L_CTATES VARCHAR2(200);
        L_BUSCAR NUMBER;
        L_CTAS VARCHAR2(200);
        
        L_ACTAS TABLASTRING;
        L_ADEPTOS TABLASTRING;
        L_ACTATES TABLASTRING;

        --validacion
        L_CONT NUMBER;

        L_ID_CASIENTO VARCHAR2(50);
        L_ID_FONDO VARCHAR2(50);
        L_CORRELATIVO NUMBER;
        L_ID_COMPROBANTE VARCHAR2(20);
        L_ID_COMPROBANTE_NC VARCHAR2(25);
        L_ID_DEPTO_COMPRA VARCHAR2(20);
        L_ES_CREDITO VARCHAR2(1);
        L_ID_PROVEEDOR NUMBER;
        L_SERIE VARCHAR2(50);
        L_NUMERO VARCHAR2(50);
		L_IMPORTE NUMBER(10,2);
        L_IMPORTE_ME NUMBER(10,2) := 0;
        L_IGV NUMBER(10,2);
        L_BASE NUMBER(10,2);
        L_ID_ENTIDAD NUMBER;
        L_EDITABLE VARCHAR2(1) := 'N';
       
        CURSOR CASI IS		
            SELECT 
                    A.ID_ASIENTO,A.ID_PARENT,A.ID_TIPOPLAN,A.ID_RESTRICCION,
                    A.ID_CUENTAAASI,A.DC,A.DESTINO,A.ID_INDICADOR,A.UNICO,A.UNICO_CTACTE,A.PORCENTAJE,
                    A.NOMBRE,A.AGRUPA,A.ID_FONDO
            FROM CONTA_DINAMICA_ASIENTO A
            WHERE A.ID_DINAMICA =P_ID_DINAMICA
            AND COALESCE(A.ID_PARENT,0)=0 
            AND A.DC = 'D' -- SOLO ASIENTOS DE GASTOS
            ORDER BY A.NRO_ASIENTO,A.DC;
        
    BEGIN
        P_ERROR :=0;
        IF P_ERROR = 0 THEN
            
            OPEN CASI;
            FETCH CASI INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPO_PLAN, L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC, L_DESTINO, L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA, L_ID_FONDO;
            WHILE CASI%FOUND LOOP
                
                SELECT CASE L_ID_INDICADOR 
                    WHEN 'IMPORTE' THEN  (L_IMPORTE)*(L_PORCENTAJE)
                    WHEN 'BASE' THEN (L_BASE)*(L_PORCENTAJE)
                    WHEN 'IGV' THEN (L_IGV)*(L_PORCENTAJE)
                    ELSE 0 END INTO L_IMPORTEASIENTO
                FROM DUAL;
                
                SELECT IMPORTE,IMPORTE_ME INTO L_IMPORTEASIENTO,L_IMPORTEASIENTO_ME  FROM CAJA_VALE_GASTO WHERE ID_VGASTO = P_ID_VGASTO;
                    
                L_DEPTO:=NULL;
                L_CUENTA_CTE:=NULL;
                    
                IF L_UNICO='U' THEN -- Único
                    -- SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD;
                    SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ASIENTO=L_ID_ASIENTO;
                ELSIF(L_UNICO='M') THEN -- Muchos
                    SELECT INSTR(L_DEPTOS, '|') INTO L_BUSCAR FROM DUAL;
                    IF L_BUSCAR>0 THEN
                        SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM DUAL;
                        SELECT FC_SPLIT(L_DEPTOS,'|') INTO L_ADEPTOS  FROM DUAL; 
                        SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ADEPTOS ,L_ID_CUENTAAASI) INTO L_DEPTO FROM DUAL;
                    ELSE
                        L_DEPTO:=L_DEPTOS;
                    END IF;
                ELSIF L_UNICO='S' THEN -- Si es sesión
                    L_DEPTO := L_ID_DEPTO_COMPRA;
                END IF;
                    
                IF L_ES_CREDITO = 'S' AND L_UNICOCTACTE='U' THEN
                    SELECT FC_RUC(L_ID_PROVEEDOR) INTO L_CUENTA_CTE FROM DUAL;
                ELSE 
                    IF L_UNICOCTACTE='U' THEN
                      SELECT  COUNT(1) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=L_ID_ASIENTO;
                      IF L_CONT>0 THEN
                        SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=L_ID_ASIENTO;
                      END IF;
                    ELSIF(L_UNICOCTACTE='M') THEN
                       SELECT INSTR(L_CTATES, '|') INTO L_BUSCAR FROM DUAL;
                       IF L_BUSCAR>0 THEN
                         SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM DUAL;
                         SELECT FC_SPLIT(L_CTATES,'|') INTO L_ACTATES  FROM DUAL; 
                         SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ACTATES ,L_ID_CUENTAAASI) INTO L_CUENTA_CTE FROM DUAL;
                       ELSE
                        L_CUENTA_CTE:=L_CTATES;
                       END IF;
                    ELSIF(L_UNICOCTACTE='X') THEN
                        SELECT FC_RUC(L_ID_PROVEEDOR) INTO L_CUENTA_CTE FROM DUAL;
                    END IF;
                END IF; 
                   
                IF L_DC='C' THEN
                    L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                    L_IMPORTEASIENTO_ME:=L_IMPORTE_ME*(-1);
                 ELSE 
                    L_IMPORTEASIENTO := L_IMPORTEASIENTO;
                    L_IMPORTEASIENTO_ME := L_IMPORTE_ME;
                END IF;
                   
                IF L_IMPORTEASIENTO<>0 THEN
                    
                    SELECT NVL(MAX(ID_VASIENTO),0)+1 INTO L_ID_CASIENTO FROM CAJA_VALE_GASTO_ASIENTO;
                    
                    INSERT INTO CAJA_VALE_GASTO_ASIENTO(ID_VASIENTO,ID_VGASTO,ID_FONDO,ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_DEPTO,IMPORTE,IMPORTE_ME,DC,AGRUPA) 
                    VALUES(L_ID_CASIENTO,P_ID_VGASTO,L_ID_FONDO, L_ID_CUENTAAASI, L_ID_RESTRICCION,L_CUENTA_CTE,L_DEPTO,L_IMPORTEASIENTO,L_IMPORTEASIENTO_ME,L_DC,L_AGRUPA);
                  END IF;
                
            FETCH CASI INTO L_ID_ASIENTO, L_ID_PARENT, L_ID_TIPO_PLAN, L_ID_RESTRICCION,L_ID_CUENTAAASI,L_DC, L_DESTINO, L_ID_INDICADOR,L_UNICO,L_UNICOCTACTE,L_PORCENTAJE,L_DESCRIPCION,L_AGRUPA, L_ID_FONDO;
            END LOOP;
            CLOSE CASI; 
            P_ERROR :=0;
        END IF;
    END SP_VALE_GASTO_ASIENTO;
    PROCEDURE SP_RECHAZAR_VALE(P_ID_VALE NUMBER) IS
        L_ID_PROCESO NUMBER := 5; --PROCESO DE GESTION DE VALES
        L_CANT NUMBER;
        
    BEGIN
        
        SELECT COUNT(1) INTO L_CANT FROM PROCESS_RUN WHERE ID_OPERACION = P_ID_VALE AND ID_PROCESO = L_ID_PROCESO;
        IF L_CANT = 1 THEN
            UPDATE PROCESS_RUN SET ESTADO = '3' WHERE ID_OPERACION = P_ID_VALE AND ID_PROCESO = L_ID_PROCESO;
            
            UPDATE CAJA_VALE SET ESTADO = '3' WHERE ID_VALE = P_ID_VALE;
        END IF;
    END SP_RECHAZAR_VALE;
    PROCEDURE SP_CREAR_DEPOSITO_ALUMNO_ADM(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_PERSONA_INSCRIPCION NUMBER,
                              P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2,P_ID_DEPOSITO OUT NUMBER)
     IS
     l_id_user number:=2; --cajero Visa Net Online C/E
     l_ventas varchar2(100):=null;
     l_ventas_imp varchar2(100):=null;
     l_tipo varchar2(100):='V';
     l_id_tipotransaccion number; ---POR DEFINIR
     l_contar number:=0;
     l_fecha date;
     l_importe_me number:=0;
     l_tipocambio number:=0;
     l_glosa varchar2(200) := 'ADM';
     
     l_error number:=0;
     l_msgerror varchar2(200):='';
     l_id_tipovoucher number := 5;
     l_id_dinamica_dep number;
     l_serie_numero varchar2(30);
     
     L_ID_COMPROBANTE VARCHAR2(2) := '03'; --SE GENERA BOLETA DE VENTA POR DEFAULT
     L_ID_TIPOVENTA VARCHAR2(2) := '6'; --SE GENERA VENTA DE SERVICIOS POR DEFAULT
     L_IP VARCHAR2(40);
     L_IMPORTE_E NUMBER(10,2); --Importe Efectivo
     L_IMPORTE_B NUMBER(10,2); --Importe Bancario
     L_IMPORTE_DEP NUMBER(10,2);
     P_ID VARCHAR2(20);
     L_CANTIDAD NUMBER(10,2):=1;
     
     BEGIN
        
        IF P_ID_MEDIOPAGO = '008' THEN
                L_IMPORTE_E := P_IMPORTE;
                L_IMPORTE_B := 0;
                L_IMPORTE_DEP := P_IMPORTE;
            ELSE
                L_IMPORTE_B := P_IMPORTE_TARJETA;
                L_IMPORTE_E := 0;
                L_IMPORTE_DEP := P_IMPORTE_TARJETA;
                --valida que no se duplique importar depositos
                --Validacion de Nro Operacion Bancaria
                SELECT COUNT(1) INTO l_contar FROM CAJA_DEPOSITO
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND NRO_OPERACION = P_OPERACION
                AND IMPORTE <> 0;
                /*IF l_contar > 0 THEN
                    l_error:=1; --no existe serie y numero del documento
                    l_msgerror:='Depósito: Operacion ya esta registrada - '||P_OPERACION;
                    GOTO salida_depalumniddni;
                END IF;*/
        END IF;
        
        select cos_denominacional into l_tipocambio from ELISEO.TIPO_CAMBIO
        where id_moneda=9 
        and  fecha =(
          select max(fecha) from ELISEO.TIPO_CAMBIO  where id_moneda=9
        );
    
          
        --voucher de venta
        SELECT COUNT(1) INTO l_contar FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_TIPOVOUCHER = l_id_tipovoucher;
          
        IF l_contar < 1 THEN
            l_error:=1;
            l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
            GOTO salida_depalumniddni;
        ELSIF l_contar > 1 THEN
            l_error:=1;
            l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||to_char(P_ID_ANHO);
            GOTO salida_depalumniddni;
        END IF;
          

        IF L_ID_COMPROBANTE<>'00' THEN
            PKG_PAY.SP_VENTAS_ALUMNOIDDNI(
                   P_ID_CLIENTE,	
                   P_OPERACION,
                   P_ID_ENTIDAD,
                   P_ID_DEPTO,
                   P_ID_ANHO ,
                   P_ID_MES, 
                   L_IMPORTE_DEP,	
                   L_IP,
                   P_ID_DINAMICA,
                   P_ID_CLIENTE,
                   L_ID_COMPROBANTE,
                   L_ID_TIPOVENTA,
                   P_ID_MONEDA,
                   l_tipocambio,
                   P_IMPORTE_ME,
                   L_CANTIDAD,
                   l_ventas,
                   l_ventas_imp,
                   l_error,
                   l_msgerror
            );
          
            IF coalesce(length(l_ventas),0)>0 THEN
                select SERIE||'-'||NUMERO into l_serie_numero from venta where id_venta=to_number(l_ventas);
                P_ID_DEPOSITO:=to_number(l_ventas);
            END IF;
          
            SELECT ID_PARENT INTO l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=P_ID_DINAMICA;
        ELSE
            l_id_dinamica_dep:=P_ID_DINAMICA;
        END IF;
        
        
        SELECT ID_TIPOTRANSACCION INTO l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;
    
        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              P_ID_ANHO,
                              P_ID_MES,
                              P_ID_MEDIOPAGO,
                              P_ID_PERSONA,
                              P_ID_CLIENTE,
                              l_ventas,
                              l_ventas_imp,
                              l_tipo,
                              l_id_tipotransaccion,
                              P_ID_MONEDA,
                              l_id_dinamica_dep,
                              P_ID_TIPOTARJETA,
                              P_ID_CTABANCARIA,
                              P_OPERACION,
                              P_FECHA_OP,
                              L_IMPORTE_E,
                              L_IMPORTE_B,
                              0,
                              P_IMPORTE_ME,
                              l_tipocambio,
                              l_glosa,
                              null,
                              null,
                              P_ID_TIPOASIENTO,
                              P_ID_CANAL,
                              l_error,
                              l_msgerror
                            );
        
        --EJECUTA PROCEDIMIENTO DEL POSTULANTE
        CALEB.pcd_postulante_paso_pago(P_ID_PERSONA_INSCRIPCION); 
                
       <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;
        
     end SP_CREAR_DEPOSITO_ALUMNO_ADM;
    PROCEDURE SP_CREAR_VENTA_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,
                                    P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                                    P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_EVENTO_PARTICIPANTE VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2, P_ID_VENTA OUT NUMBER) IS
        L_ID_ANHO NUMBER;
        L_ID_MES NUMBER;
        L_VENTAS VARCHAR2(100):=NULL;
        L_VENTAS_IMP VARCHAR2(100):=NULL;
        L_TIPO VARCHAR2(100):='V';
        L_ID_TIPOTRANSACCION NUMBER; ---POR DEFINIR
        L_CONTAR NUMBER:=0;
        L_FECHA DATE;
        L_IMPORTE_ME NUMBER:=0;
        L_TIPOCAMBIO NUMBER:=0;
        L_GLOSA VARCHAR2(200);
        L_ID_TIPOASIENTO VARCHAR2(5) := 'MB';
        L_ID_TIPOVOUCHER NUMBER := 5;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_DINAMICA_DEP NUMBER;
        L_SERIE_NUMERO VARCHAR2(30);
        P_COD_TARJETA   VARCHAR2(10);
        L_ID_COMPROBANTE VARCHAR2(20) := '03';
        L_ID_TIPOVENTA NUMBER :='6';--se puede obtener de la dinamica
        N_IMPORTE NUMBER(10,2):=0;
        N_IMPORTE_EFECTIVO NUMBER(10,2):=0;
        N_IMPORTE_TARJETA NUMBER(10,2):=0;
        N_IMPORTE_ME NUMBER(10,2):=0;
        L_IP VARCHAR2(50);
        L_ERROR NUMBER:=0;
        L_MSGERROR VARCHAR2(200):='';
        L_CANTIDAD NUMBER(10,2):=1;
                              
    BEGIN
        SELECT 
            TO_NUMBER(TO_CHAR(SYSDATE,'YYYY')),  TO_NUMBER(TO_CHAR(SYSDATE,'MM')), SYSDATE, 'DEPÓSITO EVENTOS'
            INTO L_ID_ANHO, L_ID_MES, L_FECHA, L_GLOSA
        FROM DUAL;
        --voucher de venta
        SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = L_ID_ANHO
        AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;

        IF L_CONTAR < 1 THEN
          L_ERROR:=1;
          L_MSGERROR:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
          GOTO SALIDA_DEP_VNT;
        ELSIF L_CONTAR > 1 THEN
          L_ERROR:=1;
          L_MSGERROR:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||TO_CHAR(L_ID_ANHO);
          GOTO SALIDA_DEP_VNT;
        END IF;

        SELECT ID_TIPOASIENTO INTO L_ID_TIPOASIENTO FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = L_ID_ANHO
        AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
        
        SELECT COS_DENOMINACIONAL INTO L_TIPOCAMBIO FROM ELISEO.TIPO_CAMBIO
        WHERE ID_MONEDA=9 
        AND  FECHA =(
          SELECT MAX(FECHA) FROM ELISEO.TIPO_CAMBIO  WHERE ID_MONEDA=9 AND COALESCE(COS_DENOMINACIONAL,0)>0
        );
        
        IF P_ID_MEDIOPAGO = '008' THEN
            N_IMPORTE_EFECTIVO:= P_IMPORTE;
            N_IMPORTE_TARJETA:= 0;
            N_IMPORTE:= P_IMPORTE;
        ELSE
            N_IMPORTE_TARJETA := P_IMPORTE_TARJETA;
            N_IMPORTE_EFECTIVO:= 0;
            N_IMPORTE:= P_IMPORTE_TARJETA;
        END IF;
        
          
        IF P_ID_MONEDA=9 THEN
            N_IMPORTE:=P_IMPORTE * L_TIPOCAMBIO;
            N_IMPORTE_ME:=P_IMPORTE;
        ELSE
            L_TIPOCAMBIO:=0;
        END IF;

        PKG_PAY.SP_VENTAS_ALUMNOIDDNI(
           P_ID_CLIENTE,	
           P_OPERACION,
           P_ID_ENTIDAD,
           P_ID_DEPTO,
           L_ID_ANHO ,
           L_ID_MES, 
           N_IMPORTE,	
           L_IP,
           P_ID_DINAMICA,
           P_ID_PERSONA, --ID_USER
           L_ID_COMPROBANTE,
           L_ID_TIPOVENTA,
           P_ID_MONEDA,
           L_TIPOCAMBIO,
           N_IMPORTE_ME,
           L_CANTIDAD,
           L_VENTAS,
           L_VENTAS_IMP,
           L_ERROR,
           L_MSGERROR
        );

        IF COALESCE(LENGTH(L_VENTAS),0)>0 THEN
            SELECT SERIE||'-'||NUMERO INTO L_SERIE_NUMERO FROM VENTA WHERE ID_VENTA=TO_NUMBER(L_VENTAS);
        END IF;

        SELECT ID_PARENT INTO L_ID_DINAMICA_DEP FROM CONTA_DINAMICA WHERE ID_DINAMICA = P_ID_DINAMICA;
        
        SELECT COUNT(1) INTO L_CONTAR FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;
        IF L_CONTAR>0 THEN
           SELECT ID_TIPOTARJETA INTO L_ID_TIPOTARJETA FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;
        END IF;
        
        SELECT ID_TIPOTRANSACCION INTO L_ID_TIPOTRANSACCION FROM CONTA_DINAMICA WHERE ID_DINAMICA = L_ID_DINAMICA_DEP;

        PKG_PAY.SP_CREAR_DEPOSITO_ALUMNOIDDNI(
                              P_ID_ENTIDAD,
                              P_ID_DEPTO,
                              L_ID_ANHO,
                              L_ID_MES,
                              P_ID_MEDIOPAGO,
                              P_ID_PERSONA,
                              P_ID_CLIENTE,
                              L_VENTAS,
                              L_VENTAS_IMP,
                              L_TIPO,
                              L_ID_TIPOTRANSACCION,
                              P_ID_MONEDA,
                              L_ID_DINAMICA_DEP,
                              L_ID_TIPOTARJETA,
                              NULL,
                              P_OPERACION,
                              L_FECHA,
                              N_IMPORTE_EFECTIVO,
                              N_IMPORTE_TARJETA,
                              0,
                              N_IMPORTE_ME,
                              L_TIPOCAMBIO,
                              L_GLOSA,
                              P_NOMBRE_DEP,
                              P_DOCUMENTO_DEP,
                              L_ID_TIPOASIENTO,
                              P_ID_CANAL,
                              L_ERROR,
                              L_MSGERROR
                            );
                            
        UPDATE JONAS.EVENTO_EVENTO_PARTICIPANTE SET ID_VENTA = L_VENTAS, ESTADO = 2 WHERE ID_EVENTO_PARTICIPANTE = P_ID_EVENTO_PARTICIPANTE;
        
        <<SALIDA_DEP_VNT>>
        P_ID_VENTA:=TO_NUMBER(L_VENTAS);
        P_ERROR:=L_ERROR;
        P_MSGERROR:=L_MSGERROR;
       -- END;
    END SP_CREAR_VENTA_DEPOSITO;
    
    PROCEDURE SP_CREAR_DEPOSITO_ALUMNO_NEW(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,P_ID_CLIENTE NUMBER,P_AUTOMATICO VARCHAR2,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ID_TIPOTRANSACCION NUMBER,
                              P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_ME NUMBER,
                              P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_TIPO_VENTAS  VARCHAR2,P_NRO_CUOTA_VENTAS VARCHAR2,P_ID_CANAL INT DEFAULT NULL,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2, P_ID_DEPOSITO OUT NUMBER) IS
                              
        L_SERIE VARCHAR2(4);
        L_NUMERO VARCHAR2(8);
        L_DEPOSITO NUMBER:=0;
        L_ESTADO VARCHAR2(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        L_ID_VOUCHER NUMBER :=0;
        L_ERROR NUMBER:=0;
        L_MSGERROR VARCHAR2(200):='';
        L_CORRELATIVO NUMBER :=0;
        L_ID_COMPROBANTE VARCHAR2(3):='00';  --deposito
        L_AUTOMATICO VARCHAR2(2);
        L_CONTAR NUMBER;
        L_FECHA DATE;
        --l_id_ctabancaria number;
        L_IMPORTEDET NUMBER(10,2);
        L_IMPORTEASIENTO NUMBER(10,2) :=0;
        L_IMPORTE_DEP NUMBER(10,2) :=0;
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(200);
        L_ID_DDETALLE NUMBER;
        L_TIPO_TARJETA VARCHAR2(30);
        L_COD_DINAMICA_ANT VARCHAR2(5);
        L_IMPORTE_TRANS NUMBER := 0;
        L_VENTAS  VARCHAR2(200);
        L_VENTAS_IMP VARCHAR2(300);
        L_TIPO VARCHAR2(300);
        L_VENTAS_D  VARCHAR2(200);
        L_VENTAS_IMP_D VARCHAR2(300);
        L_TIPO_D VARCHAR2(300);
        L_ID_DINAMICA NUMBER;
        L_ID_TIPODEPOSITO NUMBER  := 1;--DEPOSITOS ALUMNOS
        L_BANCO VARCHAR2(20);
        
        s_ventas tablastring; 
        s_importes tablastring;
        s_tipo tablastring;
        s_nro_cuota tablastring;
        
        l_id_venta number;
        
        l_ventas_tmp varchar2(100):=null;
        l_ventas_imp_tmp varchar2(100):=null;
        l_tipo_tmp varchar2(100):=null;
        
        cursor curPen is
         select 
          ID_VENTA_CONT, 
          IMPORTE, 
          TIPO, 
          NRO_CUOTA
        from ELISEO.TT_VENTAS_DEPOSITO
        where TIPO='P';
        
        BEGIN
            IF P_ID_MEDIOPAGO = '008' THEN
                L_IMPORTE_DEP := P_IMPORTE;
            ELSE
                L_IMPORTE_DEP := P_IMPORTE_TARJETA;
                --valida que no se duplique importar depositos
                --Validacion de Nro Operacion Bancaria
                SELECT COUNT(1) INTO L_CONTAR FROM CAJA_DEPOSITO
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND NRO_OPERACION = P_OPERACION
                AND IMPORTE <> 0;
                /*IF L_CONTAR > 0 THEN
                    L_ERROR:=1; --no existe serie y numero del documento
                    L_MSGERROR:='Depósito: Operacion ya esta registrada - '||P_OPERACION;
                    GOTO SALIDA_RAPIDA;
                END IF;*/
            END IF;
            
            SELECT SYSDATE INTO L_FECHA FROM DUAL;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
            
            --obtiene numero y serie y actualiza correlativo
            PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,L_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO, NULL, L_SERIE,L_CORRELATIVO);
          
            IF L_CORRELATIVO=0 OR L_CORRELATIVO IS NULL THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSGERROR:='Depósito: No existe serie y número de documento ('||L_ID_COMPROBANTE||')';
                GOTO SALIDA_RAPIDA;
            ELSE
                --obtener voucher
                SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG  
                WHERE ID_ENTIDAD=P_ID_ENTIDAD 
                AND ID_DEPTO= P_ID_DEPTO
                AND ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                AND ID_ANHO=P_ID_ANHO
                AND ID_TIPOVOUCHER = 5; 
          
                IF L_CONTAR>0  THEN
                    SELECT AUTOMATICO INTO L_AUTOMATICO FROM CONTA_VOUCHER_CONFIG  
                    WHERE ID_ENTIDAD=P_ID_ENTIDAD 
                    AND ID_DEPTO= P_ID_DEPTO
                    AND ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                    AND ID_ANHO=P_ID_ANHO
                    AND ID_TIPOVOUCHER = 5; -- 5= tipo voucher ingresos   

                    IF L_AUTOMATICO='S' THEN
                        PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,SYSDATE,P_ID_TIPOASIENTO,5,NULL, 'S', P_ID_PERSONA, L_ID_VOUCHER);
                    END IF;
                END IF;
            END IF;
      
            IF L_ID_VOUCHER=0 THEN
                L_ERROR:=2; --no existe voucher
                L_MSGERROR:='Depósito: No existe voucher ';
                GOTO SALIDA_RAPIDA;
            END IF;
      
      --goto salida_rapida;
      IF L_ERROR=0 THEN
        SELECT LPAD(TO_CHAR(L_CORRELATIVO),8,'0') INTO L_NUMERO FROM DUAL;
        SELECT COUNT(1) INTO L_CONTAR FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        IF L_CONTAR>0 THEN
           SELECT NOMBRE INTO L_TIPO_TARJETA FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        END IF;
        
        SELECT COUNT(1) INTO L_CONTAR FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
        ON A.ID_BANCO = B.ID_BANCO
        WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        IF L_CONTAR > 0 THEN
            SELECT B.SIGLA INTO L_BANCO FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
            ON A.ID_BANCO = B.ID_BANCO
            WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        END IF;
        
        SELECT 
                (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'- Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||SUBSTR(P_GLOSA,1,20)
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alumn:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||L_TIPO_TARJETA||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alum:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                ELSE 
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alumn:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||L_TIPO_TARJETA||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||': Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||SUBSTR(P_GLOSA,1,20)
                END )
                 AS GLOSA INTO L_GLOSA
        FROM DUAL;
        
        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_TIPODEPOSITO,
          ID_CANAL
        )VALUES( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          L_ID_VOUCHER, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          L_SERIE,
          L_NUMERO,
          L_FECHA,
          L_IMPORTE_DEP, 
          P_IMPORTE_ME,
          P_TIPOCAMBIO,
          --P_GLOSA, 
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          L_ESTADO,
          P_FECHA_OP,
          P_OPERACION,
          L_ID_TIPODEPOSITO,
          P_ID_CANAL
        ) RETURNING ID_DEPOSITO INTO L_DEPOSITO;
        
       ---obtiene los documentos 
       
        select FC_SPLIT (P_VENTAS,'|') into s_ventas  from dual;
        select FC_SPLIT (P_IMP_VENTAS,'|') into s_importes  from dual; 
        select FC_SPLIT (P_TIPO_VENTAS,'|') into s_tipo  from dual;
        select FC_SPLIT (P_NRO_CUOTA_VENTAS,'|') into s_nro_cuota  from dual; 
        
        FOR i IN s_ventas.FIRST .. s_ventas.LAST
        LOOP
        begin
          INSERT INTO ELISEO.TT_VENTAS_DEPOSITO(
          ID_VENTA_CONT,IMPORTE,TIPO,NRO_CUOTA
          )values(
            to_number(s_ventas(i)),
            to_number(s_importes(i)),
            s_tipo(i),
            to_number(s_nro_cuota(i))
          );
        end;
        end LOOP;
      
        select 
          LISTAGG(ID_VENTA_CONT,'|') WITHIN GROUP(ORDER BY ID_VENTA_CONT) as VENTAS,
          LISTAGG(IMPORTE,'|') WITHIN GROUP(ORDER BY ID_VENTA_CONT) as VENTAS_IMP,
          LISTAGG(TIPO,'|') WITHIN GROUP(ORDER BY ID_VENTA_CONT) as TIPO
          into L_VENTAS_D,L_VENTAS_IMP_D,L_TIPO_D
        from ELISEO.TT_VENTAS_DEPOSITO
        where TIPO<>'P';
        
        --adelantos tiene que generar venta
        FOR cur in curPen LOOP
        BEGIN
          PKG_FINANCES_STUDENTS.SP_COBRAR_CUOTA_X_CONTRATO(
            cur.ID_VENTA_CONT,
            P_ID_ENTIDAD,
            P_ID_DEPTO,
            P_ID_PERSONA,
            cur.NRO_CUOTA,
            l_id_venta, 
            L_ERROR,
            L_MSGERROR
          );
          
          if L_ERROR <> 0 then
              GOTO SALIDA_RAPIDA;
          end if;
          
          select count(1) into l_contar
          from VENTA where id_venta = l_id_venta;

          if l_contar>0 then
            select id_venta,total,'V' into l_ventas_tmp,l_ventas_imp_tmp,l_tipo_tmp
            from VENTA where id_venta = l_id_venta;
            if L_VENTAS_D is null then
              L_VENTAS_D:=l_ventas_tmp;
              L_VENTAS_IMP_D:=l_ventas_imp_tmp;
              L_TIPO_D:=l_tipo_tmp;
            else
              L_VENTAS_D:=L_VENTAS_D||'|'||l_ventas_tmp;
              L_VENTAS_IMP_D:=L_VENTAS_IMP_D||'|'||l_ventas_imp_tmp;
              L_TIPO_D:=L_TIPO_D||'|'||l_tipo_tmp;
            end if;

          end if;

        END;     
        END LOOP;
        
               
        SELECT A.ID_DINAMICA INTO L_ID_DINAMICA FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 13
        AND C.CODIGO = 'AN' --ANTICIPOS
        AND A.ACTIVO = 'S';
        
         PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE(L_DEPOSITO,L_VENTAS_D,L_VENTAS_IMP_D,L_TIPO_D,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,L_ERROR,L_MSGERROR);
         
        /*IF COALESCE(LENGTH(L_VENTAS_D),0)>0 AND L_ERROR=0 THEN --VALIDA VENTAS POR PAGAR Y LA DIFERENCIA LO ENVIA A ANTICIPOS
            PKG_CAJA.SP_CREAR_DEPOSITO_DETALLE(L_DEPOSITO,L_VENTAS_D,L_VENTAS_IMP_D,L_TIPO_D,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,L_ERROR,L_MSGERROR);
          
            SELECT COALESCE(SUM(IMPORTE),0) INTO L_IMPORTEDET FROM CAJA_DEPOSITO_DETALLE
            WHERE ID_DEPOSITO=L_DEPOSITO;
          
            IF L_IMPORTE_DEP>L_IMPORTEDET THEN
                --insert dep sin venta
                SELECT COALESCE(MAX(ID_DDETALLE),0)+1 INTO L_ID_DDETALLE FROM CAJA_DEPOSITO_DETALLE;
                INSERT INTO CAJA_DEPOSITO_DETALLE(--ID_DDETALLE,
                ID_DEPOSITO,ID_VENTA,IMPORTE,IMPORTE_ME)VALUES(--L_ID_DDETALLE,
                L_DEPOSITO,NULL,L_IMPORTE_DEP-L_IMPORTEDET,0);
                --insert Anticipo
                L_COD_DINAMICA_ANT:='AN';-- anticipo a favor del cliente
                PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,L_DEPOSITO,L_IMPORTE_DEP-L_IMPORTEDET,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);
                --genera asiento
                IF P_ID_MEDIOPAGO = '008' THEN
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP-L_IMPORTEDET,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
                ELSE
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP-L_IMPORTEDET,0,L_GLOSA,L_ERROR,L_MSGERROR);
                END IF;
                
            END IF;
        ELSE-- TODO EL IMPORTE VA A ANTICIPOS
            SELECT COALESCE(MAX(ID_DDETALLE),0)+1 INTO L_ID_DDETALLE FROM CAJA_DEPOSITO_DETALLE;
            INSERT INTO CAJA_DEPOSITO_DETALLE(--ID_DDETALLE,
            ID_DEPOSITO,ID_VENTA,IMPORTE,IMPORTE_ME)VALUES(--L_ID_DDETALLE,
            L_DEPOSITO,NULL,L_IMPORTE_DEP,0);
            --insert Anticipo
            L_COD_DINAMICA_ANT:='AN';-- anticipo a favor del cliente
            PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,L_DEPOSITO,L_IMPORTE_DEP,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);
            --genera asiento
            IF P_ID_MEDIOPAGO = '008' THEN
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
            ELSE
                PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP,0,L_GLOSA,L_ERROR,L_MSGERROR);
            END IF;
        END IF;
        */
        SELECT COALESCE(SUM(IMPORTE),0) INTO L_IMPORTEDET FROM CAJA_DEPOSITO_DETALLE
        WHERE ID_DEPOSITO=L_DEPOSITO;
     
      
            
        IF L_IMPORTEDET > 0 THEN
            IF L_ERROR=0  THEN
                IF P_ID_MEDIOPAGO = '008' THEN
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTEDET,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
                ELSE
                    PKG_CAJA.SP_GENERAR_ASIENTO_DEPOSITO(L_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTEDET,0,L_GLOSA,L_ERROR,L_MSGERROR);
                END IF;
            END IF;
        END IF;
            
      END IF;

      <<SALIDA_RAPIDA>>
      P_ERROR:=L_ERROR;
      P_MSGERROR:=L_MSGERROR;
      P_ID_DEPOSITO := L_DEPOSITO;
  END SP_CREAR_DEPOSITO_ALUMNO_NEW;
  
  
END PKG_CAJA;