-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_CAJA_SCHOOL AS 

PROCEDURE SP_CREAR_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2, P_ARTICULOS VARCHAR2, P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_ID_VALE INT default NULL,P_ID_DEPOSITO OUT NUMBER) ;
                              
        PROCEDURE SP_INICIAR_DEPOSITO(P_ID_DEPOSITO IN OUT NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                          P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2, P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                          P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                          P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_ID_VALE INT default null);

        PROCEDURE SP_CREAR_DEPOSITO_DETALLE(P_ID_DEPOSITO NUMBER,P_VENTAS VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ARTICULOS VARCHAR2,P_ID_MONEDA NUMBER,P_TIPO_CAMBIO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) ;

        PROCEDURE SP_FINALIZAR_DEPOSITO(P_ID_DEPOSITO IN NUMBER,P_ID_DINAMICA NUMBER,P_ID_DINAMICA_CLI_SALDO_INI NUMBER, P_ID_CTABANCARIA NUMBER,
                              P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,
                              P_ERROR out NUMBER,P_MSGERROR out VARCHAR2);
        PROCEDURE SP_GENERAR_ASIENTO_DEPOSITO(P_ID_DEPOSITO NUMBER,
                                            P_ID_DINAMICA NUMBER,P_ID_DINAMICA_CLI_SALDO_INI NUMBER, P_ID_CTABANCARIA NUMBER,P_IMPORTE NUMBER,
                                            P_IMPORTE_TARJETA NUMBER ,P_IMPORTE_TRANS NUMBER,P_DETALLE VARCHAR2,
                                            P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2, P_DEP_B VARCHAR2 default null);      
                                            
        PROCEDURE SP_CREAR_PAGO_VENTA(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_CLIENTE NUMBER,P_ID_VENTA NUMBER,P_ID_ARTICULO NUMBER, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2);

        PROCEDURE SP_FINALIZAR_DEVOLUCION_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2);
        
        PROCEDURE SP_GENERAR_ASIENTO_DEV_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2);
        
        PROCEDURE SP_GENERAR_ASIENTO_INTER_DEP(P_ID_DEPOSITO IN NUMBER);
        PROCEDURE SP_GENERAR_ASIENTO_INTER_DEV(P_ID_PAGO IN NUMBER);
        
       PROCEDURE  SP_FACES_ALUMNO_MOBILE (
	  	  P_ID_ENTIDAD NUMBER,
	  	  P_ID_DEPTO VARCHAR2,
	  	  P_ID_CLIENTE NUMBER,
	  	  P_ID_ANHO NUMBER,
	      cursor OUT SYS_REFCURSOR
	  );
      PROCEDURE SP_REGENERATE_VOUCHER(P_ID_VOUCHER IN NUMBER,
                              P_ERROR out NUMBER,P_MSGERROR out VARCHAR2);
      PROCEDURE SP_VERIFY_CLOSED_CASH(P_ID_ENTIDAD IN NUMBER,P_ID_DEPTO IN VARCHAR2,
                                P_ID_ANHO IN NUMBER,
                              P_ERROR out NUMBER,P_MSGERROR out VARCHAR2);
END PKG_CAJA_SCHOOL;


CREATE OR REPLACE PACKAGE BODY        PKG_CAJA_SCHOOL AS

PROCEDURE SP_CREAR_DEPOSITO(P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2, P_ARTICULOS VARCHAR2, P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_ID_VALE INT default NULL,P_ID_DEPOSITO OUT NUMBER) IS
                              
        l_serie varchar2(4);
        l_numero varchar2(8);
        l_deposito number:=0;
        l_estado varchar2(1):='0'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher number :=0;
         
        l_correlativo number :=0;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_automatico varchar2(2);
        l_contar number;
        l_fecha date;
        --l_id_ctabancaria number;
        l_importedet number(10,2);
        l_importeasiento number(10,2);
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(100);
        L_ID_TIPOVOUCHER NUMBER:=5;
        l_cuenta_bancaria varchar2(300):='';
        
        l_id_dinamica_cli_sal_ini number; 
        
        l_id_documento_fin NUMBER := NULL;
       
        l_id_tipopais NUMBER;
       
        l_error number:=0;
        l_msgerror varchar2(200):='';
       
        BEGIN
            select sysdate into l_fecha from dual;
            IF P_ID_VALE = 0 THEN
                L_ID_VALE := NULL;
            ELSE
                L_ID_VALE := P_ID_VALE;
            END IF;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
           
           SELECT COALESCE(max(NOMBRE),'')
           INTO l_cuenta_bancaria
           FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA=L_ID_CTABANCARIA;
           
            
           --obteniendo el id_tipopais
	       	SELECT A.ID_TIPOPAIS INTO l_id_tipopais FROM CONTA_EMPRESA A,CONTA_ENTIDAD B
			WHERE A.ID_EMPRESA = B.ID_EMPRESA AND B.ID_ENTIDAD = P_ID_ENTIDAD AND ROWNUM = 1; --Agregado por Ulices
			--obteniendo el id_comprobante con el codigo '00' de deposito
			SELECT ID_COMPROBANTE INTO l_id_comprobante FROM TIPO_COMPROBANTE WHERE ID_TIPOPAIS = l_id_tipopais AND CODIGO = '00'; --Agregado por Ulices
           
             --========================= CONFIG TO VISA ONLINE=====================================
            IF P_ID_PERSONA = 2 THEN -- USUARIO VISA ONLINE
	            SELECT COUNT(1), max(id_documento) INTO l_contar, l_id_documento_fin FROM FIN_DOCUMENTO_DEPTO
		        WHERE ID_ENTIDAD = P_ID_ENTIDAD
		        AND ID_DEPTO = P_ID_DEPTO
		        AND ID_COMPROBANTE = l_id_comprobante;
		        
		         if l_contar <> 1 THEN
		         	l_error := 1;
                	l_msgerror := 'Alto! Solo debe haber un documento activo de depósitos para el usuario VISA. [tipo de documento: '||l_id_comprobante||']';
                	GOTO salida_rapida;
		         END IF;
		        
            ELSE 
            	l_contar := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD, P_ID_DEPTO);
             	if l_contar <> 1 THEN
		         	l_error := 1;
                	l_msgerror := 'Alto! Solo debe haber un punto de impresión activo de depósitos para el usuario. (Cantidad: '||l_contar || '); [tipo de documento: '||l_id_comprobante||']';
                	GOTO salida_rapida;
		         END IF;
            END IF;
            --========================= CONFIG TO VISA ONLINE=====================================
           
            
                    SELECT 
                count(1), max(din.ID_DINAMICA)
                into l_contar, l_id_dinamica_cli_sal_ini
                FROM eliseo.CONTA_DINAMICA din, eliseo.TIPO_TRANSACCION tra, eliseo.TIPO_GRUPO_CONTA conta
                WHERE din.ID_TIPOTRANSACCION = tra.ID_TIPOTRANSACCION
                AND tra.ID_TIPOGRUPOCONTA = conta.ID_TIPOGRUPOCONTA
                AND din.ID_ENTIDAD = P_ID_ENTIDAD
                AND din.ID_ANHO = P_ID_ANHO
                AND din.ID_DEPTO IN ('0',P_ID_DEPTO)
                AND din.ID_MODULO = 14
                AND conta.CODIGO = 'DS';
                
                if l_contar <> 1
                then
                    L_ERROR :=1;
                    L_MSGERROR := 'Alto! La cantidad de dinámicas configuradas para Clientes Saldo Inicial debe de ser 1 ('||l_contar||' dinámicas)';
                    GOTO salida_rapida;
                end if;    
            
            SELECT   count(*) into l_contar FROM CONTA_VOUCHER_CONFIG
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO =P_ID_DEPTO
                AND ID_MODULO = '14' -- módulo tesorería
                -- AND ID_MODULO = '13'--modulo ventas
                AND ID_ANHO = P_ID_ANHO
                and ID_TIPOASIENTO=P_ID_TIPOASIENTO
                AND AUTOMATICO='S'
                AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
                    
            if l_contar < 1 then
                l_error:=1;
                l_msgerror:='Alto: No existe la configuración de vouchers para los depósitos, del periodo '||to_char(P_ID_ANHO)||'-'||P_ID_TIPOASIENTO;
                GOTO salida_rapida;
            elsif l_contar > 1 then
                l_error:=1;
                l_msgerror:='Alto: Existe más de una configuración de vouchers para los depósitos, del periodo '||to_char(P_ID_ANHO);
                GOTO salida_rapida;
            end if;
            
          --goto salida_rapida;
          if l_error=0 then
            select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
            SELECT 
                    (
                    CASE P_ID_MEDIOPAGO WHEN '006' THEN
                        CASE WHEN P_ID_PERSONA = 2 THEN 
                            'APP:'||l_serie||'-'||to_number(l_numero)||'-'||DECODE(L_ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                        ELSE
                            'POS:'||l_serie||'-'||to_number(l_numero)||'-'||DECODE(L_ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                        END
                    WHEN '001' THEN
                    'DREC:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-(Oper:'||P_OPERACION||'-'||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||COALESCE(l_cuenta_bancaria,'')||')-'||P_GLOSA
                    WHEN '008' THEN
                    'EFEC:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                    WHEN '999' THEN
                    '-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                    ELSE 'DEPOSITO CLIENTES' END )
                     as GLOSA INTO L_GLOSA
            FROM DUAL;
            
            --========================= CONFIG TO VISA ONLINE=====================================
            -- Obtiene numero y serie y actualiza correlativo
           IF P_ID_PERSONA = 2 THEN -- USUARIO VISA ONLINE
           		PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento_fin,l_serie,l_correlativo);
           ELSE 
           		PKG_SALES_SCHOOL.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, l_serie,l_correlativo);
           END IF;
          --========================= CONFIG TO VISA ONLINE=====================================
           
            -- Obtener voucher.
            PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,P_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,null, 'S', P_ID_PERSONA, l_id_voucher);
      
      
            /*
            if l_id_voucher=0 then
                l_error:=2; --no existe voucher
                l_msgerror:='Depósito:--> No existe voucher'||P_ID_ENTIDAD||' - '||P_ID_DEPTO||' - '||P_ID_ANHO||' - '||P_ID_MES||' - '||P_ID_TIPOASIENTO||' - '||P_ID_PERSONA;
            end if;
            */
            
            INSERT INTO CAJA_DEPOSITO(
              ID_ENTIDAD, 
              ID_DEPTO, 
              ID_ANHO, 
              ID_MES, 
              ID_VOUCHER, 
              ID_MEDIOPAGO, 
              ID_PERSONA, 
              ID_CLIENTE, 
              ID_TIPOTRANSACCION,
              ID_MONEDA,
              ID_DINAMICA,
              ID_VALE,
              ID_TIPOTARJETA,
              ID_CTABANCARIA,
              SERIE,
              NUMERO,
              FECHA,
              IMPORTE, 
              IMPORTE_ME,
              TIPOCAMBIO,
              GLOSA, 
              NOMBRE_DEP, 
              DOCUMENTO_DEP,
              ESTADO,
              FECHA_OPERACION,
              NRO_OPERACION
            )VALUES( 
              P_ID_ENTIDAD, 
              P_ID_DEPTO, 
              P_ID_ANHO, 
              P_ID_MES, 
              l_id_voucher, 
              P_ID_MEDIOPAGO, 
              P_ID_PERSONA, 
              P_ID_CLIENTE, 
              P_ID_TIPOTRANSACCION,
              P_ID_MONEDA,
              P_ID_DINAMICA,
              L_ID_VALE,
              L_ID_TIPOTARJETA,
              L_ID_CTABANCARIA,
              l_serie,
              l_numero,
              l_fecha,
              P_IMPORTE, 
              P_IMPORTE_ME,
              P_TIPOCAMBIO,
              --P_GLOSA,
              SUBSTR(L_GLOSA,0,1000), 
              SUBSTR(P_NOMBRE_DEP,0,50), 
              P_DOCUMENTO_DEP,
              l_estado,
              P_FECHA_OP,
              P_OPERACION
            ) RETURNING ID_DEPOSITO INTO l_deposito;
            
            /*
            SELECT MAX(ID_DEPOSITO) INTO l_deposito FROM CAJA_DEPOSITO 
                WHERE ID_ENTIDAD= P_ID_ENTIDAD 
                    AND ID_DEPTO=P_ID_DEPTO AND ID_ANHO=P_ID_ANHO 
                    AND ID_MES=P_ID_MES AND ID_VOUCHER=l_id_voucher 
                    AND ID_PERSONA=P_ID_PERSONA;*/
            
            --l_error:=1; --no existe voucher
            --l_msgerror:=l_deposito;
            --goto salida_rapida;
            
            /*if P_IMPORTE_TARJETA>0 and l_error=0 then --ya no se usa, solo se registra en caja_deposito
                PKG_CAJA.SP_CREAR_DEPOSITO_BANCO(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO , P_ID_MES ,l_deposito, P_ID_DINAMICA ,P_ID_MONEDA,P_ID_CTABANCARIA, P_ID_TIPOTARJETA,
                                    P_ID_PERSONA,P_ID_MEDIOPAGO,P_OPERACION,l_fecha,P_IMPORTE_TARJETA,P_IMPORTE_ME,P_TIPOCAMBIO,
                                    P_GLOSA,P_ID_TIPOASIENTO,l_estado,l_error,l_msgerror);
            end if;*/
            
            if coalesce(length(P_VENTAS),0)>0 and l_error=0 then
                DBMS_OUTPUT.PUT_LINE('P_VENTAS = ' || P_VENTAS);
                DBMS_OUTPUT.PUT_LINE('P_IMP_VENTAS = ' || P_IMP_VENTAS);
                DBMS_OUTPUT.PUT_LINE('P_ID_MONEDA = ' || P_ID_MONEDA);
                DBMS_OUTPUT.PUT_LINE('P_TIPOCAMBIO = ' || P_TIPOCAMBIO);
                DBMS_OUTPUT.PUT_LINE('P_ID_DINAMICA = ' || P_ID_DINAMICA);
            
                
                PKG_CAJA_SCHOOL.SP_CREAR_DEPOSITO_DETALLE(l_deposito,P_VENTAS,P_IMP_VENTAS,P_ARTICULOS, P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
                
                if l_error = 1 then 
                    GOTO salida_rapida;
                end if;
                
                select coalesce(sum(importe),0) into l_importedet from caja_deposito_detalle
                where id_deposito=l_deposito;

              
                if P_IMPORTE<>l_importedet then
                    l_error:=1; 
                    l_msgerror:='Depósito: Importe depósito('||to_char(P_IMPORTE)||') es diferente a la suma de importe de los doc ('||to_char(l_importedet)||') pagados';
                    goto salida_rapida;
                end if;
              
            end if;
            
            l_importeasiento:=P_IMPORTE;
            
            if coalesce(P_IMPORTE_TARJETA,0)>0 then
                l_importeasiento:=0;
            end if;
            
            if coalesce(P_IMPORTE_TRANS,0)>0 then
                l_importeasiento:=0;
            end if;
            if l_error=0  then
                                          
                update caja_deposito set estado = '1', SERIE = l_serie, NUMERO = l_correlativo, ID_VOUCHER = l_id_voucher
            where id_deposito=l_deposito;
                              
               PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_DEPOSITO(l_deposito,P_ID_DINAMICA,l_id_dinamica_cli_sal_ini,P_ID_CTABANCARIA,l_importeasiento,P_IMPORTE_TARJETA,P_IMPORTE_TRANS,L_GLOSA,l_error,l_msgerror);
               
            end if;
            
          end if;
    
          <<salida_rapida>>
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
         P_ID_DEPOSITO:= l_deposito;
  END SP_CREAR_DEPOSITO;

 PROCEDURE  SP_FACES_ALUMNO_MOBILE (
  	  P_ID_ENTIDAD NUMBER,
  	  P_ID_DEPTO VARCHAR2,
  	  P_ID_CLIENTE NUMBER,
  	  P_ID_ANHO NUMBER,
      cursor OUT SYS_REFCURSOR
  )
  IS
    l_error number:=0;
    l_msgerror varchar2(200):='';
  BEGIN
    
    /*
	  OPEN cursor FOR
	  
	  SELECT 
		id_anho, id_mes, 
		(SELECT max(nombre) FROM conta_mes x WHERE x.id_mes =a.id_mes) AS nombre_mes, 
		CASE WHEN sum(RED) > 0 THEN 'red' ELSE 
			CASE WHEN sum(YELLOW)>0 THEN 'yellow' ELSE 'green' END END  AS color
		FROM (
		SELECT smc.ID_ANHO, smc.ID_MES, ss.ID_VENTA,
		smc.FECHA-trunc(v.FECHA) AS cant_dias_deuda, 
		CASE WHEN smc.FECHA-trunc(v.FECHA) BETWEEN 0 and 3 THEN 1 ELSE 0 END AS green,
		CASE WHEN smc.FECHA-trunc(v.FECHA) BETWEEN 4 and 90 THEN 1 ELSE 0 END AS yellow,
		CASE WHEN smc.FECHA-trunc(v.FECHA) > 90 THEN 1 ELSE 0 END AS red,
		ss.IMPORTE AS importe_saldo 
		FROM SEGCLI_SALDOS ss
		INNER JOIN venta v ON v.ID_VENTA = ss.ID_VENTA 
		INNER JOIN SEGCLI_MES_CORTE smc ON ss.ID_MESCORTE = smc.ID_MESCORTE 
		WHERE 7=7
		AND smc.ID_ENTIDAD = P_ID_ENTIDAD
		AND smc.ID_DEPTO = P_ID_DEPTO
		AND v.ID_CLIENTE = P_ID_CLIENTE
		AND smc.ID_ANHO =P_ID_ANHO
		) a
		GROUP BY ID_ANHO, ID_MES ORDER BY id_mes;
        */
        
        OPEN cursor FOR
        SELECT 
                    ID_ANHO, orden AS ID_MES, NOMBRE AS NOMBRE_MES, 
                    CASE WHEN sum(RED) > 0 THEN 'red' ELSE 
                    CASE WHEN sum(YELLOW)>0 THEN 'yellow' ELSE 'green' END END  AS color,
                    sum(importe_saldo) AS importe, 
                    sum(dias_deuda) AS dias_deuda
                    FROM (
                    SELECT ss.ID_ARTICULO, coalesce(mm.ID_MES,0) AS orden, COALESCE(ia.NOMBRE, 'Sin Nombre') AS nombre, v.ID_CLIENTE, v.ID_VENTA, v.SERIE, v.NUMERO, v.FECHA, smc.ID_ANHO, smc.ID_MES, ss.ID_VENTA,
                    CASE WHEN ss.IMPORTE <= 0 THEN 0 ELSE (CASE WHEN trunc(smc.FECHA,'mm') = TRUNC(sysdate, 'mm') THEN trunc(sysdate) ELSE trunc(smc.FECHA) END)-trunc(v.FECHA) END AS cant_dias_deuda, 
                    CASE WHEN CASE WHEN ss.IMPORTE <= 0 THEN 0 ELSE (CASE WHEN trunc(smc.FECHA,'mm') = TRUNC(sysdate, 'mm') THEN trunc(sysdate) ELSE trunc(smc.FECHA) END)-trunc(v.FECHA) END BETWEEN 0 and 3 THEN 1 ELSE 0 END AS green,
                    CASE WHEN CASE WHEN ss.IMPORTE <= 0 THEN 0 ELSE (CASE WHEN trunc(smc.FECHA,'mm') = TRUNC(sysdate, 'mm') THEN trunc(sysdate) ELSE trunc(smc.FECHA) END)-trunc(v.FECHA) END BETWEEN 4 and 90 THEN 1 ELSE 0 END AS yellow,
                    CASE WHEN CASE WHEN ss.IMPORTE <= 0 THEN 0 ELSE (CASE WHEN trunc(smc.FECHA,'mm') = TRUNC(sysdate, 'mm') THEN trunc(sysdate) ELSE trunc(smc.FECHA) END)-trunc(v.FECHA) END > 90 THEN 1 ELSE 0 END AS red,
                    ss.IMPORTE AS importe_saldo,
                    CASE WHEN ss.IMPORTE <= 0 THEN 0 ELSE (CASE WHEN trunc(smc.FECHA,'mm') = TRUNC(sysdate, 'mm') THEN trunc(sysdate) ELSE trunc(smc.FECHA) END) -trunc(v.FECHA) END AS dias_deuda
                    FROM SEGCLI_SALDOS_DETALLE ss
                    INNER JOIN venta v ON v.ID_VENTA = ss.ID_VENTA 
                    INNER JOIN SEGCLI_MES_CORTE smc ON ss.ID_MESCORTE = smc.ID_MESCORTE 
                    INNER JOIN jose.SCHOOL_INSTITUCION si ON si.ID_CAMPO = v.ID_ENTIDAD AND si.ID_DEPTO = v.ID_DEPTO 
                    LEFT OUTER JOIN eliseo.INVENTARIO_ARTICULO ia ON ia.ID_ARTICULO = ss.ID_ARTICULO 
                    LEFT OUTER JOIN jose.MAT_MES mm ON mm.ID_ARTICULO = ia.ID_ARTICULO 
                    WHERE 7=7
                    AND si.ID_CAMPO = P_ID_ENTIDAD
                    AND si.ID_DEPTO = P_ID_DEPTO
                    AND smc.ID_ANHO = P_ID_ANHO
                    AND smc.ID_MES = CASE WHEN P_ID_ANHO = TO_CHAR(SYSDATE,'yyyy') THEN TO_CHAR(SYSDATE,'mm') ELSE '12' end
                    AND v.ID_CLIENTE = P_ID_CLIENTE
                    ) H    
                    GROUP BY ID_ANHO, orden, nombre, ID_ARTICULO 
                    ORDER BY ID_ANHO, orden, ID_ARTICULO
                    ;
    
    END SP_FACES_ALUMNO_MOBILE;
   
    PROCEDURE SP_INICIAR_DEPOSITO(P_ID_DEPOSITO IN OUT NUMBER,P_ID_ENTIDAD NUMBER,P_ID_DEPTO VARCHAR2,P_ID_ANHO NUMBER,P_ID_MES NUMBER,P_ID_MEDIOPAGO VARCHAR2,P_ID_PERSONA NUMBER,
                              P_ID_CLIENTE NUMBER,P_VENTAS  VARCHAR2,P_IMP_VENTAS VARCHAR2, P_ID_TIPOTRANSACCION NUMBER,P_ID_MONEDA NUMBER,P_ID_DINAMICA NUMBER,P_ID_TIPOTARJETA NUMBER,P_ID_CTABANCARIA NUMBER,
                              P_OPERACION VARCHAR2,P_FECHA_OP DATE,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,P_IMPORTE_ME NUMBER,P_TIPOCAMBIO NUMBER,P_GLOSA VARCHAR2,P_NOMBRE_DEP VARCHAR2,
                              P_DOCUMENTO_DEP VARCHAR2,P_ID_TIPOASIENTO VARCHAR2,P_ERROR out NUMBER,P_MSGERROR out VARCHAR2,P_ID_VALE INT default null) IS
                              
        l_serie varchar2(4);
        l_numero varchar2(8);
        l_deposito number:=0;
        l_estado varchar2(1):='0'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher number :=0;
        
        l_correlativo number :=0;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_automatico varchar2(2);
        l_contar number;
        l_fecha date;
        --l_id_ctabancaria number;
        l_importedet number(10,2);
        l_importeasiento number(10,2);
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(100);
        L_ID_TIPOVOUCHER NUMBER:=5;
       
        L_ID_PERSONA_V NUMBER;
        
        l_id_documento_fin NUMBER := NULL;
       
        l_id_tipopais NUMBER;
      
        l_error number:=0;
        l_msgerror varchar2(200):='';
        BEGIN
            select sysdate into l_fecha from dual;
            IF P_ID_VALE = 0 THEN
                L_ID_VALE := NULL;
            ELSE
                L_ID_VALE := P_ID_VALE;
            END IF;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;
            
           --obteniendo el id_tipopais
	       	SELECT A.ID_TIPOPAIS INTO l_id_tipopais FROM CONTA_EMPRESA A,CONTA_ENTIDAD B
			WHERE A.ID_EMPRESA = B.ID_EMPRESA AND B.ID_ENTIDAD = P_ID_ENTIDAD AND ROWNUM = 1; --Agregado por Ulices
			--obteniendo el id_comprobante con el codigo '00' de deposito
			SELECT ID_COMPROBANTE INTO l_id_comprobante FROM TIPO_COMPROBANTE WHERE ID_TIPOPAIS = l_id_tipopais AND CODIGO = '00'; --Agregado por Ulices
			
            --========================= CONFIG TO VISA ONLINE=====================================
            IF P_ID_PERSONA = 2 THEN -- USUARIO VISA ONLINE
	            SELECT COUNT(1), max(id_documento) INTO l_contar, l_id_documento_fin FROM FIN_DOCUMENTO_DEPTO
		        WHERE ID_ENTIDAD = P_ID_ENTIDAD
		        AND ID_DEPTO = P_ID_DEPTO
		        AND ID_COMPROBANTE = l_id_comprobante;
		        
		         if l_contar <> 1 THEN
		         	l_error := 1;
                	l_msgerror := 'Alto! Solo debe haber un documento activo de depósitos para el usuario VISA. [tipo de documento: '||l_id_comprobante||']';
                	GOTO salida_rapida;
		         END IF;
		        
            ELSE 
            	l_contar := PKG_SALES.FC_VERIFICAR_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD, P_ID_DEPTO);
             	if l_contar <> 1 THEN
		         	l_error := 1;
                	l_msgerror := 'Alto! Solo debe haber un punto de impresión activo de depósitos para el usuario. (Cantidad: '||l_contar || '); [tipo de documento: '||l_id_comprobante||']';
                	GOTO salida_rapida;
		         END IF;
            END IF;
            --========================= CONFIG TO VISA ONLINE=====================================
            
            SELECT   count(*) into l_contar FROM CONTA_VOUCHER_CONFIG
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO =P_ID_DEPTO
                AND ID_MODULO = '14' -- módulo tesorería
                -- AND ID_MODULO = '13'--modulo ventas
                AND ID_ANHO = P_ID_ANHO
                and ID_TIPOASIENTO=P_ID_TIPOASIENTO
                AND AUTOMATICO='S'
                AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
                    
            if l_contar < 1 then
                l_error:=1;
                l_msgerror:='Alto: No existe la configuración de vouchers para los depósitos, del periodo '||to_char(P_ID_ANHO)||'-'||P_ID_TIPOASIENTO;
                GOTO salida_rapida;
            elsif l_contar > 1 then
                l_error:=1;
                l_msgerror:='Alto: Existe más de una configuración de vouchers para los depósitos, del periodo '||to_char(P_ID_ANHO);
                GOTO salida_rapida;
            end if;
            
          --goto salida_rapida;
          if l_error=0 THEN
          
           --========================= CONFIG TO VISA ONLINE=====================================
            -- Obtiene numero y serie y actualiza correlativo
           IF P_ID_PERSONA = 2 THEN -- USUARIO VISA ONLINE
           		--PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento_fin,l_serie,l_correlativo);  -- Comentado porque el numero se asigna al finalizar la operacion
           		
	           	SELECT ID_PERSONA INTO L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
	      		WHERE ID_ENTIDAD = P_ID_ENTIDAD
	      		AND ID_DEPTO = P_ID_DEPTO;
           		
           ELSE 
           		--PKG_SALES_SCHOOL.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, l_serie,l_correlativo);  -- Comentado porque el numero se asigna al finalizar la operacion
           		L_ID_PERSONA_V := P_ID_PERSONA;
           END IF;
          --========================= CONFIG TO VISA ONLINE=====================================
           
           select lpad(to_char(l_correlativo),8,'0') into l_numero from dual;
            SELECT 
                    (
                    CASE P_ID_MEDIOPAGO WHEN '006' THEN
                    P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||DECODE(L_ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                    WHEN '008' THEN
                    P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                    WHEN '999' THEN
                    P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                    ELSE 'DEPOSITO CLIENTES' END )
                     as GLOSA INTO L_GLOSA
            FROM DUAL;
           
            --obtiene numero y serie y actualiza correlativo
            --PKG_SALES.SP_OBTENER_SERIE_NUMERO(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,l_serie,l_correlativo);
          
            -- Obtener voucher.  -- Comentado porque la creacion del voucher va al finalizar el deposito
            -- PKG_ACCOUNTING.SP_CREAR_VOUCHER(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,sysdate,P_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,null, 'S', L_ID_PERSONA_V, l_id_voucher);

            INSERT INTO CAJA_DEPOSITO(
              ID_ENTIDAD, 
              ID_DEPTO, 
              ID_ANHO, 
              ID_MES, 
              --ID_VOUCHER, 
              ID_MEDIOPAGO, 
              ID_PERSONA, 
              ID_CLIENTE, 
              ID_TIPOTRANSACCION,
              ID_MONEDA,
              ID_DINAMICA,
              ID_VALE,
              ID_TIPOTARJETA,
              ID_CTABANCARIA,
              SERIE,
              NUMERO,
              FECHA,
              IMPORTE, 
              IMPORTE_ME,
              TIPOCAMBIO,
              GLOSA, 
              NOMBRE_DEP, 
              DOCUMENTO_DEP,
              ESTADO,
              FECHA_OPERACION,
              NRO_OPERACION
            )VALUES( 
              P_ID_ENTIDAD, 
              P_ID_DEPTO, 
              P_ID_ANHO, 
              P_ID_MES, 
              --l_id_voucher, 
              P_ID_MEDIOPAGO, 
              P_ID_PERSONA, 
              P_ID_CLIENTE, 
              P_ID_TIPOTRANSACCION,
              P_ID_MONEDA,
              P_ID_DINAMICA,
              L_ID_VALE,
              L_ID_TIPOTARJETA,
              L_ID_CTABANCARIA,
              l_serie,
              l_numero,
              l_fecha,
              P_IMPORTE, 
              P_IMPORTE_ME,
              P_TIPOCAMBIO,
              --P_GLOSA,
              L_GLOSA, 
              SUBSTR(P_NOMBRE_DEP,0,50), 
              P_DOCUMENTO_DEP,
              l_estado,
              P_FECHA_OP,
              P_OPERACION
            ) RETURNING ID_DEPOSITO INTO l_deposito;
            
          end if;
            
          <<salida_rapida>>
          P_ID_DEPOSITO := l_deposito;
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
  END SP_INICIAR_DEPOSITO;


  
    PROCEDURE SP_CREAR_DEPOSITO_DETALLE(P_ID_DEPOSITO NUMBER,P_VENTAS VARCHAR2,P_IMP_VENTAS VARCHAR2,P_ARTICULOS VARCHAR2,P_ID_MONEDA NUMBER,P_TIPO_CAMBIO NUMBER,P_ID_DINAMICA NUMBER,P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS
    l_id_ddetalle number;
    l_id_voucher number;
    l_contar number;
    l_error number:=0;
    l_msgerror varchar2(200):='';
    l_total number(10,2);
    l_importe number(10,2);
    l_importe_me number(10,2);
    s_ventas tablastring; 
    s_importes tablastring;
    s_articulos tablastring;
    l_id_venta number;
    l_imp  number(10,2);
    l_id_articulo number;
    l_importe2 number(10,2);
    BEGIN

      DBMS_OUTPUT.put_line('------------');
      DBMS_OUTPUT.put_line(P_VENTAS);
      
      select FC_SPLIT (P_VENTAS,'|') into s_ventas  from dual;
      select FC_SPLIT (P_IMP_VENTAS,'|') into s_importes  from dual; 
      select FC_SPLIT (P_ARTICULOS,'|') into s_articulos  from dual; 
      
      FOR i IN s_ventas.FIRST .. s_ventas.LAST
      LOOP
          select cast(s_ventas(i) as number) into l_id_venta from dual;
           
          select cast(s_importes(i) as number) into l_imp from dual;

          if s_articulos is null then 
          l_id_articulo := null;
          else 
          select cast(s_articulos(i) as number) into l_id_articulo from dual;
          end if;
          l_importe:=0;
          
          -- select total into l_total from VENTA where ID_VENTA=l_id_venta;
          
          select sum(total) into l_total  from (
                select total 
                from VENTA 
                where id_venta = l_id_venta
                and estado = '1'
                union all 
                select total
                from VENTA 
                where id_parent = l_id_venta
                and id_comprobante = '08' --Al parecer NO se usa, pero tener en cuenta el id_comprobane por tiponpais
                and estado = '1'
                )
                ;


          
          select coalesce(sum(IMPORTE),0) into l_importe from CAJA_DEPOSITO_DETALLE 
          where ID_VENTA=l_id_venta and id_deposito = P_ID_DEPOSITO;
          
          l_importe2 := l_importe;
          l_importe:=l_importe + l_imp;
          
          select coalesce(max(ID_DDETALLE),0)+1 into l_id_ddetalle from CAJA_DEPOSITO_DETALLE;
          
          /*if l_importe > l_total then
              l_error:=1; --no existe voucher
              l_msgerror:='Depósito Detalle: Importe pago mayor a total venta:'||l_importe2||'----->'||l_imp||' '||l_importe||' '||l_total;
          end if;
          */
         l_importe_me:=0;
         if P_ID_MONEDA=9 then
           l_importe_me:=l_imp;
           l_imp:=l_imp*P_TIPO_CAMBIO;
         end if;
         
         /* REVISAR
         --Valida si la venta y deposito tiene a misma cuenta contable
         select count(*) into l_contar from VENTA_DETALLE A,CONTA_DINAMICA B, CONTA_DINAMICA_ASIENTO C
         WHERE A.ID_DINAMICA=B.ID_DINAMICA
         AND B.ID_DINAMICA=C.ID_DINAMICA
         AND A.ID_VENTA=ID_VENTA
         and C.ID_INDICADOR='IMPORTE'
         AND C.ID_CUENTAAASI IN(
            select ID_CUENTAAASI from CONTA_DINAMICA_ASIENTO where ID_DINAMICA=P_ID_DINAMICA
         );
         
         if l_contar=0 then
              l_error:=2; --no existe voucher
              l_msgerror:='Depósito Detalle: Cuenta contable del depósito es distinto a la cuenta contable de venta';
         end if;
         */
         
         if l_error=0 then
          insert into CAJA_DEPOSITO_DETALLE(
            ID_DDETALLE,
            ID_DEPOSITO,
            ID_VENTA,
            ID_ARTICULO,
            IMPORTE,
            IMPORTE_ME
          )values(
            l_id_ddetalle,
            P_ID_DEPOSITO,
            l_id_venta,
            l_id_articulo,
            l_imp,
            l_importe_me
          );
        end if;  
    END LOOP;
    <<salida_rapida>>
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END SP_CREAR_DEPOSITO_DETALLE;

    PROCEDURE SP_FINALIZAR_DEPOSITO(P_ID_DEPOSITO IN NUMBER,P_ID_DINAMICA NUMBER,P_ID_DINAMICA_CLI_SALDO_INI NUMBER, P_ID_CTABANCARIA NUMBER,
                              P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER,P_IMPORTE_TRANS NUMBER,
                              P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
                              
        l_serie varchar2(4);
        l_numero varchar2(8);
        l_deposito number:=0;
        l_estado varchar2(1):='0'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher number :=0;
        
        l_correlativo number :=0;
        l_id_comprobante varchar2(3):='00';  --deposito
        l_automatico varchar2(2);
        l_contar number;
        l_fecha date;
        --l_id_ctabancaria number;
        l_importedet number(10,2);
        l_importeasiento number(10,2);
        L_ID_VALE NUMBER;
        L_ID_TIPOTARJETA NUMBER;
        L_ID_CTABANCARIA NUMBER;
        L_GLOSA VARCHAR2(100);
        L_ID_TIPOVOUCHER NUMBER:=5;
        
        l_id_entidad number;
        l_id_depto number;
        l_id_anho number;
        l_id_mes number;
        l_id_tipoasiento varchar2(10) := 'MB';
        l_id_persona number;
        l_id_cliente number;
       
        L_ID_PERSONA_V NUMBER;
       
        l_id_documento_fin NUMBER := NULL;
       
        l_id_tipopais NUMBER;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        BEGIN
          --goto salida_rapida;

          if P_ID_DEPOSITO <> 0 then
          
            select coalesce(sum(importe),0) into l_importedet from caja_deposito_detalle
            where id_deposito=P_ID_DEPOSITO;
            
            select ID_ENTIDAD, ID_DEPTO, ID_ANHO, ID_MES, ID_PERSONA, glosa, id_cliente into L_ID_ENTIDAD, L_ID_DEPTO, L_ID_ANHO, L_ID_MES, L_ID_PERSONA, L_GLOSA, l_id_cliente  from caja_deposito
            where id_deposito=P_ID_DEPOSITO;

            if L_ID_ENTIDAD = 7124 and L_ID_DEPTO = '7' then 
                l_id_tipoasiento := 'MBL';
            end if;         
            
            if L_ID_ENTIDAD = 7124 and L_ID_DEPTO = '4' then 
                l_id_tipoasiento := 'MBC';
            end if;  
           
           --obteniendo el id_tipopais
	       	SELECT A.ID_TIPOPAIS INTO l_id_tipopais FROM CONTA_EMPRESA A,CONTA_ENTIDAD B
			WHERE A.ID_EMPRESA = B.ID_EMPRESA AND B.ID_ENTIDAD = L_ID_ENTIDAD AND ROWNUM = 1; --Agregado por Ulices
			--obteniendo el id_comprobante con el codigo '00' de deposito
			SELECT ID_COMPROBANTE INTO l_id_comprobante FROM TIPO_COMPROBANTE WHERE ID_TIPOPAIS = l_id_tipopais AND CODIGO = '00'; --Agregado por Ulices
			
           
            --obtiene numero y serie y actualiza correlativo
           --========================= CONFIG TO VISA ONLINE=====================================
            IF L_ID_PERSONA = 2 THEN -- USUARIO VISA ONLINE
            	SELECT COUNT(1), max(id_documento) INTO l_contar, l_id_documento_fin FROM FIN_DOCUMENTO_DEPTO
		        WHERE ID_ENTIDAD = L_ID_ENTIDAD
		        AND ID_DEPTO = L_ID_DEPTO
		        AND ID_COMPROBANTE = l_id_comprobante;
           		PKG_SALES.SP_OBTENER_SERIE_NUMERO_FIJO(l_id_documento_fin,l_serie,l_correlativo);
           	
           		SELECT ID_PERSONA INTO L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
	      		WHERE ID_ENTIDAD = L_ID_ENTIDAD
	      		AND ID_DEPTO = L_ID_DEPTO;
            ELSE 
           		PKG_SALES_SCHOOL.SP_OBTENER_SERIE_NUMERO(L_ID_PERSONA,l_id_comprobante,L_ID_ENTIDAD,L_ID_DEPTO, l_serie,l_correlativo);
           		L_ID_PERSONA_V := L_ID_PERSONA;
            END IF;
            --========================= CONFIG TO VISA ONLINE=====================================
          
            -- Obtener voucher.
            PKG_ACCOUNTING.SP_CREAR_VOUCHER(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,sysdate,L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,null, 'S', L_ID_PERSONA_V, l_id_voucher);
      
            update caja_deposito set estado = '1', SERIE = l_serie, NUMERO = l_correlativo, ID_VOUCHER = l_id_voucher
            where id_deposito=P_ID_DEPOSITO;


            if round(P_IMPORTE,2)<>round(l_importedet,2) then
                l_error:=1; 
                l_msgerror:='Depósito: Importe depósito('||to_char(P_IMPORTE)||') es diferente a la suma de importe de los documentos('||to_char(l_importedet)||') pagados'||to_char(P_ID_DEPOSITO);
                goto salida_rapida;
            end if;
            
            l_importeasiento:=P_IMPORTE;
            
            if coalesce(P_IMPORTE_TARJETA,0)>0 then
                l_importeasiento:=0;
            end if;
            
            if coalesce(P_IMPORTE_TRANS,0)>0 then
                l_importeasiento:=0;
            end if;
            if l_error=0  then
               PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_DEPOSITO(P_ID_DEPOSITO,P_ID_DINAMICA,P_ID_DINAMICA_CLI_SALDO_INI,P_ID_CTABANCARIA,l_importeasiento,P_IMPORTE_TARJETA,P_IMPORTE_TRANS,L_GLOSA,l_error,l_msgerror);
               if L_ID_ENTIDAD <> 7124 then 
                PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_INTER_DEP(P_ID_DEPOSITO);
               end if;    
               
               JOSE.PKG_MATRICULA_OPERACIONES.SP_CONTRATO_SALDO_ANHO_ANT(l_id_cliente);
            end if;
            
            
          end if;
            
          <<salida_rapida>>
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
          DBMS_OUTPUT.PUT_LINE('error l_msgerror :'||l_msgerror);
          DBMS_OUTPUT.PUT_LINE('error P_MSGERROR :'||P_MSGERROR);
          
  END SP_FINALIZAR_DEPOSITO;

    PROCEDURE SP_GENERAR_ASIENTO_DEPOSITO(P_ID_DEPOSITO NUMBER,P_ID_DINAMICA NUMBER,P_ID_DINAMICA_CLI_SALDO_INI NUMBER,P_ID_CTABANCARIA NUMBER,P_IMPORTE NUMBER,P_IMPORTE_TARJETA NUMBER ,P_IMPORTE_TRANS NUMBER,P_DETALLE VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2, P_DEP_B VARCHAR2 default null) IS
     
        l_dinamica number;
        l_asiento number;
        l_detalle varchar2(100);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_tarjeta number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher number;
        l_id_depto_deposito varchar2(20);
        l_ref_id varchar2(100);
        
        l_importe_comision_visa number(10,2);
        l_importe_tarjeta_voucher_sum number(10,2);
        l_importe_comision_deposito number(10,2);
        
        l_id_entidad number;
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        --l_id_operorigen number:=5;
        l_id_tipoorigen number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_doc_anticipo varchar2(30);
        l_glosa varchar2(200):='';
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_id_cliente number;
        l_agrupa varchar2(1);
        l_nro_operacion varchar2(200):='';
        l_fecha_operacion varchar2(200):='';
        l_cliente varchar2(200):='';
        l_glosa_dep varchar2(200):='';
        /*
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        */ 
        L_CC VARCHAR2(8);
        L_DIA NUMBER;
        
        l_id_venta number;
        l_id_anho number;
        l_importe_ddet number(10,2);
        
        CURSOR ddet IS	
        SELECT dd.ID_VENTA, d.id_anho, dd.IMPORTE, d.NRO_OPERACION, 
        to_char(d.FECHA_OPERACION,'dd/mm') AS FECHA_OPERACION,
        p.NOMBRE || ' ' || p.PATERNO AS clinte,
        d.glosa
        FROM eliseo.CAJA_DEPOSITO_DETALLE dd
        INNER JOIN eliseo.CAJA_DEPOSITO d ON d.ID_DEPOSITO = dd.ID_DEPOSITO 
        INNER JOIN moises.PERSONA p ON p.ID_PERSONA = d.ID_CLIENTE 
        WHERE d.ID_DEPOSITO = P_ID_DEPOSITO;

        CURSOR cdet_sal_ini IS	
        SELECT  ID_DINAMICA,ID_ENTIDAD
        FROM CONTA_DINAMICA 
        WHERE ID_DINAMICA=P_ID_DINAMICA_CLI_SALDO_INI;        

        
        CURSOR cdet IS	
        SELECT  ID_DINAMICA,ID_ENTIDAD
        FROM CONTA_DINAMICA 
        WHERE ID_DINAMICA=P_ID_DINAMICA;        
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;

    BEGIN
     
        l_detalle:=P_DETALLE;
        l_importe:= P_IMPORTE;
        l_importe_tarjeta:=P_IMPORTE_TARJETA;
        l_importe_trans:=P_IMPORTE_TRANS;
        l_fondo:='10';
        l_importe_comision_visa := 0;
        l_importe_tarjeta_voucher_sum := 0;
        l_importe_comision_deposito := 0;
        
        --VALIDA EL TIPO DE PAGO PARA GENERAR EL ASIENTO
        IF P_IMPORTE > 0 THEN --PAGO CON EFECTIVO
            l_importe_tarjeta := 0;
            l_importe_trans :=0;
        ELSIF P_IMPORTE_TARJETA > 0 THEN --PAGO CON TARJETA
            l_importe := 0;
            l_importe_trans :=0;
        ELSE --PAGO A CUENTA PERSONAL
             l_importe := 0;
            l_importe_tarjeta :=0;
        END IF;
        
        if P_ID_DEPOSITO is not null then
            IF P_DEP_B = 'S' THEN 
                SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO_BANCO WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN 
                    SELECT ID_DEPTO, ID_VOUCHER, ID_TIPOORIGEN, '-' AS SERIE, OPERACION AS NUMERO into l_id_depto_deposito, l_voucher,l_id_tipoorigen, l_serie, l_numero
                    FROM CAJA_DEPOSITO_BANCO
                    WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                END IF;
            ELSE
                SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO  WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN 
                    select ID_DEPTO, ID_CLIENTE,ID_VOUCHER, ID_TIPOORIGEN, SERIE, NUMERO into l_id_depto_deposito, l_id_cliente,l_voucher,l_id_tipoorigen, l_serie, l_numero
                    from CAJA_DEPOSITO 
                    WHERE ID_DEPOSITO = P_ID_DEPOSITO;
                END IF;
            
            END IF;
            
            
            -- obtener el importe de la comisión
            
            SELECT COALESCE(cvcv.IMPORTE,0) into l_importe_comision_visa
            FROM CONTA_VOUCHER cv
            LEFT OUTER JOIN CONTA_VOUCHER_COMISION_VISA cvcv ON cvcv.ID_VOUCHER = cv.ID_VOUCHER 
            WHERE cv.ID_VOUCHER = l_voucher; 
            
            -- Obtener el importe total de las operaciones con tarjeta (visa)
            
            select 
            COALESCE(sum(importe),0) into l_importe_tarjeta_voucher_sum       
            from eliseo.caja_deposito
            where id_VOUCHER = l_voucher
            AND id_mediopago = '006'
            AND ESTADO = '1';
            
                        
            /*SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO  WHERE ID_DEPOSITO = P_ID_DEPOSITO;
            IF l_cont > 0 THEN 
                select ID_DEPTO, ID_CLIENTE,ID_VOUCHER, ID_TIPOORIGEN, SERIE, NUMERO into l_id_depto_deposito, l_id_cliente,l_voucher,l_id_tipoorigen, l_serie, l_numero
                from CAJA_DEPOSITO 
                WHERE ID_DEPOSITO = P_ID_DEPOSITO;
            ELSE
                SELECT COUNT(1) INTO l_cont FROM CAJA_DEPOSITO_BANCO WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                IF l_cont > 0 THEN 
                    SELECT ID_DEPTO, ID_VOUCHER, ID_TIPOORIGEN, '-' AS SERIE, OPERACION AS NUMERO into l_id_depto_deposito, l_voucher,l_id_tipoorigen, l_serie, l_numero
                    FROM CAJA_DEPOSITO_BANCO
                    WHERE ID_DEPBANCO = P_ID_DEPOSITO;
                END IF;
            END IF;*/
            --IDENTIFICO EL CENTRO DEL COSTO DEL PERSONAL
            SELECT COUNT(1) INTO l_cont
            FROM CAJA_DEPOSITO A JOIN APS_TRABAJADOR B
            ON A.ID_CLIENTE = B.ID_PERSONA
            WHERE A.ID_DEPOSITO = P_ID_DEPOSITO
            AND A.ID_MEDIOPAGO = '999';
            IF l_cont > 0 THEN
                SELECT SUBSTR(B.ID_DEPTO,1,1) INTO L_CC
                FROM CAJA_DEPOSITO A JOIN APS_TRABAJADOR B
                ON A.ID_CLIENTE = B.ID_PERSONA
                WHERE A.ID_DEPOSITO = P_ID_DEPOSITO
                AND A.ID_MEDIOPAGO = '999';
            END IF;
        end if;
        IF l_voucher IS NULL OR l_voucher = 0 THEN
            l_error :=1;
            l_msgerror:='No existe Voucher-'||P_ID_DEPOSITO;
            --goto salida_rapida;
        END IF;
      
        SELECT to_char(l_id_tipoorigen) || '-' || to_char(P_ID_DEPOSITO) INTO l_memo FROM DUAL;
        
        --l_detalle := '(Dep: '|| COALESCE(l_serie,'-') || '-' || COALESCE(l_numero,'-') || ') ' || l_detalle;
        
     --OBTIENE DATOS DE LA VENTA
      --select ID_ENTIDAD,SERIE,NUMERO,FECHA,ID_CLIENTE into l_id_entidad,l_serie,l_numero,l_fecha,l_id_cliente from VENTA where ID_VENTA=P_ID_VENTA;

    -- Insertando las cuentas Cliente:
    
        OPEN ddet; -- ddet.nro_operacion||' '||ddet.fecha_operacion||' '||ddet.cliente
        FETCH ddet INTO l_id_venta,l_id_anho, l_importe_ddet, l_nro_operacion, l_fecha_operacion, l_cliente, l_glosa_dep;
        WHILE ddet%FOUND LOOP
        
        -- Si la venta es de anticipo jalar el asiento cliente de anticipo
        
            SELECT count(1) into l_contar FROM VENTA_SALDO s
            WHERE ID_VENTA = l_id_venta
            AND EXISTS (
            SELECT 1 FROM CAJA_DEPOSITO d
            WHERE d.ID_ANHO = s.ID_ANHO
            AND d.ID_ENTIDAD = s.ID_ENTIDAD
            AND d.ID_DEPTO = s.ID_DEPTO
            AND d.ID_DEPOSITO = P_ID_DEPOSITO
            );
            
            DBMS_OUTPUT.PUT_LINE('anticipo l_contar='||l_contar);
            DBMS_OUTPUT.PUT_LINE('anticipo l_id_venta='||l_id_venta);
            
            if l_contar > 0 then 

                    OPEN cdet_sal_ini;
                    FETCH cdet_sal_ini INTO l_dinamica,l_id_entidad;
            
                    WHILE cdet_sal_ini%FOUND LOOP
                    
                        ---DINAMICA ASIENTO
                        OPEN casi;
                        FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                        WHILE casi%FOUND LOOP
                        
                           SELECT max('('||serie||'-'||numero||')') into l_doc_anticipo FROM VENTA_SALDO s
                            WHERE ID_VENTA = l_id_venta
                            and s.id_anho = l_id_anho;
                            
                            select case when l_id_indicador='IMPORTE' then 
                                        (l_importe_ddet)*(l_porcentaje)
                                      else
                                      0
                                      end into l_importeasiento
                            from dual;
                            
                            l_depto:=null;
                            l_cuenta_cte:=null;
                            
                            if l_importeasiento<>0 then
                            
                                if l_unico='U' then
                                  select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                elsif(l_unico='M') then
                                   SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                                   if l_buscar>0 then
                                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                     select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                                     select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                                   else
                                    l_depto:=l_deptos;
                                   end if;
                                elsif(l_unico='X') then
                                   select PKG_SALES_SCHOOL.FC_DEPTO_ALUMNO_SCHOOL_INST(l_id_cliente, l_id_entidad, l_id_depto_deposito) into l_depto from dual;
                                elsif l_unico='S' THEN -- Si es sesión
                                    l_depto := l_id_depto_deposito;
                                end if;
                            
                                if l_unicoctate='U' then
                                  select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                  if l_cont>0 then
                                    select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                  end if;
                                elsif(l_unicoctate='M') then
                                   SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                                   if l_buscar>0 then
                                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                     select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                                     select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                                   else
                                    l_cuenta_cte:=l_ctates;
                                   end if;
                                elsif(l_unicoctate='X') then
                                    select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;  
                                elsif(l_unicoctate='B') then--LA CTA CTE SE OBTIENE DEL LA CTA BANCARIA
                                    --SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                    SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                end if;
                                if l_dc='C' then
                                  l_importeasiento:=l_importeasiento*(-1);
                                end if;
                            
                                select count(1) into l_cont from CONTA_ASIENTO
                                where ID_TIPOORIGEN=l_id_tipoorigen
                                and ID_ORIGEN=P_ID_DEPOSITO
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasi
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=l_dc;
                                
                                --== LA CUENTA 1135001 SOLO ES PARA SEDE, PARA LOS CENTROS DE COSTO ES LA CTA PUENTE
                                SELECT TO_NUMBER(TO_CHAR(SYSDATE,'DD')) INTO L_DIA FROM DUAL;
                                IF L_DIA < 25 THEN
                                    IF (L_CC = '2' AND l_id_cuentaaasi = '1135001') THEN
                                        l_id_cuentaaasi := '1136080';
                                        l_cuenta_cte := '21010101';
                                        l_depto := '11010101';
                                    ELSIF (L_CC = '3' AND l_id_cuentaaasi = '1135001') THEN
                                        l_id_cuentaaasi := '1136080';
                                        l_cuenta_cte := '31010101';
                                        l_depto := '11010101';
                                    ELSIF (L_CC = '4' AND l_id_cuentaaasi = '1135001') THEN
                                        l_id_cuentaaasi := '1136080';
                                        l_cuenta_cte := '41010101';
                                        l_depto := '11010101';
                                    ELSE
                                        l_cont := 0;
                                    END IF;
                                ELSE --VENTAS AL CREDITO A PARTIR DEL 26
                                    IF l_id_cuentaaasi = '1135001' THEN
                                        l_id_cuentaaasi := '1139090';
                                        l_cuenta_cte := '21';
                                        l_depto := '11010101';
                                    END IF;
                                END IF;
                            
                              if l_cont=0 then
                                INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA
                                )VALUES ( 
                                l_id_tipoorigen,
                                P_ID_DEPOSITO,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importeasiento,
                                l_doc_anticipo||'-'||l_descripcion,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id ,
                                l_agrupa
                                );
                              else
                              
                                update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                                where ID_TIPOORIGEN=l_id_tipoorigen
                                and ID_ORIGEN=P_ID_DEPOSITO
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasi
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=l_dc;
                                
                              end if;
                            end if;
                              --DESTINO
                              OPEN casides;
                              FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                              WHILE casides%FOUND LOOP
                              
                              
                                select case when l_id_indicadord='IMPORTE' then 
                                        (l_importe_ddet)*(l_porcentaje)
                                      else
                                      0
                                      end into l_importeasiento
                            from dual;
                            
                                l_depto:=null;
                                l_cuenta_cte:=null;
                              
                                if l_unicod='U' then
                                  select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                elsif(l_unicod='M') then
                                   SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                                   if l_buscar>0 then
                                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                     select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                                     select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into l_depto from dual;
                                   else
                                    l_depto:=l_deptos;
                                   end if;
                                elsif(l_unicod='X') then
                                   select PKG_SALES_SCHOOL.FC_DEPTO_ALUMNO_SCHOOL_INST(l_id_cliente, l_id_entidad, l_id_depto_deposito) into l_depto from dual;
                                end if;
                                
                                if l_unicoctated='U' then
                                  select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                  if l_cont>0 then
                                    select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                  end if;
            
                                elsif(l_unicoctated='M') then
                                   SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                                   if l_buscar>0 then
                                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                     select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                                     select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into l_cuenta_cte from dual;
                                   else
                                    l_cuenta_cte:=l_ctates;
                                   end if;
                                elsif(l_unicoctated='X') then
                                  select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                                end if;
                                
                                if l_dc='C' then
                                  l_importeasiento:=l_importeasiento*(-1);
                                end if;
                                if l_importeasiento<>0 then
                                
                                  select count(*) into l_cont from CONTA_ASIENTO
                                  where ID_TIPOORIGEN=l_id_tipoorigen
                                  and ID_ORIGEN=P_ID_DEPOSITO
                                  and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                  and CUENTA =l_id_cuentaaasid
                                  and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                  and case when importe>0 then 'D' else 'C' end=l_dc;
                                  
                                
                                  IF l_agrupa='S' and l_cont>0 THEN
                                    update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                                    where ID_TIPOORIGEN=l_id_tipoorigen
                                    and ID_ORIGEN=P_ID_DEPOSITO
                                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                    and CUENTA =l_id_cuentaaasid
                                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                    and case when importe>0 then 'D' else 'C' end=l_dc;
                                  
                                  ELSE
                                    INSERT INTO CONTA_ASIENTO (
                                    ID_TIPOORIGEN,
                                    ID_ORIGEN, 
                                    FONDO,
                                    DEPTO,
                                    CUENTA, 
                                    CUENTA_CTE,
                                    RESTRICCION,
                                    IMPORTE,
                                    DESCRIPCION,
                                    MEMO,
                                    VOUCHER, 
                                    PARENT_ID,
                                    REF_ID
                                    )VALUES ( 
                                    l_id_tipoorigen,
                                    P_ID_DEPOSITO,
                                    l_fondo,
                                    l_depto,
                                    l_id_cuentaaasid,
                                    l_cuenta_cte,
                                    l_id_restricciond,
                                    l_importeasiento,
                                    l_detalle,
                                    l_memo,
                                    l_voucher,
                                    null,
                                    l_ref_id 
                                    );
                                  END IF;
                                  
                                end if;
                                FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                              END LOOP;
                              CLOSE casides; 
                            
                            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                          END LOOP;
                          CLOSE casi; 
                        FETCH cdet_sal_ini INTO l_dinamica,l_id_entidad;                
                        END LOOP;
                        CLOSE cdet_sal_ini; 
            else 
            -- Si la venta es del año en curso, jalar el asiento primario de la venta
            DBMS_OUTPUT.PUT_LINE('==================================');
            DBMS_OUTPUT.PUT_LINE('Si la venta es del año en curso, jalar el asiento primario de la venta');
            DBMS_OUTPUT.PUT_LINE('l_id_venta='||l_id_venta);
            
            
                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )
                    SELECT l_id_tipoorigen, P_ID_DEPOSITO,
                    ca.FONDO, ca.DEPTO, ca.CUENTA, ca.CUENTA_CTE, ca.RESTRICCION, 
                    case when max(v.TOTAL) = 0 then 0 else  round(sum(vd.IMPORTE) / max(v.TOTAL) * l_importe_ddet,2)*-1 end,
                    ca.DESCRIPCION, l_memo, l_voucher, null, ca.REF_ID, ca.AGRUPA
                    FROM VENTA v, VENTA_DETALLE vd, CONTA_ASIENTO ca
                    WHERE v.ID_VENTA = vd.ID_VENTA 
                    AND vd.ID_VDETALLE = ca.ID_ORIGEN
                    AND vd.ID_TIPOORIGEN = ca.ID_TIPOORIGEN
                    AND vd.ID_VENTA = l_id_venta
                    AND ca.PRIMARIO = 'S'
                    AND v.TOTAL >= 0
                    GROUP BY ca.FONDO, ca.DEPTO, ca.CUENTA, ca.CUENTA_CTE, ca.RESTRICCION, ca.PARENT_ID, ca.REF_ID, ca.AGRUPA,ca.DESCRIPCION;            
            end if;
            
            
        
        FETCH ddet INTO l_id_venta,l_id_anho, l_importe_ddet, l_nro_operacion, l_fecha_operacion, l_cliente, l_glosa_dep;
        END LOOP;
        CLOSE ddet; 
        
     --DETALLE
        OPEN cdet;
        FETCH cdet INTO l_dinamica,l_id_entidad;

        WHILE cdet%FOUND LOOP
        
            ---DINAMICA ASIENTO
            
            DBMS_OUTPUT.PUT_LINE('-- DETALLE --');
            
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
            WHILE casi%FOUND LOOP
            
                l_importe_comision_deposito := 0;
                if l_importe_tarjeta_voucher_sum <> 0 then 
                    l_importe_comision_deposito := (l_importe_tarjeta)*(l_porcentaje)/l_importe_tarjeta_voucher_sum*l_importe_comision_visa;
                end if;
                
                select case when l_id_indicador='IMPORTE' then 
                            (l_importe)*(l_porcentaje)
                          when l_id_indicador='IMPORTE_TARJETA' then
                            (l_importe_tarjeta)*(l_porcentaje) - l_importe_comision_deposito
                          when l_id_indicador='IMPORTE_TRANS' then
                               (l_importe_trans)*(l_porcentaje)
                          when l_id_indicador='COMISION_VISA_COLEGIOS' then
                               l_importe_comision_deposito                       
                          else
                          0
                          end into l_importeasiento
                from dual;
                

                
                l_depto:=null;
                l_cuenta_cte:=null;
                --select 'Dep:'||max(glosa) into l_descripcion from caja_deposito where ID_DEPOSITO = P_ID_DEPOSITO;
                select  (
                    CASE ID_MEDIOPAGO WHEN '006' THEN
                        CASE WHEN ID_PERSONA = 2 THEN 
                            'APP:'||serie||'-'||to_number(numero)||'-'||DECODE(ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper:'||NRO_OPERACION||'-'||TO_CHAR(FECHA_OPERACION,'DD/MM/YY')
                        ELSE
                            'POS:'||serie||'-'||to_number(numero)||'-'||DECODE(ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper:'||NRO_OPERACION||'-'||TO_CHAR(FECHA_OPERACION,'DD/MM/YY')
                        END
                    WHEN '001' THEN
                    'DREC:'||serie||'-'||to_number(numero)||'-'||TO_CHAR(fecha,'DD/MM/YY')||'-Oper:'||NRO_OPERACION
                    WHEN '008' THEN
                    'EFEC:'||serie||'-'||to_number(numero)||'-'||TO_CHAR(fecha,'DD/MM/YY')
                    WHEN '999' THEN
                    '-Dep:'||serie||'-'||to_number(numero)||'-'||TO_CHAR(fecha,'DD/MM/YY')
                    ELSE 'DEPOSITO CLIENTES' END )
                     into l_descripcion
                     from caja_deposito 
                     where ID_DEPOSITO = P_ID_DEPOSITO;
                
                
                if l_id_indicador='COMISION_VISA_COLEGIOS' then 
                    l_descripcion := 'Comisión Visa '||l_fecha_operacion;
                end if;
                if l_id_indicador='IMPORTE_TARJETA' then 
                    l_descripcion := 'Importe Tarjeta Día: '||l_fecha_operacion;
                end if;
                
                DBMS_OUTPUT.PUT_LINE('l_importeasiento '||l_importeasiento);

                if l_importeasiento<>0 then
                -- if true then
                
                
                    if l_unico='U' then
                      select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unico='M') then
                       SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif(l_unico='X') then
                       select PKG_SALES_SCHOOL.FC_DEPTO_ALUMNO_SCHOOL_INST(l_id_cliente, l_id_entidad, l_id_depto_deposito) into l_depto from dual;
                    elsif l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_deposito;
                    end if;
                
                    if l_unicoctate='U' then
                      select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                      if l_cont>0 then
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                      end if;
                    elsif(l_unicoctate='M') then
                       SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif(l_unicoctate='X') then
                        select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;  
                    elsif(l_unicoctate='B') then--LA CTA CTE SE OBTIENE DEL LA CTA BANCARIA
                        -- SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                        SELECT max(ID_TIPOCTACTE), max(ID_CUENTAAASI) into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                        l_descripcion := 'Trs: '||l_nro_operacion||' '||l_fecha_operacion||' '||l_cliente;
                        --l_descripcion := l_glosa_dep;
                        

                    end if;
                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                    end if;
                
                    select count(1) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_DEPOSITO
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                    
                    --== LA CUENTA 1135001 SOLO ES PARA SEDE, PARA LOS CENTROS DE COSTO ES LA CTA PUENTE
                    SELECT TO_NUMBER(TO_CHAR(SYSDATE,'DD')) INTO L_DIA FROM DUAL;
                    IF L_DIA < 25 THEN
                        IF (L_CC = '2' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '21010101';
                            l_depto := '11010101';
                        ELSIF (L_CC = '3' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '31010101';
                            l_depto := '11010101';
                        ELSIF (L_CC = '4' AND l_id_cuentaaasi = '1135001') THEN
                            l_id_cuentaaasi := '1136080';
                            l_cuenta_cte := '41010101';
                            l_depto := '11010101';
                        ELSE
                            l_cont := 0;
                        END IF;
                    ELSE --VENTAS AL CREDITO A PARTIR DEL 26
                        IF l_id_cuentaaasi = '1135001' THEN
                            l_id_cuentaaasi := '1139090';
                            l_cuenta_cte := '21';
                            l_depto := '11010101';
                        END IF;
                    END IF;
                
                  if l_cont=0 then
                    INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    P_ID_DEPOSITO,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    l_descripcion,
                    l_memo,
                    l_voucher,
                    null,
                    l_ref_id ,
                    l_agrupa
                    );
                  else
                  
                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=P_ID_DEPOSITO
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                    
                  end if;
                end if;
                  --DESTINO
                  OPEN casides;
                  FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  WHILE casides%FOUND LOOP
                  
                  DBMS_OUTPUT.PUT_LINE('DESTINOOOOOOOOOOOOOOOOOOOOOO');
                  
                    select case when l_id_indicadord='IMPORTE' then 
                            (l_importe)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TARJETA' then
                              (l_importe_tarjeta)*(l_porcentaje)
                          when l_id_indicadord='IMPORTE_TRANS' then
                               (l_importe_trans)*(l_porcentaje)
                          else
                          0
                          end into l_importeasiento
                from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                  
                    if l_unicod='U' then
                      select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                    elsif(l_unicod='M') then
                       SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into l_depto from dual;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif(l_unicod='X') then
                       select PKG_SALES_SCHOOL.FC_DEPTO_ALUMNO_SCHOOL_INST(l_id_cliente, l_id_entidad, l_id_depto_deposito) into l_depto from dual;
                    end if;
                    
                    if l_unicoctated='U' then
                      select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      if l_cont>0 then
                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      end if;

                    elsif(l_unicoctated='M') then
                       SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                         select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into l_cuenta_cte from dual;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif(l_unicoctated='X') then
                      select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                    end if;
                    
                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    if l_importeasiento<>0 then
                    --if true then
                    
                      select count(*) into l_cont from CONTA_ASIENTO
                      where ID_TIPOORIGEN=l_id_tipoorigen
                      and ID_ORIGEN=P_ID_DEPOSITO
                      and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                      and CUENTA =l_id_cuentaaasid
                      and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                      and case when importe>0 then 'D' else 'C' end=l_dc;
                      
                    
                      IF l_agrupa='S' and l_cont>0 THEN
                        update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                        where ID_TIPOORIGEN=l_id_tipoorigen
                        and ID_ORIGEN=P_ID_DEPOSITO
                        and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                        and CUENTA =l_id_cuentaaasid
                        and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                        and case when importe>0 then 'D' else 'C' end=l_dc;
                      
                      ELSE
                        INSERT INTO CONTA_ASIENTO (
                        ID_TIPOORIGEN,
                        ID_ORIGEN, 
                        FONDO,
                        DEPTO,
                        CUENTA, 
                        CUENTA_CTE,
                        RESTRICCION,
                        IMPORTE,
                        DESCRIPCION,
                        MEMO,
                        VOUCHER, 
                        PARENT_ID,
                        REF_ID
                        )VALUES ( 
                        l_id_tipoorigen,
                        P_ID_DEPOSITO,
                        l_fondo,
                        l_depto,
                        l_id_cuentaaasid,
                        l_cuenta_cte,
                        l_id_restricciond,
                        l_importeasiento,
                        l_detalle,
                        l_memo,
                        l_voucher,
                        null,
                        l_ref_id 
                        );
                      END IF;
                    
                      
                    end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                  END LOOP;
                  CLOSE casides; 
                
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa;
                
              END LOOP;
              CLOSE casi; 

            FETCH cdet INTO l_dinamica,l_id_entidad;

        END LOOP;
        CLOSE cdet; 
        
        
        select count(1) into l_contar from CONTA_ASIENTO
        where ID_TIPOORIGEN=l_id_tipoorigen
        and ID_ORIGEN=P_ID_DEPOSITO;
        
        DBMS_OUTPUT.PUT_LINE('l_contar='||l_contar);
        
        if l_contar=0 then
          l_error:=3; --no se ha generado el asiento
          l_msgerror:='Asiento Depósito: No se ha generado el asiento';    
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN=P_ID_DEPOSITO;
          
            
          
          if l_credito=0 or l_credito=0 THEN
          	NULL;
             --l_error:=4; --importe de debito o credito igual a cero
             --l_msgerror:='Asiento Depósito: Importe de débito o crédito igual a cero dinamica:'||l_dinamica||'  l_id_cliente: '|| l_id_cliente||'  l_debito: '|| l_debito||'  l_credito: '|| l_credito|| ' P_ID_DEPOSITO: '||P_ID_DEPOSITO;
          else
             if l_credito<>l_credito then
              l_error:=5; --descuadre de asiento
              l_msgerror:='Asiento Depósito: Descuadre de asiento';
             end if;
          end if;
          
        end if;

        
       -- <<salida_rapida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_GENERAR_ASIENTO_DEPOSITO;     
    
    PROCEDURE SP_CREAR_PAGO_VENTA(P_ID_PAGO NUMBER,P_ID_DINAMICA NUMBER,P_ID_CLIENTE NUMBER,P_ID_VENTA NUMBER,P_ID_ARTICULO NUMBER, P_IMPORTE NUMBER,P_IMPORTE_ME NUMBER, P_ERROR out NUMBER, P_MSGERROR out VARCHAR2) IS --P_ID_ARTICULO NUMBER, QUITADO
        l_error number:=0;
        l_msgerror varchar2(180):='';
        l_importe_me number(10,2);
        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(10);
        L_ID_ANHO NUMBER;
        L_ID_ARTICULO NUMBER;
        L_ID_VENTA NUMBER; 
        L_TOTAL_ANTICIPO NUMBER(10,2);
        L_CLIENTE VARCHAR2(80);
        L_DETALLE VARCHAR2(80);
        --L_ID_PERSONA number :=null;
    
        BEGIN
        
            --- CADA VEZ QUE SE ACTUALIZE O SE AGREGUE ALGO DE DETALLE AL PAGO EL PAGO AUTOMATICAMENTE SE PONE EN ESTADO 0
            UPDATE ELISEO.CAJA_PAGO SET ESTADO='0' WHERE ID_PAGO=P_ID_PAGO;
            ---
            
            l_error:=0;
            --l_error:=1;
            --l_msgerror:='NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0)';
            if l_error=0 then
                IF P_ID_VENTA = 0 OR P_ID_VENTA IS NULL THEN
                    L_ID_VENTA := NULL;
                ELSE
                    L_ID_VENTA := P_ID_VENTA;
                END IF;
                SELECT ID_ENTIDAD,ID_DEPTO,ID_ANHO INTO L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                SELECT SUM(IMPORTE)*-1 AS TOTAL INTO L_TOTAL_ANTICIPO
                FROM VW_SALES_DETAIL_SALDO_COL
                WHERE ID_ENTIDAD = L_ID_ENTIDAD
                AND ID_DEPTO = L_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                --AND ID_CLIENTE = P_ID_CLIENTE
                AND ID_VENTA=P_ID_VENTA
                AND ID_ARTICULO = P_ID_ARTICULO;
                
                IF L_TOTAL_ANTICIPO >= P_IMPORTE THEN
                    
                    SELECT SUBSTR(FC_NOMBRE_PERSONA(P_ID_CLIENTE),1,100) CLIENTE INTO L_CLIENTE FROM DUAL;
                    
                    SELECT 
                    SUBSTR((CASE ID_ENTIDAD 
                    WHEN 7124 
                    THEN ID_ENTIDAD||'-ALUM-'||DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||TO_NUMBER(NUMERO)||'-'||SUBSTR(L_CLIENTE,1,20)||'-'||TO_CHAR(FECHA,'DD/MM/YYYY')
                    ELSE 
                    DECODE(ID_MEDIOPAGO,'001','TLC','007','CHQ','008','EFEC')||'-'||NUMERO||' | '||TO_CHAR(FECHA,'DD/MM/YYYY')||' | '||PKG_CAJA.FC_CUENTA_BANCARIA(ID_CTABANCARIA)
                    END ),1,80) AS GLOSA INTO L_DETALLE
                    FROM CAJA_PAGO WHERE ID_PAGO = P_ID_PAGO;
                
                    /*SE VA AGENERAR UN ANTICIPO DE TIPO CREDITO Y SE VA AGUARDAR EL ID_PVENTA DEL PAGO Y EL ANTICIPO NO GENERARÁ ASIENTO, EL ASIENTO LO HARÁ LA SALIDA DE DINERO
                    --7124 = solo permite sacar dinero si tengo saldo en Anticipos
                    SELECT SUM(IMPORTE) AS TOTAL INTO L_TOTAL_ANTICIPO
                    FROM VW_SALES_ADVANCES
                    WHERE ID_ENTIDAD = L_ID_ENTIDAD
                    AND ID_DEPTO = L_ID_DEPTO
                    AND ID_ANHO = L_ID_ANHO
                    AND ID_CLIENTE = L_ID_CLIENTE;
                    IF L_TOTAL_ANTICIPO > 0 THEN
                        IF L_TOTAL_ANTICIPO >= L_TOTAL THEN
                            L_IMPORTE_ANTICIPO := L_TOTAL;
                        ELSE
                            L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
                        END IF;
                        PKG_SALES.SP_CREAR_ANTICIPOS_CLIENTES(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_CLIENTE,L_ID_PERSONA,P_ID_VENTA,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,L_ERROR,L_MSGERROR,L_TIPO);
                        IF L_ERROR > 0 THEN
                          --l_msgerror := l_msgerror;
                          GOTO SALIDA_RAPIDA;
                      END IF;
                    END IF;*/
                
                    IF NVL(P_IMPORTE,0)+NVL(P_IMPORTE_ME,0) > 0 THEN
                        INSERT INTO CAJA_PAGO_VENTA(
                        ID_PAGO,
                        ID_CLIENTE,
                        ID_VENTA,
                        ID_ARTICULO,
                        ID_DINAMICA,
                        IMPORTE,
                        IMPORTE_ME,
                        DETALLE
                        )values(
                        P_ID_PAGO,
                        P_ID_CLIENTE,
                        L_ID_VENTA,
                        P_ID_ARTICULO,
                        P_ID_DINAMICA,
                        P_IMPORTE,
                        P_IMPORTE_ME,
                        L_DETALLE
                        );
                        l_msgerror:='Pago OK';
                    ELSE
                        l_error := 1;
                        l_msgerror:='No existen Importes';
                    END IF;
                ELSE
                    l_error := 1;
                    l_msgerror:='ERROR: Importe Mayor al Monto del Anticipo '||L_TOTAL_ANTICIPO;
                END IF;
            end if;  
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
    END SP_CREAR_PAGO_VENTA;
    
    PROCEDURE SP_FINALIZAR_DEVOLUCION_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT number,P_MSGERROR out VARCHAR2) IS
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        L_ENTIDAD_PAGO NUMBER;
        
       
        l_error number:=0;
        l_msgerror varchar2(200):='';
        BEGIN
        
        SELECT COALESCE(ID_ENTIDAD, 0) INTO L_ENTIDAD_PAGO FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;
        
        SELECT 
                NVL(SUM(IMPORTE),0) IMPORTE,
                NVL(SUM(IMPORTE_ME),0) IMPORTE_ME INTO L_IMPORTE,L_IMPORTE_ME
        FROM (
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_COMPRA
            WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_GASTO
            WHERE ID_PAGO = P_ID_PAGO
            UNION ALL
            SELECT IMPORTE,IMPORTE_ME FROM CAJA_PAGO_VENTA
            WHERE ID_PAGO = P_ID_PAGO
        );
        
        IF l_error=0 AND L_ENTIDAD_PAGO <> 0 THEN
            
            IF L_IMPORTE+L_IMPORTE_ME > 0 THEN
                UPDATE CAJA_PAGO SET    IMPORTE = L_IMPORTE, 
                                        IMPORTE_ME = L_IMPORTE_ME, 
                                        ESTADO = '1'
                WHERE ID_PAGO = P_ID_PAGO;
                if l_error=0  then
                    PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_DEV_VENTA(P_ID_PAGO,l_error,l_msgerror);
                    PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_INTER_DEV(P_ID_PAGO);                    
                end if;
            ELSE
                l_error := 1;
                l_msgerror := 'Error, la suma del importe de los items es cero(0).';
            END IF;
        END IF;
        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
    END SP_FINALIZAR_DEVOLUCION_VENTA;
    
    PROCEDURE SP_GENERAR_ASIENTO_DEV_VENTA(P_ID_PAGO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR out VARCHAR2) IS
     
        l_dinamica number;
        l_asiento number;
        l_id_persona number;
        l_detalle varchar2(100);
        l_detalle_in varchar2(100);
        l_base number(10,2);
        l_igv number(10,2);
        l_descuento number(10,2);
        l_importe number(10,2);
        l_id_articulo number(10,2);
        l_correlativo number(10,2); --Add by @vitmar
        l_es_credito varchar2(1);
        l_precio_alm number(10,2);
        l_ctas varchar2(200);
        l_deptos varchar2(200);
        l_ctates varchar2(200);
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento number;
        l_id_parent number;
        l_id_tipoplan number;
        l_id_restriccion varchar2(50);
        l_id_cuentaaasi varchar2(10);
        l_dc varchar2(1);
        l_destino varchar2(1);
        l_id_indicador  varchar2(35);
        l_unico varchar2(1);
        l_porcentaje number(10,2);
        l_unicoctate varchar2(1);
        
        l_id_asientod number;
        l_id_tipopland number;
        l_id_restricciond varchar2(50);
        l_id_cuentaaasid varchar2(10);
        l_dcd varchar2(1);
        l_id_indicadord  varchar2(35);
        l_unicod varchar2(1);
        l_porcentajed number(10,2);
        l_unicoctated varchar2(1);
  
        l_depto varchar2(10);
        l_cuenta_cte varchar2(50);
        l_count_cuenta_cte number;
        l_fondo varchar2(10);
        l_importeasiento number(10,2);
        l_importe_cheque number(10,2);
        l_importe_trans number(10,2);
        l_descripcion varchar2(255);
        l_memo varchar2(255);
        l_voucher varchar2(10);
        l_ref_id varchar2(100);
        
        l_id_entidad number;
        l_id_depto_pago varchar2(20);
        l_buscar number;
        
        l_error number:=0;
        l_msgerror varchar2(200):='';
        l_id_operorigen number:=5;
        
        --validacion
        l_contar number;
        l_debito number(10,2);
        l_credito number(10,2);
        l_cont number;
        l_serie varchar2(5);
        l_numero varchar2(15);
        l_fecha date;
        l_agrupa varchar2(1);
        --l_id_cliente number;
        l_id_ctabancaria number;
        l_id_mediopago varchar2(4);
        l_doc_anticipo varchar2(20);
        l_pgasto number;
        l_tipoorigen number;
        l_id_venta number;
        
        l_id_vdetalle_venta number;
        l_id_tipoorigen_venta number;
        
        l_id_dinamica_cli_sal_ini number;
        l_id_anho number;
        l_id_cliente number;
        
        CURSOR cdet_sal_ini IS	
        SELECT  ID_DINAMICA,ID_ENTIDAD
        FROM CONTA_DINAMICA 
        WHERE ID_DINAMICA=l_id_dinamica_cli_sal_ini;     
        
        CURSOR cdet IS	
        SELECT 
        A.ID_PVENTA, A.ID_VENTA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_CLIENTE, SUBSTR((B.ID_ENTIDAD || '-' || ' Clientes'), 1, 50),A.IMPORTE,
        A.ID_ARTICULO,
        0 as CORRELATIVO, 'N' AS ES_CREDITO
        FROM CAJA_PAGO_VENTA A INNER JOIN VENTA B ON A.ID_VENTA=B.ID_VENTA
        WHERE A.ID_PAGO = P_ID_PAGO;
        
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC desc;
        
        BEGIN
            
            l_detalle:='';--P_DETALLE;
            l_detalle_in:='';--P_DETALLE Ya preparado para guardar;
            
            -- OBTIENE DATOS DEL PAGO
            SELECT id_anho, ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,DECODE(ID_MEDIOPAGO,'008',7,'007',8,'001',9)
            into l_id_anho, l_id_entidad,l_id_depto_pago, l_id_ctabancaria,l_voucher,l_id_mediopago,l_id_operorigen 
            FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;
            
            select id_cliente into l_id_cliente from caja_pago_venta where id_pago = P_ID_PAGO;

            -- DINAMICA CLIENTE SALDO ANTERIORO
            
           SELECT 
            count(1), max(din.ID_DINAMICA)
            into l_contar, l_id_dinamica_cli_sal_ini
            FROM eliseo.CONTA_DINAMICA din, eliseo.TIPO_TRANSACCION tra, eliseo.TIPO_GRUPO_CONTA conta
            WHERE din.ID_TIPOTRANSACCION = tra.ID_TIPOTRANSACCION
            AND tra.ID_TIPOGRUPOCONTA = conta.ID_TIPOGRUPOCONTA
            AND din.ID_ENTIDAD = l_id_entidad
            AND din.ID_ANHO = l_id_anho
            AND din.ID_DEPTO IN ('0',l_id_depto_pago)
            AND din.ID_MODULO = 14
            AND conta.CODIGO = 'DS';
            
            if l_contar <> 1
            then
                L_ERROR :=1;
                L_MSGERROR := 'Alto! La cantidad de dinámicas configuradas para Clientes Saldo Inicial debe de ser 1 ('||l_contar||' dinámicas)';
                GOTO salida_rapida;
            end if;  
                
            -- DETALLE
            OPEN cdet;
            FETCH cdet INTO l_pgasto, l_id_venta, l_tipoorigen,l_dinamica,l_id_persona,l_detalle, l_importe, l_id_articulo, l_correlativo, l_es_credito;
            WHILE cdet%FOUND LOOP
                l_memo :=l_tipoorigen || '-' || l_pgasto;
                
                OPEN casi;
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                WHILE casi%FOUND LOOP
                   
                    l_detalle_in := SUBSTR(l_id_entidad || '-' || l_correlativo || '-' || l_detalle || '-' || SUBSTR(FC_NOMBRE_PERSONA(l_id_persona),1,100), 1,50);
                    
                    select case when l_id_indicador='IMPORTE' then 
                                (l_importe)*(l_porcentaje)
                              else
                              0
                              end into l_importeasiento
                    from dual;
                
                    l_depto:=null;
                    l_cuenta_cte:=null;
                
                    if l_unico='U' then
                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif(l_unico='X') then
                        select PKG_SALES_SCHOOL.FC_DEPTO_ALUMNO_SCHOOL_INST(l_id_cliente, l_id_entidad, l_id_depto_pago) into l_depto from dual;
                        -- select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                    ELSIF l_unico='S' THEN -- Si es sesión
                        l_depto := l_id_depto_pago;
                    END IF;
                
                    if l_unicoctate='U' then
                        select  count(1) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        if l_cont>0 then
                            if l_id_mediopago = '008' then -- Efectivo
                                select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            else
                                SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                        end if;
                    elsif(l_unicoctate='B') then
                        SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                    elsif(l_unicoctate='X') then
                        SELECT PKG_CAJA.FC_RUC(l_id_persona) into l_cuenta_cte from dual;
                    end if; 
                    
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    
                    select count(*) into l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_tipoorigen
                    and ID_ORIGEN=l_pgasto
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    AND voucher=l_voucher
                    and case when importe>0 then 'D' else 'C' end=l_dc;
                	
                   	DBMS_OUTPUT.put_line('.... l_importeasiento ');
    				DBMS_OUTPUT.put_line('l_importeasiento = '||to_char(l_importeasiento));
    				DBMS_OUTPUT.put_line('l_id_cuentaaasi = '||to_char(l_id_cuentaaasi));
                    if l_importeasiento<>0 THEN
                    	DBMS_OUTPUT.put_line('l_cont = '||to_char(l_cont));
                        if l_cont=0 then
                        --if l_cont=0 and l_agrupa = 'N' then 
                            INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA
                            )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importeasiento,
                                l_detalle_in,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id,
                                l_agrupa
                            );
                        else
                        
                            update CONTA_ASIENTO set IMPORTE=l_importeasiento
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasi
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                        end if;
                    end if;
                    
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                END LOOP;
                CLOSE casi; 
                
                -- CONTRA PARTIDA
/*
                l_importeasiento := l_importeasiento*-1;
                SELECT ID_VDETALLE, ID_TIPOORIGEN INTO l_id_vdetalle_venta, l_id_tipoorigen_venta FROM VENTA_DETALLE WHERE ID_VENTA=l_id_venta AND ID_ARTICULO=l_id_articulo;

                SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
                FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen_venta AND ID_ORIGEN=l_id_vdetalle_venta AND PRIMARIO='S' AND ROWNUM = 1;
                
                INSERT INTO CONTA_ASIENTO (
                    ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                    CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                    MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                    )VALUES ( 
                    l_tipoorigen,
                    l_pgasto,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    l_detalle_in,
                    l_memo,
                    l_voucher,
                    null,
                    null,
                    l_agrupa 
                    );
*/                    
-- *******************************************************
--     INICIO DINAMICA SAL INI
-- *******************************************************

SELECT count(1) into l_contar FROM VENTA_SALDO s
            WHERE ID_VENTA = l_id_venta
            and s.id_anho = l_id_anho;
                        
            if l_contar > 0 then 
            
                    OPEN cdet_sal_ini;
                    FETCH cdet_sal_ini INTO l_dinamica,l_id_entidad;
            
                    WHILE cdet_sal_ini%FOUND LOOP
                    
                        ---DINAMICA ASIENTO
                        OPEN casi;
                        
                        FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                        WHILE casi%FOUND LOOP
                        
                           SELECT '('||serie||'-'||numero||')' into l_doc_anticipo FROM VENTA_SALDO s
                            WHERE ID_VENTA = l_id_venta
                            and s.id_anho = l_id_anho;
                            
                            select case when l_id_indicador='IMPORTE' then 
                                        (l_importe)*(l_porcentaje)
                                      else
                                      0
                                      end into l_importeasiento
                            from dual;
                            
                            l_depto:=null;
                            l_cuenta_cte:=null;
                            
                            if l_importeasiento<>0 then
                            
                                if l_unico='U' then
                                  select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                elsif(l_unico='M') then
                                   SELECT INSTR(l_deptos, '|') into l_buscar FROM dual;
                                   if l_buscar>0 then
                                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                     select FC_SPLIT(l_deptos,'|') into l_adeptos  from dual; 
                                     select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into l_depto from dual;
                                   else
                                    l_depto:=l_deptos;
                                   end if;
                                elsif(l_unico='X') then
                                   select PKG_SALES_SCHOOL.FC_DEPTO_ALUMNO_SCHOOL_INST(l_id_cliente, l_id_entidad, l_id_depto_pago) into l_depto from dual;
                                elsif l_unico='S' THEN -- Si es sesión
                                    l_depto := l_id_depto_pago;
                                end if;
                            
                                if l_unicoctate='U' then
                                  select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                  if l_cont>0 then
                                    select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                  end if;
                                elsif(l_unicoctate='M') then
                                   SELECT INSTR(l_ctates, '|') into l_buscar FROM dual;
                                   if l_buscar>0 then
                                     select FC_SPLIT(l_ctas,'|') into l_actas  from dual;
                                     select FC_SPLIT(l_ctates,'|') into l_actates  from dual; 
                                     select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into l_cuenta_cte from dual;
                                   else
                                    l_cuenta_cte:=l_ctates;
                                   end if;
                                elsif(l_unicoctate='X') then
                                    select NUM_DOCUMENTO into l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente and id_tipodocumento = 1;  
                                elsif(l_unicoctate='B') then--LA CTA CTE SE OBTIENE DEL LA CTA BANCARIA
                                    --SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = P_ID_CTABANCARIA;
                                    SELECT ID_TIPOCTACTE, ID_CUENTAAASI into l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                                end if;
                                
                                -- Comentado porque genera asientos en el c cuando tambien caja está al crédito
                                -- if l_dc='C' then
                                --  l_importeasiento:=l_importeasiento*(-1);
                                -- end if;
                            
                                select count(1) into l_cont from CONTA_ASIENTO
                                where ID_TIPOORIGEN=l_tipoorigen
                                and ID_ORIGEN=l_pgasto
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasi
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=l_dc;
                                
                            
                              if l_cont=0 then
                                INSERT INTO CONTA_ASIENTO (
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA
                                )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importeasiento,
                                l_doc_anticipo||'-'||l_descripcion,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id ,
                                l_agrupa
                                );
                              else
                              
                                update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                                where ID_TIPOORIGEN=l_tipoorigen
                                and ID_ORIGEN=l_pgasto
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasi
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=l_dc;
                                
                              end if;
                            end if;
                            
                            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                          END LOOP;
                          CLOSE casi; 
                        FETCH cdet_sal_ini INTO l_dinamica,l_id_entidad;                
                        END LOOP;
                        CLOSE cdet_sal_ini; 
                        
                ELSE
                    -- CONTRA PARTIDA ***********
                    l_importeasiento := l_importeasiento*-1;
                    SELECT max(ID_VDETALLE), max(ID_TIPOORIGEN) INTO l_id_vdetalle_venta, l_id_tipoorigen_venta FROM VENTA_DETALLE WHERE ID_VENTA=l_id_venta AND ID_ARTICULO=l_id_articulo;
    
                    SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
                    FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen_venta AND ID_ORIGEN=l_id_vdetalle_venta AND PRIMARIO='S' AND ROWNUM = 1;
                    
                    INSERT INTO CONTA_ASIENTO (
                        ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                        CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                        MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                        )VALUES ( 
                        l_tipoorigen,
                        l_pgasto,
                        l_fondo,
                        l_depto,
                        l_id_cuentaaasi,
                        l_cuenta_cte,
                        l_id_restriccion,
                        l_importeasiento,
                        l_detalle_in,
                        l_memo,
                        l_voucher,
                        null,
                        null,
                        l_agrupa 
                        );
                    
                END IF;            


-- *******************************************************
--     FIN DINAMICA SAL INI
-- *******************************************************
                    

            FETCH cdet INTO l_pgasto, l_id_venta, l_tipoorigen,l_dinamica,l_id_persona,l_detalle, l_importe, l_id_articulo, l_correlativo, l_es_credito;
            END LOOP;
            CLOSE cdet; 

            select count(*) into l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;
            
        <<salida_rapida>>
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;
        
    END SP_GENERAR_ASIENTO_DEV_VENTA;

    PROCEDURE SP_GENERAR_ASIENTO_INTER_DEP(P_ID_DEPOSITO IN NUMBER) IS

        l_contar number;
        L_GENERAR_INTER VARCHAR2(1);
        L_ID_DEPTO VARCHAR2(20);
        
        BEGIN
        
        L_GENERAR_INTER := 'S';
        
        SELECT ID_DEPTO, case when id_entidad in (
        7124,
        7722,
        7322,
        7422,
        7522,
        7022,
        72122,
        7922
        ) then 'N' else 'S' end 
        INTO L_ID_DEPTO, L_GENERAR_INTER
        FROM CAJA_DEPOSITO
        WHERE ID_DEPOSITO = P_ID_DEPOSITO;
        
        
        if L_GENERAR_INTER = 'S' then 
        
            select count(1) into l_contar from (
                select distinct depto from eliseo.conta_asiento 
                where id_tipoorigen in (7)
                and id_origen = P_ID_DEPOSITO
            );
            
            if l_contar >1 then 
                insert into conta_asiento
                select id_asiento, id_tipoorigen, id_origen, fondo, L_ID_DEPTO,
                '2136080', 
                depto
                , '0A', 
                importe as importe, 'Asiento por Interdepartamento', memo, voucher, parent_id, ref_id, 'S', importe_me, 'N'
                from conta_asiento a
                --delete from conta_asiento
                where id_tipoorigen = 7
                and id_origen = P_ID_DEPOSITO
                and importe < 0
                union all 
                select id_asiento, id_tipoorigen, id_origen, fondo, depto,
                '1136080', 
                L_ID_DEPTO
                , '0A', 
                importe*-1, 'Asiento por Interdepartamento', memo, voucher, parent_id, ref_id, 'S', importe_me, 'N'
                from conta_asiento a
                --delete from conta_asiento
                where id_tipoorigen = 7
                and id_origen = P_ID_DEPOSITO
                and importe < 0
                order by id_origen, importe
                ;
            end if;
        end if;
          
  END SP_GENERAR_ASIENTO_INTER_DEP;
 PROCEDURE SP_GENERAR_ASIENTO_INTER_DEV(P_ID_PAGO IN NUMBER) IS

        l_contar number;
        L_GENERAR_INTER VARCHAR2(1);
        L_ID_DEPTO VARCHAR2(20);
        
        CURSOR pagoventas IS		
        SELECT *
        FROM caja_pago_venta a
        WHERE a.id_pago =P_ID_PAGO;
        
        BEGIN
        
        L_GENERAR_INTER := 'S';
        
        SELECT ID_DEPTO, case when id_entidad in (
        7124,
        7722,
        7322,
        7422,
        7522,
        7022,
        72122,
        7922
        ) then 'N' else 'S' end 
        INTO L_ID_DEPTO, L_GENERAR_INTER
        FROM CAJA_PAGO
        WHERE ID_PAGO = P_ID_PAGO;
        
        if L_GENERAR_INTER = 'S' then 
        
            FOR pagoventa in pagoventas
            LOOP
                select count(1) into l_contar from (
                    select distinct depto from eliseo.conta_asiento 
                    where id_tipoorigen in (9)
                    and id_origen = pagoventa.id_pventa
                );
                
                if l_contar >1 then 
                    insert into conta_asiento                
                    select id_asiento, id_tipoorigen, id_origen, fondo, L_ID_DEPTO,
                    '2136080', 
                    depto
                    , '0A', 
                    importe as importe, 'Asiento por Interdepartamento', memo, voucher, parent_id, ref_id, 'S', importe_me, 'N'
                    --select *  
                    from conta_asiento a
                    --delete from conta_asiento
                    where id_tipoorigen = 9
                    and id_origen = pagoventa.id_pventa
                    and importe > 0
                    and cuenta not in ('1136080','2136080')
                    union all 
                    select id_asiento, id_tipoorigen, id_origen, fondo, depto,
                    '1136080', 
                    L_ID_DEPTO
                    , '0A', 
                    importe*-1, 'Asiento por Interdepartamento', memo, voucher, parent_id, ref_id, 'S', importe_me, 'N'
                    from conta_asiento a
                    --delete from conta_asiento
                    where id_tipoorigen = 9
                    and id_origen = pagoventa.id_pventa
                    and importe > 0
                    and cuenta not in ('1136080','2136080')
                    order by id_origen, importe
                    ;
                end if;
            end loop;  
        end if;
          
  END SP_GENERAR_ASIENTO_INTER_DEV;  
  
  PROCEDURE SP_REGENERATE_VOUCHER(P_ID_VOUCHER IN NUMBER,
                              P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
                              
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(200) :='';
        l_contar number :=0;
        L_ID_DINAMICA_CLI_SALDO_INI number;
        L_ID_DEPTO VARCHAR2(20);
       CURSOR depositos is
        select id_entidad, id_deposito, id_dinamica, id_ctabancaria, 
        case when id_mediopago = '008' then importe else 0 end as importe, 
        case when id_mediopago = '006' then importe else 0 end as importe_tarjeta,    
        case when id_mediopago = '001' then importe else 0 end as importe_transferencia       
        from eliseo.caja_deposito
        where id_VOUCHER = P_ID_VOUCHER
        ;
        
        BEGIN
          --goto salida_rapida;

          FOR deposito in depositos
            LOOP
                select max(id_dinamica), MAX(ID_DEPTO) into L_ID_DINAMICA_CLI_SALDO_INI, L_ID_DEPTO from conta_dinamica
                where id_entidad = deposito.id_entidad
                and id_tipotransaccion = 169
                and id_depto in (select id_depto from caja_deposito where id_deposito = deposito.id_deposito);
                
                -- Limpiamos los depositos
                delete from eliseo.conta_asiento 
                where id_tipoorigen = 7
                and id_origen = deposito.id_deposito;
                
                DBMS_OUTPUT.PUT_LINE('*******************');
                DBMS_OUTPUT.PUT_LINE(deposito.id_deposito);
                DBMS_OUTPUT.PUT_LINE(deposito.id_dinamica);
                DBMS_OUTPUT.PUT_LINE(L_ID_DINAMICA_CLI_SALDO_INI);
                DBMS_OUTPUT.PUT_LINE(deposito.id_ctabancaria);
                DBMS_OUTPUT.PUT_LINE(deposito.importe);
                DBMS_OUTPUT.PUT_LINE(deposito.importe_tarjeta);
                DBMS_OUTPUT.PUT_LINE(deposito.importe_transferencia);
                DBMS_OUTPUT.PUT_LINE(L_ERROR);
                DBMS_OUTPUT.PUT_LINE(L_MSGERROR);
                DBMS_OUTPUT.PUT_LINE('*******************');
                PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_DEPOSITO(
                            deposito.id_deposito, deposito.id_dinamica,L_ID_DINAMICA_CLI_SALDO_INI, 
                            deposito.id_ctabancaria, deposito.importe, deposito.importe_tarjeta, 
                            deposito.importe_transferencia,'', L_ERROR, L_MSGERROR, null);
                            
                
                if L_ERROR != 0 then 
                    goto salida_rapida;
                end if;
                
                if deposito.id_entidad <> 7124 then 
                 PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_INTER_DEP(deposito.id_deposito);
                end if;    
               
                
                PKG_CAJA_SCHOOL.SP_GENERAR_ASIENTO_INTER_DEP(deposito.id_deposito);
            
            end loop;
            
          <<salida_rapida>>
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
          
  END SP_REGENERATE_VOUCHER;
  PROCEDURE SP_VERIFY_CLOSED_CASH(P_ID_ENTIDAD IN NUMBER,P_ID_DEPTO IN VARCHAR2,
                                P_ID_ANHO IN NUMBER,
                              P_ERROR out NUMBER,P_MSGERROR out VARCHAR2) IS
                              
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(200) :='';
        l_primero number := 1;
        l_cantidad number := 0;
        
        
       CURSOR voucher_no_cerrados is
        SELECT cm.NOMBRE , count(1) cantidad FROM (
            SELECT A.ID_MES,
                        CASE WHEN A.IMPORTE = NVL(SUM(B.IMPORTE),0) THEN 'S' ELSE 'N' END AS VALIDA_CIERRE
                FROM (
                        SELECT 
                                A.id_mes, C.ID_CIERRE,A.ID_VOUCHER,SUM(B.IMPORTE) AS IMPORTE
                        FROM CONTA_VOUCHER A LEFT JOIN CAJA_DEPOSITO B
                        ON A.ID_VOUCHER = B.ID_VOUCHER
                        LEFT JOIN CAJA_CIERRE C
                        ON A.ID_VOUCHER = C.ID_VOUCHER
                        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
						AND A.ID_DEPTO = P_ID_DEPTO
						AND A.ID_ANHO = P_ID_ANHO
                        AND A.ID_TIPOVOUCHER = 5
                        AND A.ACTIVO = 'S'
                        AND B.ID_MEDIOPAGO = '008' 
                        GROUP BY A.id_mes,C.ID_CIERRE,A.ID_VOUCHER
                ) A LEFT JOIN CAJA_DEPOSITO_BANCO B
                ON A.ID_CIERRE = B.ID_CIERRE
                GROUP BY A.id_mes, A.ID_CIERRE,A.ID_VOUCHER,A.IMPORTE
                ) X
                INNER JOIN CONTA_MES cm ON cm.ID_MES = X.id_MES
                WHERE VALIDA_CIERRE = 'N'
                GROUP BY cm.NOMBRE 
        ;
        
        BEGIN
          --goto salida_rapida;

          FOR voucher in voucher_no_cerrados
            LOOP
            
                l_cantidad := l_cantidad + voucher.cantidad;
                L_ERROR := 1;
                if l_primero = 1 then 
                    L_MSGERROR := L_MSGERROR || ' Cierres de caja pendientes: ';
                end if;
                L_MSGERROR := L_MSGERROR || voucher.nombre || ': ' ||voucher.cantidad || '; ' ;

                l_primero := 0;
            end loop;
            DBMS_OUTPUT.PUT_LINE(L_ERROR);
            DBMS_OUTPUT.PUT_LINE(L_MSGERROR);
            DBMS_OUTPUT.PUT_LINE('*******************');
          <<salida_rapida>>
          
          if P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '4' then
                if l_cantidad < 8 then 
                 L_ERROR := 0;
                end if;
          else 
                if l_cantidad < 14 then 
                 L_ERROR := 0;
                end if;
                
          end if;

          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
          
  END SP_VERIFY_CLOSED_CASH;
END PKG_CAJA_SCHOOL;