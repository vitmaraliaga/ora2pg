-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

CREATE OR REPLACE PACKAGE        PKG_INFORMES
AS
PROCEDURE SP_VALIDA_TOPE_CONCEPTO(
    	P_ID_CONCEPTOAPS NUMBER,
    	P_ID_CVARIABLE NUMBER,
    	P_IMPORTE_DOC NUMBER,
    	P_ID_PERSONA NUMBER,
    	P_ID_IAYUDA NUMBER,
    	P_CURSOR_DATOS OUT SYS_REFCURSOR);
    
	 PROCEDURE UPDATE_IMPORTES_INFORME(P_ID_INFORME NUMBER);
     
     PROCEDURE SP_PROCESAR_DOCUMENTOS_VIAJES(
        P_IDS_DOCUMENTOS VARCHAR2, 
        P_ID_VOUCHER NUMBER,
        P_TIPO VARCHAR2,
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
        );
       
       PROCEDURE SP_PROCESAR_DOCUMENTOS_VIA_OLD(
        P_IDS_DOCUMENTOS VARCHAR2, 
        P_ID_VOUCHER NUMBER,
        P_TIPO VARCHAR2,
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
        );
    PROCEDURE SP_COMPRA_ASIENTO(P_ID_COMPRA NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_DELETE_PROCESS_DOCUMENTOS(P_IDS_DOCUMENTOS VARCHAR2,P_TIPO VARCHAR2,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_COMPRA_ASIENTO_IGASTO(P_ID_IGASTO NUMBER,P_ERROR OUT NUMBER,P_MSGERROR OUT VARCHAR2);
    PROCEDURE SP_INFORME_ZONA(P_ID_INFORME NUMBER, P_CURSOR_DATOS OUT SYS_REFCURSOR);
    
    PROCEDURE SP_CONVERT_ICOMPRA_TO_COMPRA(
        P_ID_ICOMPRA NUMBER,
        P_ID_TIPOTRANSACCION NUMBER,
        P_ID_DINAMICA NUMBER,
        P_ID_VOUCHER NUMBER,
        P_ID_COMPRA OUT NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
    );
    
END PKG_INFORMES;


CREATE OR REPLACE PACKAGE BODY        PKG_INFORMES
    AS
    PROCEDURE SP_VALIDA_TOPE_CONCEPTO(
    	P_ID_CONCEPTOAPS NUMBER,
    	P_ID_CVARIABLE NUMBER,
    	P_IMPORTE_DOC NUMBER,
    	P_ID_PERSONA NUMBER,
    	P_ID_IAYUDA NUMBER,
    	P_CURSOR_DATOS OUT SYS_REFCURSOR)
    	AS
        L_TIENE_VARIABLE VARCHAR(1);
        L_TIPO_VALOR VARCHAR(1);
        L_VALOR NUMBER;
       	L_TIENE_TOPE VARCHAR2(1);
        L_TOPE_PORCENTAJE NUMBER;
    
        L_IMPORTE_AYUDA NUMBER;
       	L_PASADO_IMPORTE_AYUDA NUMBER;
        -- L_FMR NUMBER := 3700; -- VALOR UN FMR 2020
        --L_FMR NUMBER := 4000; -- VALOR UN FMR 2023
        --L_FMR NUMBER := 4120; -- VALOR UN FMR 2024
        L_FMR NUMBER := 4240; -- VALOR UN FMR 2025
       	L_IMPORTE_TOPE NUMBER;
       
       	L_ERROR NUMBER :=0;
       	L_MSM VARCHAR2(200):='';
        BEGIN 
	        
	        
	        SELECT TIENE_VARIABLE,TIPO_VALOR,VALOR,TIENE_TOPE, TOPE_PORCENTAJE
	        INTO L_TIENE_VARIABLE,L_TIPO_VALOR,L_VALOR,L_TIENE_TOPE, L_TOPE_PORCENTAJE
			FROM  ELISEO.INFORME_CONCEPTOAPS_CONFIG 
			WHERE ID_CONCEPTOAPS =P_ID_CONCEPTOAPS;
			
			IF L_TIENE_TOPE <>'1' THEN
				L_ERROR := 0;
				L_MSM := 'No tiene tope el concepto.';
				GOTO salida_rapida;
			END IF;
		
			IF L_TIENE_VARIABLE='1' THEN 
				IF P_ID_CVARIABLE IS NOT NULL
				THEN 
					SELECT VALOR INTO L_VALOR FROM ELISEO.CONCEPTO_CONFIG_VARIABLE
					WHERE ID_CVARIABLE  =P_ID_CVARIABLE;
				END IF;
			END IF;
			IF L_TIPO_VALOR='P' THEN -- porcentaje
				L_IMPORTE_AYUDA:=(L_VALOR/100)*P_IMPORTE_DOC;
			ELSE
				L_IMPORTE_AYUDA:=L_VALOR;
			END IF;
			
			SELECT 
			   COALESCE(SUM(A.IMPORTE_AYUDA),0) INTO L_PASADO_IMPORTE_AYUDA
			FROM ELISEO.INFORME_AYUDA A INNER JOIN
						eliseo.INFORME B ON A.ID_INFORME=B.ID_INFORME
					WHERE A.ID_CONCEPTOAPS = P_ID_CONCEPTOAPS
					AND B.ID_ANHO = TO_CHAR(SYSDATE,'YYYY')
					AND A.ID_IAYUDA <> P_ID_IAYUDA
					AND b.ID_PERSONA =P_ID_PERSONA;
			
			L_IMPORTE_TOPE := L_FMR*(L_TOPE_PORCENTAJE/100);
			
			IF (L_PASADO_IMPORTE_AYUDA+L_IMPORTE_AYUDA)>L_IMPORTE_TOPE THEN
				L_ERROR := 1;
				L_MSM := 'Alto! El tope de ayuda anual para el concepto: '||P_ID_CONCEPTOAPS|| ' es S/. '||to_char(L_IMPORTE_TOPE)||'. Usted ya informó un importe de: S/. '||to_char(L_PASADO_IMPORTE_AYUDA);
			ELSE 
				L_ERROR := 0;
				L_MSM := 'Sin problemas.';
			END IF;
			
			<<salida_rapida>>
			OPEN P_CURSOR_DATOS FOR
            SELECT 
                L_ERROR AS ERROR,
                L_MSM AS MSM
            FROM DUAL;
           
            
    END SP_VALIDA_TOPE_CONCEPTO;
    PROCEDURE UPDATE_IMPORTES_INFORME(P_ID_INFORME NUMBER) AS
        L_IMPORTE NUMBER;
        L_IMPORTE_ME NUMBER;
        L_IMPORTE_DOC NUMBER;
        L_IMPORTE_AYUDA NUMBER;
        L_IMPORTE_OBRERO NUMBER;
        L_ID_TIPOINFORME NUMBER;
         BEGIN 
            SELECT ID_TIPOINFORME INTO L_ID_TIPOINFORME FROM ELISEO.INFORME WHERE ID_INFORME =P_ID_INFORME;
            IF L_ID_TIPOINFORME=1 THEN 
                -- ACTUALIZAR TODOS
                SELECT NVL(SUM(IMPORTE_DOC),0),NVL(SUM(IMPORTE_AYUDA),0),NVL(SUM(IMPORTE_OBRERO),0) 
                INTO L_IMPORTE_DOC,L_IMPORTE_AYUDA,L_IMPORTE_OBRERO
                FROM ELISEO.INFORME_AYUDA 
                WHERE ID_INFORME =P_ID_INFORME;
               
                UPDATE ELISEO.INFORME SET IMPORTE_DOC=L_IMPORTE_DOC,IMPORTE_AYUDA=L_IMPORTE_AYUDA,IMPORTE_OBRERO=L_IMPORTE_OBRERO 
                WHERE ID_INFORME=P_ID_INFORME;
                
                -- ACTUALIZAR SOLO APROBADOS
                SELECT NVL(SUM(IMPORTE_DOC),0),NVL(SUM(IMPORTE_AYUDA),0),NVL(SUM(IMPORTE_OBRERO),0) 
                INTO L_IMPORTE_DOC,L_IMPORTE_AYUDA,L_IMPORTE_OBRERO
                FROM ELISEO.INFORME_AYUDA
                WHERE ID_INFORME =P_ID_INFORME AND ES_APROBADO ='1';
               
                UPDATE ELISEO.INFORME SET 
                	IMPORTE_DOC_APROB=L_IMPORTE_DOC,
                	IMPORTE_AYUDA_APROB=L_IMPORTE_AYUDA,
                	IMPORTE_OBRERO_APROB=L_IMPORTE_OBRERO 
                WHERE ID_INFORME=P_ID_INFORME;
            ELSE
                -- ACTUALIZAR TODOS
                SELECT NVL(SUM(X.IMPORTE),0),NVL(SUM(X.IMPORTE_ME),0) INTO L_IMPORTE,L_IMPORTE_ME 
                FROM (SELECT IMPORTE,IMPORTE_ME FROM ELISEO.INFORME_COMPRA  WHERE ID_INFORME =P_ID_INFORME
                    UNION ALL
                    SELECT IMPORTE,IMPORTE_ME FROM ELISEO.INFORME_GASTO WHERE ID_INFORME =P_ID_INFORME) X;
                
                UPDATE ELISEO.INFORME SET IMPORTE_DOC=L_IMPORTE,IMPORTE_DOC_ME=L_IMPORTE_ME
                WHERE ID_INFORME=P_ID_INFORME;
                
               	-- ACTUALIZAR SOLO APROBADOS
               	SELECT NVL(SUM(X.IMPORTE),0),NVL(SUM(X.IMPORTE_ME),0) INTO L_IMPORTE,L_IMPORTE_ME 
                FROM (SELECT IMPORTE,IMPORTE_ME FROM ELISEO.INFORME_COMPRA  WHERE ID_INFORME =P_ID_INFORME AND ES_APROBADO ='1'
                    UNION ALL
                    SELECT IMPORTE,IMPORTE_ME FROM ELISEO.INFORME_GASTO WHERE ID_INFORME =P_ID_INFORME AND ES_APROBADO ='1') X;
                
                UPDATE ELISEO.INFORME SET IMPORTE_DOC_APROB=L_IMPORTE,IMPORTE_DOC_ME_APROB=L_IMPORTE_ME
                WHERE ID_INFORME=P_ID_INFORME;
            END IF;
           
         END UPDATE_IMPORTES_INFORME;
    
    PROCEDURE SP_INFORME_ZONA(P_ID_INFORME NUMBER, P_CURSOR_DATOS OUT SYS_REFCURSOR) AS
        L_ID_TIPOPAIS NUMBER;
        type array_t is table of number;
        L_PAISESDSA array_t;
        L_TIPO_VIATICOS NUMBER; -- 1=NACIONAL;-- 2=DSA;-- 3=INTERNACIONAL
        L_TIPO_DESCRIPCION VARCHAR(150) := '';
        
        L_ENABLE_LEGAL NUMBER;
        L_ENABLE_NO_LEGAL NUMBER;
        L_ENABLE_DJ NUMBER;
        
        L_VERIFICADO NUMBER;
        L_AUTORIZADO NUMBER;  
         BEGIN 
            L_PAISESDSA:= array_t(
            32, -- BRASIL
            67, -- Ecuador
            241, -- Ecuador
            175, -- Paraguay
            46, -- Chile
            27, -- Bolivia
            11 -- Argentina
            );

            SELECT coalesce(ID_TIPOPAIS,0),
            DECODE(ESTADO_ACTUAL,'V', 1, 'A', 1, 0),
            DECODE(ESTADO_ACTUAL,'A', 1, 0)
            INTO L_ID_TIPOPAIS, L_VERIFICADO, L_AUTORIZADO
            FROM INFORME WHERE ID_INFORME=P_ID_INFORME;

            IF L_ID_TIPOPAIS=0 THEN  -- No tiene Pais.
                L_TIPO_VIATICOS := 0;
                L_TIPO_DESCRIPCION := 'Viáticos'; -- No tiene Pais.
                L_ENABLE_LEGAL := 0;
                L_ENABLE_NO_LEGAL := 0;
                L_ENABLE_DJ := 0;
            ELSIF L_ID_TIPOPAIS=176 THEN -- PERU
                L_TIPO_VIATICOS := 1;
                L_TIPO_DESCRIPCION := 'Viáticos Nacionales';
                L_ENABLE_LEGAL := 1;
                L_ENABLE_NO_LEGAL := 0;
                L_ENABLE_DJ := 1;
            ELSIF L_ID_TIPOPAIS MEMBER OF L_PAISESDSA THEN
                L_TIPO_VIATICOS := 2;
                L_TIPO_DESCRIPCION := 'Viáticos DSA';
                L_ENABLE_LEGAL := 1;
                L_ENABLE_NO_LEGAL := 1;
                L_ENABLE_DJ := 1;
            ELSE 
                L_TIPO_VIATICOS := 3;
                L_TIPO_DESCRIPCION := 'Viáticos Internacionales';
                L_ENABLE_LEGAL := 1;
                L_ENABLE_NO_LEGAL := 1;
                L_ENABLE_DJ := 1;
            END IF;
            
            OPEN P_CURSOR_DATOS FOR
            SELECT 
                L_TIPO_VIATICOS AS TIPO_VIATICOS,
                L_TIPO_DESCRIPCION AS TIPO_DESCRIPCION,
                L_ENABLE_LEGAL AS ENABLE_LEGAL,
                L_ENABLE_NO_LEGAL AS ENABLE_NO_LEGAL,
                L_ENABLE_DJ AS ENABLE_DJ,
                L_VERIFICADO AS VERIFICADO,
                L_AUTORIZADO AS AUTORIZADO
            FROM DUAL;
            
            
    END SP_INFORME_ZONA;


    PROCEDURE SP_PROCESAR_DOCUMENTOS_VIAJES(
        P_IDS_DOCUMENTOS VARCHAR2, 
        P_ID_VOUCHER NUMBER,
        P_TIPO VARCHAR2, -- 'L', 'NL'
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
        ) IS
        L_CONTAR NUMBER :=0;

        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(15);
        L_ID_ICATEGORIA NUMBER;
        L_CATEGORIA_NOMBRE VARCHAR2(50);
       	L_SERIE VARCHAR2(50);
      	L_NUMERO VARCHAR2(50);
      
        L_ID_TIPOTRANSACCION NUMBER;
        L_ID_DINAMICA NUMBER;
      
        s_informe_compras tablastring; 
        s_gastos tablastring; 
        
        s_id_compra number;
        s_id_icompra number;
        s_id_igasto number;
        
        L_ES_DJ VARCHAR2(1);
        L_TIPO_DOC VARCHAR2(50);
        
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(300) :='';
      
         BEGIN 
         -- L_ERROR := 1;
         -- L_MSGERROR := 'LLEGASTE CON EXITO';
         -- GOTO salida_rapida;
         
         -- Eliminar todo
         SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER WHERE ID_VOUCHER= P_ID_VOUCHER AND ACTIVO= 'S';
         IF L_CONTAR=0 THEN 
            L_ERROR := 1;
            L_MSGERROR := 'Alto! El voucher con id '||P_ID_VOUCHER||' esta cerrado.';
            GOTO salida_rapida;
         END IF;
         
         --lIMPIAR TODOS SUS ANTEDECENTES
         PKG_INFORMES.SP_DELETE_PROCESS_DOCUMENTOS(P_IDS_DOCUMENTOS,P_TIPO,L_ERROR, L_MSGERROR);
         
         IF P_TIPO='L' THEN
         
            select eliseo.FC_SPLIT (P_IDS_DOCUMENTOS,'|') into s_informe_compras  from dual;
            
            -- VALIDACIÓN DE DOCUMENTOS
            FOR i IN s_informe_compras.FIRST .. s_informe_compras.LAST
            loop
                select cast(s_informe_compras(i) as number) into s_id_icompra from dual;
                
                SELECT ic.ID_ICATEGORIA, I.ID_ENTIDAD, I.ID_DEPTO, ic.SERIE,ic.NUMERO
                INTO L_ID_ICATEGORIA, L_ID_ENTIDAD, L_ID_DEPTO, L_SERIE, L_NUMERO 
                FROM INFORME_COMPRA ic
                INNER JOIN INFORME i ON IC.ID_INFORME=I.ID_INFORME
                WHERE ic.ID_ICOMPRA=s_id_icompra;
               
                IF L_ID_ICATEGORIA IS NULL THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'El informe-compra con id '||s_id_icompra||' no tiene una categoría.';
                    GOTO salida_rapida;
                END IF;
               
                select NOMBRE INTO L_CATEGORIA_NOMBRE FROM ELISEO.INFORME_CATEGORIA WHERE ID_ICATEGORIA=L_ID_ICATEGORIA;
                
               
                SELECT COUNT(1) INTO L_CONTAR 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC='LEGAL'
                    AND ESTADO='1';
                   
                IF L_CONTAR=0 THEN 
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una configuración de dinámica en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'. Para documentos legales: Informe-compra ['||L_SERIE || '-'||L_NUMERO||']';
                    GOTO salida_rapida;
                 END IF;
                
                 
                SELECT ID_TIPOTRANSACCION, ID_DINAMICA INTO L_ID_TIPOTRANSACCION, L_ID_DINAMICA 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC='LEGAL'
                    AND ESTADO='1';
                    
                IF L_ID_TIPOTRANSACCION IS NULL OR L_ID_DINAMICA IS NULL THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'Alto! La configuración de la categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una transacción y/o dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'.';
                    GOTO salida_rapida;
                END IF;
                
                -- Covertir el informe compra en compra
               	PKG_INFORMES.SP_CONVERT_ICOMPRA_TO_COMPRA(
               			s_id_icompra, L_ID_TIPOTRANSACCION,L_ID_DINAMICA,P_ID_VOUCHER,
               			s_id_compra,L_ERROR,L_MSGERROR);
               	IF L_ERROR = 1 THEN
                    GOTO salida_rapida;
                END IF;
           
			    UPDATE INFORME_COMPRA SET ID_COMPRA = s_id_compra WHERE ID_ICOMPRA  = s_id_icompra;
			   
                DBMS_OUTPUT.PUT_LINE('L_ID_TIPOTRANSACCION = ' || L_ID_TIPOTRANSACCION);
                DBMS_OUTPUT.PUT_LINE('L_ID_DINAMICA = ' || L_ID_DINAMICA);
                DBMS_OUTPUT.PUT_LINE('P_ID_VOUCHER = ' || P_ID_VOUCHER);
                PKG_INFORMES.SP_COMPRA_ASIENTO(s_id_compra,L_ERROR, L_MSGERROR);
                pkg_purchases.SP_COMPRA_FINALIZAR(s_id_compra,L_ERROR, L_MSGERROR);
               
                
            end loop;
         ELSE 
            select eliseo.FC_SPLIT (P_IDS_DOCUMENTOS,'|') into s_gastos  from dual;
            
            FOR i IN s_gastos.FIRST .. s_gastos.LAST
            loop
                select cast(s_gastos(i) as number) into s_id_igasto from dual;
                
               	select A.ID_ICATEGORIA, B.ID_ENTIDAD, B.ID_DEPTO, a.ES_DJ
               	INTO L_ID_ICATEGORIA, L_ID_ENTIDAD, L_ID_DEPTO, L_ES_DJ
              	from ELISEO.INFORME_GASTO A 
              		INNER JOIN INFORME B ON A.ID_INFORME = B.ID_INFORME
              	WHERE A.ID_IGASTO = s_id_igasto;
             
                IF L_ID_ICATEGORIA IS NULL THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'El gasto con id '||s_id_igasto||' no tiene una categoría.';
                    GOTO salida_rapida;
                END IF;
                   
             	select NOMBRE INTO L_CATEGORIA_NOMBRE 
             	FROM ELISEO.INFORME_CATEGORIA WHERE ID_ICATEGORIA=L_ID_ICATEGORIA;

                IF L_ES_DJ = '0' THEN
                    L_TIPO_DOC := 'NO_LEGAL';
                ELSE 
                    L_TIPO_DOC := 'DJ';
                END IF;
                
                SELECT COUNT(1) INTO L_CONTAR 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC=L_TIPO_DOC
                    AND ESTADO='1';
                IF L_CONTAR=0 THEN 
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una configuración de dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'. Para los gastos [' ||L_TIPO_DOC||']';
                    GOTO salida_rapida;
                END IF;
                
                SELECT ID_TIPOTRANSACCION, ID_DINAMICA INTO L_ID_TIPOTRANSACCION, L_ID_DINAMICA 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC=L_TIPO_DOC
                    AND ESTADO='1';
                   
                IF L_ID_TIPOTRANSACCION IS NULL OR L_ID_DINAMICA IS NULL THEN
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La configuración de la categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una transacción o dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'.';
                    GOTO salida_rapida;
                END IF;
                
                UPDATE ELISEO.INFORME_GASTO 
                SET ID_TIPOTRANSACCION =L_ID_TIPOTRANSACCION,
                ID_DINAMICA =L_ID_DINAMICA,
                ID_VOUCHER=P_ID_VOUCHER
                WHERE ID_IGASTO =s_id_igasto;
                
                PKG_INFORMES.SP_COMPRA_ASIENTO_IGASTO(s_id_igasto,L_ERROR, L_MSGERROR);
                update INFORME_GASTO SET ESTADO='1'
                WHERE ID_IGASTO=s_id_igasto;
                
            end loop;
         END IF;
         
         <<salida_rapida>>
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;
    END SP_PROCESAR_DOCUMENTOS_VIAJES;
   
   
   
   PROCEDURE SP_PROCESAR_DOCUMENTOS_VIA_OLD(
        P_IDS_DOCUMENTOS VARCHAR2, 
        P_ID_VOUCHER NUMBER,
        P_TIPO VARCHAR2, -- 'L', 'NL'
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
        ) IS
        L_CONTAR NUMBER :=0;

        L_ID_ENTIDAD NUMBER;
        L_ID_DEPTO VARCHAR2(15);
        L_ID_ICATEGORIA NUMBER;
        L_CATEGORIA_NOMBRE VARCHAR2(50);
       	L_SERIE VARCHAR2(50);
      	L_NUMERO VARCHAR2(50);
      
        L_ID_TIPOTRANSACCION NUMBER;
        L_ID_DINAMICA NUMBER;
      
        s_compras tablastring; 
        s_gastos tablastring; 
        
        s_id_compra number;
        s_id_igasto number;
        
        L_ES_DJ VARCHAR2(1);
        L_TIPO_DOC VARCHAR2(50);
        
        L_ERROR NUMBER :=0;
        L_MSGERROR VARCHAR2(300) :='';
      
         BEGIN 
         -- L_ERROR := 1;
         -- L_MSGERROR := 'LLEGASTE CON EXITO';
         -- GOTO salida_rapida;
         
         -- Eliminar todo
         SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER WHERE ID_VOUCHER= P_ID_VOUCHER AND ACTIVO= 'S';
         IF L_CONTAR=0 THEN 
            L_ERROR := 1;
            L_MSGERROR := 'Alto! El voucher con id '||P_ID_VOUCHER||' esta cerrado.';
            GOTO salida_rapida;
         END IF;
         
         --lIMPIAR TODOS SUS ANTEDECENTES
         PKG_INFORMES.SP_DELETE_PROCESS_DOCUMENTOS(P_IDS_DOCUMENTOS,P_TIPO,L_ERROR, L_MSGERROR);
         DBMS_OUTPUT.PUT_LINE('lIMPIAR TODOS SUS ANTEDECENTES');
         IF P_TIPO='L' THEN
         
            select eliseo.FC_SPLIT (P_IDS_DOCUMENTOS,'|') into s_compras  from dual;
            
            -- VALIDACIÓN DE DOCUMENTOS
            FOR i IN s_compras.FIRST .. s_compras.LAST
            loop
                select cast(s_compras(i) as number) into s_id_compra from dual;
                
                select ID_ICATEGORIA, ID_ENTIDAD, ID_DEPTO, SERIE, NUMERO
                INTO L_ID_ICATEGORIA, L_ID_ENTIDAD, L_ID_DEPTO, L_SERIE, L_NUMERO 
                from ELISEO.COMPRA WHERE ID_COMPRA=s_id_compra;
             
                IF L_ID_ICATEGORIA IS NULL THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'La compra con id '||s_id_compra||' no tiene una categoría.';
                    GOTO salida_rapida;
                END IF;

                select NOMBRE INTO L_CATEGORIA_NOMBRE FROM ELISEO.INFORME_CATEGORIA WHERE ID_ICATEGORIA=L_ID_ICATEGORIA;
                
                SELECT COUNT(1) INTO L_CONTAR 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC='LEGAL'
                    AND ESTADO='1';
                   
                IF L_CONTAR=0 THEN 
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una configuración de dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'. Para documentos legales: Compra ['||L_SERIE || '-'||L_NUMERO||']';
                    GOTO salida_rapida;
                 END IF;
                
                SELECT ID_TIPOTRANSACCION, ID_DINAMICA INTO L_ID_TIPOTRANSACCION, L_ID_DINAMICA 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC='LEGAL'
                    AND ESTADO='1';
                    
                IF L_ID_TIPOTRANSACCION IS NULL OR L_ID_DINAMICA IS NULL THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'Alto! La configuración de la categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una transacción o dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'.';
                    GOTO salida_rapida;
                END IF;
                
                 
                DBMS_OUTPUT.PUT_LINE('L_ID_TIPOTRANSACCION = ' || L_ID_TIPOTRANSACCION);
                DBMS_OUTPUT.PUT_LINE('L_ID_DINAMICA = ' || L_ID_DINAMICA);
                DBMS_OUTPUT.PUT_LINE('P_ID_VOUCHER = ' || P_ID_VOUCHER);
                DBMS_OUTPUT.PUT_LINE('L_ID_ENTIDAD = ' || L_ID_ENTIDAD);
                DBMS_OUTPUT.PUT_LINE('L_ID_DEPTO = ' || L_ID_DEPTO);
                DBMS_OUTPUT.PUT_LINE('L_SERIE = ' || L_SERIE);
                DBMS_OUTPUT.PUT_LINE('L_NUMERO = ' || L_NUMERO);
                DBMS_OUTPUT.PUT_LINE('s_id_compra = ' || s_id_compra);
                   
                UPDATE ELISEO.COMPRA 
                SET ID_TIPOTRANSACCION =L_ID_TIPOTRANSACCION,
                ID_DINAMICA =L_ID_DINAMICA,
                ID_VOUCHER=P_ID_VOUCHER
                WHERE ID_COMPRA =s_id_compra;
                
                DBMS_OUTPUT.PUT_LINE('L_ID_TIPOTRANSACCION = ' || L_ID_TIPOTRANSACCION);
                DBMS_OUTPUT.PUT_LINE('L_ID_DINAMICA = ' || L_ID_DINAMICA);
                DBMS_OUTPUT.PUT_LINE('P_ID_VOUCHER = ' || P_ID_VOUCHER);
                PKG_INFORMES.SP_COMPRA_ASIENTO(s_id_compra,L_ERROR, L_MSGERROR);
                pkg_purchases.SP_COMPRA_FINALIZAR(s_id_compra,L_ERROR, L_MSGERROR);
            end loop;
         ELSE 
            select eliseo.FC_SPLIT (P_IDS_DOCUMENTOS,'|') into s_gastos  from dual;
            
            FOR i IN s_gastos.FIRST .. s_gastos.LAST
            loop
                select cast(s_gastos(i) as number) into s_id_igasto from dual;
                
               	select A.ID_ICATEGORIA, B.ID_ENTIDAD, B.ID_DEPTO, a.ES_DJ
               	INTO L_ID_ICATEGORIA, L_ID_ENTIDAD, L_ID_DEPTO, L_ES_DJ
              	from ELISEO.INFORME_GASTO A 
              		INNER JOIN INFORME B ON A.ID_INFORME = B.ID_INFORME
              	WHERE A.ID_IGASTO = s_id_igasto;
             
                IF L_ID_ICATEGORIA IS NULL THEN
              		L_ERROR := 1;
                 	L_MSGERROR := 'El gasto con id '||s_id_igasto||' no tiene una categoría.';
                    GOTO salida_rapida;
                END IF;
                   
             	select NOMBRE INTO L_CATEGORIA_NOMBRE 
             	FROM ELISEO.INFORME_CATEGORIA WHERE ID_ICATEGORIA=L_ID_ICATEGORIA;

                IF L_ES_DJ = '0' THEN
                    L_TIPO_DOC := 'NO_LEGAL';
                ELSE 
                    L_TIPO_DOC := 'DJ';
                END IF;
                
                SELECT COUNT(1) INTO L_CONTAR 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC=L_TIPO_DOC
                    AND ESTADO='1';
                IF L_CONTAR=0 THEN 
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una configuración de dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'. Para los gastos [' ||L_TIPO_DOC||']';
                    GOTO salida_rapida;
                END IF;
                
                SELECT ID_TIPOTRANSACCION, ID_DINAMICA INTO L_ID_TIPOTRANSACCION, L_ID_DINAMICA 
                from INFORME_CATEGORIA_CONFIG 
                WHERE ID_ENTIDAD=L_ID_ENTIDAD
                    AND ID_DEPTO=L_ID_DEPTO
                    AND ID_ICATEGORIA = L_ID_ICATEGORIA
                    AND TIPO_DOC=L_TIPO_DOC
                    AND ESTADO='1';
                   
                IF L_ID_TIPOTRANSACCION IS NULL OR L_ID_DINAMICA IS NULL THEN
                    L_ERROR := 1;
                    L_MSGERROR := 'Alto! La configuración de la categoría '|| L_CATEGORIA_NOMBRE || ' no tiene una transacción o dinámica en en la entidad '||L_ID_ENTIDAD||' y el departamento '||L_ID_DEPTO||'.';
                    GOTO salida_rapida;
                END IF;
                
                UPDATE ELISEO.INFORME_GASTO 
                SET ID_TIPOTRANSACCION =L_ID_TIPOTRANSACCION,
                ID_DINAMICA =L_ID_DINAMICA,
                ID_VOUCHER=P_ID_VOUCHER
                WHERE ID_IGASTO =s_id_igasto;
                
                PKG_INFORMES.SP_COMPRA_ASIENTO_IGASTO(s_id_igasto,L_ERROR, L_MSGERROR);
                update INFORME_GASTO SET ESTADO='1'
                WHERE ID_IGASTO=s_id_igasto;
                
            end loop;
         END IF;
         
         <<salida_rapida>>
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;
    END SP_PROCESAR_DOCUMENTOS_VIA_OLD;


    PROCEDURE SP_COMPRA_ASIENTO(
        P_ID_COMPRA NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
    ) IS
        
     
        L_IMPORTEASIENTO NUMBER(10,2);
        L_IMPORTEASIENTO_ME NUMBER(10,2);
        
        L_DEPTO varchar2(10);
        l_DEPTOS varchar2(200) := '';
        L_CUENTA_CTE varchar2(50);
        L_CTATES varchar2(200);

        L_BUSCAR number;

        L_CTAS varchar2(200);
        
        L_ACTAS tablastring;
        L_ADEPTOS tablastring;
        L_ACTATES tablastring;

        --validacion
        L_CONT number;

        L_ID_CASIENTO VARCHAR2(50);
        --L_ID_FONDO VARCHAR2(50);
        L_CORRELATIVO NUMBER;
        L_ID_COMPROBANTE varchar2(20);
        L_ID_COMPROBANTE_NC varchar2(25);
        L_ID_DEPTO_COMPRA varchar2(20);
        L_ES_CREDITO varchar2(1);
        L_ID_PROVEEDOR NUMBER;
        L_SERIE VARCHAR2(50);
        L_NUMERO VARCHAR2(50);
        L_ID_DINAMICA NUMBER;
		L_IMPORTE NUMBER(10,2);
        L_IMPORTE_ME NUMBER(10,2);
        L_IGV NUMBER(10,2);
        L_BASE NUMBER(10,2);
        L_BASE_SINCREDITO NUMBER(10,2);
        L_OTROS NUMBER(10,2);
        L_ID_INFORME NUMBER;
        L_VIAJE_CIUDAD VARCHAR2(300);
        
        --DATOS INFORME
        L_ID_ENTIDAD NUMBER;
        L_ID_OBRERO NUMBER;
        L_ID_FONDO VARCHAR2(3);
       
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,
        a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA,A.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC;
        
    BEGIN
    
        P_ERROR :=0;
        IF P_ERROR = 0 THEN
       
            
            -- Datos de la compra.
            SELECT CORRELATIVO, ID_DEPTO, ES_CREDITO, ID_COMPROBANTE, ID_PROVEEDOR, SERIE, NUMERO, ID_DINAMICA,
            	COALESCE(IMPORTE,0), COALESCE(IMPORTE_ME,0), COALESCE(IGV,0), COALESCE(BASE,0),COALESCE(BASE_SINCREDITO,0),COALESCE(OTROS,0), ID_INFORME
            INTO L_CORRELATIVO, L_ID_DEPTO_COMPRA, L_ES_CREDITO, L_ID_COMPROBANTE, L_ID_PROVEEDOR, L_SERIE, L_NUMERO, L_ID_DINAMICA,
            	L_IMPORTE, L_IMPORTE_ME, L_IGV, L_BASE,L_BASE_SINCREDITO, L_OTROS,L_ID_INFORME
            FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA;
            
            SELECT ID_INFORME INTO L_ID_INFORME FROM INFORME_COMPRA ic WHERE ID_COMPRA = P_ID_COMPRA;
            
             DBMS_OUTPUT.put_line('.... P_ID_COMPRA '||P_ID_COMPRA);
                  
            -- Si la ciudad de la compra es nula que saque la ciudad del informe.
            SELECT ID_ENTIDAD, ID_PERSONA, COALESCE(L_VIAJE_CIUDAD, VIAJE_CIUDAD) INTO L_ID_ENTIDAD, L_ID_OBRERO, L_VIAJE_CIUDAD
           from ELISEO.INFORME where ID_INFORME= L_ID_INFORME;

            SELECT NOMBRE_CORTO INTO L_ID_COMPROBANTE_NC FROM TIPO_COMPROBANTE WHERE ID_COMPROBANTE=L_ID_COMPROBANTE;
       
            FOR a_casi in casi
                LOOP
                BEGIN
                    SELECT CASE a_casi.id_indicador WHEN 'IMPORTE' then 
                            (L_IMPORTE)*(a_casi.PORCENTAJE)
                          WHEN 'BASE' then
                            (L_BASE+L_BASE_SINCREDITO)*(a_casi.PORCENTAJE)
                          WHEN 'OTROS' then
                            (L_OTROS)*(a_casi.PORCENTAJE)
                          WHEN 'IGV' then
                            (L_IGV)*(a_casi.PORCENTAJE)
                          ELSE
                          0
                          END INTO L_IMPORTEASIENTO
                    FROM dual;
                   
                     DBMS_OUTPUT.put_line('.... importe '|| L_IMPORTEASIENTO||' '||a_casi.id_indicador||' '||L_OTROS||' '||a_casi.PORCENTAJE);
                  
                    L_DEPTO:=NULL;
                    L_CUENTA_CTE:=NULL;
                    
                    IF a_casi.UNICO='U' THEN -- Único
                        -- SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD;
                        SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ASIENTO=a_casi.ID_ASIENTO;
                    --ELSIF(L_UNICO='M') THEN -- Muchos
                        /*
                        SELECT INSTR(l_DEPTOS, '|') INTO L_BUSCAR FROM dual;
                        IF L_BUSCAR>0 THEN
                            SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM dual;
                            SELECT FC_SPLIT(L_DEPTOS,'|') INTO L_ADEPTOS  FROM dual; 
                            SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ADEPTOS ,L_ID_CUENTAAASI) INTO L_DEPTO FROM dual;
                        ELSE
                            L_DEPTO:=L_DEPTOS;
                        END IF;
                        */
                    ELSIF a_casi.UNICO='X' THEN -- Si es Personal
                        SELECT COUNT(1) INTO L_CONT FROM APS_EMPLEADO A WHERE A.ID_PERSONA=L_ID_OBRERO AND A.ID_ENTIDAD=L_ID_ENTIDAD
                            AND (A.FEC_TERMINO IS NULL OR TO_CHAR(FEC_TERMINO,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'));
                            
                        if L_CONT>0 THEN
                            SELECT max(id_depto) into L_DEPTO FROM APS_EMPLEADO A 
                            WHERE A.ID_PERSONA=L_ID_OBRERO AND A.ID_ENTIDAD=L_ID_ENTIDAD
                            AND (A.FEC_TERMINO IS NULL OR TO_CHAR(FEC_TERMINO,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'));
                         END IF;
            
                    ELSIF a_casi.UNICO='S' THEN -- Si es sesión
                        L_DEPTO := L_ID_DEPTO_COMPRA;
                    END IF;
                    
                    IF L_ES_CREDITO = 'S' AND a_casi.UNICO_CTACTE='U' THEN
                        SELECT PKG_PURCHASES.FC_RUC(L_ID_PROVEEDOR) into L_CUENTA_CTE from dual;
                    ELSE 
                        IF a_casi.UNICO_CTACTE='U' THEN
                          SELECT  count(*) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=a_casi.ID_ASIENTO;
                          if L_CONT>0 THEN
                            SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=a_casi.ID_ASIENTO;
                          END IF;
                        -- ELSIF(a_casi.UNICO_CTACTE='M') THEN
                        /*
                           SELECT INSTR(L_CTATES, '|') INTO L_BUSCAR FROM dual;
                           if l_buscar>0 THEN
                             SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM dual;
                             SELECT FC_SPLIT(L_CTATES,'|') INTO L_ACTATES  FROM dual; 
                             SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ACTATES ,L_ID_CUENTAAASI) INTO L_CUENTA_CTE FROM dual;
                           ELSE
                            L_CUENTA_CTE:=L_CTATES;
                           END IF;
                           */
                        ELSIF(a_casi.UNICO_CTACTE='X') THEN
                            IF a_casi.ID_CUENTAAASI = '2130101' then
                                SELECT PKG_PURCHASES.FC_RUC(L_ID_PROVEEDOR) into L_CUENTA_CTE from dual;
                            else 
                                SELECT  
		                            COUNT(1) INTO L_CONT
		                            FROM MOISES.VW_PERSONA_NATURAL
		                            WHERE ID_PERSONA=L_ID_OBRERO
		                            AND ID_TIPODOCUMENTO =1; -- DNI 
		                        if L_CONT>0 THEN
		                            SELECT  
		                                MAX(NUM_DOCUMENTO) INTO L_CUENTA_CTE
		                                FROM MOISES.VW_PERSONA_NATURAL
		                                WHERE ID_PERSONA=L_ID_OBRERO
		                                AND ID_TIPODOCUMENTO =1;
		                         ELSE 
		                         	SELECT COUNT(1) INTO L_CONT
		                            FROM MOISES.VW_PERSONA_NATURAL
		                            WHERE ID_PERSONA=L_ID_OBRERO
		                            AND ID_TIPODOCUMENTO =4; -- CARNET DE EXTRANGERIA
		                            if L_CONT>0 THEN
		                            	SELECT  
		                                MAX(NUM_DOCUMENTO) INTO L_CUENTA_CTE
		                                FROM MOISES.VW_PERSONA_NATURAL
		                                WHERE ID_PERSONA=L_ID_OBRERO
		                                AND ID_TIPODOCUMENTO =4;
			                         END IF;
		                         END IF;
                            end if;
                        END IF;
                    END IF; 
                   
                    -- Add fondo del personal segun el aps
                    SELECT COALESCE(MAX(ae.FONDO),to_char(a_casi.ID_FONDO)) INTO L_ID_FONDO FROM APS_EMPLEADO ae WHERE ID_PERSONA = L_ID_OBRERO
                    AND ID_ENTIDAD = L_ID_ENTIDAD;
                   
                    IF a_casi.DC='C' THEN
                        L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                        L_IMPORTEASIENTO_ME:=L_IMPORTE_ME*(-1);
                     ELSE 
                        L_IMPORTEASIENTO := L_IMPORTEASIENTO;
                        L_IMPORTEASIENTO_ME := L_IMPORTE_ME;
                    END IF;
                   
                    IF L_IMPORTEASIENTO<>0 THEN
                        --IF L_CONT=0 THEN
                        
                            SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO L_ID_CASIENTO FROM COMPRA_ASIENTO;
                            
                            INSERT INTO COMPRA_ASIENTO(
                             ID_CASIENTO,
                             ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE,
                             ID_FONDO, ID_DEPTO, IMPORTE,
                             DESCRIPCION,EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, IMPORTE_ME, FECHA_ACTUALIZACION, AGRUPA
                            ) VALUES(
                             L_ID_CASIENTO,
                             P_ID_COMPRA, a_casi.ID_CUENTAAASI, a_casi.ID_RESTRICCION, L_CUENTA_CTE,
                             L_ID_FONDO, L_DEPTO, L_IMPORTEASIENTO,
                             
                             SUBSTR((L_CORRELATIVO || ' | ' || L_ID_COMPROBANTE_NC || '. ' || L_SERIE || '-' || L_NUMERO || ' | ' || a_casi.NOMBRE)|| ' - '||L_VIAJE_CIUDAD,1,50),
                             
                             'N', NULL, NULL, a_casi.DC, L_IMPORTEASIENTO_ME, systimestamp, a_casi.AGRUPA
                            );
                         -- END IF;
                      END IF;
                
                END;     
            END LOOP;
                 
        END IF;
    --END;
    END SP_COMPRA_ASIENTO;
    
    PROCEDURE SP_COMPRA_ASIENTO_IGASTO(
        P_ID_IGASTO NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
    ) IS
        
     
        L_IMPORTEASIENTO NUMBER(10,2);
        L_IMPORTEASIENTO_ME NUMBER(10,2);
        
        L_DEPTO varchar2(10);
        L_CUENTA_CTE varchar2(50);
       
        L_CONT number;
        
        --DATOS INFORME
        L_ID_OBRERO NUMBER;
        L_ID_ASIENTO NUMBER;
        L_ID_TIPOORIGEN NUMBER;
        L_ID_VOUCHER NUMBER;
        L_ID_DINAMICA NUMBER;
        L_ID_ENTIDAD_GASTO NUMBER;
        L_ID_DEPTO_GASTO varchar2(20);
        L_IMPORTE NUMBER(10,2);
        L_IMPORTE_ME NUMBER(10,2);
        
        L_ES_DJ VARCHAR2(2);
        L_NOMBRE_CATEGORIA VARCHAR2(20);
        L_GLOSA VARCHAR2(30);
        L_NOMBRE_TIPOPAIS  VARCHAR2(200);
        L_ID_FONDO VARCHAR2(3);
 
        CURSOR casi IS		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,
        a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA,A.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.DC;
        
    BEGIN
    
        P_ERROR :=0;
        IF P_ERROR = 0 THEN
       
            
            SELECT ID_ENTIDAD, ID_DEPTO, COALESCE(A.IMPORTE,0), COALESCE(A.IMPORTE_ME,0), B.ID_PERSONA, A.ID_DINAMICA, A.ID_TIPOORIGEN, A.ID_VOUCHER, C.NOMBRE, A.ES_DJ, COALESCE(D.NOMBRE,'')
            INTO L_ID_ENTIDAD_GASTO, L_ID_DEPTO_GASTO, L_IMPORTE, L_IMPORTE_ME, L_ID_OBRERO , L_ID_DINAMICA, L_ID_TIPOORIGEN, L_ID_VOUCHER, L_NOMBRE_CATEGORIA, L_ES_DJ, L_NOMBRE_TIPOPAIS
            FROM ELISEO.INFORME_GASTO A INNER JOIN ELISEO.INFORME B ON A.ID_INFORME=B.ID_INFORME
            INNER JOIN ELISEO.INFORME_CATEGORIA C ON A.ID_ICATEGORIA = C.ID_ICATEGORIA 
            LEFT JOIN ELISEO.TIPO_PAIS D ON B.ID_TIPOPAIS=D.ID_TIPOPAIS
            WHERE ID_IGASTO=P_ID_IGASTO;
            
            
            FOR a_casi in casi
                LOOP
                BEGIN
                    SELECT CASE a_casi.id_indicador WHEN 'IMPORTE' then 
                            (L_IMPORTE)*(a_casi.PORCENTAJE)
                          -- WHEN 'BASE' then
                          --   (L_BASE)*(a_casi.PORCENTAJE)
                          -- WHEN 'IGV' then
                          --      (L_IGV)*(a_casi.PORCENTAJE)
                          ELSE
                          0
                          END INTO L_IMPORTEASIENTO
                    FROM dual;
                   
                    IF L_ES_DJ='0' THEN
                        L_GLOSA := L_NOMBRE_CATEGORIA; -- aqui falta el pais
                    ELSE 
                        L_GLOSA := a_casi.NOMBRE;
                    END IF;
                  
                    L_DEPTO:=NULL;
                    L_CUENTA_CTE:=NULL;
                    
                    IF a_casi.UNICO='U' THEN -- Único
                        -- SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ENTIDAD=P_ID_ENTIDAD;
                        SELECT MAX(ID_DEPTO) INTO L_DEPTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ASIENTO=a_casi.ID_ASIENTO;
                    --ELSIF(L_UNICO='M') THEN -- Muchos
                        /*
                        SELECT INSTR(l_DEPTOS, '|') INTO L_BUSCAR FROM dual;
                        IF L_BUSCAR>0 THEN
                            SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM dual;
                            SELECT FC_SPLIT(L_DEPTOS,'|') INTO L_ADEPTOS  FROM dual; 
                            SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ADEPTOS ,L_ID_CUENTAAASI) INTO L_DEPTO FROM dual;
                        ELSE
                            L_DEPTO:=L_DEPTOS;
                        END IF;
                        */
                    ELSIF a_casi.UNICO='X' THEN -- Si es Personal
                        SELECT COUNT(1) INTO L_CONT FROM APS_EMPLEADO A WHERE A.ID_PERSONA=L_ID_OBRERO
                        	AND A.ID_ENTIDAD=L_ID_ENTIDAD_GASTO
                            AND (A.FEC_TERMINO IS NULL OR TO_CHAR(FEC_TERMINO,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'));
                            
                        if L_CONT>0 THEN
                            SELECT max(id_depto) into L_DEPTO FROM APS_EMPLEADO A 
                            WHERE A.ID_PERSONA=L_ID_OBRERO AND A.ID_ENTIDAD=L_ID_ENTIDAD_GASTO
                            AND (A.FEC_TERMINO IS NULL OR TO_CHAR(FEC_TERMINO,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'));
                         END IF;
            
                    ELSIF a_casi.UNICO='S' THEN -- Si es sesión
                        L_DEPTO := L_ID_DEPTO_GASTO;
                    END IF;
                    
                    
                    IF a_casi.UNICO_CTACTE='U' THEN
                      SELECT  count(*) INTO L_CONT FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=a_casi.ID_ASIENTO;
                      if L_CONT>0 THEN
                        SELECT ID_CTACTE INTO L_CUENTA_CTE FROM CONTA_DINAMICA_CTA_CTE WHERE ID_ASIENTO=a_casi.ID_ASIENTO;
                      END IF;
                    -- ELSIF(a_casi.UNICO_CTACTE='M') THEN
                    /*
                       SELECT INSTR(L_CTATES, '|') INTO L_BUSCAR FROM dual;
                       if l_buscar>0 THEN
                         SELECT FC_SPLIT(L_CTAS,'|') INTO L_ACTAS  FROM dual;
                         SELECT FC_SPLIT(L_CTATES,'|') INTO L_ACTATES  FROM dual; 
                         SELECT FC_OBTENER_DPTOCTCTE(L_ACTAS,L_ACTATES ,L_ID_CUENTAAASI) INTO L_CUENTA_CTE FROM dual;
                       ELSE
                        L_CUENTA_CTE:=L_CTATES;
                       END IF;
                       */
                    ELSIF(a_casi.UNICO_CTACTE='X') THEN
                        
                        SELECT  
                            COUNT(1) INTO L_CONT
                            FROM MOISES.VW_PERSONA_NATURAL
                            WHERE ID_PERSONA=L_ID_OBRERO
                            AND ID_TIPODOCUMENTO =1; -- DNI 
                        if L_CONT>0 THEN
                            SELECT  
                                MAX(NUM_DOCUMENTO) INTO L_CUENTA_CTE
                                FROM MOISES.VW_PERSONA_NATURAL
                                WHERE ID_PERSONA=L_ID_OBRERO
                                AND ID_TIPODOCUMENTO =1;
                         ELSE 
                         	SELECT COUNT(1) INTO L_CONT
                            FROM MOISES.VW_PERSONA_NATURAL
                            WHERE ID_PERSONA=L_ID_OBRERO
                            AND ID_TIPODOCUMENTO =4; -- CARNET DE EXTRANGERIA
                            if L_CONT>0 THEN
                            	SELECT  
                                MAX(NUM_DOCUMENTO) INTO L_CUENTA_CTE
                                FROM MOISES.VW_PERSONA_NATURAL
                                WHERE ID_PERSONA=L_ID_OBRERO
                                AND ID_TIPODOCUMENTO =4;
	                         END IF;
                         END IF;
                    END IF;
                   
                    -- Add fondo del personal segun el aps
                    SELECT COALESCE(MAX(ae.FONDO),to_char(a_casi.ID_FONDO)) INTO L_ID_FONDO FROM APS_EMPLEADO ae WHERE ID_PERSONA = L_ID_OBRERO
                    AND ID_ENTIDAD = L_ID_ENTIDAD_GASTO;
                   
                    IF a_casi.DC='C' THEN
                        L_IMPORTEASIENTO:=L_IMPORTEASIENTO*(-1);
                        L_IMPORTEASIENTO_ME:=L_IMPORTE_ME*(-1);
                     ELSE 
                        L_IMPORTEASIENTO := L_IMPORTEASIENTO;
                        L_IMPORTEASIENTO_ME := L_IMPORTE_ME;
                    END IF;
                   
                    IF L_IMPORTEASIENTO<>0 THEN
                        
                            
                            SELECT NVL(MAX(ID_ASIENTO),0)+1 INTO L_ID_ASIENTO FROM CONTA_ASIENTO;
                            
                            INSERT INTO CONTA_ASIENTO (ID_ASIENTO,
                                           ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO,
                                           CUENTA, CUENTA_CTE, RESTRICCION, IMPORTE,IMPORTE_ME,
                                           DESCRIPCION, MEMO,VOUCHER,AGRUPA)
                             VALUES (L_ID_ASIENTO, L_ID_TIPOORIGEN, P_ID_IGASTO,L_ID_FONDO, L_DEPTO,
                                     a_casi.ID_CUENTAAASI, L_CUENTA_CTE, a_casi.ID_RESTRICCION, L_IMPORTEASIENTO,L_IMPORTEASIENTO_ME,
                                     SUBSTR((L_GLOSA || ' - '||L_NOMBRE_TIPOPAIS),1,50), 
                                     L_ID_TIPOORIGEN||'-'||P_ID_IGASTO, L_ID_VOUCHER, a_casi.AGRUPA);
                             
                             
                      END IF;
                END;     
            END LOOP;
                 
        END IF;
    --END;
    END SP_COMPRA_ASIENTO_IGASTO;
    
    PROCEDURE SP_DELETE_PROCESS_DOCUMENTOS(
        P_IDS_DOCUMENTOS VARCHAR2,
        P_TIPO VARCHAR2, -- 'L', 'NL'
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
    ) IS
    
        s_informe_compras tablastring; 
        s_gastos tablastring; 
        
        s_id_icompra number;
        s_id_compra number;
        s_id_igasto number;
        
       L_ID_TIPOORIGEN NUMBER;
       L_ID_VOUCHER NUMBER;
       L_VOUCHER_ACTIVO VARCHAR2(10);
      
       L_ERROR NUMBER :=0;
       L_MSGERROR VARCHAR2(300) :='';
       
    BEGIN
        
        IF P_TIPO='L' THEN
            select eliseo.FC_SPLIT(P_IDS_DOCUMENTOS,'|') into s_informe_compras  from dual;
        
            FOR i IN s_informe_compras.FIRST .. s_informe_compras.LAST
            loop
                select cast(s_informe_compras(i) as number) into s_id_icompra from dual;
               
                --==========
                -- Recuperamos el id_compra, si no existe no hacemos nada.
                SELECT ic.ID_COMPRA INTO s_id_compra FROM INFORME_COMPRA ic WHERE ic.ID_ICOMPRA=s_id_icompra;
               	IF s_id_compra IS null THEN
               		CONTINUE; -- Continuar con el siguiente item del each
              	END IF;
                
                SELECT COALESCE(max(ID_TIPOORIGEN),0), COALESCE(max(ID_VOUCHER),0) INTO L_ID_TIPOORIGEN, L_ID_VOUCHER 
                FROM ELISEO.COMPRA WHERE ID_COMPRA =s_id_compra;
                
                IF L_ID_VOUCHER <> 0 THEN
                	SELECT ACTIVO INTO L_VOUCHER_ACTIVO FROM CONTA_VOUCHER WHERE ID_VOUCHER = L_ID_VOUCHER;
	              	IF L_VOUCHER_ACTIVO='N' THEN
	              		L_ERROR := 1;
	              	 	L_MSGERROR := 'Alto! No puede eliminar la distribucuón contable, el voucher ya fue cerrado.';
	              	 	GOTO salida_rapida;
	              	END IF;
                END IF;
                --==========
               DBMS_OUTPUT.put_line('s_id_compra .... '||s_id_compra);
                --UPDATE COMPRA SET ESTADO='0', ID_VOUCHER=null, ID_TIPOTRANSACCION=NULL, ID_DINAMICA=NULL WHERE ID_COMPRA=s_id_compra;
                UPDATE INFORME_COMPRA SET ID_COMPRA = NULL WHERE ID_ICOMPRA=s_id_icompra;
                DELETE COMPRA_DETALLE WHERE ID_COMPRA=s_id_compra;
                DELETE COMPRA_ASIENTO WHERE ID_COMPRA=s_id_compra;
                DELETE COMPRA WHERE ID_COMPRA=s_id_compra;
                DELETE CONTA_ASIENTO WHERE ID_ORIGEN=s_id_compra AND ID_TIPOORIGEN=L_ID_TIPOORIGEN;
                    
            end loop;
        ELSE 
            select eliseo.FC_SPLIT(P_IDS_DOCUMENTOS,'|') into s_gastos  from dual;
        
            FOR i IN s_gastos.FIRST .. s_gastos.LAST
            loop
                select cast(s_gastos(i) as number) into s_id_igasto from dual;
                
                SELECT ID_TIPOORIGEN, COALESCE(ID_VOUCHER,0) INTO L_ID_TIPOORIGEN, L_ID_VOUCHER
                FROM ELISEO.INFORME_GASTO WHERE ID_IGASTO=s_id_igasto;
                
                IF L_ID_VOUCHER <> 0 THEN
                	SELECT ACTIVO INTO L_VOUCHER_ACTIVO FROM CONTA_VOUCHER WHERE ID_VOUCHER = L_ID_VOUCHER;
	              	IF L_VOUCHER_ACTIVO='N' THEN
	              		L_ERROR := 1;
	              	 	L_MSGERROR := 'Alto! No puede eliminar la distribucuón contable, el voucher ya fue cerrado.';
	              	 	GOTO salida_rapida;
	              	END IF;
                END IF;
              
                UPDATE INFORME_GASTO SET ESTADO='0', ID_VOUCHER=null, ID_TIPOTRANSACCION=NULL, ID_DINAMICA=NULL WHERE ID_IGASTO=s_id_igasto;
                DELETE CONTA_ASIENTO WHERE ID_ORIGEN=s_id_igasto AND ID_TIPOORIGEN=L_ID_TIPOORIGEN;
                    
            end loop;
        END IF;
        
       <<salida_rapida>>
       P_ERROR := L_ERROR;
       P_MSGERROR := L_MSGERROR;
    END SP_DELETE_PROCESS_DOCUMENTOS;
   
   
   PROCEDURE SP_CONVERT_ICOMPRA_TO_COMPRA(
        P_ID_ICOMPRA NUMBER,
        P_ID_TIPOTRANSACCION NUMBER,
        P_ID_DINAMICA NUMBER,
        P_ID_VOUCHER NUMBER,
        P_ID_COMPRA OUT NUMBER,
        P_ERROR OUT NUMBER,
        P_MSGERROR OUT VARCHAR2
    ) IS
       	L_ID_ENTIDAD NUMBER;
       	L_ID_DEPTO VARCHAR2(20);
       	L_ID_COMPROBANTE VARCHAR2(2);
      
       	L_ES_CREDITO VARCHAR2(2) :='N';
	   	L_ES_ELECTRONICA VARCHAR2(2) :='N';
	  	L_ES_TRANSPORTE_CARGA VARCHAR2(2) :='N';
		L_ID_PARENT NUMBER;
		L_FECHA_VENCIMIENTO DATE;
    
       	L_ID_PROVEEDOR NUMBER;
       	L_SERIE VARCHAR2(25);
       	L_NUMERO VARCHAR2(25);
       	L_FECHA_DOC VARCHAR2(25);
       
        L_FECHA_ALMACEN DATE;
        
        L_ES_RET_DET VARCHAR2(1) := NULL;
        L_ID_ANHO NUMBER;
        L_ID_MES NUMBER;
        L_ID_PERSONA NUMBER;
       
        --L_VOUCHER_MES VARCHAR2(10);
        --L_DOC_MES VARCHAR2(10);
       	L_TIENE_KARDEX VARCHAR2(1) := NULL;
      
       	L_TIPO VARCHAR2(10) := 'NG';
       	L_TIPO_CAMBIO NUMBER := 0;
       	L_ID_MONEDA NUMBER;
       	LI_IMPORTE NUMBER;
        LI_IMPORTE_ME NUMBER;
       	LI_TAXS NUMBER;
        LI_TAXS_ME NUMBER;
       	LI_OTROS NUMBER;
        LI_OTROS_ME NUMBER;
        LI_SINCREDITO NUMBER;
    	LI_SINCREDITO_ME NUMBER;
    
       	-- VARIABLES DE CALCULO.
       	L_BASE NUMBER(10,2) := 0;
       	L_IGV NUMBER(10,2) := 0;
       	L_OUT_SINCREDITO NUMBER(10,2) := 0;
       	L_TOTAL NUMBER(10,2) := 0;
       	L_IMPORTE_ME NUMBER(10,2) := 0;
       	L_GET_IGV BOOLEAN := TRUE;
       	L_ID_IGV NUMBER;
        L_PORCENTAJE_IGV NUMBER;
       
       -- VARIABLES DE DESTINO
        L_BASE_GRAVADA NUMBER(10,2);
        L_IGV_GRAVADO NUMBER(10,2);
        L_BASE_MIXTA NUMBER(10,2);
        L_IGV_MIXTO NUMBER(10,2);
        L_BASE_NOGRAVADA NUMBER(10,2);
        L_IGV_NOGRAVADO NUMBER(10,2);

        L_BASE_SINCREDITO NUMBER(10,2); -- SOLO PARA NO BOLETAS DE VENTAS
        L_OTROS NUMBER(10,2);
        
        l_id_compra_existe NUMBER;
        L_E_ID_ENTIDAD NUMBER;
        L_E_ID_DEPTO VARCHAR(25);
       	L_E_ID_ANHO NUMBER;
      	L_E_ID_MES NUMBER;
        L_E_ESTADO VARCHAR(10);
        L_E_USER VARCHAR(150);
        
        
        L_ID_COMPRA NUMBER := 0;
       	L_ERROR NUMBER :=0;
       	L_MSGERROR VARCHAR2(300) :='';
       
    BEGIN
	    
         SELECT ic.ID_COMPROBANTE, I.ID_ENTIDAD,I.ID_DEPTO,IC.TIPO_CAMBIO, IC.ID_MONEDA, COALESCE(IC.IMPORTE, 0),COALESCE(IC.IMPORTE_ME, 0), COALESCE(IC.TAXS, 0),COALESCE(IC.TAXS_ME, 0), COALESCE(IC.OTROS, 0), COALESCE(IC.OTROS_ME, 0), COALESCE(IC.ID_IGV,18)
      		, IC.ID_PROVEEDOR, IC.SERIE, IC.NUMERO,IC.FECHA, I.ID_ANHO, I.ID_MES, I.ID_PERSONA, COALESCE(ic.SINCREDITO, 0), COALESCE(ic.SINCREDITO_ME , 0)
            INTO L_ID_COMPROBANTE, L_ID_ENTIDAD, L_ID_DEPTO,L_TIPO_CAMBIO,L_ID_MONEDA, LI_IMPORTE, LI_IMPORTE_ME,LI_TAXS,LI_TAXS_ME, LI_OTROS,LI_OTROS_ME, L_ID_IGV
            , L_ID_PROVEEDOR,L_SERIE,L_NUMERO,L_FECHA_DOC, L_ID_ANHO, L_ID_MES, L_ID_PERSONA,LI_SINCREDITO,LI_SINCREDITO_ME
            FROM INFORME_COMPRA ic
            INNER JOIN INFORME i ON IC.ID_INFORME=I.ID_INFORME
            WHERE ic.ID_ICOMPRA=P_ID_ICOMPRA;
       
	    IF L_ID_COMPROBANTE='02' then -- RECIBO POR HONORARIO 
	        L_ERROR := 1;
	        L_MSGERROR := 'Alto! Tipo de documento no aceptado.';
	        GOTO salida_rapida;
	    END IF;
	   
	    IF LI_IMPORTE=0 then  
	        L_ERROR := 1;
	        L_MSGERROR := 'Alto! El importe del comprobante legal no puede ser 0 ('||L_SERIE|| '-'||L_NUMERO|| ') ';
	        GOTO salida_rapida;
	    END IF;
       
	    IF L_ID_ENTIDAD = 7115 THEN -- Nuevo Tiempo
            L_TIPO := 'G'; -- Adquisiciones grabadas destinadas a operaciones grabadas
        END IF;
                                            -- 
        L_PORCENTAJE_IGV := (L_ID_IGV/100);
      
        -- Validar que el comprobante no exista en el registro de compras.
       SELECT  COALESCE(max(ID_COMPRA),0) INTO l_id_compra_existe
                FROM COMPRA
                WHERE ID_PROVEEDOR = L_ID_PROVEEDOR
                AND ID_COMPROBANTE = L_ID_COMPROBANTE
                AND trim(LEADING '0' from upper(SERIE)) = trim(LEADING '0' from upper(L_SERIE))
                AND trim(LEADING '0' from upper(numero)) = trim(LEADING '0' from upper(L_NUMERO))
                AND ID_COMPRA <> L_ID_COMPRA;
               
      IF l_id_compra_existe <> 0 THEN
      		SELECT c.ID_ENTIDAD, c.ID_DEPTO, c.ID_ANHO, c.ID_MES, c.estado, (SELECT max(u.EMAIL) FROM USERS u WHERE u.id=c.ID_PERSONA) 
      		INTO L_E_ID_ENTIDAD, L_E_ID_DEPTO,L_E_ID_ANHO, L_E_ID_MES,L_E_ESTADO, L_E_USER FROM COMPRA c WHERE c.ID_COMPRA =l_id_compra_existe;
	        L_ERROR := 1;
	        L_MSGERROR := 'Alto! El comprobante ('||L_SERIE|| '-'||L_NUMERO|| ') ya esta registrado en la entidad-depto: '||L_E_ID_ENTIDAD||'-'||L_E_ID_DEPTO||' - '||L_E_ID_ANHO||'-'||L_E_ID_MES||'; Estado: '||L_E_ESTADO||'; Usuario: '||L_E_USER||'-'||l_id_compra_existe;
	        GOTO salida_rapida;
	    END IF; 
      
         IF L_ID_MONEDA = 7 THEN --soles
	    
	        pkg_purchases.SP_COMPRA_CALCULAR(
	            -- IN
	            L_ID_COMPROBANTE, L_GET_IGV, L_TIPO_CAMBIO, L_ID_MONEDA, LI_IMPORTE, LI_TAXS, LI_SINCREDITO, LI_OTROS,L_PORCENTAJE_IGV, 
	            -- OUT
	            L_BASE, L_IGV, L_OUT_SINCREDITO, L_TOTAL, L_IMPORTE_ME);
           
        ELSE 
	        pkg_purchases.SP_COMPRA_CALCULAR(
	            -- IN
	            L_ID_COMPROBANTE, L_GET_IGV, L_TIPO_CAMBIO, L_ID_MONEDA, LI_IMPORTE_ME, LI_TAXS_ME, LI_SINCREDITO_ME, LI_OTROS_ME,L_PORCENTAJE_IGV, 
	            -- OUT
	            L_BASE, L_IGV, L_OUT_SINCREDITO, L_TOTAL, L_IMPORTE_ME);
        END IF;
        
	     IF L_BASE < 0 OR L_IGV < 0 OR L_OUT_SINCREDITO < 0 OR L_TOTAL <= 0 THEN
	     	L_ERROR := 1;
	        L_MSGERROR := 'Alto! Los importes calculados son incorrectos (Base: '||to_char(L_BASE)||', Igv: '||to_char(L_IGV)||', Inafecto: '||to_char(L_OUT_SINCREDITO)||', Total: '||to_char(L_TOTAL)||')';
	        GOTO salida_rapida;
	     END IF; 
           
       	pkg_purchases.SP_COMPRA_DESTINO_OPERACION(
        -- IN
        L_ID_COMPROBANTE, L_TIPO, L_BASE, L_IGV, L_OUT_SINCREDITO,
        -- OUT
        L_BASE_GRAVADA, L_IGV_GRAVADO, L_BASE_MIXTA, L_IGV_MIXTO,
        L_BASE_NOGRAVADA, L_IGV_NOGRAVADO, L_BASE_SINCREDITO, L_OTROS);
        
        
        pkg_purchases.SP_COMPRA_GUARDAR_ACTUALIZAR(
	        	L_ES_CREDITO,
	        	L_ID_PROVEEDOR,
	        	L_ID_COMPROBANTE,
	        	L_ES_ELECTRONICA,
	        	L_ES_TRANSPORTE_CARGA,
        		L_ID_PARENT,
        		L_SERIE,
        		L_NUMERO,
        		L_FECHA_DOC,
        		L_FECHA_VENCIMIENTO,
        		P_ID_DINAMICA,
        		P_ID_TIPOTRANSACCION,
        		L_ID_MONEDA,
		        LI_TAXS,
		        
		        L_ES_RET_DET,
		        L_TIPO_CAMBIO,
		        L_TOTAL,
		        L_IMPORTE_ME,
		        L_BASE_GRAVADA,
		        L_IGV_GRAVADO,
		        L_BASE_MIXTA,
		        L_IGV_MIXTO,
		        L_BASE_NOGRAVADA,
		        L_IGV_NOGRAVADO,
		        L_BASE_SINCREDITO,
		        L_OTROS,
		        L_FECHA_ALMACEN,
		        L_TIENE_KARDEX,
		        
		        P_ID_VOUCHER,
		        L_ID_ENTIDAD,
		        L_ID_DEPTO,
		        L_ID_PERSONA,
		        L_ID_ANHO,
		        L_ID_MES,
		        L_ID_IGV,
		        
		        L_ERROR,
		        L_ID_COMPRA,
		        L_MSGERROR
    		);
    	
	    	IF L_ERROR = 1 THEN 
	    		GOTO salida_rapida;
	    	END IF;
      
	    
       <<salida_rapida>>
       P_ID_COMPRA := L_ID_COMPRA;
       P_ERROR := L_ERROR;
       P_MSGERROR := L_MSGERROR;
    END SP_CONVERT_ICOMPRA_TO_COMPRA;
       
END PKG_INFORMES;