-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_inventories,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_inventories_sp_finish_movimiento (P_ID_MOVIMIENTO bigint,P_ERROR OUT bigint,P_MSN_ERROR OUT text) AS $body$
DECLARE

        L_ID_ANHO bigint;
        L_ID_MOVDETALLE bigint;
        L_ID_TIPOORIGEN bigint :=6;
        L_ID_ALMACEN bigint;
        L_ID_ARTICULO bigint;
        L_CANTIDAD bigint;
        L_COSTO bigint;
        L_IMPORTE bigint;
        L_MSN_ERROR varchar(200):='';
        L_SERIE varchar(4);
        L_NUMERO varchar(8);
        L_CORRELATIVO varchar(8);
        L_ID_PERSONA bigint;
        L_ID_DOCUMENTO bigint;
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(8);
        L_TIPO varchar(1);
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        L_CONTAR bigint;
        L_ID_TIPOASIENTO varchar(3) := 'MI';
        L_ID_TIPOVOUCHER bigint := 13;
        L_ID_VOUCHER bigint;
        L_AUTOMATICO varchar(2);
        L_ID_MES bigint;
        L_NUMERO_V bigint;
        L_FECHA varchar(12);
        L_ID_DINAMICA bigint;

        articulos CURSOR FOR	
        SELECT ID_MOVDETALLE,ID_ARTICULO,CANTIDAD,COSTO,IMPORTE 
        FROM INVENTARIO_DETALLE
        WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO
        AND ESTADO = '0'
        ORDER BY ID_ARTICULO;
        	

BEGIN   
            SELECT ID_ALMACEN,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA, ID_DOCUMENTO, TIPO INTO STRICT L_ID_ALMACEN,L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,L_ID_PERSONA,L_ID_DOCUMENTO, L_TIPO
            FROM INVENTARIO_MOVIMIENTO
            WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO;

            IF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '1' THEN
                L_ID_TIPOASIENTO := 'MI';
            ELSIF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '4' THEN
                L_ID_TIPOASIENTO := 'MIC';
            ELSIF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '5' THEN
                L_ID_TIPOASIENTO := 'MIJ';
            ELSIF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '6' THEN
                L_ID_TIPOASIENTO := 'MIT';
            ELSIF L_ID_ENTIDAD = 7124 AND L_ID_DEPTO = '3' THEN
                L_ID_TIPOASIENTO := 'MII';
            ELSE
            	L_ID_TIPOASIENTO := 'MI';
            END IF;

            OPEN articulos;
              FETCH articulos INTO L_ID_MOVDETALLE,L_ID_ARTICULO,L_CANTIDAD,L_COSTO,L_IMPORTE;
                WHILE articulos%FOUND LOOP
                    CALL pkg_inventories_sp_add_kardex(L_ID_ANHO,L_ID_ALMACEN,L_ID_ARTICULO,L_ID_TIPOORIGEN,L_ID_MOVDETALLE,L_CANTIDAD,L_COSTO,L_IMPORTE,L_TIPO);
                    FETCH articulos INTO L_ID_MOVDETALLE,L_ID_ARTICULO,L_CANTIDAD,L_COSTO,L_IMPORTE;
                END LOOP;
            CLOSE articulos;

            UPDATE INVENTARIO_DETALLE SET ESTADO = '1'
            WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO;

            -- Obtiene numero y serie y actualiza correlativo
            -- pkg_sales_sp_obtener_serie_numero(L_ID_PERSONA,L_ID_DOCUMENTO,L_ID_ENTIDAD,L_SERIE,L_CORRELATIVO);
            CALL pkg_sales_sp_obtener_serie_numero_fijo(L_ID_DOCUMENTO,L_SERIE,L_CORRELATIVO);
            SELECT lpad(L_CORRELATIVO::text,8,'0') INTO STRICT L_NUMERO;

            --obtener voucher
            /*SELECT COUNT(1) INTO L_CONTAR FROM CONTA_VOUCHER_CONFIG  
            WHERE ID_ENTIDAD=L_ID_ENTIDAD 
            AND ID_DEPTO= L_ID_DEPTO
            AND ID_TIPOASIENTO=L_ID_TIPOASIENTO 
            AND ID_ANHO=L_ID_ANHO
            AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER; 
      
            IF L_CONTAR>0  THEN
                SELECT AUTOMATICO INTO L_AUTOMATICO FROM CONTA_VOUCHER_CONFIG  
                WHERE ID_ENTIDAD=L_ID_ENTIDAD 
                AND ID_DEPTO= L_ID_DEPTO
                AND ID_TIPOASIENTO=L_ID_TIPOASIENTO 
                AND ID_ANHO=L_ID_ANHO
                AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER; -- 5= tipo voucher ingresos   

                IF L_AUTOMATICO='S' THEN
                    pkg_accounting_sp_crear_voucher(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,SYSDATE,L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,NULL, 'S', L_ID_PERSONA, L_ID_VOUCHER);
                ELSE
                    pkg_accounting_sp_validar_voucher(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_TIPOVOUCHER,L_ID_PERSONA,L_ID_VOUCHER,L_NUMERO_V,L_FECHA,P_ERROR,P_MSN_ERROR);
                END IF;
            END IF;*/
            
            --EL VOUCHER SER√Å AUTOMATICO 1 POR DIA POR CADA ALMACEN Y TIPO DE MOVIMIENTO INGRESO O SALIDA
            SELECT 
                    COUNT(1) INTO STRICT L_CONTAR
            FROM INVENTARIO_MOVIMIENTO
            WHERE ID_ALMACEN = L_ID_ALMACEN
            AND ID_ANHO = L_ID_ANHO
            AND TIPO = L_TIPO
            AND TO_CHAR(FECHA,'YYYYDDMM') = TO_CHAR(clock_timestamp(),'YYYYDDMM')
            AND (ID_VOUCHER IS NOT NULL AND ID_VOUCHER::text <> '')
            AND ESTADO = '1';

            IF L_CONTAR = 0 THEN
                CALL pkg_accounting_sp_insert_voucher(L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'S',L_ID_PERSONA, L_ID_VOUCHER);
            ELSE
                SELECT DISTINCT
                    ID_VOUCHER INTO STRICT L_ID_VOUCHER
                FROM INVENTARIO_MOVIMIENTO
                WHERE ID_ALMACEN = L_ID_ALMACEN
                AND ID_ANHO = L_ID_ANHO
                AND TIPO = L_TIPO
                AND TO_CHAR(FECHA,'YYYYDDMM') = TO_CHAR(clock_timestamp(),'YYYYDDMM')
                AND (ID_VOUCHER IS NOT NULL AND ID_VOUCHER::text <> '')
                AND ESTADO = '1';
            END IF;

            IF (coalesce(L_ID_VOUCHER::text, '') = '' OR L_ID_VOUCHER = 0) THEN 
                l_error:=1;
                l_msgerror:= 'ERROR: No fue posible obtener el voucher para el movimiento de inventarios.';
--                 GOTO salida_rapida;
            END IF;

            UPDATE INVENTARIO_MOVIMIENTO SET ID_VOUCHER = L_ID_VOUCHER,
            SERIE = L_SERIE,NUMERO = L_NUMERO,ESTADO = '1'
            WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO;

            --GENERAR ASIENTO
            SELECT DISTINCT ID_DINAMICA INTO STRICT L_ID_DINAMICA FROM INVENTARIO_DETALLE
            WHERE ID_MOVIMIENTO = P_ID_MOVIMIENTO;

            
            
            IF coalesce(L_ID_DINAMICA::text, '') = '' OR L_ID_DINAMICA = 0 THEN
                CALL pkg_inventories_sp_generar_asiento_manual(P_ID_MOVIMIENTO,l_error,l_msgerror);
            ELSE
                CALL pkg_inventories_sp_generar_asiento(P_ID_MOVIMIENTO,l_error,l_msgerror);
            END IF;

            IF l_error = 1 THEN
--                 GOTO salida_rapida;
            END IF;

--             <<salida_rapida>>
            P_ERROR:=l_error;
       		P_MSN_ERROR:=l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_inventories_sp_finish_movimiento (P_ID_MOVIMIENTO bigint,P_ERROR OUT bigint,P_MSN_ERROR OUT text) FROM PUBLIC;
