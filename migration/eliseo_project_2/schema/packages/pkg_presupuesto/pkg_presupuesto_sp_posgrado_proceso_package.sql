-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_presupuesto,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_presupuesto_sp_posgrado_proceso (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_contar bigint;


  
BEGIN
  
    MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING(SELECT 
              A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              COALESCE(SUM(A.CANTIDAD_I),0) AS CANTIDAD_I,
              COALESCE(SUM(A.CANTIDAD_II),0) AS CANTIDAD_II,
              COALESCE(SUM(A.HORAS_I),0) AS HORAS_I,
              COALESCE(SUM(A.HORAS_II),0) AS HORAS_II,
              A.BECA,
              A.ID_AUXILIAR
              FROM PSTO_PREGRADO_PROYECCCION A
              WHERE A.ID_ENTIDAD=P_ID_ENTIDAD
              AND A.ID_ANHO=P_ID_ANHO
              AND A.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
              --AND (A.CANTIDAD_I+A.CANTIDAD_II)>0
              AND A.ID_AUXILIAR=P_ID_AUXILIAR
              GROUP BY A.ID_ENTIDAD,
              A.ID_DEPTO,
              A.ID_ANHO,
              A.ID_DEPTO_PADRE,
              A.BECA,
              A.ID_AUXILIAR
            )t
        ON (C.ID_ENTIDAD=t.ID_ENTIDAD and C.ID_DEPTO=t.ID_DEPTO and C.ID_ANHO=t.ID_ANHO and coalesce(C.CONVOCA,'-')=coalesce(t.BECA,'-') and C.ID_DEPTO_PADRE=t.ID_DEPTO_PADRE and C.ID_AUXILIAR=t.ID_AUXILIAR )
        WHEN  MATCHED THEN UPDATE SET  
          C.TOTAL_ALUMNO_I=t.CANTIDAD_I,
          C.TOTAL_ALUMNO_II=t.CANTIDAD_II,
          C.TOTAL_HORAS_I=t.HORAS_I,
          C.TOTAL_HORAS_II=t.HORAS_II;

    
      MERGE INTO PSTO_PREGRADO_PROCESO_CONCEPTO C 
      USING(
         SELECT 
         D.IMPORTE_I * P.TOTAL_ALUMNO_I AS TOTAL_I,
         D.IMPORTE_I * P.TOTAL_ALUMNO_II AS TOTAL_II,
         D.ID_PREGRADO_PROCESO,
         D.ID_CONCEPTO_PRECIO,
         R.TIPO
         FROM PSTO_PREGRADO_PROCESO_CONCEPTO D,PSTO_PREGRADO_PROCESO P,PSTO_PREGRADO_CONCEPTO_PRECIO R
         WHERE D.ID_PREGRADO_PROCESO=P.ID_PREGRADO_PROCESO
         AND D.ID_CONCEPTO_PRECIO=R.ID_CONCEPTO_PRECIO
         AND P.ID_ENTIDAD=P_ID_ENTIDAD
         AND P.ID_ANHO=P_ID_ANHO
         AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
         AND P.ID_AUXILIAR=P_ID_AUXILIAR
         AND D.TIPO NOT IN ('D','S') 
      )t
      ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO AND C.ID_CONCEPTO_PRECIO=t.ID_CONCEPTO_PRECIO)
      WHEN  MATCHED THEN UPDATE SET
      C.TOTAL_I=t.TOTAL_I,
      C.TOTAL_II=t.TOTAL_II,
      C.TIPO=t.TIPO;

       /*
       M:Matrícula
       E:Enseñanza
       D:Descuento,
       O:Otros
       */
      MERGE INTO PSTO_PREGRADO_PROCESO C 
      USING(SELECT 
              X.ID_PREGRADO_PROCESO,
              M.MAT_I,
              M.MAT_II,
              M.ENSE_I,
              M.ENSE_II, 
              M.DESC_I,
              M.DESC_II 
              FROM PSTO_PREGRADO_PROCESO X INNER JOIN(
                  SELECT 
                    COALESCE(SUM(CASE WHEN D.TIPO='M' THEN D.TOTAL_I ELSE 0 END),0) AS MAT_I,
                    COALESCE(SUM(CASE WHEN D.TIPO='M' THEN D.TOTAL_II ELSE 0 END),0) AS MAT_II,
                    COALESCE(SUM(CASE WHEN D.TIPO='E' THEN D.TOTAL_I ELSE 0 END),0) AS ENSE_I,
                    COALESCE(SUM(CASE WHEN D.TIPO='E' THEN D.TOTAL_II ELSE 0 END),0) AS ENSE_II,
                    COALESCE(SUM(CASE WHEN D.TIPO='D' THEN D.TOTAL_I ELSE 0 END),0) AS DESC_I,
                    COALESCE(SUM(CASE WHEN D.TIPO='D' THEN D.TOTAL_II ELSE 0 END),0) AS DESC_II,
                    P.ID_PREGRADO_PROCESO
                  FROM PSTO_PREGRADO_PROCESO P, PSTO_PREGRADO_PROCESO_CONCEPTO D
                  WHERE P.ID_PREGRADO_PROCESO=D.ID_PREGRADO_PROCESO
                  AND P.ID_ENTIDAD=P_ID_ENTIDAD
                  AND P.ID_ANHO=P_ID_ANHO
                  AND P.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
                  AND P.ID_AUXILIAR=P_ID_AUXILIAR	
                  AND D.TIPO IN ('M','E','D') 
                  GROUP BY P.ID_PREGRADO_PROCESO
                )M
               ON X.ID_PREGRADO_PROCESO=M.ID_PREGRADO_PROCESO 
               WHERE X.ID_ENTIDAD=P_ID_ENTIDAD
               AND X.ID_ANHO=P_ID_ANHO
               AND X.ID_DEPTO_PADRE=P_ID_DEPTO_PADRE 
               AND X.ID_AUXILIAR=P_ID_AUXILIAR	
            )t
        ON (C.ID_PREGRADO_PROCESO=t.ID_PREGRADO_PROCESO)
        WHEN  MATCHED THEN UPDATE SET  
        C.TOTAL_ENSE_I=t.ENSE_I,
        C.TOTAL_ENSE_II=t.ENSE_II,
        C.TOTAL_MAT_I=t.MAT_I,
        C.TOTAL_MAT_II=t.MAT_II,
        C.TOTAL_DES_I=t.DESC_I,
        C.TOTAL_DES_II=t.DESC_II;

      

    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_presupuesto_sp_posgrado_proceso (P_ID_ENTIDAD bigint,P_ID_DEPTO_PADRE text,P_ID_ANHO bigint,P_ID_AUXILIAR bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
