-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_industry,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_industry_sp_migrar_venta_jesus (P_ERROR OUT bigint, P_MSGERROR OUT text) AS $body$
DECLARE


        l_id_anho_current bigint;
        l_id_anho bigint;
        l_id_mes bigint;
        l_id_persona_register bigint:=198574; --Sistema
        l_id_cliente bigint;
        l_count bigint := 0;

        l_id_moneda bigint;
        l_gravado bigint;
        l_igv bigint;
        l_inafecta bigint;
        l_id_tipoigv varchar(20);

        l_id_venta bigint;
        /*
        cursor saldos is
           SELECT 
          id_entidad, 
          id_depto, 
          serie,
          numero, 
          ruc_cliente, 
          razon_social_cliente,
          fecha,
          fecha_venc,
          id_comprobante,
          moneda,
          glosa,
          es_gravado,
          importe,
          importe_me,
          cuenta_cte,
          id_articulo
          from vv_importa_venta_jesus
          where ya_existe is null
          and id_venta is null 
          order by fecha;
          
          */
        L_ERROR bigint;
        L_MSGERROR varchar(100) :='';

    
BEGIN
            
            SELECT EXTRACT(YEAR FROM clock_timestamp() ) into STRICT l_id_anho_current;

            /*
            FOR sal in saldos
                LOOP
                select TO_CHAR(sal.fecha, 'YYYY') , TO_CHAR(sal.fecha, 'MM')into l_id_anho, l_id_mes from dual;
                
                select max(x.id_persona) into l_id_cliente from moises.persona_juridica x where x.id_ruc=sal.ruc_cliente;
            
                if l_id_cliente is null then 
                    select max(x.id_persona) into l_id_cliente from moises.persona_documento x 
                            where x.num_documento=sal.ruc_cliente and x.id_tipodocumento in (1,4,6);
                end if;
                
                
              SELECT count(v.id_venta) into l_count FROM VENTA v WHERE v.ID_ENTIDAD =sal.id_entidad
              --AND ID_DEPTO =sal.id_depto
              AND SERIE =sal.serie
              AND NUMERO =sal.numero;
                
                if l_count >0 then 
                    L_ERROR:=1; 
                    L_MSGERROR:='El comprobante ya existe  '||sal.serie||'-'||sal.numero;
--                     GOTO salida_rapida;
                end if;
                
                if l_id_cliente is null then 
                    L_ERROR:=1; 
                    L_MSGERROR:='No se encuentra el cliente con num_doc '||sal.ruc_cliente;
--                     GOTO salida_rapida;
                end if;
                
                if not (sal.moneda = 'PEN' or sal.moneda = 'USD') then 
                    L_ERROR:=1; 
                    L_MSGERROR:='Monedas disponibles (PEN/USD) ';
--                     GOTO salida_rapida;
                end if;
                
                IF sal.moneda = 'PEN' THEN 
                    l_id_moneda := 7;
                else 
                    l_id_moneda := 9;
                end if;
                
                if sal.es_gravado ='1' then 
                    l_gravado := round(sal.importe/1.18,2);
                    l_igv := round(sal.importe-(sal.importe/1.18),2);
                    l_inafecta := 0;
                    l_id_tipoigv := '10';
                else 
                    l_gravado := 0;
                    l_igv := 0;
                    l_inafecta := sal.importe;
                    l_id_tipoigv := '30';
                end if;
                
                insert into venta(id_entidad,id_depto,id_anho,id_mes,id_persona,id_cliente,id_voucher,id_comprobante,id_igv,id_moneda,tipocambio, 
               id_leyenda, id_credito, ID_TIPOTRANSACCION, serie, numero,fecha,fecha_vencimiento,glosa,GRAVADA,IGV,inafecta,total,estado
               )
               values(
               sal.id_entidad,sal.id_depto,l_id_anho,l_id_mes,l_id_persona_register,l_id_cliente,null,sal.id_comprobante,18,l_id_moneda,0, 
               '1000', 1, null, sal.serie, sal.numero,sal.fecha,sal.fecha_venc,sal.glosa,l_gravado,l_igv,l_inafecta,sal.importe, '1'
               ) return id_venta into l_id_venta;
               
               
               -- Add venta_detalle
               insert into venta_detalle(id_venta,id_tipoigv,id_almacen,id_articulo,id_dinamica,detalle,cantidad,precio,base,igv,importe
               )
               values(l_id_venta,l_id_tipoigv,null,sal.id_articulo,null,sal.glosa,1,sal.importe,round(sal.importe-l_igv,2),l_igv,sal.importe
               );
               
  
          if l_id_anho < l_id_anho_current then 
                insert into eliseo.venta_saldo (
                ID_ENTIDAD,
                ID_DEPTO,
                ID_ANHO,
                id_mes,
                ID_VENTA,
                ID_MONEDA,
                ID_PERSONA,
                ID_CLIENTE,
                ID_COMPROBANTE,
                id_articulo,
                SERIE,
                NUMERO,
                FECHA,
                TOTAL,
                TOTAL_ME,
                IP,
                detalle,
                id_tipoventa
                )
                values(
                sal.id_entidad,
                sal.id_depto,
                l_id_anho_current,
                1,
                l_id_venta,
                l_id_moneda,
                l_id_persona_register, -- Usuariio sistema sistema
                l_id_cliente,
                sal.id_comprobante,
                --60131, -- AÃ±os Anteriores
                null,
                sal.serie,
                sal.numero,
                TO_DATE('01-01-' || TO_CHAR(l_id_anho_current), 'dd-mm-yyyy'),
                sal.importe,
                0,
                null,
                'SALDO INICIAL',
                6
                );
            end if;
            
            update vv_importa_venta_jesus x
            set id_venta=l_id_venta
            where 1=1
            and x.numero=sal.numero
            and x.serie=sal.serie
            and x.ruc_cliente=sal.ruc_cliente
            ;
            
            
        end loop;
  */
       /*
        INSERT INTO CONTA_ASIENTO
        SELECT NULL, ca.ID_TIPOORIGEN, vd.ID_VDETALLE, ca.FONDO , ca.DEPTO , ca.CUENTA , ca.CUENTA_CTE , ca.RESTRICCION 
        , vd.IMPORTE , 
        xx.id_entidad||'-'||xx.id_depto||' ('||xx.SERIE||'-'||xx.NUMERO||') Migrated '||to_char(SYSDATE, 'DD/MM/YYYY') ,
        '1-'||vd.id_vdetalle ,null , ca.PARENT_ID , ca.REF_ID , ca.AGRUPA , ca.IMPORTE_ME , ca.PRIMARIO 
        FROM CONTA_ASIENTO ca,
        vv_importa_venta_jesus xx,
        VENTA_DETALLE vd 
        WHERE ca.ID_TIPOORIGEN =1
        AND ca.ID_ORIGEN =2896970
        AND xx.ID_VENTA =vd.ID_VENTA ;
        */
    
        RAISE NOTICE 'P_ERROR = %', L_ERROR;
        RAISE NOTICE 'P_MSGERROR = %', L_MSGERROR;
                
--         <<salida_rapida>>
        P_ERROR:=L_ERROR;
        P_MSGERROR:=L_MSGERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_industry_sp_migrar_venta_jesus (P_ERROR OUT bigint, P_MSGERROR OUT text) FROM PUBLIC;
