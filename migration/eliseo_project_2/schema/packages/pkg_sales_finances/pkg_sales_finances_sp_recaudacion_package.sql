-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;

    /*PROCEDURE pkg_sales_finances_sp_recaudacion(P_ID_ENTIDAD numeric,P_ID_DEPTO varchar,P_ID_ANHO numeric,P_ID_MES numeric,P_ID_USER numeric)IS
        L_ID_MES numeric;
        L_DIA numeric;
        L_ID_CLIENTE numeric;
        L_ID_TIPOVENTA numeric;
        L_DEPOSITO numeric(10,2);
        L_SALDO numeric(10,2);
        L_CANT numeric :=0;
        L_ERROR numeric;
        
        CURSOR C_ALUMNOS IS
        SELECT DISTINCT ID_PERSONA FROM MOISES.PERSONA_NATURAL_ALUMNO A JOIN VW_SALES_MOV B ON A.ID_PERSONA = B.ID_CLIENTE
        WHERE B.ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND B.ID_ANHO = P_ID_ANHO and a.id_persona=11227;
        --SELECT ID_PERSONA FROM MOISES.PERSONA_NATURAL_ALUMNO WHERE ID_PERSONA = 20145;
        
        CURSOR C_MESES IS
        SELECT 
        A.ID_MES,
        TO_NUMBER(TO_CHAR(A.FECHA,'DD')) AS DIA 
        FROM CONTA_VOUCHER A 
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MES = P_ID_MES
        AND A.ID_TIPOVOUCHER = 5 --VOUCHER DE CAJA
        ORDER BY A.FECHA;
        
        BEGIN 
        DELETE REP_RECAUDACION WHERE ID_USER = P_ID_USER;
            OPEN C_ALUMNOS;
                FETCH C_ALUMNOS INTO L_ID_CLIENTE;
                WHILE C_ALUMNOS%FOUND LOOP
                    
                    OPEN C_MESES;
                    FETCH C_MESES INTO L_ID_MES, L_DIA;
                        WHILE C_MESES%FOUND LOOP
                            BEGIN 
                                --SALDO
                                SELECT SUM(A.TOTAL) AS TOTAL INTO L_SALDO
                                FROM VW_SALES_MOV A 
                                WHERE A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_DEPTO = P_ID_DEPTO AND A.ID_ANHO = P_ID_ANHO AND A.ID_MES <= L_ID_MES AND A.ID_CLIENTE = L_ID_CLIENTE AND A.ID_TIPOVENTA IN (1,2,3,4)
                                --AND TO_NUMBER(TO_CHAR(A.FECHA,'DD')) <= L_DIA
                                AND TO_NUMBER(TO_CHAR(A.FECHA,'YYYYMMDD')) <= P_ID_ANHO||LPAD(L_ID_MES,2,0)||LPAD(L_DIA,2,0)
                                GROUP BY A.ID_CLIENTE;

                                --DEPOSITO
                                SELECT NVL(SUM(A.IMPORTE),0) AS DEPOSITO INTO L_DEPOSITO
                                FROM CAJA_DEPOSITO A 
                                WHERE A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_DEPTO = P_ID_DEPTO AND A.ID_ANHO = P_ID_ANHO AND A.ESTADO = '1' AND A.ID_MES = L_ID_MES AND A.ID_CLIENTE = L_ID_CLIENTE
                                AND TO_NUMBER(TO_CHAR(A.FECHA,'DD')) = L_DIA
                                AND A.ID_DEPOSITO NOT IN (SELECT ID_DEPOSITO FROM CAJA_DEPOSITO_DETALLE WHERE ID_VENTA IN (SELECT ID_VENTA FROM VENTA WHERE ID_TIPOVENTA IN(5,6)) )
                                ORDER BY A.ID_MES,A.FECHA;
                                
                            EXCEPTION
                            WHEN OTHERS THEN
                                SELECT COUNT(1) INTO L_CANT FROM REP_RECAUDACION WHERE ID_ENTIDAD = P_ID_ENTIDAD  AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO 
                                AND ID_MES = L_ID_MES AND DIA = L_DIA-1 AND ID_CLIENTE = L_ID_CLIENTE;
                                IF L_CANT > 0 THEN
                                    SELECT DEUDA,DEPOSITO INTO L_SALDO,L_DEPOSITO
                                    FROM REP_RECAUDACION WHERE ID_ENTIDAD = P_ID_ENTIDAD  AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO 
                                    AND ID_MES = L_ID_MES AND DIA = L_DIA-1 AND ID_CLIENTE = L_ID_CLIENTE;
                                ELSE
                                    L_SALDO :=0;
                                    L_DEPOSITO :=0;
                                END IF;
                            END;
                            
                            BEGIN
                                IF L_SALDO > 0 THEN
                                    INSERT INTO REP_RECAUDACION(ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,DIA,ID_CLIENTE,ID_USER,DEUDA,DEPOSITO)
                                    VALUES(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,L_ID_MES,L_DIA,L_ID_CLIENTE,P_ID_USER,L_SALDO,L_DEPOSITO);
                                END IF;
                            EXCEPTION
                            WHEN OTHERS THEN
                                L_ERROR :=0;
                            END;
                            
                        FETCH C_MESES INTO L_ID_MES, L_DIA;
                        END LOOP;
                    CLOSE C_MESES; 
                    L_SALDO :=0;
                    L_DEPOSITO :=0;
                                
                FETCH C_ALUMNOS INTO L_ID_CLIENTE;
                END LOOP;
            CLOSE C_ALUMNOS;
    END pkg_sales_finances_sp_recaudacion;*/
    


CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_recaudacion (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint) AS $body$
DECLARE

        L_ID_MES bigint;
        L_DIA bigint;
        L_ID_CLIENTE bigint;
        L_ID_TIPOVENTA bigint;
        L_DEPOSITO decimal(10,2);
        L_SALDO decimal(10,2);
        L_CANT bigint :=0;
        L_ERROR bigint;
        l_fecha timestamp(0);

   
        C_ALUMNOS CURSOR FOR
        SELECT ID_PERSONA FROM TT_SALES_MOV GROUP BY ID_PERSONA;

        C_MESES CURSOR FOR
        SELECT 
        ID_MES,
        DIA 
        FROM TT_MES_DIA
        ORDER BY FECHA;

        
BEGIN 
        
          DELETE FROM TT_MES_DIA;

          INSERT INTO TT_MES_DIA(
          ID_MES,
          FECHA,
          DIA
          )
          SELECT 
          A.ID_MES,
          A.FECHA,
          (TO_CHAR(A.FECHA,'DD'))::numeric  AS DIA 
          FROM CONTA_VOUCHER A 
          WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
          AND A.ID_DEPTO = P_ID_DEPTO
          AND A.ID_ANHO = P_ID_ANHO
          AND A.ID_MES = P_ID_MES
          AND A.ID_TIPOVOUCHER = 5 --VOUCHER DE CAJA
          ORDER BY A.FECHA;

        
          delete from TT_SALES_MOV;

         insert into TT_SALES_MOV(
              ID_PERSONA,
              ID_DEPTO,
              ID_ANHO,
              ID_MES,
              ID_VENTA,
              ID_CLIENTE,
              ID_COMPROBANTE,
              ID_MONEDA,
              SERIE,
              NUMERO,
              FECHA,
              TOTAL,
              TIPO,
              ID_TIPOVENTA,
              VOUCHER,
              TIPO_DOCUMENTO,
              NUMERO_LEGAL,
              ID_ENTIDAD
        )
        SELECT
              A.ID_PERSONA,
              B.ID_DEPTO,
              B.ID_ANHO,
              B.ID_MES,
              B.ID_VENTA,
              B.ID_CLIENTE,
              B.ID_COMPROBANTE,
              B.ID_MONEDA,
              B.SERIE,
              B.NUMERO,
              B.FECHA,
              B.TOTAL,
              B.TIPO,
              B.ID_TIPOVENTA,
              B.VOUCHER,
              B.TIPO_DOCUMENTO,
              B.NUMERO_LEGAL,
              B.ID_ENTIDAD
         FROM MOISES.PERSONA_NATURAL_ALUMNO A JOIN VW_SALES_MOV B ON A.ID_PERSONA = B.ID_CLIENTE  AND B.ID_TIPOVENTA IN(1,2,3,4) 
         WHERE B.ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND B.ID_ANHO = P_ID_ANHO AND B.ID_MES <= P_ID_MES;

         delete from TT_CAJA_DEPOSITO;
        INSERT INTO TT_CAJA_DEPOSITO(
          ID_DEPOSITO,
          ID_ENTIDAD,
          ID_DEPTO,
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO,
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_DINAMICA, 
          SERIE,
          NUMERO, 
          FECHA, 
          IMPORTE, 
          ESTADO, 
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_PAGO,
          ID_TIPODEPOSITO
          )
        SELECT 
          A.ID_DEPOSITO, 
          A.ID_ENTIDAD,
          A.ID_DEPTO,
          A.ID_ANHO, 
          A.ID_MES, 
          A.ID_VOUCHER, 
          A.ID_MEDIOPAGO,
          A.ID_CLIENTE, 
          A.ID_TIPOTRANSACCION,
          A.ID_DINAMICA, 
          A.SERIE,
          A.NUMERO, 
          A.FECHA, 
          A.IMPORTE, 
          A.ESTADO, 
          A.FECHA_OPERACION,
          A.NRO_OPERACION,
          A.ID_PAGO,
          A.ID_TIPODEPOSITO
        FROM CAJA_DEPOSITO A 
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD AND A.ID_DEPTO = P_ID_DEPTO AND A.ID_ANHO = P_ID_ANHO AND A.ESTADO = '1' AND A.ID_MES = P_ID_MES 
        AND A.ID_DEPOSITO NOT IN (SELECT ID_DEPOSITO FROM CAJA_DEPOSITO_DETALLE WHERE ID_VENTA IN (SELECT ID_VENTA FROM VENTA WHERE ID_TIPOVENTA IN (5,6) )  ) 
        ORDER BY A.ID_MES,A.FECHA;

        DELETE FROM REP_RECAUDACION WHERE ID_USER = P_ID_USER;

         OPEN C_MESES;
         FETCH C_MESES INTO L_ID_MES, L_DIA;
         WHILE C_MESES%FOUND LOOP
           BEGIN
                  l_fecha:= to_date(LPAD(P_ID_MES,2,0)||'/'||LPAD(L_DIA,2,0)||'/'||P_ID_ANHO,'MM/DD/YYYY');

                                  
                 
                  
                --l_fecha:= TO_DATE(P_ID_ANHO||'-'||LPAD(L_ID_MES,2,0)||'-'||LPAD(L_DIA,2,0),'dd/mm/yyyy');
                --l_fecha:= TO_DATE(LPAD(L_ID_MES,2,0)||'/'||LPAD(L_DIA,2,0)||'/'||P_ID_ANHO, 'MM/DD/YYYY');
                --l_fecha:=to_date(P_ID_ANHO||'-'||LPAD(L_ID_MES,2,0)||'-'||LPAD(L_DIA,2,0),'dd/mm/yyyy');
                --TO_NUMBER(TO_CHAR(A.FECHA,'YYYYMMDD')) <= P_ID_ANHO||LPAD(L_ID_MES,2,0)||LPAD(L_DIA,2,0)
              
                
                insert into REP_RECAUDACION(id_entidad,id_depto,id_anho,id_mes,dia,id_cliente,id_user,deuda,deposito,saldo)
                SELECT P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,L_ID_MES,L_DIA,x.ID_CLIENTE,P_ID_USER,x.DEUDA,coalesce(y.DEPOSITO,0),x.DEUDA-coalesce(y.DEPOSITO,0) from (
                  SELECT  A.ID_CLIENTE,COALESCE(SUM(A.TOTAL),0) AS DEUDA
                  FROM TT_SALES_MOV A    
                  WHERE to_date(TO_CHAR(A.FECHA, 'MM/DD/YYYY'),'MM/DD/YYYY') <= to_date(TO_CHAR(l_fecha, 'MM/DD/YYYY'),'MM/DD/YYYY')
                  GROUP BY  A.ID_CLIENTE
                  having COALESCE(SUM(A.TOTAL),0)>0 
                )x left join(SELECT A.ID_CLIENTE, COALESCE(SUM(A.IMPORTE),0) AS DEPOSITO
                  FROM TT_CAJA_DEPOSITO A 
                  WHERE to_date(TO_CHAR(A.FECHA, 'MM/DD/YYYY'),'MM/DD/YYYY') = to_date(TO_CHAR(l_fecha, 'MM/DD/YYYY'),'MM/DD/YYYY') 
                  GROUP BY  A.ID_CLIENTE
                )y on x.id_cliente=y.id_cliente;
                
           END;
           FETCH C_MESES INTO L_ID_MES, L_DIA;
         END LOOP;
         CLOSE C_MESES;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_recaudacion (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_USER bigint) FROM PUBLIC;
