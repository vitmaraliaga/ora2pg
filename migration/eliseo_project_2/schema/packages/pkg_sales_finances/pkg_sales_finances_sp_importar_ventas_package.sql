-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_importar_ventas (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_USER bigint,P_ID_CLIENTE bigint,P_ID_COMPROBANTE text,P_ID_MONEDA bigint,P_GLOSA text,P_IMPORTE bigint,P_ID_TIPOVENTA bigint, P_ID_PARENT bigint,P_ID_COMPROBANTE_REF text,P_ID_TIPONOTA text,P_SERIE_REF text,P_NUMERO_REF text,P_FECHA_REF timestamp(0),P_ID_VENTA OUT bigint,P_ID_VDETALLE OUT bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_VENTA bigint;
        L_ID_VDETALLE bigint;
        L_ID_VOUCHER bigint;
        L_ID_ANHO bigint;
        L_ID_ANHO_ACTUAL bigint;
        L_ID_MES bigint;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL bigint;
        L_ID_CONTADOR bigint; --CONTADOR GENERAL
        L_ID_TIPOASIENTO varchar(5);
        L_ID_TIPOVOUCHER bigint := 1;
        L_SERIE varchar(5);
        L_CORRELATIVO bigint;
        L_NUMERO varchar(15);
        L_IGV decimal(10,2);
        L_TC decimal(10,3);
        L_ID_TIPOORIGEN bigint :=1;
        L_CONT bigint;

        L_ID_TIPOIGV varchar(2) :='30'; --VENTA INAFECTA
        L_DC varchar(1);
        L_ID_PARENT bigint;
        L_ID_TIPONOTA bigint;

        L_ERROR bigint;
        L_MSGERROR varchar(200);

        --DATOS ANTICIPO
        L_TOTAL_ANTICIPO decimal(10,2);
        L_IMPORTE_ANTICIPO decimal(10,2);
        L_DC_ANT varchar(1) := 'C';
        L_CODIGO varchar(2) := 'NA';
        L_TIPO varchar(1) := 'V';
        L_ID_CREDITO bigint;

BEGIN
            SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(clock_timestamp(),'YYYY') ID_ANHO_ACTUAL INTO STRICT L_ID_ANHO,L_ID_ANHO_ACTUAL
            FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
            IF L_ID_ANHO <> L_ID_ANHO_ACTUAL THEN
                L_ERROR:=1;
                L_MSGERROR:='IMPORTAR VENTA: El AÃ±o no esta Activo';
--                 GOTO SALIDA_RAPIDA;
            END IF;
            SELECT MAX(ID_MES) ID_MES, (TO_CHAR(clock_timestamp(),'MM'))::numeric  ID_MES_ACTUAL INTO STRICT L_ID_MES,L_ID_MES_ACTUAL
            FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
            IF L_ID_MES <> L_ID_MES_ACTUAL THEN
                L_ERROR:=1;
                L_MSGERROR:='IMPORTAR VENTA: El Mes no esta Activo';
--                 GOTO SALIDA_RAPIDA;
            END IF;

            SELECT COUNT(1) INTO STRICT L_CONT FROM FIN_CONTADOR_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO;
            IF L_CONT = 0 THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSGERROR:='FINALIZAR VENTA: Falta Asignar Contador - Sede por Departamento';
--                 GOTO SALIDA_RAPIDA;
            END IF;
            --CREA EL VOUCHER
            L_ID_TIPOASIENTO := pkg_sales_fc_get_tipo_asiento(P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_TIPOVOUCHER);
            SELECT ID_PERSONA INTO STRICT L_ID_CONTADOR FROM FIN_CONTADOR_DEPTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO;
            CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_CONTADOR,L_ID_VOUCHER);
            --GENERA SERIA Y NUMERO
            CALL pkg_sales_sp_obtener_serie_numero(P_ID_USER,P_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO, NULL ,L_SERIE,L_CORRELATIVO);
            SELECT LPAD(L_CORRELATIVO::text,8,'0') INTO STRICT L_NUMERO;

            SELECT FC_IGV(CURRENT_DATE ) INTO STRICT L_IGV;
            SELECT FC_TIPOCAMBIO(P_ID_MONEDA,CURRENT_DATE,'D' ) INTO STRICT L_TC;

            IF coalesce(L_TC::text, '') = '' THEN
                L_TC:=0;
            END IF;
            IF P_ID_PARENT = 0 THEN
                L_ID_PARENT := NULL;
            ELSE
                L_ID_PARENT := P_ID_PARENT;
            END IF;
            IF P_ID_TIPONOTA = 0 THEN
                L_ID_TIPONOTA := NULL;
            ELSE
                L_ID_TIPONOTA := P_ID_TIPONOTA;
            END IF;

            INSERT INTO VENTA(
                ID_PARENT,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_VOUCHER,ID_COMPROBANTE,ID_TIPONOTA,ID_IGV,ID_MONEDA,TIPOCAMBIO,ID_LEYENDA,ID_TIPOORIGEN,ID_COMPROBANTE_REF,
                SERIE,SERIE_REF,NUMERO,NUMERO_REF,FECHA,GLOSA,AGRUPADO,GRAVADA,INAFECTA,EXONERADA,GRATUITA,DESCUENTO,DESCUENTO_GLOBAL,DESCUENTO_PORCENTAJE,IMPORTE_ADESCONTAR,IGV,TOTAL,
                ESTADO,OTROS_CARGOS,ID_TIPOVENTA,FECHA_REF
            )VALUES (
                L_ID_PARENT,P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_USER,P_ID_CLIENTE,L_ID_VOUCHER,P_ID_COMPROBANTE,L_ID_TIPONOTA,L_IGV,P_ID_MONEDA,L_TC,'1000',L_ID_TIPOORIGEN,P_ID_COMPROBANTE_REF,
                L_SERIE,P_SERIE_REF,L_NUMERO,P_NUMERO_REF,clock_timestamp(),P_GLOSA,'S',0,P_IMPORTE,0,0,0,0,0,0,0,P_IMPORTE,1,0,P_ID_TIPOVENTA,P_FECHA_REF
            )RETURNING ID_VENTA INTO L_ID_VENTA;

            IF P_ID_COMPROBANTE = '07' THEN
                L_DC := 'C';
            ELSE
                L_DC := 'D';
            END IF;

            INSERT INTO VENTA_DETALLE(ID_VENTA,ID_TIPOIGV,ID_TIPOORIGEN,DETALLE,DC,CANTIDAD,PRECIO,PRECIO_BASE,PRECIO_ALM,BASE,IGV,DESCUENTO,IMPORTE,IMPORTE_ADESCONTAR,DESCUENTO_PORCENTAJE,ITEM,OTROS_CARGOS
            )VALUES (
                L_ID_VENTA,L_ID_TIPOIGV,L_ID_TIPOORIGEN,P_GLOSA,L_DC,1,P_IMPORTE,P_IMPORTE,0,P_IMPORTE,0,0,P_IMPORTE,0,0,1,0
            )  RETURNING ID_VDETALLE INTO L_ID_VDETALLE;

            --FORMA DE PAGO
            CALL pkg_sales_sp_venta_forma_pago(L_ID_VENTA,L_ID_CREDITO);
            UPDATE VENTA SET ID_CREDITO = L_ID_CREDITO WHERE ID_VENTA = L_ID_VENTA;

            IF P_ID_COMPROBANTE = '01' OR P_ID_COMPROBANTE = '03' THEN
                --SI TIENE ANTICIPO PAGA LA VENTA QUE SE ESTA GENERNADO
                SELECT SUM(IMPORTE) AS TOTAL INTO STRICT L_TOTAL_ANTICIPO
                FROM VW_SALES_ADVANCES
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                AND ID_CLIENTE = P_ID_CLIENTE;
                IF L_TOTAL_ANTICIPO > 0 THEN
                    IF L_TOTAL_ANTICIPO >= P_IMPORTE THEN
                        L_IMPORTE_ANTICIPO := P_IMPORTE;
                    ELSE
                        L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
                    END IF;
                    CALL pkg_sales_sp_crear_anticipos_clientes(P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_CLIENTE,P_ID_USER,L_ID_VENTA,L_IMPORTE_ANTICIPO,L_DC_ANT,L_CODIGO,L_ERROR,L_MSGERROR,L_TIPO);
                END IF;
            END IF;

            --GENERA VENTA ELECTRONICA
            IF P_ID_ENTIDAD = 7124 THEN
                CALL pkg_sales_sp_venta_electronica(L_ID_VENTA,P_ID_COMPROBANTE);
            ELSE
                CALL pkg_sales_sp_venta_electronica_nube(L_ID_VENTA);
            END IF;

--             <<SALIDA_RAPIDA>>
            P_ERROR := L_ERROR;
            P_MSGERROR := L_MSGERROR;

            P_ID_VENTA := L_ID_VENTA;
            P_ID_VDETALLE := L_ID_VDETALLE;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_importar_ventas (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_USER bigint,P_ID_CLIENTE bigint,P_ID_COMPROBANTE text,P_ID_MONEDA bigint,P_GLOSA text,P_IMPORTE bigint,P_ID_TIPOVENTA bigint, P_ID_PARENT bigint,P_ID_COMPROBANTE_REF text,P_ID_TIPONOTA text,P_SERIE_REF text,P_NUMERO_REF text,P_FECHA_REF timestamp(0),P_ID_VENTA OUT bigint,P_ID_VDETALLE OUT bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
