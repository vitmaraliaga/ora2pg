-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_paga_doc_con_anticipo (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_ANHO bigint;
        L_ID_ANHO_ACTUAL bigint;
        L_ID_MES bigint;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL bigint;
        L_TOTAL_ANTICIPO decimal(10,2);
        L_VENTAS  varchar(200);
        L_VENTAS_IMP varchar(300);
        L_TIPO varchar(300);
        S_VENTAS TABLASTRING;
        S_IMPORTES TABLASTRING;
        S_TIPO TABLASTRING;
        L_TOTAL decimal(10,2);

        L_ID_VENTA bigint;
        L_IMP decimal(10,2);
        L_TIPO_DOC varchar(1);

        L_DC varchar(1) :='C'; --DC PARA ANTICIPOS
        L_CODIGO varchar(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO
        L_ERROR bigint;
        L_MSGERROR varchar(200);

        
BEGIN
        SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(clock_timestamp(),'YYYY') ID_ANHO_ACTUAL INTO STRICT L_ID_ANHO,L_ID_ANHO_ACTUAL
        FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
        IF L_ID_ANHO = L_ID_ANHO_ACTUAL THEN
        --L_ID_ANHO := 2021;
        --IF 1 = 1 THEN
            SELECT MAX(ID_MES) ID_MES, (TO_CHAR(clock_timestamp(),'MM'))::numeric  ID_MES_ACTUAL INTO STRICT L_ID_MES,L_ID_MES_ACTUAL
            FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
            IF L_ID_MES = L_ID_MES_ACTUAL THEN
            --L_ID_MES := 12;
            --IF 1 = 1 THEN
                --PRIMERO VALIDO SI TENGO DINERO EN ANTICIPOS
                SELECT SUM(IMPORTE) AS TOTAL INTO STRICT L_TOTAL_ANTICIPO
                FROM VW_SALES_ADVANCES
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                AND ID_CLIENTE = P_ID_CLIENTE;

                IF L_TOTAL_ANTICIPO > 0 THEN
                --SI HAY PLATA EN ANNTICIPO ENTONCES OBTENGO LAS VENTAS POR PAGA
                CALL pkg_payonline_sp_ventas_depositar(P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,P_ID_CLIENTE,L_TOTAL_ANTICIPO,L_VENTAS,L_VENTAS_IMP,L_TIPO);
                    IF COALESCE(LENGTH(L_VENTAS),0) > 0 THEN
                        SELECT FC_SPLIT(L_VENTAS,'|') INTO STRICT S_VENTAS;
                        SELECT FC_SPLIT(L_VENTAS_IMP,'|') INTO STRICT S_IMPORTES;
                        SELECT FC_SPLIT(L_TIPO,'|') INTO STRICT S_TIPO;

                        FOR I IN S_VENTAS.FIRST .. S_VENTAS.LAST LOOP
                            SELECT CAST(S_VENTAS(I) AS bigint) INTO STRICT L_ID_VENTA;
                            SELECT CAST(S_IMPORTES(I) AS bigint) INTO STRICT L_IMP;

                            --L_IMPORTE:=0;
                              
                            IF S_TIPO(I) = 'V' THEN
                                L_TIPO_DOC := 'V';
                                SELECT TOTAL INTO STRICT L_TOTAL FROM VENTA WHERE ID_VENTA = L_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                                --SELECT COALESCE(SUM(IMPORTE),0) INTO L_IMPORTE FROM CAJA_DEPOSITO_DETALLE WHERE ID_VENTA=L_ID_VENTA;
                            ELSE
                                IF S_TIPO(I) = 'S' THEN
                                    L_TIPO_DOC := 'S';
                                    SELECT TOTAL INTO STRICT L_TOTAL FROM VENTA_SALDO WHERE ID_SALDO = L_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                                    --SELECT COALESCE(SUM(IMPORTE),0) INTO L_IMPORTE FROM CAJA_DEPOSITO_DETALLE WHERE ID_SALDO=L_ID_VENTA;
                                ELSE
                                    L_TIPO_DOC := 'T';
                                    SELECT IMPORTE INTO STRICT L_TOTAL FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = L_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                                    --SELECT COALESCE(SUM(IMPORTE),0) INTO L_IMPORTE FROM CAJA_DEPOSITO_DETALLE WHERE ID_TRANSFERENCIA=L_ID_VENTA;
                                END IF;
                            END IF;
                            --L_IMPORTE:=L_IMPORTE + L_IMP;
                                
                            /*IF L_IMPORTE > L_TOTAL THEN
                                L_ERROR:=1; --no existe voucher
                                L_MSGERROR:='Depósito Detalle: Importe pago mayor a total venta';
                            END IF;*/
                             
                              --INSERTA EL PAGO CON UNA TRANSFERENCIA
                            /*SELECT TOTAL INTO L_V_TOTAL FROM VENTA
                            WHERE ID_VENTA = L_ID_VENTA;

                            IF L_TOTAL_ANTICIPO >= L_V_TOTAL THEN
                                L_IMPORTE_ANTICIPO := L_V_TOTAL;
                            ELSE
                                L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
                            END IF;*/
                            CALL pkg_sales_sp_crear_anticipos_clientes(P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,L_ID_VENTA,L_IMP,L_DC,L_CODIGO,L_ERROR,L_MSGERROR,L_TIPO_DOC);
                            INSERT INTO TEST_ANTICIPO_AUTO(ID_CLIENTE,ID_VENTA,IMPORTE,TIPO,MSN,FECHA,ID_ENTIDAD,ID_DEPTO)VALUES (P_ID_CLIENTE,L_ID_VENTA,L_IMP,L_TIPO_DOC,L_MSGERROR,clock_timestamp(),P_ID_ENTIDAD,P_ID_DEPTO);
                        END LOOP;
                    END IF;
                END IF;
            ELSE
                L_ERROR := 1;
                L_MSGERROR := 'ERROR: El mes no esta Activo';
            END IF;
        ELSE
            L_ERROR := 1;
            L_MSGERROR := 'ERROR: El Año no esta Activo';
        END IF;
        P_ERROR:=L_ERROR;
        P_MSGERROR:= L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_paga_doc_con_anticipo (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
