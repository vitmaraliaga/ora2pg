-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_finances,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_finances_sp_estado_resultado (P_ID_ENTIDAD bigint,P_ID_ANHO bigint,P_ID_MES bigint,P_NIVEL bigint) AS $body$
DECLARE

        L_ID_NIVEL_PARENT bigint;
        L_ID_NIVEL bigint;
        L_LEVEL bigint;
        L_ID_CUENTA bigint;
        L_ID_CUENTA_PADRE bigint;
        L_IMPORTE decimal(10,2);

        L_NOMBRE_NIVEL_PARENT varchar(100);
        L_NOMBRE_NIVEL varchar(100);
        L_NOMBRE_CUENTA_PARENT varchar(100);
        L_NOMBRE_CUENTA varchar(100);
        L_CODIGO varchar(100);
        L_GRUPO_CUENTA varchar(100);
        L_CANT bigint :=0;
        L_ERROR bigint;WITH RECURSIVE cte AS (


        C_CUENTAS CURSOR FOR
        SELECT ID_CUENTA,NOMBRE,CODIGO,GRUPO_CUENTA,1 as level,ARRAY[ row_number() OVER (ORDER BY  ID_PARENT ) ] as hierarchy
        FROM ELISEO.CONTA_CUENTA A WHERE ID_CUENTA IN (89,90,91,92,93)
  UNION ALL

        
        C_CUENTAS CURSOR FOR
        SELECT ID_CUENTA,NOMBRE,CODIGO,GRUPO_CUENTA,(c.level+1), array_append(c.hierarchy, row_number() OVER (ORDER BY  ID_PARENT ))  as hierarchy
        FROM ELISEO.CONTA_CUENTA A JOIN cte c ON (c.ID_CUENTA = A.ID_PARENT)

) SELECT * FROM cte ORDER BY hierarchy;

        
BEGIN 
            DELETE FROM EF_ESTADO_RESULTADO WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = P_ID_ANHO AND ID_MES = P_ID_MES AND ID_NIVEL IN (SELECT ID_NIVEL FROM CONTA_NIVEL WHERE ID_TIPOREPORTE = 5 AND NIVEL = P_NIVEL);

            SELECT COUNT(1) INTO STRICT L_CANT 
            FROM CONTA_NIVEL A JOIN CONTA_NIVEL B ON A.ID_PARENT = B.ID_NIVEL
            WHERE A.NIVEL = P_NIVEL
            AND A.ID_TIPOREPORTE = 5;

            IF L_CANT > 0 THEN 
                SELECT B.ID_NIVEL,B.NOMBRE,A.ID_NIVEL,A.NOMBRE INTO STRICT L_ID_NIVEL_PARENT,L_NOMBRE_NIVEL_PARENT,L_ID_NIVEL,L_NOMBRE_NIVEL
                FROM CONTA_NIVEL A JOIN CONTA_NIVEL B ON A.ID_PARENT = B.ID_NIVEL
                WHERE A.NIVEL = P_NIVEL
                AND A.ID_TIPOREPORTE = 5;
            END IF;

            OPEN C_CUENTAS;
            FETCH C_CUENTAS INTO L_ID_CUENTA,L_NOMBRE_CUENTA,L_CODIGO,L_GRUPO_CUENTA,L_LEVEL;
            WHILE C_CUENTAS%FOUND LOOP
                L_IMPORTE := 0;

                    BEGIN 
                        IF L_LEVEL = 2 AND (L_GRUPO_CUENTA IS NOT NULL AND L_GRUPO_CUENTA::text <> '') THEN
                            
                            SELECT B.ID_CUENTA,B.NOMBRE INTO STRICT  L_ID_CUENTA_PADRE,L_NOMBRE_CUENTA_PARENT
                            FROM CONTA_CUENTA A JOIN CONTA_CUENTA B ON A.ID_PARENT = B.ID_CUENTA
                            WHERE A.ID_CUENTA = L_ID_CUENTA;

                            IF L_CODIGO = 'VVLL' THEN
                                SELECT SUM(COS_VALOR) INTO STRICT L_IMPORTE
                                FROM VW_CONTA_DIARIO  WHERE ID_ENTIDAD = P_ID_ENTIDAD  AND ID_ANHO = P_ID_ANHO  AND ID_MES <= P_ID_MES 
                                AND SUBSTR(ID_CUENTAAASI,1,3) IN (315,316) 
                                AND ID_DEPTO LIKE P_NIVEL||'%';
                            ELSIF L_CODIGO = 'RREV' THEN
                                SELECT SUM(IMPORTE) INTO STRICT L_IMPORTE
                                FROM (
                                        SELECT SUM(COS_VALOR) as IMPORTE 
                                        FROM VW_CONTA_DIARIO  WHERE ID_ENTIDAD = P_ID_ENTIDAD  AND ID_ANHO = P_ID_ANHO  AND ID_MES <= P_ID_MES 
                                        AND SUBSTR(ID_CUENTAAASI,1,3) IN (315,316)
                                        AND ID_DEPTO LIKE P_NIVEL||'%' 
                                        
UNION ALL

                                        SELECT SUM(COS_VALOR) as L_IMPORTE
                                        FROM VW_CONTA_DIARIO  WHERE ID_ENTIDAD = P_ID_ENTIDAD  AND ID_ANHO = P_ID_ANHO  AND ID_MES <= P_ID_MES 
                                        AND SUBSTR(ID_CUENTAAASI,1,3) = 317
                                        AND ID_DEPTO LIKE P_NIVEL||'%' 
                                ) alias6;
                            ELSE
                                SELECT SUM(COS_VALOR) INTO STRICT L_IMPORTE
                                FROM VW_CONTA_DIARIO  WHERE ID_ENTIDAD = P_ID_ENTIDAD  AND ID_ANHO = P_ID_ANHO  AND ID_MES <= P_ID_MES
                                AND SUBSTR(ID_CUENTAAASI,1,3) = L_GRUPO_CUENTA 
                                AND ID_DEPTO LIKE P_NIVEL||'%';
                            END IF;

                            IF L_IMPORTE <> 0 THEN
                                INSERT INTO EF_ESTADO_RESULTADO(ID_ENTIDAD,ID_ANHO,ID_MES,ID_NIVEL_PARENT,ID_NIVEL,ID_CUENTA_PARENT,ID_CUENTA,NOMBRE_NIVEL_PARENT,NOMBRE_NIVEL,NOMBRE_CUENTA_PARENT,NOMBRE_CUENTA,IMPORTE )
                                VALUES (P_ID_ENTIDAD,P_ID_ANHO,P_ID_MES,L_ID_NIVEL_PARENT,L_ID_NIVEL,L_ID_CUENTA_PADRE,L_ID_CUENTA,L_NOMBRE_NIVEL_PARENT,L_NOMBRE_NIVEL,L_NOMBRE_CUENTA_PARENT,L_NOMBRE_CUENTA,L_IMPORTE);
                            END IF;

                        END IF;

                    EXCEPTION WHEN OTHERS THEN
                    L_ERROR :=0;
                    END;

                FETCH C_CUENTAS INTO L_ID_CUENTA,L_NOMBRE_CUENTA,L_CODIGO,L_GRUPO_CUENTA,L_LEVEL;
                END LOOP;
            CLOSE C_CUENTAS;
                    
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_finances_sp_estado_resultado (P_ID_ENTIDAD bigint,P_ID_ANHO bigint,P_ID_MES bigint,P_NIVEL bigint) FROM PUBLIC;
