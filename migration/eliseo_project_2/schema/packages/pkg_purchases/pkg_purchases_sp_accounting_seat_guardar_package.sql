-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_accounting_seat_guardar ( P_ID_FONDO bigint, P_ID_DEPTO text, P_ID_CUENTAAASI text, P_ID_RESTRICCION text, P_ID_CTACTE text, P_IMPORTE bigint, P_IS_DC text, P_DESCRIPCION text, P_ID_COMPRA bigint, P_ERROR OUT bigint, P_ID_CASIENTO OUT bigint ) AS $body$
DECLARE

            L_EDITABLE varchar(1) := 'S';
            L_ID_PARENT bigint := NULL;
            L_ID_TIPOREGISTRO varchar(1) := 'D';
            L_DC varchar(1) := NULL;
            L_DC_HIJO varchar(1) := NULL;
            L_DC_HIJO_CONTRA varchar(1) := NULL;

            L_ID_COMPROBANTE varchar(2) := NULL;
            L_ID_COMPROBANTE_NC varchar(25) := '';
            L_ID_MONEDA bigint := 0;
            L_TIPOCAMBIO bigint := 0;
            L_SERIE varchar(20) := '';
            L_NUMERO varchar(50) := '';
            L_CORRELATIVO bigint := 0;
            L_ID_ENTIDAD_COMPRA bigint := 0;
            L_ID_DEPTO_COMPRA varchar(30) := '';

            L_IMPORTE bigint := 0;
            L_IMPORTE_ME bigint := 0;

            -- VARIABLES DE AYUDA
            L_TIENE_HIJO varchar(1) := 'N';
            P_ID_CUENTAAASI_HIJO_DEDITO bigint;
            P_ID_CUENTAAASI_HIJO_CREDITO bigint;

            P_ID_FONDO_HIJO_DEBITO bigint;

            L_ID_DINAMICA bigint;

            
            L_ID_ASIENTO bigint;
            L_UNICO_ASIENTO varchar(5) := '';
            L_ID_DEPTO_ASIENTO varchar(15) := '';

            l_id_asientod bigint;
            l_id_tipopland bigint;
            l_id_restricciond varchar(50);
            l_id_cuentaaasid varchar(10);
            l_dcd varchar(1);
            l_id_indicadord  varchar(35);
            l_unicod varchar(1);
            l_porcentajed decimal(10,2);
            l_unicoctated varchar(1);
            l_descripciond varchar(255);
            l_agrupad varchar(1);
            l_fondod varchar(10);
            l_deptod varchar(10);
            l_cuenta_cted varchar(50);
            l_detalle_sub_dep_in varchar(100);

            l_cont bigint;
            --l_porcentajed numeric(10,2);
            casi CURSOR FOR		
            SELECT a.ID_ASIENTO, a.UNICO
            --,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
            --a.NOMBRE,a.AGRUPA, a.ID_FONDO
            FROM CONTA_DINAMICA_ASIENTO a
            WHERE a.ID_DINAMICA =L_ID_DINAMICA
            AND COALESCE(a.ID_PARENT,0)=0  
            ORDER BY a.NRO_ASIENTO,a.DC desc;

            
            casides CURSOR FOR		
            SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, ID_FONDO 
            FROM CONTA_DINAMICA_ASIENTO
            WHERE ID_PARENT=L_ID_ASIENTO
            AND ID_DINAMICA=L_ID_DINAMICA
            ORDER BY NRO_ASIENTO,DC desc;

BEGIN
        
        -- SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO P_ID_CASIENTO FROM COMPRA_ASIENTO;
        SELECT ID_COMPROBANTE, ID_MONEDA, TIPOCAMBIO, SERIE, NUMERO, CORRELATIVO
        , ID_ENTIDAD 
        ,ID_DEPTO, ID_DINAMICA
        INTO STRICT L_ID_COMPROBANTE, L_ID_MONEDA, L_TIPOCAMBIO, L_SERIE, L_NUMERO, L_CORRELATIVO
        , L_ID_ENTIDAD_COMPRA
        ,L_ID_DEPTO_COMPRA, L_ID_DINAMICA
        FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA;

        SELECT NOMBRE_CORTO INTO STRICT L_ID_COMPROBANTE_NC FROM TIPO_COMPROBANTE WHERE ID_COMPROBANTE=L_ID_COMPROBANTE;

        -- Tipo cambio.
        IF L_ID_MONEDA = 7 THEN  -- Soles
            L_IMPORTE_ME := 0;
            L_IMPORTE := P_IMPORTE;
        ELSE  -- Moneda extranjera
            -- L_IMPORTE_ME := P_IMPORTE;
            -- L_IMPORTE := (P_IMPORTE*L_TIPOCAMBIO);
            L_IMPORTE_ME := 0;
            L_IMPORTE := P_IMPORTE;
        END IF;

        
        IF P_IS_DC = 'C' THEN
            L_IMPORTE := (L_IMPORTE)*(-1);
        ELSE
            L_IMPORTE := L_IMPORTE;
        END IF;

        
        IF L_ID_COMPROBANTE = '07' OR L_ID_COMPROBANTE = '87' THEN -- Nota de crédito
            L_DC := 'C';
            L_DC_HIJO := 'C';
            L_DC_HIJO_CONTRA := 'D';
        ELSE
            L_DC := 'D';
            L_DC_HIJO := 'D';
            L_DC_HIJO_CONTRA := 'C';
        END IF;

        -- GUARAR ASIENTO PADRE
        INSERT INTO COMPRA_ASIENTO(
            --ID_CASIENTO, 
            ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, 
            ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, FECHA_ACTUALIZACION, AGRUPA)
        VALUES (
            --P_ID_CASIENTO, 
            P_ID_COMPRA, P_ID_CUENTAAASI, P_ID_RESTRICCION, P_ID_CTACTE, P_ID_FONDO,
            P_ID_DEPTO, L_IMPORTE, L_IMPORTE_ME, 
            SUBSTR(L_CORRELATIVO || ' | ' || L_ID_COMPROBANTE_NC || '. ' || L_SERIE || '-' || L_NUMERO || ' | ' ||  P_DESCRIPCION,0,50),
            L_EDITABLE, null, L_ID_TIPOREGISTRO, L_DC, statement_timestamp(), 'N')
           	RETURNING ID_CASIENTO INTO P_ID_CASIENTO;

         L_ID_PARENT := P_ID_CASIENTO;
        OPEN casi;
            FETCH casi INTO L_ID_ASIENTO, L_UNICO_ASIENTO;
            WHILE casi%FOUND LOOP

                L_ID_DEPTO_ASIENTO:=NULL;
                IF L_UNICO_ASIENTO='U' THEN  -- Único
                    SELECT MAX(ID_DEPTO) INTO STRICT L_ID_DEPTO_ASIENTO FROM CONTA_DINAMICA_DEPTO WHERE ID_ASIENTO=L_ID_ASIENTO;
                ELSIF L_UNICO_ASIENTO='S' THEN  -- Si es sesión
                    L_ID_DEPTO_ASIENTO := L_ID_DEPTO_COMPRA;
                END IF;

                IF P_ID_DEPTO <> L_ID_DEPTO_ASIENTO THEN
                
                    OPEN casides;
                        FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentajed,l_descripciond,l_agrupad, l_fondod;
                        WHILE casides%FOUND LOOP

                             select case when l_id_indicadord='IMPORTE' then 
                                -- (l_gastos_otros_importe)*(l_porcentaje)
                                (L_IMPORTE)*(l_porcentajed)
                              else
                              0
                              end into STRICT L_IMPORTE
;
                            
                            l_deptod:=null;
                            l_cuenta_cted:=null;

                            if l_unicod='N' then
                                l_deptod := P_ID_DEPTO;
                            ELSIF l_unicod='S' THEN  -- Si es sesión
                                l_deptod := L_ID_DEPTO_COMPRA;
                            elsif l_unicod='U' then
                                select  count(*) into STRICT l_cont from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD_COMPRA and id_asiento=l_id_asientod;
                                if l_cont=1 then
                                    select ID_DEPTO into STRICT l_deptod from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD_COMPRA and id_asiento=l_id_asientod;
                                end if;
                            end if;

                            
                            if l_unicoctated='N' then
                                l_cuenta_cted := P_ID_DEPTO;
                            ELSIF l_unicoctated='S' THEN  -- Si es sesión
                                l_cuenta_cted := L_ID_DEPTO_COMPRA;
                            elsif l_unicoctated='U' then
                                select  count(*) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD_COMPRA and id_asiento=l_id_asientod;
                                if l_cont=1 then
                                    select ID_CTACTE into STRICT l_cuenta_cted from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD_COMPRA and id_asiento=l_id_asientod;
                                end if;
                            end if;
                            l_detalle_sub_dep_in:='Por inter-departamento a cobrar.';
                            if l_dcd='C' then
                                L_IMPORTE:=L_IMPORTE*(-1);
                                l_detalle_sub_dep_in:='Por inter-departamento a pagar.';
                            end if;

                            if L_IMPORTE<>0 then
                            
                                -- SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO P_ID_CASIENTO FROM COMPRA_ASIENTO;
                                
                                INSERT INTO COMPRA_ASIENTO(
                                    --ID_CASIENTO, 
                                    ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, 
                                    ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, FECHA_ACTUALIZACION, AGRUPA)
                                VALUES (
                                    --P_ID_CASIENTO, 
                                    P_ID_COMPRA, l_id_cuentaaasid, l_id_restricciond, l_cuenta_cted, l_fondod,
                                    l_deptod, L_IMPORTE, L_IMPORTE_ME, 
                                    l_detalle_sub_dep_in,
                                    -- SUBSTR(L_CORRELATIVO || ' | ' || L_ID_COMPROBANTE_NC || '. ' || L_SERIE || '-' || L_NUMERO || ' | ' ||  P_DESCRIPCION,0,50),
                                    'N', L_ID_PARENT, L_ID_TIPOREGISTRO, l_dcd, statement_timestamp(), 'N');

                            end if;

                            FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentajed,l_descripciond,l_agrupad, l_fondod;
                        END LOOP;
                        CLOSE casides;

                END IF;
            FETCH casi INTO L_ID_ASIENTO, L_UNICO_ASIENTO;
        END LOOP;
        CLOSE casi;

        
         -- GUARDAR A LOS HIJOS SI SON ALGUNO DE LOS SIGUIENTE INTERFONDOS
        IF P_ID_FONDO = '69' THEN   -- Fondo de publicaciones
            L_TIENE_HIJO := 'S';
            P_ID_CUENTAAASI_HIJO_DEDITO := '2171045';
        ELSIF P_ID_FONDO = '68' THEN  -- Fondo Comunicación
            L_TIENE_HIJO := 'S';
            P_ID_CUENTAAASI_HIJO_DEDITO := '2171060';
        ELSIF P_ID_FONDO = '66' THEN  -- Fondo Educación
            L_TIENE_HIJO := 'S';
            P_ID_CUENTAAASI_HIJO_DEDITO := '2171020';
        ELSIF P_ID_FONDO = '25' THEN  -- Inversión em Inmovilizado
            L_TIENE_HIJO := 'S';
            P_ID_CUENTAAASI_HIJO_DEDITO := '2171005';
        ELSIF P_ID_FONDO = '93' THEN  -- Fondo Asistencial
            L_TIENE_HIJO := 'S';
            P_ID_CUENTAAASI_HIJO_DEDITO := '2171030';
        ELSIF P_ID_FONDO = '81' THEN  -- Fondo Donaciones Restringidas
            L_TIENE_HIJO := 'S';
            P_ID_CUENTAAASI_HIJO_DEDITO := '2171081';
        ELSE
            L_TIENE_HIJO := 'N';
        END IF;


        IF L_TIENE_HIJO = 'S' THEN
            L_EDITABLE := 'N';
            P_ID_CUENTAAASI_HIJO_CREDITO := 1171001; --Credito Deto 0000
            P_ID_FONDO_HIJO_DEBITO := 10;

            
            -- SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO P_ID_CASIENTO FROM COMPRA_ASIENTO;
            -- AGREGAR ASIENTO -- DEBITO
            INSERT INTO COMPRA_ASIENTO(
                --ID_CASIENTO, 
                ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, 
                ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, FECHA_ACTUALIZACION, AGRUPA)
            VALUES (
                -- P_ID_CASIENTO, 
                P_ID_COMPRA, P_ID_CUENTAAASI_HIJO_DEDITO, '0A', '', P_ID_FONDO_HIJO_DEBITO,
                '0000', L_IMPORTE, L_IMPORTE_ME, 
                SUBSTR(L_CORRELATIVO || ' | ' || L_ID_COMPROBANTE_NC || '. ' || L_SERIE || '-' || L_NUMERO || ' | ' ||  P_DESCRIPCION,0,50),
                L_EDITABLE, L_ID_PARENT, 'B', L_DC_HIJO, statement_timestamp(), 'N');

            -- SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO P_ID_CASIENTO FROM COMPRA_ASIENTO;  
            -- AGREGAR ASIENTO CONTRA PARTIDA -- CREDITO
            INSERT INTO COMPRA_ASIENTO(
                --ID_CASIENTO, 
                ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, 
                ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, FECHA_ACTUALIZACION, AGRUPA)
            VALUES (
                --P_ID_CASIENTO, 
                P_ID_COMPRA, P_ID_CUENTAAASI_HIJO_CREDITO, '0A', '', P_ID_FONDO,
                '0000', (L_IMPORTE*-1), (L_IMPORTE_ME*-1), 
                SUBSTR(L_CORRELATIVO || ' | ' || L_ID_COMPROBANTE_NC || '. ' || L_SERIE || '-' || L_NUMERO || ' | ' ||  P_DESCRIPCION, 0,50),
                L_EDITABLE, L_ID_PARENT, 'B', L_DC_HIJO_CONTRA, statement_timestamp(), 'N');
            
            
        END IF;
        -- Actualizamos la fecha para que nos lo ordene. en el front
        UPDATE COMPRA_ASIENTO SET FECHA_ACTUALIZACION = statement_timestamp()
        WHERE ID_CASIENTO = L_ID_PARENT;

        P_ID_CASIENTO := L_ID_PARENT;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_accounting_seat_guardar ( P_ID_FONDO bigint, P_ID_DEPTO text, P_ID_CUENTAAASI text, P_ID_RESTRICCION text, P_ID_CTACTE text, P_IMPORTE bigint, P_IS_DC text, P_DESCRIPCION text, P_ID_COMPRA bigint, P_ERROR OUT bigint, P_ID_CASIENTO OUT bigint ) FROM PUBLIC;
