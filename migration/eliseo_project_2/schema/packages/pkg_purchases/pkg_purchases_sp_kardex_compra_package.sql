-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_kardex_compra (P_ID_COMPRA bigint) AS $body$
DECLARE

        L_ID_ANHO bigint;
        L_ID_ALMACEN bigint;
        L_ID_ARTICULO bigint;
        L_ID_COMPROBANTE varchar(2);
        L_CANTIDAD bigint;
        L_COSTO bigint;
        L_IMPORTE bigint;
        L_ID_TIPOORIGEN bigint :=3; --COMPRAS
        L_TIPO varchar(1);
        L_ID_DETALLE bigint;

        articulos CURSOR FOR	
        SELECT ID_DETALLE,ID_ALMACEN,ID_ARTICULO,CANTIDAD,
        --(CASE WHEN NVL(COSTO_VINCULADO,0) > 0 THEN ROUND((BASE+NVL(COSTO_VINCULADO,0))/CANTIDAD,2) ELSE ROUND(BASE/CANTIDAD,2) END) AS COSTO,
        --(CASE WHEN NVL(COSTO_VINCULADO,0) > 0 THEN BASE+NVL(COSTO_VINCULADO,0) ELSE BASE END) AS TOTAL
        (CASE WHEN coalesce(COSTO_VINCULADO,0) > 0 THEN ROUND((BASE+coalesce(COSTO_VINCULADO,0))/CANTIDAD,2) ELSE round((CASE WHEN pkg_purchases_fc_tipo_almacen(ID_ALMACEN)=6 THEN IMPORTE  ELSE IMPORTE-IGV END /CANTIDAD)::numeric,2) END) AS COSTO,
        (CASE WHEN coalesce(COSTO_VINCULADO,0) > 0 THEN BASE+coalesce(COSTO_VINCULADO,0) ELSE CASE WHEN pkg_purchases_fc_tipo_almacen(ID_ALMACEN)=6 THEN IMPORTE  ELSE IMPORTE-IGV END  END) AS TOTAL
        FROM COMPRA_DETALLE
        WHERE ID_COMPRA = P_ID_COMPRA
        AND coalesce(ES_COSTO_VINCULADO::text, '') = '' 
        ORDER BY ID_ARTICULO;
        	

BEGIN   
        SELECT ID_ANHO,ID_COMPROBANTE INTO STRICT L_ID_ANHO,L_ID_COMPROBANTE
        FROM COMPRA
        WHERE ID_COMPRA = P_ID_COMPRA;

        IF L_ID_COMPROBANTE = '07' OR L_ID_COMPROBANTE='87' THEN
            L_TIPO := 'S';
        ELSE
            L_TIPO := 'I';
        END IF;

        OPEN articulos;
          FETCH articulos INTO L_ID_DETALLE,L_ID_ALMACEN,L_ID_ARTICULO,L_CANTIDAD,L_COSTO,L_IMPORTE;
            WHILE articulos%FOUND LOOP
                CALL pkg_inventories_sp_add_kardex(L_ID_ANHO,L_ID_ALMACEN,L_ID_ARTICULO,L_ID_TIPOORIGEN,L_ID_DETALLE,L_CANTIDAD,L_COSTO,L_IMPORTE,L_TIPO);
                FETCH articulos INTO L_ID_DETALLE,L_ID_ALMACEN,L_ID_ARTICULO,L_CANTIDAD,L_COSTO,L_IMPORTE;
            END LOOP;
        CLOSE articulos;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_kardex_compra (P_ID_COMPRA bigint) FROM PUBLIC;
