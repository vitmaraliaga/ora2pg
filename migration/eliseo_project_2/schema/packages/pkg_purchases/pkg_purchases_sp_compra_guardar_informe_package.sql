-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compra_guardar_informe ( P_ID_PROVEEDOR bigint, P_ID_COMPROBANTE text, P_SERIE text, P_NUMERO text, P_FECHA_DOC timestamp(0), P_ID_DINAMICA bigint, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_IMPORTE bigint, P_BASE_INAFECTA bigint, P_TAXS bigint, P_OTROS bigint, P_TIPOCAMBIO bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_PERSONA bigint, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_INFORME bigint, P_ERROR OUT bigint, P_ID_COMPRA INOUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

    	L_ES_CREDITO varchar(2) :='N';
    	L_ES_ELECTRONICA varchar(2) :='N';
    	L_ES_TRANSPORTE_CARGA varchar(2) :='N';
    	L_ID_PARENT bigint;
    	L_FECHA_VENCIMIENTO timestamp(0);
    	-- L_TAXS numeric := 0;
    	--L_OOTROS numeric := 0;
    	L_ID_VOUCHER bigint := NULL;
    	L_TIPO varchar(10) := 'NG';
    	
        L_FECHA_ALMACEN timestamp(0);

        L_ES_RET_DET varchar(1) := NULL;

        -- VARIABLES DE CALCULO.
        L_BASE decimal(10,2) := 0;
        L_IGV decimal(10,2) := 0;
        L_OUT_INAFECTA decimal(10,2) := 0;
        L_TOTAL decimal(10,2) := 0;
        L_IMPORTE_ME decimal(10,2) := 0;
        L_GET_IGV boolean := TRUE;

        
        -- VARIABLES DE DESTINO
        L_BASE_GRAVADA decimal(10,2);
        L_IGV_GRAVADO decimal(10,2);
        L_BASE_MIXTA decimal(10,2);
        L_IGV_MIXTO decimal(10,2);
        L_BASE_NOGRAVADA decimal(10,2);
        L_IGV_NOGRAVADO decimal(10,2);

        L_BASE_SINCREDITO decimal(10,2); -- SOLO PARA NO BOLETAS DE VENTAS
        --L_BASE_INAFECTA numeric(10,2); -- SOLO PARA BOLETAS DE VENTAS
        L_OTROS decimal(10,2);
        L_TIENE_KARDEX varchar(1) := NULL;
        L_PERCENT_IGV bigint := 0.18;
        L_ID_IGV bigint:=18;

        L_VOUCHER_MES varchar(10);
        L_DOC_MES varchar(10);

        -- RETURN DATOS
        L_MSGERROR varchar(300):= '';
        L_ERROR bigint := 0;
        L_ID_COMPRA bigint := 0;
        L_CORRELATIVO bigint := 0;

BEGIN
	        
	        IF coalesce(P_ID_COMPRA::text, '') = '' OR P_ID_COMPRA=0 THEN 
	        	L_ID_COMPRA := 0;
	        ELSE
	        	L_ID_COMPRA := P_ID_COMPRA;
	        END IF;
	
	        IF P_ID_COMPROBANTE='02' then  -- RECIBO POR HONORARIO 
                L_ERROR := 1;
                L_MSGERROR := 'Alto! Tipo de documento no aceptado.';
--                 GOTO salida_rapida;
            END IF;

            IF P_ID_ENTIDAD = 7115 THEN  -- Nuevo Tiempo
                L_TIPO := 'G'; -- Adquisiciones grabadas destinadas a operaciones grabadas
            END IF;
            L_OTROS := P_OTROS;
           	-- Validar fecha
            -- SELECT TO_CHAR(FECHA, 'YYYYMM') INTO L_VOUCHER_MES FROM CONTA_VOUCHER 
	       	-- WHERE ID_VOUCHER = P_ID_VOUCHER;
	       
	       
	        -- SELECT TO_CHAR(COALESCE(P_FECHA_DOC, sysdate), 'YYYYMM') INTO L_DOC_MES FROM DUAL;
	       	
	       /* 
	       IF L_DOC_MES > L_VOUCHER_MES then
	            L_ERROR := 1;
	            L_MSGERROR := 'Alto! No puede registrar un documento de un mes mayor a la del voucher.';
-- 	            GOTO salida_rapida;
	        END IF;
	       */
                   
	        -- IF P_TIPO = 'ANG' THEN --Adquisiciones no gravadas
            --     L_GET_IGV := FALSE;
            -- ELSIF P_TIPO = 'NR' THEN --Nuevo Rus
            --     L_GET_IGV := FALSE;
            -- ELSE 
            --     L_GET_IGV := TRUE;
            -- END IF;
           
            -- IF P_ES_RET_AVANZADA = 1 THEN
            --     L_ES_RET_DET := 'R';
            -- ELSE 
            --     L_ES_RET_DET := P_ES_RET_DET;
            -- END IF;
	        CALL pkg_purchases_sp_compra_calcular(
            -- IN
            P_ID_COMPROBANTE, L_GET_IGV, P_TIPOCAMBIO, P_ID_MONEDA, P_IMPORTE, P_TAXS, P_BASE_INAFECTA, P_OTROS, L_PERCENT_IGV,
            -- OUT
            L_BASE, L_IGV, L_OUT_INAFECTA, L_TOTAL, L_IMPORTE_ME);

            CALL pkg_purchases_sp_compra_destino_operacion(
            -- IN
            P_ID_COMPROBANTE, L_TIPO, L_BASE, L_IGV, L_OUT_INAFECTA,
            -- OUT
            L_BASE_GRAVADA, L_IGV_GRAVADO, L_BASE_MIXTA, L_IGV_MIXTO,
            L_BASE_NOGRAVADA, L_IGV_NOGRAVADO, L_BASE_SINCREDITO
            --, L_BASE_INAFECTA
            , L_OTROS);

           
        	CALL pkg_purchases_sp_compra_guardar_actualizar(
	        	L_ES_CREDITO,
	        	P_ID_PROVEEDOR,
	        	P_ID_COMPROBANTE,
	        	L_ES_ELECTRONICA,
	        	L_ES_TRANSPORTE_CARGA,
        		L_ID_PARENT,
        		P_SERIE,
        		P_NUMERO,
        		P_FECHA_DOC,
        		L_FECHA_VENCIMIENTO,
        		P_ID_DINAMICA,
        		P_ID_TIPOTRANSACCION,
        		P_ID_MONEDA,
		        P_TAXS,
		        -- P_BASE_INAFECTA,
		        
		        L_ES_RET_DET,
		        P_TIPOCAMBIO,
		        L_TOTAL,
		        L_IMPORTE_ME,
		        L_BASE_GRAVADA,
		        L_IGV_GRAVADO,
		        L_BASE_MIXTA,
		        L_IGV_MIXTO,
		        L_BASE_NOGRAVADA,
		        L_IGV_NOGRAVADO,
		        L_BASE_SINCREDITO,
		        --L_BASE_INAFECTA,
		        L_OTROS,
		        L_FECHA_ALMACEN,
		        L_TIENE_KARDEX,
		        
		        L_ID_VOUCHER,
		        P_ID_ENTIDAD,
		        P_ID_DEPTO,
		        P_ID_PERSONA,
		        P_ID_ANHO,
		        P_ID_MES,
		        L_ID_IGV,
		        
		        L_ERROR,
		        L_ID_COMPRA,
		        L_MSGERROR
    		);
    	
	    	IF L_ERROR = 1 THEN
-- 	    		GOTO salida_rapida;
	    	END IF;
	
	    	UPDATE COMPRA 
	    	SET ID_INFORME = P_ID_INFORME
	    	-- , ES_APROBADO = '0'
	    	WHERE ID_COMPRA = L_ID_COMPRA;
	       -- pkg_purchases_sp_compra_asiento_default_gene(L_ID_COMPRA,L_ERROR, L_MSGERROR);
               
--            <<salida_rapida>>
           P_ID_COMPRA := L_ID_COMPRA;
           P_MSGERROR := L_MSGERROR;
           P_ERROR := L_ERROR;
	END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compra_guardar_informe ( P_ID_PROVEEDOR bigint, P_ID_COMPROBANTE text, P_SERIE text, P_NUMERO text, P_FECHA_DOC timestamp(0), P_ID_DINAMICA bigint, P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint, P_IMPORTE bigint, P_BASE_INAFECTA bigint, P_TAXS bigint, P_OTROS bigint, P_TIPOCAMBIO bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO bigint, P_ID_PERSONA bigint, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_INFORME bigint, P_ERROR OUT bigint, P_ID_COMPRA INOUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
