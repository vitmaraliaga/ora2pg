-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_purchases,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_purchases_sp_compra_finalizar ( P_ID_COMPRA bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

        L_COMPRA_SERIE varchar(20) := '';
        L_COMPRA_NUMERO varchar(20) := '';
        L_COMPRA_ID_VOUCHER bigint := 0;

    
        L_COMPRA_DECRIPCION bigint := 0;
        L_ID_ASIENTO bigint := 0;
        L_ID_OPERORIGEN bigint := 3;
        L_ID_FONDO bigint := 3;
        L_ID_DEPTO varchar(20):= '';
        L_ID_CUENTAAASI varchar(20):= '';
        L_CTACTE varchar(20):= '';
        L_RESTRICCION varchar(20):= '';
        L_IMPORTE bigint := 0;
        L_DESCRIPCION varchar(100):= '';
        L_ID_PARENT bigint := 0;
        L_AGRUPA varchar(1) := '';

        L_TOTALIZAR_IMPORTE bigint := 0;
        L_CANTIDAD_ASIENTOS bigint := 0;

        L_ESTADO varchar(10) := '';
        L_RESULT varchar(10) := '';
        L_ID_ALMACEN bigint;
       -- L_COUNT_ASIENTO_IGUAL numeric := 0;
        CURSOR_CASIENTOS CURSOR FOR 
        SELECT ID_FONDO, ID_DEPTO, ID_CUENTAAASI, ID_CTACTE, ID_RESTRICCION, IMPORTE, SUBSTR(DESCRIPCION,0,49), ID_PARENT, AGRUPA FROM COMPRA_ASIENTO WHERE ID_COMPRA = P_ID_COMPRA;

        L_ERROR bigint :=0;
        L_MSGERROR varchar(100) :='';

BEGIN
        
        --- Validar que haya contrapartida
        /*
        SELECT NVL(SUM(IMPORTE),0), COUNT(*) INTO L_TOTALIZAR_IMPORTE, L_CANTIDAD_ASIENTOS  FROM COMPRA_ASIENTO WHERE ID_COMPRA = P_ID_COMPRA;
        IF L_CANTIDAD_ASIENTOS = 0 THEN
            L_ERROR := 1;
            L_MSGERROR := 'La provisión no tiene asientos contables.';
--             GOTO salida_rapida;
        ELSIF L_CANTIDAD_ASIENTOS > 0 AND L_TOTALIZAR_IMPORTE <> 0  THEN
            L_ERROR := 1;
            L_MSGERROR := 'La suma del debe y haber no igualan en cero (0).';
--             GOTO salida_rapida;
        END IF;*/
       
       SELECT SERIE, NUMERO, ID_VOUCHER, ESTADO
	   	INTO STRICT L_COMPRA_SERIE, L_COMPRA_NUMERO, L_COMPRA_ID_VOUCHER, L_ESTADO
	    FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA;

        IF L_ESTADO = '1' THEN
            L_ERROR := 1;
            L_MSGERROR := 'La provisión ya esta finalizada.';
--             GOTO salida_rapida;
        END IF;

        --- Validar que haya contrapartida.
        SELECT coalesce(SUM(IMPORTE),0), COUNT(*) INTO STRICT L_TOTALIZAR_IMPORTE, L_CANTIDAD_ASIENTOS  FROM COMPRA_ASIENTO WHERE ID_COMPRA = P_ID_COMPRA;
        IF L_CANTIDAD_ASIENTOS = 0 THEN
            L_ERROR := 1;
            L_MSGERROR := 'La provisión no tiene asientos contables.';
--             GOTO salida_rapida;
        ELSIF L_CANTIDAD_ASIENTOS > 0 AND L_TOTALIZAR_IMPORTE <> 0  THEN
            L_ERROR := 1;
            L_MSGERROR := 'La suma del debe y haber no igualan en cero (0).';
--             GOTO salida_rapida;
        END IF;

        
        IF L_ERROR <> 1 THEN
            --SELECT SERIE, NUMERO, ID_VOUCHER INTO L_COMPRA_SERIE, L_COMPRA_NUMERO, L_COMPRA_ID_VOUCHER FROM COMPRA WHERE ID_COMPRA = P_ID_COMPRA;
            
            OPEN CURSOR_CASIENTOS;
            FETCH CURSOR_CASIENTOS INTO L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION, L_IMPORTE, L_DESCRIPCION, L_ID_PARENT, L_AGRUPA;
            WHILE CURSOR_CASIENTOS%FOUND LOOP
                SELECT coalesce(MAX(ID_ASIENTO),0)+1 INTO STRICT L_ID_ASIENTO FROM CONTA_ASIENTO;

                INSERT INTO CONTA_ASIENTO(
                ID_ASIENTO, ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE, RESTRICCION,
                IMPORTE, DESCRIPCION, MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA) 
                VALUES (
                L_ID_ASIENTO, L_ID_OPERORIGEN, P_ID_COMPRA, L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION,
                L_IMPORTE, L_DESCRIPCION, (L_ID_OPERORIGEN || '-' || P_ID_COMPRA), L_COMPRA_ID_VOUCHER, L_ID_PARENT, NULL,
                L_AGRUPA
                );

                FETCH CURSOR_CASIENTOS INTO L_ID_FONDO, L_ID_DEPTO, L_ID_CUENTAAASI, L_CTACTE, L_RESTRICCION, L_IMPORTE, L_DESCRIPCION, L_ID_PARENT, L_AGRUPA;

                
            END LOOP;
            CLOSE CURSOR_CASIENTOS;
        END IF;
       	
       	UPDATE COMPRA SET ESTADO = '1' WHERE ID_COMPRA = P_ID_COMPRA;

--        	<<salida_rapida>>
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;


    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_purchases_sp_compra_finalizar ( P_ID_COMPRA bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
