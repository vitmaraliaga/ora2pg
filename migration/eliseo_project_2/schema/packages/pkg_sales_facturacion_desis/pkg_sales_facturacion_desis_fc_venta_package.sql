-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_facturacion_desis,public;

-- Package body
CREATE OR REPLACE FUNCTION eliseo.pkg_sales_facturacion_desis_fc_venta (P_ID_VENTA bigint) RETURNS xml AS $body$
DECLARE

        S_XML       xml;
        S_TIPODOC       varchar(3);
        L_ID_TIPOVENTA bigint;

        S_ID_RUC      varchar(20);
        S_RAZON_SOCIAL     varchar(100);
        S_ID_PERSONA_LEGAL     varchar(100);

       	L_IndMntNeto varchar(1);



BEGIN  
	    SELECT COALESCE(MAX(M.ID_RUC),''),COALESCE(MAX(M.NOMBRE),''),COALESCE(MAX(E.ID_PERSONA),0) INTO STRICT S_ID_RUC,S_RAZON_SOCIAL,S_ID_PERSONA_LEGAL 
	    FROM VENTA V, CONTA_ENTIDAD E, CONTA_EMPRESA M
	    WHERE V.ID_ENTIDAD = E.ID_ENTIDAD
	    AND E.ID_EMPRESA = M.ID_EMPRESA
	    AND V.ID_VENTA = P_ID_VENTA;

	   	SELECT B.COD_ELECTRONICO ,A.ID_TIPOVENTA INTO STRICT S_TIPODOC, L_ID_TIPOVENTA
	  	FROM VENTA A
	  	INNER JOIN ELISEO.TIPO_COMPROBANTE B ON A.ID_COMPROBANTE = B.ID_COMPROBANTE
	  	WHERE A.ID_VENTA=P_ID_VENTA;
    	IF S_TIPODOC='39' OR S_TIPODOC='41' THEN
    		IF S_TIPODOC = '41' THEN
    			SELECT xml('<?xml version="1.0" encoding="ISO-8859-1"?>'||
						XMLELEMENT(name "DTE", XMLATTRIBUTES('1.0' AS "version"),
							XMLELEMENT(name "Documento",-- XMLATTRIBUTES('F1T39' AS "ID"),
								XMLELEMENT(name "Encabezado",
									XMLELEMENT(name "IdDoc",
										XMLELEMENT(name "TipoDTE", S_TIPODOC),-- Boleta Exenta Electrónica
										XMLELEMENT(name "Folio", V.NUMERO),
										XMLELEMENT(name "FchEmis", TO_CHAR(V.FECHA,'YYYY-MM-DD')),
										XMLELEMENT(name "IndServicio", 3)--,
										--XMLELEMENT("IndMntNeto", CASE WHEN  V.IGV > 0  THEN 2 ELSE 0 END)
									),
									XMLELEMENT(name "Emisor",
										XMLELEMENT(name "RUTEmisor", S_ID_RUC),--XMLELEMENT("RUTEmisor", S_ID_RUC)
										XMLELEMENT(name "RznSocEmisor",S_RAZON_SOCIAL),
										--XMLELEMENT("GiroEmisor",''),-- Giro del negocio del Emisor
										XMLELEMENT(name "DirOrigen",REGEXP_REPLACE(coalesce(trim(both ELISEO.pkg_sales_facturacion_fc_cliente_direccion(S_ID_PERSONA_LEGAL)),'Sin Direccion'),'-','', 'g')),
										XMLELEMENT(name "CmnaOrigen",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(S_ID_PERSONA_LEGAL,1),'')),
										XMLELEMENT(name "CiudadOrigen",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(S_ID_PERSONA_LEGAL,3),''))
									),
									XMLELEMENT(name "Receptor",
										XMLELEMENT(name "RUTRecep",  coalesce(FC_DOCUMENTO_CLIENTE(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-')),
										--XMLELEMENT("CdgIntRecep",''),
										XMLELEMENT(name "RznSocRecep",FC_NOMBRE_PERSONA(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),
										XMLELEMENT(name "Contacto",trim(both coalesce(FC_EMAIL(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'it.upn@outlook.com'))),
										XMLELEMENT(name "DirRecep",REGEXP_REPLACE(coalesce(trim(both ELISEO.pkg_sales_facturacion_fc_cliente_direccion(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),'Sin Direccion'),'-','', 'g')),
										XMLELEMENT(name "CmnaRecep",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),1),'')),
										XMLELEMENT(name "CiudadRecep",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),3),''))
									),
									XMLELEMENT(name "Totales",
										XMLELEMENT(name "MntNeto", round)|0-COALESCE(V.DESCUENTO,0))::numeric,0)),--MntNeto=(Monto Total detalle con IndExe=0)-Descuentos GLOBAL + recargos
										XMLELEMENT(name "MntExe", round)|V.TOTAL)::numeric,0)),-- Valor exento de la boleta electrónica; MntExe= suma de los detalles con IndExe=1
										XMLELEMENT(name "IVA", 0),-- el valor IVA "Impuesto al Valor Agregado";IVA=MntNeto*19%
										XMLELEMENT(name "MntTotal", round)|V.TOTAL-COALESCE(V.DESCUENTO,0))::numeric,0)),-- Valor total de la boleta electrónica
										XMLELEMENT(name "MontoNF", 0)--, -- la suma de los montos de bienes o servicios no facturables de la boleta electrónica
									)
								),
								XMLAgg(
									XMLELEMENT(name "Detalle", 
										XMLELEMENT(name "NroLinDet",row_number)|% over )|%), 
										XMLELEMENT(name "CdgItem",
												XMLELEMENT(name "TpoCodigo", 'INT1'),-- tipo de código que la empresa utiliza en el producto, DEFAULT = INT1
												XMLELEMENT(name "VlrCodigo", '')-- código del producto o servicio
											),
										XMLELEMENT(name "IndExe", 1), -- DEBATIR,0 = Producto o servicio es afecto a IVA, 1 = Producto o servicio es exento de IVA, etc
										--XMLElement("RUTMandante", ''),-- RUT del Mandante si la venta o servicio es por cuenta de otro 
										XMLELEMENT(name "NmbItem", TVD.GLOSA), -- nombre del producto o servicio
										--XMLElement("DscItem", ''), -- descripcion adicional del producto o servicio 
										XMLELEMENT(name "QtyItem", TVD.CANTIDAD), -- cantidad del producto o servicio
										XMLELEMENT(name "UnmdItem", TVD.UNIDADMEDIDA), -- unidad de medida del producto
										XMLELEMENT(name "PrcItem", TVD.PRECIO), -- precio del producto o servicio
										XMLELEMENT(name "MontoItem", TVD.IMPORTE)-- valor o monto final de la linea de detalle
									)
								ORDER BY TVD.ORDEN),
								XMLELEMENT(name "DscRcgGlobal", 
									XMLELEMENT(name "NroLinDR", 1),
									XMLELEMENT(name "TpoMov", 'D'), -- D = Descuento, R = Recargo
									XMLELEMENT(name "GlosaDR", 'Descuentos'),-- Breve descripción del descuento / recargo 
									XMLELEMENT(name "TpoValor", '$'), -- % = porcentaje, $ = valor en moneda nacional
									XMLELEMENT(name "ValorDR", COALESCE(V.DESCUENTO,0)), -- valor del descuento / recargo
									XMLELEMENT(name "IndExeDR", 0) -- Indicador de exención de un descuento/recargo. 0 = Descuento/Recargo se aplica a Ítems afectos a IVA, etc.
								)
							)
						)
					) AS XML INTO STRICT S_XML
					FROM (SELECT P_ID_VENTA AS ID_VENTA ,T.* 
						FROM (SELECT DISTINCT 1 AS ORDEN,'CUOTA CANCELADA'||CASE WHEN coalesce(IA.NOMBRE::text, '') = '' THEN '' ELSE ': ' END||UPPER(REGEXP_REPLACE(string_agg(IA.NOMBRE, ', ' ORDER BY IA.ID_ARTICULO) over (partition by VD.ID_VENTA),'([^,]+)(,\1)*(,|$)', '\1\3', 'g')) AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,0 AS IMPORTE
							FROM VENTA_DETALLE VD 
							LEFT JOIN INVENTARIO_ARTICULO IA ON VD.ID_ARTICULO = IA.ID_ARTICULO 
							AND VD.ID_ARTICULO IN( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1) 
							
							WHERE VD.ID_VENTA = P_ID_VENTA
							
UNION ALL
 
							SELECT 2 AS ORDEN,'MONTO MENSUALIDAD A CANCELAR' AS GLOSA, 
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, COALESCE(SUM(VD.IMPORTE),0) AS PRECIO,COALESCE(SUM(VD.IMPORTE),0) AS EXENTO,COALESCE(SUM(VD.IMPORTE),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							AND VD.ID_ARTICULO IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1) 
							
UNION ALL
 
							SELECT 3 AS ORDEN,'MONTO REBAJADO POR CONCEPTO DE EXENCION' AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,COALESCE(SUM(VD.DESCUENTO),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							
UNION ALL
 
							SELECT 4 AS ORDEN,'INTERESES MORATORIOS' AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, 0 AS PRECIO,0 AS EXENTO,COALESCE(SUM(VD.OTROS_CARGOS),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							
UNION ALL
 
							SELECT 5 AS ORDEN,'OTROS COBROS' AS GLOSA,
							'UN' AS UNIDADMEDIDA, 1 AS CANTIDAD, COALESCE(SUM(VD.IMPORTE),0) AS PRECIO,COALESCE(SUM(VD.IMPORTE),0) AS EXENTO,COALESCE(SUM(VD.IMPORTE),0) AS IMPORTE
							FROM VENTA_DETALLE VD 
							WHERE VD.ID_VENTA = P_ID_VENTA
							AND VD.ID_ARTICULO NOT IN ( SELECT VFA.ID_ARTICULO FROM jose.VW_FINANZAS_ARTICULO VFA WHERE VFA.ID_TIPO = 1) )T ) TVD
					INNER JOIN ELISEO.VENTA V ON TVD.ID_VENTA = V.ID_VENTA  
					WHERE V.ID_VENTA = P_ID_VENTA
					GROUP BY V.ID_VENTA,V.FECHA,V.GRAVADA,V.INAFECTA,V.IGV,V.EXONERADA,V.TOTAL,V.DESCUENTO,V.NUMERO,v.ID_CLIENTE_LEGAL,v.ID_CLIENTE;

				ELSE

					SELECT xml('<?xml version="1.0" encoding="ISO-8859-1"?>'||
						XMLELEMENT(name "DTE", XMLATTRIBUTES('1.0' AS "version"),
						XMLELEMENT(name "Documento",-- XMLATTRIBUTES('F1T39' AS "ID"),
							XMLELEMENT(name "Encabezado",
								XMLELEMENT(name "IdDoc",
									XMLELEMENT(name "TipoDTE", S_TIPODOC),-- Boleta electrónica
									XMLELEMENT(name "Folio", V.NUMERO),
									XMLELEMENT(name "FchEmis", TO_CHAR(V.FECHA,'YYYY-MM-DD')),
									XMLELEMENT(name "IndServicio", 3)--,
									--XMLELEMENT("IndMntNeto", CASE WHEN  V.IGV > 0  THEN 2 ELSE 0 END)
								),
								XMLELEMENT(name "Emisor",
									XMLELEMENT(name "RUTEmisor", S_ID_RUC),--XMLELEMENT("RUTEmisor", S_ID_RUC)
									XMLELEMENT(name "RznSocEmisor",S_RAZON_SOCIAL),
									--XMLELEMENT("GiroEmisor",''),-- Giro del negocio del Emisor
									XMLELEMENT(name "DirOrigen",REGEXP_REPLACE(coalesce(trim(both ELISEO.pkg_sales_facturacion_fc_cliente_direccion(S_ID_PERSONA_LEGAL)),'Sin Direccion'),'-','', 'g')),
									XMLELEMENT(name "CmnaOrigen",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(S_ID_PERSONA_LEGAL,1),'')),
									XMLELEMENT(name "CiudadOrigen",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(S_ID_PERSONA_LEGAL,3),''))
								),
								XMLELEMENT(name "Receptor",
									XMLELEMENT(name "RUTRecep",  coalesce(FC_DOCUMENTO_CLIENTE(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-')),
									--XMLELEMENT("CdgIntRecep",''),
									XMLELEMENT(name "RznSocRecep",FC_NOMBRE_PERSONA(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),
									XMLELEMENT(name "Contacto",trim(both coalesce(FC_EMAIL(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'it.upn@outlook.com'))),
									XMLELEMENT(name "DirRecep",REGEXP_REPLACE(coalesce(trim(both ELISEO.pkg_sales_facturacion_fc_cliente_direccion(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),'Sin Direccion'),'-','', 'g')),
									XMLELEMENT(name "CmnaRecep",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),1),'')),
									XMLELEMENT(name "CiudadRecep",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),3),''))
								),
								XMLELEMENT(name "Totales",
									XMLELEMENT(name "MntNeto", round)|V.TOTAL)::numeric,0)),--MntNeto=(Monto Total detalle con IndExe=0)-Descuentos GLOBAL + recargos
									XMLELEMENT(name "MntExe", round)|V.INAFECTA)::numeric,0)),-- Valor exento de la boleta electrónica; MntExe= suma de los detalles con IndExe=1
									XMLELEMENT(name "IVA", round)|V.IGV)::numeric,0)),-- el valor IVA "Impuesto al Valor Agregado";IVA=MntNeto*19%
									XMLELEMENT(name "MntTotal", round)|V.TOTAL+V.IGV)::numeric,0)),-- Valor total de la boleta electrónica
									XMLELEMENT(name "MontoNF", round)|V.EXONERADA)::numeric,0))--, -- la suma de los montos de bienes o servicios no facturables de la boleta electrónica
								)
							),
							XMLAgg(
								XMLELEMENT(name "Detalle", 
									XMLELEMENT(name "NroLinDet",row_number)|% over )|%), 
									XMLELEMENT(name "CdgItem",
											XMLELEMENT(name "TpoCodigo", 'INT1'),-- tipo de código que la empresa utiliza en el producto, DEFAULT = INT1
											XMLELEMENT(name "VlrCodigo", '')-- código del producto o servicio
										),
									XMLELEMENT(name "IndExe", CASE WHEN  VD.IGV > 0 THEN 0 ELSE 1 END), -- DEBATIR,0 = Producto o servicio es afecto a IVA, 1 = Producto o servicio es exento de IVA, etc
									--XMLElement("RUTMandante", ''),-- RUT del Mandante si la venta o servicio es por cuenta de otro 
									XMLELEMENT(name "NmbItem", VD.DETALLE), -- nombre del producto o servicio
									--XMLElement("DscItem", ''), -- descripcion adicional del producto o servicio 
									XMLELEMENT(name "QtyItem", VD.CANTIDAD), -- cantidad del producto o servicio
									XMLELEMENT(name "UnmdItem", 'UN'), -- unidad de medida del producto
									XMLELEMENT(name "PrcItem", VD.PRECIO), -- precio del producto o servicio
									XMLELEMENT(name "MontoItem", VD.IMPORTE)-- valor o monto final de la linea de detalle
								)
							)
					)--,
						--XMLElement("DscRcgGlobal", 
						--	XMLElement("NroLinDR", 1),
						--	XMLElement("TpoMov", 'D'), -- D = Descuento, R = Recargo
						--	XMLElement("GlosaDR", ''),-- Breve descripción del descuento / recargo 
						--	XMLElement("TpoValor", '%'), -- % = porcentaje, $ = valor en moneda nacional
						--	XMLElement("ValorDR", V.DE), -- valor del descuento / recargo
						--	XMLElement("IndExeDR", 0) -- Indicador de exención de un descuento/recargo. 0 = Descuento/Recargo se aplica a Ítems afectos a IVA, etc.
						--)
					)
				) AS XML INTO STRICT S_XML
				FROM ELISEO.VENTA_DETALLE VD
				INNER JOIN ELISEO.VENTA V ON VD.ID_VENTA = V.ID_VENTA 
				WHERE VD.ID_VENTA = P_ID_VENTA
				GROUP BY V.ID_VENTA,V.FECHA,V.GRAVADA,V.INAFECTA,V.IGV,V.EXONERADA,V.TOTAL,V.DESCUENTO_GLOBAL,V.NUMERO,v.ID_CLIENTE_LEGAL,v.ID_CLIENTE;
	    	END IF;
		ELSIF S_TIPODOC='33' OR S_TIPODOC='34' THEN
    		SELECT xml('<?xml version="1.0" encoding="ISO-8859-1"?>'||
				XMLELEMENT(name "DTE", XMLATTRIBUTES('1.0' AS "version"),
					XMLELEMENT(name "Documento",-- XMLATTRIBUTES('F1T39' AS "ID"),
						XMLELEMENT(name "Encabezado",
							XMLELEMENT(name "IdDoc",
								XMLELEMENT(name "TipoDTE", S_TIPODOC),-- Factura electrónica
								XMLELEMENT(name "Folio", V.NUMERO),-- consultar-----si se envía 0 de autogenera el folio
								XMLELEMENT(name "FchEmis", TO_CHAR(V.FECHA,'YYYY-MM-DD')),-- Fecha de emisión
								XMLELEMENT(name "IndServicio", 3)--,-- 3=Boleta de Ventas y Servicios.   Debatir como va ser 
								--XMLELEMENT("IndMntNeto", 0)--, 0=Líneas de Detalle indicadas en Montos Brutos.
								--XMLELEMENT("PeriodoDesde", TO_CHAR(V.FECHA,'YYYY-MM-DD')),-- Solo si es IndServicio=1, que es "Boleta de Servicios Periódicos".
								--XMLELEMENT("PeriodoHasta", TO_CHAR(V.FECHA,'YYYY-MM-DD')),-- Solo si es IndServicio=1, que es "Boleta de Servicios Periódicos".
								--XMLELEMENT("FchVenc", TO_CHAR(V.FECHA,'YYYY-MM-DD'))-- Solo si es IndServicio=2, que es "Boleta de Servicios Periódicos Domiciliarios".
							),
							XMLELEMENT(name "Emisor",
								XMLELEMENT(name "RUTEmisor", S_ID_RUC),--XMLELEMENT("RUTEmisor", S_ID_RUC)
								XMLELEMENT(name "RznSocEmisor",S_RAZON_SOCIAL),
								--XMLELEMENT("GiroEmisor",''),-- Giro del negocio del Emisor
								XMLELEMENT(name "DirOrigen",REGEXP_REPLACE(coalesce(trim(both ELISEO.pkg_sales_facturacion_fc_cliente_direccion(S_ID_PERSONA_LEGAL)),'Sin Direccion'),'-','', 'g')),-- Direccion legal del emisor
								XMLELEMENT(name "CmnaOrigen",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(S_ID_PERSONA_LEGAL,1),'')),-- Comuna legal del emisor
								XMLELEMENT(name "CiudadOrigen",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(S_ID_PERSONA_LEGAL,3),''))-- Ciudad legal del emisor
							),
							XMLELEMENT(name "Receptor",
								XMLELEMENT(name "RUTRecep",  coalesce(FC_DOCUMENTO_CLIENTE(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-')),--XMLELEMENT("RUTRecep", NVL(FC_DOCUMENTO_CLIENTE(nvl(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'-'))
								--XMLELEMENT("CdgIntRecep",''),-- Este campo es utilizado para identificar de manera adicional al cliente, basado en una codificación interna.
								XMLELEMENT(name "RznSocRecep",FC_NOMBRE_PERSONA(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),
								XMLELEMENT(name "Contacto",trim(both coalesce(FC_EMAIL(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE)),'it.upn@outlook.com'))),-- Correo electrónico del cliente
								XMLELEMENT(name "DirRecep",REGEXP_REPLACE(coalesce(trim(both ELISEO.pkg_sales_facturacion_fc_cliente_direccion(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE))),'Sin Direccion'),'-','', 'g')),-- Direccion legal del cliente
								XMLELEMENT(name "CmnaRecep",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),1),'')),-- Comuna legal del cliente
								XMLELEMENT(name "CiudadRecep",coalesce(ELISEO.pkg_sales_facturacion_fc_cliente_ubigeo(coalesce(V.ID_CLIENTE_LEGAL,V.ID_CLIENTE),3),''))-- Ciudad legal del cliente
							),
							XMLELEMENT(name "Totales",
								XMLELEMENT(name "MntNeto", round((V.TOTAL)::numeric,0)),--MntNeto=(Monto Total detalle con IndExe=0)-Descuentos GLOBAL + recargos;1000
								XMLELEMENT(name "MntExe", 0),-- Valor exento de la boleta electrónica; MntExe= suma de los detalles con IndExe=1;0
								XMLELEMENT(name "TasaIVA", 19),-- el valor de la TASA IVA "Impuesto al Valor Agregado";TasaIVA=19%;19
								XMLELEMENT(name "IVA",190),-- el valor IVA "Impuesto al Valor Agregado";IVA=MntNeto*19%;190
								XMLELEMENT(name "MntTotal", round((V.TOTAL+190)::numeric,0)),-- Valor total de la boleta electrónica (Total = Neto + Exento + IVA + Impuesto - Retencion - CredEC);1190
								XMLELEMENT(name "MontoNF", 0)--, -- la suma de los montos de bienes o servicios no facturables de la boleta electrónica;0
								--XMLELEMENT("TotalPeriodo", 0),-- TotalPeriodo = MntTotal + MontoNF
								--XMLELEMENT("SaldoAnterior", 0),-- saldo anterior de un periodo
								--XMLELEMENT("VlrPagar", 0)-- valor cobrado de la transacción realizada
							)
						),
						XMLAgg(
							XMLELEMENT(name "Detalle",
								XMLELEMENT(name "NroLinDet",row_number() over ()), 
								XMLELEMENT(name "CdgItem",
										XMLELEMENT(name "TpoCodigo", 'INT1'),-- tipo de código que la empresa utiliza en el producto, DEFAULT = INT1
										XMLELEMENT(name "VlrCodigo", '')-- código del producto o servicio
									),
								XMLELEMENT(name "IndExe", 1), -- DEBATIR,0 = Producto o servicio es afecto a IVA, 1 = Producto o servicio es exento de IVA, etc
								--XMLElement("RUTMandante", ''),-- RUT del Mandante si la venta o servicio es por cuenta de otro 
								XMLELEMENT(name "NmbItem", VD.DETALLE), -- nombre del producto o servicio
								--XMLElement("DscItem", ''), -- descripcion adicional del producto o servicio 
								XMLELEMENT(name "QtyItem", VD.CANTIDAD), -- cantidad del producto o servicio
								XMLELEMENT(name "UnmdItem", 'UN'), -- unidad de medida del producto
								XMLELEMENT(name "PrcItem", VD.PRECIO), -- precio del producto o servicio
								XMLELEMENT(name "MontoItem", VD.IMPORTE)-- valor o monto final de la linea de detalle
							)
						)--,
				)--,
					--XMLAgg(
					--	XMLElement("DscRcgGlobal", 
					--		XMLElement("NroLinDR", rownum),
					--		XMLElement("TpoMov", 'D'), -- D = Descuento, R = Recargo
					--		XMLElement("GlosaDR", ''),-- Breve descripción del descuento / recargo 
					--		XMLElement("TpoValor", '%'), -- % = porcentaje, $ = valor en moneda nacional
					--		XMLElement("ValorDR", 12), -- valor del descuento / recargo
					--		XMLElement("IndExeDR", 0) -- Indicador de exención de un descuento/recargo. 0 = Descuento/Recargo se aplica a Ítems afectos a IVA, etc.
					--	)
					--)
				)
			) AS XML INTO STRICT S_XML
			FROM ELISEO.VENTA_DETALLE VD
			INNER JOIN ELISEO.VENTA V ON VD.ID_VENTA = V.ID_VENTA 
			WHERE VD.ID_VENTA = P_ID_VENTA
			GROUP BY V.ID_VENTA,V.FECHA,V.GRAVADA,V.INAFECTA,V.IGV,V.EXONERADA,V.TOTAL,V.DESCUENTO_GLOBAL,V.NUMERO,v.ID_CLIENTE_LEGAL,v.ID_CLIENTE;
		END IF;	
	RETURN(S_XML);
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON FUNCTION eliseo.pkg_sales_facturacion_desis_fc_venta (P_ID_VENTA bigint) FROM PUBLIC;
