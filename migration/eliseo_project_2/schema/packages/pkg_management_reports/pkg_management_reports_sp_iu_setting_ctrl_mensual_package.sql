-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_management_reports,public;

-- Package body
CREATE OR REPLACE PROCEDURE eliseo.pkg_management_reports_sp_iu_setting_ctrl_mensual (P_ID_EMPRESA text, P_ID_ENTIDAD text,P_ID_DEPTO text,P_ID_ANHO bigint, P_ID_MES bigint,P_ID_TIPOARCHIVO bigint,P_FECHA_LIMITE timestamp(0), P_TIENE_PUNTAJE text, P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

	L_ID_EMPRESA varchar(100):= NULL;
	L_ID_ENTIDAD varchar(100) := NULL;
	L_ID_DEPTO varchar(100):= NULL;
	L_COUNT bigint  := 0;
	L_ERROR bigint  := 0;
    L_MSGERROR varchar(100) :='';

	
  DATOS RECORD;

BEGIN
		L_ID_EMPRESA := P_ID_EMPRESA;
		L_ID_ENTIDAD := P_ID_ENTIDAD;
		L_ID_DEPTO := P_ID_DEPTO;
		IF (coalesce(P_ID_EMPRESA::text, '') = '' OR P_ID_EMPRESA ='*' OR P_ID_EMPRESA ='all') THEN

            DELETE FROM ARCHIVO_MENSUAL 
            WHERE coalesce(ID_EMPRESA::text, '') = '' AND ID_ANHO = P_ID_ANHO AND ID_MES = P_ID_MES
            AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO 
            AND NOT EXISTS (SELECT 1 FROM ARCHIVO_MENSUAL_DETALLE amd 
            WHERE amd.ID_ARCHIVO_MENSUAL = ARCHIVO_MENSUAL.ID_ARCHIVO_MENSUAL
            );
            L_ID_EMPRESA:=null;
        END IF;

        IF (coalesce(P_ID_ENTIDAD::text, '') = '' OR P_ID_ENTIDAD ='*' OR P_ID_ENTIDAD ='all') THEN 
            IF ((P_ID_EMPRESA IS NOT NULL AND P_ID_EMPRESA::text <> '') and P_ID_EMPRESA!='*' and  P_ID_EMPRESA!='all') THEN 
                DELETE FROM ARCHIVO_MENSUAL 
            	WHERE ID_ANHO = P_ID_ANHO AND ID_MES = P_ID_MES
            	AND ID_EMPRESA = P_ID_EMPRESA
            	AND coalesce(ID_ENTIDAD::text, '') = ''
            	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO
	            AND NOT EXISTS (SELECT 1 FROM ARCHIVO_MENSUAL_DETALLE amd 
	            WHERE amd.ID_ARCHIVO_MENSUAL = ARCHIVO_MENSUAL.ID_ARCHIVO_MENSUAL
	            );
            END IF;
            L_ID_ENTIDAD:=null;
        END IF;

        IF (coalesce(P_ID_DEPTO::text, '') = '' OR P_ID_DEPTO='*' OR P_ID_DEPTO='all') THEN
            IF ((P_ID_ENTIDAD IS NOT NULL AND P_ID_ENTIDAD::text <> '') and P_ID_ENTIDAD!='*' and  P_ID_ENTIDAD!='all') THEN 
                
                DELETE FROM ARCHIVO_MENSUAL 
            	WHERE ID_ANHO = P_ID_ANHO 
            	AND ID_MES = P_ID_MES
            	AND ID_ENTIDAD IN (P_ID_ENTIDAD)
            	AND coalesce(ID_DEPTO::text, '') = ''
            	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO
            	AND NOT EXISTS (SELECT 1 FROM ARCHIVO_MENSUAL_DETALLE amd 
	            WHERE amd.ID_ARCHIVO_MENSUAL = ARCHIVO_MENSUAL.ID_ARCHIVO_MENSUAL
	            );
            END IF;
            L_ID_DEPTO:= null;

        END IF;

       IF (coalesce(L_ID_ENTIDAD::text, '') = '') THEN
       		
       		IF coalesce(L_ID_EMPRESA::text, '') = '' THEN
		       	    SELECT count(*) INTO STRICT L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE coalesce(ID_EMPRESA::text, '') = ''
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			ELSE
					SELECT count(*) INTO STRICT L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			END IF;
		
			IF L_COUNT > 0 THEN
			       IF coalesce(L_ID_EMPRESA::text, '') = '' THEN
			
					    UPDATE ARCHIVO_MENSUAL 
			       		SET ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE coalesce(ID_EMPRESA::text, '') = ''
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			       ELSE
			       		UPDATE ARCHIVO_MENSUAL
			       		SET ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			       END IF;
			ELSE
			
				INSERT INTO  ARCHIVO_MENSUAL(ID_EMPRESA,
		       		ID_ENTIDAD,
		       		ID_DEPTO,
		       		ID_ANHO,
		       		ID_MES,
		       		ID_TIPOARCHIVO,
		       		FECHA_LIMITE,
		       		TIENE_PUNTAJE)
		       		VALUES (L_ID_EMPRESA, 
		       		L_ID_ENTIDAD, 
		       		L_ID_DEPTO, 
		       		P_ID_ANHO,
		       		P_ID_MES,
		       		P_ID_TIPOARCHIVO,
		       		P_FECHA_LIMITE,
		       		P_TIENE_PUNTAJE);
			END IF;
       ELSE
       
	       	FOR DATOS IN (WITH RECURSIVE cte AS (
SELECT (SELECT array_to_string(a, '') FROM regexp_matches(L_ID_ENTIDAD, '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (level - 1) ) ID_ENTIDAD 
	  			(SELECT array_to_string(a, '') FROM regexp_matches(L_ID_ENTIDAD, '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (level - 1) ) is not null 
	          UNION ALL
SELECT (SELECT array_to_string(a, '') FROM regexp_matches(L_ID_ENTIDAD, '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (level - 1) ) ID_ENTIDAD 
	  			(SELECT array_to_string(a, '') FROM regexp_matches(L_ID_ENTIDAD, '[^,]+', 'g') AS foo(a) LIMIT 1 OFFSET (level - 1) ) is not null 
	         JOIN cte c ON ()

) SELECT * FROM cte)
	        LOOP
		       
		       IF coalesce(L_ID_EMPRESA::text, '') = '' THEN
		       	    SELECT count(*) INTO STRICT L_COUNT FROM ARCHIVO_MENSUAL 
		       		WHERE coalesce(ID_EMPRESA::text, '') = ''
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
		       ELSIF coalesce(L_ID_ENTIDAD::text, '') = '' THEN
		       		SELECT count(*) INTO STRICT L_COUNT FROM ARCHIVO_MENSUAL
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
		       		AND coalesce(ID_ENTIDAD::text, '') = ''
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			   ELSIF coalesce(L_ID_DEPTO::text, '') = '' THEN
			  		SELECT count(*) INTO STRICT L_COUNT FROM ARCHIVO_MENSUAL
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
		       		AND ID_ENTIDAD = DATOS.ID_ENTIDAD
		       		AND coalesce(ID_DEPTO::text, '') = ''
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			   ELSIF (L_ID_DEPTO IS NOT NULL AND L_ID_DEPTO::text <> '') THEN
			   		SELECT count(*) INTO STRICT L_COUNT FROM ARCHIVO_MENSUAL
		       		WHERE ID_EMPRESA = L_ID_EMPRESA
		       		AND ID_ENTIDAD = DATOS.ID_ENTIDAD
		       		AND ID_DEPTO = L_ID_DEPTO
			       	AND ID_ANHO = P_ID_ANHO
			       	AND ID_MES = P_ID_MES
			       	AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			   END IF;
		
		       
		       
		       	IF L_COUNT > 0 THEN
			       IF coalesce(L_ID_EMPRESA::text, '') = '' THEN
			       
					    UPDATE ARCHIVO_MENSUAL 
			       		SET ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE coalesce(ID_EMPRESA::text, '') = ''
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
				
			       ELSIF coalesce(L_ID_ENTIDAD::text, '') = '' THEN
			       
				       	UPDATE ARCHIVO_MENSUAL 
			       		SET ID_EMPRESA = L_ID_EMPRESA,
			       		ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND coalesce(ID_ENTIDAD::text, '') = ''
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
			       	
				   ELSIF coalesce(L_ID_DEPTO::text, '') = '' THEN
				
				       	UPDATE ARCHIVO_MENSUAL 
			       		SET ID_EMPRESA = L_ID_EMPRESA,
			       		ID_ENTIDAD = DATOS.ID_ENTIDAD,
			       		ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND ID_ENTIDAD = L_ID_ENTIDAD
			       		AND coalesce(ID_DEPTO::text, '') = ''
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
				   ELSIF (L_ID_DEPTO IS NOT NULL AND L_ID_DEPTO::text <> '') THEN
				       	UPDATE ARCHIVO_MENSUAL
			       		SET ID_EMPRESA = L_ID_EMPRESA,
			       		ID_ENTIDAD = DATOS.ID_ENTIDAD,
			       		ID_DEPTO = L_ID_DEPTO,
			       		ID_ANHO = P_ID_ANHO,
			       		ID_MES = P_ID_MES,
			       		ID_TIPOARCHIVO = P_ID_TIPOARCHIVO,
			       		FECHA_LIMITE  = P_FECHA_LIMITE,
			       		TIENE_PUNTAJE = P_TIENE_PUNTAJE
			       		WHERE ID_EMPRESA = L_ID_EMPRESA
			       		AND ID_ENTIDAD = DATOS.ID_ENTIDAD
			       		AND ID_DEPTO = L_ID_DEPTO
			       		AND ID_ANHO = P_ID_ANHO
			       		AND ID_MES = P_ID_MES
			       		AND ID_TIPOARCHIVO = P_ID_TIPOARCHIVO;
				   END IF;
		       		
		       	
		       	ELSE
		       		INSERT INTO  ARCHIVO_MENSUAL(ID_EMPRESA,
		       		ID_ENTIDAD,
		       		ID_DEPTO,
		       		ID_ANHO,
		       		ID_MES,
		       		ID_TIPOARCHIVO,
		       		FECHA_LIMITE,
		       		TIENE_PUNTAJE)
		       		VALUES (L_ID_EMPRESA, 
		       		DATOS.ID_ENTIDAD, 
		       		L_ID_DEPTO, 
		       		P_ID_ANHO,
		       		P_ID_MES,
		       		P_ID_TIPOARCHIVO,
		       		P_FECHA_LIMITE,
		       		P_TIENE_PUNTAJE
		       	);
		       	
		       	END IF;
	
	        END LOOP DATOS;
	
       
       END IF;


	P_ERROR := L_ERROR;
    P_MSGERROR := L_MSGERROR;
   	END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_management_reports_sp_iu_setting_ctrl_mensual (P_ID_EMPRESA text, P_ID_ENTIDAD text,P_ID_DEPTO text,P_ID_ANHO bigint, P_ID_MES bigint,P_ID_TIPOARCHIVO bigint,P_FECHA_LIMITE timestamp(0), P_TIENE_PUNTAJE text, P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
