-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_crear_venta_detalle (P_ID_VENTA bigint,P_ID_ARTICULO text,P_ID_ALMACEN bigint,P_ID_DINAMICA bigint,P_DETALLE text,P_CANTIDAD bigint,P_PRECIO bigint,P_ERROR OUT bigint) AS $body$
DECLARE

        l_cont bigint;
        l_precio decimal(10,2);
        l_igv decimal(10,2);
        l_igv_item decimal(10,2);
        l_precio_base decimal(10,2);
        l_precio_alm decimal(10,2);
        l_base decimal(10,2);
        l_descuento decimal(10,2):=0;
        l_totaldescuento decimal(10,2):=0;
        l_importe decimal(10,2);
        l_tc decimal(10,3);
        l_id_tipoigv varchar(2);
        l_gravado varchar(2);
        l_precio_me decimal(10,2);
        l_igv_me decimal(10,2);
        l_precio_base_me decimal(10,2);
        l_precio_alm_me decimal(10,2);
        l_base_me decimal(10,2);
        l_descuento_me decimal(10,2);
        l_importe_me decimal(10,2);
        l_id_moneda bigint;
        l_contar bigint;

BEGIN
          
            SELECT COALESCE(MAX(ID_VDETALLE),0)+1 INTO STRICT l_cont FROM VENTA_DETALLE;
            --obtiene igv,TC
            select ID_IGV,TIPOCAMBIO,ID_MONEDA into STRICT l_igv,l_tc,l_id_moneda from venta where id_venta=P_ID_VENTA;
            ---obtiene precio del almacen
            select count(1) into STRICT l_contar from inventario_almacen_articulo where ID_ARTICULO=P_ID_ARTICULO and ID_ALMACEN=P_ID_ALMACEN;
            if l_contar >0 then
                select coalesce(COSTO,0),ID_TIPOIGV into STRICT l_precio_alm,l_id_tipoigv from inventario_almacen_articulo
                where ID_ARTICULO=P_ID_ARTICULO
                and ID_ALMACEN=P_ID_ALMACEN;
            else
                select count(1) into STRICT l_contar from CONTA_DINAMICA where ID_DINAMICA=P_ID_DINAMICA;
                if l_contar>0 then
                    select ID_TIPOIGV into STRICT l_id_tipoigv from CONTA_DINAMICA where ID_DINAMICA=P_ID_DINAMICA;
                end if;
            end if;

            if coalesce(l_precio_alm::text, '') = '' then
                l_precio_alm:=0;
            end if;

            select count(1) into STRICT l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
            if l_contar>0 then
                select GRAVADO into STRICT l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
            end if;

            --valida id_tipo_igv ventas academicas
            if coalesce(l_id_tipoigv::text, '') = '' or l_id_tipoigv = 0 then
                l_id_tipoigv := '30';--VENTAS INAFECTAS
            end if;

            l_igv:=l_igv/100;
            l_totaldescuento:=l_descuento*P_CANTIDAD;
            if l_id_moneda=7 then
                l_precio:=P_PRECIO;
                l_precio_base:=l_precio;
                l_importe:=(l_precio*P_CANTIDAD)-(l_totaldescuento);
                l_precio_alm:=l_precio_alm;
                l_base:=l_importe;
                l_igv_item:=0;
                if l_gravado in ('G') then
                    l_precio_base:=l_precio/(1+l_igv);
                    l_base:=l_importe/(1+l_igv);
                    l_igv_item:=l_importe-l_base;
                end if;
                l_descuento:=l_totaldescuento;
                l_precio_me:=0;
                l_precio_base_me:=0;
                l_precio_alm_me:=0;
                l_base_me:=0;
                l_igv_me:=0;
                l_descuento_me:=0;
                l_importe_me:=0;
            end if;
          
            if l_id_moneda=9 then
                /*l_totaldescuento:=l_descuento*P_CANTIDAD;
                l_totaldescuento:=l_totaldescuento/l_tc;
                l_precio_me:=l_precio/l_tc;
                l_precio_base_me:=l_precio_base/l_tc;
                l_importe_me:=l_importe/l_tc;
                l_precio_alm_me:=l_precio_alm/l_tc;
                l_base_me:=l_base/l_tc;
                l_igv_me:=l_igv_item/l_tc;*/
                
                l_precio:=P_PRECIO*l_tc;
                l_precio_base:=l_precio;
                l_importe:=(l_precio*P_CANTIDAD)-(l_totaldescuento);
                l_precio_alm:=l_precio_alm*l_tc;
                l_base:=l_importe;
                l_igv_item:=0;
                if l_gravado in ('G') then
                    l_precio_base:=l_precio/(1+l_igv);
                    l_base:=l_importe/(1+l_igv);
                    l_igv_item:=l_importe-l_base;
                end if;
                l_descuento:=l_totaldescuento*l_tc;

                l_precio_me:=P_PRECIO;
                l_precio_base_me:=l_precio_me;
                l_importe_me:=(l_precio_me*P_CANTIDAD)-(l_totaldescuento);
                l_precio_alm_me:=l_precio_alm/l_tc;
                l_base_me:=l_importe_me;
                if l_gravado in ('G') then
                    l_precio_base_me:=l_precio_me/(1+l_igv);
                    l_base_me:=l_importe_me/(1+l_igv);
                    l_igv_me:=l_importe_me-l_base_me;
                end if;

                /*l_precio_base_mn:=l_precio_mn;
                l_importe_mn:=(l_precio_mn*P_CANTIDAD)-(l_totaldescuento);
                l_precio_alm_mn:=l_precio_alm_mn/l_tc;
                l_base_mn:=l_importe_mn;
                l_igv_mn:=0;
                if l_gravado in('G') then
                l_precio_base_mn:=(l_precio_mn/l_tc)/(1+l_igv);
                l_base_mn:=l_importe_mn/(1+l_igv);
                l_igv_mn:=l_importe_mn-l_base_mn;
                end if;
                */
                l_descuento_me:=l_totaldescuento;
            end if;

            INSERT INTO VENTA_DETALLE(
            ID_VDETALLE,
            ID_VENTA,
            ID_TIPOIGV,
            ID_ARTICULO,
            ID_ALMACEN,
            ID_DINAMICA,
            DETALLE, 
            CANTIDAD, 
            PRECIO, 
            PRECIO_BASE, 
            PRECIO_ALM, 
            BASE, 
            IGV, 
            DESCUENTO, 
            IMPORTE, 
            PRECIO_ME, 
            PRECIO_BASE_ME, 
            PRECIO_ALM_ME, 
            BASE_ME, 
            IGV_ME, 
            DESCUENTO_ME, 
            IMPORTE_ME
            )VALUES (
            l_cont,
            P_ID_VENTA,
            l_id_tipoigv,
            P_ID_ARTICULO,
            case when P_ID_ALMACEN=0 then null else P_ID_ALMACEN end ,
            P_ID_DINAMICA,
            P_DETALLE,
            P_CANTIDAD,
            l_precio,
            l_precio_base,
            l_precio_alm,
            l_base,
            l_igv_item,
            l_descuento,
            l_importe,
            l_precio_me,
            l_precio_base_me,
            l_precio_alm_me,
            l_base_me,
            l_igv_me,
            l_descuento_me,
            l_importe_me
            );
            CALL pkg_sales_sp_actualizar_total_venta(P_ID_VENTA);
            P_ERROR:=0;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_crear_venta_detalle (P_ID_VENTA bigint,P_ID_ARTICULO text,P_ID_ALMACEN bigint,P_ID_DINAMICA bigint,P_DETALLE text,P_CANTIDAD bigint,P_PRECIO bigint,P_ERROR OUT bigint) FROM PUBLIC;
