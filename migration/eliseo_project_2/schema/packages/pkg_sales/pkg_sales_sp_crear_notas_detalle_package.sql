-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_crear_notas_detalle (P_ID_VENTA bigint,P_ID_DINAMICA bigint,P_DETALLE text,P_CANTIDAD bigint,P_PRECIO bigint,P_ERROR OUT bigint) AS $body$
DECLARE

        l_cont bigint;
        l_precio decimal(10,2);
        l_igv decimal(10,2);
        l_igv_item decimal(10,2);
        l_precio_base decimal(10,2);
        l_precio_alm decimal(10,2);
        l_base decimal(10,2);
        l_descuento decimal(10,2):=0;
        l_totaldescuento decimal(10,2):=0;
        l_importe decimal(10,2);
        l_tc decimal(10,3);
        l_id_tipoigv bigint;
        l_gravado varchar(2);
        l_precio_me decimal(10,2);
        l_igv_me decimal(10,2);
        l_precio_base_me decimal(10,2);
        l_precio_alm_me decimal(10,2);
        l_base_me decimal(10,2);
        l_descuento_me decimal(10,2);
        l_importe_me decimal(10,2);
        l_id_moneda bigint;
        l_contar bigint;
        L_ID_PARENT bigint;
        L_ID_COMPROBANTE varchar(2);
        L_TOTAL decimal(10,2);
        L_TOTAL_ME decimal(10,2);
        L_MONTO decimal(10,2) :=0;
        L_SALDO decimal(10,2) :=0;
        L_IMP decimal(10,2) :=0;
        L_IMP_ME decimal(10,2) :=0;

BEGIN
          
            SELECT COALESCE(MAX(ID_VDETALLE),0)+1 INTO STRICT l_cont FROM VENTA_DETALLE;
            --obtiene igv,TC
            SELECT ID_PARENT,ID_COMPROBANTE,ID_IGV,TIPOCAMBIO,ID_MONEDA into STRICT L_ID_PARENT,L_ID_COMPROBANTE,l_igv,l_tc,l_id_moneda
            FROM VENTA WHERE id_venta=P_ID_VENTA;
            IF (L_ID_PARENT IS NOT NULL AND L_ID_PARENT::text <> '') THEN
                --SE OBTIENE EL SALDO DE COMPROBANTE
                SELECT TOTAL,TOTAL_ME INTO STRICT L_TOTAL,L_TOTAL_ME
                FROM VW_SALES_SALDO
                WHERE ID_VENTA = L_ID_PARENT;
            ELSE
                L_ID_COMPROBANTE := '08';
            END IF;
            --IMPORTES QUE SE ESTAN REGISTRANDO
            SELECT COUNT(*) INTO STRICT l_contar
            FROM VENTA_DETALLE
            WHERE ID_VENTA = P_ID_VENTA;
            IF l_contar > 0 THEN
                SELECT coalesce(SUM(IMPORTE),0),coalesce(SUM(IMPORTE_ME),0) INTO STRICT L_IMP,L_IMP_ME
                FROM VENTA_DETALLE
                WHERE ID_VENTA = P_ID_VENTA;
            END IF;

            IF l_id_moneda = 7 THEN
                L_MONTO := (P_CANTIDAD*P_PRECIO)+L_IMP;
                L_SALDO := L_TOTAL;
            ELSE
                L_MONTO := (P_CANTIDAD*P_PRECIO)+L_IMP_ME/l_tc;
                L_SALDO := L_TOTAL_ME;
            END IF;

            IF L_ID_COMPROBANTE = '07' AND L_MONTO <= L_SALDO THEN
                P_ERROR:=0;
            ELSIF L_ID_COMPROBANTE = '08' THEN
                P_ERROR:=0;
            ELSIF L_ID_COMPROBANTE = '01' OR L_ID_COMPROBANTE = '03' THEN
                P_ERROR:=3;
            ELSE
                P_ERROR:=1;
            END IF;
            IF P_ERROR = 0 THEN

                select count(*) into STRICT l_contar from CONTA_DINAMICA where ID_DINAMICA=P_ID_DINAMICA;
                IF l_contar>0 then
                    select ID_TIPOIGV into STRICT l_id_tipoigv from CONTA_DINAMICA where ID_DINAMICA=P_ID_DINAMICA;
                ELSE
                    P_ERROR:=4;
                END IF;

                if coalesce(l_precio_alm::text, '') = '' then
                    l_precio_alm:=0;
                end if;

                select count(*) into STRICT l_contar from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                if l_contar>0 then
                    select GRAVADO into STRICT l_gravado from TIPO_IGV where ID_TIPOIGV=l_id_tipoigv;
                end if;

                l_igv:=l_igv/100;
                l_totaldescuento:=l_descuento*P_CANTIDAD;
                l_precio:=P_PRECIO;
                l_precio_base:=l_precio;
                l_importe:=(l_precio*P_CANTIDAD)-(l_totaldescuento);
                l_precio_alm:=l_precio_alm;
                l_base:=l_importe;
                l_igv_item:=0;
                if l_gravado in ('G') then
                    l_precio_base:=l_precio/(1+l_igv);
                    l_base:=l_importe/(1+l_igv);
                    l_igv_item:=l_importe-l_base;
                end if;
                l_descuento:=l_totaldescuento;
                l_precio_me:=0;
                l_precio_base_me:=0;
                l_precio_alm_me:=0;
                l_base_me:=0;
                l_igv_me:=0;
                l_descuento_me:=0;
                l_importe_me:=0;
              
                if l_id_moneda=9 then
                    l_totaldescuento:=l_descuento*P_CANTIDAD;
                    l_totaldescuento:=l_totaldescuento/l_tc;
                    l_precio_me:=l_precio/l_tc;
                    l_precio_base_me:=l_precio_base/l_tc;
                    l_importe_me:=l_importe/l_tc;
                    l_precio_alm_me:=l_precio_alm/l_tc;
                    l_base_me:=l_base/l_tc;
                    l_igv_me:=l_igv_item/l_tc;
                    l_descuento_me:=l_totaldescuento;
                end if;

                INSERT INTO VENTA_DETALLE(
                        ID_VDETALLE,
                        ID_VENTA,
                        ID_TIPOIGV,
                        ID_DINAMICA,
                        DETALLE, 
                        CANTIDAD, 
                        PRECIO, 
                        PRECIO_BASE, 
                        PRECIO_ALM, 
                        BASE, 
                        IGV, 
                        DESCUENTO, 
                        IMPORTE, 
                        PRECIO_ME, 
                        PRECIO_BASE_ME, 
                        PRECIO_ALM_ME, 
                        BASE_ME, 
                        IGV_ME, 
                        DESCUENTO_ME, 
                        IMPORTE_ME
                )VALUES (
                        l_cont,
                        P_ID_VENTA,
                        l_id_tipoigv,
                        P_ID_DINAMICA,
                        P_DETALLE,
                        P_CANTIDAD,
                        l_precio,
                        l_precio_base,
                        l_precio_alm,
                        l_base,
                        l_igv_item,
                        l_descuento,
                        l_importe,
                        l_precio_me,
                        l_precio_base_me,
                        l_precio_alm_me,
                        l_base_me,
                        l_igv_me,
                        l_descuento_me,
                        l_importe_me
                );
                CALL pkg_sales_sp_actualizar_total_venta(P_ID_VENTA);
                P_ERROR:=0;
            ELSE
                P_ERROR:=P_ERROR;
            END IF;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_crear_notas_detalle (P_ID_VENTA bigint,P_ID_DINAMICA bigint,P_DETALLE text,P_CANTIDAD bigint,P_PRECIO bigint,P_ERROR OUT bigint) FROM PUBLIC;
