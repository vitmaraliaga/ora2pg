-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_crear_nota_cd_alumnos (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_VENTA bigint,P_ID_COMPROBANTE text,P_ID_MONEDA bigint,P_ID_TIPOTRANSACCION bigint, P_ID_COMPROBANTE_REF text, P_SERIE_REF text,P_NUMERO_REF text,P_GLOSA text,P_IMPORTE bigint,P_ID_TIPONOTA text,P_ID_DINAMICA bigint,P_ERROR OUT bigint, P_MSN OUT text,P_ID_NOTA OUT bigint) AS $body$
DECLARE

        L_ID_NOTA bigint;
        L_ID_TIPOVENTA bigint := 1; --TIPO VENTA ALUMNOS
        L_ID_IGV bigint := 18;
        L_ID_TIPOORIGEN bigint := 1;
        L_ID_COMPROBANTE_REF varchar(3);
        L_SERIE_REF varchar(4);
        L_NUMERO_REF varchar(8);
        L_DC varchar(1);
        L_ID_TIPOIGV varchar(2) := '30';
        L_CONT bigint;
        L_ERROR bigint :=0;
        L_MSN varchar(200);
        L_ID_DINAMICA bigint;
        L_ID_TIPOASIENTO varchar(5);
        L_ID_TIPOVOUCHER bigint := 1;
        L_ID_LEYENDA varchar(4) :='1000';
        L_ID_VNT bigint;
        L_TIPO varchar(1);
        L_ID_VENTA bigint;
        L_ID_SALDO bigint;
        L_ID_TRANSFERENCIA bigint;
        L_TOTAL decimal(10,2);
        L_ID_VDETALLE bigint;
        L_ID_CLIENTE_LEGAL bigint;

        
BEGIN
            L_ERROR :=0;
            
            DELETE FROM VENTA_ASIENTO
            WHERE ID_VENTA IN (
                SELECT ID_VENTA FROM VENTA WHERE ID_PERSONA = P_ID_PERSONA AND ID_COMPROBANTE =  P_ID_COMPROBANTE AND ESTADO = '0'
            );
            DELETE FROM VENTA_DETALLE
            WHERE ID_VENTA IN (
                SELECT ID_VENTA FROM VENTA WHERE ID_PERSONA = P_ID_PERSONA AND ID_COMPROBANTE =  P_ID_COMPROBANTE AND ESTADO = '0'
            );
            DELETE FROM VENTA_FILE
            WHERE ID_VENTA IN (
                SELECT ID_VENTA FROM VENTA WHERE ID_PERSONA = P_ID_PERSONA AND ID_COMPROBANTE =  P_ID_COMPROBANTE AND ESTADO = '0'
            );
            DELETE FROM VENTA WHERE ID_PERSONA = P_ID_PERSONA AND ID_COMPROBANTE =  P_ID_COMPROBANTE AND ESTADO = '0';

            IF P_ID_DINAMICA = 0 THEN
                L_ID_DINAMICA := NULL;
            ELSE
                L_ID_DINAMICA := P_ID_DINAMICA;
            END IF;
            --VALIDA LA CONFIGURACION DEL VOUCHER
            L_ID_TIPOASIENTO := pkg_sales_fc_get_tipo_asiento(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,L_ID_TIPOVOUCHER);
            IF L_ID_TIPOASIENTO = 'X' THEN
                L_ERROR:=1;
                L_MSN:='Alto: No existe la configuración de vouchers - TIPO ASIENTO para las ventas, del periodo '||P_ID_ANHO::text;
--                 GOTO SALIDA_RAPIDA;
            END IF;

            SELECT   COUNT(1) INTO STRICT L_CONT FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_MODULO = '13'--modulo ventas
            AND ID_ANHO = P_ID_ANHO
            AND ID_TIPOASIENTO = L_ID_TIPOASIENTO
            AND AUTOMATICO='S'
            AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;
            IF L_CONT < 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: No existe la configuración de vouchers para las ventas, del periodo '||P_ID_ANHO::text;
--                 GOTO SALIDA_RAPIDA;
            ELSIF L_CONT > 1 THEN
                L_ERROR:=1;
                L_MSN:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||P_ID_ANHO::text;
--                 GOTO SALIDA_RAPIDA;
            END IF;

            L_CONT := pkg_sales_fc_verificar_serie_numero(P_ID_PERSONA,P_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_COMPROBANTE_REF);
            IF L_CONT < 1 THEN
                L_ERROR := 1;
                L_MSN := 'Alto! No existe un punto de impresión activo de Notas para el usuario. [tipo de documento: '||P_ID_COMPROBANTE||']';
--                 GOTO SALIDA_RAPIDA;
            ELSIF L_CONT > 1 THEN
                L_ERROR := 1;
                L_MSN := 'Alto! Existe mas de un punto de impresión activo de Notas para el usuario. [tipo de documento: '||P_ID_COMPROBANTE||']';
--                 GOTO SALIDA_RAPIDA;
            END IF;

            SELECT COUNT(1) INTO STRICT L_CONT
            FROM VW_SALES_MOV
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = P_ID_ANHO
            AND ID_CLIENTE = P_ID_CLIENTE
            AND ID_VENTA = P_ID_VENTA;
            IF L_CONT > 0 THEN
                SELECT DISTINCT ID_VENTA,TIPO INTO STRICT L_ID_VNT, L_TIPO
                FROM VW_SALES_MOV
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO
                AND ID_ANHO = P_ID_ANHO
                AND ID_CLIENTE = P_ID_CLIENTE
                AND ID_VENTA = P_ID_VENTA
                --HAVING NVL(SUM(TOTAL),0)+NVL(SUM(TOTAL_ME),0) > 0
                GROUP BY ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_VENTA,ID_CLIENTE,ID_SUCURSAL,SERIE,NUMERO,ID_MONEDA, ID_COMPROBANTE,TIPO;
            END IF;
            IF L_TIPO = 'V' THEN
                SELECT COUNT(1) INTO STRICT L_CONT
                FROM VENTA WHERE ID_VENTA = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                IF L_CONT = 1 THEN
                    SELECT ID_COMPROBANTE,SERIE,NUMERO, TOTAL, ID_CLIENTE_LEGAL INTO STRICT L_ID_COMPROBANTE_REF, L_SERIE_REF,L_NUMERO_REF,L_TOTAL,L_ID_CLIENTE_LEGAL
                    FROM VENTA WHERE ID_VENTA = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                    L_ID_VENTA := P_ID_VENTA;
                    L_ID_SALDO := NULL;
                    L_ID_TRANSFERENCIA := NULL;

                    IF P_IMPORTE > L_TOTAL THEN
                        L_ERROR:=1;
                        L_MSN:='Alto: el importe de la Nota de Credito NO Puede ser mayor que el Importe del Comprobante de Venta (Boleta o Factura)';
--                         GOTO SALIDA_RAPIDA;
                    END IF;
                ELSE
                    L_ERROR:=1;
                    L_MSN:='Alto: No existe Documento de Referencia';
--                     GOTO SALIDA_RAPIDA;
                END IF;
            ELSIF L_TIPO = 'S' THEN
                SELECT COUNT(1) INTO STRICT L_CONT
                FROM VENTA_SALDO WHERE ID_SALDO = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                IF L_CONT = 1 THEN
                    SELECT ID_COMPROBANTE,SERIE,NUMERO INTO STRICT L_ID_COMPROBANTE_REF,L_SERIE_REF,L_NUMERO_REF
                    FROM VENTA_SALDO WHERE ID_SALDO = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                    L_ID_SALDO := P_ID_VENTA;
                    L_ID_VENTA := NULL;
                    L_ID_TRANSFERENCIA := NULL;
                ELSE
                    L_ERROR:=1;
                    L_MSN:='Alto: No existe Documento de Referencia';
--                     GOTO SALIDA_RAPIDA;
                END IF;
            ELSE
                IF L_TIPO = 'T' THEN
                    SELECT COUNT(1) INTO STRICT L_CONT
                    FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                    IF L_CONT = 1 THEN
                        SELECT '99' AS ID_COMPROBANTE,SERIE,NUMERO INTO STRICT L_ID_COMPROBANTE_REF,L_SERIE_REF,L_NUMERO_REF
                        FROM VENTA_TRANSFERENCIA WHERE ID_TRANSFERENCIA = P_ID_VENTA AND ID_CLIENTE = P_ID_CLIENTE;
                        L_ID_TRANSFERENCIA := P_ID_VENTA;
                        L_ID_SALDO := NULL;
                        L_ID_VENTA := NULL;
                    ELSE
                        L_ERROR:=1;
                        L_MSN:='Alto: No existe Documento de Referencia';
--                         GOTO SALIDA_RAPIDA;
                    END IF;
                END IF;
            END IF;
            IF (P_ID_COMPROBANTE_REF IS NOT NULL AND P_ID_COMPROBANTE_REF::text <> '') OR P_ID_COMPROBANTE_REF <> '' THEN
            --ELSE
                IF LENGTH(P_NUMERO_REF) > 8 THEN
                     L_ERROR:=1;
                    L_MSN:='Alto: El documento de Referencia debe tener 8 digitos';
--                     GOTO SALIDA_RAPIDA;
                ELSE
                    L_ID_COMPROBANTE_REF := P_ID_COMPROBANTE_REF;
                    L_SERIE_REF := P_SERIE_REF;
                    L_NUMERO_REF := P_NUMERO_REF;
                END IF;
            END IF;
            IF L_ID_COMPROBANTE_REF <> '01' AND L_ID_COMPROBANTE_REF <> '03' THEN
                IF SUBSTR(L_SERIE_REF,1,1) <> 'B' OR SUBSTR(L_SERIE_REF,1,1) <> 'F' THEN
                    L_ERROR:=1;
                    L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: B100)';
--                     GOTO SALIDA_RAPIDA;
                END IF;
            END IF;
            --IF (L_ID_COMPROBANTE_REF = '03' AND SUBSTR(L_SERIE_REF,1,1) <> 'B') THEN 
            IF (L_ID_COMPROBANTE_REF = '03' AND SUBSTR(L_SERIE_REF,1,1) NOT IN ('B','E')) THEN
                L_ERROR:=1;
                L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: B100)';
--                 GOTO SALIDA_RAPIDA;
            END IF;
            IF (L_ID_COMPROBANTE_REF = '01' AND SUBSTR(L_SERIE_REF,1,1) <> 'F') THEN
                L_ERROR:=1;
                L_MSN:='Alto: El documento de Referencia, no tiene el formarto Correcto: (e.g.: F100)';
--                 GOTO SALIDA_RAPIDA;
            END IF;
            /*IF L_ID_VENTA IS NULL AND P_ID_COMPROBANTE = '08' THEN
                L_ERROR:=1;
                L_MSN:='Alto: La Nota de Debito debe Afectar a un Comprobante';
--                 GOTO SALIDA_RAPIDA;
            END IF;*/
            IF L_ERROR = 0 THEN
                IF P_ID_COMPROBANTE = '07' THEN
                    L_DC := 'C';
                ELSE
                    L_DC := 'D';
                END IF;
                INSERT INTO VENTA(ID_PARENT,ID_ENTIDAD,ID_DEPTO,ID_ANHO,ID_MES,ID_PERSONA,ID_CLIENTE,ID_COMPROBANTE,ID_TIPONOTA,ID_IGV,ID_MONEDA,ID_LEYENDA,ID_TIPOTRANSACCION,ID_TIPOORIGEN,ID_COMPROBANTE_REF,SERIE,SERIE_REF,
                NUMERO,NUMERO_REF,FECHA,GLOSA,AGRUPADO,GRAVADA,INAFECTA,EXONERADA,GRATUITA,DESCUENTO,DESCUENTO_GLOBAL,DESCUENTO_PORCENTAJE,IMPORTE_ADESCONTAR,IGV,TOTAL,ESTADO,ID_TIPOVENTA,ID_SALDO,ID_TRANSFERENCIA,ID_CLIENTE_LEGAL)
                VALUES (
                L_ID_VENTA,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ID_CLIENTE,P_ID_COMPROBANTE,P_ID_TIPONOTA,L_ID_IGV,P_ID_MONEDA,L_ID_LEYENDA,P_ID_TIPOTRANSACCION,L_ID_TIPOORIGEN,L_ID_COMPROBANTE_REF,'-',L_SERIE_REF,
                '-',L_NUMERO_REF,clock_timestamp(),P_GLOSA,'S',0,P_IMPORTE,0,0,0,0,0,0,0,P_IMPORTE,'0',L_ID_TIPOVENTA,L_ID_SALDO,L_ID_TRANSFERENCIA,L_ID_CLIENTE_LEGAL
                ) RETURNING ID_VENTA INTO L_ID_NOTA;

                INSERT INTO VENTA_DETALLE(ID_VENTA,ID_TIPOIGV,ID_DINAMICA,ID_TIPOORIGEN,DETALLE,DC,CANTIDAD,PRECIO,PRECIO_BASE,PRECIO_ALM,BASE,IGV,DESCUENTO,IMPORTE,IMPORTE_ADESCONTAR,DESCUENTO_PORCENTAJE,ITEM)
                VALUES (L_ID_NOTA,L_ID_TIPOIGV,L_ID_DINAMICA,L_ID_TIPOORIGEN,P_GLOSA,L_DC,1,P_IMPORTE,P_IMPORTE,0,P_IMPORTE,0,0,P_IMPORTE,0,0,1)RETURNING ID_VDETALLE INTO L_ID_VDETALLE;

                --INSERTO EL ASIENTO DEL PARENT
                SELECT  
                    COUNT(1) INTO STRICT L_CONT
                FROM CONTA_ASIENTO
                WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN
                AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = L_ID_VENTA);

                IF L_CONT > 0 THEN
                    INSERT INTO VENTA_ASIENTO(ID_VENTA,ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_FONDO,ID_DEPTO,IMPORTE,DESCRIPCION,EDITABLE,DC,AGRUPA,ID_VDETALLE)
                    SELECT  
                    L_ID_NOTA,CUENTA,RESTRICCION,CUENTA_CTE,FONDO,DEPTO,
                    ABS(IMPORTE)*CASE WHEN P_ID_COMPROBANTE='08' THEN CASE WHEN SIGN(IMPORTE)=-1 THEN -1  ELSE 1 END  WHEN P_ID_COMPROBANTE='07' THEN CASE WHEN SIGN(IMPORTE)=-1 THEN 1  ELSE -1 END  END  AS IMPORTE,
                    DESCRIPCION,'S' AS EDITABLE,
                    CASE WHEN P_ID_COMPROBANTE='08' THEN CASE WHEN SIGN(IMPORTE)=-1 THEN 'C'  ELSE 'D' END  WHEN P_ID_COMPROBANTE='07' THEN CASE WHEN SIGN(IMPORTE)=-1 THEN 'D'  ELSE 'C' END  END  AS DC,
                    AGRUPA,L_ID_VDETALLE
                    FROM CONTA_ASIENTO
                    WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN
                    AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = L_ID_VENTA) 
                    ORDER BY DC DESC;
                END IF;
            END IF;

--             <<SALIDA_RAPIDA>>
            P_ERROR := L_ERROR;
            P_MSN := L_MSN;
            P_ID_NOTA := L_ID_NOTA;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_crear_nota_cd_alumnos (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_CLIENTE bigint,P_ID_PERSONA bigint,P_ID_VENTA bigint,P_ID_COMPROBANTE text,P_ID_MONEDA bigint,P_ID_TIPOTRANSACCION bigint, P_ID_COMPROBANTE_REF text, P_SERIE_REF text,P_NUMERO_REF text,P_GLOSA text,P_IMPORTE bigint,P_ID_TIPONOTA text,P_ID_DINAMICA bigint,P_ERROR OUT bigint, P_MSN OUT text,P_ID_NOTA OUT bigint) FROM PUBLIC;
