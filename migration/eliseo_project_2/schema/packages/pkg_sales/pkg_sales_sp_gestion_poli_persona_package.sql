-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_gestion_poli_persona (P_ID_POLITICA bigint,P_DOCUMENTO text,P_CREDITO text, P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        L_ID_PERSONA bigint;
        L_ACTIVO varchar(1);
        L_EXISTE integer;
        L_CANT integer;

        
BEGIN
            L_ACTIVO := '0';
            L_CANT := 0;
            L_EXISTE := 0;
            BEGIN
                SELECT COUNT(A.ID_PERSONA) AS CANT,A.ID_PERSONA INTO STRICT L_EXISTE,L_ID_PERSONA
                FROM MOISES.PERSONA A, MOISES.PERSONA_DOCUMENTO B
                WHERE A.ID_PERSONA = B.ID_PERSONA
                AND B.NUM_DOCUMENTO = P_DOCUMENTO
                GROUP BY A.ID_PERSONA;

            EXCEPTION
                WHEN OTHERS THEN
                P_ERROR:=1;
                P_MSGERROR:= 'PERSONA NO ENCONTRADA';
            END;

            IF L_EXISTE = 0 THEN
                P_ERROR:=1;
                P_MSGERROR:= 'PERSONA NO ENCONTRADA';
            ELSE
                SELECT COUNT(ID_PERSONA) INTO STRICT L_CANT
                FROM VENTA_POLITICA_PERSONA
                WHERE ID_POLITICA = P_ID_POLITICA
                AND ID_PERSONA = L_ID_PERSONA;

                IF L_CANT = 0 THEN
                    INSERT INTO VENTA_POLITICA_PERSONA(ID_POLITICA,ID_PERSONA,FECHA,CREDITO,ACTIVO) VALUES (P_ID_POLITICA,L_ID_PERSONA,clock_timestamp(),P_CREDITO,'1');
                ELSE
                    UPDATE VENTA_POLITICA_PERSONA SET   FECHA = clock_timestamp(),
                                                        CREDITO = P_CREDITO, 
                                                        ACTIVO = '1'
                    WHERE ID_POLITICA = P_ID_POLITICA
                    AND ID_PERSONA = L_ID_PERSONA;
                END IF;
                P_ERROR:=0;
                P_MSGERROR:= 'OK';
            END IF;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_gestion_poli_persona (P_ID_POLITICA bigint,P_DOCUMENTO text,P_CREDITO text, P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
