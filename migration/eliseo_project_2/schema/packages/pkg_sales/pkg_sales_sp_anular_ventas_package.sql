-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_anular_ventas (P_ID_VENTA bigint,P_ERROR OUT bigint, P_MSN OUT text) AS $body$
DECLARE

        L_ID_VOUCHER bigint;
        L_ACTIVO varchar(1);
        L_ACTIVO_T varchar(1);
        L_ID_KARDEX bigint;
        L_ID_ALMACEN bigint;
        L_ID_ARTICULO bigint;
        L_ID_ANHO bigint;
        L_ID_TIPOORIGEN bigint := 1;
        L_ID_ASIENTO bigint;
        L_DATA varchar(255);
        L_ID_COMPROBANTE varchar(2);

        L_ID_DEPOSITO bigint;
        L_ID_VOUCHER_DEP bigint;
        L_ID_TIPOORIGEN_DEP bigint;
        L_CANT bigint;
        L_TIENE_TRANSF varchar(1) :='N';
        L_TIENE_NC varchar(1) := 'N';
        L_ERROR bigint :=0;
        L_MSN varchar(200);
        L_ID_CLIENTE bigint;
        L_ID_TRANSFERENCIA bigint;
        L_ORIGEN_EVENTO integer;

        articulos CURSOR FOR	
        SELECT 
                ID_KARDEX,A.ID_ALMACEN,A.ID_ARTICULO,A.ID_ANHO 
        FROM INVENTARIO_KARDEX A JOIN VENTA_DETALLE B
        ON A.ID_ORIGEN = B.ID_VDETALLE 
        WHERE A.ID_TIPOORIGEN = L_ID_TIPOORIGEN
        AND B.ID_VENTA = P_ID_VENTA;

        asientos CURSOR FOR
        SELECT 
                ID_ASIENTO
        FROM CONTA_ASIENTO A JOIN VENTA_DETALLE B
        ON A.ID_ORIGEN = B.ID_VDETALLE
        WHERE A.ID_TIPOORIGEN = L_ID_TIPOORIGEN
        AND B.ID_VENTA = P_ID_VENTA
        AND A.VOUCHER = L_ID_VOUCHER;

        asientos_dep CURSOR FOR
        SELECT 
                A.ID_ASIENTO
        FROM CONTA_ASIENTO A JOIN CAJA_DEPOSITO B
        ON A.ID_ORIGEN = B.ID_DEPOSITO
        WHERE A.ID_TIPOORIGEN = L_ID_TIPOORIGEN_DEP
        AND A.ID_ORIGEN = L_ID_DEPOSITO
        AND A.VOUCHER = L_ID_VOUCHER_DEP;

        
BEGIN
            SELECT ID_CLIENTE,ID_COMPROBANTE,ID_VOUCHER, 'SERIE: '||SERIE||', NUMERO: '||NUMERO||'GRAVADA: '||GRAVADA||', INAFECTA: '||INAFECTA||', EXONERADA: '||EXONERADA||', DESCUENTO: '||DESCUENTO||', IGV: '||IGV||', TOTAL: '||TOTAL 
            INTO STRICT L_ID_CLIENTE,L_ID_COMPROBANTE,L_ID_VOUCHER, L_DATA
            FROM VENTA WHERE ID_VENTA = P_ID_VENTA;
            SELECT ACTIVO INTO STRICT L_ACTIVO FROM CONTA_VOUCHER  WHERE ID_VOUCHER = L_ID_VOUCHER;
            IF L_ACTIVO = 'S' THEN
                --VALIDA LAS VENTAS Y/O NOTAS
                CALL pkg_sales_sp_anular_transferencia(P_ID_VENTA,L_ERROR,L_MSN);

               RAISE NOTICE ' ANU VNT 01 : %', L_ERROR;
                IF L_ERROR = 0 THEN
                RAISE NOTICE ' ANU VNT 02 : ';
                
                --IF L_TIENE_NC = 'N' THEN
                    --IF L_TIENE_TRANSF = 'N' THEN
                        --ANULA KARDEX
                        OPEN articulos;
                          FETCH articulos INTO L_ID_KARDEX,L_ID_ALMACEN,L_ID_ARTICULO,L_ID_ANHO;
                            WHILE articulos%FOUND LOOP

                                UPDATE INVENTARIO_KARDEX SET CANTIDAD = 0, COSTO_UNITARIO = 0, COSTO_TOTAL = 0
                                WHERE ID_KARDEX = L_ID_KARDEX;

                                UPDATE INVENTARIO_ALMACEN_ARTICULO SET ESTADO = '1'
                                WHERE ID_ALMACEN = L_ID_ALMACEN
                                AND ID_ARTICULO = L_ID_ARTICULO
                                AND ID_ANHO = L_ID_ANHO;

                                FETCH articulos INTO L_ID_KARDEX,L_ID_ALMACEN,L_ID_ARTICULO,L_ID_ANHO;
                            END LOOP;
                        CLOSE articulos;
                        --ANULA ASIENTO DE LA VENTA
                        OPEN asientos;
                          FETCH asientos INTO L_ID_ASIENTO;
                            WHILE asientos%FOUND LOOP

                                UPDATE CONTA_ASIENTO SET IMPORTE = 0, DESCRIPCION = '<< Anulado>>', IMPORTE_ME = 0
                                WHERE ID_ASIENTO = L_ID_ASIENTO;

                                FETCH asientos INTO L_ID_ASIENTO;
                            END LOOP;
                        CLOSE asientos;
                        --ANULAR DEPOSITO
                        SELECT COUNT(1) INTO STRICT L_CANT FROM CAJA_DEPOSITO_DETALLE
                        WHERE ID_VENTA = P_ID_VENTA AND IMPORTE > 0;

                        IF L_CANT > 0 THEN
                        
                            SELECT ID_DEPOSITO INTO STRICT L_ID_DEPOSITO FROM CAJA_DEPOSITO_DETALLE
                            WHERE ID_VENTA = P_ID_VENTA;
                            SELECT ID_VOUCHER,ID_TIPOORIGEN INTO STRICT L_ID_VOUCHER_DEP,L_ID_TIPOORIGEN_DEP
                            FROM CAJA_DEPOSITO
                            WHERE ID_DEPOSITO = L_ID_DEPOSITO;

                            OPEN asientos_dep;
                              FETCH asientos_dep INTO L_ID_ASIENTO;
                                WHILE asientos_dep%FOUND LOOP

                                    UPDATE CONTA_ASIENTO SET IMPORTE = 0, DESCRIPCION = '<< Anulado>>', IMPORTE_ME = 0
                                    WHERE ID_ASIENTO = L_ID_ASIENTO;

                                    FETCH asientos_dep INTO L_ID_ASIENTO;
                                END LOOP;
                            CLOSE asientos_dep;

                            UPDATE CAJA_DEPOSITO_DETALLE SET IMPORTE = 0, IMPORTE_ME = 0
                            WHERE ID_DEPOSITO = L_ID_DEPOSITO;

                            UPDATE CAJA_DEPOSITO SET IMPORTE = 0, IMPORTE_ME = 0, GLOSA = '<< Anulado >>'
                            WHERE ID_DEPOSITO = L_ID_DEPOSITO;
                        END IF;
                        --ANULAR VENTA
                        UPDATE VENTA_DETALLE SET    DETALLE = '<< Anulado>>',CANTIDAD = 0,PRECIO = 0,PRECIO_BASE = 0,PRECIO_ALM = 0,BASE = 0,IGV = 0,DESCUENTO = 0,IMPORTE = 0,IMPORTE_ADESCONTAR = 0,OTROS_CARGOS = 0,
                                                    PRECIO_ME = 0,PRECIO_BASE_ME = 0,PRECIO_ALM_ME = 0,BASE_ME = 0,IGV_ME = 0,DESCUENTO_ME = 0,IMPORTE_ME = 0,OTROS_CARGOS_ME = 0
                        WHERE ID_VENTA = P_ID_VENTA;

                        UPDATE VENTA SET    GLOSA = '<< Anulado>>', GRAVADA = 0,INAFECTA = 0,EXONERADA = 0,GRATUITA = 0,DESCUENTO = 0,IGV = 0,TOTAL = 0,DESCUENTO_GLOBAL = 0,IMPORTE_ADESCONTAR = 0,OTROS_CARGOS = 0,
                                            GRAVADA_ME = 0,INAFECTA_ME = 0,EXONERADA_ME = 0,GRATUITA_ME = 0,DESCUENTO_ME = 0,IGV_ME = 0,TOTAL_ME = 0,DESCUENTO_GLOBAL_ME = 0,IMPORTE_ADESCONTAR_ME = 0,OTROS_CARGOS_ME = 0
                        WHERE ID_VENTA = P_ID_VENTA;

                        --Anula la Incripsion del evento
                        UPDATE JONAS.EVENTO_EQUIPO_TALLER 
                        SET PAGADO ='N'
                        WHERE ID_VENTA = P_ID_VENTA;

                        --Anula Participante
                        SELECT COUNT(B.ID_ORIGEN) INTO STRICT L_CANT
                        FROM CAJA_DEPOSITO A JOIN PAY_ORDEN B ON A.ID_ENTIDAD = B.ID_ENTIDAD 
                        AND A.ID_DEPTO = B.ID_DEPTO 
                        AND A.ID_CLIENTE = B.ID_PERSONA
                        AND A.NRO_OPERACION::text = B.NUM_ORDEN::text
                        JOIN CAJA_DEPOSITO_DETALLE C ON A.ID_DEPOSITO = C.ID_DEPOSITO
                        JOIN VENTA D ON C.ID_VENTA = D.ID_VENTA
                        WHERE B.ID_APLICACION = 24
                        AND D.ID_VENTA = P_ID_VENTA;

                        IF L_CANT > 0 THEN
                        
                            SELECT B.ID_ORIGEN INTO STRICT L_ORIGEN_EVENTO
                            FROM CAJA_DEPOSITO A JOIN PAY_ORDEN B ON A.ID_ENTIDAD = B.ID_ENTIDAD 
                            AND A.ID_DEPTO = B.ID_DEPTO 
                            AND A.ID_CLIENTE = B.ID_PERSONA
                            AND A.NRO_OPERACION::text = B.NUM_ORDEN::text
                            JOIN CAJA_DEPOSITO_DETALLE C ON A.ID_DEPOSITO = C.ID_DEPOSITO
                            JOIN VENTA D ON C.ID_VENTA = D.ID_VENTA
                            WHERE B.ID_APLICACION = 24
                            AND D.ID_VENTA = P_ID_VENTA;

                            UPDATE JONAS.EVENTO_EVENTO_PARTICIPANTE SET ESTADO = '1' WHERE ID_EVENTO_PARTICIPANTE = L_ORIGEN_EVENTO;

                        END IF;

                        
                        UPDATE ARREGLO SET ESTADO = '2',INFO_BACKUP = L_DATA
                        WHERE ID_ORIGEN = P_ID_VENTA
                        AND ID_TIPOORIGEN = L_ID_TIPOORIGEN
                        AND ESTADO = '1';
                        P_ERROR := 0;
                        P_MSN := 'OK: Anulado con Exito';
                    /*ELSE
                        P_ERROR := 1;
                        P_MSN := L_ERROR;
                    END IF;*/
                ELSE
                    P_ERROR := L_ERROR;
                    P_MSN := L_MSN;
                END IF;
            ELSE
                P_ERROR := 1;
                P_MSN := 'El Voucher ya esta CONTABILIZADO';
            END IF;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_anular_ventas (P_ID_VENTA bigint,P_ERROR OUT bigint, P_MSN OUT text) FROM PUBLIC;
