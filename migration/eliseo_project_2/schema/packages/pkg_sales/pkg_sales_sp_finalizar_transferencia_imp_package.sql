-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_finalizar_transferencia_imp (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        L_ID_TRANSFERENCIA bigint;
        l_id_voucher bigint :=0;
        l_serie varchar(5);
        l_correlativo bigint;
        l_numero varchar(15);
        l_error bigint;
        l_msgerror varchar(200):='';
        l_contar bigint;
        l_automatico varchar(2);
        l_estado bigint:=0;
        l_serie_numero varchar(50);
        l_total decimal(10,2);
        L_ID_PERSONA bigint;
        L_ID_TIPOASIENTO varchar(4);

        VENTAS_TRANSF CURSOR FOR
        SELECT ID_TRANSFERENCIA 
        FROM VENTA_TRANSFERENCIA
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_MES = P_ID_MES
        AND ID_PERSONA = P_ID_PERSONA
        AND ESTADO = '0'
        ORDER BY ID_TRANSFERENCIA;

        
BEGIN
            l_error :=0;

            IF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '1' THEN
                L_ID_TIPOASIENTO := 'RV';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '5' THEN
                L_ID_TIPOASIENTO := 'RVJ';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '6' THEN
                L_ID_TIPOASIENTO := 'RVT';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '8' THEN
                L_ID_TIPOASIENTO := 'RVS';
            END IF;

            if l_error=0 then
                SELECT   count(*) into STRICT l_contar FROM CONTA_VOUCHER_CONFIG
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO =P_ID_DEPTO
                AND ID_MODULO = '13'--modulo ventas
                --and ID_TIPOASIENTO='RV' 
                AND ID_TIPOASIENTO = L_ID_TIPOASIENTO
                AND ID_ANHO = P_ID_ANHO
                AND ID_TIPOVOUCHER = 7;

                if l_contar=0 then
                    l_error:=1; --no existe serie y numero del documento
                    l_msgerror:='FINALIZAR TRANSFERENCIA:Falta configurar Voucher de Transferencia'||P_ID_ANHO::text;
                end if;
                if l_error=0 then
                    if l_contar>0  then
                        select AUTOMATICO into STRICT l_automatico
                        from CONTA_VOUCHER_CONFIG  
                        where ID_ENTIDAD=P_ID_ENTIDAD 
                        and ID_DEPTO= P_ID_DEPTO
                        --and ID_TIPOASIENTO='RV' 
                        AND ID_TIPOASIENTO = L_ID_TIPOASIENTO
                        and ID_ANHO=P_ID_ANHO
                        AND ID_TIPOVOUCHER = 7;

                        if l_automatico='S' then 
                            --obtener id del contador para crear el voucher
                            SELECT DISTINCT
                                MAX(A.ID_PERSONA)  INTO STRICT L_ID_PERSONA
                            FROM APS_EMPLEADO A, APS_TRABAJADOR B, APS_CARGO C
                            WHERE A.ID_PERSONA = B.ID_PERSONA
                            AND B.ID_CARGO = C.ID_CARGO
                            AND A.ID_ENTIDAD = P_ID_ENTIDAD
                            AND A.ID_DEPTO LIKE P_ID_DEPTO||'%'
                            AND UPPER(C.NOMBRE) LIKE '%CONTADOR%'
                            AND A.ESTADO = 'A';
                            CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,7,'','S',L_ID_PERSONA,l_id_voucher);
                        end if;
                    end if;
                end if;
                if l_id_voucher=0 then
                    l_error:=2; --no existe voucher
                    l_msgerror:='FINALIZAR TRANSFERENCIA: No existe voucher';
                end if;
            end if;

            OPEN VENTAS_TRANSF;
                FETCH VENTAS_TRANSF INTO L_ID_TRANSFERENCIA;
                WHILE VENTAS_TRANSF%FOUND LOOP

                    IF l_error=0 THEN
                        --GENERAR ASIENTO
                        --pkg_sales_sp_generar_asiento(P_ID_VENTA,l_error,l_msgerror);
                        --obtiene numero y serie y actualiza correlativo
                        CALL pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,'00',P_ID_ENTIDAD
                        ,P_ID_DEPTO, null, l_serie,l_correlativo);
                        IF l_correlativo=0 or coalesce(l_correlativo::text, '') = '' THEN
                            l_error:=1; --no existe serie y numero del documento
                            l_msgerror:='FINALIZAR TRANSFERENCIA: No existe serie y n√∫mero del documento('||l_correlativo||')';
                        END IF;
                        SELECT lpad(l_correlativo::text,8,'0') into STRICT l_numero;

                        
                        IF l_total = 0 THEN 
                            l_error:=2;
                            l_msgerror:='FINALIZAR TRANSFERENCIA: No se puede realizar una Transferencia en 0';
                        ELSE
                            UPDATE VENTA_TRANSFERENCIA SET
                                                            ID_VOUCHER  =   l_id_voucher,
                                                            SERIE       =   l_serie,
                                                            NUMERO      =   l_numero, 
                                                            ESTADO      =   '1'
                            WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;
                        END IF;
                    END IF;
                FETCH VENTAS_TRANSF INTO L_ID_TRANSFERENCIA;
                END LOOP;
            CLOSE VENTAS_TRANSF;
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_finalizar_transferencia_imp (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
