-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_corregir_venta (P_ID_VENTA bigint) AS $body$
DECLARE

        L_ID_VENTA bigint;
        L_ID_COMPROBANTE varchar(2);
        L_IGV decimal(10,2);
        L_GRAVADA decimal(10,2);
        L_INAFECTA decimal(10,2);
        L_EXONERADA decimal(10,2);
        L_GRATUITA decimal(10,2);
        L_DESCUENTO decimal(10,2);
        L_TOTAL decimal(10,2);
        L_ID_VDETALLE bigint;
        L_BASE_D decimal(10,2);
        L_IGV_D decimal(10,2);

        CAB CURSOR FOR
        SELECT ID_VENTA,ID_COMPROBANTE FROM (
        SELECT A.SERIE,A.NUMERO,A.FECHA,A.ID_COMPROBANTE,
        A.ID_VENTA,A.GRAVADA,A.INAFECTA,A.EXONERADA,A.GRATUITA,A.DESCUENTO,A.IGV,A.TOTAL,A.OTROS_CARGOS,
        SUM(CASE B.ID_TIPOIGV WHEN '10' THEN B.BASE ELSE 0 END) AS BG,
        SUM(CASE B.ID_TIPOIGV WHEN '20' THEN B.BASE ELSE 0 END) AS BI,
        SUM(CASE B.ID_TIPOIGV WHEN '30' THEN B.BASE ELSE 0 END) AS BE,
        SUM(B.BASE) AS BASE,SUM(B.IGV) IGVS,
        SUM(B.IMPORTE) IMP,
        SUM(B.OTROS_CARGOS) OT,
        SUM(B.IMPORTE)-A.TOTAL AS DIF,
        ABS(round((SUM(CASE B.ID_TIPOIGV WHEN '10' THEN B.BASE ELSE 0 END)*0.18)::numeric,2)-SUM(B.IGV)) DIFX
        FROM VENTA A JOIN VENTA_DETALLE B
        ON A.ID_VENTA = B.ID_VENTA 
        WHERE  --A.ID_VENTA = 3500
        --AND 
        ESTADO = '1'
        GROUP BY A.SERIE,A.NUMERO,A.FECHA,A.ID_COMPROBANTE,A.ID_VENTA,A.GRAVADA,A.INAFECTA,A.EXONERADA,A.GRATUITA,A.DESCUENTO,A.IGV,A.TOTAL,A.OTROS_CARGOS
        --HAVING SUM(CASE B.ID_TIPOIGV WHEN '10' THEN B.BASE ELSE 0 END) <> A.GRAVADA
        HAVING round((SUM(CASE B.ID_TIPOIGV WHEN '10' THEN B.BASE ELSE 0 END)*0.18)::numeric,2)<>SUM(B.IGV) 
        ) alias17  WHERE SERIE <> 'B130'
        AND DIFX > 0.03
        ORDER BY ID_VENTA;

        DET CURSOR FOR
        SELECT ID_VDETALLE,
               COALESCE((CASE WHEN T.GRAVADO IN ('G') THEN round((D.IMPORTE/1.18)::numeric,2) WHEN T.GRAVADO IN ('I') THEN D.BASE WHEN T.GRAVADO IN ('E') THEN D.BASE ELSE 0 END),0) AS BASE,
               COALESCE((CASE WHEN T.GRAVADO IN ('G') THEN COALESCE(D.IMPORTE-(round((D.IMPORTE/1.18)::numeric,2)),0) ELSE 0 END),0) AS IGV
        FROM  VENTA_DETALLE D,TIPO_IGV T
        WHERE D.ID_TIPOIGV=T.ID_TIPOIGV
        AND D.ID_VENTA= L_ID_VENTA;

        
BEGIN
        
            OPEN CAB;
            FETCH CAB INTO L_ID_VENTA,L_ID_COMPROBANTE;
                WHILE CAB%FOUND LOOP

                    --CALCULA DETALLE DE LA VENTA
                    OPEN DET;
                        FETCH DET INTO L_ID_VDETALLE,L_BASE_D,L_IGV_D;
                        WHILE DET%FOUND LOOP

                            UPDATE VENTA_DETALLE SET BASE = L_BASE_D, IGV = L_IGV_D
                            WHERE ID_VDETALLE = L_ID_VDETALLE;

                            FETCH DET INTO L_ID_VDETALLE,L_BASE_D,L_IGV_D;
                        END LOOP;
                    CLOSE DET;

                    --ACTUALIZA CABECERA DE LA VENTA
                    SELECT
                            COALESCE(SUM(CASE WHEN T.GRAVADO IN ('G') THEN D.BASE ELSE 0 END),0) AS GRAVADA, 
                            COALESCE(SUM(CASE WHEN T.GRAVADO IN ('I') THEN D.BASE ELSE 0 END),0) AS INAFECTA,
                            COALESCE(SUM(CASE WHEN T.GRAVADO IN ('E') THEN D.BASE ELSE 0 END),0) AS EXONERADO,
                            COALESCE(SUM(CASE WHEN D.ID_TIPOIGV IN ('21') THEN D.BASE ELSE 0 END),0) AS GRATUITA,
                            COALESCE(SUM(D.DESCUENTO),0),
                            COALESCE(SUM(D.IGV),0), 
                            COALESCE(SUM(D.IMPORTE),0)
                            INTO STRICT
                            L_GRAVADA,L_INAFECTA,L_EXONERADA,L_GRATUITA,L_DESCUENTO,L_IGV,L_TOTAL
                    FROM  VENTA_DETALLE D,TIPO_IGV T
                    WHERE D.ID_TIPOIGV=T.ID_TIPOIGV
                    AND D.ID_VENTA=L_ID_VENTA;

                    UPDATE VENTA SET
                                    GRAVADA=L_GRAVADA, 
                                    INAFECTA=L_INAFECTA, 
                                    EXONERADA=L_EXONERADA, 
                                    GRATUITA=L_GRATUITA, 
                                    DESCUENTO=L_DESCUENTO, 
                                    IGV=L_IGV
                                   -- TOTAL=l_total
                    WHERE ID_VENTA=L_ID_VENTA;

                    --GENERAMOS EL ASIENTO
                    CALL pkg_sales_sp_re_genera_asiento_sales(L_ID_VENTA);

                    --VENTA ELECTRONICA
                    DELETE FROM VENTA_ELECTRONICA
                    WHERE ORIGENID = L_ID_VENTA;

                    DELETE FROM UPEU_COMPROBANTE@DBL_ARON_APP
                    WHERE ORIGENID = L_ID_VENTA::text;

                    CALL pkg_sales_sp_venta_electronica(L_ID_VENTA,L_ID_COMPROBANTE);
                    FETCH CAB INTO L_ID_VENTA,L_ID_COMPROBANTE;

                END LOOP;
            CLOSE CAB;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_corregir_venta (P_ID_VENTA bigint) FROM PUBLIC;
