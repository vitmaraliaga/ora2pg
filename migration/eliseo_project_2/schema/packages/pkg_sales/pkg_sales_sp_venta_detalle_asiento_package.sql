-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_venta_detalle_asiento (P_ID_VENTA bigint,P_DETALLE text,P_DC text,P_IMPORTE bigint,P_ID_CUENTAAASI text,P_ID_RESTRICCION text,P_ID_CTACTE text,P_ID_FONDO text,P_ID_DEPTO text,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_TIPOORIGEN bigint := 1;
        L_ID_TIPOIGV varchar(2) := '30'; --VENTA INAFECTA
        L_CANTIDAD bigint := 1;
        L_IGV decimal(10,2) := 0;
        L_DESCUENTO decimal(10,2) := 0;
        L_EDITABLE varchar(1) :='S';
        L_AGRUPA varchar(1) :='N';
        L_DC varchar(1);
        L_DETALLE varchar(120);
        L_ID_CUENTAAASI varchar(20);
        L_ID_RESTRICCION varchar(20);
        L_ID_CTACTE varchar(50);
        L_ID_FONDO bigint;
        L_ID_DEPTO varchar(10);
        L_IMPORTE decimal(10,2);
        L_CONT bigint;
        L_IMPORTE_D decimal(10,2);
        L_IMPORTE_C decimal(10,2);
        L_ID_VDETALLE bigint;

        CURSOR_CASIENTOS CURSOR FOR 
        SELECT ID_FONDO, ID_DEPTO, ID_CUENTAAASI, ID_CTACTE, ID_RESTRICCION, IMPORTE, SUBSTR(DESCRIPCION,0,49), AGRUPA FROM VENTA_ASIENTO WHERE ID_VENTA = P_ID_VENTA;

        L_ERROR bigint :=0;
        L_MSGERROR varchar(100) :='';

BEGIN
        IF coalesce(P_IMPORTE,0) = 0 THEN
            L_ERROR := 1;
            L_MSGERROR := 'ERROR: El Importe debe ser Diferente de 0';
--             GOTO SALIDA_RAPIDA;
        END IF;

        SELECT COUNT(1) INTO STRICT L_CONT FROM VENTA_ASIENTO WHERE ID_VENTA = P_ID_VENTA AND IMPORTE = 0 AND AGRUPA = 'G';

        IF L_CONT = 0 THEN
            L_ERROR := 1;
            L_MSGERROR := 'ERROR: No Existe Asiento Automatico';
--             GOTO SALIDA_RAPIDA;
        END IF;

        /*IF P_DC = 'C' THEN
            L_DC := 'D';
            L_DESCUENTO := P_IMPORTE;
            L_AGRUPA := 'S';
            L_IMPORTE := P_IMPORTE*(-1);
        ELSE
            L_DC := 'C';
            L_IMPORTE := P_IMPORTE;
        END IF;*/
        
        IF P_DC = 'D' THEN
            L_DC := 'C';
            L_AGRUPA := 'S';
            L_IMPORTE := P_IMPORTE*(-1);
            L_IMPORTE_D := P_IMPORTE;
            L_IMPORTE_C := P_IMPORTE*(-1);
        ELSE
            L_DC := 'D';
            L_IMPORTE := P_IMPORTE;
            L_DESCUENTO := P_IMPORTE;
            L_IMPORTE_D := P_IMPORTE*(-1);
            L_IMPORTE_C := P_IMPORTE;
        END IF;
        INSERT INTO  VENTA_DETALLE(ID_VENTA,ID_TIPOIGV,DETALLE,DC,CANTIDAD,PRECIO,PRECIO_BASE,BASE,IGV,DESCUENTO,IMPORTE,ID_TIPOORIGEN)
        VALUES (P_ID_VENTA,L_ID_TIPOIGV,P_DETALLE,P_DC,L_CANTIDAD,P_IMPORTE,P_IMPORTE,P_IMPORTE,L_IGV,L_DESCUENTO,P_IMPORTE,L_ID_TIPOORIGEN) RETURNING ID_VDETALLE INTO L_ID_VDETALLE;

        --INSERTA EL DEBITO - SEMI-AUTOMATICO
        SELECT GLOSA INTO STRICT L_DETALLE FROM VENTA
        WHERE ID_VENTA = P_ID_VENTA;
        --ASIENTO SEMI-AUTOMATICO
        SELECT
            ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_FONDO,ID_DEPTO INTO STRICT
            L_ID_CUENTAAASI,L_ID_RESTRICCION,L_ID_CTACTE,L_ID_FONDO,L_ID_DEPTO
        FROM VENTA_ASIENTO
        WHERE ID_VENTA = P_ID_VENTA
        AND IMPORTE = 0
        AND AGRUPA = 'G';
        --INSERTA EL DEBITO
        INSERT INTO VENTA_ASIENTO(ID_VENTA,ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_FONDO,ID_DEPTO,IMPORTE,DESCRIPCION,EDITABLE,DC,AGRUPA,ID_VDETALLE)
        VALUES (P_ID_VENTA,L_ID_CUENTAAASI,L_ID_RESTRICCION,L_ID_CTACTE,L_ID_FONDO,L_ID_DEPTO,L_IMPORTE_D,L_DETALLE,'N',P_DC,'S',L_ID_VDETALLE);

        --INSERTTA EL CREDITO
        INSERT INTO VENTA_ASIENTO(ID_VENTA,ID_CUENTAAASI,ID_RESTRICCION,ID_CTACTE,ID_FONDO,ID_DEPTO,IMPORTE,DESCRIPCION,EDITABLE,DC,AGRUPA,ID_VDETALLE)
        VALUES (P_ID_VENTA,P_ID_CUENTAAASI,P_ID_RESTRICCION,P_ID_CTACTE,P_ID_FONDO,P_ID_DEPTO,L_IMPORTE_C,P_DETALLE,L_EDITABLE,L_DC,'N',L_ID_VDETALLE);

--         <<SALIDA_RAPIDA>>
        P_ERROR := L_ERROR;
        P_MSGERROR := L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_venta_detalle_asiento (P_ID_VENTA bigint,P_DETALLE text,P_DC text,P_IMPORTE bigint,P_ID_CUENTAAASI text,P_ID_RESTRICCION text,P_ID_CTACTE text,P_ID_FONDO text,P_ID_DEPTO text,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
