-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_sp_serv_genasiento_nota (P_ID_VENTA bigint, P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


        l_id_entidad bigint;
        l_id_depto_venta varchar(20);

        --l_id_cliente numeric;
        l_memo varchar(255);
        l_id_voucher bigint;
        l_serie varchar(255);
        l_numero varchar(255);
        l_glosa varchar(255);

        -- Datos del detalle
        l_id_vdetalle bigint;
        l_dinamica bigint;
        l_id_tipoorigen bigint;
        l_detalle varchar(255);
        l_base bigint;
        l_igv bigint;
        l_descuento bigint;
        l_importe bigint;
        l_precio_almacen bigint;
        l_id_articulo bigint;

        -- l_id_venta numeric;
        -- l_id_vdetalle_ref numeric;
        -- l_id_tipoorigen_vdetalle numeric;
        -- l_ddc varchar(1);
        
        -- Datos de los asientos de la dinamica
        l_id_asiento bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_unicoctate varchar(1);
        l_porcentaje decimal(10,2);
        l_descripcion varchar(255);
        l_agrupa varchar(1);

        l_importeasiento decimal(10,2);
        l_importeasiento_me decimal(10,2);
        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_fondo varchar(10);

        l_id_cliente bigint;
        l_comprobante varchar(10);
        l_id_parent bigint;
        l_ddc varchar(10);
        -- Validación
        l_cont bigint;

        l_id_tipoorigen_vdetalle bigint;
        l_id_vdetalle_ref bigint;

        
        CURSOR_VENTA_DETALLE CURSOR FOR		
        SELECT ID_VDETALLE, ID_DINAMICA,ID_TIPOORIGEN, DETALLE,BASE,IGV,DESCUENTO,IMPORTE,coalesce(CANTIDAD,1)*PRECIO_ALM, ID_ARTICULO
        --DESCUENTO,IMPORTE,NVL(CANTIDAD,1)*PRECIO_ALM 
        FROM VENTA_DETALLE
        WHERE ID_VENTA=P_ID_VENTA
        ORDER BY ID_VDETALLE;		

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =l_dinamica
        ORDER BY a.NRO_ASIENTO,a.DC desc;

       l_id_anho_parent bigint := 0;

        l_error bigint :=0;
        l_msgerror varchar(100) :='';

BEGIN
        
        SELECT ID_ENTIDAD, ID_DEPTO, ID_VOUCHER, SERIE, NUMERO, GLOSA, ID_CLIENTE, ID_COMPROBANTE, ID_PARENT
            INTO STRICT l_id_entidad, l_id_depto_venta, l_id_voucher, l_serie, l_numero, l_glosa, l_id_cliente, l_comprobante, l_id_parent
        FROM VENTA WHERE ID_VENTA = P_ID_VENTA;

        
        OPEN CURSOR_VENTA_DETALLE;
        FETCH CURSOR_VENTA_DETALLE INTO l_id_vdetalle,l_dinamica, l_id_tipoorigen,l_detalle, l_base,l_igv,l_descuento, l_importe,l_precio_almacen, l_id_articulo;
        WHILE CURSOR_VENTA_DETALLE%FOUND LOOP
            SELECT (l_id_tipoorigen::text || '-' || l_id_vdetalle::text) INTO STRICT l_memo;

            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            WHILE casi%FOUND LOOP
                select (case when l_id_indicador='IMPORTE' then l_importe
                      else 0 end)*(l_porcentaje)  into STRICT l_importeasiento
;
                l_importeasiento_me := 0;

                if l_comprobante='08' OR  l_comprobante='88' THEN
                    l_ddc := 'C';
                ELSE
                    l_ddc := 'D';
                END IF;

                l_depto:=null;
                l_cuenta_cte:=null;

                if l_unico='U' then
                    select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif (l_unico='X') then
                    -- select pkg_sales_fc_depto_cliente_colegios(l_id_cliente) into l_depto from dual;
                    select pkg_sales_school_fc_depto_alumno_school(l_id_cliente, l_id_depto_venta) into STRICT l_depto;
                elsif l_unico='S' THEN  -- Si es sesión
                    l_depto := l_id_depto_venta;---
                end if;

                if l_unicoctate='U' then
                    select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                end if;

                if l_ddc='C' then
                  -- l_importeasiento:=l_importeasiento;
                  l_importeasiento:=l_importeasiento*(-1);
                -- else
                end if;

                select count(*) into STRICT l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=l_id_vdetalle
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'C' else 'D' end=l_ddc;

               
                 if l_importeasiento<>0 then
                
                  if l_cont=0 then
                   
                    INSERT INTO CONTA_ASIENTO(
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    REF_ID,
                    AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    l_id_vdetalle,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Nota: '||l_serie||'-'||l_numero||')-'||l_glosa,
                    l_memo,
                    l_id_voucher,
                    null,
                    null,
                    l_agrupa 
                    );
                  else

                    update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=l_id_vdetalle
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'C' else 'D' end=l_ddc;

                  end if;
                end if;

                FETCH casi INTO l_id_asiento,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
            END LOOP;
            CLOSE casi;

            -- CONTRA PARTIDA.
            l_importeasiento := l_importeasiento*-1;

            -- l_error := 1;
            -- l_msgerror := P_ID_VENTA;
            -- goto salida_rapida;
            
            RAISE NOTICE 'l_id_parent %', l_id_parent;
            RAISE NOTICE 'l_id_articulo %', l_id_articulo;

            SELECT ID_ANHO INTO STRICT l_id_anho_parent FROM venta WHERE ID_VENTA=l_id_parent;

            IF l_id_anho_parent = to_char(clock_timestamp(), 'YYYY') THEN 
                SELECT ID_TIPOORIGEN, ID_VDETALLE INTO STRICT l_id_tipoorigen_vdetalle, l_id_vdetalle_ref FROM VENTA_DETALLE WHERE ID_VENTA=l_id_parent AND ID_ARTICULO=l_id_articulo  LIMIT 1;
            ELSE
            	SELECT ID_TIPOORIGEN, ID_VDETALLE INTO STRICT l_id_tipoorigen_vdetalle, l_id_vdetalle_ref FROM VENTA_DETALLE WHERE ID_VENTA=l_id_parent  LIMIT 1;
            END IF;

            RAISE NOTICE 'l_id_tipoorigen_vdetalle %', l_id_tipoorigen_vdetalle;
           RAISE NOTICE 'l_id_vdetalle_ref %', l_id_vdetalle_ref;
            SELECT CUENTA, FONDO, DEPTO, CUENTA_CTE, RESTRICCION, AGRUPA INTO STRICT l_id_cuentaaasi, l_fondo, l_depto, l_cuenta_cte, l_id_restriccion, l_agrupa
            FROM CONTA_ASIENTO WHERE ID_TIPOORIGEN = l_id_tipoorigen_vdetalle AND ID_ORIGEN=l_id_vdetalle_ref AND PRIMARIO='S'  LIMIT 1;

            select pkg_sales_school_fc_depto_alumno_school(l_id_cliente, l_id_depto_venta) into STRICT l_depto;

            INSERT INTO CONTA_ASIENTO(
                    ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                    CUENTA_CTE, RESTRICCION, IMPORTE, DESCRIPCION,
                    MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA
                    )VALUES ( 
                    l_id_tipoorigen,
                    l_id_vdetalle,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Nota: '||l_serie||'-'||l_numero||')-'||l_glosa,
                    l_memo,
                    l_id_voucher,
                    null,
                    null,
                    l_agrupa 
                    );

            FETCH CURSOR_VENTA_DETALLE INTO l_id_vdetalle,l_dinamica, l_id_tipoorigen,l_detalle, l_base,l_igv,l_descuento, l_importe,l_precio_almacen, l_id_articulo;
        END LOOP;
        CLOSE CURSOR_VENTA_DETALLE;
        
--         <<salida_rapida>>
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_sp_serv_genasiento_nota (P_ID_VENTA bigint, P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
