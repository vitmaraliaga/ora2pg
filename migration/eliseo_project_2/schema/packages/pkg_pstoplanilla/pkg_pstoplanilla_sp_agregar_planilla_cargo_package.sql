-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_pstoplanilla,public;

        
        /*PROCEDURE SP_GENERAR_PLANILLA(P_ID_ENTIDAD numeric,P_ID_ANHO numeric,P_ID_DEPTO varchar,P_ID_DEPTO_PADRE IN numeric,P_ID_AUXILIAR IN numeric,P_ERROR OUT numeric,P_MSGERROR out varchar) IS
          l_error numeric:=0;
          l_msgerror varchar(200):='';
          l_contar numeric;
          l_id_persona numeric;
          l_id_contrato numeric;
          l_id_tipoestatus numeric;
          l_anho numeric;
          l_mes numeric;
          
          CURSOR cur IS SELECT 
              ID_PERSONA,ID_CONTRATO,ID_TIPOESTATUS
              FROM APS_PLANILLA 
              WHERE ID_ENTIDAD=P_ID_ENTIDAD
              AND ID_DEPTO=P_ID_DEPTO
              AND ID_ANHO=l_anho
              AND ID_MES=l_mes;
              
        BEGIN
          
          select IMPORTE INTO l_anho from PSTO_PLLA_PARAMETROS_VALOR WHERE ID_PARAMETRO='PARAM_ANHOPROC' AND ID_ANHO=P_ID_ANHO;
          
          select IMPORTE INTO l_mes from PSTO_PLLA_PARAMETROS_VALOR WHERE ID_PARAMETRO='PARAM_MESPROC' AND ID_ANHO=P_ID_ANHO;
          
          OPEN cur;
          FETCH cur INTO l_id_persona,l_id_contrato,l_id_tipoestatus;
                
          WHILE cur%FOUND LOOP
          
            SELECT COUNT(*) INTO l_contar
            FROM PSTO_PLLA_PLANILLA 
            WHERE ID_ENTIDAD=P_ID_ENTIDAD
            AND ID_PERSONA=l_id_persona
            AND ID_ANHO=P_ID_ANHO;
            
            if l_contar=0 then  
              
              pkg_pstoplanilla_sp_agregar_empleado(P_ID_ENTIDAD,P_ID_ANHO,l_id_persona,l_id_contrato,P_ID_DEPTO,P_ID_DEPTO_PADRE,P_ID_AUXILIAR ,l_id_tipoestatus,l_error,l_msgerror);
              
              IF l_error=1 THEN
                EXIT;
              END IF;
              
            END IF ;  
            
            FETCH cur INTO l_id_persona,l_id_contrato,l_id_tipoestatus;
                  
        END LOOP;   
        CLOSE cur;
        
        
        PKG_PSTOPLANILLA.SP_GENERAR_AYUDA_MOVLIBDIS(P_ID_ENTIDAD,P_ID_DEPTO_PADRE,P_ID_ANHO, P_ID_AUXILIAR,l_error,l_msgerror);
        
        
        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;
        END SP_GENERAR_PLANILLA;
        
        */
        
        /*PROCEDURE SP_GENERAR_PLANILLA_CARGO(P_ID_ENTIDAD numeric,P_ID_ANHO numeric,P_ID_DEPTO varchar,P_ID_DEPTO_PADRE IN numeric,P_ID_AUXILIAR IN numeric,P_ERROR OUT numeric,P_MSGERROR out varchar) IS
          l_error numeric:=0;
          l_msgerror varchar(200):='';
          l_contar numeric;
          l_anho numeric;
          l_mes numeric;
          
          l_id_cargo_proceso numeric;

              
        BEGIN
          
          select IMPORTE INTO l_anho from PSTO_PLLA_PARAMETROS_VALOR WHERE ID_PARAMETRO='PARAM_ANHOPROC' AND ID_ANHO=P_ID_ANHO;
          
          select IMPORTE INTO l_mes from PSTO_PLLA_PARAMETROS_VALOR WHERE ID_PARAMETRO='PARAM_MESPROC' AND ID_ANHO=P_ID_ANHO;
          
          SELECT COALESCE(MAX(ID_CARGO_PROCESO),0) INTO l_contar FROM PSTO_PLLA_CARGO_PROCESO;
          
          insert into PSTO_PLLA_CARGO_PROCESO(
            ID_CARGO_PROCESO, 
            ID_ANHO,
            ID_ENTIDAD,
            ID_DEPTO,
            ID_DEPTO_PADRE,
            ID_CARGO,
            CANTIDAD
          )
          SELECT
          ROWNUM + l_contar AS ID_CARGO_PROCESO,
          P_ID_ANHO,
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_DEPTO_PADRE,
          X.ID_CARGO,
          X.CANTIDAD
          FROM(
          SELECT 
          COALESCE(a.ID_CARGO,p.ID_CARGO) AS ID_CARGO,
          COUNT(*) AS CANTIDAD
          FROM APS_PLANILLA a, APS_TRABAJADOR p
          WHERE a.ID_PERSONA=P.ID_PERSONA
          AND a.ID_ENTIDAD=P_ID_ENTIDAD
          AND a.ID_ANHO=l_anho
          AND a.ID_MES=l_mes
          AND a.ID_DEPTO=P_ID_DEPTO
          AND COALESCE(a.ID_CARGO,p.ID_CARGO) NOT IN(
            SELECT ID_CARGO FROM PSTO_PLLA_CARGO_PROCESO
            WHERE ID_ENTIDAD=P_ID_ENTIDAD
            AND  ID_DEPTO=P_ID_DEPTO
            AND  ID_DEPTO_PADRE=P_ID_DEPTO_PADRE
            AND  ID_ANHO=P_ID_ANHO
          )
          GROUP BY 
          COALESCE(a.ID_CARGO,p.ID_CARGO)
          ORDER BY COALESCE(a.ID_CARGO,p.ID_CARGO)
         )X;
        
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;
        END SP_GENERAR_PLANILLA_CARGO;
        */
CREATE OR REPLACE PROCEDURE eliseo.pkg_pstoplanilla_sp_agregar_planilla_cargo (P_ID_CARGOSUELDO_ESCALA bigint,P_ID_DEPTO text,P_ID_RENOVABLE text,P_ID_SEXO bigint,P_ID_EDAD text,P_ID_NIVEL_EDU text,P_ID_TIPOESTADOCIVIL bigint,P_ID_TIEMPOTRABAJO bigint,P_ID_TEMPORADA text,P_CANTIDAD bigint,P_ID_CARGO_PROCESO out bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

          l_error bigint:=0;
          l_msgerror varchar(200):='';
          l_contar bigint;
          l_id_anho bigint;
          l_id_entidad bigint;
          l_id_depto varchar(10);
          l_id_depto_padre varchar(10);
          l_id_cargo bigint;
          l_id_renovable varchar(10);
          l_id_sexo bigint;
          l_id_edad varchar(10);
          l_id_nivel_edu varchar(10);
          l_id_tipoestadocivil bigint;
          l_id_tiempotrabajo bigint;
          l_id_temporada varchar(10);
          l_id_condicion_escala varchar(10);

          l_id_cargo_proceso bigint;


BEGIN
        
            l_id_depto:=P_ID_DEPTO;

            SELECT 
            ID_ANHO,
            ID_ENTIDAD,
            ID_DEPTO_PADRE,
            ID_CARGO,
            ID_CONDICION_ESCALA
            INTO STRICT 
            l_id_anho,
            l_id_entidad,
            l_id_depto_padre,
            l_id_cargo,
            l_id_condicion_escala
          FROM PSTO_PLLA_CARGOSUELDO_ESCALA
          WHERE ID_CARGOSUELDO_ESCALA=P_ID_CARGOSUELDO_ESCALA;

            SELECT 
                    COUNT(*) INTO STRICT l_contar
            FROM PSTO_PLLA_CARGO_PROCESO
            WHERE ID_ANHO=l_id_anho
            AND ID_ENTIDAD=l_id_entidad
            AND ID_DEPTO=l_id_depto
            AND ID_DEPTO_PADRE=l_id_depto_padre
            AND ID_CARGO=l_id_cargo
            AND coalesce(ID_RENOVABLE,'-')=P_ID_RENOVABLE
            AND coalesce(ID_SEXO,0)=P_ID_SEXO
            AND coalesce(ID_EDAD,'-')=P_ID_EDAD
            AND coalesce(ID_NIVEL_EDU,'-')=P_ID_NIVEL_EDU
            AND coalesce(ID_TIPOESTADOCIVIL,0)=P_ID_TIPOESTADOCIVIL
            AND coalesce(ID_TIEMPOTRABAJO,0)=P_ID_TIEMPOTRABAJO
            AND coalesce(ID_TEMPORADA,'-')=P_ID_TEMPORADA
            and ID_CARGOSUELDO_ESCALA=P_ID_CARGOSUELDO_ESCALA;

           IF l_contar=0 THEN 
          
          
            l_id_renovable:=P_ID_RENOVABLE;
            IF P_ID_RENOVABLE='-' THEN
              l_id_renovable:=NULL;
            END IF;

            l_id_sexo:=P_ID_SEXO;
            IF P_ID_SEXO=0 THEN
              l_id_sexo:=NULL;
            END IF;

            l_id_edad:=P_ID_EDAD;
            IF P_ID_EDAD='-' THEN
              l_id_edad:=NULL;
            END IF;

            l_id_nivel_edu:=P_ID_NIVEL_EDU;
            IF P_ID_NIVEL_EDU='-' THEN
              l_id_nivel_edu:=NULL;
            END IF;

            l_id_tipoestadocivil:=P_ID_TIPOESTADOCIVIL;
            IF P_ID_TIPOESTADOCIVIL=0 THEN
              l_id_tipoestadocivil:=NULL;
          END IF;

          l_id_tiempotrabajo:=P_ID_TIEMPOTRABAJO;
          IF P_ID_TIEMPOTRABAJO=0 THEN
            l_id_tiempotrabajo:=NULL;
          END IF;

          l_id_temporada:=P_ID_TEMPORADA;
          IF P_ID_TEMPORADA='-' THEN
            l_id_temporada:=NULL;
          END IF;

          if l_id_condicion_escala='M' then
            if l_id_renovable<>'R3' then
              l_error:=1;
              l_msgerror:='Dato renovable no Corresponde';
            else
              if l_id_temporada<>'T1' then
                l_error:=1;
                l_msgerror:='Dato Temporada no Corresponde';
              else
                if l_id_tiempotrabajo<>1 then
                  l_error:=1;
                  l_msgerror:='Dato Tiempo Trabajo no Corresponde';
                end if;
              end if;
            end if;

          end if;

          if l_error=0 then
            if l_id_renovable='R3' then
              if l_id_temporada<>'T1' then
                l_error:=1;
                l_msgerror:='Dato Temporada no Corresponde';
              else
                if l_id_tiempotrabajo<>1 then
                  l_error:=1;
                  l_msgerror:='Dato Tiempo Trabajo no Corresponde';
                end if;
              end if;
            end if;
          end if;

          if l_error=0 then
            SELECT COALESCE(MAX(ID_CARGO_PROCESO),0)+1 INTO STRICT l_id_cargo_proceso FROM PSTO_PLLA_CARGO_PROCESO;

            INSERT INTO PSTO_PLLA_CARGO_PROCESO(
              ID_CARGO_PROCESO,
              ID_ANHO,
              ID_ENTIDAD,
              ID_DEPTO,
              ID_DEPTO_PADRE,
              ID_CARGO,
              ID_RENOVABLE,
              ID_SEXO,
              ID_EDAD,
              ID_NIVEL_EDU,
              ID_TIPOESTADOCIVIL,
              ID_TIEMPOTRABAJO,
              ID_TEMPORADA,
              CANTIDAD,
              ID_CARGOSUELDO_ESCALA
            )values (
              l_id_cargo_proceso,
              l_id_anho,
              l_id_entidad,
              l_id_depto,
              l_id_depto_padre,
              l_id_cargo,
              l_id_renovable,
              l_id_sexo,
              l_id_edad,
              l_id_nivel_edu,
              l_id_tipoestadocivil,
              l_id_tiempotrabajo,
              l_id_temporada,
              P_CANTIDAD,
              P_ID_CARGOSUELDO_ESCALA
            );
        end if;
         
        else
          l_error:=1;
          l_msgerror:='Ya esta registrado';
        end if;
          P_ID_CARGO_PROCESO:=l_id_cargo_proceso;
          P_ERROR:=l_error;
          P_MSGERROR:=l_msgerror;

        END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_pstoplanilla_sp_agregar_planilla_cargo (P_ID_CARGOSUELDO_ESCALA bigint,P_ID_DEPTO text,P_ID_RENOVABLE text,P_ID_SEXO bigint,P_ID_EDAD text,P_ID_NIVEL_EDU text,P_ID_TIPOESTADOCIVIL bigint,P_ID_TIEMPOTRABAJO bigint,P_ID_TEMPORADA text,P_CANTIDAD bigint,P_ID_CARGO_PROCESO out bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
