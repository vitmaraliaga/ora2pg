-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_actualizar_vale (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TIPOVALE integer, P_ID_DINAMICA integer,P_ID_MEDIOPAGO text,P_ID_CTABANCARIA bigint,P_NUMERO text,P_ID_CHEQUERA bigint,P_ID_VOUCHER bigint,P_ID_PERSONA bigint,P_ID_EMPLEADO bigint, P_ID_CUENTAAASI text, P_ID_MONEDA integer, P_TIPOCAMBIO bigint, P_FECHA timestamp(0), P_IMPORTE bigint, P_IMPORTE_ME bigint, P_DETALLE text,P_CELULAR text, P_EMAIL text, P_ID_VALE INOUT bigint ,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

        L_ID_CTABANCARIA bigint;
        L_ID_CHEQUERA bigint;
        L_ID_VALE bigint:=0;

        L_NRO_VALE bigint:=0;

        l_error bigint:=0;
        l_msgerror varchar(200):='';

    
BEGIN
        -- l_error := 1;
        -- l_msgerror := P_ID_VALE;
        if P_ID_CTABANCARIA = '' or P_ID_CTABANCARIA = 0  then
            L_ID_CTABANCARIA := null;
        else
            L_ID_CTABANCARIA := P_ID_CTABANCARIA;
        end if;

         if P_ID_CHEQUERA = '' or P_ID_CHEQUERA = 0  then
            L_ID_CHEQUERA := null;
        else
            L_ID_CHEQUERA := P_ID_CHEQUERA;
        end if;

        --L_NUMERO := P_ID_ENTIDAD || '-' || ID_DEPTO  || '-' ||
        
        IF l_error = 0 THEN
        
            IF P_ID_VALE=0 THEN
                
                --SELECT NVL(MAX(ID_VALE),0)+1 INTO L_ID_VALE FROM CAJA_VALE;
                
                SELECT (COUNT(*)+1) INTO STRICT L_NRO_VALE FROM CAJA_VALE WHERE ID_ENTIDAD=P_ID_ENTIDAD AND ID_DEPTO=P_ID_DEPTO;

                INSERT INTO CAJA_VALE(
                                    --ID_VALE, 
                                    ID_ENTIDAD, ID_DEPTO, ID_ANHO, ID_MES,
                                    ID_TIPOVALE, ID_DINAMICA, ID_MEDIOPAGO, ID_CTABANCARIA,
                                    NUMERO,
                                    NRO_VALE,
                                    ID_CHEQUERA, ID_VOUCHER,ID_PERSONA, ID_EMPLEADO, ID_MONEDA,
                                    FECHA, FECHA_VENCIMIENTO, IMPORTE, IMPORTE_ME,
                                    TIPO_CAMBIO, DETALLE, CELULAR, EMAIL, ESTADO)
                                VALUES (
                                    --L_ID_VALE, 
                                    P_ID_ENTIDAD, P_ID_DEPTO, P_ID_ANHO, P_ID_MES,
                                    P_ID_TIPOVALE, P_ID_DINAMICA, P_ID_MEDIOPAGO, L_ID_CTABANCARIA,
                                    P_NUMERO,
                                    (P_ID_ENTIDAD || '.' || P_ID_DEPTO  || '.' || L_NRO_VALE )
                                    , L_ID_CHEQUERA,P_ID_VOUCHER, P_ID_PERSONA, P_ID_EMPLEADO, P_ID_MONEDA,
                                    P_FECHA, clock_timestamp(), P_IMPORTE, P_IMPORTE_ME,
                                    P_TIPOCAMBIO, P_DETALLE, P_CELULAR, P_EMAIL, '1'
                                ) RETURNING ID_VALE INTO L_ID_VALE;

                P_ID_VALE := L_ID_VALE;
            ELSE
                UPDATE CAJA_VALE
                    SET ID_DINAMICA = P_ID_DINAMICA,
                        ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                        ID_TIPOVALE = P_ID_TIPOVALE,
                        ID_CTABANCARIA = L_ID_CTABANCARIA,
                        NUMERO = P_NUMERO,
                        ID_EMPLEADO = P_ID_EMPLEADO,
                        ID_MONEDA = P_ID_MONEDA,
                        FECHA = P_FECHA,
                        ID_CHEQUERA = L_ID_CHEQUERA,
                        IMPORTE = P_IMPORTE,IMPORTE_ME = P_IMPORTE_ME,TIPO_CAMBIO = P_TIPOCAMBIO,
                        DETALLE = P_DETALLE,CELULAR = P_CELULAR,EMAIL = P_EMAIL
                        -- ID_MEDIOPAGO = P_ID_MEDIOPAGO,
                WHERE ID_VALE=P_ID_VALE;

            END IF;

            CALL pkg_caja_sp_generar_asiento_vale(P_ID_VALE, P_ID_CUENTAAASI, l_error, l_msgerror);
            CALL pkg_caja_sp_generar_asiento_vale_end(P_ID_VALE, l_error, l_msgerror);
        END IF;

        P_ERROR := l_error;
        P_MSGERROR := l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_actualizar_vale (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_TIPOVALE integer, P_ID_DINAMICA integer,P_ID_MEDIOPAGO text,P_ID_CTABANCARIA bigint,P_NUMERO text,P_ID_CHEQUERA bigint,P_ID_VOUCHER bigint,P_ID_PERSONA bigint,P_ID_EMPLEADO bigint, P_ID_CUENTAAASI text, P_ID_MONEDA integer, P_TIPOCAMBIO bigint, P_FECHA timestamp(0), P_IMPORTE bigint, P_IMPORTE_ME bigint, P_DETALLE text,P_CELULAR text, P_EMAIL text, P_ID_VALE INOUT bigint ,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
