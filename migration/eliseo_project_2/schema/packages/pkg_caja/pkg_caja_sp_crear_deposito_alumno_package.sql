-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_deposito_alumno (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_MEDIOPAGO text,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_AUTOMATICO text,P_VENTAS text,P_IMP_VENTAS text,P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint,P_ID_DINAMICA bigint,P_ID_TIPOTARJETA bigint,P_ID_CTABANCARIA bigint,P_OPERACION text,P_FECHA_OP timestamp(0),P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_ME bigint, P_TIPOCAMBIO bigint,P_GLOSA text,P_NOMBRE_DEP text,P_DOCUMENTO_DEP text,P_ID_TIPOASIENTO text,P_ID_CANAL integer DEFAULT NULL,P_ERROR OUT bigint,P_MSGERROR OUT text, P_ID_DEPOSITO OUT bigint) AS $body$
DECLARE


        L_SERIE varchar(4);
        L_NUMERO varchar(8);
        L_DEPOSITO bigint:=0;
        L_ESTADO varchar(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        L_ID_VOUCHER bigint :=0;
        L_ERROR bigint:=0;
        L_MSGERROR varchar(200):='';
        L_CORRELATIVO bigint :=0;
        L_ID_COMPROBANTE varchar(3):='00';  --deposito
        L_AUTOMATICO varchar(2);
        L_CONTAR bigint;
        L_FECHA timestamp(0);
        --l_id_ctabancaria numeric;
        L_IMPORTEDET decimal(10,2);
        L_IMPORTEASIENTO decimal(10,2) :=0;
        L_IMPORTE_DEP decimal(10,2) :=0;
        L_ID_VALE bigint;
        L_ID_TIPOTARJETA bigint;
        L_ID_CTABANCARIA bigint;
        L_GLOSA varchar(200);
        L_ID_DDETALLE bigint;
        L_TIPO_TARJETA varchar(30);
        L_COD_DINAMICA_ANT varchar(5);
        L_IMPORTE_TRANS bigint := 0;
        L_VENTAS  varchar(200);
        L_VENTAS_IMP varchar(300);
        L_TIPO varchar(300);
        L_VENTAS_D  varchar(200);
        L_VENTAS_IMP_D varchar(300);
        L_TIPO_D varchar(300);
        L_ID_DINAMICA bigint;
        L_ID_TIPODEPOSITO bigint  := 1;--DEPOSITOS ALUMNOS
        L_BANCO varchar(20);

BEGIN
            IF P_ID_MEDIOPAGO = '008' THEN
                L_IMPORTE_DEP := P_IMPORTE;
            ELSE
                L_IMPORTE_DEP := P_IMPORTE_TARJETA;
                --valida que no se duplique importar depositos
                --Validacion de Nro Operacion Bancaria
                SELECT COUNT(1) INTO STRICT L_CONTAR FROM CAJA_DEPOSITO
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND NRO_OPERACION = P_OPERACION
                AND IMPORTE <> 0;
                /*IF L_CONTAR > 0 THEN
                    L_ERROR:=1; --no existe serie y numero del documento
                    L_MSGERROR:='Depósito: Operacion ya esta registrada - '||P_OPERACION;
--                     GOTO SALIDA_RAPIDA;
                END IF;*/
            END IF;

            SELECT clock_timestamp() INTO STRICT L_FECHA;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;

            --obtiene numero y serie y actualiza correlativo
            CALL pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,L_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO, NULL, L_SERIE,L_CORRELATIVO);

            IF L_CORRELATIVO=0 OR coalesce(L_CORRELATIVO::text, '') = '' THEN
                L_ERROR:=1; --no existe serie y numero del documento
                L_MSGERROR:='Depósito: No existe serie y número de documento ('||L_ID_COMPROBANTE||')';
--                 GOTO SALIDA_RAPIDA;
            ELSE
                --obtener voucher
                SELECT COUNT(1) INTO STRICT L_CONTAR FROM CONTA_VOUCHER_CONFIG
                WHERE ID_ENTIDAD=P_ID_ENTIDAD 
                AND ID_DEPTO= P_ID_DEPTO
                AND ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                AND ID_ANHO=P_ID_ANHO
                AND ID_TIPOVOUCHER = 5;
          
                IF L_CONTAR>0  THEN
                    SELECT AUTOMATICO INTO STRICT L_AUTOMATICO FROM CONTA_VOUCHER_CONFIG  
                    WHERE ID_ENTIDAD=P_ID_ENTIDAD 
                    AND ID_DEPTO= P_ID_DEPTO
                    AND ID_TIPOASIENTO=P_ID_TIPOASIENTO 
                    AND ID_ANHO=P_ID_ANHO
                    AND ID_TIPOVOUCHER = 5; -- 5= tipo voucher ingresos   
                    IF L_AUTOMATICO='S' THEN
                        CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),P_ID_TIPOASIENTO,5,NULL, 'S', P_ID_PERSONA, L_ID_VOUCHER);
                    END IF;
                END IF;
            END IF;

            IF L_ID_VOUCHER=0 THEN
                L_ERROR:=2; --no existe voucher
                L_MSGERROR:='Depósito: No existe voucher ';
--                 GOTO SALIDA_RAPIDA;
            END IF;

      --goto salida_rapida;
      IF L_ERROR=0 THEN
        SELECT LPAD(L_CORRELATIVO::text,8,'0') INTO STRICT L_NUMERO;
        SELECT COUNT(1) INTO STRICT L_CONTAR FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        IF L_CONTAR>0 THEN
           SELECT NOMBRE INTO STRICT L_TIPO_TARJETA FROM CAJA_TIPOTARJETA WHERE ID_TIPOTARJETA=P_ID_TIPOTARJETA;
        END IF;

        SELECT COUNT(1) INTO STRICT L_CONTAR FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
        ON A.ID_BANCO = B.ID_BANCO
        WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        IF L_CONTAR > 0 THEN
            SELECT B.SIGLA INTO STRICT L_BANCO FROM CAJA_CUENTA_BANCARIA A JOIN CAJA_ENTIDAD_FINANCIERA B
            ON A.ID_BANCO = B.ID_BANCO
            WHERE A.ID_CTABANCARIA = L_ID_CTABANCARIA;
        END IF;

        SELECT (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'- Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||(L_NUMERO)::numeric ||'-'||SUBSTR(P_GLOSA,1,20)
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alumn:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||L_TIPO_TARJETA||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alum:'||L_SERIE||'-'||(L_NUMERO)::numeric ||'-'||TO_CHAR(clock_timestamp(),'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||L_SERIE||'-'||(L_NUMERO)::numeric ||'-'||TO_CHAR(clock_timestamp(),'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                ELSE 
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep.Alumn:'||L_SERIE||'-'||TO_NUMBER(L_NUMERO)||'-'||L_TIPO_TARJETA||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||': Dep.-'||L_BANCO||'- Op- '||P_OPERACION||' - '||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||L_SERIE||'-'||(L_NUMERO)::numeric ||'-'||SUBSTR(P_GLOSA,1,20)
                END )
                 AS GLOSA INTO STRICT L_GLOSA
;

        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_TIPODEPOSITO,
          ID_CANAL
        )VALUES ( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          L_ID_VOUCHER, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          L_SERIE,
          L_NUMERO,
          L_FECHA,
          L_IMPORTE_DEP, 
          P_IMPORTE_ME,
          P_TIPOCAMBIO,
          --P_GLOSA, 
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          L_ESTADO,
          P_FECHA_OP,
          P_OPERACION,
          L_ID_TIPODEPOSITO,
          P_ID_CANAL
        ) RETURNING ID_DEPOSITO INTO L_DEPOSITO;

        --obtiene ventas a pagar
        IF  P_AUTOMATICO = 'S' THEN
            CALL pkg_payonline_sp_ventas_depositar(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_CLIENTE,L_IMPORTE_DEP,L_VENTAS,L_VENTAS_IMP,L_TIPO);
            L_VENTAS_D := L_VENTAS;
            L_VENTAS_IMP_D := L_VENTAS_IMP;
            L_TIPO_D:=L_TIPO;
        ELSE
            IF COALESCE(LENGTH(P_VENTAS),0)> 0  THEN
                L_VENTAS_D := P_VENTAS;
                L_VENTAS_IMP_D := P_IMP_VENTAS;
                L_TIPO_D:='V';
            ELSE
                CALL pkg_payonline_sp_ventas_depositar(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_CLIENTE,L_IMPORTE_DEP,L_VENTAS,L_VENTAS_IMP,L_TIPO);
                L_VENTAS_D := L_VENTAS;
                L_VENTAS_IMP_D := L_VENTAS_IMP;
                L_TIPO_D:=L_TIPO;
            END IF;

        END IF;

        SELECT A.ID_DINAMICA INTO STRICT L_ID_DINAMICA FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 13
        AND C.CODIGO = 'AN' --ANTICIPOS
        AND A.ACTIVO = 'S';

        IF COALESCE(LENGTH(L_VENTAS_D),0)>0 AND L_ERROR=0 THEN  --VALIDA VENTAS POR PAGAR Y LA DIFERENCIA LO ENVIA A ANTICIPOS
            CALL pkg_caja_sp_crear_deposito_detalle(L_DEPOSITO,L_VENTAS_D,L_VENTAS_IMP_D,L_TIPO_D,P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,L_ERROR,L_MSGERROR);

            SELECT COALESCE(SUM(IMPORTE),0) INTO STRICT L_IMPORTEDET FROM CAJA_DEPOSITO_DETALLE
            WHERE ID_DEPOSITO=L_DEPOSITO;

            IF L_IMPORTE_DEP>L_IMPORTEDET THEN
                --insert dep sin venta
                SELECT COALESCE(MAX(ID_DDETALLE),0)+1 INTO STRICT L_ID_DDETALLE FROM CAJA_DEPOSITO_DETALLE;
                INSERT INTO CAJA_DEPOSITO_DETALLE(--ID_DDETALLE,
                ID_DEPOSITO,ID_VENTA,IMPORTE,IMPORTE_ME)VALUES (--L_ID_DDETALLE,
                L_DEPOSITO,NULL,L_IMPORTE_DEP-L_IMPORTEDET,0);
                --insert Anticipo
                L_COD_DINAMICA_ANT:='AN';-- anticipo a favor del cliente
                CALL pkg_sales_sp_crear_anticipos_clientes(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,L_DEPOSITO,L_IMPORTE_DEP-L_IMPORTEDET,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);
                --genera asiento
                IF P_ID_MEDIOPAGO = '008' THEN
                    CALL pkg_caja_sp_generar_asiento_deposito(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP-L_IMPORTEDET,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
                ELSE
                    CALL pkg_caja_sp_generar_asiento_deposito(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP-L_IMPORTEDET,0,L_GLOSA,L_ERROR,L_MSGERROR);
                END IF;

            END IF;
        ELSE -- TODO EL IMPORTE VA A ANTICIPOS
            SELECT COALESCE(MAX(ID_DDETALLE),0)+1 INTO STRICT L_ID_DDETALLE FROM CAJA_DEPOSITO_DETALLE;
            INSERT INTO CAJA_DEPOSITO_DETALLE(--ID_DDETALLE,
            ID_DEPOSITO,ID_VENTA,IMPORTE,IMPORTE_ME)VALUES (--L_ID_DDETALLE,
            L_DEPOSITO,NULL,L_IMPORTE_DEP,0);
            --insert Anticipo
            L_COD_DINAMICA_ANT:='AN';-- anticipo a favor del cliente
            CALL pkg_sales_sp_crear_anticipos_clientes(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_CLIENTE,P_ID_PERSONA,L_DEPOSITO,L_IMPORTE_DEP,'D',L_COD_DINAMICA_ANT,L_ERROR,L_MSGERROR);
            --genera asiento
            IF P_ID_MEDIOPAGO = '008' THEN
                CALL pkg_caja_sp_generar_asiento_deposito(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTE_DEP,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
            ELSE
                CALL pkg_caja_sp_generar_asiento_deposito(L_DEPOSITO,L_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTE_DEP,0,L_GLOSA,L_ERROR,L_MSGERROR);
            END IF;
        END IF;

        IF L_IMPORTEDET > 0 THEN
            IF L_ERROR=0  THEN
                IF P_ID_MEDIOPAGO = '008' THEN
                    CALL pkg_caja_sp_generar_asiento_deposito(L_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,L_IMPORTEDET,0,0,L_GLOSA,L_ERROR,L_MSGERROR);
                ELSE
                    CALL pkg_caja_sp_generar_asiento_deposito(L_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMPORTEDET,0,L_GLOSA,L_ERROR,L_MSGERROR);
                END IF;
            END IF;
        END IF;

      END IF;

--       <<SALIDA_RAPIDA>>
      P_ERROR:=L_ERROR;
      P_MSGERROR:=L_MSGERROR;
      P_ID_DEPOSITO := L_DEPOSITO;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_deposito_alumno (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_MEDIOPAGO text,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_AUTOMATICO text,P_VENTAS text,P_IMP_VENTAS text,P_ID_TIPOTRANSACCION bigint, P_ID_MONEDA bigint,P_ID_DINAMICA bigint,P_ID_TIPOTARJETA bigint,P_ID_CTABANCARIA bigint,P_OPERACION text,P_FECHA_OP timestamp(0),P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_ME bigint, P_TIPOCAMBIO bigint,P_GLOSA text,P_NOMBRE_DEP text,P_DOCUMENTO_DEP text,P_ID_TIPOASIENTO text,P_ID_CANAL integer DEFAULT NULL,P_ERROR OUT bigint,P_MSGERROR OUT text, P_ID_DEPOSITO OUT bigint) FROM PUBLIC;
