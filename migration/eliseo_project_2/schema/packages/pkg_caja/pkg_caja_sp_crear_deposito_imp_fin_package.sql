-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_deposito_imp_fin (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ERROR out bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_id_voucher bigint;
    l_id_tipoasiento varchar(4) :='MB';
    l_serie varchar(4);
    l_numero varchar(8);
    l_correlativo bigint :=0;
    l_id_comprobante varchar(3):='00';  --deposito
    l_automatico varchar(1);
    l_contar bigint;
    l_error bigint:=0;
    l_msgerror varchar(200):='';

BEGIN
    
        --obtiene numero y serie y actualiza correlativo
        CALL pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, NULL, l_serie,l_correlativo);

      if l_correlativo=0 or coalesce(l_correlativo::text, '') = '' then
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||')';
      else
            --obtener voucher
          select count(*) into STRICT l_contar from CONTA_VOUCHER_CONFIG
          where ID_ENTIDAD=P_ID_ENTIDAD 
          and ID_DEPTO= P_ID_DEPTO
          and ID_TIPOASIENTO=l_id_tipoasiento 
          and ID_ANHO=P_ID_ANHO
          and id_tipovoucher = 5;
          
          --dbms_output.put_line(l_id_entidad||'-'||l_id_depto||'-'||l_id_anho);
          
          if l_contar>0  then
            select AUTOMATICO into STRICT l_automatico from CONTA_VOUCHER_CONFIG  
            where ID_ENTIDAD=P_ID_ENTIDAD 
            and ID_DEPTO= P_ID_DEPTO
            and ID_TIPOASIENTO=l_id_tipoasiento 
            and ID_ANHO=P_ID_ANHO
            and id_tipovoucher = 5; -- 5= tipo voucher ingresos   
            if l_automatico='S' then
              CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),l_id_tipoasiento,5,null,'S',P_ID_PERSONA,l_id_voucher);
            end if;
          end if;
      end if;

      if l_id_voucher=0 then
          l_error:=2; --no existe voucher
          l_msgerror:='Depósito: No existe voucher';
      end if;
        if l_error=0 then
            UPDATE CAJA_DEPOSITO_BANCO SET  ID_VOUCHER = l_id_voucher,
                                            ESTADO = '1'
            WHERE ID_DEPOSITO IN (
                SELECT ID_DEPOSITO FROM CAJA_DEPOSITO
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_DEPTO = P_ID_DEPTO
                AND ID_ANHO = P_ID_ANHO
                AND ID_PERSONA = P_ID_PERSONA
                AND ESTADO = 'X'
            );

            UPDATE CAJA_DEPOSITO SET 
                                        ID_VOUCHER = l_id_voucher,
                                        SERIE = l_serie,
                                        NUMERO = l_numero,
                                        ESTADO = '1'
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = P_ID_ANHO
            AND ID_PERSONA = P_ID_PERSONA
            AND ESTADO = 'X';
        end if;
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_deposito_imp_fin (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ERROR out bigint,P_MSGERROR out text) FROM PUBLIC;
