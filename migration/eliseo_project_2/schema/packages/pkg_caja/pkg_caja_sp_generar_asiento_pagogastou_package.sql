-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_generar_asiento_pagogastou (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


        /*
        l_dinamica numeric;
        l_id_persona numeric;
        l_detalle varchar(100);
        l_detalle_in varchar(100);
        l_base numeric(10,2);
        l_igv numeric(10,2);
        l_descuento numeric(10,2);
        l_importe numeric(10,2);
        l_correlativo numeric(10,2); --Add by @vitmar
        l_es_credito varchar(1);
        l_id_comprobante varchar(10);
        l_serie_numero varchar(25);
        l_fecha_doc varchar(15);
        l_precio_alm numeric(10,2);
        l_ctas varchar(200);
        l_deptos varchar(200);
        l_ctates varchar(200);
        
        L_COMPROBANTE_NC varchar(25) :='';
        
        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;
        
        l_id_asiento numeric;
        l_id_parent numeric;
        l_id_tipoplan numeric;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_porcentaje numeric(10,2);
        l_unicoctate varchar(1);
        
        l_id_asientod numeric;
        l_id_tipopland numeric;
        l_id_restricciond varchar(50);
        l_id_cuentaaasid varchar(10);
        l_dcd varchar(1);
        l_id_indicadord  varchar(35);
        l_unicod varchar(1);
        l_porcentajed numeric(10,2);
        l_unicoctated varchar(1);
  
        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_count_cuenta_cte numeric;
        l_fondo varchar(10);
        l_importeasiento numeric(10,2);
        l_importe_cheque numeric(10,2);
        l_importe_trans numeric(10,2);
        l_descripcion varchar(255);
        l_memo varchar(255);
        l_voucher varchar(10);
        l_ref_id varchar(100);
        l_primario varchar(10);
        
        depto_clientes varchar(20);
        depto_banco varchar(20);

        l_id_entidad numeric;
        l_id_depto_pago varchar(20);
        l_buscar numeric;
        
        l_error numeric:=0;
        l_msgerror varchar(200):='';
        l_id_operorigen numeric:=5;
        
        --validacion
        l_contar numeric;
        l_debito numeric(10,2);
        l_credito numeric(10,2);
        
        l_serie varchar(5);
        l_numero varchar(15);
        l_fecha timestamp;
        l_agrupa varchar(1);
        --l_id_cliente numeric;
        l_id_ctabancaria numeric;
        l_id_mediopago varchar(4);
        l_pgasto numeric;
        l_tipoorigen numeric;
        l_origen numeric;
        */
        l_cont bigint;
        L_ID_PGASTO bigint;
        L_ID_VOUCHER bigint;
        L_ID_DINAMICA bigint;
        L_ID_ASIENTO bigint;
        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_id_cuentaaasi bigint;

        l_deptod varchar(10);
        l_cuenta_cted varchar(50);

        l_detalle_in varchar(200);
        l_detalle_sub_dep_in varchar(200);

        l_importeasiento bigint;
        l_importeasiento_child bigint;
        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(30);

        l_id_ctabancaria bigint;

        cdet CURSOR FOR
        SELECT 
        ID_PGASTO, ID_DINAMICA, DETALLE, IMPORTE, IMPORTE_ME, FECHA, ID_TIPOORIGEN
        FROM CAJA_PAGO_GASTO WHERE ID_PAGO=P_ID_PAGO;

        casiento CURSOR FOR	
        SELECT A.ID_CUENTAAASI,A.ID_FONDO,A.ID_DEPTO,A.ID_CTACTE,A.ID_RESTRICCION,A.IMPORTE,
        A.IMPORTE_ME,A.DESCRIPCION,A.EDITABLE,A.ID_TIPOREGISTRO,A.DC,A.AGRUPA
        FROM CAJA_PAGO_GASTO_ASIENTO A 
        WHERE A.ID_PGASTO=L_ID_PGASTO;

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO, a.PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =L_ID_DINAMICA
        AND COALESCE(a.ID_PARENT,0)=0  
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        casides CURSOR FOR		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, ID_FONDO, PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=L_ID_ASIENTO
        AND ID_DINAMICA=L_ID_DINAMICA
        ORDER BY NRO_ASIENTO,DC desc;

        L_MEDIOPAGO varchar(30);
        L_NUMERO varchar(30);
        L_FECHA_PAGO varchar(30);

        L_TIENE_HIJO varchar(1);
        L_ID_CUENTAAASI_HIJO_DEDITO varchar(30);
        L_ID_CUENTAAASI_HIJO_CREDITO varchar(20);
        L_ID_FONDO_HIJO_DEBITO varchar(5);
        /*
        CURSOR gastos_otros_deptos IS		
        SELECT ID_DEPTO
        , IMPORTE 
        FROM COMPRA_ASIENTO
        WHERE ID_COMPRA=l_origen
        AND ID_DEPTO <> l_depto;
        */
        
        -- l_gastos_otros_id_depto varchar(10);
        -- l_gastos_otros_importe numeric(10,2);
        l_error bigint:=0;
        l_msgerror varchar(200):='';

        
BEGIN
            
            SELECT ID_VOUCHER, ID_ENTIDAD, ID_DEPTO, coalesce(ID_CTABANCARIA, 0),
            CASE WHEN ID_MEDIOPAGO='001' THEN 'TLC' WHEN ID_MEDIOPAGO='007' THEN 'CHQ' WHEN ID_MEDIOPAGO='008' THEN 'EFEC' END ,
            NUMERO, TO_CHAR(FECHA,'DD/MM/YYYY')
            INTO STRICT L_ID_VOUCHER, L_ID_ENTIDAD, L_ID_DEPTO, l_id_ctabancaria,
            L_MEDIOPAGO,
            L_NUMERO, L_FECHA_PAGO 
            FROM CAJA_PAGO A WHERE A.ID_PAGO=P_ID_PAGO;

            FOR gasto in cdet
                LOOP
                BEGIN
                    L_ID_DINAMICA := gasto.ID_DINAMICA;
                    L_ID_PGASTO := gasto.id_pgasto;
                 -- Insertar asiento de dinamicas
                    FOR a_casi in casi
                    LOOP
                    BEGIN
                        L_ID_ASIENTO := a_casi.ID_ASIENTO;
                        l_id_cuentaaasi := a_casi.id_cuentaaasi;

                        IF a_casi.AGRUPA = 'S' THEN 
                            if l_id_ctabancaria = 0 then 
                                l_detalle_in := SUBSTR(('Op. '||L_MEDIOPAGO||'-'||L_NUMERO||' | '||L_FECHA_PAGO),1, 50);
                            else
                                l_detalle_in := SUBSTR(('Op. '||L_MEDIOPAGO||'-'||L_NUMERO||' | '||L_FECHA_PAGO||' | '||pkg_caja_fc_cuenta_bancaria(l_id_ctabancaria)),1, 50);
                            end if;
                            -- l_detalle_in := SUBSTR( (gasto.fecha || ' ' || gasto.detalle), 1,50);
                        ELSE
                            -- select coalesce(NOMBRE_CORTO,'') into L_COMPROBANTE_NC from TIPO_COMPROBANTE WHERE ID_COMPROBANTE=l_id_comprobante;
                            l_detalle_in := SUBSTR(gasto.detalle, 1,50);
                        END IF;

                        select case when a_casi.id_indicador='IMPORTE' then (gasto.importe)*(a_casi.porcentaje)
                                  else
                                  0
                                  end into STRICT l_importeasiento
;

                        l_depto:=null;
                        l_cuenta_cte:=null;

                        if a_casi.unico='U' then
                            select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=a_casi.id_asiento;
                        -- elsif(a_casi.unico='X') then
                           -- select FC_DEPTO_CLIENTE(l_id_persona) into l_depto from dual;
                        ELSIF a_casi.unico='S' THEN  -- Si es sesiÃ³n
                            l_depto := L_ID_DEPTO;
                        END IF;

                        if a_casi.UNICO_CTACTE='U' then
                            select  count(*) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento=a_casi.id_asiento;
                            if l_cont>0 then
                                select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento= a_casi.id_asiento;
                            end if;
                        /* elsif(a_casi.unicoctate='M') then
                            if l_dc = 'C' then
                                SELECT ID_TIPOCTACTE into l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                            */
                        elsif (a_casi.UNICO_CTACTE='B') then
                            -- if a_casi.dc = 'C' then
                                SELECT COALESCE(ID_DEPTO_OPER, l_depto), ID_TIPOCTACTE, ID_CUENTAAASI into STRICT l_depto, l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            -- end if;
                        /*elsif(a_casi.unicoctate='X') then
                            SELECT pkg_caja_fc_ruc(l_id_persona) into l_cuenta_cte from dual;*/
                        end if;
                        
                        FOR gasto_asiento in casiento
                        LOOP
                        BEGIN
                        
                    
                            INSERT INTO CONTA_ASIENTO(
                                                ID_TIPOORIGEN,
                                                ID_ORIGEN, 
                                                FONDO,
                                                DEPTO,
                                                CUENTA, 
                                                CUENTA_CTE,
                                                RESTRICCION,
                                                IMPORTE,
                                                IMPORTE_ME,
                                                DESCRIPCION,
                                                MEMO,
                                                VOUCHER, 
                                                PARENT_ID,
                                                REF_ID,
                                                AGRUPA
                                            )
                                            values ( 
                                            gasto.ID_TIPOORIGEN,
                                            gasto.ID_PGASTO,
                                            gasto_asiento.ID_FONDO,
                                            gasto_asiento.ID_DEPTO,
                                            gasto_asiento.ID_CUENTAAASI,
                                            gasto_asiento.ID_CTACTE,
                                            gasto_asiento.ID_RESTRICCION,
                                            gasto_asiento.IMPORTE,
                                            gasto_asiento.IMPORTE_ME,
                                            gasto_asiento.DESCRIPCION,
                                            gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,
                                            L_ID_VOUCHER,
                                            NULL,
                                            gasto.ID_PGASTO,
                                            'N');

                                            
                                if l_depto <> gasto_asiento.ID_DEPTO then
                                
                                    FOR child_asiento in casides
                                    LOOP
                                    BEGIN
                                    
                                        select case when child_asiento.id_indicador='IMPORTE' then 
                                            -- (l_gastos_otros_importe)*(l_porcentaje)
                                            (gasto_asiento.IMPORTE)*(child_asiento.porcentaje)
                                          else
                                          0
                                          end into STRICT l_importeasiento_child
;
                                        
                                        l_deptod:=null;
                                        l_cuenta_cted:=null;

                                        if child_asiento.unico='N' then
                                            l_deptod := gasto_asiento.ID_DEPTO;
                                        elsif child_asiento.unico='U' then
                                            select  count(*) into STRICT l_cont from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            if l_cont=1 then
                                                select ID_DEPTO into STRICT l_deptod from CONTA_DINAMICA_DEPTO where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            end if;
                                        end if;

                                        if child_asiento.unico_ctacte='N' then
                                            l_cuenta_cted := gasto_asiento.ID_DEPTO;
                                        elsif child_asiento.unico_ctacte='U' then
                                            select  count(*) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            if l_cont=1 then
                                                select ID_CTACTE into STRICT l_cuenta_cted from CONTA_DINAMICA_CTA_CTE where id_entidad=L_ID_ENTIDAD and id_asiento=child_asiento.id_asiento;
                                            end if;
                                        end if;
                                        l_detalle_sub_dep_in:='Por inter-departamento a cobrar.';
                                        if child_asiento.dc='C' then
                                            l_importeasiento_child:=l_importeasiento_child*(-1);
                                            l_detalle_sub_dep_in:='Por inter-departamento a pagar.';
                                        end if;

                                        if l_importeasiento_child<>0 then
                                        
                                            -- SELECT NVL(MAX(ID_CASIENTO),0)+1 INTO P_ID_CASIENTO FROM COMPRA_ASIENTO;
                                            INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN, ID_ORIGEN, FONDO, DEPTO, CUENTA, CUENTA_CTE, RESTRICCION,
                                                                    IMPORTE, DESCRIPCION, MEMO, VOUCHER, PARENT_ID, REF_ID, AGRUPA, PRIMARIO
                                            )VALUES ( gasto.id_tipoorigen, gasto.id_pgasto, child_asiento.id_fondo, l_deptod, child_asiento.id_cuentaaasi, l_cuenta_cted, child_asiento.id_restriccion,
                                            l_importeasiento_child, l_detalle_sub_dep_in, gasto.id_tipoorigen || '-' || gasto.id_pgasto, L_ID_VOUCHER, null, gasto.id_pgasto,
                                                 child_asiento.agrupa, child_asiento.primario
                                            );

                                            /*
                                            INSERT INTO COMPRA_ASIENTO
                                                (ID_CASIENTO, ID_COMPRA, ID_CUENTAAASI, ID_RESTRICCION, ID_CTACTE, ID_FONDO, 
                                                ID_DEPTO, IMPORTE, IMPORTE_ME, DESCRIPCION, EDITABLE, ID_PARENT, ID_TIPOREGISTRO, DC, FECHA_ACTUALIZACION, AGRUPA)
                                            VALUES 
                                                (P_ID_CASIENTO, P_ID_COMPRA, l_id_cuentaaasid, l_id_restricciond, l_cuenta_cted, l_fondod,
                                                l_deptod, L_IMPORTE, L_IMPORTE_ME, 
                                                l_detalle_sub_dep_in,
                                                -- SUBSTR(L_CORRELATIVO || ' | ' || L_ID_COMPROBANTE_NC || '. ' || L_SERIE || '-' || L_NUMERO || ' | ' ||  P_DESCRIPCION,0,50),
                                                'N', L_ID_PARENT, L_ID_TIPOREGISTRO, l_dcd, systimestamp, 'N');
                                            */
                                        end if;
                                        END;
                                    END LOOP;
                                end if;

                                    
                                IF gasto_asiento.ID_FONDO = '69' THEN   -- Fondo de publicaciones
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171045';
                                ELSIF gasto_asiento.ID_FONDO = '68' THEN  -- Fondo ComunicaciÃ³n
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171060';
                                ELSIF gasto_asiento.ID_FONDO = '66' THEN  -- Fondo EducaciÃ³n
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171020';
                                ELSIF gasto_asiento.ID_FONDO = '25' THEN  -- InversiÃ³n em Inmovilizado
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171005';
                                ELSIF gasto_asiento.ID_FONDO = '93' THEN  -- Fondo Asistencial
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171030';
                                ELSIF gasto_asiento.ID_FONDO = '81' THEN  -- Fondo Donaciones Restringidas
                                    L_TIENE_HIJO := 'S';
                                    L_ID_CUENTAAASI_HIJO_DEDITO := '2171081';
                                ELSE
                                    L_TIENE_HIJO := 'N';
                                END IF;

                                IF L_TIENE_HIJO = 'S' AND a_casi.id_fondo<> gasto_asiento.ID_FONDO THEN
                                --IF L_TIENE_HIJO = 'S' THEN
                                    L_ID_CUENTAAASI_HIJO_CREDITO := '1171001'; --Credito Deto 0000
                                    L_ID_FONDO_HIJO_DEBITO := '10';

                                    -- AGREGAR ASIENTO -- DEBITO
                                    INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                                CUENTA, CUENTA_CTE,
                                                RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                                MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                            values (  gasto.ID_TIPOORIGEN,gasto.ID_PGASTO, L_ID_FONDO_HIJO_DEBITO, '0000',
                                            L_ID_CUENTAAASI_HIJO_DEDITO, '',
                                            '0A', gasto_asiento.IMPORTE, gasto_asiento.IMPORTE_ME,'Asiento por inter-fondos',
                                            gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,L_ID_VOUCHER, NULL, gasto.ID_PGASTO, 'N');

                                    -- AGREGAR ASIENTO CONTRA PARTIDA -- CREDITO
                                    INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                                CUENTA, CUENTA_CTE,
                                                RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                                MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                            values (  gasto.ID_TIPOORIGEN,gasto.ID_PGASTO, gasto_asiento.ID_FONDO, '0000',
                                            L_ID_CUENTAAASI_HIJO_CREDITO, '',
                                            '0A', (gasto_asiento.IMPORTE*-1), (gasto_asiento.IMPORTE_ME*-1),'Asiento por inter-fondos',
                                            gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,L_ID_VOUCHER, NULL, gasto.ID_PGASTO, 'N');
                                END IF;

                                
                                
                                    
                            END;
                        END LOOP;

                    
                   
                        if a_casi.dc='C' then
                            l_importeasiento:=l_importeasiento*(-1);
                        end if;
                        RAISE NOTICE '.... id_tipoorigen %', gasto.id_tipoorigen;
                        RAISE NOTICE '.... id_pgasto %', gasto.id_pgasto;
                        RAISE NOTICE '.... l_depto %', l_depto;
                        RAISE NOTICE '.... l_id_cuentaaasi %', l_id_cuentaaasi;
                        RAISE NOTICE '.... l_cuenta_cte %', l_cuenta_cte;
                        RAISE NOTICE '.... dc %', a_casi.dc;
                        select count(*) into STRICT l_cont from CONTA_ASIENTO
                        where ID_TIPOORIGEN=(gasto.id_tipoorigen)::numeric
                        and ID_ORIGEN=(gasto.id_pgasto)::numeric 
                        and coalesce(DEPTO,'-') =coalesce(l_depto::text,'-')
                        and CUENTA =l_id_cuentaaasi::text
                        and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte::text,'-')
                        and case when importe>0 then 'D' else 'C' end=a_casi.dc;

                        if l_importeasiento<>0 then
                            if l_cont=0 then
                            --if l_cont=0 and l_agrupa = 'N' then 
                                INSERT INTO CONTA_ASIENTO(
                                    ID_TIPOORIGEN,
                                    ID_ORIGEN, 
                                    FONDO,
                                    DEPTO,
                                    CUENTA, 
                                    CUENTA_CTE,
                                    RESTRICCION,
                                    IMPORTE,
                                    DESCRIPCION,
                                    MEMO,
                                    VOUCHER, 
                                    PARENT_ID,
                                    REF_ID,
                                    AGRUPA,
                                    PRIMARIO
                                )VALUES ( 
                                    gasto.id_tipoorigen,
                                    gasto.id_pgasto,
                                    a_casi.id_fondo,
                                    l_depto,
                                    l_id_cuentaaasi,
                                    l_cuenta_cte,
                                    a_casi.id_restriccion,
                                    l_importeasiento,
                                    l_detalle_in,
                                    gasto.ID_TIPOORIGEN || '-' || gasto.ID_PGASTO,
                                    L_ID_VOUCHER,
                                    null,
                                    gasto.ID_PGASTO,
                                    a_casi.agrupa,
                                    a_casi.primario
                                );
                            else

                                update CONTA_ASIENTO set IMPORTE=l_importeasiento
                                where ID_TIPOORIGEN=gasto.id_tipoorigen
                                and ID_ORIGEN=gasto.id_pgasto
                                and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                                and CUENTA =l_id_cuentaaasi
                                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                                and case when importe>0 then 'D' else 'C' end=a_casi.dc;
                            end if;
                            --l_error:=0; --no se ha generado el asiento
                            --l_msgerror:=l_id_operorigen||'-'||P_ID_PAGO||'-'||l_depto||'-'||l_id_cuentaaasi||'-'||l_cuenta_cte||'-'||l_dc;
                        end if;

                         
                    END;
                END LOOP;
            END;
            END LOOP;

            /*
            select count(*) into l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;
        
            if l_contar=0 then
              l_error:=3; --no se ha generado el asiento
              l_msgerror:='Asiento Pago: No se ha generado el asiento';    
            else
                select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
                COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
                into l_debito,l_credito
                from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_tipoorigen
                and ID_ORIGEN=l_pgasto;

                if l_credito=0 or l_credito=0 then
                    l_error:=4; --importe de debito o credito igual a cero
                    l_msgerror:='Asiento Pago: Importe de dÃ©bito o crÃ©dito igual a cero';
                else
                    if l_credito<>l_credito then
                        l_error:=5; --descuadre de asiento
                        l_msgerror:='Asiento Pago: Descuadre de asiento';
                    end if;
                end if;
            end if;
            */
--             <<salida_rapida>>
            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_generar_asiento_pagogastou (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
