-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_deposito_banco (P_ID_ENTIDAD bigint,P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint,P_ID_DEPOSITO bigint, P_ID_DINAMICA bigint,P_ID_MONEDA bigint,P_ID_CTABANCARIA bigint, P_ID_TIPOTARJETA bigint, P_ID_PERSONA bigint,P_ID_MEDIOPAGO text,P_OPERACION text,P_FECHA timestamp(0),P_IMPORTE bigint,P_IMPORTE_ME bigint,P_TIPOCAMBIO bigint, P_GLOSA text,P_ID_TIPOASIENTO text,P_ESTADO text, P_ERROR out bigint, P_MSGERROR out text,P_ID_VALE integer default null, P_ID_CIERRE integer default null) AS $body$
DECLARE

    --l_id_depbanco numeric;
    --l_estado varchar(1):='1';
    l_id_voucher bigint :=0;
    l_contar bigint;
    l_automatico  varchar(2);
    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_id_tipoasiento varchar(5);--:='MB';
    l_id_ctabancaria bigint;
    L_ID_DEPOSITO bigint;
    L_ID_TIPOTARJETA bigint;
    L_DIF decimal(10,2);
    L_ID_VALE bigint;
    L_DEP_B varchar(1) :='S';

BEGIN
        IF coalesce(P_ID_DEPOSITO::text, '') = '' OR P_ID_DEPOSITO = 0 THEN
            L_ID_DEPOSITO:=null;
        ELSE
            L_ID_DEPOSITO:=P_ID_DEPOSITO;
        END IF;
        IF coalesce(P_ID_TIPOTARJETA::text, '') = '' OR P_ID_TIPOTARJETA = 0 THEN
            L_ID_TIPOTARJETA:=null;
        ELSE
            L_ID_TIPOTARJETA:=P_ID_TIPOTARJETA;
        END IF;
        l_id_tipoasiento:=P_ID_TIPOASIENTO;

        IF coalesce(P_ID_VALE::text, '') = '' OR P_ID_VALE = 0 THEN
            L_ID_VALE:=null;
        ELSE
            L_ID_VALE:=P_ID_VALE;
        END IF;

        --obtener voucher
        select count(1) into STRICT l_contar from CONTA_VOUCHER_CONFIG  
        where ID_ENTIDAD=P_ID_ENTIDAD 
        and ID_DEPTO= P_ID_DEPTO
        and ID_TIPOASIENTO=l_id_tipoasiento 
        and ID_ANHO=P_ID_ANHO
        AND ID_TIPOVOUCHER = 5;
        
        --dbms_output.put_line(l_id_entidad||'-'||l_id_depto||'-'||l_id_anho);
        
        --====
        IF (P_ID_CIERRE IS NOT NULL AND P_ID_CIERRE::text <> '') THEN
            IF P_ID_DEPTO = '5' THEN
                SELECT count(1) into STRICT l_contar
                FROM CONTA_VOUCHER A, CONTA_VOUCHER_PERSONA B
                WHERE A.ID_VOUCHER = B.ID_VOUCHER
                AND A.ID_ENTIDAD = P_ID_ENTIDAD
                AND A.ID_DEPTO = P_ID_DEPTO
                AND B.ID_PERSONA = P_ID_PERSONA
                AND A.ID_TIPOVOUCHER = 5
                AND B.ESTADO = '1'
                AND A.ACTIVO = 'S';
                IF l_contar > 0 THEN
                    SELECT A.ID_VOUCHER INTO STRICT l_id_voucher
                    FROM CONTA_VOUCHER A, CONTA_VOUCHER_PERSONA B
                    WHERE A.ID_VOUCHER = B.ID_VOUCHER
                    AND A.ID_ENTIDAD = P_ID_ENTIDAD
                    AND A.ID_DEPTO = P_ID_DEPTO
                    AND B.ID_PERSONA = P_ID_PERSONA
                    AND A.ID_TIPOVOUCHER = 5
                    AND B.ESTADO = '1'
                    AND A.ACTIVO = 'S';
                END IF;
            ELSE
                SELECT ID_VOUCHER INTO STRICT l_id_voucher
                FROM CAJA_CIERRE
                WHERE ID_CIERRE = P_ID_CIERRE;
            END IF;
        ELSE
            if l_contar>0  then
                select AUTOMATICO into STRICT l_automatico from CONTA_VOUCHER_CONFIG
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=l_id_tipoasiento 
                and ID_ANHO=P_ID_ANHO
                AND ID_TIPOVOUCHER = 5;
              
                if l_automatico='S' then
                    IF P_ESTADO = '1' THEN
                        CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),l_id_tipoasiento,5,null,'S', P_ID_PERSONA, l_id_voucher);
                    ELSE
                        l_id_voucher := NULL;
                        l_error:=1; --no existe voucher
                        l_msgerror:='Depósito Banco: No existe voucher';
                    END IF;
                end if;
            end if;
        END IF;
        if l_id_voucher = 0 then
            l_error:=1; --no existe voucher
            l_msgerror:='Depósito Banco: No existe voucher';
        end if;
        if l_error=0 then
            select count(1) into STRICT l_contar from CONTA_DINAMICA a,CAJA_CUENTA_BANCARIA b
            where a.ID_CTABANCARIA=b.ID_CTABANCARIA
            and a.ID_DINAMICA=P_ID_DINAMICA;

            if coalesce(P_ID_CTABANCARIA::text, '') = '' then
                if l_contar>0 then
                    select a.ID_CTABANCARIA into STRICT l_id_ctabancaria 
                    from CONTA_DINAMICA a,CAJA_CUENTA_BANCARIA b
                    where a.ID_CTABANCARIA=b.ID_CTABANCARIA
                    and a.ID_DINAMICA=P_ID_DINAMICA;
                else
                    l_error:=1;
                    l_msgerror:='Depósito Banco: No existe cta corriente bancario para generar depósito al banco';
                end if;
            else
                l_id_ctabancaria := P_ID_CTABANCARIA;
            end if;
        end if;
  
        if l_error=0 then
            SELECT (A.IMPORTE+A.IMPORTE_ME)-(coalesce(SUM(B.IMPORTE),0)+SUM(coalesce(B.IMPORTE_ME,0))+P_IMPORTE+coalesce(P_IMPORTE_ME,0)) INTO STRICT L_DIF
            FROM CAJA_CIERRE A LEFT JOIN CAJA_DEPOSITO_BANCO B
            ON A.ID_CIERRE = B.ID_CIERRE
            WHERE A.ID_CIERRE = P_ID_CIERRE
            GROUP BY A.ID_CIERRE,A.IMPORTE,A.IMPORTE_ME;

            IF L_DIF = 0 OR L_DIF > 0 THEN
                INSERT INTO CAJA_DEPOSITO_BANCO(
                                     ID_ENTIDAD,
                                     ID_DEPTO,
                                     ID_ANHO,
                                     ID_MES,
                                     ID_DEPOSITO,
                                     ID_DINAMICA,
                                     ID_MONEDA,
                                     ID_TIPOTARJETA,
                                     ID_PERSONA,
                                     ID_CTABANCARIA,
                                     ID_MEDIOPAGO,
                                     ID_VOUCHER,
                                     OPERACION,
                                     FECHA,
                                     IMPORTE,
                                     IMPORTE_ME,
                                     TIPOCAMBIO,
                                     GLOSA,
                                     ESTADO,
                                     ID_VALE,
                                     ID_CIERRE)
                         VALUES (
                                 P_ID_ENTIDAD,
                                 P_ID_DEPTO,
                                 P_ID_ANHO,
                                 P_ID_MES,
                                 L_ID_DEPOSITO,
                                 P_ID_DINAMICA,
                                 P_ID_MONEDA,
                                 L_ID_TIPOTARJETA,
                                 P_ID_PERSONA,
                                 l_id_ctabancaria,
                                 P_ID_MEDIOPAGO,
                                 l_id_voucher,
                                 P_OPERACION,
                                 P_FECHA,
                                 P_IMPORTE,
                                 P_IMPORTE_ME,
                                 P_TIPOCAMBIO,
                                 P_GLOSA,
                                 P_ESTADO,
                                 L_ID_VALE,
                                 P_ID_CIERRE)
                                RETURNING ID_DEPBANCO INTO L_ID_DEPOSITO;

                IF (L_ID_DEPOSITO IS NOT NULL AND L_ID_DEPOSITO::text <> '') THEN  -- is null  then
                   CALL pkg_caja_sp_generar_asiento_deposito(L_ID_DEPOSITO,P_ID_DINAMICA,P_ID_CTABANCARIA,P_IMPORTE,0,0,P_GLOSA,l_error,l_msgerror,L_DEP_B);
                END IF;
            ELSE
                l_error :=1;
                l_msgerror := 'ERROR: Importe a Depositar Mayor al Cierre del Día '||L_DIF;
            END IF;
        end if;
    
    P_ERROR:=l_error;
    P_MSGERROR:=l_msgerror;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_deposito_banco (P_ID_ENTIDAD bigint,P_ID_DEPTO text, P_ID_ANHO bigint, P_ID_MES bigint,P_ID_DEPOSITO bigint, P_ID_DINAMICA bigint,P_ID_MONEDA bigint,P_ID_CTABANCARIA bigint, P_ID_TIPOTARJETA bigint, P_ID_PERSONA bigint,P_ID_MEDIOPAGO text,P_OPERACION text,P_FECHA timestamp(0),P_IMPORTE bigint,P_IMPORTE_ME bigint,P_TIPOCAMBIO bigint, P_GLOSA text,P_ID_TIPOASIENTO text,P_ESTADO text, P_ERROR out bigint, P_MSGERROR out text,P_ID_VALE integer default null, P_ID_CIERRE integer default null) FROM PUBLIC;
