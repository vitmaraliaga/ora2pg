-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_crear_deposito (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_MEDIOPAGO text,P_ID_PERSONA bigint, P_ID_CLIENTE bigint,P_VENTAS text,P_IMP_VENTAS text,P_ID_TIPOTRANSACCION bigint,P_ID_MONEDA bigint,P_ID_DINAMICA bigint,P_ID_TIPOTARJETA bigint,P_ID_CTABANCARIA bigint, P_OPERACION text,P_FECHA_OP timestamp(0),P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_TRANS bigint,P_IMPORTE_ME bigint,P_TIPOCAMBIO bigint,P_GLOSA text,P_NOMBRE_DEP text, P_DOCUMENTO_DEP text,P_ID_TIPOASIENTO text,P_ID_CANAL integer DEFAULT NULL,P_ERROR out bigint,P_MSGERROR out text,P_ID_VALE integer default null,P_ID_DEPOSITO OUT bigint) AS $body$
DECLARE


        l_serie varchar(4);
        l_numero varchar(8);
        l_deposito bigint:=0;
        l_estado varchar(1):='1'; --1:vigente, 0:Proceso; 2-Anulado
        l_id_voucher bigint :=0;
        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_correlativo bigint :=0;
        l_id_comprobante varchar(3):='00';  --deposito
        l_automatico varchar(2);
        l_contar bigint;
        l_fecha timestamp(0);
        --l_id_ctabancaria numeric;
        l_importedet decimal(10,2);
        l_importeasiento decimal(10,2);
        L_ID_VALE bigint;
        L_ID_TIPOTARJETA bigint;
        L_ID_CTABANCARIA bigint;
        L_GLOSA varchar(255);
        L_ID_TIPOASIENTO varchar(4);
        L_IMP decimal(10,2);
        L_IMP_ME decimal(10,2);
        L_IMP_TARJ decimal(10,2);

BEGIN
            IF P_ID_MONEDA = 9 THEN
                L_IMP :=P_IMPORTE*P_TIPOCAMBIO;
                L_IMP_ME :=P_IMPORTE;
                L_IMP_TARJ := P_IMPORTE_TARJETA*P_TIPOCAMBIO;
            ELSE
                L_IMP :=P_IMPORTE;
                L_IMP_ME :=0;
                L_IMP_TARJ := P_IMPORTE_TARJETA;
            END IF;

            select clock_timestamp() into STRICT l_fecha;
            IF P_ID_VALE = 0 THEN
                L_ID_VALE := NULL;
            ELSE
                L_ID_VALE := P_ID_VALE;
            END IF;
            IF P_ID_TIPOTARJETA = 0 THEN
                L_ID_TIPOTARJETA := NULL;
            ELSE
                L_ID_TIPOTARJETA := P_ID_TIPOTARJETA;
            END IF;
            IF P_ID_CTABANCARIA = 0 THEN
                L_ID_CTABANCARIA := NULL;
            ELSE
                L_ID_CTABANCARIA := P_ID_CTABANCARIA;
            END IF;

            IF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '1' THEN
                L_ID_TIPOASIENTO := 'MB';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '4' THEN
                L_ID_TIPOASIENTO := 'MBC';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '5' THEN
                L_ID_TIPOASIENTO := 'MBJ';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '6' THEN
                L_ID_TIPOASIENTO := 'MBT';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '7' THEN
                L_ID_TIPOASIENTO := 'MBL';
            ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '8' THEN
                L_ID_TIPOASIENTO := 'MBS';
            ELSE
                L_ID_TIPOASIENTO := P_ID_TIPOASIENTO;
            END IF;
            --obtiene numero y serie y actualiza correlativo
            CALL pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,l_id_comprobante,P_ID_ENTIDAD,P_ID_DEPTO, NULL, l_serie,l_correlativo);

            if l_correlativo=0 or coalesce(l_correlativo::text, '') = '' then
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Depósito: No existe serie y número de documento ('||l_id_comprobante||'), (No existe el documento o no se asignó un punto de impresión.';
--                 GOTO salida_rapida;
            else
                --obtener voucher
                select count(1) into STRICT l_contar from CONTA_VOUCHER_CONFIG
                where ID_ENTIDAD=P_ID_ENTIDAD 
                and ID_DEPTO= P_ID_DEPTO
                and ID_TIPOASIENTO=L_ID_TIPOASIENTO 
                and ID_ANHO=P_ID_ANHO
                and id_tipovoucher = 5;
          
                if l_contar>0  then
                    select AUTOMATICO into STRICT l_automatico from CONTA_VOUCHER_CONFIG  
                    where ID_ENTIDAD=P_ID_ENTIDAD 
                    and ID_DEPTO= P_ID_DEPTO
                    and ID_TIPOASIENTO=L_ID_TIPOASIENTO 
                    and ID_ANHO=P_ID_ANHO
                    and id_tipovoucher = 5; -- 5= tipo voucher ingresos   
                    if l_automatico='S' then
                        CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,5,null, 'S', P_ID_PERSONA, l_id_voucher);
                    end if;
                end if;
            end if;

            if l_id_voucher=0 then
                l_error:=2; --no existe voucher
                l_msgerror:='Depósito: No existe voucher ';
--                 GOTO salida_rapida;
            end if;

      --goto salida_rapida;
      if l_error=0 then
        
        select lpad(l_correlativo::text,8,'0') into STRICT l_numero;

        SELECT (
                CASE P_ID_MEDIOPAGO WHEN '006' THEN
                --P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||to_number(l_numero)||'-'||DECODE(L_ID_TIPOTARJETA,1,'VISA',2,'MASTERCARD',3,'DINERS CLUB',4,'AMERICAN EXPRESS')||'-Oper:'||P_OPERACION||'-'||TO_CHAR(SYSDATE,'DD/MM/YY')||'-'||P_GLOSA
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep-'||CASE WHEN L_ID_TIPOTARJETA=1 THEN 'VISA' WHEN L_ID_TIPOTARJETA=2 THEN 'MASTERCARD' WHEN L_ID_TIPOTARJETA=3 THEN 'DINERS CLUB' WHEN L_ID_TIPOTARJETA=4 THEN 'AMERICAN EXPRESS' END ||'-Oper-'||RTRIM(LTRIM(P_OPERACION))||'-'||TO_CHAR(clock_timestamp(),'DD/MM/YY')||'-'||l_serie||'-'||(l_numero)::numeric ||'-'||P_GLOSA
                WHEN '008' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||(l_numero)::numeric ||'-'||TO_CHAR(clock_timestamp(),'DD/MM/YY')||'-'||P_GLOSA
                WHEN '999' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep:'||l_serie||'-'||(l_numero)::numeric ||'-'||TO_CHAR(clock_timestamp(),'DD/MM/YY')||'-'||'A/C-'||P_GLOSA
                WHEN '001' THEN
                P_ID_ENTIDAD||'-'||P_ID_DEPTO||'-Dep-'||FC_SIGLA_CTA_BANCARIA(L_ID_CTABANCARIA)||'-Oper-'||RTRIM(LTRIM(P_OPERACION))||'-'||TO_CHAR(P_FECHA_OP,'DD/MM/YY')||'-'||l_serie||'-'||(l_numero)::numeric ||'-'||P_GLOSA
                ELSE 'DEPOSITO CLIENTES' END )
                 as GLOSA INTO STRICT L_GLOSA
;

        INSERT INTO CAJA_DEPOSITO(
          ID_ENTIDAD, 
          ID_DEPTO, 
          ID_ANHO, 
          ID_MES, 
          ID_VOUCHER, 
          ID_MEDIOPAGO, 
          ID_PERSONA, 
          ID_CLIENTE, 
          ID_TIPOTRANSACCION,
          ID_MONEDA,
          ID_DINAMICA,
          ID_VALE,
          ID_TIPOTARJETA,
          ID_CTABANCARIA,
          SERIE,
          NUMERO,
          FECHA,
          IMPORTE, 
          IMPORTE_ME,
          TIPOCAMBIO,
          GLOSA, 
          NOMBRE_DEP, 
          DOCUMENTO_DEP,
          ESTADO,
          FECHA_OPERACION,
          NRO_OPERACION,
          ID_CANAL
        )VALUES ( 
          P_ID_ENTIDAD, 
          P_ID_DEPTO, 
          P_ID_ANHO, 
          P_ID_MES, 
          l_id_voucher, 
          P_ID_MEDIOPAGO, 
          P_ID_PERSONA, 
          P_ID_CLIENTE, 
          P_ID_TIPOTRANSACCION,
          P_ID_MONEDA,
          P_ID_DINAMICA,
          L_ID_VALE,
          L_ID_TIPOTARJETA,
          L_ID_CTABANCARIA,
          l_serie,
          l_numero,
          l_fecha,
          L_IMP,
          --P_IMPORTE, 
          L_IMP_ME,
          --P_IMPORTE_ME,
          P_TIPOCAMBIO,
          --P_GLOSA, 
          L_GLOSA,
          SUBSTR(P_NOMBRE_DEP,0,50), 
          P_DOCUMENTO_DEP,
          l_estado,
          P_FECHA_OP,
          --P_OPERACION
          RTRIM(LTRIM(P_OPERACION)),
          P_ID_CANAL
        ) RETURNING ID_DEPOSITO INTO l_deposito;

        /*
        SELECT MAX(ID_DEPOSITO) INTO l_deposito FROM CAJA_DEPOSITO 
            WHERE ID_ENTIDAD= P_ID_ENTIDAD 
                AND ID_DEPTO=P_ID_DEPTO AND ID_ANHO=P_ID_ANHO 
                AND ID_MES=P_ID_MES AND ID_VOUCHER=l_id_voucher 
                AND ID_PERSONA=P_ID_PERSONA;*/
        
        --l_error:=1; --no existe voucher
        --l_msgerror:=l_deposito;
        --goto salida_rapida;
        
        /*if P_IMPORTE_TARJETA>0 and l_error=0 then --ya no se usa, solo se registra en caja_deposito
            pkg_caja_sp_crear_deposito_banco(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO , P_ID_MES ,l_deposito, P_ID_DINAMICA ,P_ID_MONEDA,P_ID_CTABANCARIA, P_ID_TIPOTARJETA,
                                P_ID_PERSONA,P_ID_MEDIOPAGO,P_OPERACION,l_fecha,P_IMPORTE_TARJETA,P_IMPORTE_ME,P_TIPOCAMBIO,
                                P_GLOSA,P_ID_TIPOASIENTO,l_estado,l_error,l_msgerror);
        end if;*/
        
        if coalesce(length(P_VENTAS),0)>0 and l_error=0 then
                IF P_ID_ENTIDAD = 9415 THEN
                    CALL pkg_caja_sp_crear_deposito_detalle_aces(l_deposito,P_VENTAS,P_IMP_VENTAS,'V',P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
                ELSE
                    CALL pkg_caja_sp_crear_deposito_detalle(l_deposito,P_VENTAS,P_IMP_VENTAS,'V',P_ID_MONEDA,P_TIPOCAMBIO,P_ID_DINAMICA,l_error,l_msgerror);
                END IF;

            select coalesce(sum(importe),0) into STRICT l_importedet from caja_deposito_detalle
            where id_deposito=l_deposito;

            if L_IMP<>l_importedet then
                l_error:=2;
                l_msgerror:='Depósito: Importe depósito('||L_IMP::text||') es diferente a la suma de importe de los documentos('||l_importedet::text||') pagados';
--                GOTO salida_rapida;
            end if;

        end if;

        
        
        l_importeasiento:=L_IMP;

        if coalesce(P_IMPORTE_TARJETA,0)>0 then
            l_importeasiento:=0;
        end if;

        if coalesce(P_IMPORTE_TRANS,0)>0 then
            l_importeasiento:=0;
        end if;
        if l_error=0  then
            --pkg_caja_sp_generar_asiento_deposito(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,l_importeasiento,L_IMP_TARJ,P_IMPORTE_TRANS,L_GLOSA,l_error,l_msgerror);
            IF P_ID_MEDIOPAGO = '008' THEN
                CALL pkg_caja_sp_generar_asiento_deposito(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,l_importeasiento,0,0,L_GLOSA,l_error,l_msgerror);
            ELSE
                CALL pkg_caja_sp_generar_asiento_deposito(l_deposito,P_ID_DINAMICA,P_ID_CTABANCARIA,0,L_IMP_TARJ,P_IMPORTE_TRANS,L_GLOSA,l_error,l_msgerror);
            END IF;

        end if;

      end if;

--       <<salida_rapida>>
      P_ERROR:=l_error;
      P_MSGERROR:=l_msgerror;
      P_ID_DEPOSITO := l_deposito;
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_crear_deposito (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_MEDIOPAGO text,P_ID_PERSONA bigint, P_ID_CLIENTE bigint,P_VENTAS text,P_IMP_VENTAS text,P_ID_TIPOTRANSACCION bigint,P_ID_MONEDA bigint,P_ID_DINAMICA bigint,P_ID_TIPOTARJETA bigint,P_ID_CTABANCARIA bigint, P_OPERACION text,P_FECHA_OP timestamp(0),P_IMPORTE bigint,P_IMPORTE_TARJETA bigint,P_IMPORTE_TRANS bigint,P_IMPORTE_ME bigint,P_TIPOCAMBIO bigint,P_GLOSA text,P_NOMBRE_DEP text, P_DOCUMENTO_DEP text,P_ID_TIPOASIENTO text,P_ID_CANAL integer DEFAULT NULL,P_ERROR out bigint,P_MSGERROR out text,P_ID_VALE integer default null,P_ID_DEPOSITO OUT bigint) FROM PUBLIC;
