-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_caja,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_caja_sp_generar_asiento_pago_upn (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


        l_dinamica bigint;
        l_asiento bigint;
        l_id_persona bigint;
        l_detalle varchar(100);
        l_detalle_in varchar(100);
        l_base decimal(10,2);
        l_igv decimal(10,2);
        l_descuento decimal(10,2);
        l_importe decimal(10,2);
        l_importe_me decimal(10,2);
        l_correlativo decimal(10,2); --Add by @vitmar
        l_es_credito varchar(1);
        l_id_comprobante varchar(10);
        l_serie_numero varchar(25);
        l_fecha_doc varchar(15);
        l_precio_alm decimal(10,2);
        l_ctas varchar(200);
        l_deptos varchar(200);
        l_ctates varchar(200);

        L_COMPROBANTE_NC varchar(25) :='';

        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;

        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_porcentaje decimal(10,2);
        l_unicoctate varchar(1);

        l_id_asientod bigint;
        l_id_tipopland bigint;
        l_id_restricciond varchar(50);
        l_id_cuentaaasid varchar(10);
        l_dcd varchar(1);
        l_id_indicadord  varchar(35);
        l_unicod varchar(1);
        l_porcentajed decimal(10,2);
        l_unicoctated varchar(1);

        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_count_cuenta_cte bigint;
        l_fondo varchar(10);
        l_importeasiento decimal(10,2);
        l_importe_cheque decimal(10,2);
        l_importe_trans decimal(10,2);
        l_descripcion varchar(255);
        l_memo varchar(255);
        l_voucher varchar(10);
        l_ref_id varchar(100);
        l_primario varchar(10);

        depto_clientes varchar(20);
        depto_banco varchar(20);

        l_id_entidad bigint;
        l_id_depto_pago varchar(20);
        l_buscar bigint;

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_operorigen bigint:=5;

        --validacion
        l_contar bigint;
        l_debito decimal(10,2);
        l_credito decimal(10,2);
        l_cont bigint;
        l_serie varchar(5);
        l_numero varchar(15);
        l_fecha timestamp(0);
        l_agrupa varchar(1);
        --l_id_cliente numeric;
        l_id_ctabancaria bigint;
        l_id_mediopago varchar(4);
        l_pgasto bigint;
        l_tipoorigen bigint;
        l_origen bigint;

        cdet CURSOR FOR	
        /*
        SELECT 
        ID_PGASTO, 0 as ID_ORIGEN, ID_TIPOORIGEN,ID_DINAMICA,ID_PERSONA,SUBSTR(DETALLE, 1, 50),IMPORTE, 0 as CORRELATIVO, 'N' AS ES_CREDITO,
        'X' as ID_COMPROBANTE, '-' AS SERIE_NUMERO, TO_CHAR(FECHA,'DD/MM/YYYY') AS FECHA
        FROM CAJA_PAGO_GASTO
        WHERE ID_PAGO = P_ID_PAGO
        UNION ALL
        */
        SELECT 
        A.ID_PCOMPRA, A.ID_COMPRA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_PROVEEDOR, SUBSTR(A.DETALLE, 1, 50), A.IMPORTE, A.IMPORTE_ME, C.CORRELATIVO, C.ES_CREDITO,
        C.ID_COMPROBANTE, (COALESCE(C.SERIE,'') || '-' ||COALESCE(C.NUMERO,'')) AS SERIE_NUMERO, TO_CHAR(C.FECHA_DOC,'DD/MM/YYYY') AS FECHA
        FROM CAJA_PAGO_COMPRA A
        INNER JOIN COMPRA C ON A.ID_COMPRA=C.ID_COMPRA
        WHERE A.ID_PAGO = P_ID_PAGO
        
UNION ALL

        SELECT 
        A.ID_PVENTA, A.ID_VENTA AS ID_ORIGEN, A.ID_TIPOORIGEN,A.ID_DINAMICA,A.ID_CLIENTE, SUBSTR((B.ID_ENTIDAD || '-' || ' Clientes'), 1, 50),A.IMPORTE,A.IMPORTE_ME,
        0 as CORRELATIVO, 'N' AS ES_CREDITO,
        B.ID_COMPROBANTE,  (COALESCE(B.SERIE,'') || '-' ||COALESCE(B.NUMERO,'')) AS SERIE_NUMERO, TO_CHAR(B.FECHA,'DD/MM/YYYY') AS FECHA
        FROM CAJA_PAGO_VENTA A INNER JOIN VENTA B ON A.ID_VENTA=B.ID_VENTA
        WHERE A.ID_PAGO = P_ID_PAGO;

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.ID_FONDO, a.PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO a
        WHERE a.ID_DINAMICA =l_dinamica
        AND COALESCE(a.ID_PARENT,0)=0  
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        /*
        CURSOR casides IS		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, ID_FONDO 
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        AND ID_DINAMICA=l_dinamica
        ORDER BY NRO_ASIENTO,DC desc;
        
        CURSOR gastos_otros_deptos IS		
        SELECT ID_DEPTO
        , IMPORTE 
        FROM COMPRA_ASIENTO
        WHERE ID_COMPRA=l_origen
        AND ID_DEPTO <> l_depto;
        */
        L_TIENE_HIJO varchar(1);
        L_ID_CUENTAAASI_HIJO_DEDITO varchar(30);
        L_ID_CUENTAAASI_HIJO_CREDITO varchar(20);
        L_ID_FONDO_HIJO_DEBITO varchar(5);

        l_gastos_otros_id_depto varchar(10);
        l_gastos_otros_importe decimal(10,2);

        
BEGIN
            
            l_detalle:='';--P_DETALLE;
            l_detalle_in:='';--P_DETALLE Ya preparado para guardar;
            -- l_fondo:='10';
            
            --OBTIENE DATOS DEL PAGO
            SELECT ID_ENTIDAD,ID_DEPTO,ID_CTABANCARIA,ID_VOUCHER,ID_MEDIOPAGO,CASE WHEN ID_MEDIOPAGO='008' THEN 7 WHEN ID_MEDIOPAGO='007' THEN 8 WHEN ID_MEDIOPAGO='001' THEN 9 END  into STRICT l_id_entidad,l_id_depto_pago, l_id_ctabancaria,l_voucher,l_id_mediopago,l_id_operorigen
            FROM CAJA_PAGO WHERE ID_PAGO=P_ID_PAGO;

            --DETALLE
            OPEN cdet;

            FETCH cdet INTO l_pgasto, l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle, l_importe, l_importe_me,l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            WHILE cdet%FOUND LOOP
                l_memo :=l_tipoorigen || '-' || l_pgasto;
                -- l_gastos_otros_importe := l_importe;
                ---DiNAMICA ASIENTO
                OPEN casi;
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_primario;
                WHILE casi%FOUND LOOP

                   IF l_agrupa = 'S' THEN 
                        l_detalle_in := SUBSTR('Op. ' || l_detalle, 1,50);
                    ELSE
                        select coalesce(NOMBRE_CORTO,'') into STRICT L_COMPROBANTE_NC from TIPO_COMPROBANTE WHERE ID_COMPROBANTE=l_id_comprobante;
                        l_detalle_in := SUBSTR( (l_correlativo || ' | ' || L_COMPROBANTE_NC || '. ' || l_serie_numero || ' | ' || l_fecha_doc), 1,50);
                    END IF;

                    select case when l_id_indicador='IMPORTE' then (l_importe)*(l_porcentaje)
                              else
                              0
                              end into STRICT l_importeasiento
;

                   select case when l_id_indicador='IMPORTE' then (l_importe_me)*(l_porcentaje)
                              else
                              0
                              end into STRICT l_importe_me
;

                    l_depto:=null;
                    l_cuenta_cte:=null;

                    if l_unico='U' then
                        select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif (l_unico='M') then
                        SELECT position('|' in l_deptos) into STRICT l_buscar;
                        if l_buscar>0 then
                            select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                            select FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                            select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into STRICT l_depto;
                        else
                            l_depto:=l_deptos;
                        end if;
                    elsif (l_unico='X') then
                       --select FC_DEPTO_CLIENTE(l_id_cliente) into l_depto from dual;
                       select FC_DEPTO_CLIENTE(l_id_persona) into STRICT l_depto;
                    ELSIF l_unico='S' THEN  -- Si es sesi√≥n
                        l_depto := l_id_depto_pago;
                    END IF;

                    IF l_es_credito = 'S' and l_dc <> 'C' THEN
                        SELECT pkg_caja_fc_ruc(l_id_persona) into STRICT l_cuenta_cte;
                    ELSE
                        if l_unicoctate='U' then
                            select  count(*) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                            if l_cont>0 then
                                if l_id_mediopago = '008' then
                                    select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                else
                                    if l_dc = 'D' then
                                        select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                                    else
                                        SELECT ID_TIPOCTACTE into STRICT l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                                    end if;
                                end if;
                            end if;
                        elsif (l_unicoctate='M') then
                            if l_dc = 'C' then
                                SELECT ID_TIPOCTACTE into STRICT l_cuenta_cte FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                        elsif (l_unicoctate='B') then
                            if l_dc = 'C' then
                                SELECT COALESCE(ID_DEPTO_OPER, l_depto), ID_TIPOCTACTE, ID_CUENTAAASI into STRICT l_depto, l_cuenta_cte, l_id_cuentaaasi FROM CAJA_CUENTA_BANCARIA WHERE ID_CTABANCARIA = l_id_ctabancaria;
                            end if;
                        elsif (l_unicoctate='X') then
                            SELECT pkg_caja_fc_ruc(l_id_persona) into STRICT l_cuenta_cte;
                            /*
                            select count(ID_RUC) into l_count_cuenta_cte from VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;  
                            if(l_count_cuenta_cte = 1) then
                                select ID_RUC into l_cuenta_cte from VW_PERSONA_JURIDICA where ID_PERSONA=l_id_persona;
                            end if;
                            */
                        end if;
                    END IF;
                    
                
                    if l_dc='C' then
                        l_importeasiento:=l_importeasiento*(-1);
                        l_importe_me := l_importe_me*(-1);
                    end if;

                    select count(*) into STRICT l_cont from CONTA_ASIENTO
                    where ID_TIPOORIGEN=l_tipoorigen
                    and ID_ORIGEN=l_pgasto
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;

                    if l_importeasiento<>0 then
                        if l_cont=0 then
                        --if l_cont=0 and l_agrupa = 'N' then 
                            INSERT INTO CONTA_ASIENTO(
                                ID_TIPOORIGEN,
                                ID_ORIGEN, 
                                FONDO,
                                DEPTO,
                                CUENTA, 
                                CUENTA_CTE,
                                RESTRICCION,
                                IMPORTE,
                                IMPORTE_ME,
                                DESCRIPCION,
                                MEMO,
                                VOUCHER, 
                                PARENT_ID,
                                REF_ID,
                                AGRUPA,
                                PRIMARIO
                            )VALUES ( 
                                l_tipoorigen,
                                l_pgasto,
                                l_fondo,
                                l_depto,
                                l_id_cuentaaasi,
                                l_cuenta_cte,
                                l_id_restriccion,
                                l_importeasiento,
                                l_importe_me,
                                l_detalle_in,
                                l_memo,
                                l_voucher,
                                null,
                                l_ref_id,
                                l_agrupa,
                                l_primario
                            );
                        else

                            update CONTA_ASIENTO set IMPORTE=l_importeasiento, IMPORTE_ME=l_importe_me
                            where ID_TIPOORIGEN=l_tipoorigen
                            and ID_ORIGEN=l_pgasto
                            and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                            and CUENTA =l_id_cuentaaasi
                            and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                            and case when importe>0 then 'D' else 'C' end=l_dc;
                            --AND 1=2;
                        end if;

                       
                       IF l_fondo = '69' THEN   -- Fondo de publicaciones
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171045';
                        ELSIF l_fondo = '68' THEN  -- Fondo Comunicaci√≥n
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171060';
                        ELSIF l_fondo = '66' THEN  -- Fondo Educaci√≥n
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171020';
                        ELSIF l_fondo = '25' THEN  -- Inversi√≥n em Inmovilizado
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171005';
                        ELSIF l_fondo = '93' THEN  -- Fondo Asistencial
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171030';
                        ELSIF l_fondo = '81' THEN  -- Fondo Donaciones Restringidas
                            L_TIENE_HIJO := 'S';
                            L_ID_CUENTAAASI_HIJO_DEDITO := '2171081';
                        ELSE
                            L_TIENE_HIJO := 'N';
                        END IF;

                        IF L_TIENE_HIJO = 'S' THEN
                            L_ID_CUENTAAASI_HIJO_CREDITO := '1171001'; --Credito Deto 0000
                            L_ID_FONDO_HIJO_DEBITO := '10';

                            -- AGREGAR ASIENTO -- DEBITO
                            INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                        CUENTA, CUENTA_CTE,
                                        RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                        MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                    values ( l_tipoorigen,l_pgasto, L_ID_FONDO_HIJO_DEBITO, '0000',
                                    L_ID_CUENTAAASI_HIJO_DEDITO, '',
                                    '0A', l_importeasiento, l_importe_me,'Asiento por inter-fondos',
                                    l_tipoorigen || '-' || l_pgasto,l_voucher, NULL, l_pgasto, 'S');

                            -- AGREGAR ASIENTO CONTRA PARTIDA -- CREDITO
                            INSERT INTO CONTA_ASIENTO(ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, 
                                        CUENTA, CUENTA_CTE,
                                        RESTRICCION,IMPORTE, IMPORTE_ME, DESCRIPCION, 
                                        MEMO,VOUCHER, PARENT_ID, REF_ID, AGRUPA)
                                    values ( l_tipoorigen,l_pgasto, l_fondo, '0000',
                                    L_ID_CUENTAAASI_HIJO_CREDITO, '',
                                    '0A', (l_importeasiento*-1), (l_importe_me*-1),'Asiento por inter-fondos',
                                    l_tipoorigen || '-' || l_pgasto,l_voucher, NULL, l_pgasto, 'S');
                        END IF;
                    end if;

                    /*
                    -- Add by @vitmar INTERDEPARTAMENTOS.
                    l_asiento := l_id_asiento;
                    --l_depto := '0000';
                    -- Saber si el gasto de la proivision esta en diferenctes departamentos
                    OPEN gastos_otros_deptos;
                    FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe;
                    WHILE gastos_otros_deptos%FOUND LOOP
                        
                        OPEN casides;
                        FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                        WHILE casides%FOUND LOOP
                            
                             select case when l_id_indicadord='IMPORTE' then 
                                (l_gastos_otros_importe)*(l_porcentaje)
                              else
                              0
                              end into l_gastos_otros_importe
                            from dual;    
                            
                            l_depto:=null;
                            l_cuenta_cte:=null;
                            
                            if l_unicod='N' then
                                l_depto := l_gastos_otros_id_depto;
                            elsif l_unicod='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_DEPTO into l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                               -- END IF;
                            end if;
                        
                            if l_unicoctated='N' then
                                l_cuenta_cte := l_gastos_otros_id_depto;
                            elsif l_unicoctated='U' then
                                    select  count(*) into l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    if l_cont=1 then
                                        select ID_CTACTE into l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                                    end if;
                               -- END IF;
                            end if;
                            l_detalle_in:='Por inter-departamento a cobrar.';
                            if l_dcd='C' then
                                l_gastos_otros_importe:=l_gastos_otros_importe*(-1);
                                l_detalle_in:='Por inter-departamento a pagar.';
                            end if;
                             
                            if l_gastos_otros_importe<>0 then
                                INSERT INTO CONTA_ASIENTO (
                                    ID_TIPOORIGEN,
                                    ID_ORIGEN, 
                                    FONDO,
                                    DEPTO,
                                    CUENTA, 
                                    CUENTA_CTE,
                                    RESTRICCION,
                                    IMPORTE,
                                    DESCRIPCION,
                                    MEMO,
                                    VOUCHER, 
                                    PARENT_ID,
                                    REF_ID,
                                    AGRUPA
                                )VALUES ( 
                                    l_tipoorigen,
                                    l_pgasto,
                                    l_fondo,
                                    l_depto,
                                    l_id_cuentaaasid,
                                    l_cuenta_cte,
                                    l_id_restricciond,
                                    l_gastos_otros_importe,
                                    l_detalle_in ,
                                    l_memo,
                                    l_voucher,
                                    null,
                                    l_ref_id,
                                    l_agrupa
                                );
                            
                            end if;

                            FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,l_unicod,l_unicoctated,l_porcentaje,l_descripcion,l_agrupa, l_fondo;
                        END LOOP;
                        CLOSE casides; 
                        
                        FETCH gastos_otros_deptos INTO l_gastos_otros_id_depto, l_gastos_otros_importe;
                    END LOOP;
                    CLOSE gastos_otros_deptos;
                    */
                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_fondo, l_primario;
                END LOOP;
                CLOSE casi;

            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe,l_importe_me, l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            END LOOP;
            CLOSE cdet;
            
            /*
            OPEN cdet;
            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe, l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            WHILE cdet%FOUND LOOP
            
                select MAX(DEPTO) into depto_clientes from conta_asiento where id_tipoorigen=l_tipoorigen and id_origen=l_pgasto and primario='S' AND ROWNUM=1;
                select MAX(DEPTO), MAX(AGRUPA) into depto_banco, l_agrupa from conta_asiento where id_tipoorigen=l_tipoorigen and id_origen=l_pgasto and primario !='S' AND ROWNUM=1;
                if depto_clientes is not null and depto_banco is not null and  depto_clientes <> depto_banco then 
                
                    l_memo :=l_tipoorigen || '-' || l_pgasto;
                    
                    INSERT INTO CONTA_ASIENTO (
                            ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                            CUENTA_CTE,RESTRICCION, IMPORTE,DESCRIPCION, MEMO,
                            VOUCHER, PARENT_ID, REF_ID,AGRUPA
                        )VALUES (
                            l_tipoorigen,l_pgasto,'10',depto_clientes,'2136080',
                            depto_banco, '0A', (l_importe*-1),'Por inter-departamento a pagar' ,l_memo,
                            l_voucher, null, l_ref_id,l_agrupa
                        );
                                
                     INSERT INTO CONTA_ASIENTO (
                            ID_TIPOORIGEN,ID_ORIGEN, FONDO, DEPTO, CUENTA, 
                            CUENTA_CTE,RESTRICCION, IMPORTE,DESCRIPCION, MEMO,
                            VOUCHER, PARENT_ID, REF_ID,AGRUPA
                        )VALUES ( 
                            l_tipoorigen,l_pgasto,'10',depto_banco, '1136080',
                            depto_clientes, '0A', l_importe,'Por inter-departamento a cobrar' ,l_memo,
                            l_voucher, null, l_ref_id,l_agrupa
                        );
                end if;
            FETCH cdet INTO l_pgasto,l_origen, l_tipoorigen,l_dinamica,l_id_persona,l_detalle,l_importe, l_correlativo, l_es_credito, l_id_comprobante, l_serie_numero, l_fecha_doc;
            END LOOP;
            CLOSE cdet; 
            */
            select count(*) into STRICT l_contar from CONTA_ASIENTO
            where ID_TIPOORIGEN=l_tipoorigen
            and ID_ORIGEN=l_pgasto;

            if l_contar=0 then
              l_error:=3; --no se ha generado el asiento
              l_msgerror:='Asiento Pago: No se ha generado el asiento';
            else
                select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
                COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
                into STRICT l_debito,l_credito
                from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_tipoorigen
                and ID_ORIGEN=l_pgasto;

                if l_credito=0 or l_credito=0 then
                    l_error:=4; --importe de debito o credito igual a cero
                    l_msgerror:='Asiento Pago: Importe de d√©bito o cr√©dito igual a cero';
                else
                    if l_credito<>l_credito then
                        l_error:=5; --descuadre de asiento
                        l_msgerror:='Asiento Pago: Descuadre de asiento';
                    end if;
                end if;
            end if;

            P_ERROR:=l_error;
            P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_caja_sp_generar_asiento_pago_upn (P_ID_PAGO bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
