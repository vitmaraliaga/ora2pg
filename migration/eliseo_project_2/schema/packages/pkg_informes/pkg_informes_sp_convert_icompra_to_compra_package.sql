-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_informes,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_informes_sp_convert_icompra_to_compra ( P_ID_ICOMPRA bigint, P_ID_TIPOTRANSACCION bigint, P_ID_DINAMICA bigint, P_ID_VOUCHER bigint, P_ID_COMPRA OUT bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE

       	L_ID_ENTIDAD bigint;
       	L_ID_DEPTO varchar(20);
       	L_ID_COMPROBANTE varchar(2);

       	L_ES_CREDITO varchar(2) :='N';
	   	L_ES_ELECTRONICA varchar(2) :='N';
	  	L_ES_TRANSPORTE_CARGA varchar(2) :='N';
		L_ID_PARENT bigint;
		L_FECHA_VENCIMIENTO timestamp(0);

       	L_ID_PROVEEDOR bigint;
       	L_SERIE varchar(25);
       	L_NUMERO varchar(25);
       	L_FECHA_DOC varchar(25);

        L_FECHA_ALMACEN timestamp(0);

        L_ES_RET_DET varchar(1) := NULL;
        L_ID_ANHO bigint;
        L_ID_MES bigint;
        L_ID_PERSONA bigint;

        --L_VOUCHER_MES varchar(10);
        --L_DOC_MES varchar(10);
       	L_TIENE_KARDEX varchar(1) := NULL;

       	L_TIPO varchar(10) := 'NG';
       	L_TIPO_CAMBIO bigint := 0;
       	L_ID_MONEDA bigint;
       	LI_IMPORTE bigint;
        LI_IMPORTE_ME bigint;
       	LI_TAXS bigint;
        LI_TAXS_ME bigint;
       	LI_OTROS bigint;
        LI_OTROS_ME bigint;
        LI_SINCREDITO bigint;
    	LI_SINCREDITO_ME bigint;

       	-- VARIABLES DE CALCULO.
       	L_BASE decimal(10,2) := 0;
       	L_IGV decimal(10,2) := 0;
       	L_OUT_SINCREDITO decimal(10,2) := 0;
       	L_TOTAL decimal(10,2) := 0;
       	L_IMPORTE_ME decimal(10,2) := 0;
       	L_GET_IGV boolean := TRUE;
       	L_ID_IGV bigint;
        L_PORCENTAJE_IGV bigint;

       -- VARIABLES DE DESTINO
        L_BASE_GRAVADA decimal(10,2);
        L_IGV_GRAVADO decimal(10,2);
        L_BASE_MIXTA decimal(10,2);
        L_IGV_MIXTO decimal(10,2);
        L_BASE_NOGRAVADA decimal(10,2);
        L_IGV_NOGRAVADO decimal(10,2);

        L_BASE_SINCREDITO decimal(10,2); -- SOLO PARA NO BOLETAS DE VENTAS
        L_OTROS decimal(10,2);

        l_id_compra_existe bigint;
        L_E_ID_ENTIDAD bigint;
        L_E_ID_DEPTO varchar(25);
       	L_E_ID_ANHO bigint;
      	L_E_ID_MES bigint;
        L_E_ESTADO varchar(10);
        L_E_USER varchar(150);

        
        L_ID_COMPRA bigint := 0;
       	L_ERROR bigint :=0;
       	L_MSGERROR varchar(300) :='';

    
BEGIN
	    
         SELECT ic.ID_COMPROBANTE, I.ID_ENTIDAD,I.ID_DEPTO,IC.TIPO_CAMBIO, IC.ID_MONEDA, COALESCE(IC.IMPORTE, 0),COALESCE(IC.IMPORTE_ME, 0), COALESCE(IC.TAXS, 0),COALESCE(IC.TAXS_ME, 0), COALESCE(IC.OTROS, 0), COALESCE(IC.OTROS_ME, 0), COALESCE(IC.ID_IGV,18)
      		, IC.ID_PROVEEDOR, IC.SERIE, IC.NUMERO,IC.FECHA, I.ID_ANHO, I.ID_MES, I.ID_PERSONA, COALESCE(ic.SINCREDITO, 0), COALESCE(ic.SINCREDITO_ME , 0)
            INTO STRICT L_ID_COMPROBANTE, L_ID_ENTIDAD, L_ID_DEPTO,L_TIPO_CAMBIO,L_ID_MONEDA, LI_IMPORTE, LI_IMPORTE_ME,LI_TAXS,LI_TAXS_ME, LI_OTROS,LI_OTROS_ME, L_ID_IGV
            , L_ID_PROVEEDOR,L_SERIE,L_NUMERO,L_FECHA_DOC, L_ID_ANHO, L_ID_MES, L_ID_PERSONA,LI_SINCREDITO,LI_SINCREDITO_ME
            FROM INFORME_COMPRA ic
            INNER JOIN INFORME i ON IC.ID_INFORME=I.ID_INFORME
            WHERE ic.ID_ICOMPRA=P_ID_ICOMPRA;

	    IF L_ID_COMPROBANTE='02' then  -- RECIBO POR HONORARIO 
	        L_ERROR := 1;
	        L_MSGERROR := 'Alto! Tipo de documento no aceptado.';
-- 	        GOTO salida_rapida;
	    END IF;
	
	    IF LI_IMPORTE=0 then  
	        L_ERROR := 1;
	        L_MSGERROR := 'Alto! El importe del comprobante legal no puede ser 0 ('||L_SERIE|| '-'||L_NUMERO|| ') ';
-- 	        GOTO salida_rapida;
	    END IF;

	    IF L_ID_ENTIDAD = 7115 THEN  -- Nuevo Tiempo
            L_TIPO := 'G'; -- Adquisiciones grabadas destinadas a operaciones grabadas
        END IF;
                                            -- 
        L_PORCENTAJE_IGV := (L_ID_IGV/100);

        -- Validar que el comprobante no exista en el registro de compras.
       SELECT  COALESCE(max(ID_COMPRA),0) INTO STRICT l_id_compra_existe
                FROM COMPRA
                WHERE ID_PROVEEDOR = L_ID_PROVEEDOR
                AND ID_COMPROBANTE = L_ID_COMPROBANTE
                AND trim(both LEADING '0' from upper(SERIE) ) = trim(both LEADING '0' from upper(L_SERIE) )
                AND trim(both LEADING '0' from upper(numero) ) = trim(both LEADING '0' from upper(L_NUMERO) )
                AND ID_COMPRA <> L_ID_COMPRA;

      IF l_id_compra_existe <> 0 THEN
      		SELECT c.ID_ENTIDAD, c.ID_DEPTO, c.ID_ANHO, c.ID_MES, c.estado, (SELECT max(u.EMAIL) FROM USERS u WHERE u.id=c.ID_PERSONA) 
      		INTO STRICT L_E_ID_ENTIDAD, L_E_ID_DEPTO,L_E_ID_ANHO, L_E_ID_MES,L_E_ESTADO, L_E_USER FROM COMPRA c WHERE c.ID_COMPRA =l_id_compra_existe;
	        L_ERROR := 1;
	        L_MSGERROR := 'Alto! El comprobante ('||L_SERIE|| '-'||L_NUMERO|| ') ya esta registrado en la entidad-depto: '||L_E_ID_ENTIDAD||'-'||L_E_ID_DEPTO||' - '||L_E_ID_ANHO||'-'||L_E_ID_MES||'; Estado: '||L_E_ESTADO||'; Usuario: '||L_E_USER||'-'||l_id_compra_existe;
-- 	        GOTO salida_rapida;
	    END IF;
      
         IF L_ID_MONEDA = 7 THEN  --soles
	    
	        CALL pkg_purchases_sp_compra_calcular(
	            -- IN
	            L_ID_COMPROBANTE, L_GET_IGV, L_TIPO_CAMBIO, L_ID_MONEDA, LI_IMPORTE, LI_TAXS, LI_SINCREDITO, LI_OTROS,L_PORCENTAJE_IGV, 
	            -- OUT
	            L_BASE, L_IGV, L_OUT_SINCREDITO, L_TOTAL, L_IMPORTE_ME);

        ELSE 
	        CALL pkg_purchases_sp_compra_calcular(
	            -- IN
	            L_ID_COMPROBANTE, L_GET_IGV, L_TIPO_CAMBIO, L_ID_MONEDA, LI_IMPORTE_ME, LI_TAXS_ME, LI_SINCREDITO_ME, LI_OTROS_ME,L_PORCENTAJE_IGV, 
	            -- OUT
	            L_BASE, L_IGV, L_OUT_SINCREDITO, L_TOTAL, L_IMPORTE_ME);
        END IF;

	     IF L_BASE < 0 OR L_IGV < 0 OR L_OUT_SINCREDITO < 0 OR L_TOTAL <= 0 THEN
	     	L_ERROR := 1;
	        L_MSGERROR := 'Alto! Los importes calculados son incorrectos (Base: '||L_BASE::text||', Igv: '||L_IGV::text||', Inafecto: '||L_OUT_SINCREDITO::text||', Total: '||L_TOTAL::text||')';
-- 	        GOTO salida_rapida;
	     END IF;
           
       	CALL pkg_purchases_sp_compra_destino_operacion(
        -- IN
        L_ID_COMPROBANTE, L_TIPO, L_BASE, L_IGV, L_OUT_SINCREDITO,
        -- OUT
        L_BASE_GRAVADA, L_IGV_GRAVADO, L_BASE_MIXTA, L_IGV_MIXTO,
        L_BASE_NOGRAVADA, L_IGV_NOGRAVADO, L_BASE_SINCREDITO, L_OTROS);

        
        CALL pkg_purchases_sp_compra_guardar_actualizar(
	        	L_ES_CREDITO,
	        	L_ID_PROVEEDOR,
	        	L_ID_COMPROBANTE,
	        	L_ES_ELECTRONICA,
	        	L_ES_TRANSPORTE_CARGA,
        		L_ID_PARENT,
        		L_SERIE,
        		L_NUMERO,
        		L_FECHA_DOC,
        		L_FECHA_VENCIMIENTO,
        		P_ID_DINAMICA,
        		P_ID_TIPOTRANSACCION,
        		L_ID_MONEDA,
		        LI_TAXS,
		        
		        L_ES_RET_DET,
		        L_TIPO_CAMBIO,
		        L_TOTAL,
		        L_IMPORTE_ME,
		        L_BASE_GRAVADA,
		        L_IGV_GRAVADO,
		        L_BASE_MIXTA,
		        L_IGV_MIXTO,
		        L_BASE_NOGRAVADA,
		        L_IGV_NOGRAVADO,
		        L_BASE_SINCREDITO,
		        L_OTROS,
		        L_FECHA_ALMACEN,
		        L_TIENE_KARDEX,
		        
		        P_ID_VOUCHER,
		        L_ID_ENTIDAD,
		        L_ID_DEPTO,
		        L_ID_PERSONA,
		        L_ID_ANHO,
		        L_ID_MES,
		        L_ID_IGV,
		        
		        L_ERROR,
		        L_ID_COMPRA,
		        L_MSGERROR
    		);
    	
	    	IF L_ERROR = 1 THEN
-- 	    		GOTO salida_rapida;
	    	END IF;

	    
--        <<salida_rapida>>
       P_ID_COMPRA := L_ID_COMPRA;
       P_ERROR := L_ERROR;
       P_MSGERROR := L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_informes_sp_convert_icompra_to_compra ( P_ID_ICOMPRA bigint, P_ID_TIPOTRANSACCION bigint, P_ID_DINAMICA bigint, P_ID_VOUCHER bigint, P_ID_COMPRA OUT bigint, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
