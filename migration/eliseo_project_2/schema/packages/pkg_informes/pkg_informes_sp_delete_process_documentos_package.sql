-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_informes,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_informes_sp_delete_process_documentos ( P_IDS_DOCUMENTOS text, P_TIPO text, -- 'L', 'NL'
 P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE


        s_informe_compras tablastring;
        s_gastos tablastring;

        s_id_icompra bigint;
        s_id_compra bigint;
        s_id_igasto bigint;

       L_ID_TIPOORIGEN bigint;
       L_ID_VOUCHER bigint;
       L_VOUCHER_ACTIVO varchar(10);

       L_ERROR bigint :=0;
       L_MSGERROR varchar(300) :='';

    
BEGIN
        
        IF P_TIPO='L' THEN
            select eliseo.FC_SPLIT(P_IDS_DOCUMENTOS,'|') into STRICT s_informe_compras;

            FOR i IN s_informe_compras.FIRST .. s_informe_compras.LAST
            loop
                select cast(s_informe_compras(i) as bigint) into STRICT s_id_icompra;

                --==========
                -- Recuperamos el id_compra, si no existe no hacemos nada.
                SELECT ic.ID_COMPRA INTO STRICT s_id_compra FROM INFORME_COMPRA ic WHERE ic.ID_ICOMPRA=s_id_icompra;
               	IF coalesce(s_id_compra::text, '') = '' THEN
               		CONTINUE; -- Continuar con el siguiente item del each
              	END IF;

                SELECT COALESCE(max(ID_TIPOORIGEN),0), COALESCE(max(ID_VOUCHER),0) INTO STRICT L_ID_TIPOORIGEN, L_ID_VOUCHER 
                FROM ELISEO.COMPRA WHERE ID_COMPRA =s_id_compra;

                IF L_ID_VOUCHER <> 0 THEN
                	SELECT ACTIVO INTO STRICT L_VOUCHER_ACTIVO FROM CONTA_VOUCHER WHERE ID_VOUCHER = L_ID_VOUCHER;
	              	IF L_VOUCHER_ACTIVO='N' THEN
	              		L_ERROR := 1;
	              	 	L_MSGERROR := 'Alto! No puede eliminar la distribucuón contable, el voucher ya fue cerrado.';
-- 	              	 	GOTO salida_rapida;
	              	END IF;
                END IF;
                --==========
               RAISE NOTICE 's_id_compra .... %', s_id_compra;
                --UPDATE COMPRA SET ESTADO='0', ID_VOUCHER=null, ID_TIPOTRANSACCION=NULL, ID_DINAMICA=NULL WHERE ID_COMPRA=s_id_compra;
                UPDATE INFORME_COMPRA SET ID_COMPRA  = NULL WHERE ID_ICOMPRA=s_id_icompra;
                DELETE FROM COMPRA_DETALLE WHERE ID_COMPRA=s_id_compra;
                DELETE FROM COMPRA_ASIENTO WHERE ID_COMPRA=s_id_compra;
                DELETE FROM COMPRA WHERE ID_COMPRA=s_id_compra;
                DELETE FROM CONTA_ASIENTO WHERE ID_ORIGEN=s_id_compra AND ID_TIPOORIGEN=L_ID_TIPOORIGEN;

            end loop;
        ELSE
            select eliseo.FC_SPLIT(P_IDS_DOCUMENTOS,'|') into STRICT s_gastos;

            FOR i IN s_gastos.FIRST .. s_gastos.LAST
            loop
                select cast(s_gastos(i) as bigint) into STRICT s_id_igasto;

                SELECT ID_TIPOORIGEN, COALESCE(ID_VOUCHER,0) INTO STRICT L_ID_TIPOORIGEN, L_ID_VOUCHER
                FROM ELISEO.INFORME_GASTO WHERE ID_IGASTO=s_id_igasto;

                IF L_ID_VOUCHER <> 0 THEN
                	SELECT ACTIVO INTO STRICT L_VOUCHER_ACTIVO FROM CONTA_VOUCHER WHERE ID_VOUCHER = L_ID_VOUCHER;
	              	IF L_VOUCHER_ACTIVO='N' THEN
	              		L_ERROR := 1;
	              	 	L_MSGERROR := 'Alto! No puede eliminar la distribucuón contable, el voucher ya fue cerrado.';
-- 	              	 	GOTO salida_rapida;
	              	END IF;
                END IF;

                UPDATE INFORME_GASTO SET ESTADO='0', ID_VOUCHER = NULL, ID_TIPOTRANSACCION = NULL, ID_DINAMICA = NULL WHERE ID_IGASTO=s_id_igasto;
                DELETE FROM CONTA_ASIENTO WHERE ID_ORIGEN=s_id_igasto AND ID_TIPOORIGEN=L_ID_TIPOORIGEN;

            end loop;
        END IF;

--        <<salida_rapida>>
       P_ERROR := L_ERROR;
       P_MSGERROR := L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_informes_sp_delete_process_documentos ( P_IDS_DOCUMENTOS text, P_TIPO text, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
