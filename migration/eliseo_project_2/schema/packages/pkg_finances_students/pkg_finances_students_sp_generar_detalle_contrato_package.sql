-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_generar_detalle_contrato (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

    l_error bigint:=0;
    l_msgerror varchar(200):='';
    l_tipo_alumno varchar(5);
    l_contar bigint;
    l_id_semestre_programa bigint;

    l_id_criterio_semestre bigint;
    l_id_criterio_ing bigint;
    l_total decimal(15,2);
    l_dc varchar(2);
    l_id_semestre_programa_ori bigint;
    l_tienehijo bigint;
    l_tipo_valor varchar(2);
    l_descripcion varchar(500);
    l_aplazado varchar(2);
    l_creditos decimal(10,2);
    curdetING CURSOR FOR
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      coalesce(sum(B.TOTAL),0) as TOTAL,
      A.DC,
      B.ID_SEMESTRE_PROGRAMA,
      A.TIENE_HIJO,
      B.TIPO_VALOR,
      B.DESCRIPCION,
      B.APLAZADO
    FROM VW_MAT_CRITERIO_SEMESTRE A,MAT_CONCEPTO_ASIGN_ALUM B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND B.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND A.DC='D'
    GROUP BY A.ID_CRITERIO_SEMESTRE,
      A.ID_CRITERIO,
      A.DC,
      B.ID_SEMESTRE_PROGRAMA,
      A.TIENE_HIJO,
      A.ORDEN,
      B.TIPO_VALOR,
      B.DESCRIPCION,
      B.APLAZADO
    ORDER BY A.DC DESC,A.ORDEN;

    
    
    curdetDES CURSOR FOR
    SELECT
      A.ID_CRITERIO_SEMESTRE,
      coalesce(B.TOTAL,0) as TOTAL,
      A.DC,
      B.TIPO_VALOR,
      A.TIENE_HIJO,
      B.DESCRIPCION,
      B.ID_SEMESTRE_PROGRAMA,
      B.CREDITOS,
      B.unitario_cred
    FROM VW_MAT_CRITERIO_SEMESTRE A,MAT_CONCEPTO_ASIGN_ALUM B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND B.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND A.DC='C'
    AND coalesce(A.ID_AFECTA,0)=l_id_criterio_ing 
    ORDER BY A.DC DESC,A.ORDEN;

    
    
    l_id_criterio_semestre_des bigint;
    l_total_des decimal(10,2);
    l_dc_des varchar(2);
    l_tipo_valor_des varchar(5);
    l_tienehijo_des bigint;
    l_descripcion_des varchar(500);
    l_id_semestre_programa_ori_des bigint;

    l_acumula  decimal(10,2);
    l_importe  decimal(10,2);
    l_i bigint:=0;
    l_id_parent bigint;

    l_k bigint:=0;
    l_numhijo bigint;
    l_id_plan_pago_semestre bigint;

    

    l_total_debito decimal(15,2);
    l_total_credito decimal(15,2);
    l_matricula decimal(15,2);
    l_mensual decimal(15,2);
    l_mensual_resi decimal(15,2);
    l_contado decimal(15,2);
    l_matricula1cuota decimal(15,2);
    l_pago decimal(15,2);
    l_saldo decimal(15,2);
    l_cuotas decimal(10,2);
    l_id_persona bigint;
    l_id_depto varchar(10);

    total_dc decimal(10,2);
    imp_dc decimal(10,2);
    l_prd decimal(10,2);
    l_contarcrit bigint:=0;
    l_id_matricula_detalle bigint;
    l_codigo_mod varchar(10);
    l_creditosvar decimal(10,2):=0;
    l_errorvar bigint;
    l_conmat1cuota varchar(1);
    l_creditos_det decimal(10,2):=0;
    unitario_cred decimal(10,2):=0;
    l_total_r  decimal(10,2):=0;
    l_total_debito_r  decimal(10,2):=0;
    l_total_credito_r  decimal(10,2):=0;
    L_ID_SEMESTRE bigint;
    L_ID_RESID_TIPO_HABITACION bigint;
    L_CANT bigint;

BEGIN
    SELECT ID_PERSONA, ID_SEMESTRE_PROGRAMA, id_matricula_detalle
    INTO STRICT l_id_persona,l_id_semestre_programa,l_id_matricula_detalle
    FROM DAVID.ACAD_ALUMNO_CONTRATO
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;
  --eliminar 
    DELETE FROM MAT_CONCEPTO_ASIGN_ALUM WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    DELETE FROM MAT_ALUMNO_CONTRATO_DET WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

     select B.CODIGO INTO STRICT l_codigo_mod 
    FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;

    SELECT ID_SEMESTRE INTO STRICT L_ID_SEMESTRE FROM DAVID.ACAD_SEMESTRE_PROGRAMA WHERE ID_SEMESTRE_PROGRAMA = l_id_semestre_programa;

    SELECT COUNT(1) INTO STRICT L_CANT
    FROM DAVID.ACAD_RESERVA_RESIDENCIA A JOIN DAVID.RESIDENCIA_HABITACION B ON A.ID_HABITACION = B.ID_HABITACION WHERE A.ID_PERSONA = l_id_persona AND A.ID_SEMESTRE = L_ID_SEMESTRE;

    IF L_CANT > 0 THEN
        SELECT ID_RESID_TIPO_HABITACION INTO STRICT L_ID_RESID_TIPO_HABITACION 
        FROM DAVID.ACAD_RESERVA_RESIDENCIA A JOIN DAVID.RESIDENCIA_HABITACION B ON A.ID_HABITACION = B.ID_HABITACION WHERE A.ID_PERSONA = l_id_persona AND A.ID_SEMESTRE = L_ID_SEMESTRE;
    END IF;

    UPDATE DAVID.ACAD_ALUMNO_CONTRATO  SET 
      TOTAL=0,
      TOTAL_DEBITO=0,
      TOTAL_CREDITO=0,
      MATRICULA=0,
      MENSUAL=0,
      CONTADO=0,
      MATRICULA1CUOTA=0,
      PAGO=0,
      ID_RESID_TIPO_HABITACION= L_ID_RESID_TIPO_HABITACION ,
      DIAS_RESIDENCIA=0,
      creditos=0,
      creditosvar=0,
      MENSUAL_ENS_RESI=0
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

    
    
    --PROCESA INGRESOS
    CALL pkg_finances_students_sp_ingresos_alum_contrato(P_ID_ALUMNO_CONTRATO,l_tipo_alumno,l_error,l_msgerror);

    IF l_error=2 THEN

       
    
        if l_codigo_mod='V' THEN
          
         	select
            sum(credito_variados)   INTO STRICT l_creditosvar
            FROM (
            SELECT
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=1 THEN acd.credito  ELSE 0 END ),0) credito_insertados,
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=2 THEN acd.credito  ELSE 0 END ),0) credito_removidos,
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=2 THEN (acd.credito*-1)  ELSE acd.credito END ),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            
union 
            all

            PERFORM
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=1 THEN acd.credito  ELSE 0 END ),0) credito_insertados,
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=2 THEN acd.credito  ELSE 0 END ),0) credito_removidos,
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=2 THEN (acd.credito*-1)  ELSE acd.credito END ),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO ) alias15;

            /*
         SELECT 
          coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  
          INTO l_creditosvar
          FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
          WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
          and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO; */
        else
          SELECT coalesce(sum(CREDITO),0)
          INTO STRICT l_creditos
          FROM VW_MAT_CURSOS_PLAN_ALUMNO 
          WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
        end if;

   
    
        UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET
          creditos=l_creditos,
          creditosvar=l_creditosvar
        WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

        l_error:=0;
        l_msgerror:='No requiere proceso de variaci√≥n';

--         GOTO salida_detcontrato;
    END IF;

    IF l_error<>0 THEN
--         GOTO salida_detcontrato;
    END IF;
    --procesa_descuento
    SELECT COUNT(*) INTO STRICT l_contar FROM MAT_CRITERIO_SEMESTRE A,MAT_CRITERIO C
    WHERE A.ID_CRITERIO=C.ID_CRITERIO
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
    AND C.DC='C';

    IF l_contar>0 THEN
      CALL pkg_finances_students_sp_desctos_alum_contrato(P_ID_ALUMNO_CONTRATO,l_tipo_alumno,l_error,l_msgerror);

      IF l_error<>0 THEN
--         GOTO salida_detcontrato;
      END IF;

    END IF;

    --ELIMINA LOS QUE TIENE IMPORTE CERO QUE NO SEN PADRES
    DELETE FROM MAT_CONCEPTO_ASIGN_ALUM 
    WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND TOTAL=0
    AND ID_CRITERIO_SEMESTRE IN (
      SELECT ID_CRITERIO_SEMESTRE
      FROM VW_MAT_CRITERIO_SEMESTRE
      WHERE ID_SEMESTRE_PROGRAMA=l_id_semestre_programa
      AND TIENE_HIJO=0
    );

    
    OPEN curdetING;
    FETCH curdetING INTO l_id_criterio_semestre,l_id_criterio_ing,l_total,l_dc,l_id_semestre_programa_ori,l_tienehijo,l_tipo_valor,l_descripcion,l_aplazado;

    WHILE curdetING%FOUND LOOP
      l_acumula:=l_total;

      SELECT COALESCE(MAX(ID_ALUMNO_CONTRATO_DET),0)+1  INTO STRICT l_i FROM MAT_ALUMNO_CONTRATO_DET
      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

      l_id_parent := l_i;

      SELECT 
      ID_DEPTO INTO STRICT l_id_depto
      FROM DAVID.ACAD_SEMESTRE_PROGRAMA A, DAVID.ACAD_PROGRAMA_ESTUDIO B, ORG_SEDE_AREA C
      WHERE A.ID_PROGRAMA_ESTUDIO=B.ID_PROGRAMA_ESTUDIO
      AND B.ID_SEDEAREA=C.ID_SEDEAREA
      AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_ori;

      INSERT INTO MAT_ALUMNO_CONTRATO_DET(
        ID_ALUMNO_CONTRATO,
        ID_CRITERIO_SEMESTRE,
        ID_ALUMNO_CONTRATO_DET,
        IMPORTE,
        DC,
        ACUMULA,
        ID_SEMESTRE_PROGRAMA,
        ID_PARENT,
        DESCRIPCION,
        IMP_CAL,
        TIPO_VALOR,
        APLAZADO,
        ID_DEPTO
       ) VALUES (
        P_ID_ALUMNO_CONTRATO,
        l_id_criterio_semestre,
        l_i,
        l_total,
        l_dc,
        NULL,
        l_id_semestre_programa_ori,
        NULL,
        l_descripcion,
        NULL,
        l_tipo_valor,
        l_aplazado,
        l_id_depto
       );

      
     
      
      --DESCUENTO ASOCIADO
        --descuento padre
        if l_k=0 then
          
          SELECT COALESCE(MAX(ID_ALUMNO_CONTRATO_DET),0)  INTO STRICT l_i FROM MAT_ALUMNO_CONTRATO_DET
          WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

         
          INSERT INTO MAT_ALUMNO_CONTRATO_DET(
            ID_ALUMNO_CONTRATO,
            ID_CRITERIO_SEMESTRE,
            ID_ALUMNO_CONTRATO_DET,
            IMPORTE,
            DC,
            ACUMULA,
            ID_SEMESTRE_PROGRAMA,
            ID_PARENT,
            DESCRIPCION,
            IMP_CAL,
            TIPO_VALOR
           )
       
          SELECT
            P_ID_ALUMNO_CONTRATO,
            A.ID_CRITERIO_SEMESTRE,
            (row_number() OVER ( ORDER BY A.ID_CRITERIO_SEMESTRE ASC )) + l_i AS items, 
            0,
            A.DC,
            0,
            A.ID_SEMESTRE_PROGRAMA,
            null,
            A.NOMBRE,
            0,
            A.TIPO_VALOR
          FROM VW_MAT_CRITERIO_SEMESTRE A
          WHERE A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND A.DC='C'
          AND coalesce(A.ID_AFECTA::text, '') = ''
          and A.TIENE_HIJO>0 
          ORDER BY A.DC DESC,A.ORDEN;
          
        end if;

       
      
        OPEN curdetDES;
        FETCH curdetDES INTO l_id_criterio_semestre_des,l_total_des,l_dc_des,l_tipo_valor_des,l_tienehijo_des,l_descripcion_des,l_id_semestre_programa_ori_des,l_creditos_det,unitario_cred;

        WHILE curdetDES%FOUND LOOP
        
            SELECT COALESCE(MAX(ID_ALUMNO_CONTRATO_DET),0)+1  INTO STRICT l_i FROM MAT_ALUMNO_CONTRATO_DET
            WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;

            
            if l_tipo_valor_des='I' then
              select coalesce(sum(TOTAL),0) into STRICT total_dc from MAT_CONCEPTO_ASIGN_ALUM 
              where ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO 
              and ID_CRITERIO_SEMESTRE=l_id_criterio_semestre;

              select importe into STRICT imp_dc from MAT_ALUMNO_CONTRATO_DET 
              where ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO 
              and ID_CRITERIO_SEMESTRE=l_id_criterio_semestre
              and ID_ALUMNO_CONTRATO_DET=l_id_parent;

              l_prd:=0;

              if total_dc>0 then
                l_prd:=imp_dc/total_dc;
              end if;
              l_total_des := l_prd*l_total_des;

             
            end if;


            if l_tipo_valor_des = 'P' THEN
              l_importe:=(l_total_des/100)*l_acumula;
            else
              l_importe:=l_total_des;
            END IF;

            l_acumula := l_acumula - l_importe;

            SELECT 
            ID_DEPTO INTO STRICT l_id_depto
            FROM DAVID.ACAD_SEMESTRE_PROGRAMA A, DAVID.ACAD_PROGRAMA_ESTUDIO B, ORG_SEDE_AREA C
            WHERE A.ID_PROGRAMA_ESTUDIO=B.ID_PROGRAMA_ESTUDIO
            AND B.ID_SEDEAREA=C.ID_SEDEAREA
            AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa_ori_des;

            if (l_total>0 and l_importe>0 ) or (l_total<0 and l_importe<0 ) then
              INSERT INTO MAT_ALUMNO_CONTRATO_DET(
                  ID_ALUMNO_CONTRATO,
                  ID_CRITERIO_SEMESTRE,
                  ID_ALUMNO_CONTRATO_DET,
                  IMPORTE,
                  DC,
                  ACUMULA,
                  ID_SEMESTRE_PROGRAMA,
                  ID_PARENT,
                  DESCRIPCION,
                  IMP_CAL,
                  TIPO_VALOR,
                  ID_DEPTO,
                  CREDITOS,
                  UNITARIO
                 ) VALUES (
                  P_ID_ALUMNO_CONTRATO,
                  l_id_criterio_semestre_des,
                  l_i,
                  l_importe,
                  l_dc_des,
                  l_acumula,
                  l_id_semestre_programa_ori,
                  l_id_parent,
                  l_descripcion_des,
                  l_total_des,
                  l_tipo_valor_des,
                  l_id_depto,
                  l_creditos_det,
                  unitario_cred
                 );
            end if;
            FETCH curdetDES INTO l_id_criterio_semestre_des,l_total_des,l_dc_des,l_tipo_valor_des,l_tienehijo_des,l_descripcion_des,l_id_semestre_programa_ori_des,l_creditos_det,unitario_cred;

        END LOOP;
        CLOSE curdetDES;
      l_k:=l_k+1;
      l_contarcrit:=l_contarcrit +1;
      FETCH curdetING INTO l_id_criterio_semestre,l_id_criterio_ing,l_total,l_dc,l_id_semestre_programa_ori,l_tienehijo,l_tipo_valor,l_descripcion,l_aplazado;

    END LOOP;
    CLOSE curdetING;

    
    
    IF l_contarcrit=0 THEN
        l_error:=1;
        l_msgerror:='No est√° asignado criterios de matricula';
--         GOTO salida_detcontrato;
    END IF;

    ---solo descuento
    SELECT
    COUNT(*) INTO STRICT l_numhijo  
    FROM VW_MAT_CRITERIO_SEMESTRE A, MAT_ALUMNO_CONTRATO_DET D
    WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
    AND A.DC='C'
    AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
    AND D.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
    AND (A.ID_PARENT IS NOT NULL AND A.ID_PARENT::text <> '');

    IF l_numhijo>0 THEN
       MERGE INTO MAT_ALUMNO_CONTRATO_DET S 
       USING(
          SELECT
          D.ID_ALUMNO_CONTRATO,A.ID_SEMESTRE_PROGRAMA,A.ID_CRITERIO_SEMESTRE,D.ID_ALUMNO_CONTRATO_DET,E.TOTAL  
          FROM VW_MAT_CRITERIO_SEMESTRE A, MAT_ALUMNO_CONTRATO_DET D,(
            SELECT
            X.ID_PARENT, COALESCE(SUM(Z.IMPORTE),0) as total
            FROM VW_MAT_CRITERIO_SEMESTRE X, MAT_ALUMNO_CONTRATO_DET Z
            WHERE X.ID_CRITERIO_SEMESTRE=Z.ID_CRITERIO_SEMESTRE
            AND X.DC='C'
            AND X.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
            AND Z.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
            AND (X.ID_PARENT IS NOT NULL AND X.ID_PARENT::text <> '') 
            group by X.ID_PARENT
          )E
          WHERE A.ID_CRITERIO_SEMESTRE=D.ID_CRITERIO_SEMESTRE
          AND E.ID_PARENT=A.ID_CRITERIO
          AND A.DC='C'
          AND A.ESTADO='1'
          AND A.ID_SEMESTRE_PROGRAMA = l_id_semestre_programa
          AND D.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
          AND coalesce(A.ID_PARENT::text, '') = '' 
      )T ON (T.ID_ALUMNO_CONTRATO=S.ID_ALUMNO_CONTRATO AND T.ID_SEMESTRE_PROGRAMA=S.ID_SEMESTRE_PROGRAMA AND T.ID_CRITERIO_SEMESTRE= S.ID_CRITERIO_SEMESTRE AND T.ID_ALUMNO_CONTRATO_DET=S.ID_ALUMNO_CONTRATO_DET)
       WHEN  MATCHED THEN UPDATE SET  
       S.IMPORTE = T.TOTAL;

    END IF;

    --CALCULO DE TOTALES
    
    SELECT count(*)
    INTO STRICT l_contar
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

    
    IF l_contar=0 THEN
        l_error:=1;
        l_msgerror:='No tiene asignado plan de pagos';
--         GOTO salida_detcontrato;
    END IF;

    SELECT C.CUOTAS,coalesce(c.CONMAT1CUOTA,'S')
    INTO STRICT l_cuotas,l_conmat1cuota
    FROM DAVID.ACAD_ALUMNO_CONTRATO A, MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
    WHERE A.ID_PLANPAGO_SEMESTRE=B.ID_PLANPAGO_SEMESTRE
    AND B.ID_PLANPAGO=C.ID_PLANPAGO
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

    /*SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO='M' THEN A.IMPORTE ELSE 0 END)),0) AS MATRICULA,
    --COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO<>'M' THEN case when l_conmat1cuota='S' then A.IMPORTE else 0 end ELSE 0 END)),0)/l_cuotas AS MENSUAL
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO<>'M' THEN  A.IMPORTE  ELSE 0 END)),0)/l_cuotas AS MENSUAL
    INTO
    l_total,
    l_total_debito,
    l_total_credito,
    l_matricula,
    l_mensual*/
    SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO='M' or (B.tipo_cobro='U' and B.TIPO='R') THEN A.IMPORTE ELSE 0 END)),0) AS MATRICULA,
    --COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN B.TIPO<>'M' THEN case when l_conmat1cuota='S' then A.IMPORTE else 0 end ELSE 0 END)),0)/l_cuotas AS MENSUAL
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN(B.TIPO='E' or (B.tipo_cobro='M' and B.TIPO='R')) THEN  A.IMPORTE  ELSE 0 END)),0)/l_cuotas AS MENSUAL
    
    INTO STRICT
    l_total,
    l_total_debito,
    l_total_credito,
    l_matricula,
    l_mensual
    FROM MAT_ALUMNO_CONTRATO_DET A, VW_MAT_CRITERIO_SEMESTRE B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND B.TIENE_HIJO=0
    AND B.RESI_MEN=0;
    --and b.codigo not in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS');
    
    SELECT 
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*A.IMPORTE),0) AS TOTAL,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 0 ELSE 1 END)*A.IMPORTE),0) AS TOTAL_DEBITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN 1 ELSE 0 END)*A.IMPORTE),0) AS TOTAL_CREDITO,
    COALESCE(SUM((CASE WHEN A.DC='C' THEN -1 ELSE 1 END)*(CASE WHEN(B.TIPO='E' or (B.tipo_cobro='M' and B.TIPO='R')) THEN  A.IMPORTE  ELSE 0 END)),0)/CASE WHEN(l_cuotas-1)=0 THEN 1 ELSE (l_cuotas-1) END AS MENSUAL
    into STRICT
    l_total_r,
    l_total_debito_r,
    l_total_credito_r,
    l_mensual_resi
    FROM MAT_ALUMNO_CONTRATO_DET A, VW_MAT_CRITERIO_SEMESTRE B
    WHERE A.ID_CRITERIO_SEMESTRE=B.ID_CRITERIO_SEMESTRE
    AND A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO
    AND B.TIENE_HIJO=0
    AND B.RESI_MEN=1;
    --and b.codigo  in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS');
    
        
    
    
    /*SELECT COALESCE(SUM(TOTAL),0) INTO l_saldo 
    FROM ELISEO.VW_SALES_SALDO
    WHERE ID_ENTIDAD = P_ID_ENTIDAD
    AND ID_DEPTO = P_ID_DEPTO
    AND ID_ANHO = P_ID_ANHO
    AND ID_CLIENTE = l_id_persona;*/
    
    SELECT coalesce(SUM(TOTAL), 0) INTO STRICT l_saldo
     --SIGN(NVL(SUM(TOTAL), 0)) AS SIGNO
    FROM (
       SELECT TOTAL
       FROM VW_SALES_MOV
       WHERE ID_ENTIDAD = P_ID_ENTIDAD
         AND ID_DEPTO = P_ID_DEPTO
         AND ID_ANHO = P_ID_ANHO
         AND ID_CLIENTE = l_id_persona
         AND ID_TIPOVENTA IN (1, 2, 3) 
       
UNION ALL

       SELECT SUM(IMPORTE) * CASE WHEN SIGN(SUM(IMPORTE))=1 THEN  -1  ELSE 0 END  AS TOTAL
       FROM VW_SALES_ADVANCES
       WHERE ID_ENTIDAD = P_ID_ENTIDAD
         AND ID_DEPTO = P_ID_DEPTO
         AND ID_ANHO = P_ID_ANHO
         AND ID_CLIENTE = l_id_persona
    ) alias6;


    l_contado:= 0;
    if l_cuotas=1 then
      l_contado:= l_total + l_total_r;
      l_pago:= l_contado + l_saldo;
    end if;

    l_matricula1cuota:=0;

    if l_cuotas<>1 then
      if l_conmat1cuota='S' then
        l_matricula1cuota:=l_matricula + l_mensual;
      else
        l_matricula1cuota:=l_matricula;
      end if;
      l_pago:= l_matricula1cuota + l_saldo;
    else
      l_mensual:=0;
      l_mensual_resi:=0;
    end if;

    if l_pago<0 then
      l_pago:=0;
    end if;

    /*if l_mensual<0 then
      l_mensual:=0;
    end if;*/
    
    select B.CODIGO INTO STRICT l_codigo_mod 
    FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;

    if l_codigo_mod='V' THEN
      /*
      SELECT 
      coalesce(sum(case when b.codigo='R' then a.CREDITO*(-1)  else a.CREDITO end),0)  
      INTO l_creditosvar
      FROM VW_MAT_CURSOS_PLAN_ALUMNO a,DAVID.TIPO_MOVIMIENTO_VAR b
      WHERE a.ID_TIPO_MOVIMIENTO_VAR=b.ID_TIPO_MOVIMIENTO_VAR
      and a.ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;*/
      select
            sum(credito_variados)   INTO STRICT l_creditosvar
            FROM (
            SELECT
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=1 THEN acd.credito  ELSE 0 END ),0) credito_insertados,
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=2 THEN acd.credito  ELSE 0 END ),0) credito_removidos,
            coalesce(sum(CASE WHEN Aacc.Id_Tipo_Movimiento_Var=2 THEN (acd.credito*-1)  ELSE acd.credito END ),0) credito_variados
            from DAVID.acad_alumno_contrato_curso aacc 
            inner join DAVID.Acad_Curso_Alumno aca on Aca.Id_Curso_Alumno=Aacc.Id_Curso_Alumno
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=Aca.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO AND aacc.Id_Tipo_Movimiento_Var=2
            
union 
            all

            PERFORM
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=1 THEN acd.credito  ELSE 0 END ),0) credito_insertados,
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=2 THEN acd.credito  ELSE 0 END ),0) credito_removidos,
            coalesce(sum(CASE WHEN acv.Id_Tipo_Movimiento_Var=2 THEN (acd.credito*-1)  ELSE acd.credito END ),0) credito_variados
            from DAVID.acad_curso_alumno_var aacc 
            INNER JOIN david.acad_curso_variacion acv ON acv.id_curso_alumno_var = aacc.id_curso_alumno_var
            inner join DAVID.Acad_Curso_Detalle acd on Acd.Id_Curso_Detalle=aacc.Id_Curso_Detalle
            where aacc.id_alumno_contrato=P_ID_ALUMNO_CONTRATO ) alias15;

    else
      SELECT coalesce(sum(CREDITO),0)
      INTO STRICT l_creditos
      FROM VW_MAT_CURSOS_PLAN_ALUMNO 
      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO;
    end if;

   
    
    UPDATE DAVID.ACAD_ALUMNO_CONTRATO SET
      TOTAL=l_total + l_total_r,
      TOTAL_DEBITO=l_total_debito+l_total_debito_r,
      TOTAL_CREDITO=l_total_credito+l_total_credito_r,
      MATRICULA=l_matricula,
      MENSUAL=l_mensual,
      CONTADO=l_contado,
      MATRICULA1CUOTA=l_matricula1cuota,
      PAGO=l_pago,
      creditos=l_creditos,
      creditosvar=l_creditosvar,
      MENSUAL_ENS_RESI = l_mensual + l_mensual_resi
    WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

    delete from MAT_ALUMNO_CONTRATO_DET  WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO  and coalesce(importe,0)=0;

  
--     <<salida_detcontrato>>
    P_ERROR:=l_error;
    P_MSGERROR:= l_msgerror;

  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_generar_detalle_contrato (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
