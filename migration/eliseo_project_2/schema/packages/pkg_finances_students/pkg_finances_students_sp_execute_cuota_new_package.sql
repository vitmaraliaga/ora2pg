-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_execute_cuota_new (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_PERSONA bigint,P_ID_MODO_CONTRATO bigint, P_ID_NIVEL_ENSENANZA bigint,P_SEMESTRE_PROGRAMA text,P_ALUMNOS text,P_CUOTA bigint,P_ID_PLANPAGO bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_ALUMNO_CONTRATO bigint;
        L_ID_CLIENTE bigint;

        L_ID_ANHO bigint;
        L_ID_ANHO_ACTUAL bigint;
        L_ID_MES bigint;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL bigint;

        L_ID_VENTA bigint;
        L_ES_VIRTUAL varchar(1) := 'N';
        L_ID_TIPOVENTA bigint;
        L_CONINTERNADO varchar(1) := 'N';

        L_CONTAR bigint;
        L_ERROR bigint := 0;
        L_MSGERROR varchar(200) := 'OK';
        L_TIPO_ALUMNO varchar(4);
        L_ID_SEDE bigint;

        L_CREDITOSVAR bigint;
        L_PROCESA varchar(1);

        S_PERSONAS TABLASTRING;
        S_SEMESTRE_PROGRAMA TABLASTRING;
        S_CONTA integer :=0;
        L_ID_PERSONA bigint;
        L_PERSONAS varchar(4000);
        L_ID_SEMESTRE_PROGRAMA bigint;
        L_PROGRAMAS varchar(4000);
        L_CODIGO varchar(20);
        ES_VARIACION varchar(1);

        C_ALUMNOS CURSOR FOR
        SELECT A.ID_ALUMNO_CONTRATO,A.ID_PERSONA,A.TIPO_ALUMNO,coalesce(A.CREDITOSVAR,0) as CREDITOSVAR ,D.ID_SEMESTRE
        FROM DAVID.ACAD_ALUMNO_CONTRATO A JOIN MOISES.PERSONA B ON A.ID_PERSONA = B.ID_PERSONA
        JOIN MOISES.PERSONA_NATURAL_ALUMNO C ON B.ID_PERSONA = C.ID_PERSONA
        JOIN DAVID.ACAD_SEMESTRE_PROGRAMA D ON A.ID_SEMESTRE_PROGRAMA = D.ID_SEMESTRE_PROGRAMA  
        JOIN DAVID.ACAD_MATRICULA_DETALLE MD ON A.ID_MATRICULA_DETALLE = MD.ID_MATRICULA_DETALLE
        JOIN DAVID.VW_ACAD_PROGRAMA_ESTUDIO PS ON PS.ID_PROGRAMA_ESTUDIO = D.ID_PROGRAMA_ESTUDIO
        JOIN MAT_PLANPAGO_SEMESTRE PPS ON PPS.ID_PLANPAGO_SEMESTRE = A.ID_PLANPAGO_SEMESTRE
        JOIN MAT_PLANPAGO PP ON PP.ID_PLANPAGO = PPS.ID_PLANPAGO
        
        WHERE A.ESTADO = '1'
        AND MD.ID_MODO_CONTRATO = P_ID_MODO_CONTRATO  --SOLO EXTRAS Y DIRIGIDOS JULICAC
        --AND C.CODIGO IN ('202116446','202117506','202014411','202012352','202116453','202012277','201220573','201711355','201711534','201912277','201320829')
        --AND PP.CUOTAS = '5' --DECOMENTAR
        --AND PP.CUOTAS <> '1' --SOLO EXTRAS Y DIRIGIDOS -- JULICACA
        --AND A.id_resid_tipo_habitacion is not null --SOLO INTERNOS
        --AND PP.CUOTAS = PLAN_PAGO*
        AND PP.ID_PLANPAGO = P_ID_PLANPAGO
        --AND PS.ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA*
        --AND PS.ID_MODALIDAD_ESTUDIO = P_ID_MODALIDAD_ESTUDIO   * 
        --AND A.TIPO_ALUMNO <> 'B18' -- PARA VIRIACION
        AND D.ID_SEMESTRE_PROGRAMA IN (SELECT ID_SEMESTRE_PROGRAMA FROM TT_SEMESTRE_PROGRAMA)
        --AND A.CREDITOSVAR <> 0 --SOLO SE ACTIVA CUANDO ES VARIACION
        AND A.ID_PERSONA NOT IN (SELECT ID_PERSONA FROM TT_ALUMNOS) 
        --AND PS.ID_SEDE = P_ID_SEDE 
        --AND PS.ID_PROGRAMA_ESTUDIO IN (245)--= 1-- programa  IN (253,177,215,175,266,275,221,214,216,233,187)--,169,245,250,178,163,176,216,212,207,202,165,233,229,179,266,253,213,175,273,274,170,256)--<> 1--= 246 --NOT IN(214,253,165)--= 17 --SOLO SISTEMAS
        --AND A.CREDITOSVAR <> 0 --SOLO SE ACTIVA CUANDO ES VARIACION
        --AND DAVID.FT_CALCULAR_CICLO_PROGRAMA('2021-1',A.ID_PERSONA,A.ID_PLAN_PROGRAMA) NOT IN(13,14)
 
        ORDER BY A.ID_ALUMNO_CONTRATO;

        
BEGIN
            SELECT FC_SPLIT(P_ALUMNOS,'|') INTO STRICT S_PERSONAS;
            SELECT FC_SPLIT(P_SEMESTRE_PROGRAMA,'|') INTO STRICT S_SEMESTRE_PROGRAMA;
            DELETE FROM TT_ALUMNOS;
            FOR i IN S_PERSONAS.FIRST .. S_PERSONAS.LAST
                LOOP
                    SELECT CAST(S_PERSONAS(i) AS bigint) INTO STRICT L_ID_PERSONA;
                    INSERT INTO TT_ALUMNOS(ID_SEDE,ID_PERSONA)VALUES (1,L_ID_PERSONA);
            END LOOP;
            S_CONTA := 0;
            DELETE FROM TT_SEMESTRE_PROGRAMA;
            FOR i IN S_SEMESTRE_PROGRAMA.FIRST .. S_SEMESTRE_PROGRAMA.LAST
                LOOP
                    SELECT CAST(S_SEMESTRE_PROGRAMA(i) AS bigint) INTO STRICT L_ID_SEMESTRE_PROGRAMA;
                    INSERT INTO TT_SEMESTRE_PROGRAMA(ID_SEMESTRE_PROGRAMA)VALUES (L_ID_SEMESTRE_PROGRAMA);
            END LOOP;

            SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(clock_timestamp(),'YYYY') ID_ANHO_ACTUAL INTO STRICT L_ID_ANHO,L_ID_ANHO_ACTUAL
            FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
            IF L_ID_ANHO = L_ID_ANHO_ACTUAL THEN
                SELECT MAX(ID_MES) ID_MES, (TO_CHAR(clock_timestamp(),'MM'))::numeric  ID_MES_ACTUAL INTO STRICT L_ID_MES,L_ID_MES_ACTUAL
                FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
                IF L_ID_MES = L_ID_MES_ACTUAL THEN
                  FOR cur in C_ALUMNOS LOOP
                    BEGIN
                        SELECT COUNT(1) INTO STRICT L_CONTAR FROM MAT_TEST_SIN_INTERNADO
                        WHERE ID_SEMESTRE = cur.ID_SEMESTRE
                        AND ID_PERSONA = cur.id_persona;

                        IF L_CONTAR > 0 THEN
                            SELECT COUNT(1) INTO STRICT L_CONTAR FROM MAT_TEST_SIN_INTERNADO
                            WHERE ID_SEMESTRE = cur.ID_SEMESTRE
                            AND ID_PERSONA =  cur.id_persona
                            AND INTERNO = 'N';

                            IF L_CONTAR > 0 THEN
                                L_CONINTERNADO := 'N';
                            ELSE
                                L_CONINTERNADO := 'S';
                            END IF;
                        ELSE
                            L_CONINTERNADO := 'S';
                        END IF;

                        IF P_ID_MODO_CONTRATO <> 4 THEN 
                            L_PROCESA := 'S';
                            ES_VARIACION := 'N';
                        ELSE
                            IF P_ID_MODO_CONTRATO = 4 AND cur.CREDITOSVAR <> 0 THEN
                                L_PROCESA := 'S';
                                ES_VARIACION := 'S';
                            ELSE
                                L_PROCESA := 'N';
                                ES_VARIACION := 'N';
                            END IF;
                        END IF;

                        IF L_PROCESA = 'S' THEN
                            SELECT ID_TIPOVENTA INTO STRICT L_ID_TIPOVENTA FROM DAVID.TIPO_NIVEL_ENSENANZA
                            WHERE ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA;

                            CALL pkg_finances_students_sp_cobrar_cuota(cur.ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,L_ID_ANHO,L_ID_MES,P_ID_PERSONA,L_ES_VIRTUAL,L_ID_TIPOVENTA,L_CONINTERNADO,P_CUOTA,L_ID_VENTA,L_ERROR,L_MSGERROR);
                            INSERT INTO TEST_CUOTA(ID_PERSONA,ID_VENTA,FECHA,VARIACION,ID_NIVEL_ENS,CUOTA,ID_SEMESTRE)VALUES (cur.ID_PERSONA,L_ID_VENTA,clock_timestamp(),'S',P_ID_NIVEL_ENSENANZA,5,cur.ID_SEMESTRE);
                            IF L_ERROR > 0 THEN
                                INSERT INTO TEST_NO_CUOTA(ID_PERSONA,ID_ALUMNO_CONTRATO,ERROR,VARIACION,ID_NIVEL_ENS,CUOTA,FECHA,ID_SEMESTRE)VALUES (cur.ID_PERSONA,cur.ID_ALUMNO_CONTRATO,L_MSGERROR,'S',P_ID_NIVEL_ENSENANZA,5,clock_timestamp(),cur.ID_SEMESTRE);
                                INSERT INTO FIN_CUOTA_QA(ID_USER,ID_PERSONA,ID_ALUMNO_CONTRATO,ID_ENTIDAD,ID_DEPTO,ID_SEMESTRE,ID_NIVEL_ENSENANZA,VARIACION,NRO_CUOTA,ERROR,FECHA)
                                VALUES (P_ID_PERSONA,cur.ID_PERSONA,cur.ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,cur.ID_SEMESTRE,P_ID_NIVEL_ENSENANZA,ES_VARIACION,P_CUOTA,L_CODIGO||': '||L_MSGERROR,clock_timestamp());
                            END IF;
                        END IF;
                    END;
                  END LOOP;
                ELSE
                    L_ERROR := 1;
                    L_MSGERROR := 'ERROR: El mes no esta Activo';
                END IF;
            ELSE
                L_ERROR := 1;
                L_MSGERROR := 'ERROR: El AÃ±o no esta Activo';
            END IF;

            SELECT COUNT(ID) INTO STRICT L_CONTAR FROM FIN_CUOTA_QA WHERE ID_USER = P_ID_PERSONA AND ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO 
            AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA AND TO_CHAR(FECHA,'DDMMYYYY') = TO_CHAR(clock_timestamp(),'DDMMYYYY');

            IF L_CONTAR = 0 THEN
                --L_MSGERROR := 'ERROR: LLEGA A ESTA PUNTO';
                UPDATE MAT_PLANPAGO_SEMESTRE_DET SET EJECUTADO = 'S'
                WHERE ID_PLANPAGO_SEMESTRE IN (
                  SELECT ID_PLANPAGO_SEMESTRE FROM MAT_PLANPAGO_SEMESTRE 
                  WHERE ID_SEMESTRE_PROGRAMA  IN (
                    SELECT ID_SEMESTRE_PROGRAMA FROM TT_SEMESTRE_PROGRAMA 
                  ) 
                )
                AND ORDEN = P_CUOTA-1;
            ELSE
                SELECT 1 AS N_ERROR, 'Error: '||ERROR INTO STRICT L_ERROR,L_MSGERROR
                FROM FIN_CUOTA_QA WHERE ID_USER = P_ID_PERSONA AND ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO 
                AND ID_NIVEL_ENSENANZA = P_ID_NIVEL_ENSENANZA AND TO_CHAR(FECHA,'DDMMYYYY') = TO_CHAR(clock_timestamp(),'DDMMYYYY')   LIMIT 1;
            END IF;
--         <<SALIDA_VENTA>>
        P_ERROR:=L_ERROR;
        P_MSGERROR:= L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_execute_cuota_new (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_PERSONA bigint,P_ID_MODO_CONTRATO bigint, P_ID_NIVEL_ENSENANZA bigint,P_SEMESTRE_PROGRAMA text,P_ALUMNOS text,P_CUOTA bigint,P_ID_PLANPAGO bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
