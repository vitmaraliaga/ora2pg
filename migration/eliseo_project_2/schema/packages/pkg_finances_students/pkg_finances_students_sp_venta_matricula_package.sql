-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_venta_matricula (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ES_VIRTUAL text,P_ID_TIPOVENTA bigint,P_ID_VENTA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

      l_error bigint:=0;
      l_msgerror varchar(200):='';
      l_contar bigint;
      l_id_venta bigint;
      l_tipo_alumno varchar(5);
      l_id_comprobante varchar(5);
      l_estado varchar(1);
      l_id_matricula_detalle bigint;
      l_codigo_mod varchar(10);
      l_creditosvar decimal(10,2);
      l_id_semestre_programa bigint;
      l_id_modalidad_estudio bigint;
      l_cod_moda_es varchar(5);
      l_cod_ne varchar(5);

BEGIN
      SELECT TIPO_ALUMNO,ID_COMPROBANTE,ESTADO,id_matricula_detalle,creditosvar,id_semestre_programa
      INTO STRICT l_tipo_alumno,l_id_comprobante,l_estado,l_id_matricula_detalle,l_creditosvar,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

      IF l_estado = '1' THEN 
        l_error:=1;
        l_msgerror:='Alto: Alumno Matriculado';
--         GOTO venta_matricula;
     END IF;

     select B.CODIGO INTO STRICT l_codigo_mod FROM DAVID.ACAD_MATRICULA_DETALLE A, DAVID.MODO_CONTRATO B
    WHERE A.ID_MODO_CONTRATO=B.ID_MODO_CONTRATO
    AND A.id_matricula_detalle=l_id_matricula_detalle;

    IF l_codigo_mod = 'V' AND l_creditosvar=0 THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno Regular';
--         GOTO venta_matricula;
    END IF;

   
    
    SELECT 
   c.id_modalidad_estudio, d.codigo into STRICT l_id_modalidad_estudio,l_cod_ne
    FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_PROGRAMA_ESTUDIO C,DAVID.TIPO_NIVEL_ENSENANZA D
    WHERE A.ID_PROGRAMA_estudio=C.ID_PROGRAMA_estudio
    AND C.id_nivel_ensenanza=D.id_nivel_ensenanza
    AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;

    
    IF l_codigo_mod = 'V' and l_tipo_alumno='B18'  THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno B18 Matriculado';
--         GOTO venta_matricula;
    END IF;

    select codigo into STRICT  l_cod_moda_es from david.tipo_modalidad_estudio where id_modalidad_estudio=l_id_modalidad_estudio;

    IF l_codigo_mod = 'V' and l_cod_moda_es='SP'  THEN
        l_error:=0;
        l_msgerror:='Alto: Alumno  Semipresencial';
--         GOTO venta_matricula;
    END IF;

      DELETE FROM MAT_ALUMNO_CONTRATO_ASIENTO WHERE ID_ALUMNO_CONTRATO= P_ID_ALUMNO_CONTRATO;

      CASE l_tipo_alumno
        WHEN 'RE' THEN
          if l_id_comprobante='99' then
            CALL pkg_finances_students_sp_generar_transf_mat_idec(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,l_id_venta,l_error,l_msgerror);
          else
            CALL pkg_finances_students_sp_generar_venta_matricula(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,l_id_venta,l_error,l_msgerror);
          end if;
        WHEN 'B18' THEN
          if l_cod_ne<>'ID' then
            CALL pkg_finances_students_sp_generar_transf_mat(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,1,'U',l_id_venta,l_error,l_msgerror);
          end if;
          if l_error=0 then
            CALL pkg_finances_students_sp_generar_transf_mat(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,1,'M',l_id_venta,l_error,l_msgerror);
          end if;

          if l_error=0 then
            select 
              count(*) into STRICT l_contar
            from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
            where a.id_criterio_semestre=b.id_criterio_semestre
            and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
            AND B.TIENE_HIJO=0
            AND A.APLAZADO='S';

            if l_contar>0 then
             
              CALL pkg_finances_students_sp_generar_venta_mat_aplaz(P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,P_ID_PERSONA,P_ES_VIRTUAL,P_ID_TIPOVENTA,l_id_venta,l_error,l_msgerror);
            end if;
          end if;

        ELSE
          l_error:=1;
          l_msgerror:='No se ha generado la venta';
      END CASE;
      if l_error=0 then
        CALL pkg_finances_students_sp_ins_cuota_alumno(P_ID_ALUMNO_CONTRATO,P_ID_PERSONA,l_error,l_msgerror);
      end if;
--       <<venta_matricula>>
      P_ID_VENTA:=l_id_venta;
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_venta_matricula (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ES_VIRTUAL text,P_ID_TIPOVENTA bigint,P_ID_VENTA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
