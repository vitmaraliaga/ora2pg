-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_generar_transf_mat_idec (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_TRANSFERENCIA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE

      l_error bigint:=0;
      l_msgerror varchar(200):='';
      l_contar bigint;
      L_DOCUMENTO bigint :=0;
      l_tc decimal(10,3);
      l_id_moneda bigint;
      l_id_moneda_tc bigint;
      l_tipo_alumno varchar(5);
      L_ID_TRANSFERENCIA bigint :=0;
      l_id_tipotransaccion bigint:= 165; --153;--pendiente
      l_id_dinamica bigint:= 2505; --743;--pendiente
      l_id_cliente bigint;
      l_glosa varchar(100):='';
      l_automatico varchar(2);
      L_ID_PERSONA_V bigint;
      l_id_voucher bigint :=0;

      l_serie varchar(5);
      l_correlativo bigint;
      l_numero varchar(15);
      l_id_planpago_semestre bigint;
      l_cuotas decimal(10,2);
      l_id bigint;
      l_id_semestre_programa bigint;
      l_semestre varchar(20);
      l_total decimal(10,2);

        L_TOTAL_ANTICIPO decimal(10,2);
        L_IMPORTE_ANTICIPO decimal(10,2);
        L_V_TOTAL decimal(10,2);
        L_DC varchar(1) :='C'; --DC PARA ANTICIPOS
        L_CODIGO varchar(2) :='NA'; --ANNTICIPOS CLIENTES - CREDITO
        L_TIPO varchar(1) := 'T';
        l_conmat1cuota  varchar(2);
        l_id_tipoasiento  varchar(5):='RV';

BEGIN
    
      SELECT ID_PERSONA, TIPO_ALUMNO,ID_PLANPAGO_SEMESTRE, ID_SEMESTRE_PROGRAMA
      INTO STRICT l_id_cliente,l_tipo_alumno,l_id_planpago_semestre,l_id_semestre_programa
      FROM DAVID.ACAD_ALUMNO_CONTRATO
      WHERE ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

      SELECT 
      b.SEMESTRE into STRICT l_semestre
      FROM DAVID.ACAD_SEMESTRE_PROGRAMA a,DAVID.ACAD_SEMESTRE B
      WHERE A.ID_SEMESTRE=B.ID_SEMESTRE
      AND A.ID_SEMESTRE_PROGRAMA=l_id_semestre_programa;

      IF l_tipo_alumno  = 'B18' THEN
        l_error :=1;
        l_msgerror := 'Alto! El alumno  es de beca 18';
--         goto salida_transf_idec;
      END IF;

      select C.CUOTAS,case when C.CUOTAS=1 then 'S' else coalesce(c.conmat1cuota,'S')  end as conmat1cuota into STRICT l_cuotas,l_conmat1cuota
      from MAT_PLANPAGO_SEMESTRE B,MAT_PLANPAGO C
      where B.ID_PLANPAGO=C.ID_PLANPAGO
      and b.ID_PLANPAGO_SEMESTRE=l_id_planpago_semestre;

     
    
      SELECT 
                COUNT(A.ID) INTO STRICT l_contar
        FROM CONTA_DOCUMENTO_IP_USER A, CONTA_DOCUMENTO_IP B, CONTA_DOCUMENTO C
        WHERE A.ID_DOCIP = B.ID_DOCIP
        AND B.ID_DOCUMENTO = C.ID_DOCUMENTO
        AND A.ID = P_ID_PERSONA
        AND C.ID_COMPROBANTE = '00'
        AND C.ID_ENTIDAD = P_ID_ENTIDAD
        AND C.ID_DEPTO = P_ID_DEPTO;

      IF l_contar = 0 THEN
        l_error :=1;
        l_msgerror := 'Alto! El usuario no tiene asignado un punto de impresión para el tipo de documento: 00';
--         goto salida_transf_idec;
      END IF;

       IF P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '1' THEN 
          l_id_tipoasiento:= 'RV';
          l_id_dinamica:= 2505;
      ELSIF P_ID_ENTIDAD = 7124 and P_ID_DEPTO = '5' THEN
          l_id_tipoasiento:= 'RVJ';
          l_id_dinamica:= 2672;
      ELSIF P_ID_ENTIDAD = 7124 and  P_ID_DEPTO = '6' THEN
          l_id_tipoasiento:= 'RVT';
          l_id_dinamica:= 2806;
      ELSIF P_ID_ENTIDAD = 7124 and  P_ID_DEPTO = '8' THEN
          l_id_tipoasiento:= 'RVS';
          l_id_dinamica:= 2806;
      END IF;

    

      SELECT   count(*) into STRICT l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;

      if l_contar=0 then
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!:Falta configurar Voucher de Transferencia'||P_ID_ANHO::text;
--            goto salida_transf_idec;
      end if;
      
      select AUTOMATICO into STRICT l_automatico 
      from CONTA_VOUCHER_CONFIG  
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      and ID_TIPOASIENTO=l_id_tipoasiento 
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = 7;

      if l_automatico='S' then  
          --obtener id del contador para crear el voucher
                   
          SELECT ID_PERSONA INTO STRICT L_ID_PERSONA_V FROM FIN_CONTADOR_DEPTO
          WHERE ID_ENTIDAD=P_ID_ENTIDAD
          AND ID_DEPTO=P_ID_DEPTO;

          CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),l_id_tipoasiento,7,'','S',L_ID_PERSONA_V,l_id_voucher);
      end if;

      if l_id_voucher=0 then
          l_error:=1; --no existe voucher
          l_msgerror:='Alto!: No existe voucher';
--           goto salida_transf_idec;
      end if;

      
      CALL pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,'99',P_ID_ENTIDAD,P_ID_DEPTO,NULL,l_serie,l_correlativo);

      IF l_correlativo=0 or coalesce(l_correlativo::text, '') = '' THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto!: No existe serie y número del documento('||l_correlativo||')';
      END IF;

      SELECT lpad(l_correlativo::text,8,'0') into STRICT l_numero;

      
        l_id_moneda:=7; --SOLES
        l_id_moneda_tc:=9;


        --obtiene tipo de cambio del dia
        select FC_TIPOCAMBIO(l_id_moneda_tc,CURRENT_DATE,'D' ) into STRICT l_tc;

        if coalesce(l_tc::text, '') = '' then
            l_tc:=0;
        end if;

        
        l_glosa:='Matrícula y 1ra armada IDEC '||l_semestre;

        

       INSERT INTO VENTA_TRANSFERENCIA(
          ID_ENTIDAD,
          ID_DEPTO,
          ID_ANHO,
          ID_MES,
          ID_PERSONA,
          ID_CLIENTE,
          ID_TIPOTRANSACCION,
          ID_DINAMICA,
          ID_MONEDA,
          TIPOCAMBIO,
          SERIE,
          NUMERO,
          FECHA,
          GLOSA,
          ESTADO,
          ID_VOUCHER,
          ID_TIPOORIGEN,
          ES_ANTICIPO,
          ID_TIPOVENTA
      )VALUES (
          P_ID_ENTIDAD,
          P_ID_DEPTO,
          P_ID_ANHO,
          P_ID_MES,
          P_ID_PERSONA,
          l_id_cliente,
          l_id_tipotransaccion,
          l_id_dinamica,
          l_id_moneda,
          l_tc,
          l_serie,
          l_numero,
          clock_timestamp(),
          l_glosa,
          1,
          l_id_voucher,
          2,
          'N',
          1
        ) RETURNING ID_TRANSFERENCIA INTO L_ID_TRANSFERENCIA;

        --detalle
        
        SELECT COALESCE(MAX(ID_TDETALLE),0) INTO STRICT l_id FROM VENTA_TRANSFERENCIA_DETALLE;

        INSERT INTO VENTA_TRANSFERENCIA_DETALLE(
        ID_TDETALLE,
        ID_TRANSFERENCIA,
        DC,
        IMPORTE,
        DETALLE,
        ID_ALUMNO_CONTRATO,
        ID_ALUMNO_CONTRATO_DET
        )           
        
        SELECT (row_number() OVER ( ORDER BY A.ID_ALUMNO_CONTRATO ASC ))+l_id  AS items,
          L_ID_TRANSFERENCIA,
          a.dc,
          SUM(a.importe/CASE WHEN b.tipo_cobro='M' THEN l_cuotas  ELSE 1 END ),
          l_glosa,
          A.ID_ALUMNO_CONTRATO,
          NULL
        from mat_alumno_contrato_det a,vw_mat_criterio_semestre b 
        where a.id_criterio_semestre=b.id_criterio_semestre
        and a.id_alumno_contrato=P_ID_ALUMNO_CONTRATO
        AND B.TIENE_HIJO=0
        AND (case when l_conmat1cuota='N' then
          case when b.TIPO_COBRO='U' then 'N' else 'S' end
        else
           'S'
        end)=l_conmat1cuota
        and case when l_cuotas=1 then 'S' else case when B.RESI_MEN=1 then 'N' else 'S' end end = 'S'
        --and case when l_cuotas=1 then 'S' else case when b.codigo in('RESCUOSB','RESCUES','RESCUVI','RESCUSE','RESCUSV','RESCUDFE','RESCUOAL','RESCULAV','DHMRENS') then 'N' else 'S' end end = 'S'
 
        GROUP BY a.dc,A.ID_ALUMNO_CONTRATO
        ORDER BY a.dc;
        
      
       SELECT
              coalesce(sum(CASE WHEN dc='D' THEN (importe)  ELSE (importe*-1) END ),0) INTO STRICT l_total
      FROM VENTA_TRANSFERENCIA_DETALLE
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;

      UPDATE VENTA_TRANSFERENCIA SET
           IMPORTE     =   l_total
      WHERE ID_TRANSFERENCIA=L_ID_TRANSFERENCIA;

      --GENNERA ANTICIPO CREDITO AMARRA A LA TRANF
        SELECT SUM(IMPORTE) AS TOTAL INTO STRICT L_TOTAL_ANTICIPO
        FROM VW_SALES_ADVANCES
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_ANHO = P_ID_ANHO
        AND ID_CLIENTE = l_id_cliente;
        IF L_TOTAL_ANTICIPO > 0 THEN
            IF L_TOTAL_ANTICIPO >= l_total THEN
                L_IMPORTE_ANTICIPO := l_total;
            ELSE
                L_IMPORTE_ANTICIPO := L_TOTAL_ANTICIPO;
            END IF;
            CALL pkg_sales_sp_crear_anticipos_clientes(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,l_id_cliente,P_ID_PERSONA,L_ID_TRANSFERENCIA,L_IMPORTE_ANTICIPO,L_DC,L_CODIGO,l_error,l_msgerror,L_TIPO);
            IF l_error > 0 THEN
              l_msgerror := l_msgerror;
--               GOTO salida_transf_idec;
          END IF;
        END IF;

       CALL pkg_finances_students_sp_generar_asiento_transf_idec(P_ID_ALUMNO_CONTRATO,L_ID_TRANSFERENCIA,l_error,l_msgerror);
      
--       <<salida_transf_idec>>
      P_ERROR:=l_error;
      P_MSGERROR:= l_msgerror;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_generar_transf_mat_idec (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_TRANSFERENCIA OUT bigint,P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
