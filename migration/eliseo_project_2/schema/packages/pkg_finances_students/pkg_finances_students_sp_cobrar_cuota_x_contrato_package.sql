-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_finances_students,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_finances_students_sp_cobrar_cuota_x_contrato (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_PERSONA bigint,P_CUOTA bigint,P_ID_VENTA OUT bigint, P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_CLIENTE bigint;

        L_ID_ANHO bigint;
        L_ID_ANHO_ACTUAL bigint;
        L_ID_MES bigint;--OBTENER AUTOMATICO
        L_ID_MES_ACTUAL bigint;

        L_ID_VENTA bigint;
        L_ES_VIRTUAL varchar(1) := 'N';
        L_ID_TIPOVENTA bigint;
        L_CONINTERNADO varchar(1) := 'N';

        L_CONTAR bigint;
        L_ERROR bigint := 0;
        L_MSGERROR varchar(200) := 'OK';
        L_TIPO_ALUMNO varchar(4);
        L_ID_SEDE bigint;

        L_CREDITOSVAR bigint;
        L_PROCESA varchar(1);

        S_PERSONAS TABLASTRING;
        S_SEMESTRE_PROGRAMA TABLASTRING;
        S_CONTA integer :=0;
        L_ID_PERSONA bigint;
        L_PERSONAS varchar(4000);
        L_ID_SEMESTRE_PROGRAMA bigint;
        L_CODIGO varchar(20);
        ES_VARIACION varchar(1);

        
        L_ID_SEMESTRE bigint;
        L_ID_MODO_CONTRATO bigint;
        L_ID_NIVEL_ENSENANZA bigint;

        
BEGIN
        
          
          SELECT A.ID_PERSONA,A.TIPO_ALUMNO,coalesce(A.CREDITOSVAR,0) as CREDITOSVAR ,D.ID_SEMESTRE,MD.ID_MODO_CONTRATO,PS.ID_NIVEL_ENSENANZA
          INTO STRICT L_ID_PERSONA,L_TIPO_ALUMNO,L_CREDITOSVAR,L_ID_SEMESTRE,L_ID_MODO_CONTRATO,L_ID_NIVEL_ENSENANZA
          FROM DAVID.ACAD_ALUMNO_CONTRATO A JOIN MOISES.PERSONA B ON A.ID_PERSONA = B.ID_PERSONA
          JOIN MOISES.PERSONA_NATURAL_ALUMNO C ON B.ID_PERSONA = C.ID_PERSONA
          JOIN DAVID.ACAD_SEMESTRE_PROGRAMA D ON A.ID_SEMESTRE_PROGRAMA = D.ID_SEMESTRE_PROGRAMA  
          JOIN DAVID.ACAD_MATRICULA_DETALLE MD ON A.ID_MATRICULA_DETALLE = MD.ID_MATRICULA_DETALLE
          JOIN DAVID.VW_ACAD_PROGRAMA_ESTUDIO PS ON PS.ID_PROGRAMA_ESTUDIO = D.ID_PROGRAMA_ESTUDIO
          JOIN MAT_PLANPAGO_SEMESTRE PPS ON PPS.ID_PLANPAGO_SEMESTRE = A.ID_PLANPAGO_SEMESTRE
          JOIN MAT_PLANPAGO PP ON PP.ID_PLANPAGO = PPS.ID_PLANPAGO
          WHERE A.ID_ALUMNO_CONTRATO = P_ID_ALUMNO_CONTRATO;

          SELECT  MAX(ID_ANHO) ID_ANHO, TO_CHAR(clock_timestamp(),'YYYY') ID_ANHO_ACTUAL INTO STRICT L_ID_ANHO,L_ID_ANHO_ACTUAL
          FROM CONTA_ENTIDAD_ANHO_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ACTIVO = '1';
          IF L_ID_ANHO = L_ID_ANHO_ACTUAL THEN
              SELECT MAX(ID_MES) ID_MES, (TO_CHAR(clock_timestamp(),'MM'))::numeric  ID_MES_ACTUAL INTO STRICT L_ID_MES,L_ID_MES_ACTUAL
              FROM CONTA_ENTIDAD_MES_CONFIG WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_ANHO = L_ID_ANHO AND ESTADO = '1';
              IF L_ID_MES = L_ID_MES_ACTUAL THEN

                 L_CONINTERNADO := 'S';

                
                IF L_ID_MODO_CONTRATO <> 4 THEN 
                    L_PROCESA := 'S';
                    ES_VARIACION := 'N';
                ELSE
                    IF L_ID_MODO_CONTRATO = 4 AND L_CREDITOSVAR > 0 THEN
                        L_PROCESA := 'S';
                        ES_VARIACION := 'S';
                    ELSE
                        L_PROCESA := 'N';
                        ES_VARIACION := 'N';
                    END IF;
                END IF;

                IF L_PROCESA = 'S' THEN
                    SELECT ID_TIPOVENTA INTO STRICT L_ID_TIPOVENTA FROM DAVID.TIPO_NIVEL_ENSENANZA
                    WHERE ID_NIVEL_ENSENANZA = L_ID_NIVEL_ENSENANZA;

                    CALL pkg_finances_students_sp_generar_cuota_adelanto(
                    P_ID_ALUMNO_CONTRATO,
                    P_ID_ENTIDAD,
                    P_ID_DEPTO,
                    L_ID_ANHO,
                    L_ID_MES,
                    P_ID_PERSONA,
                    L_ES_VIRTUAL,
                    L_ID_TIPOVENTA,
                    L_CONINTERNADO,
                    P_CUOTA,
                    L_ID_VENTA,
                    L_ERROR,
                    L_MSGERROR
                    );

                    IF L_ERROR=0 THEN
                      UPDATE MAT_ALUMNO_CONTRATO_CUOTA SET
                      EJECUTADO='S',
                      ID_USER_MOD=P_ID_PERSONA,
                      FECHA_MOD=clock_timestamp()
                      WHERE ID_ALUMNO_CONTRATO=P_ID_ALUMNO_CONTRATO
                      AND ID_ITEM=P_CUOTA;
                    END IF;
                    INSERT INTO TEST_CUOTA(ID_PERSONA,ID_VENTA,FECHA,VARIACION,ID_NIVEL_ENS,CUOTA,ID_SEMESTRE)VALUES (L_ID_PERSONA,L_ID_VENTA,clock_timestamp(),'S',L_ID_NIVEL_ENSENANZA,5,L_ID_SEMESTRE);
                    IF L_ERROR > 0 THEN
                        INSERT INTO TEST_NO_CUOTA(ID_PERSONA,ID_ALUMNO_CONTRATO,ERROR,VARIACION,ID_NIVEL_ENS,CUOTA,FECHA,ID_SEMESTRE)VALUES (L_ID_PERSONA,P_ID_ALUMNO_CONTRATO,L_MSGERROR,'S',L_ID_NIVEL_ENSENANZA,5,clock_timestamp(),L_ID_SEMESTRE);
                        INSERT INTO FIN_CUOTA_QA(ID_USER,ID_PERSONA,ID_ALUMNO_CONTRATO,ID_ENTIDAD,ID_DEPTO,ID_SEMESTRE,ID_NIVEL_ENSENANZA,VARIACION,NRO_CUOTA,ERROR,FECHA)
                        VALUES (P_ID_PERSONA,L_ID_PERSONA,P_ID_ALUMNO_CONTRATO,P_ID_ENTIDAD,P_ID_DEPTO,L_ID_SEMESTRE,L_ID_NIVEL_ENSENANZA,ES_VARIACION,P_CUOTA,L_CODIGO||': '||L_MSGERROR,clock_timestamp());
                    END IF;
                END IF;
              ELSE
                L_ERROR := 1;
                L_MSGERROR := 'ERROR: El mes no esta Activo';
              END IF;
          ELSE
              L_ERROR := 1;
              L_MSGERROR := 'ERROR: El AÃ±o no esta Activo';
          END IF;

--         <<SALIDA_VENTA>>
        P_ID_VENTA:=L_ID_VENTA;
        P_ERROR:=L_ERROR;
        P_MSGERROR:= L_MSGERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_finances_students_sp_cobrar_cuota_x_contrato (P_ID_ALUMNO_CONTRATO bigint,P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_PERSONA bigint,P_CUOTA bigint,P_ID_VENTA OUT bigint, P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
