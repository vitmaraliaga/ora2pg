-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_school,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_school_sp_generar_asiento_col (P_ID_VENTA bigint, P_ERROR OUT bigint,P_MSGERROR out text) AS $body$
DECLARE


        l_id_vdetalle bigint;
        l_dinamica bigint;
        l_asiento bigint;
        l_detalle varchar(100);
        l_base decimal(10,2);
        l_igv decimal(10,2);
        l_descuento decimal(10,2);
        l_importe decimal(10,2);
        l_precio_alm decimal(10,2);
        l_ctas varchar(200);
        l_deptos varchar(200);
        l_ctates varchar(200);
        l_precio_total decimal(10,2);

        l_actas tablastring;
        l_adeptos tablastring;
        l_actates tablastring;

        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_destino varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_porcentaje decimal(10,2);
        l_unicoctate varchar(1);

        l_id_asientod bigint;
        l_id_tipopland bigint;
        l_id_restricciond varchar(50);
        l_id_cuentaaasid varchar(10);
        l_dcd varchar(1);
        l_id_indicadord  varchar(35);
        l_unicod varchar(1);
        l_porcentajed decimal(10,2);
        l_unicoctated varchar(1);

        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_fondo varchar(10);
        l_importeasiento decimal(10,2);
        l_descripcion varchar(255);
        l_memo varchar(255);
        l_voucher bigint;
        --l_ref_id varchar(100);
        l_id_entidad bigint;
        l_id_depto_venta varchar(20);
        l_buscar bigint;

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_tipoorigen bigint;

        --validacion
        l_contar bigint;
        l_debito decimal(10,2);
        l_credito decimal(10,2);
        l_cont bigint;
        l_serie varchar(5);
        l_numero varchar(15);
        l_fecha timestamp(0);
        l_agrupa varchar(1);
        l_primario varchar(1);
        l_id_cliente bigint;
        l_id_tipoigv varchar(2);
        l_otros_cargos decimal(10,2);
        l_id_articulo bigint;

        l_id_contrato bigint;
        l_id_costo bigint;
        l_es_anticipo varchar(2);
        l_id_criterio bigint;
        l_es_mensualidad_colegios varchar(2);
        l_descripcion_descuento varchar(200);
        l_valor_descuento decimal(10,2);

        l_importe_detalle bigint;
        l_importe_cuota bigint;
        l_importe_cuota_descuento bigint;

        l_id_anho bigint;
        l_id_intitucion bigint;

        l_redondeo_total_desc bigint;
        l_redondeo_id_criterio bigint;
        l_id_criterio_descuento bigint;
        l_redondeo_covid_desc bigint;

        cdet CURSOR FOR		
        SELECT  ID_VDETALLE,
        ID_DINAMICA,ID_TIPOORIGEN, 
        DETALLE,
        BASE+coalesce(DESCUENTO,0),
        IGV,DESCUENTO,IMPORTE,
        coalesce(CANTIDAD,1)*PRECIO_ALM,
        ID_TIPOIGV,
        coalesce(OTROS_CARGOS,0), 
        coalesce(CANTIDAD,1)*PRECIO,
        ID_ARTICULO
        FROM VENTA_DETALLE
        WHERE ID_VENTA=P_ID_VENTA
        ORDER BY ID_VDETALLE;	

        casi CURSOR FOR		
        SELECT a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.DESTINO,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,a.PORCENTAJE,
        a.NOMBRE,a.AGRUPA, a.primario
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA
        --AND coalesce(d.ID_PARENT,0)=0
        AND a.ID_DINAMICA =l_dinamica
        --AND COALESCE(a.ID_PARENT,0)=0 
        ORDER BY a.NRO_ASIENTO,a.ID_ASIENTO,a.DC desc; -- ESTE ORDEN es clave para que se orden los asientos
        casides CURSOR FOR		
        SELECT ID_ASIENTO,ID_TIPOPLAN,ID_RESTRICCION,ID_CUENTAAASI,DC,ID_INDICADOR,UNICO,UNICO_CTACTE,PORCENTAJE,NOMBRE,AGRUPA, PRIMARIO
        FROM CONTA_DINAMICA_ASIENTO
        WHERE ID_PARENT=l_asiento
        ORDER BY NRO_ASIENTO,DC desc;


BEGIN

   RAISE NOTICE '***** asientos venta col ****-----';

      l_fondo:='10';
     --OBTIENE DATOS DE LA VENTA
      select ID_ENTIDAD,ID_DEPTO,ID_VOUCHER,SERIE, case when NUMERO='-' then NUMERO else (NUMERO)::numeric ::text end,FECHA,ID_CLIENTE, ID_ANHO
      --,ID_TIPOORIGEN
                into STRICT l_id_entidad,l_id_depto_venta, l_voucher,l_serie,l_numero,l_fecha,l_id_cliente, l_id_anho
                --, l_id_tipoorigen 
      from VENTA where ID_VENTA=P_ID_VENTA;

      select max(id_institucion) into STRICT l_id_intitucion from jose.school_institucion
      where id_campo = l_id_entidad and id_depto = l_id_depto_venta;

     --DETALLE
      OPEN cdet;
      FETCH cdet INTO l_id_vdetalle, l_dinamica,l_id_tipoorigen, l_detalle,l_base,l_igv,l_descuento,l_importe,l_precio_alm,l_id_tipoigv,l_otros_cargos, l_precio_total, l_id_articulo;

      WHILE cdet%FOUND LOOP
	      RAISE NOTICE '***** asientos venta col **** %', l_id_vdetalle::text;

            SELECT (l_id_tipoorigen::text || '-' || l_id_vdetalle::text) INTO STRICT l_memo;

            /*
            SELECT COUNT(1), MAX(COVE.ID_CONTRATO), MAX(COVE.ID_COSTO), MAX(COVE.ID_CRITERIO) 
            INTO l_contar, l_id_contrato, l_id_costo, l_id_criterio
            FROM JOSE.MAT_CONTRATO_VENTA COVE, JOSE.MAT_CRITERIO CRI
            WHERE COVE.ID_CRITERIO = CRI.ID_CRITERIO
            AND COVE.ID_VDETALLE = l_id_vdetalle
            AND CRI.CODIGO = 'ENS';
            */
            RAISE NOTICE '***** l_id_entidad %', l_id_entidad::text;
            RAISE NOTICE '***** l_id_intitucion %', l_id_intitucion::text;
            RAISE NOTICE '***** l_id_cliente %', l_id_cliente::text;
            RAISE NOTICE '***** l_dinamica %', l_dinamica::text;
            RAISE NOTICE '***** l_id_anho %', l_id_anho::text;

            SELECT count(1), MAX(mc.ID_CONTRATO), MAX(cc.ID_COSTO), MAX(cri.ID_CRITERIO) 
            INTO STRICT l_contar, l_id_contrato, l_id_costo, l_id_criterio
            FROM jose.MAT_CRITERIO_ENTIDAD_INST mce 
            INNER JOIN jose.MAT_CRITERIO cri ON cri.ID_CRITERIO = mce.ID_CRITERIO 
            INNER JOIN jose.MAT_COSTO co ON co.ID_CRITERIO = cri.ID_CRITERIO 
            INNER JOIN jose.MAT_CONTRATO_COSTO cc ON cc.ID_COSTO = co.ID_COSTO 
            INNER JOIN jose.MAT_CONTRATO mc ON mc.ID_CONTRATO = cc.ID_CONTRATO 
            WHERE mce.ID_ENTIDAD = l_id_entidad
            AND mce.id_institucion = l_id_intitucion
            AND mc.ID_INSTITUCION=l_id_intitucion
            AND mc.ID_ALUMNO = l_id_cliente
            AND cri.CODIGO in ('ENS')
            AND mce.ID_DINAMICA = l_dinamica
            AND mc.ID_ANHO = mce.ID_ANHO 
            AND mc.id_anho = l_id_anho
            AND mc.estado = '1' 
;

            RAISE NOTICE 'l_id_entidad:%', l_id_entidad;
            RAISE NOTICE 'l_id_intitucion:%', l_id_intitucion;
            RAISE NOTICE 'l_id_cliente:%', l_id_cliente;
            RAISE NOTICE 'l_dinamica:%', l_dinamica;
            RAISE NOTICE 'l_id_anho:%', l_id_anho;


            IF l_contar = 1 then 
                l_es_mensualidad_colegios := 'S';
            else
                l_es_mensualidad_colegios := 'N';
            end if;

            ---DINAMICA ASIENTO
            RAISE NOTICE ' ...................';
            RAISE NOTICE 'l_es_mensualidad_colegios:%', l_es_mensualidad_colegios;

            if l_es_mensualidad_colegios = 'S' then 
                SELECT 
                    coalesce(max(total),0), 
                    (
                        coalesce(max(descuento),0) +
                        round(COALESCE(SUM((select coalesce(sum(case when p.es_porcentaje = '1' then cro.total * p.valor else p.valor end),0) from jose.fin_promocion p 
					            inner join jose.fin_promocion_alumno a on a.id_promocion = p.id_promocion
					            LEFT OUTER JOIN jose.FIN_PROMOCION_ARTICULO_CONF paf ON p.ID_ANHO = paf.ID_ANHO 
					            			AND p.ID_ENTIDAD = paf.ID_ENTIDAD 
					            			AND p.ID_DEPTO = paf.ID_DEPTO 
					            			AND p.ID_ARTICULO = paf.ID_ARTICULO 
					            where a.id_alumno = cro.id_alumno
					            and p.id_entidad = i.id_campo
					            and p.id_depto = i.id_depto
					            and p.id_anho = mc.id_anho
					            and p.estado = '1'
					            and p.id_articulo = cro.id_articulo
					            AND COALESCE(paf.ES_NOTACREDITO,'N') = 'N' )),0),2)
                    )
                    into STRICT l_importe_cuota, l_importe_cuota_descuento 
                FROM jose.VSCH_CONTRATO_CRONOGRAMA cro
                inner join jose.mat_contrato mc on mc.id_contrato = cro.id_contrato
                inner join jose.school_institucion i on i.id_institucion = mc.id_institucion
                WHERE cro.ID_CONTRATO = l_id_contrato
                AND cro.ID_ARTICULO = l_id_articulo;
            end if;

            ---DINAMICA ASIENTO
            --DBMS_OUTPUT.put_line (' ...................');
            --DBMS_OUTPUT.put_line ('l_contar:'||l_contar);
            --DBMS_OUTPUT.put_line ('l_dinamica:'||l_dinamica);
            OPEN casi;
            FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;
            WHILE casi%FOUND LOOP
                RAISE NOTICE '***** asientos venta col ******** %', l_id_indicador::text;
                select (case when l_id_indicador='COSTO_ALM' then l_precio_alm
                            when l_id_indicador='BASE' then l_base
                            when l_id_indicador='IGV' then l_igv
                            when l_id_indicador='DESCUENTO' then l_descuento
                            when l_id_indicador='IMPORTE' then l_importe
                            when l_id_indicador='PRECIO_TOTAL' then l_precio_total
                            when l_id_indicador='ICBPER' then l_otros_cargos
                      else 0 end)*(l_porcentaje)  into STRICT l_importeasiento
;

                if l_es_mensualidad_colegios = 'S' and l_id_indicador='DESCUENTO' then 
                
                
                SELECT 
                        case when l_importe_cuota_descuento = 0 then 0 else sum(round((COALESCE((CUO.VALOR),0)*l_descuento/l_importe_cuota_descuento)::numeric,2)) end, 
                        COALESCE(max(CRI.ID_CRITERIO),0) 
                        into STRICT l_redondeo_total_desc, l_redondeo_id_criterio
                    FROM JOSE.MAT_MES MES, JOSE.MAT_CONTRATO_CUOTA CUO, JOSE.MAT_COSTO COS, JOSE.MAT_CRITERIO CRI
                    WHERE MES.ID_MES = CUO.ID_MES
                    AND CUO.ID_COSTO = COS.ID_COSTO
                    AND COS.ID_CRITERIO = CRI.ID_CRITERIO
                    AND CUO.ID_CONTRATO = l_id_contrato
                    AND ID_ARTICULO = l_id_articulo
                    AND CUO.ES_ACTIVO = 'S'
                    AND CUO.ES_COBRO = 'N'
                    AND CRI.ID_PADRE = l_id_criterio;

                    SELECT 
                    case when l_importe_cuota_descuento = 0 then 0 else COALESCE(SUM((select round((coalesce(sum(case when p.es_porcentaje = '1' then cro.total * p.valor else p.valor end),0))::numeric,2) from jose.fin_promocion p 
                            inner join jose.fin_promocion_alumno a on a.id_promocion = p.id_promocion
                            LEFT OUTER JOIN jose.FIN_PROMOCION_ARTICULO_CONF paf ON p.ID_ANHO = paf.ID_ANHO 
                                        AND p.ID_ENTIDAD = paf.ID_ENTIDAD 
                                        AND p.ID_DEPTO = paf.ID_DEPTO 
                                        AND p.ID_ARTICULO = paf.ID_ARTICULO 
                            where a.id_alumno = cro.id_alumno
                            and p.id_entidad = i.id_campo
                            and p.id_depto = i.id_depto
                            and p.id_anho = mc.id_anho
                            and p.estado = '1'
                            and p.id_articulo = cro.id_articulo
                            AND COALESCE(paf.ES_NOTACREDITO,'N') = 'N' )),0)*l_descuento/l_importe_cuota_descuento end
                    INTO STRICT l_redondeo_covid_desc
                    FROM 
                        jose.VSCH_CONTRATO_CRONOGRAMA CRO
                        inner join jose.mat_contrato mc on mc.id_contrato = cro.id_contrato
                        inner join jose.school_institucion i on i.id_institucion = mc.id_institucion
                    WHERE CRO.id_contrato = l_id_contrato     
                    and cro.id_articulo = l_id_articulo;

                    l_redondeo_total_desc := l_redondeo_total_desc + l_redondeo_covid_desc;

                    SELECT count(1),case when l_importe_cuota_descuento = 0 then 0 else round((COALESCE(sum(CUO.VALOR),0)*l_descuento/l_importe_cuota_descuento)::numeric,2) end, 
                    COALESCE(max(CRI.nombre),'-'),
                    COALESCE(max(CRI.id_criterio),0)                    
                    into STRICT l_contar, l_valor_descuento,l_descripcion_descuento, l_id_criterio_descuento
                    FROM JOSE.MAT_MES MES, JOSE.MAT_CONTRATO_CUOTA CUO, JOSE.MAT_COSTO COS, JOSE.MAT_CRITERIO CRI
                    WHERE MES.ID_MES = CUO.ID_MES
                    AND CUO.ID_COSTO = COS.ID_COSTO
                    AND COS.ID_CRITERIO = CRI.ID_CRITERIO
                    AND CUO.ID_CONTRATO = l_id_contrato
                    AND ID_ARTICULO = l_id_articulo
                    AND CUO.ES_ACTIVO = 'S'
                    AND CUO.ES_COBRO = 'N'
                    AND CRI.ID_PADRE = l_id_criterio
                    AND CRI.NOMBRE_ASIENTO = l_descripcion;

                    RAISE NOTICE ' l_id_contrato %', l_id_contrato;
                    RAISE NOTICE ' l_id_articulo %', l_id_articulo;
                    RAISE NOTICE ' l_id_criterio %', l_id_criterio;
                    RAISE NOTICE ' l_descripcion %', l_descripcion;
                    RAISE NOTICE ' l_contar %', l_contar;

                    l_importeasiento := 0;

                    IF l_contar >= 1 then
                        l_importeasiento := l_valor_descuento;
                        l_descripcion := l_descripcion_descuento;

                            
                        --DBMS_OUTPUT.put_line ('*********');
                        --DBMS_OUTPUT.put_line ('->'||l_redondeo_total_desc);
                        --DBMS_OUTPUT.put_line ('->'||l_descuento);
                        --DBMS_OUTPUT.put_line ('->'||l_redondeo_id_criterio);
                        --DBMS_OUTPUT.put_line ('->'||l_id_criterio_descuento);
                        if l_descuento != l_redondeo_total_desc AND l_id_criterio_descuento = l_redondeo_id_criterio then 
                            --DBMS_OUTPUT.put_line ('*->'||l_importeasiento);
                            l_importeasiento := l_importeasiento + l_descuento - l_redondeo_total_desc;
                            --DBMS_OUTPUT.put_line ('*->'||l_importeasiento);
                        end if;
                    -- else 
                        -- l_error:=1; --importe de debito o credito igual a cero
                        -- l_msgerror:='Alto hay un error en la configuración de criterios y dinámica '||l_id_contrato||' - '||l_id_articulo||' '||l_id_criterio||' '||l_descripcion;                        
                    end if;

                    IF l_descripcion = 'DES-COVID' THEN
                    
                                  
                        SELECT COUNT(1),
                        case when l_importe_cuota_descuento = 0 then 0 else COALESCE(SUM((select round((coalesce(sum(case when p.es_porcentaje = '1' then cro.total * p.valor else p.valor end),0))::numeric,2) from jose.fin_promocion p 
					            inner join jose.fin_promocion_alumno a on a.id_promocion = p.id_promocion
					            LEFT OUTER JOIN jose.FIN_PROMOCION_ARTICULO_CONF paf ON p.ID_ANHO = paf.ID_ANHO 
					            			AND p.ID_ENTIDAD = paf.ID_ENTIDAD 
					            			AND p.ID_DEPTO = paf.ID_DEPTO 
					            			AND p.ID_ARTICULO = paf.ID_ARTICULO 
					            where a.id_alumno = cro.id_alumno
					            and p.id_entidad = i.id_campo
					            and p.id_depto = i.id_depto
					            and p.id_anho = mc.id_anho
					            and p.estado = '1'
					            and p.id_articulo = cro.id_articulo
					            AND COALESCE(paf.ES_NOTACREDITO,'N') = 'N' )),0)*l_descuento/l_importe_cuota_descuento end,
                                'DES-COVID'
                        into STRICT l_contar, l_valor_descuento,l_descripcion_descuento
                        FROM 
                            jose.VSCH_CONTRATO_CRONOGRAMA CRO
                            inner join jose.mat_contrato mc on mc.id_contrato = cro.id_contrato
                            inner join jose.school_institucion i on i.id_institucion = mc.id_institucion
                        WHERE CRO.id_contrato = l_id_contrato     
                        and cro.id_articulo = l_id_articulo;

                        IF l_contar >= 1 then 
                            l_importeasiento := l_valor_descuento;
                            l_descripcion := l_descripcion_descuento;
                        end if;

                    END IF;

                    

                end if;
                /*
                --DBMS_OUTPUT.put_line ('--> l_es_mensualidad_colegios:'||l_es_mensualidad_colegios);
                --DBMS_OUTPUT.put_line ('--> l_importeasiento:'||l_importeasiento);
                */
                if l_id_indicador = 'COSTO_ALM' and l_dc = 'C' then
                    l_descripcion := l_descripcion||'-'||l_detalle;
                end if;

                l_depto:=null;
                l_cuenta_cte:=null;

                if l_unico='U' then
                  select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                elsif (l_unico='M') then
                   SELECT position('|' in l_deptos) into STRICT l_buscar;
                   if l_buscar>0 then
                     select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                     select FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                     select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasi) into STRICT l_depto;
                   else
                    l_depto:=l_deptos;
                   end if;
                elsif (l_unico='X') then
                   select pkg_sales_school_fc_depto_alumno_school_inst(l_id_cliente, l_id_entidad, l_id_depto_venta) into STRICT l_depto;
                elsif l_unico='S' THEN  -- Si es sesión
                    l_depto := l_id_depto_venta;---
                end if;

                if l_unicoctate='U' then
                  select  count(1) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                  if l_cont>0 then
                    if l_id_tipoigv = '10' and l_id_indicador = 'BASE' then  --GARVADA = CTA_CTE = 4 (10) - bazar
                        select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    elsif l_id_tipoigv = '20' and l_id_indicador = 'BASE' then  --EXONERAD = CTA_CTE = 5 (20) -bazar
                        l_cuenta_cte := '5';
                    elsif l_id_tipoigv = '30' and l_id_indicador = 'BASE' then  --INAFECTA = CTA_CTE = 1 (30) -bazar
                        l_cuenta_cte := '1';
                    else
                        select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                    end if;
                  end if;
                elsif l_unicoctate='S' then
                    select id_cta_cte_administracion into STRICT l_cuenta_cte from jose.school_institucion where id_campo=l_id_entidad and id_depto=l_id_depto_venta;
                elsif (l_unicoctated='M') then
                   SELECT position('|' in l_ctates) into STRICT l_buscar;
                   if l_buscar>0 then
                     select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                     select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                     select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into STRICT l_cuenta_cte;
                   else
                    l_cuenta_cte:=l_ctates;
                   end if;
                elsif (l_unicoctated='X') then
                 select NUM_DOCUMENTO into STRICT l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                end if;

                if l_dc='C' then
                  l_importeasiento:=l_importeasiento*(-1);
                end if;

                /*
                select count(1) into l_cont from CONTA_ASIENTO
                where ID_TIPOORIGEN=l_id_tipoorigen
                and ID_ORIGEN=l_id_vdetalle
                and coalesce(DEPTO,'-') = coalesce(l_depto,'-')
                and CUENTA =l_id_cuentaaasi
                and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                and case when importe>0 then 'D' else 'C' end=l_dc;    
                */
                l_cont := 0;

/*                
                --DBMS_OUTPUT.put_line ('l_descripcion:'||l_descripcion);
                --DBMS_OUTPUT.put_line ('l_importeasiento:'||l_importeasiento);
                --DBMS_OUTPUT.put_line (' l_cont: '||l_cont);
                --DBMS_OUTPUT.put_line (' ________ ');
*/
                

            --DBMS_OUTPUT.put_line (' ...................');
            --DBMS_OUTPUT.put_line ('l_importeasiento:'||l_importeasiento);
            
                if l_importeasiento<>0 then
                  if l_cont=0 then
                  
                  ----DBMS_OUTPUT.put_line (' BEFORE INSERT '||l_importeasiento);
                                  
                    INSERT INTO CONTA_ASIENTO(
                    ID_TIPOORIGEN,
                    ID_ORIGEN, 
                    FONDO,
                    DEPTO,
                    CUENTA, 
                    CUENTA_CTE,
                    RESTRICCION,
                    IMPORTE,
                    DESCRIPCION,
                    MEMO,
                    VOUCHER, 
                    PARENT_ID,
                    --REF_ID,
                    AGRUPA,
                    PRIMARIO
                    )VALUES ( 
                    l_id_tipoorigen,
                    l_id_vdetalle,
                    l_fondo,
                    l_depto,
                    l_id_cuentaaasi,
                    l_cuenta_cte,
                    l_id_restriccion,
                    l_importeasiento,
                    '(Doc: '||l_serie||'-'||l_numero||')-'||l_descripcion,
                    l_memo,
                    l_voucher,
                    null,
                    --l_ref_id,
                    l_agrupa,
                    l_primario
                    );
                  else
                    l_msgerror:='';
                    /*update CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                    where ID_TIPOORIGEN=l_id_tipoorigen
                    and ID_ORIGEN=l_id_vdetalle
                    and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                    and CUENTA =l_id_cuentaaasi
                    and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                    and case when importe>0 then 'D' else 'C' end=l_dc;*/
                  end if;
                end if;
                  --DESTINO
                  OPEN casides;
                  FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,
                  l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;
                  WHILE casides%FOUND LOOP


                    select (case when l_id_indicadord='COSTO_ALM' then l_precio_alm
                              when l_id_indicadord='BASE' then l_base
                              when l_id_indicadord='IGV' then l_igv
                              when l_id_indicadord='DESCUENTO' then l_descuento
                              when l_id_indicadord='IMPORTE' then l_importe
                        else 0 end)*(l_porcentaje)  into STRICT l_importeasiento
;

                    l_depto:=null;
                    l_cuenta_cte:=null;

                    if l_unicod='U' then
                      select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                    elsif (l_unicod='M') then
                       SELECT position('|' in l_deptos) into STRICT l_buscar;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                         select FC_SPLIT(l_deptos,'|') into STRICT l_adeptos;
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_adeptos ,l_id_cuentaaasid) into STRICT l_depto;
                       else
                        l_depto:=l_deptos;
                       end if;
                    elsif (l_unicod='X') then
                       select pkg_sales_school_fc_depto_alumno_school_inst(l_id_cliente, l_id_entidad, l_id_depto_venta) into STRICT l_depto;
                    end if;

                    if l_unicoctated='U' then
                      select  count(1) into STRICT l_cont from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      if l_cont>0 then
                        select ID_CTACTE into STRICT l_cuenta_cte from CONTA_DINAMICA_CTA_CTE where id_entidad=l_id_entidad and id_asiento=l_id_asientod;
                      end if;

                    elsif (l_unicoctated='M') then
                       SELECT position('|' in l_ctates) into STRICT l_buscar;
                       if l_buscar>0 then
                         select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                         select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                         select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasid) into STRICT l_cuenta_cte;
                       else
                        l_cuenta_cte:=l_ctates;
                       end if;
                    elsif (l_unicoctated='X') then
                      select NUM_DOCUMENTO into STRICT l_cuenta_cte from MOISES.VW_PERSONA_NATURAL where ID_PERSONA=l_id_cliente;
                    elsif l_unicoctated='S' then
                        select id_cta_cte_administracion into STRICT l_cuenta_cte from jose.school_institucion where id_campo=l_id_entidad and id_depto=l_id_depto_venta;
                    end if;

                    if l_dc='C' then
                      l_importeasiento:=l_importeasiento*(-1);
                    end if;
                    if l_importeasiento<>0 then

                      select count(1) into STRICT l_cont from CONTA_ASIENTO
                      where ID_TIPOORIGEN=l_id_tipoorigen
                      and ID_ORIGEN=l_id_vdetalle
                      and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                      and CUENTA =l_id_cuentaaasid
                      and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                      and case when importe>0 then 'D' else 'C' end=l_dc;




                      IF l_agrupa='S' and l_cont>0 THEN
                        /*update  CONTA_ASIENTO set IMPORTE=IMPORTE+l_importeasiento
                        where ID_TIPOORIGEN=l_id_tipoorigen
                        and ID_ORIGEN=l_id_vdetalle
                        and coalesce(DEPTO,'-') =coalesce(l_depto,'-')
                        and CUENTA =l_id_cuentaaasid
                        and coalesce(CUENTA_CTE,'-')=coalesce(l_cuenta_cte,'-')
                        and case when importe>0 then 'D' else 'C' end=l_dc;*/
                        l_msgerror:='';
                      ELSE
                        INSERT INTO CONTA_ASIENTO(
                        ID_TIPOORIGEN,
                        ID_ORIGEN,
                        FONDO,
                        DEPTO,
                        CUENTA, 
                        CUENTA_CTE,
                        RESTRICCION,
                        IMPORTE,
                        DESCRIPCION,
                        MEMO,
                        VOUCHER, 
                        PARENT_ID
                        --REF_ID
                        )VALUES ( 
                        l_id_tipoorigen,
                        l_id_vdetalle,
                        l_fondo,
                        l_depto,
                        l_id_cuentaaasi,
                        l_cuenta_cte,
                        l_id_restriccion,
                        l_importeasiento,
                        case when l_agrupa='N' then  l_detalle||' - (Doc: '||l_serie||'-'||l_numero||')-'||to_char(l_fecha,'DD/MM/YYYY') else l_descripcion||' - (Doc: '||l_serie||'-'||l_numero||')-'||FC_MES_NAME(to_char(l_fecha,'MM')) end,
                        l_memo,
                        l_voucher,
                        null
                        --l_ref_id 
                        );
                      END IF;


                    end if;
                    FETCH casides INTO l_id_asientod,l_id_tipopland,l_id_restricciond,l_id_cuentaaasid,l_dcd,l_id_indicadord,
                    l_unicod,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;
                  END LOOP;
                  CLOSE casides;

                FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_destino,
                l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa, l_primario;

              END LOOP;
              CLOSE casi;

            FETCH cdet INTO l_id_vdetalle, l_dinamica,l_id_tipoorigen, l_detalle,l_base,l_igv,l_descuento,l_importe,l_precio_alm,l_id_tipoigv,l_otros_cargos, l_precio_total,l_id_articulo;

        END LOOP;
        CLOSE cdet;

        
        SELECT COUNT(1) INTO STRICT l_contar 
        FROM CONTA_ASIENTO
        WHERE ID_TIPOORIGEN=L_ID_TIPOORIGEN
        AND ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);
        --ANALIZAR UREGTNE
        if l_contar=0 then
          l_error:=3; --no se ha generado el asiento
          l_msgerror:='ASIENTO VENTA: No se ha generado el asiento';
        else
          select COALESCE(sum(case when IMPORTE>0 then IMPORTE else 0 end),0) as debito,
           COALESCE(sum(case when IMPORTE<0 then IMPORTE*(-1) else 0 end),0) as credito
           into STRICT l_debito,l_credito
          from CONTA_ASIENTO
          where ID_TIPOORIGEN=l_id_tipoorigen
          and ID_ORIGEN IN (SELECT ID_VDETALLE FROM VENTA_DETALLE WHERE ID_VENTA = P_ID_VENTA);

          if l_credito=0 or l_debito=0 then
             l_error:=4; --importe de debito o credito igual a cero
             l_msgerror:='ASIENTO VENTA: Importe de debito o credito igual a cero';
          else
             if l_credito<>l_credito then
              l_error:=5; --descuadre de asiento
              l_msgerror:='ASIENTO VENTA: Descuadre de asiento';
             end if;
          end if;

        end if;

        P_ERROR:=l_error;
        P_MSGERROR:=l_msgerror;

     END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_school_sp_generar_asiento_col (P_ID_VENTA bigint, P_ERROR OUT bigint,P_MSGERROR out text) FROM PUBLIC;
