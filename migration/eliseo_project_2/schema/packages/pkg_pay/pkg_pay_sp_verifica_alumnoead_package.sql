-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_pay,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_pay_sp_verifica_alumnoead ( P_ID_PERSONA bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_COD_TRANSACCION text, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text, P_PATERNO text, P_MATERNO text, P_NOMBRE text, P_SEXO text, P_CORREO text, P_ID_COMPROBANTE text, P_RUC text, P_RAZONSOCIAL text, P_DIRECCION text, OUT CURSOR REFCURSOR ) AS $body$
DECLARE


    l_per_email varchar(100);
    l_eap varchar(1000);
    l_codigo varchar(100);
    l_dni varchar(35);
    l_materno varchar(100);
    l_paterno varchar(100);
    l_nombre varchar(100);
    l_id_tipodocumento bigint;
    l_contar integer;
    l_valida varchar(1):='N';
    l_msgerror varchar(200):='No existe datos';
    l_error bigint:=0;
    l_id_persona bigint;
    l_id_virtual bigint;
    l_tipodocumento varchar(50);
    l_id_persona_ju bigint;
    l_razonsocial varchar(500);
    l_glosa varchar(150);
    l_id_dinamica bigint;
    l_id_anho bigint;
    l_id_mes bigint;
    l_id_user bigint:=205662;---crear
    l_id bigint;
    l_id_emp bigint;

BEGIN
         
        select 
        (to_char(clock_timestamp(),'YYYY'))::numeric , 
        (to_char(clock_timestamp(),'MM'))::numeric 
        into STRICT
        l_id_anho,
        l_id_mes
;

        select count(1) into STRICT l_contar from CONTA_DINAMICA 
        where codigo=P_COD_TRANSACCION
        and id_anho=l_id_anho
        and id_entidad=P_ID_ENTIDAD
        and id_depto=P_ID_DEPTO
        and id_modulo=13;

        
        if l_contar=0 then
          l_msgerror:='No existe código de dinámica';
          l_error:=1;
--           GOTO salida_validadniid;
        else
          if l_contar>1 then
            l_msgerror:='Hay más de uno con código de dinámica';
            l_error:=1;
--             GOTO salida_validadniid;
          end if;
        end if;

        select id_dinamica into STRICT l_id_dinamica from CONTA_DINAMICA 
        where codigo=P_COD_TRANSACCION
        and id_anho=l_id_anho
        and id_entidad=P_ID_ENTIDAD
        and id_depto=P_ID_DEPTO
        and id_modulo=13;

        
        CALL pkg_pay_sp_valida_dep_alumnoiddni(P_ID_ENTIDAD,P_ID_DEPTO,l_id_dinamica,P_ID_COMPROBANTE,l_id_anho,l_id_mes,l_id_user, l_error,l_msgerror);

        if l_error=1 then
--           GOTO salida_validadniid;
        end if;

      select 
      count(1) into STRICT l_contar
      FROM MOISES.PERSONA A, MOISES.PERSONA_NATURAL B
      WHERE A.ID_PERSONA = B.ID_PERSONA
      AND A.ID_PERSONA=P_ID_PERSONA;

      l_id_persona:=P_ID_PERSONA;

      if l_contar=0 then
        
        select 
        count(1) into STRICT l_contar
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  NUM_DOCUMENTO=P_NUM_DOCUMENTO;

        IF l_contar=1 THEN
          select 
          ID_PERSONA into STRICT l_id_persona
          FROM MOISES.PERSONA_DOCUMENTO
          WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        end if;

        select 
        count(1) into STRICT l_contar
        FROM MOISES.PERSONA
        WHERE  ID_PERSONA=l_id_persona;

        if l_contar=0 then
          select coalesce(max(id_persona),0) +1 into STRICT l_id from MOISES.persona;

          INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE,
                  PATERNO,
                  MATERNO
              )VALUES (
                  l_id,
                  P_NOMBRE,
                  P_PATERNO,
                  P_MATERNO
          )returning ID_PERSONA INTO l_id_persona;
        end if;

        select 
        count(1) into STRICT l_contar
        FROM MOISES.PERSONA_NATURAL
        WHERE  ID_PERSONA=l_id_persona;

        if l_contar=0 then
          INSERT INTO MOISES.PERSONA_NATURAL(
                  ID_PERSONA,
                  ID_TIPOPAIS,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  SEXO,
                  CORREO
              )VALUES (
                  l_id_persona,
                  176,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  --P_SEXO,
                  CASE WHEN P_SEXO=6 THEN 2  ELSE P_SEXO END ,--AUMENTADO MARLO
                  P_CORREO
          );
        end if;

        select 
        count(1) into STRICT l_contar
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  ID_PERSONA=l_id_persona;
        if l_contar=0 then
            INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES (
                  l_id_persona,
                  P_ID_TIPODOCUMENTO,
                  P_NUM_DOCUMENTO,
                  1
          );
        end if;

        select 
        count(1) into STRICT l_contar
        FROM MOISES.PERSONA_VIRTUAL
        WHERE  ID_PERSONA=l_id_persona;

        if l_contar=0 and (P_CORREO IS NOT NULL AND P_CORREO::text <> '') then
          INSERT INTO MOISES.PERSONA_VIRTUAL(
                  ID_VIRTUAL,
                  ID_PERSONA,
                  ID_TIPOVIRTUAL,
                  DIRECCION,
                  ES_ACTIVO
                )VALUES (
                    1,
                    l_id_persona,
                    1,
                    P_CORREO,
                    1
            );
        end if;

       -- ELSE
          
        --END IF;
        
      END IF;

        l_valida :='S';
        l_msgerror:='';

        SELECT 
        A.NOMBRE,
        A.PATERNO,
        A.MATERNO,
        B.NUM_DOCUMENTO AS DNI,
        C.CODIGO,
        FT_ALUMNO_EAP(A.ID_PERSONA) AS EAP,
        B.CORREO AS EMAIL_EXTERNO,
        B.id_tipodocumento
        into STRICT l_nombre,
        l_paterno,
        l_materno,
        l_dni,
        l_codigo,
        l_eap,
        l_per_email,
        l_id_tipodocumento
        FROM MOISES.PERSONA A  
        INNER JOIN MOISES.PERSONA_NATURAL B
        ON A.ID_PERSONA = B.ID_PERSONA
        LEFT JOIN MOISES.PERSONA_NATURAL_ALUMNO C
        ON B.ID_PERSONA = C.ID_PERSONA
        WHERE A.ID_PERSONA=l_id_persona;

        
        select count(*) into STRICT l_contar
        from MOISES.PERSONA_DOCUMENTO
        where ID_PERSONA=l_id_persona
        and es_activo=1;

        if l_contar>0 then
          select ID_TIPODOCUMENTO,NUM_DOCUMENTO into STRICT l_id_tipodocumento,l_dni
          from MOISES.PERSONA_DOCUMENTO
          where ID_PERSONA=l_id_persona
          and es_activo=1 
          order by ID_TIPODOCUMENTO LIMIT 1;

        end if;

        
               
        select count(1) into STRICT l_contar from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;

        if l_contar=1 then
          select siglas into STRICT l_tipodocumento from MOISES.TIPO_DOCUMENTO where ID_TIPODOCUMENTO=l_id_tipodocumento;
        end if;

        select count(*) into STRICT l_contar
        from MOISES.PERSONA_VIRTUAL
        where ID_PERSONA=l_id_persona
        and es_activo=1;

        if l_contar>0 then
          select DIRECCION into STRICT l_per_email
          from MOISES.PERSONA_VIRTUAL
          where ID_PERSONA=l_id_persona
          and es_activo=1 
          order by ID_VIRTUAL desc LIMIT 1;

        end if;

        if P_ID_COMPROBANTE='01' then
        
          if coalesce(P_RUC::text, '') = '' then
            l_msgerror:='Es factura, debe registrar RUC';
            l_error:=1;
--             GOTO salida_validadniid;
          end if;

          select count(*) into STRICT l_contar from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc=P_RUC;

          if l_contar>0 then
            select a.nombre into STRICT l_razonsocial from moises.persona a, moises.persona_juridica b where a.id_persona=b.id_persona and b.id_ruc=P_RUC;
          else

            if coalesce(P_RAZONSOCIAL::text, '') = '' then
              l_msgerror:='Es factura, debe registrar Razon Social';
              l_error:=1;
--               GOTO salida_validadniid;
            end if;

            l_razonsocial:=P_RAZONSOCIAL;

            if coalesce(P_DIRECCION::text, '') = '' then
              l_msgerror:='Es factura, debe registrar Dirección';
              l_error:=1;
--               GOTO salida_validadniid;
            end if;

            select coalesce(max(id_persona),0) +1 into STRICT l_id_emp from MOISES.persona;


             INSERT INTO MOISES.PERSONA(
                  ID_PERSONA,
                  NOMBRE
              )VALUES (
                  l_id_emp,
                  P_RAZONSOCIAL
             )returning ID_PERSONA INTO l_id_persona_ju;

             insert into MOISES.PERSONA_JURIDICA(
                      ID_RUC,
                      ID_PERSONA,
                      ID_TIPOESTADO,
                      ID_TIPOCONDICION,
                      ID_TIPOCONTRIBUYENTE,
                      ID_TIPOACTIVIDADECONOMICA,
                      ID_TIPOPAIS,
                      FEC_REGISTRO,
                      FEC_INICIO,
                      FEC_BAJA,
                      ES_RUS
              )values (
                    P_RUC,
                    l_id_persona_ju,
                    11,
                    1,
                    2,
                    290,
                    176,
                    null,
                    null,
                    null,
                    null
             );

             insert into MOISES.PERSONA_DIRECCION(
                ID_PERSONA,
                ID_TIPODIRECCION,
                DIRECCION,
                ES_ACTIVO
            )VALUES (
                l_id_persona_ju,
                5,
                P_DIRECCION,
                1
            );

            INSERT INTO MOISES.PERSONA_DOCUMENTO(
                  ID_PERSONA,
                  ID_TIPODOCUMENTO,
                  NUM_DOCUMENTO,
                  ES_ACTIVO
              )VALUES (
                  l_id_persona_ju,
                  6,
                  P_RUC,
                  1
           );

          end if;

        end if;

       
       
--       <<salida_validadniid>>
  
    OPEN CURSOR FOR
    
     SELECT
        l_valida  as valida,
        l_id_persona as id_persona,
        l_id_persona as id_persona_visa,
        l_per_email as email_visa,
        l_eap as eap,
        l_codigo as codigo,
        l_dni as num_documento,
        l_paterno||' '||l_materno as apellidos,
        l_paterno||' '||l_materno as apellidos_visa,
        l_nombre as nombres,
        l_paterno as paterno,
        l_materno as materno,
        l_nombre as nombres_visa,
        l_tipodocumento as tipodocumento,
        P_RUC AS  ruc,
        l_razonsocial as razonsocial,
        l_msgerror  as msgerror,
        l_glosa as glosa,
        l_id_dinamica as id_dinamica,
        l_id_persona_ju as id_cliente,
        P_ID_COMPROBANTE as id_comprobante
;

     
  END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_pay_sp_verifica_alumnoead ( P_ID_PERSONA bigint, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_COD_TRANSACCION text, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text, P_PATERNO text, P_MATERNO text, P_NOMBRE text, P_SEXO text, P_CORREO text, P_ID_COMPROBANTE text, P_RUC text, P_RAZONSOCIAL text, P_DIRECCION text, OUT CURSOR REFCURSOR ) FROM PUBLIC;
