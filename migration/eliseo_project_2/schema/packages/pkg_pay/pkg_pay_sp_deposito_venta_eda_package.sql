-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_pay,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_pay_sp_deposito_venta_eda ( P_ID_DINAMICA bigint, P_OPERACION text, P_IMPORTE bigint, P_COD_TARJETA text, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text, P_PATERNO text, P_MATERNO text, P_NOMBRE text, P_SEXO text, P_CORREO text, P_IP text, P_ID OUT text, P_ERROR OUT bigint, P_MSGERROR OUT text ) AS $body$
DECLARE


    L_ID_PERSONA integer;
    L_ID_ENTIDAD integer := 7124;
    L_ID_DEPTO varchar(10) := '1';
    L_ID_ANHO integer;
    L_ID_MES integer;
    L_ID_DINAMICA integer := 100;
    L_ID_DINAMICA_DEP integer;
    L_ID_COMPROBANTE varchar(2) := '03';
    L_ID_TIPOVENTA bigint := 6;
    L_ID_MONEDA bigint := 7;
    L_TIPOCAMBIO decimal(10,2) := 0;
    L_GLOSA varchar(50);
    L_IMPORTE_ME decimal(10,2) :=0;
    L_SERIE_NUMERO varchar(30);
    L_ID_MEDIOPAGO varchar(5):='006';
    L_ID_USER bigint:=2; --cajero Visa Net Online C/E
    L_VENTAS varchar(100):=NULL;
    L_VENTAS_IMP varchar(100):=NULL;
    L_TIPO varchar(100):='V';
    L_ID_TIPOTRANSACCION bigint;
    L_CONTAR bigint:=0;
    L_FECHA timestamp(0);
    L_ID_TIPOASIENTO varchar(5) := 'MB';
    L_ERROR bigint:=0;
    L_MSGERROR varchar(200):='';
    L_ID bigint;
    L_ID_TIPOTARJETA integer;
    L_CANTIDAD decimal(10,2):=1;

    
BEGIN
    
        SELECT 
            (to_char(clock_timestamp(),'YYYY'))::numeric , 
            (to_char(clock_timestamp(),'MM'))::numeric ,
            clock_timestamp(),
            'DEPÓSITO CON VISA' 
            INTO STRICT L_ID_ANHO, L_ID_MES, L_FECHA, L_GLOSA
;

        SELECT COUNT(1) INTO STRICT L_CONTAR FROM CONTA_DINAMICA WHERE ID_DINAMICA = P_ID_DINAMICA;
        IF L_CONTAR=0 THEN
            L_MSGERROR:='No existe código de transacción';
            L_ERROR:=1;
--             GOTO salida_validadniid;
        END IF;

        CALL pkg_pay_sp_valida_dep_alumnoiddni(L_ID_ENTIDAD,L_ID_DEPTO,P_ID_DINAMICA,L_ID_COMPROBANTE,L_ID_ANHO,L_ID_MES,L_ID_USER, L_ERROR,L_MSGERROR);

        IF L_ERROR=1 then
--             GOTO salida_validadniid;
        END IF;

        --CREAR PERSONA
        --L_ID_PERSONA
        SELECT 
            COUNT(1) INTO STRICT L_CONTAR
        FROM MOISES.PERSONA_DOCUMENTO
        WHERE  NUM_DOCUMENTO = P_NUM_DOCUMENTO;

        IF L_CONTAR=1 THEN
            SELECT 
                    ID_PERSONA INTO STRICT L_ID_PERSONA
            FROM MOISES.PERSONA_DOCUMENTO
            WHERE NUM_DOCUMENTO=P_NUM_DOCUMENTO;
        ELSE
            SELECT COALESCE(MAX(ID_PERSONA),0) +1 INTO STRICT L_ID FROM MOISES.PERSONA;

            INSERT INTO MOISES.PERSONA( ID_PERSONA, NOMBRE, PATERNO, MATERNO)VALUES ( L_ID, P_NOMBRE, P_PATERNO, P_MATERNO
            )RETURNING ID_PERSONA INTO L_ID_PERSONA;

            INSERT INTO MOISES.PERSONA_NATURAL( ID_PERSONA, ID_TIPOPAIS, ID_TIPODOCUMENTO, NUM_DOCUMENTO, SEXO, CORREO
              )VALUES ( L_ID_PERSONA, 176, P_ID_TIPODOCUMENTO, P_NUM_DOCUMENTO, CASE WHEN P_SEXO='M' THEN 1  ELSE 2 END , P_CORREO );

            INSERT INTO MOISES.PERSONA_DOCUMENTO( ID_PERSONA, ID_TIPODOCUMENTO, NUM_DOCUMENTO, ES_ACTIVO
            )VALUES ( L_ID_PERSONA, P_ID_TIPODOCUMENTO, P_NUM_DOCUMENTO, 1 );

            INSERT INTO MOISES.PERSONA_VIRTUAL( ID_VIRTUAL, ID_PERSONA, ID_TIPOVIRTUAL, DIRECCION, ES_ACTIVO)VALUES ( 1,  L_ID_PERSONA, 1, P_CORREO, 1 );

        END IF;

        --CREAR LA VENTA
        CALL pkg_pay_sp_ventas_alumnoiddni(
                   L_ID_PERSONA,	
                   P_OPERACION,
                   L_ID_ENTIDAD,
                   L_ID_DEPTO,
                   L_ID_ANHO ,
                   L_ID_MES, 
                   P_IMPORTE,	
                   P_IP,
                   P_ID_DINAMICA,
                   L_ID_PERSONA,
                   L_ID_COMPROBANTE,
                   L_ID_TIPOVENTA,
                   L_ID_MONEDA,
                   L_TIPOCAMBIO,
                   L_IMPORTE_ME,
                   L_CANTIDAD,
                   L_VENTAS,
                   L_VENTAS_IMP,
                   L_ERROR,
                   L_MSGERROR
          );

        IF L_ERROR=1 then
--             GOTO salida_validadniid;
        END IF;

        IF COALESCE(LENGTH(L_VENTAS),0)>0 THEN
            SELECT SERIE||'-'||NUMERO INTO STRICT L_SERIE_NUMERO FROM VENTA WHERE ID_VENTA = (L_VENTAS)::numeric;
        END IF;

        --CREAR EL DEPOSITO
        SELECT COUNT(1) INTO STRICT L_CONTAR FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;

        IF L_CONTAR>0 THEN
           SELECT ID_TIPOTARJETA INTO STRICT L_ID_TIPOTARJETA FROM CAJA_TIPOTARJETA WHERE CODIGO = P_COD_TARJETA;
        END IF;

        SELECT ID_PARENT INTO STRICT L_ID_DINAMICA_DEP FROM CONTA_DINAMICA WHERE ID_DINAMICA = P_ID_DINAMICA;

        SELECT ID_TIPOTRANSACCION INTO STRICT L_ID_TIPOTRANSACCION FROM CONTA_DINAMICA WHERE ID_DINAMICA = L_ID_DINAMICA_DEP;
        CALL pkg_pay_sp_crear_deposito_alumnoiddni(
                              L_ID_ENTIDAD,
                              L_ID_DEPTO,
                              L_ID_ANHO,
                              L_ID_MES,
                              L_ID_MEDIOPAGO,
                              L_ID_USER,
                              L_ID_PERSONA,
                              L_VENTAS,
                              L_VENTAS_IMP,
                              L_TIPO,
                              L_ID_TIPOTRANSACCION,
                              L_ID_MONEDA,
                              L_ID_DINAMICA_DEP,
                              L_ID_TIPOTARJETA,
                              null,
                              P_OPERACION,
                              L_FECHA,
                              0,
                              P_IMPORTE,
                              0,
                              L_IMPORTE_ME,
                              L_TIPOCAMBIO,
                              L_GLOSA,
                              null,
                              null,
                              L_ID_TIPOASIENTO,
                              7,
                              L_ERROR,
                              L_MSGERROR
                            );
--         <<salida_validadniid>>
        P_ID:=l_serie_numero;
        P_ERROR:=L_ERROR;
        P_MSGERROR:=L_MSGERROR;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_pay_sp_deposito_venta_eda ( P_ID_DINAMICA bigint, P_OPERACION text, P_IMPORTE bigint, P_COD_TARJETA text, P_ID_TIPODOCUMENTO bigint, P_NUM_DOCUMENTO text, P_PATERNO text, P_MATERNO text, P_NOMBRE text, P_SEXO text, P_CORREO text, P_IP text, P_ID OUT text, P_ERROR OUT bigint, P_MSGERROR OUT text ) FROM PUBLIC;
