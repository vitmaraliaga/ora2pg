-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_payonline,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_payonline_sp_valida_deposito_upn ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, -- P_COD_TRANSACCION varchar,
 P_ID_ANHO bigint, P_ID_MES bigint, P_ID_COMPROBANTE text, -- P_ID_PERSONA numeric,
 P_ID_DINAMICA OUT bigint, P_GLOSA OUT text, P_ERROR OUT bigint, P_MSGERROR out text ) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_contar bigint:=0;

        l_id_dinamica bigint:=0;
        l_glosa varchar(150) := '';

    
BEGIN
        
	     l_error:=1;
	  l_msgerror:='En migración.';
-- 	  goto salida_val;
	
        -- ======================== VALIDA DINAMICAS ========================
        SELECT count(1), MAX(A.ID_DINAMICA), MAX(A.NOMBRE ) into STRICT l_contar, l_id_dinamica, l_glosa  FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO IN ('0',P_ID_DEPTO)
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 14
        -- AND C.CODIGO = P_COD_TRANSACCION -- DA
        AND C.CODIGO = 'DA'
        AND A.ACTIVO = 'S';

        if l_contar <> 1 then
            L_ERROR :=1;
            L_MSGERROR := 'Alto! La cantidad de dinámicas configuradas para depósitos alumno debe de ser 1 ('||l_contar||' Din)';
--             GOTO salida_val;
        end if;

        SELECT count(1)
        into STRICT l_contar
        FROM eliseo.CONTA_DINAMICA din, eliseo.TIPO_TRANSACCION tra, eliseo.TIPO_GRUPO_CONTA conta
        WHERE din.ID_TIPOTRANSACCION = tra.ID_TIPOTRANSACCION
        AND tra.ID_TIPOGRUPOCONTA = conta.ID_TIPOGRUPOCONTA
        AND din.ID_ENTIDAD = P_ID_ENTIDAD
        AND din.ID_ANHO = P_ID_ANHO
        AND din.ID_DEPTO IN ('0',P_ID_DEPTO)
        AND din.ID_MODULO = 14
        AND conta.CODIGO = 'DS'
        AND din.ACTIVO = 'S';

        if l_contar <> 1 then
            L_ERROR :=1;
            L_MSGERROR := 'Alto! La cantidad de dinámicas configuradas para clientes saldo inicial debe de ser 1 ('||l_contar||' dinámicas)';
--             GOTO salida_val;
        end if;
           
        -- ======================== VALIDA DOCUMENTOS DE IMPRESIÓN ========================
	    SELECT COUNT(1) INTO STRICT l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_COMPROBANTE = P_ID_COMPROBANTE;

        if l_contar <> 1 THEN
         	l_error := 1;
        	l_msgerror := 'Alto! Debe haber un documento activo de venta para el usuario VISA. [tipo de documento: ' ||P_ID_COMPROBANTE || ']';
--         	GOTO salida_val;
        END IF;

        SELECT COUNT(1) INTO STRICT l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_COMPROBANTE = '00';

        if l_contar <> 1 THEN
         	l_error := 1;
        	l_msgerror := 'Alto! Solo debe haber un documento activo de depósitos para el usuario VISA. [tipo de documento: 00]';
--         	GOTO salida_val;
        END IF;

	    --======================== VALIDA CONFIGURACION VOUCHERS ========================
	    SELECT count(*) into STRICT l_contar FROM CONTA_VOUCHER_CONFIG
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO =P_ID_DEPTO
        AND ID_MODULO = '13'--modulo ventas
        AND ID_ANHO = P_ID_ANHO
        AND ID_TIPOASIENTO='RV'
        AND AUTOMATICO='S'
        AND ID_TIPOVOUCHER = 1;

        if l_contar < 1 then
            l_error:=1; --no existe serie y numero del documento
            l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo '||P_ID_ANHO::text;
--             GOTO salida_val;
        elsif l_contar > 1 then
            l_error:=1; --no existe serie y numero del documento
            l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||P_ID_ANHO::text;
--             GOTO salida_val;
        end if;

       	SELECT  count(1) into STRICT l_contar FROM CONTA_VOUCHER_CONFIG
	      WHERE ID_ENTIDAD = P_ID_ENTIDAD
	      AND ID_DEPTO =P_ID_DEPTO
	      AND ID_MODULO = '14'--modulo tesoreria
	      AND ID_ANHO = P_ID_ANHO
	      and ID_TIPOASIENTO='MB'
	      AND AUTOMATICO='S'
	      AND ID_TIPOVOUCHER = 5;
	
	      if l_contar < 1 then
	          l_error:=1;
	          l_msgerror:='Alto: No existe la configuración de vouchers para los depósitos, en el periodo '||P_ID_ANHO::text;
-- 	          GOTO salida_val;
	      elsif l_contar > 1 then
	          l_error:=1;
	          l_msgerror:='Alto: Existe más de una configuración de vouchers para los depósitos, en el periodo '||P_ID_ANHO::text;
-- 	          GOTO salida_val;
	      end if;
	
	     /*
      	--=================== VALIDACIÓN PARA LA FACTURACIÓN ELECTRONICA =======================
      	SELECT NVL(B.EMISORID,0) INTO l_contar FROM CONTA_ENTIDAD A, CONTA_EMPRESA B WHERE A.ID_EMPRESA = B.ID_EMPRESA AND A.ID_ENTIDAD = P_ID_ENTIDAD;
	    if l_contar = 0 then
	        l_error := 1;
	        l_msgerror := 'Alto! La Empresa-Entidad (' || P_ID_ENTIDAD || ') no tiene un código de EMISOR-ID para el Reg de Fac Elec.';
-- 	        GOTO salida_val;
	    END IF;
	   
	   
        --=================== VALIDACIÓN CONTADOR PARA LA CREACIÓN DE VOUCHER =======================
  	  SELECT COUNT(1) INTO l_contar
      FROM APS_EMPLEADO A 
          INNER JOIN APS_TRABAJADOR B ON A.ID_PERSONA = B.ID_PERSONA
          INNER JOIN APS_CARGO C ON B.ID_CARGO = C.ID_CARGO
          INNER JOIN CONTA_ENTIDAD E ON A.ID_ENTIDAD = E.ID_ENTIDAD
      WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
      AND (
    	  (A.ID_DEPTO LIKE P_ID_DEPTO||'%' AND E.ID_TIPOENTIDAD = 12)
    	  OR (E.ID_TIPOENTIDAD != 12)
      )
      AND UPPER(C.NOMBRE) LIKE '%CONTADOR%'
      AND A.ESTADO = 'A';
	
     if l_contar = 0 then
          l_error:=1; 
          l_msgerror:='Alto: No existe asignado un contador para la entidad: ' || P_ID_ENTIDAD || ' y el departamento: ' || P_ID_DEPTO;
--           GOTO salida_val;
      end if;
     */
     
     --valida se esta asignado contador
      SELECT COUNT(1) INTO STRICT l_contar FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO;

     if l_contar = 0 then
          l_error:=1;
          l_msgerror:='Alto: No existe asignado un contador FIN. para la entidad: ' || P_ID_ENTIDAD || ' y el departamento: ' || P_ID_DEPTO;
--           GOTO salida_val;
      end if;

      --==================================== VERIFICANDO DINAMICA DE VENTA ================================================ 
       /*
       SELECT id_mes,ID_CONTRATO into l_id_mes, l_id_contrato FROM jose.VSCH_CONTRATO_CRONOGRAMA
                WHERE id_anho = P_ID_ANHO
                AND ID_ALUMNO = P_ID_CLIENTE
                AND ID_ARTICULO = P_ID_ARTICULO;
               
            SELECT (count(id_dinamica) -count(dinamica_anho)) + (count(id_dinamica_anticipo)- count(dinamica_anticipo_anho)) into l_contar FROM (
            SELECT crient.ID_DINAMICA, crient.ID_DINAMICA_ANTICIPO, 
            (
            SELECT din.id_dinamica FROM eliseo.CONTA_DINAMICA din WHERE din.ID_DINAMICA = crient.ID_DINAMICA AND ID_ANHO = crient.ID_ANHO 
            ) AS dinamica_anho,
            (
            SELECT din.id_dinamica FROM eliseo.CONTA_DINAMICA din WHERE din.ID_DINAMICA = crient.ID_DINAMICA AND ID_ANHO = crient.ID_ANHO 
            ) AS dinamica_anticipo_anho
            FROM jose.MAT_CONTRATO_COSTO coco, jose.MAT_COSTO cos, jose.MAT_CRITERIO_ENTIDAD crient, jose.MAT_CRITERIO cri
            WHERE coco.ID_COSTO = cos.ID_COSTO
            AND cos.ID_CRITERIO = CRIENT.ID_CRITERIO
            AND cos.ID_ENTIDAD = crient.ID_ENTIDAD
            AND cos.ID_ANHO = CRIENT.ID_ANHO
            AND crient.ID_CRITERIO = cri.ID_CRITERIO
            AND coco.ID_CONTRATO = 25
            AND cri.ES_COBRO = 'S'
            AND coco.ES_ACTIVO = 'S'
            ) a;     
            if l_contar <> 0 then
                l_error:=1; 
                l_msgerror:='Alto: Dinámicas inválidas (Año Contable).';
--                 GOTO salida_rapida;
            end if;
           */
         
--        <<salida_val>>
       P_ID_DINAMICA:=l_id_dinamica;
       P_GLOSA:=l_glosa;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;

      
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_payonline_sp_valida_deposito_upn ( P_ID_ENTIDAD bigint, P_ID_DEPTO text,  P_ID_ANHO bigint, P_ID_MES bigint, P_ID_COMPROBANTE text,  P_ID_DINAMICA OUT bigint, P_GLOSA OUT text, P_ERROR OUT bigint, P_MSGERROR out text ) FROM PUBLIC;
