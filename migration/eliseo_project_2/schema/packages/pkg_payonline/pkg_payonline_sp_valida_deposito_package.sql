-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_payonline,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_payonline_sp_valida_deposito ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_COD_TRANSACCION text, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_PERSONA bigint, P_ID_DINAMICA OUT bigint, P_GLOSA OUT text, P_ERROR OUT bigint, P_MSGERROR out text ) AS $body$
DECLARE

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_tipoasiento varchar(5) := 'MB';
        l_id_tipovoucher bigint := 5;
        l_id_comprobante varchar(3):='00';  --deposito
        l_serie varchar(4);
        l_correlativo bigint :=0;
        l_contar bigint:=0;

        L_ID_TIPOCOMPROBANTET varchar(4) := '99'; --TRANSFERENCIAS DE VENTAS
        L_ID_TIPOASIENTOT varchar(5):='RV';
        L_ID_TIPOVOUCHERT bigint := 7;
        l_id_dinamica bigint:=0;
        l_glosa varchar(150);

    
BEGIN
        
        --valida transacción
        
        SELECT count(1) into STRICT l_contar  FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 14
        AND C.CODIGO = P_COD_TRANSACCION
        AND A.ACTIVO = 'S';

        
        if l_contar=0 then
          l_error:=1;
          l_msgerror:='Alto: No esta configurado tipo de transacción';
--           GOTO salida_val;
        else
          if l_contar>1 then
            l_error:=1;
            l_msgerror:='Alto: Hay mas de un tipo de transacción';
--             GOTO salida_val;
          end if;
        end if;

        SELECT a.id_dinamica,a.nombre into STRICT l_id_dinamica,l_glosa  
        FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
        ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
        JOIN TIPO_GRUPO_CONTA C
        ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
        WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
        AND A.ID_DEPTO = P_ID_DEPTO
        AND A.ID_ANHO = P_ID_ANHO
        AND A.ID_MODULO = 14
        AND C.CODIGO = P_COD_TRANSACCION
        AND A.ACTIVO = 'S';

        
        select count(1) into STRICT l_contar from CONTA_DINAMICA_ASIENTO WHERE ID_DINAMICA=l_id_dinamica;

        IF l_contar<=1 THEN
            l_error:=1;
            l_msgerror:='Alto: Falta configurar dinámica asiento  ('||l_id_dinamica::text||')';
--             GOTO salida_val;
        END IF;

      --valida vouche
      
      SELECT COUNT(1) INTO STRICT l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;

      if l_contar < 1 then
          l_error:=1;
          l_msgerror:='Alto: No existe tipo de Asiento (RV) ';
--           GOTO salida_val;
      elsif l_contar > 1 then
          l_error:=1;
          l_msgerror:='Alto: Existe más de una configuración de Tipo de Asiento (RV) '||P_ID_ANHO::text;
--           GOTO salida_val;
      end if;

      SELECT ID_TIPOASIENTO INTO STRICT l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOVOUCHER = l_id_tipovoucher;

      
    
      
      SELECT  count(1) into STRICT l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO =P_ID_DEPTO
      AND ID_MODULO = '14'--modulo tesoreria
      AND ID_ANHO = P_ID_ANHO
      and ID_TIPOASIENTO=l_id_tipoasiento
      AND AUTOMATICO='S'
      AND ID_TIPOVOUCHER = l_id_tipovoucher;

      if l_contar < 1 then
          l_error:=1;
          l_msgerror:='Alto: No existe la configuración de vouchers para los depositos, del periodo '||P_ID_ANHO::text;
--           GOTO salida_val;
      elsif l_contar > 1 then
          l_error:=1;
          l_msgerror:='Alto: Existe más de una configuración de vouchers para los Depositos, del periodo '||P_ID_ANHO::text;
--           GOTO salida_val;
      end if;

      --serie y numero
      
      /*select count(*) into l_contar 
      from CONTA_DOCUMENTO_IP a, CONTA_DOCUMENTO_IP_USER b, CONTA_DOCUMENTO c
      where a.ID_DOCIP=b.ID_DOCIP
      and a.id_documento=c.id_documento
      and b.id=P_ID_PERSONA
      and c.ID_ENTIDAD=P_ID_ENTIDAD
      and c.id_comprobante=l_id_comprobante;*/
      
        SELECT COUNT(1) INTO STRICT l_contar FROM FIN_DOCUMENTO_DEPTO
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND ID_DEPTO = P_ID_DEPTO
        AND ID_COMPROBANTE = l_id_comprobante;

      if l_contar=0 then
          l_error:=1;
          l_msgerror:='Alto: No existe serie y número de documento ('||l_id_comprobante||')';
--           GOTO salida_val;
      end if;

      
      
      
      IF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '1' THEN
          L_ID_TIPOASIENTOT := 'RV';
      ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '5' THEN
          L_ID_TIPOASIENTOT := 'RVJ';
      ELSIF P_ID_ENTIDAD = 7124 AND P_ID_DEPTO = '6' THEN
          L_ID_TIPOASIENTOT := 'RVT';
      END IF;

      --transferencia voucher
      SELECT   COUNT(1) INTO STRICT l_contar FROM CONTA_VOUCHER_CONFIG
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO
      AND ID_MODULO = '13'--modulo ventas
      AND ID_ANHO = P_ID_ANHO
      AND ID_TIPOASIENTO = L_ID_TIPOASIENTOT
      AND AUTOMATICO = 'S'
      AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHERT;

      IF l_contar < 1 THEN
          l_error:=1;
          l_msgerror:='Alto: No existe la configuración de vouchers para las Transf., del periodo '||P_ID_ANHO::text||' - '||P_ID_ENTIDAD||' - '||P_ID_DEPTO||' - '||L_ID_TIPOASIENTOT||' - '||L_ID_TIPOVOUCHERT;
--           GOTO salida_val;
      ELSIF l_contar > 1 THEN
          L_ERROR:=1;
          l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||P_ID_ANHO::text;
--           GOTO salida_val;
      END IF;

      --valida se esta asignado contador
      SELECT COUNT(1) INTO STRICT l_contar FROM FIN_CONTADOR_DEPTO
      WHERE ID_ENTIDAD = P_ID_ENTIDAD
      AND ID_DEPTO = P_ID_DEPTO;

      IF l_contar = 0 THEN
          l_error:=1; --no existe serie y numero del documento
          l_msgerror:='Alto: Falta Asignar Contador - Sede por Departamento';
--           GOTO salida_val;
      END IF;

     --VALIDA PARA ANTICIPOS EL COMPROBANTE SE DEFINE FIJO POR DEPTO
          SELECT COUNT(1) INTO STRICT l_contar FROM FIN_DOCUMENTO_DEPTO
          WHERE ID_ENTIDAD = P_ID_ENTIDAD
          AND ID_DEPTO = P_ID_DEPTO
          AND ID_COMPROBANTE = L_ID_TIPOCOMPROBANTET;

          IF l_contar = 0 THEN
              l_error:=1; --no existe serie y numero del documento
              l_msgerror:='Alto: Falta configurar el Comprobante de Transferencia';
--               GOTO salida_val;
          END IF;
      --VALIDA ASIENTO CONTABLE CONFIGURADO PARA ANTICIPOS
            SELECT COUNT(1) INTO STRICT l_contar FROM CONTA_DINAMICA A JOIN TIPO_TRANSACCION B
            ON A.ID_TIPOTRANSACCION = B.ID_TIPOTRANSACCION
            JOIN TIPO_GRUPO_CONTA C
            ON B.ID_TIPOGRUPOCONTA = C.ID_TIPOGRUPOCONTA
            WHERE A.ID_ENTIDAD = P_ID_ENTIDAD
            AND A.ID_DEPTO = P_ID_DEPTO
            AND A.ID_ANHO = P_ID_ANHO
            AND A.ID_MODULO = 13
            AND C.CODIGO = 'AN' --ANTICIPOS
            AND A.ACTIVO = 'S';
            IF l_contar = 0 THEN
                l_error:=1; --no existe serie y numero del documento
                l_msgerror:='Alto: Falta configurar el asiento de anticipos';
--                 GOTO salida_val;
                if l_contar>1 then
                  l_error:=1;
                  l_msgerror:='Alto: Hay mas de un asiento de anticipos';
--                   GOTO salida_val;
                end if;
            END IF;

--        <<salida_val>>
       P_ID_DINAMICA:=l_id_dinamica;
       P_GLOSA:=l_glosa;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;

      
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_payonline_sp_valida_deposito ( P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_COD_TRANSACCION text, P_ID_ANHO bigint, P_ID_MES bigint, P_ID_PERSONA bigint, P_ID_DINAMICA OUT bigint, P_GLOSA OUT text, P_ERROR OUT bigint, P_MSGERROR out text ) FROM PUBLIC;
