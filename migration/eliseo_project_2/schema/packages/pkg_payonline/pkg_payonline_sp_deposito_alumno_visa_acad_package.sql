-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_payonline,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_payonline_sp_deposito_alumno_visa_acad ( P_ID_PERSONA bigint, P_OPERACION text, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_IMPORTE bigint, P_IP text, P_ID_DINAMICA bigint, P_COD_TARJETA text, P_ID_ORIGEN text, P_ID_CLIENTE bigint, P_ID_COMPROBANTE text, P_ID_TIPOVENTA bigint, P_ID OUT text, P_ERROR OUT bigint, P_MSGERROR OUT text) AS $body$
DECLARE

        l_id_anho bigint;
        l_id_mes bigint;
        l_id_mediopago varchar(5):='006';
        l_id_user bigint:=2;                  --cajero Visa Net Online C/E
        l_ventas varchar(100):=null;
        l_ventas_imp varchar(100):=null;
        l_tipo varchar(100):='V';
        l_id_tipotransaccion bigint;---POR DEFINIR
        l_contar bigint:=0;
        l_id_moneda bigint:=7;
        l_fecha timestamp(0);
        l_importe_me bigint:=0;
        l_tipocambio bigint:=0;
        l_glosa varchar(200);
        l_id_tipoasiento varchar(5) := 'MB';

        l_error bigint:=0;
        l_msgerror varchar(200):='';
        l_id_tipovoucher bigint := 5;
        l_id_tipotarjeta bigint;
        l_id_dinamica_dep bigint;
        l_serie_numero varchar(30);
        L_TOTAL bigint;
        L_ID_DINAMICA bigint;

BEGIN
          
            SELECT  (to_char(clock_timestamp(),'YYYY'))::numeric ,  (to_char(clock_timestamp(),'MM'))::numeric , clock_timestamp(), 'DEPOSITO CON VISA'
            INTO STRICT l_id_anho, l_id_mes, l_fecha, l_glosa
;
          
            --voucher de venta
            SELECT COUNT(1) INTO STRICT l_contar FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = l_id_anho AND ID_TIPOVOUCHER = l_id_tipovoucher;

            IF l_contar < 1 THEN
                l_error:=1;
                l_msgerror:='Alto: No existe la configuración de vouchers para las ventas, del periodo ';
--                 GOTO salida_depalumniddni;
            ELSIF l_contar > 1 THEN
                l_error:=1;
                l_msgerror:='Alto: Existe más de una configuración de vouchers para las ventas, del periodo '||l_id_anho::text;
--                 GOTO salida_depalumniddni;
            END IF;

            SELECT ID_TIPOASIENTO INTO STRICT l_id_tipoasiento FROM CONTA_VOUCHER_CONFIG
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_DEPTO = P_ID_DEPTO
            AND ID_ANHO = l_id_anho
            AND ID_TIPOVOUCHER = l_id_tipovoucher;

            IF P_ID_COMPROBANTE<>'00' THEN
                CALL pkg_payonline_sp_ventas_academicas(P_ID_PERSONA,P_OPERACION,P_ID_ENTIDAD,P_ID_DEPTO,l_id_anho,l_id_mes,P_IMPORTE,P_IP,P_ID_ORIGEN,P_ID_CLIENTE,P_ID_COMPROBANTE,
                   P_ID_TIPOVENTA,l_ventas,l_ventas_imp,l_error,l_msgerror);

                if coalesce(length(l_ventas),0)>0 then
                    select SERIE||'-'||NUMERO into STRICT l_serie_numero from venta where id_venta=(l_ventas)::numeric;
                end if;
                --PARA LA DINAMICA DE DEPOSITO OBTEEMOS LA PRIMERA
                SELECT
                D.ID_DINAMICA INTO STRICT L_ID_DINAMICA
                FROM TRAMITE_REGISTRO A JOIN TRAMITE_DETALLE B ON A.ID_REGISTRO = B.ID_REGISTRO
                JOIN TRAMITE_CATALOGO C ON B.ID_TRAMITE = C.ID_TRAMITE
                JOIN CONTA_DINAMICA D ON D.ID_DINAMICA = C.ID_DINAMICA
                WHERE A.ID_REGISTRO = P_ID_ORIGEN  LIMIT 1;
                SELECT ID_PARENT INTO STRICT l_id_dinamica_dep FROM CONTA_DINAMICA WHERE ID_DINAMICA=L_ID_DINAMICA;
            ELSE
                l_id_dinamica_dep:=P_ID_DINAMICA;
            END IF;

            SELECT COUNT(1) INTO STRICT l_contar FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
            if l_contar>0 then
                SELECT id_tipotarjeta INTO STRICT l_id_tipotarjeta FROM CAJA_TIPOTARJETA WHERE codigo=P_COD_TARJETA;
            end if;

            SELECT ID_TIPOTRANSACCION INTO STRICT l_id_tipotransaccion FROM CONTA_DINAMICA WHERE ID_DINAMICA=l_id_dinamica_dep;

            CALL pkg_payonline_sp_crear_deposito_alumnoiddni(P_ID_ENTIDAD,P_ID_DEPTO,l_id_anho,l_id_mes,l_id_mediopago,l_id_user,P_ID_PERSONA,l_ventas,l_ventas_imp,l_tipo,l_id_tipotransaccion,
                l_id_moneda,l_id_dinamica_dep,l_id_tipotarjeta,null,P_OPERACION,l_fecha,0,P_IMPORTE,0,l_importe_me,l_tipocambio,l_glosa,null,null,l_id_tipoasiento,l_error,l_msgerror
            );

            IF l_error = 0 THEN
                SELECT SUM(IMPORTE) INTO STRICT L_TOTAL FROM TRAMITE_DETALLE WHERE ID_REGISTRO = P_ID_ORIGEN;
                UPDATE TRAMITE_REGISTRO SET ID_VENTA = l_ventas,TOTAL = L_TOTAL, ESTADO = 1 WHERE ID_REGISTRO = P_ID_ORIGEN;


            END IF;
                
--        <<salida_depalumniddni>>
       P_ID:=l_serie_numero;
       P_ERROR:=l_error;
       P_MSGERROR:=l_msgerror;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_payonline_sp_deposito_alumno_visa_acad ( P_ID_PERSONA bigint, P_OPERACION text, P_ID_ENTIDAD bigint, P_ID_DEPTO text, P_IMPORTE bigint, P_IP text, P_ID_DINAMICA bigint, P_COD_TARJETA text, P_ID_ORIGEN text, P_ID_CLIENTE bigint, P_ID_COMPROBANTE text, P_ID_TIPOVENTA bigint, P_ID OUT text, P_ERROR OUT bigint, P_MSGERROR OUT text) FROM PUBLIC;
