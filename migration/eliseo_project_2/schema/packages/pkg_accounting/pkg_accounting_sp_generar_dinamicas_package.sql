-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_accounting,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_accounting_sp_generar_dinamicas ( p_id_entidad bigint, p_id_depto text, p_id_depto_a text, p_id_anho bigint, p_id_modulo bigint, p_id_persona bigint, p_error OUT bigint, p_msn OUT text ) AS $body$
DECLARE


        l_id_anho              bigint;
        l_id_dinamica          bigint;
        l_id_dinamica_new      bigint;
        l_id_tipoigv           varchar(2);
        l_id_tipotransaccion   bigint;
        l_id_parent            bigint;
        l_id_ctabancaria       bigint;
        l_id_almacen           bigint;
        l_nombre               varchar(150);
        l_importe              decimal(10,2);
        l_importe_me           decimal(10,2);
        l_comentario           varchar(100);
        l_ip                   varchar(36);
        l_activo               varchar(1);
        l_id_asiento           bigint;
        l_id_asiento_new       bigint;
        l_id_parent_a          bigint;
        l_id_tipoplan          bigint;
        l_id_restriccion       varchar(50);
        l_id_cuentaaasi        varchar(10);
        l_id_cuentaempresarial varchar(50);
        l_nombre_a             varchar(150);
        l_dc                   varchar(1);
        l_porcentaje           decimal(10,2);
        l_nro_asiento          bigint;
        l_activo_a             varchar(1);
        l_destino              varchar(1);
        l_id_indicador         varchar(35);
        l_unico                varchar(1);
        l_unico_ctacte         varchar(1);
        l_agrupa               varchar(1);
        l_id_fondo             bigint;
        l_primario             varchar(1);
        l_id_ctacte            varchar(50);
        l_id_depto             varchar(10);
        l_error                bigint := 0;
        l_msn                  varchar(200) := 'OK';
        l_cant                 bigint;
        cur_dinamica CURSOR FOR
        SELECT
            id_dinamica,
            id_tipoigv,
            id_tipotransaccion,
            id_parent,
            id_ctabancaria,
            id_almacen,
            nombre,
            importe,
            comentario,
            ip,
            activo,
            importe_me
        FROM
            conta_dinamica
        WHERE
                id_entidad = p_id_entidad
            AND id_depto = p_id_depto
            AND id_anho = p_id_anho
            AND id_modulo = p_id_modulo
        ORDER BY
            id_dinamica;

        cur_asiento CURSOR FOR
        SELECT
            id_asiento,
            id_parent,
            id_tipoplan,
            id_restriccion,
            id_cuentaaasi,
            id_cuentaempresarial,
            nombre,
            dc,
            porcentaje,
            nro_asiento,
            activo,
            destino,
            id_indicador,
            unico,
            unico_ctacte,
            agrupa,
            id_fondo,
            primario
        FROM
            conta_dinamica_asiento
        WHERE
            id_dinamica = l_id_dinamica;

        cur_cta_cte CURSOR FOR
        SELECT
            id_ctacte
        FROM
            conta_dinamica_cta_cte
        WHERE
            id_asiento = l_id_asiento;

        cur_depto CURSOR FOR
        SELECT
            id_depto
        FROM
            conta_dinamica_depto
        WHERE
            id_asiento = l_id_asiento;


BEGIN
        SELECT
            MAX(id_anho) id_anho
        INTO STRICT l_id_anho
        FROM
            conta_entidad_anho_config
        WHERE
            id_entidad = p_id_entidad;

        IF l_id_anho >= p_id_anho THEN
            SELECT
                COUNT(1)
            INTO STRICT l_cant
            FROM
                conta_dinamica
            WHERE
                    id_entidad = p_id_entidad
                AND id_depto = p_id_depto_a
                AND id_anho = l_id_anho
                AND id_modulo = p_id_modulo;

            IF l_cant = 0 THEN
                --1ER FOR - DINAMICA
                OPEN cur_dinamica;
                FETCH cur_dinamica INTO
                    l_id_dinamica,
                    l_id_tipoigv,
                    l_id_tipotransaccion,
                    l_id_parent,
                    l_id_ctabancaria,
                    l_id_almacen,
                    l_nombre,
                    l_importe,
                    l_comentario,
                    l_ip,
                    l_activo,
                    l_importe_me;

                WHILE cur_dinamica%found LOOP
                    INSERT INTO conta_dinamica(
                        id_entidad,
                        id_depto,
                        id_anho,
                        id_modulo,
                        id_tipoigv,
                        id_tipotransaccion,
                        id_persona,
                        id_parent,
                        id_ctabancaria,
                        id_almacen,
                        nombre,
                        importe,
                        fecha,
                        comentario,
                        ip,
                        activo,
                        importe_me
                    ) VALUES (
                        p_id_entidad,
                        p_id_depto_a,
                        l_id_anho,
                        p_id_modulo,
                        l_id_tipoigv,
                        l_id_tipotransaccion,
                        p_id_persona,
                        l_id_parent,
                        l_id_ctabancaria,
                        l_id_almacen,
                        l_nombre,
                        l_importe,
                        clock_timestamp(),
                        l_comentario,
                        l_ip,
                        l_activo,
                        l_importe_me
                    ) RETURNING id_dinamica INTO l_id_dinamica_new;
                            --2DO FOR - DINAMICA_ASIENTO
                    OPEN cur_asiento;
                    FETCH cur_asiento INTO
                        l_id_asiento,
                        l_id_parent_a,
                        l_id_tipoplan,
                        l_id_restriccion,
                        l_id_cuentaaasi,
                        l_id_cuentaempresarial,
                        l_nombre_a,
                        l_dc,
                        l_porcentaje,
                        l_nro_asiento,
                        l_activo_a,
                        l_destino,
                        l_id_indicador,
                        l_unico,
                        l_unico_ctacte,
                        l_agrupa,
                        l_id_fondo,
                        l_primario;

                    WHILE cur_asiento%found LOOP
                        INSERT INTO conta_dinamica_asiento(
                            id_parent,
                            id_dinamica,
                            id_tipoplan,
                            id_restriccion,
                            id_cuentaaasi,
                            id_cuentaempresarial,
                            nombre,
                            dc,
                            porcentaje,
                            nro_asiento,
                            activo,
                            destino,
                            id_indicador,
                            unico,
                            unico_ctacte,
                            agrupa,
                            id_fondo,
                            primario
                        ) VALUES (
                            l_id_parent_a,
                            l_id_dinamica_new,
                            l_id_tipoplan,
                            l_id_restriccion,
                            l_id_cuentaaasi,
                            l_id_cuentaempresarial,
                            l_nombre_a,
                            l_dc,
                            l_porcentaje,
                            l_nro_asiento,
                            l_activo_a,
                            l_destino,
                            l_id_indicador,
                            l_unico,
                            l_unico_ctacte,
                            l_agrupa,
                            l_id_fondo,
                            l_primario
                        ) RETURNING id_asiento INTO l_id_asiento_new;
                                    --INSERTAMOS LAS CTAS CTES DEL ASIENTO
                        OPEN cur_cta_cte;
                        FETCH cur_cta_cte INTO l_id_ctacte;
                        WHILE cur_cta_cte%found LOOP
                            INSERT INTO conta_dinamica_cta_cte(
                                id_asiento,
                                id_entidad,
                                id_ctacte
                            ) VALUES (
                                l_id_asiento_new,
                                p_id_entidad,
                                l_id_ctacte
                            );

                            FETCH cur_cta_cte INTO l_id_ctacte;
                        END LOOP;

                        CLOSE cur_cta_cte;
                                    --INSERTAMOS LOS DEPARTAMENTOS DEL ASIENTO
                        OPEN cur_depto;
                        FETCH cur_depto INTO l_id_depto;
                        WHILE cur_depto%found LOOP
                            INSERT INTO conta_dinamica_depto(
                                id_asiento,
                                id_entidad,
                                id_depto
                            ) VALUES (
                                l_id_asiento_new,
                                p_id_entidad,
                                l_id_depto
                            );

                            FETCH cur_depto INTO l_id_depto;
                        END LOOP;

                        CLOSE cur_depto;
                        FETCH cur_asiento INTO
                            l_id_asiento,
                            l_id_parent_a,
                            l_id_tipoplan,
                            l_id_restriccion,
                            l_id_cuentaaasi,
                            l_id_cuentaempresarial,
                            l_nombre_a,
                            l_dc,
                            l_porcentaje,
                            l_nro_asiento,
                            l_activo_a,
                            l_destino,
                            l_id_indicador,
                            l_unico,
                            l_unico_ctacte,
                            l_agrupa,
                            l_id_fondo,
                            l_primario;

                    END LOOP;

                    CLOSE cur_asiento;
                            --END 2DO FOR
                    FETCH cur_dinamica INTO
                        l_id_dinamica,
                        l_id_tipoigv,
                        l_id_tipotransaccion,
                        l_id_parent,
                        l_id_ctabancaria,
                        l_id_almacen,
                        l_nombre,
                        l_importe,
                        l_comentario,
                        l_ip,
                        l_activo,
                        l_importe_me;

                END LOOP;

                CLOSE cur_dinamica;
                --END PRIMER FOR
            ELSE
                l_error := 1;
                l_msn := 'YA EXISTEN DINAMICAS CREADAS EN EL NUEVO AÑO';
            END IF;

        ELSE
            l_error := 2;
            l_msn := 'NO EXISTE AÑO';
        END IF;

        p_error := l_error;
        p_msn := l_msn;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_accounting_sp_generar_dinamicas ( p_id_entidad bigint, p_id_depto text, p_id_depto_a text, p_id_anho bigint, p_id_modulo bigint, p_id_persona bigint, p_error OUT bigint, p_msn OUT text ) FROM PUBLIC;
