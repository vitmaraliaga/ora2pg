-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_sales_product,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_sales_product_sp_generar_venta (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_ID_SUCURSAL bigint,P_ID_COMPROBANTE text,P_ID_MONEDA bigint,P_ID_CREDITO bigint,P_ID_ALMACEN bigint,P_FECHA_PAGO text DEFAULT NULL,P_ID_VENTA OUT bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE


            L_IGV decimal(10,2);
            L_TC decimal(10,3);
            L_ID_MONEDA_TC bigint;
            L_AUTOMATICO varchar(2);
            L_ID_VOUCHER bigint;
            L_CONTAR bigint;
            L_ID_TIPOTRANSACCION bigint :=5;--ventas de almacen por defecto regustra y configurar solo un asiento por lamacen
            L_ID_SUCURSAL bigint;

            L_ID_VENTA bigint;
            l_id_comprobante_ref varchar(3);
            L_ID_PERSONA_CONTADOR bigint;
            L_ID_TIPOASIENTO varchar(5);
            L_ID_TIPOVOUCHER bigint := 1;
            L_SERIE varchar(5);
            L_CORRELATIVO bigint;
            l_glosa varchar(255);
            l_numero varchar(15);
            L_ID_TIPOVENTA bigint := 6; --VETAS DIVERSAS SERVICIOS ACADEMICOS
            l_total_me bigint:=0;
            l_total bigint:=0;
            L_ERROR bigint;
            L_MSGERROR varchar(100) :='';

BEGIN
                L_ERROR := 0;
                L_ID_MONEDA_TC:=9;

                --obtiene IGV de la fecha actual
                SELECT FC_IGV(CURRENT_DATE ) INTO STRICT L_IGV;

                --obtiene tipo de cambio del dia
                SELECT FC_TIPOCAMBIO(L_ID_MONEDA_TC,CURRENT_DATE,'D' ) INTO STRICT L_TC;

                IF coalesce(L_TC::text, '') = '' THEN
                    L_TC:=0;
                END IF;
                L_ID_SUCURSAL:=P_ID_SUCURSAL;
                IF P_ID_SUCURSAL=0 THEN
                    L_ID_SUCURSAL:=NULL;
                END IF;

                CALL pkg_sales_sp_obtener_serie_numero(P_ID_PERSONA,P_ID_COMPROBANTE,P_ID_ENTIDAD,P_ID_DEPTO, L_ID_COMPROBANTE_REF, L_SERIE,L_CORRELATIVO);

                SELECT ID_PERSONA INTO STRICT L_ID_PERSONA_CONTADOR FROM FIN_CONTADOR_DEPTO WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO;

                SELECT ID_TIPOASIENTO INTO STRICT L_ID_TIPOASIENTO FROM CONTA_VOUCHER_CONFIG
                WHERE ID_ENTIDAD = P_ID_ENTIDAD AND ID_DEPTO = P_ID_DEPTO AND ID_ANHO = P_ID_ANHO AND ID_TIPOVOUCHER = L_ID_TIPOVOUCHER;

                CALL pkg_accounting_sp_crear_voucher(P_ID_ENTIDAD,P_ID_DEPTO,P_ID_ANHO,P_ID_MES,clock_timestamp(),L_ID_TIPOASIENTO,L_ID_TIPOVOUCHER,'','S',L_ID_PERSONA_CONTADOR,L_ID_VOUCHER);

                SELECT COUNT(1) INTO STRICT  L_CONTAR FROM INVENTARIO_ALMACEN WHERE ID_ALMACEN = P_ID_ALMACEN;

                IF L_CONTAR > 0 THEN
                    SELECT NOMBRE INTO STRICT L_GLOSA  FROM INVENTARIO_ALMACEN WHERE ID_ALMACEN = P_ID_ALMACEN;
                END IF;

                SELECT LPAD(L_CORRELATIVO::text,8,'0') INTO STRICT L_NUMERO;

                INSERT INTO VENTA(ID_ENTIDAD,
                                   ID_DEPTO,
                                   ID_ANHO,
                                   ID_MES,
                                   ID_PERSONA,
                                   ID_CLIENTE,
                                   ID_SUCURSAL,
                                   ID_VOUCHER,
                                   ID_COMPROBANTE,
                                   ID_IGV,
                                   ID_MONEDA,
                                   ID_LEYENDA,
                                   ID_CREDITO,
                                   TIPOCAMBIO,
                                   ID_TIPOTRANSACCION,
                                   SERIE,
                                   NUMERO,
                                   FECHA,
                                   GLOSA,
                                   ESTADO,
                                   ID_TIPOVENTA)
                     VALUES (P_ID_ENTIDAD,
                             P_ID_DEPTO,
                             P_ID_ANHO,
                             P_ID_MES,
                             P_ID_PERSONA,
                             P_ID_CLIENTE,
                             L_ID_SUCURSAL,
                             L_ID_VOUCHER,
                             P_ID_COMPROBANTE,
                             L_IGV,
                             P_ID_MONEDA,
                             '1000',
                             P_ID_CREDITO,
                             L_TC,
                             L_ID_TIPOTRANSACCION,
                             L_SERIE,
                             L_NUMERO,
                             clock_timestamp(),
                             'VENTAS '||L_GLOSA,
                             0,
                             L_ID_TIPOVENTA)
                  RETURNING ID_VENTA INTO L_ID_VENTA;

                IF P_ID_COMPROBANTE = '01' THEN
                    IF P_ID_CREDITO = 2 THEN
                        INSERT INTO VENTA_FORMA_PAGO(ID_VENTA,NRO_CUOTA,IMPORTE,IMPORTE_ME,FECHA_PAGO,DETALLE)VALUES (L_ID_VENTA,'CUO001',l_total,l_total_me,to_date(P_FECHA_PAGO,'YYYY/MM/DD'),P_FECHA_PAGO);
                    END IF;
                END IF;


                P_ID_VENTA := L_ID_VENTA;
                P_ERROR := L_ERROR;
                P_MSGERROR := L_MSGERROR;

        EXCEPTION
            WHEN OTHERS THEN
                P_MSGERROR := 'ERROR AL REGISTRAR LA VENTA: '||SQLSTATE||' -ERROR- '||SQLERRM || '-'||P_ID_COMPROBANTE;
                P_ERROR :=1;

    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_sales_product_sp_generar_venta (P_ID_ENTIDAD bigint,P_ID_DEPTO text,P_ID_ANHO bigint,P_ID_MES bigint,P_ID_PERSONA bigint,P_ID_CLIENTE bigint,P_ID_SUCURSAL bigint,P_ID_COMPROBANTE text,P_ID_MONEDA bigint,P_ID_CREDITO bigint,P_ID_ALMACEN bigint,P_FECHA_PAGO text DEFAULT NULL,P_ID_VENTA OUT bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
