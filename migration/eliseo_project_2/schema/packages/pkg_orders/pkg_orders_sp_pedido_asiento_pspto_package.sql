-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_orders,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_orders_sp_pedido_asiento_pspto (P_ID_PEDIDO bigint, P_ID_ACTIVIDAD bigint, P_ERROR OUT bigint,P_MSN_ERROR OUT text) AS $body$
DECLARE

        L_ID_ENTIDAD bigint;
        L_ID_DEPTO varchar(10);
        L_ID_ANHO bigint;
        L_ORIGEN bigint;
        L_DESTINO bigint;
        L_ID_DINAMICA bigint;
        l_id_asiento bigint;
        l_id_parent bigint;
        l_id_tipoplan bigint;
        l_id_restriccion varchar(50);
        l_id_cuentaaasi varchar(10);
        l_dc varchar(1);
        l_id_indicador  varchar(35);
        l_unico varchar(1);
        l_porcentaje decimal(10,2);
        l_unicoctate varchar(1);
        l_unicoctated varchar(1);
        l_depto varchar(10);
        l_cuenta_cte varchar(50);
        l_id_fondo bigint;
        l_descripcion varchar(255);
        l_agrupa varchar(1);
        l_ctas varchar(200);
        l_ctates varchar(200);
        l_cont bigint;
        l_actas tablastring;
        l_actates tablastring;
        l_buscar bigint;
        l_importe decimal(10,2);
        L_ID_SEDEAREA bigint;
        L_ID_AREA varchar(10);
        L_ID_ACTIVIDAD bigint;
        L_CANT bigint;

        DETA CURSOR FOR
        SELECT 
        ID_TIPOPLAN,ID_CUENTAAASI,ID_RESTRICCION,10 as ID_FONDO,ID_CTACTE,ID_DEPTO_ASIENTO,'D' AS DC,100 as PORCENTAJE,0 as IMPORTE,DESCRIPCION AS DETALLE,'IMPORTE' AS INDICADOR
        FROM PSTO_PRESUPUESTO_DET
        WHERE ID_DEPTO = L_ID_AREA
        AND ID_ACTIVIDAD = L_ID_ACTIVIDAD;

        casi CURSOR FOR		
        SELECT 
                a.ID_ASIENTO,a.ID_PARENT,a.ID_TIPOPLAN,a.ID_RESTRICCION,a.ID_CUENTAAASI,a.DC,a.ID_INDICADOR,a.UNICO,a.UNICO_CTACTE,round((a.PORCENTAJE*100)::numeric,2),a.NOMBRE,a.AGRUPA,a.ID_FONDO
        FROM CONTA_DINAMICA_ASIENTO a,CONTA_DINAMICA d
        WHERE a.ID_DINAMICA=d.ID_DINAMICA 
        AND a.ID_DINAMICA =L_ID_DINAMICA 
        ORDER BY a.NRO_ASIENTO,a.DC desc;

        
BEGIN 
            P_ERROR:=0;
            P_MSN_ERROR:='ok';
            SELECT
                    ID_AREAORIGEN,ID_ACTIVIDAD INTO STRICT L_ID_SEDEAREA,L_ID_ACTIVIDAD
            FROM PEDIDO_REGISTRO
            WHERE ID_PEDIDO = P_ID_PEDIDO;

            IF L_ID_ACTIVIDAD <> P_ID_ACTIVIDAD THEN
                UPDATE PEDIDO_REGISTRO SET ID_ACTIVIDAD = P_ID_ACTIVIDAD
                WHERE ID_PEDIDO = P_ID_PEDIDO;
                L_ID_ACTIVIDAD := P_ID_ACTIVIDAD;
            END IF;

            SELECT ID_DEPTO INTO STRICT L_ID_AREA
            FROM ORG_SEDE_AREA
            WHERE ID_SEDEAREA = L_ID_SEDEAREA;

            OPEN DETA;
                FETCH DETA INTO l_id_tipoplan,l_id_cuentaaasi,l_id_restriccion,l_id_fondo,l_cuenta_cte,l_depto,l_dc,l_porcentaje,l_importe,l_descripcion,l_id_indicador;
                WHILE DETA%FOUND LOOP

                     INSERT INTO PEDIDO_ASIENTO(ID_PASIENTO,ID_PEDIDO,ID_TIPOPLAN,ID_CUENTAAASI,ID_RESTRICCION,ID_FONDO,ID_CTACTE,ID_DEPTO,DC,PORCENTAJE,IMPORTE,GLOSA,INDICADOR) 
                    VALUES (nextval('eliseo.sq_pedido_asiento_id'),P_ID_PEDIDO,l_id_tipoplan,l_id_cuentaaasi,l_id_restriccion,l_id_fondo,l_cuenta_cte,l_depto,l_dc,l_porcentaje,l_importe,l_descripcion,l_id_indicador);

                FETCH DETA INTO l_id_tipoplan,l_id_cuentaaasi,l_id_restriccion,l_id_fondo,l_cuenta_cte,l_depto,l_dc,l_porcentaje,l_importe,l_descripcion,l_id_indicador;
                END LOOP;
            CLOSE DETA;

            SELECT A.ID_ENTIDAD, A.ID_DEPTO,A.ID_ANHO,
            (SELECT X.ID_DEPTO FROM ORG_SEDE_AREA X WHERE X.ID_ENTIDAD = A.ID_ENTIDAD AND X.ID_SEDEAREA = coalesce(A.ID_AREAGASTO,A.ID_AREAORIGEN) ) ORIGEN,
            (SELECT X.ID_DEPTO FROM ORG_SEDE_AREA X WHERE X.ID_ENTIDAD = A.ID_ENTIDAD AND X.ID_SEDEAREA = ID_AREADESTINO) DESTINO
            INTO STRICT L_ID_ENTIDAD,L_ID_DEPTO,L_ID_ANHO,L_ORIGEN,L_DESTINO 
            FROM PEDIDO_REGISTRO A 
            WHERE A.ID_PEDIDO = P_ID_PEDIDO;

            SELECT 
            COUNT(*) INTO STRICT L_CANT
            FROM CONTA_DINAMICA
            WHERE ID_ENTIDAD = L_ID_ENTIDAD
            AND ID_DEPTO = L_ID_DEPTO
            AND ID_ANHO = L_ID_ANHO
            AND ID_MODULO = 11
            AND ACTIVO = 'S'
            AND UPPER(NOMBRE) = UPPER('PROVEEDORES');
            IF L_CANT = 1 THEN
                P_ERROR:=0;
                P_MSN_ERROR:='ok';
            ELSE
                P_ERROR:=1;
                P_MSN_ERROR:='No Existe Asiento CREDITO (C)';
            END IF;
            IF P_ERROR = 0 THEN
                SELECT
                ID_DINAMICA INTO STRICT L_ID_DINAMICA
                FROM CONTA_DINAMICA
                WHERE ID_ENTIDAD = L_ID_ENTIDAD
                AND ID_DEPTO = L_ID_DEPTO
                AND ID_ANHO = L_ID_ANHO
                AND ID_MODULO = 11
                AND ACTIVO = 'S'
                AND UPPER(NOMBRE) = UPPER('PROVEEDORES');

                SELECT COUNT(*) INTO STRICT L_CANT 
                FROM PEDIDO_COMPRA
                WHERE ID_PEDIDO = P_ID_PEDIDO;
                IF L_CANT > 0 THEN
                    SELECT IMPORTE*-1 INTO STRICT l_importe 
                    FROM PEDIDO_COMPRA
                    WHERE ID_PEDIDO = P_ID_PEDIDO;
                END IF;
                OPEN casi;
                    FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa,l_id_fondo;
                    WHILE casi%FOUND LOOP
                        l_depto:=null;
                        l_cuenta_cte:=null;

                        if l_unico='U' then
                          select ID_DEPTO into STRICT l_depto from CONTA_DINAMICA_DEPTO where id_entidad=l_id_entidad and id_asiento=l_id_asiento;
                        elsif (l_unico='X') then
                            IF l_dc = 'C' THEN
                                l_depto := L_DESTINO;
                            ELSE
                                l_depto := L_ORIGEN;
                            END IF;
                        end if;

                        if l_unicoctate='U' then
                            SELECT  count(*) into STRICT l_cont FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad = L_ID_ENTIDAD AND id_asiento = l_id_asiento;
                            if l_cont>0 then
                                SELECT ID_CTACTE into STRICT l_cuenta_cte FROM CONTA_DINAMICA_CTA_CTE WHERE id_entidad = L_ID_ENTIDAD AND id_asiento = l_id_asiento;
                            end if;
                        elsif (l_unicoctated='M') then
                            SELECT position('|' in l_ctates) into STRICT l_buscar;
                            if l_buscar>0 then
                                select FC_SPLIT(l_ctas,'|') into STRICT l_actas;
                                select FC_SPLIT(l_ctates,'|') into STRICT l_actates;
                                select FC_OBTENER_DPTOCTCTE(l_actas,l_actates ,l_id_cuentaaasi) into STRICT l_cuenta_cte;
                            else
                                l_cuenta_cte:=l_ctates;
                            end if;
                        end if;

                        INSERT INTO PEDIDO_ASIENTO(ID_PASIENTO,ID_PEDIDO,ID_TIPOPLAN,ID_CUENTAAASI,ID_RESTRICCION,ID_FONDO,ID_CTACTE,ID_DEPTO,DC,PORCENTAJE,IMPORTE,GLOSA,INDICADOR) 
                        VALUES (nextval('eliseo.sq_pedido_asiento_id'),P_ID_PEDIDO,l_id_tipoplan,l_id_cuentaaasi,l_id_restriccion,l_id_fondo,l_cuenta_cte,l_depto,l_dc,l_porcentaje,l_importe,l_descripcion,l_id_indicador);

                        FETCH casi INTO l_id_asiento,l_id_parent,l_id_tipoplan,l_id_restriccion,l_id_cuentaaasi,l_dc,l_id_indicador,l_unico,l_unicoctate,l_porcentaje,l_descripcion,l_agrupa,l_id_fondo;

                    END LOOP;
                CLOSE casi;
            END IF;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_orders_sp_pedido_asiento_pspto (P_ID_PEDIDO bigint, P_ID_ACTIVIDAD bigint, P_ERROR OUT bigint,P_MSN_ERROR OUT text) FROM PUBLIC;
