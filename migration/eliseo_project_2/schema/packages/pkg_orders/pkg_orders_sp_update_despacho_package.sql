-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_orders,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_orders_sp_update_despacho (P_ID_DESPACHO bigint,P_PRECIO bigint,P_ERROR OUT bigint,P_NERROR OUT text) AS $body$
DECLARE

        L_ID_DETALLE bigint;
        L_ID_ANHO bigint;
        L_ES_SERVICES varchar(1);
        L_ID_ALMACEN bigint;
        L_ID_ARTICULO bigint;
        L_CANTIDAD bigint;
        L_STOCK decimal(10,2);
        L_STOCK_T decimal(10,2);
        L_COSTO decimal(10,2);
        L_MSN varchar(200):='';
        L_MSN_ERROR varchar(200):='';
        L_CODIGO varchar(20):='70';
        L_ID_DESPACHO bigint;
        CANT_SOLICITADA decimal(10,2);
        CANT_ENTREGADA decimal(10,2);
        L_ID_ENTIDAD bigint;


BEGIN
            SELECT 
                    ID_DETALLE,ID_ALMACEN,ID_ARTICULO,CANTIDAD INTO STRICT L_ID_DETALLE,L_ID_ALMACEN, L_ID_ARTICULO,L_CANTIDAD
            FROM PEDIDO_DESPACHO
            WHERE ID_DESPACHO = P_ID_DESPACHO;

            IF P_PRECIO > 0 THEN
                P_ERROR := 0;
                L_MSN_ERROR := 'OK';
            ELSE
                P_ERROR := 1;
                L_MSN_ERROR := 'ERROR: El Precio debe ser mayor a 0';
            END IF;
            IF P_ERROR = 0 THEN
                SELECT A.ID_ENTIDAD INTO STRICT L_ID_ENTIDAD
                FROM PEDIDO_REGISTRO A, PEDIDO_DETALLE B
                WHERE A.ID_PEDIDO = B.ID_PEDIDO
                AND B.ID_DETALLE = L_ID_DETALLE
                GROUP BY A.ID_ENTIDAD;

                SELECT
                        MAX(ID_ANHO) ID_ANHO INTO STRICT L_ID_ANHO
                FROM CONTA_ENTIDAD_ANHO_CONFIG
                WHERE ID_ENTIDAD = L_ID_ENTIDAD
                AND ACTIVO = '1';

                CALL pkg_inventories_sp_inventories_is_service(L_ID_ALMACEN,L_ID_ARTICULO,L_ID_ANHO,0,L_CODIGO,L_ES_SERVICES);
                IF L_ES_SERVICES = 'S' THEN  --ES SERVICIO
                    P_ERROR := 0;
                    L_MSN_ERROR := 'OK';
                ELSE  --PRODUCTOS NECESITA VALIDAR STOCK
                    CALL pkg_inventories_sp_articulo_stock(L_ID_ALMACEN,L_ID_ARTICULO,L_ID_ANHO,L_STOCK,L_COSTO,L_MSN);
                    CALL pkg_inventories_sp_articulo_stock_temp(L_ID_ALMACEN,L_ID_ARTICULO,L_ID_ANHO,L_STOCK_T,L_MSN);
                    IF L_STOCK > 0 THEN
                        IF (L_STOCK-L_STOCK_T) >= L_CANTIDAD THEN
                            P_ERROR := 0;
                            L_MSN_ERROR := 'Cantidad Mayor que el Stock: '||L_STOCK;
                        ELSE
                            P_ERROR := 1;
                            L_MSN_ERROR := 'Stock Insuficiente: '||L_STOCK;
                        END IF;
                    ELSE
                        P_ERROR := 1;
                        L_MSN_ERROR := 'Stock Insuficiente: '||L_STOCK;
                    END IF;
                END IF;
            END IF;
            IF P_ERROR = 0 THEN
                UPDATE PEDIDO_DESPACHO SET PRECIO = P_PRECIO, IMPORTE = round((CANTIDAD*P_PRECIO)::numeric,2)
                WHERE ID_DESPACHO = P_ID_DESPACHO;
            END IF;
            P_ERROR := P_ERROR;
            P_NERROR := L_MSN_ERROR;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_orders_sp_update_despacho (P_ID_DESPACHO bigint,P_PRECIO bigint,P_ERROR OUT bigint,P_NERROR OUT text) FROM PUBLIC;
