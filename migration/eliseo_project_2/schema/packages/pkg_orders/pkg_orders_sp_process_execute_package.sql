-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';
SET search_path = eliseo,pkg_orders,public;




CREATE OR REPLACE PROCEDURE eliseo.pkg_orders_sp_process_execute (P_ID_PROCESO bigint,P_ID_TASK bigint,P_CODIGO_PASO text, P_ID_ORIGEN bigint,P_ID_PERSONA bigint,P_PASO_INICIAL text, P_ID_EXECUTE OUT bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) AS $body$
DECLARE

        L_ID_TIPOORIGEN bigint := 13;
        L_ID_PASO_ACTUAL bigint;
        L_ID_PASO_NEXT bigint;
        L_ID_DEXEC bigint;
        L_DETALLE varchar(100);
        L_ESTADO varchar(1) := '1';
        L_ERROR bigint;
        L_MSGERROR varchar(200);
        L_CANT bigint;

        
BEGIN
            IF P_PASO_INICIAL = 'S' THEN
                    
                SELECT COUNT(1) INTO STRICT L_CANT FROM LAMB_PROCESS_EXECUTE WHERE ID_TIPOORIGEN = L_ID_TIPOORIGEN AND ID_ORIGEN = P_ID_ORIGEN;

                IF L_CANT = 0 THEN
            
                    --PASO 1
                    SELECT D.ID_PASO,ID_PASO_NEXT,D.NOMBRE INTO STRICT L_ID_PASO_ACTUAL,L_ID_PASO_NEXT,L_DETALLE
                    FROM LAMB_PROCESS A JOIN LAMB_PROCESS_TASK B ON A.ID_PROCESO = B.ID_PROCESO
                    JOIN LAMB_PROCESS_FLUJO C ON B.ID_TASK = C.ID_TASK
                    JOIN LAMB_PROCESS_PASO D ON C.ID_PASO = D.ID_PASO
                    WHERE A.ID_PROCESO = P_ID_PROCESO
                    AND B.ID_TASK = P_ID_TASK
                    AND D.CODIGO = P_CODIGO_PASO
                    ORDER BY C.ORDEN;
                    --INSERTA EL PROCESO
                    INSERT INTO LAMB_PROCESS_EXECUTE(ID_PROCESO,ID_TIPOORIGEN,ID_ORIGEN,ID_PASO_ACTUAL,ID_TASK,DETALLE,FECHA,ESTADO)VALUES (P_ID_PROCESO,L_ID_TIPOORIGEN,P_ID_ORIGEN,L_ID_PASO_ACTUAL,P_ID_TASK,L_DETALLE,clock_timestamp(),L_ESTADO) RETURNING ID_EXECUTE INTO P_ID_EXECUTE;

                    CALL pkg_orders_sp_process_execute_paso(P_ID_EXECUTE,P_ID_PERSONA,L_ID_PASO_ACTUAL,L_ID_PASO_NEXT,L_DETALLE,clock_timestamp(),L_ESTADO,L_ID_DEXEC,L_ERROR,L_MSGERROR);

                    --ACTUALIZA EL NRO DE PDIDO
                    CALL pkg_orders_sp_orders_numbers(P_ID_ORIGEN);

                    UPDATE PEDIDO_REGISTRO SET ID_DEXEC = L_ID_DEXEC, ID_TASK = P_ID_TASK WHERE ID_PEDIDO = P_ID_ORIGEN;

                    P_ERROR := L_ERROR;
                    P_MSGERROR := L_MSGERROR;
                ELSE
                    P_ERROR := 1;
                    P_MSGERROR := 'ERROR: YA SE REGISTRO UN PROCESO';
                END IF;
            ELSE
                SELECT ID_DEXEC INTO STRICT L_ID_DEXEC FROM PEDIDO_REGISTRO WHERE ID_PEDIDO = P_ID_ORIGEN;

                SELECT ID_EXECUTE, ID_PASO_NEXT INTO STRICT P_ID_EXECUTE, L_ID_PASO_ACTUAL FROM LAMB_PROCESS_EXEC_PASO WHERE ID_DEXEC = L_ID_DEXEC;

                SELECT C.ID_PASO_NEXT,D.NOMBRE INTO STRICT L_ID_PASO_NEXT,L_DETALLE
                FROM LAMB_PROCESS A JOIN LAMB_PROCESS_TASK B ON A.ID_PROCESO = B.ID_PROCESO
                JOIN LAMB_PROCESS_FLUJO C ON B.ID_TASK = C.ID_TASK
                JOIN LAMB_PROCESS_PASO D ON C.ID_PASO = D.ID_PASO
                WHERE B.ID_TASK = P_ID_TASK
                AND D.ID_PASO = L_ID_PASO_ACTUAL
                ORDER BY C.ORDEN;

                CALL pkg_orders_sp_process_execute_paso(P_ID_EXECUTE,P_ID_PERSONA,L_ID_PASO_ACTUAL,L_ID_PASO_NEXT,L_DETALLE,clock_timestamp(),L_ESTADO,L_ID_DEXEC,L_ERROR,L_MSGERROR);

                UPDATE LAMB_PROCESS_EXECUTE SET ID_PASO_ACTUAL = L_ID_PASO_ACTUAL WHERE ID_EXECUTE = P_ID_EXECUTE;

                UPDATE PEDIDO_REGISTRO SET ID_DEXEC = L_ID_DEXEC WHERE ID_PEDIDO = P_ID_ORIGEN;
            END IF;
            P_ERROR := L_ERROR;
            P_MSGERROR := L_MSGERROR||'XXX'||P_ID_EXECUTE||'*'||P_ID_PERSONA||'*'||L_ID_PASO_ACTUAL||'*'||L_ID_PASO_NEXT||'*'||L_DETALLE||'*'||L_ESTADO;
        EXCEPTION
            WHEN OTHERS THEN
                P_ERROR := 1;
                P_MSGERROR := 'ERROR AL REGISTRAR EL PROCESO'||SQLSTATE||' -ERROR- '||SQLERRM||'XXX'||P_ID_EXECUTE||'*'||P_ID_PERSONA||'*'||L_ID_PASO_ACTUAL||'*'||L_ID_PASO_NEXT||'*'||L_DETALLE||'*'||L_ESTADO;
    END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.pkg_orders_sp_process_execute (P_ID_PROCESO bigint,P_ID_TASK bigint,P_CODIGO_PASO text, P_ID_ORIGEN bigint,P_ID_PERSONA bigint,P_PASO_INICIAL text, P_ID_EXECUTE OUT bigint,P_ERROR OUT bigint,P_MSGERROR OUT text) FROM PUBLIC;
