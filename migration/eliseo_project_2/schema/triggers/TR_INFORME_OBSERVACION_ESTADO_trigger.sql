-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON

DROP TRIGGER IF EXISTS tr_informe_observacion_estado ON informe_observacion CASCADE;
CREATE OR REPLACE FUNCTION eliseo.trigger_fct_tr_informe_observacion_estado() RETURNS trigger AS $BODY$
DECLARE
P_ORIGEN varchar(50);
P_ID_INFORME bigint;
BEGIN
	P_ORIGEN:=NEW.ORIGEN;
	IF P_ORIGEN ='informe_ayuda' THEN
		SELECT ID_INFORME INTO STRICT P_ID_INFORME FROM ELISEO.INFORME_AYUDA WHERE ID_IAYUDA =NEW.ID_ORIGEN;
		--SELECT DECODE(ESTADO_ACTUAL,'R', 'V', 'V', 'A', 'A') INTO :NEW.ESTADO FROM ELISEO.INFORME WHERE ID_INFORME =P_ID_INFORME;
		SELECT CASE WHEN ESTADO_ACTUAL='R' THEN  'V' WHEN ESTADO_ACTUAL='V' THEN  'A'  ELSE 'A' END  INTO STRICT NEW.ESTADO FROM ELISEO.INFORME WHERE ID_INFORME =P_ID_INFORME;
	ELSE
		IF P_ORIGEN ='informe_gasto' THEN
			SELECT ID_INFORME INTO STRICT P_ID_INFORME FROM ELISEO.INFORME_GASTO WHERE ID_IGASTO =NEW.ID_ORIGEN;
			SELECT CASE WHEN ESTADO_ACTUAL='R' THEN  'V' WHEN ESTADO_ACTUAL='V' THEN  'A'  ELSE 'A' END  INTO STRICT NEW.ESTADO FROM ELISEO.INFORME WHERE ID_INFORME =P_ID_INFORME;
		ELSIF P_ORIGEN ='compra' THEN
			SELECT ID_INFORME INTO STRICT P_ID_INFORME FROM ELISEO.COMPRA WHERE ID_COMPRA = NEW.ID_ORIGEN;
			SELECT CASE WHEN ESTADO_ACTUAL='R' THEN  'V' WHEN ESTADO_ACTUAL='V' THEN  'A'  ELSE 'A' END  INTO STRICT NEW.ESTADO FROM ELISEO.INFORME WHERE ID_INFORME =P_ID_INFORME;
		END IF;
	END IF;
RETURN NEW;
END
$BODY$
 LANGUAGE 'plpgsql' SECURITY DEFINER;
-- REVOKE ALL ON FUNCTION eliseo.trigger_fct_tr_informe_observacion_estado() FROM PUBLIC;

DROP TRIGGER IF EXISTS tr_informe_observacion_estado ON informe_observacion;
CREATE TRIGGER tr_informe_observacion_estado
	BEFORE INSERT ON informe_observacion FOR EACH ROW
	EXECUTE PROCEDURE eliseo.trigger_fct_tr_informe_observacion_estado();

