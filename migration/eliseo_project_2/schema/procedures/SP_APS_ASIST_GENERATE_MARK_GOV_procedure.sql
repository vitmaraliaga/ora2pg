-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.sp_aps_asist_generate_mark_gov ( v_id_entidad bigint, v_year bigint, v_month bigint ) AS $body$
DECLARE

  v_HORARIOENTRADA              timestamp(0);
  v_HORARIOSALIDA               timestamp(0);
  v_INICIOREFRIGERIO            timestamp(0);
  v_FINREFRIGERIO               timestamp(0);
  v_HORARIOSALIDA_VIERNES       timestamp(0);
  v_INT_HORARIOENTRADA          bigint;
  v_INT_HORARIOSALIDA           bigint;
  v_INT_INICIOREFRIGERIO        bigint;
  v_INT_FINREFRIGERIO           bigint;
  v_INT_HORARIOSALIDA_VIERNES   bigint;
  v_INT_TIEMPO_TOLERANCIA       bigint;
  v_INT_TIEMPO_TOLERANCIA_ANTES bigint;
  v_id                          bigint;
  v_id_min                      bigint;
  v_id_max                      bigint;
  v_fecha                       timestamp(0);
  v_fecha_dia                   bigint;
  v_tiene_registros             bigint;

BEGIN
  SELECT utils.datediff('SECOND', to_date('1901-01-01','yyyy-mm-dd'), HORARIOENTRADA) ,
    utils.datediff('SECOND', to_date('1901-01-01','yyyy-mm-dd'), INICIOREFRIGERIO) ,
    utils.datediff('SECOND', to_date('1901-01-01','yyyy-mm-dd'), FINREFRIGERIO) ,
    utils.datediff('SECOND', to_date('1901-01-01','yyyy-mm-dd'), HORARIOSALIDA) ,
    utils.datediff('SECOND', to_date('1901-01-01','yyyy-mm-dd'), HORARIOSALIDAVIERNES)
  INTO STRICT v_INT_HORARIOENTRADA,
    v_INT_INICIOREFRIGERIO,
    v_INT_FINREFRIGERIO,
    v_INT_HORARIOSALIDA,
    v_INT_HORARIOSALIDA_VIERNES
  FROM APS_ASIST_HORARIO_ENTIDAD
  WHERE ID_ENTIDAD               = v_id_entidad
  AND TIPO                       = 1;

  v_INT_TIEMPO_TOLERANCIA       := utils.datediff('SECOND', to_date('00:00:00','hh24:mi:ss'), to_date('00:30:00','hh24:mi:ss'));
  v_INT_TIEMPO_TOLERANCIA_ANTES := utils.datediff('SECOND', to_date('00:00:00','hh24:mi:ss'), to_date('00:15:00','hh24:mi:ss'));

  -- VACIANDO LA TABLA
  DELETE FROM APS_ASIST_MINTRAB
  WHERE ID_ENTIDAD                   = v_id_entidad
  AND utils.datepart('YEAR', fecha)  = v_year
  AND utils.datepart('MONTH', fecha) = v_month;
  DELETE FROM tt_dias_lab;
  CALL UTILS.IDENTITY_RESET('tt_dias_lab');
  INSERT
  INTO tt_dias_lab(SELECT utils.identity('tt_dias_lab', 1, 1) ,
        fecha
      FROM APS_ASIST_HORARIO_LABORAL_DIAS
      WHERE utils.datepart('YEAR', fecha) = v_year
      AND utils.datepart('MONTH', fecha)  = v_month
      AND fecha NOT                      IN ( SELECT fecha FROM APS_ASIST_NO_LABORAL WHERE id_entidad = v_id_entidad
        )
    );
  SELECT MIN(id) , MAX(id) INTO STRICT v_id_min, v_id_max FROM tt_dias_lab;
  WHILE v_id_min <= v_id_max
  LOOP
    BEGIN
      RAISE NOTICE 'v_id_min';
      RAISE NOTICE '%', v_id_min;

      SELECT fecha ,
        utils.datepart('WEEKDAY', fecha)
      INTO STRICT v_fecha,
        v_fecha_dia
      FROM tt_dias_lab
      WHERE id = v_id_min;
      INSERT
      INTO APS_ASIST_MINTRAB(
          ID_PERSONA,
          ID_ENTIDAD,
          FECHA,
          HORARIOENTRADA,
          INICIOREFRIGERIO,
          FINREFRIGERIO,
          HORARIOSALIDA,
          OBSERVACIONES
        )
        (SELECT ID_PERSONA ,
            v_id_entidad ,
            v_fecha ,
            CASE tipo
              WHEN 'PC'
              THEN NULL
              ELSE v_fecha + FLOOR(utils.rand(NULL) * (v_INT_TIEMPO_TOLERANCIA) + v_INT_HORARIOENTRADA - v_INT_TIEMPO_TOLERANCIA_ANTES)/86400
            END HORARIOENTRADA ,
            CASE tipo
              WHEN 'PC'
              THEN NULL
              ELSE
                CASE v_fecha_dia
                  WHEN 5
                  THEN NULL
                  ELSE v_fecha + FLOOR(utils.rand(NULL) * (v_INT_TIEMPO_TOLERANCIA) + v_INT_INICIOREFRIGERIO - v_INT_TIEMPO_TOLERANCIA_ANTES)/86400
                END
            END INICIOREFRIGERIO ,
            CASE tipo
              WHEN 'PC'
              THEN NULL
              ELSE
                CASE v_fecha_dia
                  WHEN 5
                  THEN NULL
                  ELSE v_fecha + FLOOR(utils.rand(NULL) * (v_INT_TIEMPO_TOLERANCIA) + v_INT_FINREFRIGERIO - v_INT_TIEMPO_TOLERANCIA_ANTES)/86400
                END
            END FINREFRIGERIO ,
            CASE tipo
              WHEN 'PC'
              THEN NULL
              ELSE
                CASE v_fecha_dia
                  WHEN 5
                  THEN v_fecha + FLOOR(utils.rand(NULL) * (v_INT_TIEMPO_TOLERANCIA) + v_INT_HORARIOSALIDA_VIERNES)/86400
                  ELSE v_fecha + FLOOR(utils.rand(NULL) * (v_INT_TIEMPO_TOLERANCIA) + v_INT_HORARIOSALIDA)/86400
                END
            END HORARIOSALIDA ,
            tipo
          FROM APS_ASIST_PERIODO_LABORAL
          WHERE id_entidad = v_id_entidad
          AND ID_PERSONA <> 14326
          AND v_fecha BETWEEN FECHA_INICIO AND COALESCE(FECHA_FIN, clock_timestamp())
          AND v_fecha <= clock_timestamp()
        );
      UPDATE APS_ASIST_MINTRAB
      SET HORARIOENTRADA  = NULL,
        INICIOREFRIGERIO  = NULL,
        FINREFRIGERIO     = NULL,
        HORARIOSALIDA     = NULL,
        OBSERVACIONES    = 'VACACIONES'
      WHERE FECHA        = v_fecha
      AND ID_ENTIDAD     = v_id_entidad
      AND ID_PERSONA   IN (SELECT ID_PERSONA
        FROM APS_ASIST_VACACIONES B
        WHERE B.ID_ENTIDAD = v_id_entidad
        AND v_fecha BETWEEN B.FECHA_INICIO AND B.FECHA_FIN
        );
      SELECT MIN(id) INTO STRICT v_id_min FROM tt_dias_lab WHERE id > v_id_min;
    END;
  END LOOP;
EXCEPTION
WHEN OTHERS THEN
  CALL utils.handleerror(SQLSTATE,SQLERRM);
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.sp_aps_asist_generate_mark_gov ( v_id_entidad bigint, v_year bigint, v_month bigint ) FROM PUBLIC;

