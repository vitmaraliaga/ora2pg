-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.iudp_activo_movimiento (P_Modo integer, P_ID_ENTIDAD integer, P_COD_ACTIVO text, P_ID_TIPOACTIVOMOVIMIENTO integer, P_FECHA text, P_VALOR text, P_ES_CONTABILIZADO boolean,P_NUM_LOTE text ) AS $body$
DECLARE

	S_COD_ACTIVO          varchar(60);
	S_NUM_LOTE            varchar(60);
	S_VALOR               NUMERIC(10,2);
	S_FECHA               timestamp(0);	
	S_CANTIDAD            integer;	
	S_ID_ACTIVO           integer;
	S_FEC_COMPRA          timestamp(0);	
	S_CANT                integer;
  S_ES_CONTABILIZADO    integer;

 
BEGIN
	 
    IF P_Modo = 0 THEN

        S_COD_ACTIVO := CASE WHEN P_COD_ACTIVO IN ('@Code@') THEN '' ELSE P_COD_ACTIVO END;
        S_NUM_LOTE := CASE WHEN P_NUM_LOTE IN ('@JournalNumber@') THEN '' ELSE P_NUM_LOTE END;
        S_VALOR := CASE WHEN P_VALOR IN ('@Value@') THEN null ELSE to_number(P_VALOR,'9999999999999999.99999') END;
        S_FECHA := to_date(P_FECHA,'ddmmyyyy');
        if not coalesce(P_ES_CONTABILIZADO::text, '') = ''
        then 
          if P_ES_CONTABILIZADO then 
            S_ES_CONTABILIZADO := 1;
          else
            S_ES_CONTABILIZADO := 0;
          end if;
        else
          S_ES_CONTABILIZADO := -1;
        end if;

        SELECT COUNT(*) INTO STRICT S_CANTIDAD 
        FROM CONTA_ACTIVO 
        WHERE ID_ENTIDAD = P_ID_ENTIDAD
        AND COD_ACTIVO = P_COD_ACTIVO;
        
        IF S_CANTIDAD > 0 THEN
        
            SELECT ID_ACTIVO, FEC_COMPRA INTO STRICT S_ID_ACTIVO,S_FEC_COMPRA
            FROM CONTA_ACTIVO 
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND COD_ACTIVO = P_COD_ACTIVO;

            SELECT COUNT(ID_ACTIVO) INTO STRICT S_CANT 
            FROM CONTA_ACTIVO_MOVIMIENTO
            WHERE ID_ENTIDAD = P_ID_ENTIDAD
            AND ID_ACTIVO = S_ID_ACTIVO
            AND ID_TIPOACTIVOMOVIMIENTO = P_ID_TIPOACTIVOMOVIMIENTO
            AND FEC_MOVIMIENTO = S_FECHA;
            
            IF S_CANT = 0 THEN
                INSERT INTO CONTA_ACTIVO_MOVIMIENTO(ID_ENTIDAD, ID_ACTIVO, ID_TIPOACTIVOMOVIMIENTO, FEC_MOVIMIENTO, ES_CONTABILIZADO, NUM_LOTE, COS_VALOR)
                VALUES (P_ID_ENTIDAD, S_ID_ACTIVO, P_ID_TIPOACTIVOMOVIMIENTO, S_FECHA, S_ES_CONTABILIZADO, S_NUM_LOTE, S_VALOR);
            ELSE
                UPDATE CONTA_ACTIVO_MOVIMIENTO SET
                    --ID_TIPOACTIVOMOVIMIENTO = P_ID_TIPOACTIVOMOVIMIENTO,
                    ES_CONTABILIZADO        = S_ES_CONTABILIZADO,
                    --FEC_MOVIMIENTO          = S_FECHA,
                    COS_VALOR               = S_VALOR,
                    NUM_LOTE                = S_NUM_LOTE
                WHERE ID_ENTIDAD = P_ID_ENTIDAD
                AND ID_ACTIVO = S_ID_ACTIVO
                AND ID_TIPOACTIVOMOVIMIENTO = P_ID_TIPOACTIVOMOVIMIENTO
                AND FEC_MOVIMIENTO = S_FECHA;
            END IF;
        END IF;
    END IF;
 END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.iudp_activo_movimiento (P_Modo integer, P_ID_ENTIDAD integer, P_COD_ACTIVO text, P_ID_TIPOACTIVOMOVIMIENTO integer, P_FECHA text, P_VALOR text, P_ES_CONTABILIZADO boolean,P_NUM_LOTE text ) FROM PUBLIC;

