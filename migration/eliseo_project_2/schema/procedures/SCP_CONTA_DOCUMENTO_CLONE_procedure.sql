-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.scp_conta_documento_clone ( v_ID_ENTIDAD_FROM bigint, v_ID_DEPTO_FROM text, v_ID_ENTIDAD_TO bigint, v_ID_DEPTO_TO text, v_ERROR OUT bigint, v_MSGERROR OUT text ) AS $body$
DECLARE

    L_ERROR bigint :=0;
    L_MSGERROR varchar(100) :='';
    L_ID_DOCUMENTO bigint;

	
	v_documento_det_cursor REFCURSOR;
	d_documento_det_record      CONTA_DOCUMENTO_DETALLE%ROWTYPE;
	v_documento_det_stmt_str      varchar(200);

    C_DOCUMENTO CURSOR FOR
	SELECT * FROM eliseo.CONTA_DOCUMENTO
	WHERE ID_ENTIDAD = v_ID_ENTIDAD_FROM
    AND ID_DEPTO = v_ID_DEPTO_FROM;

BEGIN

    IF L_ERROR = 0 THEN


        FOR rec_1 in C_DOCUMENTO
        LOOP
                RAISE NOTICE 'ID_COMPROBANTE: %', rec_1.ID_COMPROBANTE;
                RAISE NOTICE 'ID_ENTIDAD_TO: %', v_ID_ENTIDAD_TO;
                RAISE NOTICE 'ID_DEPTO_TO: %', v_ID_DEPTO_TO;

                INSERT INTO ELISEO.CONTA_DOCUMENTO(
                --ID_DOCUMENTO, 
                ID_COMPROBANTE, ID_ENTIDAD, ID_DEPTO, NOMBRE, PUERTO, NUMLINE, NUMCOL,
                SERIE, CONTADOR, ACTIVO
                --, DOCID
                )
                VALUES (
                rec_1.ID_COMPROBANTE, v_ID_ENTIDAD_TO, v_ID_DEPTO_TO, rec_1.NOMBRE, rec_1.PUERTO, rec_1.NUMLINE, rec_1.NUMCOL,
                rec_1.SERIE, rec_1.CONTADOR, rec_1.ACTIVO
                --, rec_1.DOCID
                ) RETURNING ID_DOCUMENTO INTO L_ID_DOCUMENTO;


                v_documento_det_stmt_str := 'SELECT * FROM ELISEO.CONTA_DOCUMENTO_DETALLE WHERE ID_DOCUMENTO = :1';
                OPEN v_documento_det_cursor FOR EXECUTE EXECUTE EXECUTE v_documento_det_stmt_str USING rec_1.ID_DOCUMENTO;
                    LOOP
                    FETCH v_documento_det_cursor INTO d_documento_det_record;
                    EXIT WHEN NOT FOUND;/* apply on v_documento_det_cursor */

                        INSERT INTO ELISEO.CONTA_DOCUMENTO_DETALLE(
                        -- ID_DOCDETALLE , 
                        ID_DOCUMENTO, CONTENIDO , MODO , TIPO, POS_X , POS_Y )
                        VALUES (L_ID_DOCUMENTO, d_documento_det_record.CONTENIDO, d_documento_det_record.MODO, d_documento_det_record.TIPO
                        , d_documento_det_record.POS_X, d_documento_det_record.POS_Y);

                END LOOP;
                CLOSE v_documento_det_cursor;

            END LOOP;
        END IF;

--         <<salida_rapida>>
        V_ERROR := L_ERROR;
        V_MSGERROR := L_MSGERROR;
END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.scp_conta_documento_clone ( v_ID_ENTIDAD_FROM bigint, v_ID_DEPTO_FROM text, v_ID_ENTIDAD_TO bigint, v_ID_DEPTO_TO text, v_ERROR OUT bigint, v_MSGERROR OUT text ) FROM PUBLIC;

