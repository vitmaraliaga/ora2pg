-- Generated by Ora2Pg, the Oracle database Schema converter, version 25.0
-- Copyright 2000-2025 Gilles DAROLD. All rights reserved.
-- DATASOURCE: dbi:Oracle:host=10.174.11.5;sid=upeu;port=1521

SET client_encoding TO 'UTF8';

SET search_path = eliseo,public;
\set ON_ERROR_STOP ON





CREATE OR REPLACE PROCEDURE eliseo.spc_user_session_login ( p_id_persona integer, p_token text, p_token_oauth text, p_error OUT bigint, p_msjerror OUT text, p_caduca text default 'S') AS $body$
DECLARE

  l_num_documento varchar(100);
  l_entidad bigint;
  n_entidad bigint;
  l_dpto varchar(10);
  l_contar bigint:=0;
  l_activo varchar(1);
  l_existe bigint;
  l_id_almacen bigint;
  l_cant integer;

  l_error bigint:=0;
  l_msjerror varchar(300);


BEGIN

	/*
	 * --COMENTADO POR VITMAR TEMPORAL
    -- Validar que la persona esté en el APS
    SELECT COUNT(1) into l_contar FROM APS_EMPLEADO A WHERE A.ID_PERSONA=p_id_persona;
    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene registros en el APS.';
--         goto salida_rapida;
    END IF;
    
    -- Validar que la persona tenga solo un contrato activo en el APS
    SELECT COUNT(1) into l_contar FROM APS_EMPLEADO A 
        WHERE A.ID_PERSONA=p_id_persona 
            AND (A.FEC_TERMINO IS NULL OR TO_CHAR(FEC_TERMINO,'YYYYMMDD') >= TO_CHAR(SYSDATE,'YYYYMMDD'));
    l_contar :=1;--temporal solo para ver boletas        
    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene un contrato activo en el APS.';
--         goto salida_rapida;
    ELSIF l_contar > 1 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario tiene más de un contrato activo en el APS.';
--         goto salida_rapida;
    END IF;
   */
    
    -- Validar que la persona tenga una entidad asignada por defecto en el LAMB.
    SELECT COUNT(1), max(X.id_entidad) into STRICT l_contar, l_entidad FROM CONTA_ENTIDAD_USUARIO X WHERE X.ID_PERSONA = p_id_persona AND X.ESTADO = 1;

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado una entidad por defecto en el LAMB.';
--         goto salida_rapida;
    --ELSIF l_contar > 1 THEN
      --  l_error := 1;
      --  l_msjerror := 'Alto. El usuario tiene asignado más de una entidad por defecto en el LAMB.';
      --  goto salida_rapida;
    END IF;

    -- Validar que la persona tenga una departamento asignado por defecto en el LAMB.
    SELECT count(1), max(A.ID_DEPTO) into STRICT l_contar, l_dpto
        FROM LAMB_USERS_DEPTO A INNER JOIN CONTA_ENTIDAD_DEPTO B ON A.ID_ENTIDAD = B.ID_ENTIDAD AND A.ID_DEPTO = B.ID_DEPTO
    WHERE A.ID = p_id_persona
    AND A.ID_ENTIDAD = l_entidad
    AND A.ESTADO = 1
    AND B.ES_EMPRESA = '1';

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
--         goto salida_rapida;
    ELSIF l_contar > 1 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario tiene asignado más de un departamento por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
--         goto salida_rapida;
    END IF;

    -- Validar que la persona tenga un rol asignado por defecto en el LAMB.
    SELECT count(*) into STRICT l_contar FROM LAMB_USUARIO_ROL WHERE ID_PERSONA = p_id_persona AND ID_ENTIDAD = l_entidad;

    IF l_contar = 0 THEN
        l_error := 1;
        l_msjerror := 'Alto. El usuario no tiene asignado un rol por defecto para la entidad: ' || l_entidad || ' en el LAMB.';
--         goto salida_rapida;
    END IF;

    if l_error=0 then   
        
        -- Validar que todos los modulos que tiene acceso el usuario tenga temas.
        SELECT COUNT(1) INTO STRICT l_cant FROM LAMB_MODULO M 
            WHERE ID_MODULO IN (SELECT ID_MODULO 
                                FROM LAMB_ROL_MODULO N
                                WHERE EXISTS ( SELECT 1 FROM LAMB_USUARIO_ROL R WHERE R.ID_ROL = N.ID_ROL AND ID_PERSONA = p_id_persona)
                                AND EXISTS ( SELECT 1 FROM LAMB_MODULO U WHERE U.NIVEL = '1' AND U.ID_MODULO = N.ID_MODULO)  )
            AND NOT EXISTS (SELECT 1 FROM LAMB_ENTIDAD_DEPTO_CONFIG T 
                            WHERE T.ID_MODULO = M.ID_MODULO 
                            AND T.ID = p_id_persona 
                            AND T.id_entidad = l_entidad 
                            AND T.id_depto = l_dpto
                            );

        IF l_cant > 0 THEN
            CALL PKG_SETUP.SP_ASSIGN_THEMES(p_id_persona,l_entidad,l_dpto);
        END IF;

        select count(ID_USER) into STRICT l_cant
        from USERS_SESSION where token = p_token and status = '1';

        IF l_cant > 0 THEN
            update USERS_SESSION set LAST_UPDATE = current_timestamp where token = p_token and status = '1';
        ELSE
            insert into USERS_SESSION(TOKEN,ID_USER,ID_ENTIDAD,ID_DEPTO,DATE_CREATE,LAST_UPDATE,STATUS,TOKEN_OAUTH,CADUCA)
            values (p_token,p_id_persona,l_entidad,l_dpto,current_timestamp,current_timestamp,'1',p_token_oauth,p_caduca);
        END IF;

    end if;

--      <<salida_rapida>>
    p_error:=l_error;
    p_msjerror:=l_msjerror;

END;
$body$
LANGUAGE PLPGSQL
SECURITY DEFINER
;
-- REVOKE ALL ON PROCEDURE eliseo.spc_user_session_login ( p_id_persona integer, p_token text, p_token_oauth text, p_error OUT bigint, p_msjerror OUT text, p_caduca text default 'S') FROM PUBLIC;

